void sub_240C6F2F8()
{
  uint64_t *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  *v0 = MLProgram.documentation.getter();
  v0[1] = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C6F31C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.attributes.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for MLProgram(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;

  v4 = type metadata accessor for Proto_MILSpec_Program(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    v8 = *(int *)(v4 + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for MLProgram(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_MILSpec_Program(0) + 32);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for MLProgram(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(type metadata accessor for Proto_MILSpec_Program(0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *assignWithCopy for MLProgram(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Program(0) + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for MLProgram(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Program(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for MLProgram(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v6 = *(int *)(type metadata accessor for Proto_MILSpec_Program(0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t getEnumTagSinglePayload for MLProgram()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6F6D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_40_6();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for MLProgram()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6F708()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_40_6();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240C6F734()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_Program(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_240C6F79C()
{
  sub_240C6F7D8();
}

void sub_240C6F7B0()
{
  sub_240C6F7D8();
}

void sub_240C6F7C4()
{
  sub_240C6F7D8();
}

void sub_240C6F7D8()
{
  uint64_t (*v0)(_QWORD);
  uint64_t (*v1)(_QWORD);
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  char v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  v26 = v4;
  v27 = v5;
  v28 = v6;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_24_1();
  v16 = v15 - v14;
  v17 = v1(0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v21 = (char *)&v25 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v23 = (char *)&v25 - v22;
  sub_240C5E950(v12, v16, v3);
  if (__swift_getEnumTagSinglePayload(v16, 1, v17) == 1)
  {
    OUTLINED_FUNCTION_15_2(v16);
    if ((v10 & 1) != 0)
    {
      swift_arrayDestroy();
      sub_240F1CE4C();
    }
  }
  else
  {
    OUTLINED_FUNCTION_37_5(v16, (uint64_t)v23);
    v24 = *v8;
    if ((v10 & 1) != 0)
    {
      OUTLINED_FUNCTION_37_5((uint64_t)v23, *(_QWORD *)(v24 + 56) + *(_QWORD *)(v18 + 72) * v28);
    }
    else
    {
      OUTLINED_FUNCTION_37_5((uint64_t)v23, (uint64_t)v21);
      sub_240C6F970(v28, v26, v27, (uint64_t)v21, v24);
      OUTLINED_FUNCTION_315();
    }
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C6F964(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240C6F970(a1, a2, a3, a4, a5);
}

void sub_240C6F970(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  void (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;

  OUTLINED_FUNCTION_8_12(a1, a2, a3, a4, a5);
  v9 = *(_QWORD *)(v8 + 56);
  v10(0);
  OUTLINED_FUNCTION_61_4();
  OUTLINED_FUNCTION_37_5(a4, v9 + v11 * a1);
  v12 = *(_QWORD *)(a5 + 16);
  v13 = __OFADD__(v12, 1);
  v14 = v12 + 1;
  if (v13)
    __break(1u);
  else
    *(_QWORD *)(a5 + 16) = v14;
}

void sub_240C6F9DC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240C6F970(a1, a2, a3, a4, a5);
}

void sub_240C6F9E8(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240C6F970(a1, a2, a3, a4, a5);
}

unint64_t sub_240C6F9F4(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t result;
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;

  result = OUTLINED_FUNCTION_8_12(a1, a2, a3, a4, a5);
  v7 = (_OWORD *)(*(_QWORD *)(v6 + 56) + (result << 6));
  v9 = v8[1];
  *v7 = *v8;
  v7[1] = v9;
  v10 = v8[3];
  v7[2] = v8[2];
  v7[3] = v10;
  v11 = *(_QWORD *)(v6 + 16);
  v12 = __OFADD__(v11, 1);
  v13 = v11 + 1;
  if (v12)
    __break(1u);
  else
    *(_QWORD *)(v6 + 16) = v13;
  return result;
}

uint64_t sub_240C6FA30@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240C6FA44(a1, a2, &qword_25708CB30, type metadata accessor for MLProgram.Argument, a3);
}

uint64_t sub_240C6FA44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  uint64_t *v5;
  uint64_t *v8;
  unint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v8 = v5;
  swift_bridgeObjectRetain();
  v12 = sub_240C66A40(a1, a2);
  LOBYTE(a2) = v13;
  OUTLINED_FUNCTION_73_1();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v22 = *v8;
    *v8 = 0x8000000000000000;
    __swift_instantiateConcreteTypeFromMangledName(a3);
    sub_240F1CE34();
    swift_bridgeObjectRelease();
    v14 = *(_QWORD *)(v22 + 56);
    v15 = OUTLINED_FUNCTION_62_2();
    OUTLINED_FUNCTION_61_4();
    sub_240BE0B90(v14 + v16 * v12, a5, a4);
    sub_240F1CE4C();
    *v8 = v22;
    swift_bridgeObjectRelease();
    return __swift_storeEnumTagSinglePayload(a5, 0, 1, v15);
  }
  else
  {
    OUTLINED_FUNCTION_62_2();
    v18 = OUTLINED_FUNCTION_54_7();
    return __swift_storeEnumTagSinglePayload(v18, v19, v20, v21);
  }
}

uint64_t sub_240C6FB78@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240C6FA44(a1, a2, &qword_25708CBF0, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block, a3);
}

uint64_t sub_240C6FB8C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v18;
  char v19;
  _QWORD *v20;
  BOOL v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;

  v7 = *v3;
  sub_240F1CF3C();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  v8 = sub_240F1CF78();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  OUTLINED_FUNCTION_65_3();
  if ((v11 & 1) != 0)
  {
    v12 = *(_QWORD *)(v7 + 48);
    v13 = (_QWORD *)(v12 + 16 * v10);
    v14 = *v13 == a2 && v13[1] == a3;
    if (v14 || (OUTLINED_FUNCTION_33_7() & 1) != 0)
    {
LABEL_7:
      OUTLINED_FUNCTION_100_1();
      OUTLINED_FUNCTION_73_1();
      v15 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v16 = v15[1];
      *a1 = *v15;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      return 0;
    }
    v18 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v18;
      OUTLINED_FUNCTION_65_3();
      if ((v19 & 1) == 0)
        break;
      v20 = (_QWORD *)(v12 + 16 * v10);
      v21 = *v20 == a2 && v20[1] == a3;
      if (v21 || (OUTLINED_FUNCTION_33_7() & 1) != 0)
        goto LABEL_7;
    }
  }
  OUTLINED_FUNCTION_73_1();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v23 = *v3;
  *v3 = 0x8000000000000000;
  OUTLINED_FUNCTION_120_2();
  sub_240C6FFD0(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v23;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_240C6FCF8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCE0);
  v3 = sub_240F1CDE0();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_240F1CF3C();
      sub_240F1CCC0();
      result = sub_240F1CF78();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_240F1A0EC(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_240C6FFD0(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_240C6FCF8();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_240C70168();
      goto LABEL_22;
    }
    sub_240C70318();
  }
  v11 = *v4;
  sub_240F1CF3C();
  sub_240F1CCC0();
  result = sub_240F1CF78();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_240F1CEDC(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_240F1CEE8();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_240F1CEDC();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_240C70168()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCE0);
  v2 = *v0;
  v3 = sub_240F1CDD4();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)swift_bridgeObjectRetain();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_240C70318()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCE0);
  v3 = sub_240F1CDE0();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_240F1CF3C();
    swift_bridgeObjectRetain();
    sub_240F1CCC0();
    result = sub_240F1CF78();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_240C705C0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_240C705E4()
{
  OUTLINED_FUNCTION_147_0();
  return swift_deallocObject();
}

uint64_t sub_240C70604()
{
  OUTLINED_FUNCTION_147_0();
  OUTLINED_FUNCTION_84_1();
  return swift_deallocObject();
}

unint64_t OUTLINED_FUNCTION_8_12(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  *(_QWORD *)(a5 + 8 * (result >> 6) + 64) |= 1 << result;
  v5 = (_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  return result;
}

_QWORD *OUTLINED_FUNCTION_12_10()
{
  uint64_t v0;

  return sub_240BF0A90(0, *(_QWORD *)(v0 + 16) + 1, 1);
}

_QWORD *OUTLINED_FUNCTION_16_10()
{
  int64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = v1;
  return sub_240BF0A90(0, v0, 0);
}

void OUTLINED_FUNCTION_18_6(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t *a4)
{
  sub_240C6EFC4(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_32_8()
{
  return sub_240F1CC48();
}

uint64_t OUTLINED_FUNCTION_33_7()
{
  return sub_240F1CEDC();
}

void OUTLINED_FUNCTION_34_5(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_36_9()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_40_6()
{
  return type metadata accessor for Proto_MILSpec_Program(0);
}

unint64_t OUTLINED_FUNCTION_44_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C66A40(*(_QWORD *)(v1 - 168), v0);
}

void OUTLINED_FUNCTION_47_7()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 120) = 34;
  *(_QWORD *)(v0 - 112) = 0xE100000000000000;
}

uint64_t OUTLINED_FUNCTION_50_7()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_54_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_56_6()
{
  sub_240C02C78();
}

void OUTLINED_FUNCTION_57_6(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t *a4)
{
  uint64_t v4;

  sub_240C6EFC4(v4, a2, a3, a4);
}

unint64_t OUTLINED_FUNCTION_58_4()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C66A40(v0, v1);
}

uint64_t OUTLINED_FUNCTION_62_2()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_63_2()
{
  return type metadata accessor for MLProgram.Function();
}

uint64_t _s8ManifestVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8ManifestVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s8ManifestVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy40_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8ManifestVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ManifestVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 40))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8ManifestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s8ManifestVMa()
{
  return &_s8ManifestVN;
}

uint64_t _s8ManifestV11PackageItemVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s8ManifestV11PackageItemVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s8ManifestV11PackageItemVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_QWORD *_s8ManifestV11PackageItemVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  v7 = a2[7];
  a1[6] = a2[6];
  a1[7] = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8ManifestV11PackageItemVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8ManifestV11PackageItemVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *_s8ManifestV11PackageItemVMa()
{
  return &_s8ManifestV11PackageItemVN;
}

uint64_t sub_240C70BCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v21[8];

  v11 = sub_240F1C8F4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v15 = v14 - v13;
  sub_240F1C8E8();
  v16 = sub_240F1C8DC();
  v18 = v17;
  (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v15, v11);
  v21[0] = a3;
  v21[1] = a4;
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_16_11();
  swift_bridgeObjectRetain();
  sub_240F1CCE4();
  sub_240F1CCE4();
  v21[2] = a1;
  v21[3] = a2;
  v21[4] = a3;
  v21[5] = a4;
  v21[6] = a5;
  v21[7] = a6;
  sub_240DAE620(v21, v16, v18);
  return swift_bridgeObjectRelease();
}

uint64_t sub_240C70CE8(uint64_t a1, uint64_t a2)
{
  char v6;

  if (a1 == 0xD000000000000011 && a2 == 0x8000000240F52610 || (sub_240F1CEDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000240F52630 || (sub_240F1CEDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F666E496D657469 && a2 == 0xEF73656972746E45)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    v6 = sub_240F1CEDC();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 2;
    else
      return 3;
  }
}

uint64_t sub_240C70E54()
{
  return 3;
}

uint64_t sub_240C70E5C(char a1)
{
  uint64_t result;

  result = 0xD000000000000011;
  if (a1)
  {
    if (a1 == 1)
      return 0xD000000000000013;
    else
      return 0x6F666E496D657469;
  }
  return result;
}

void sub_240C70EC8(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CD20);
  OUTLINED_FUNCTION_17_14();
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240C719D0();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_10_11();
  if (!v1)
  {
    OUTLINED_FUNCTION_10_11();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CD08);
    sub_240C71A48(&qword_25708CD28, (uint64_t (*)(void))sub_240C71ABC, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_240F1CEB8();
  }
  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_7_11();
}

void sub_240C70FF8(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCF8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240C719D0();
  sub_240F1CFB4();
  if (v2)
  {
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_12_11();
    v8 = v7;
    OUTLINED_FUNCTION_6_10(v6);
    v9 = OUTLINED_FUNCTION_12_11();
    v11 = v10;
    v12 = v9;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CD08);
    sub_240C71A48(&qword_25708CD10, (uint64_t (*)(void))sub_240C71A0C, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    OUTLINED_FUNCTION_16_11();
    sub_240F1CEA0();
    OUTLINED_FUNCTION_2_14();
    swift_bridgeObjectRetain();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_2();
    *a2 = v13;
    a2[1] = v8;
    a2[2] = v12;
    a2[3] = v11;
    a2[4] = v14;
  }
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_240C711D8()
{
  return sub_240F1CF48();
}

uint64_t sub_240C711FC(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  BOOL v6;
  BOOL v7;
  char v9;

  v2 = a1 == 1752457584 && a2 == 0xE400000000000000;
  if (v2 || (sub_240F1CEDC() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else
  {
    v6 = a1 == 1701667182 && a2 == 0xE400000000000000;
    if (v6 || (sub_240F1CEDC() & 1) != 0)
    {
      swift_bridgeObjectRelease();
      return 1;
    }
    else
    {
      v7 = a1 == 0x726F68747561 && a2 == 0xE600000000000000;
      if (v7 || (sub_240F1CEDC() & 1) != 0)
      {
        swift_bridgeObjectRelease();
        return 2;
      }
      else if (a1 == 0x7470697263736564 && a2 == 0xEB000000006E6F69)
      {
        swift_bridgeObjectRelease();
        return 3;
      }
      else
      {
        v9 = sub_240F1CEDC();
        swift_bridgeObjectRelease();
        if ((v9 & 1) != 0)
          return 3;
        else
          return 4;
      }
    }
  }
}

uint64_t sub_240C713A0()
{
  return 4;
}

void sub_240C713A8()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240C713E4(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_240C71410 + 4 * byte_240F223A0[a1]))(1752457584, 0xE400000000000000);
}

uint64_t sub_240C71410()
{
  return 1701667182;
}

uint64_t sub_240C7141C()
{
  return 0x726F68747561;
}

uint64_t sub_240C71430()
{
  return 0x7470697263736564;
}

void sub_240C71450(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CD48);
  OUTLINED_FUNCTION_17_14();
  MEMORY[0x24BDAC7A8](v3);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240C71AF8();
  OUTLINED_FUNCTION_8_13();
  OUTLINED_FUNCTION_0_11();
  if (!v1)
  {
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_0_11();
    OUTLINED_FUNCTION_0_11();
  }
  OUTLINED_FUNCTION_13_9();
  OUTLINED_FUNCTION_7_11();
}

void sub_240C7154C(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CD38);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240C71AF8();
  sub_240F1CFB4();
  if (v2)
  {
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    v10 = OUTLINED_FUNCTION_3_16();
    v12 = v11;
    OUTLINED_FUNCTION_6_10(v10);
    v13 = OUTLINED_FUNCTION_3_16();
    v25 = v14;
    v23 = v13;
    swift_bridgeObjectRetain();
    v21 = sub_240F1CE94();
    v22 = v15;
    swift_bridgeObjectRetain();
    v16 = OUTLINED_FUNCTION_3_16();
    v18 = v17;
    v19 = *(void (**)(uint64_t, uint64_t))(v6 + 8);
    v20 = v16;
    v19(v9, v5);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_16_11();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_4();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_4();
    *a2 = v24;
    a2[1] = v12;
    a2[2] = v23;
    a2[3] = v25;
    a2[4] = v21;
    a2[5] = v22;
    a2[6] = v20;
    a2[7] = v18;
  }
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_240C71770()
{
  char *v0;

  return sub_240C70E5C(*v0);
}

uint64_t sub_240C71778@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240C70CE8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240C7179C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_240C70E54();
  *a1 = result;
  return result;
}

uint64_t sub_240C717C0()
{
  sub_240C719D0();
  return sub_240F1CFCC();
}

uint64_t sub_240C717E8()
{
  sub_240C719D0();
  return sub_240F1CFD8();
}

double sub_240C71810@<D0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  _OWORD v6[2];
  uint64_t v7;

  sub_240C70FF8(a1, v6);
  if (!v2)
  {
    result = *(double *)v6;
    v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(_QWORD *)(a2 + 32) = v7;
  }
  return result;
}

void sub_240C71854(_QWORD *a1)
{
  sub_240C70EC8(a1);
}

void sub_240C71868()
{
  sub_240C713A8();
}

uint64_t sub_240C71880()
{
  return sub_240C711D8();
}

void sub_240C71888()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240C718C0()
{
  unsigned __int8 *v0;

  return sub_240C713E4(*v0);
}

uint64_t sub_240C718C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_240C711FC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240C718EC()
{
  return sub_240C2A1F8();
}

uint64_t sub_240C71908@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_240C713A0();
  *a1 = result;
  return result;
}

uint64_t sub_240C7192C()
{
  sub_240C71AF8();
  return sub_240F1CFCC();
}

uint64_t sub_240C71954()
{
  sub_240C71AF8();
  return sub_240F1CFD8();
}

double sub_240C7197C@<D0>(_QWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v2;
  double result;
  __int128 v5;
  __int128 v6;
  _OWORD v7[2];
  __int128 v8;
  __int128 v9;

  sub_240C7154C(a1, v7);
  if (!v2)
  {
    v5 = v7[1];
    *a2 = v7[0];
    a2[1] = v5;
    result = *(double *)&v8;
    v6 = v9;
    a2[2] = v8;
    a2[3] = v6;
  }
  return result;
}

void sub_240C719BC(_QWORD *a1)
{
  sub_240C71450(a1);
}

unint64_t sub_240C719D0()
{
  unint64_t result;

  result = qword_25708CD00;
  if (!qword_25708CD00)
  {
    result = MEMORY[0x24268C2AC](&unk_240F2263C, &_s8ManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD00);
  }
  return result;
}

unint64_t sub_240C71A0C()
{
  unint64_t result;

  result = qword_25708CD18;
  if (!qword_25708CD18)
  {
    result = MEMORY[0x24268C2AC](&unk_240F223F8, &_s8ManifestV11PackageItemVN);
    atomic_store(result, (unint64_t *)&qword_25708CD18);
  }
  return result;
}

uint64_t sub_240C71A48(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  _QWORD v10[2];

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708CD08);
    v10[0] = a3;
    v10[1] = a2();
    result = MEMORY[0x24268C2AC](a4, v9, v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240C71ABC()
{
  unint64_t result;

  result = qword_25708CD30;
  if (!qword_25708CD30)
  {
    result = MEMORY[0x24268C2AC](&unk_240F223D0, &_s8ManifestV11PackageItemVN);
    atomic_store(result, (unint64_t *)&qword_25708CD30);
  }
  return result;
}

unint64_t sub_240C71AF8()
{
  unint64_t result;

  result = qword_25708CD40;
  if (!qword_25708CD40)
  {
    result = MEMORY[0x24268C2AC](&unk_240F225EC, &_s8ManifestV11PackageItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD40);
  }
  return result;
}

uint64_t _s8ManifestV11PackageItemV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s8ManifestV11PackageItemV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_240C71C08 + 4 * byte_240F223A9[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_240C71C3C + 4 * byte_240F223A4[v4]))();
}

uint64_t sub_240C71C3C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C71C44(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C71C4CLL);
  return result;
}

uint64_t sub_240C71C58(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C71C60);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_240C71C64(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C71C6C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ManifestV11PackageItemV10CodingKeysOMa()
{
  return &_s8ManifestV11PackageItemV10CodingKeysON;
}

uint64_t _s8ManifestV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240C71CD4 + 4 * byte_240F223B3[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240C71D08 + 4 * byte_240F223AE[v4]))();
}

uint64_t sub_240C71D08(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C71D10(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C71D18);
  return result;
}

uint64_t sub_240C71D24(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C71D2CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240C71D30(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C71D38(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *_s8ManifestV10CodingKeysOMa()
{
  return &_s8ManifestV10CodingKeysON;
}

unint64_t sub_240C71D58()
{
  unint64_t result;

  result = qword_25708CD50;
  if (!qword_25708CD50)
  {
    result = MEMORY[0x24268C2AC](&unk_240F2250C, &_s8ManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD50);
  }
  return result;
}

unint64_t sub_240C71D98()
{
  unint64_t result;

  result = qword_25708CD58;
  if (!qword_25708CD58)
  {
    result = MEMORY[0x24268C2AC](&unk_240F225C4, &_s8ManifestV11PackageItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD58);
  }
  return result;
}

unint64_t sub_240C71DD8()
{
  unint64_t result;

  result = qword_25708CD60;
  if (!qword_25708CD60)
  {
    result = MEMORY[0x24268C2AC](&unk_240F22534, &_s8ManifestV11PackageItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD60);
  }
  return result;
}

unint64_t sub_240C71E18()
{
  unint64_t result;

  result = qword_25708CD68;
  if (!qword_25708CD68)
  {
    result = MEMORY[0x24268C2AC](&unk_240F2255C, &_s8ManifestV11PackageItemV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD68);
  }
  return result;
}

unint64_t sub_240C71E58()
{
  unint64_t result;

  result = qword_25708CD70;
  if (!qword_25708CD70)
  {
    result = MEMORY[0x24268C2AC](&unk_240F2247C, &_s8ManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD70);
  }
  return result;
}

unint64_t sub_240C71E98()
{
  unint64_t result;

  result = qword_25708CD78;
  if (!qword_25708CD78)
  {
    result = MEMORY[0x24268C2AC](&unk_240F224A4, &_s8ManifestV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708CD78);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_11()
{
  return sub_240F1CEAC();
}

uint64_t OUTLINED_FUNCTION_1_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_2_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_3_16()
{
  return sub_240F1CE94();
}

uint64_t OUTLINED_FUNCTION_6_10(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  *(_BYTE *)(v1 - 66) = 1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_8_13()
{
  return sub_240F1CFC0();
}

uint64_t OUTLINED_FUNCTION_10_11()
{
  return sub_240F1CEAC();
}

uint64_t OUTLINED_FUNCTION_12_11()
{
  return sub_240F1CE94();
}

uint64_t OUTLINED_FUNCTION_13_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_11()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_18_7()
{
  return swift_bridgeObjectRelease();
}

void NearestNeighborsConfiguration.parameters.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_60();
  v4 = type metadata accessor for Proto_NearestNeighborsIndex(v3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_54_8(v0 + *(int *)(v8 + 32), v1);
  OUTLINED_FUNCTION_7_1(v1, 1, v4);
  if (v9)
  {
    *(_DWORD *)v7 = 0;
    *((_QWORD *)v7 + 1) = MEMORY[0x24BEE4AF8];
    v10 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    OUTLINED_FUNCTION_4_6(v10);
    v11 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
    OUTLINED_FUNCTION_4_6(v11);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240BE0B68(v1, &qword_25708BE78);
  }
  else
  {
    sub_240BE0B90(v1, (uint64_t)v7, type metadata accessor for Proto_NearestNeighborsIndex);
  }
  OUTLINED_FUNCTION_66_4(v12, v13, type metadata accessor for Proto_NearestNeighborsIndex);
  OUTLINED_FUNCTION_42();
}

void NearestNeighborsConfiguration.parameters.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_50_8(a1, v2);
  v6 = v1 + *(int *)(OUTLINED_FUNCTION_4_12() + 32);
  sub_240BE0B68(v6, &qword_25708BE78);
  OUTLINED_FUNCTION_34_6();
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v4);
  sub_240BE10B8(a1, type metadata accessor for NearestNeighborsConfiguration.Parameters);
  OUTLINED_FUNCTION_42();
}

void (*NearestNeighborsConfiguration.parameters.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  _QWORD *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_170();
  v5 = OUTLINED_FUNCTION_17_5(v4);
  v3[1] = v5;
  v6 = OUTLINED_FUNCTION_37_6();
  v3[2] = v6;
  v3[3] = OUTLINED_FUNCTION_152();
  v7 = OUTLINED_FUNCTION_152();
  v3[4] = v7;
  type metadata accessor for NearestNeighborsConfiguration.Parameters(0);
  v3[5] = OUTLINED_FUNCTION_152();
  v8 = OUTLINED_FUNCTION_152();
  v3[6] = v8;
  v9 = *(int *)(OUTLINED_FUNCTION_4_12() + 32);
  *((_DWORD *)v3 + 14) = v9;
  OUTLINED_FUNCTION_54_8(v1 + v9, (uint64_t)v5);
  OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v11)
  {
    *(_DWORD *)v7 = 0;
    v7[1] = MEMORY[0x24BEE4AF8];
    v12 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    OUTLINED_FUNCTION_4_6(v12);
    v13 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
    OUTLINED_FUNCTION_4_6(v13);
    v14 = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_62_3(v14, &qword_25708BE78);
  }
  else
  {
    OUTLINED_FUNCTION_55_3((uint64_t)v5, v10, type metadata accessor for Proto_NearestNeighborsIndex);
  }
  sub_240BE0B90((uint64_t)v7, (uint64_t)v8, type metadata accessor for Proto_NearestNeighborsIndex);
  return sub_240C722C4;
}

void sub_240C722C4()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  char v6;

  OUTLINED_FUNCTION_22();
  v1 = *(void **)v0;
  v2 = *(void **)(*(_QWORD *)v0 + 40);
  v3 = *(void **)(*(_QWORD *)v0 + 48);
  v4 = *(void **)(*(_QWORD *)v0 + 24);
  v5 = **(_QWORD **)v0 + *(int *)(*(_QWORD *)v0 + 56);
  if ((v6 & 1) != 0)
  {
    sub_240BE0BF4(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v2, type metadata accessor for NearestNeighborsConfiguration.Parameters);
    OUTLINED_FUNCTION_52((uint64_t)v2, (uint64_t)v4);
    sub_240BE0B68(v5, &qword_25708BE78);
    sub_240BE0B90((uint64_t)v4, v5, type metadata accessor for Proto_NearestNeighborsIndex);
    OUTLINED_FUNCTION_32();
    sub_240BE10B8((uint64_t)v2, type metadata accessor for NearestNeighborsConfiguration.Parameters);
  }
  else
  {
    sub_240BE0BF4(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v4, type metadata accessor for Proto_NearestNeighborsIndex);
    sub_240BE0B68(v5, &qword_25708BE78);
    sub_240BE0B90((uint64_t)v4, v5, type metadata accessor for Proto_NearestNeighborsIndex);
    OUTLINED_FUNCTION_32();
  }
  sub_240BE10B8((uint64_t)v3, type metadata accessor for NearestNeighborsConfiguration.Parameters);
  free(v3);
  free(v2);
  OUTLINED_FUNCTION_290();
  free(v4);
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_75(v1);
}

uint64_t NearestNeighborsConfiguration.neighborCount.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE88);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  v3 = type metadata accessor for Proto_Int64Parameter(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (uint64_t *)((char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = OUTLINED_FUNCTION_4_12();
  sub_240C5E950(v1 + *(int *)(v7 + 36), v0, &qword_25708BE88);
  OUTLINED_FUNCTION_7_1(v0, 1, v3);
  if (v8)
  {
    *v6 = 0;
    v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    OUTLINED_FUNCTION_4_6(v9);
    v10 = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_62_3(v10, &qword_25708BE88);
  }
  else
  {
    v11 = OUTLINED_FUNCTION_63_3();
    sub_240BE0B90(v11, v12, v13);
  }
  v14 = *v6;
  sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_Int64Parameter);
  return v14;
}

void NearestNeighborsConfiguration.neighborCount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_90();
  v6 = type metadata accessor for Proto_Int64Parameter(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = v1 + *(int *)(OUTLINED_FUNCTION_4_12() + 36);
  OUTLINED_FUNCTION_35_6();
  v11 = OUTLINED_FUNCTION_7_1(v2, 1, v6);
  if (v13)
  {
    *v9 = 0;
    v14 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    OUTLINED_FUNCTION_4_6(v14);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240BE0B68(v2, &qword_25708BE88);
  }
  else
  {
    OUTLINED_FUNCTION_53_7(v11, v12, type metadata accessor for Proto_Int64Parameter);
  }
  *v9 = a1;
  sub_240BE0B68(v10, &qword_25708BE88);
  OUTLINED_FUNCTION_55_3((uint64_t)v9, v15, type metadata accessor for Proto_Int64Parameter);
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void (*NearestNeighborsConfiguration.neighborCount.modify(uint64_t *a1))(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = NearestNeighborsConfiguration.neighborCount.getter();
  return sub_240C72620;
}

void sub_240C72620(uint64_t *a1)
{
  NearestNeighborsConfiguration.neighborCount.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void NearestNeighborsConfiguration.classLabels.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;

  v3 = OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - v6;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_35_6();
  OUTLINED_FUNCTION_7_1(v1, 1, v3);
  if (v9)
  {
    v13 = 0;
    v12 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90(v1, (uint64_t)v7, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    v10 = OUTLINED_FUNCTION_383();
    sub_240BE0BF4(v10, v11, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    sub_240C72898();
    v12 = v14;
    v13 = v15;
    OUTLINED_FUNCTION_56_7((uint64_t)v7);
  }
  *(_QWORD *)a1 = v12;
  *(_BYTE *)(a1 + 8) = v13;
  OUTLINED_FUNCTION_13();
}

void sub_240C72744(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  NearestNeighborsConfiguration.classLabels.getter((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

void sub_240C72784(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = v1;
  swift_bridgeObjectRetain();
  NearestNeighborsConfiguration.classLabels.setter(&v2);
}

void NearestNeighborsConfiguration.classLabels.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE58);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  v5 = *a1;
  if ((a1[1] & 1) != 0)
  {
    OUTLINED_FUNCTION_48_4();
    OUTLINED_FUNCTION_55_0();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    *v1 = v5;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_55_0();
    sub_240C5E7DC(v7);
  }
  v6 = OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_63_3();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_8();
  __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v6);
  sub_240C5E97C((uint64_t)v1, v2, &qword_25708BE58);
  OUTLINED_FUNCTION_156();
}

void sub_240C72898()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (uint64_t *)((char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_59();
  sub_240BE0BF4(v3, v0, v12);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    OUTLINED_FUNCTION_55_3(v0, v13, type metadata accessor for Proto_Int64Vector);
    v18 = *(_QWORD *)v1;
    v19 = *(_QWORD *)(*(_QWORD *)v1 + 16);
    if (v19)
    {
      v24 = v5;
      v25 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_240BF080C();
      v15 = v25;
      v20 = (uint64_t *)(v18 + 32);
      v21 = *(_QWORD *)(v25 + 16);
      do
      {
        v23 = *v20++;
        v22 = v23;
        v25 = v15;
        if (v21 >= *(_QWORD *)(v15 + 24) >> 1)
        {
          sub_240BF080C();
          v15 = v25;
        }
        *(_QWORD *)(v15 + 16) = v21 + 1;
        *(_QWORD *)(v15 + 8 * v21++ + 32) = v22;
        --v19;
      }
      while (v19);
      v5 = v24;
    }
    else
    {
      swift_bridgeObjectRetain();
      v15 = MEMORY[0x24BEE4AF8];
    }
    sub_240BE10B8(v3, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    swift_bridgeObjectRelease();
    v17 = type metadata accessor for Proto_Int64Vector;
    v16 = v1;
  }
  else
  {
    sub_240BE10B8(v3, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    sub_240BE0B90(v0, (uint64_t)v8, type metadata accessor for Proto_StringVector);
    v15 = *v8;
    OUTLINED_FUNCTION_329();
    v16 = (uint64_t)v8;
    v17 = type metadata accessor for Proto_StringVector;
  }
  sub_240BE10B8(v16, v17);
  *(_QWORD *)v5 = v15;
  *(_BYTE *)(v5 + 8) = EnumCaseMultiPayload != 1;
  OUTLINED_FUNCTION_1();
}

void (*NearestNeighborsConfiguration.classLabels.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  void *v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v15;
  char v16;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[2] = v2;
  v5 = OUTLINED_FUNCTION_19_8();
  v4[3] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v4[4] = malloc(v6);
  v7 = malloc(v6);
  v4[5] = v7;
  OUTLINED_FUNCTION_216();
  v4[6] = OUTLINED_FUNCTION_51_6();
  v4[7] = OUTLINED_FUNCTION_51_6();
  v8 = OUTLINED_FUNCTION_51_6();
  v4[8] = v8;
  sub_240C5E950(v2, (uint64_t)v8, &qword_25708BE58);
  OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v5);
  if (v9)
  {
    v13 = 0;
    v12 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_34_6();
    v10 = OUTLINED_FUNCTION_383();
    OUTLINED_FUNCTION_50_8(v10, v11);
    sub_240C72898();
    v12 = v15;
    v13 = v16;
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
  }
  *v4 = v12;
  *((_BYTE *)v4 + 8) = v13;
  return sub_240C72BB8;
}

void sub_240C72BB8()
{
  void *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22();
  v5 = *v4;
  v6 = **v4;
  if ((v7 & 1) != 0)
  {
    if (((*v4)[1] & 1) != 0)
    {
      v8 = v5[6];
      v0 = (void *)(v8 + *(int *)(OUTLINED_FUNCTION_48_4() + 20));
      OUTLINED_FUNCTION_59_2();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      OUTLINED_FUNCTION_59_2();
      sub_240C5E7DC(v6);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_31_5((uint64_t)v0);
    sub_240C5E97C((uint64_t)v0, v3, &qword_25708BE58);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = v5[7];
    if (((*v4)[1] & 1) != 0)
    {
      v0 = (void *)(v9 + *(int *)(OUTLINED_FUNCTION_48_4() + 20));
      OUTLINED_FUNCTION_329();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      v10 = OUTLINED_FUNCTION_329();
      sub_240C5E7DC(v10);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_31_5(v9);
    sub_240C5E97C(v9, v3, &qword_25708BE58);
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  free(v0);
  free(v1);
  free(v2);
  OUTLINED_FUNCTION_75(v5);
}

void NearestNeighborsConfiguration.defaultClassLabel.getter(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unsigned __int8 v5;
  char v6;
  uint64_t v7;
  unint64_t v8;
  char v9;

  v2 = OUTLINED_FUNCTION_4_12();
  v3 = OUTLINED_FUNCTION_67_3(*(int *)(v2 + 20));
  if (v6)
  {
    v7 = 0;
    v8 = 0xE000000000000000;
    goto LABEL_5;
  }
  v7 = v3;
  v8 = v4;
  if ((v5 & 1) == 0)
  {
LABEL_5:
    sub_240C73AF0(v3, v4, v5);
    v9 = 0;
    v3 = v7;
    goto LABEL_6;
  }
  v8 = 0;
  v9 = 1;
LABEL_6:
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v8;
  *(_BYTE *)(a1 + 16) = v9;
  OUTLINED_FUNCTION_156();
}

double sub_240C72D44@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  NearestNeighborsConfiguration.defaultClassLabel.getter((uint64_t)&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

void sub_240C72D84(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3[2];
  char v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v3[0] = *(_QWORD *)a1;
  v3[1] = v1;
  v4 = v2;
  sub_240BF5654(v3[0], v1, v2);
  NearestNeighborsConfiguration.defaultClassLabel.setter(v3);
}

void NearestNeighborsConfiguration.defaultClassLabel.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *((_BYTE *)a1 + 16);
  if (v3)
    v4 = 0;
  else
    v4 = a1[1];
  v5 = v1 + *(int *)(OUTLINED_FUNCTION_4_12() + 20);
  sub_240C73B08(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v4;
  *(_BYTE *)(v5 + 16) = v3;
  OUTLINED_FUNCTION_156();
}

void NearestNeighborsConfiguration.defaultClassLabel.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 v6;
  char v7;
  uint64_t v8;
  unint64_t v9;
  char v10;

  *(_QWORD *)(a1 + 24) = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_4_12() + 20);
  *(_DWORD *)(a1 + 20) = v3;
  v4 = OUTLINED_FUNCTION_67_3(v3);
  if (v7)
  {
    v8 = 0;
    v9 = 0xE000000000000000;
    goto LABEL_5;
  }
  v8 = v4;
  v9 = v5;
  if ((v6 & 1) == 0)
  {
LABEL_5:
    sub_240C73AF0(v4, v5, v6);
    v10 = 0;
    v4 = v8;
    goto LABEL_6;
  }
  v9 = 0;
  v10 = 1;
LABEL_6:
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 8) = v9;
  *(_BYTE *)(a1 + 16) = v10;
  OUTLINED_FUNCTION_156();
}

void sub_240C72E84(uint64_t a1, char a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = *(_BYTE *)(a1 + 16);
    v5 = *(_QWORD *)(a1 + 8);
    if ((v4 & 1) != 0)
    {
      v6 = 0;
    }
    else
    {
      OUTLINED_FUNCTION_55_0();
      v6 = v5;
    }
    v10 = *(_QWORD *)(a1 + 24) + *(int *)(a1 + 20);
    sub_240C73B08(*(_QWORD *)v10, *(_QWORD *)(v10 + 8), *(_BYTE *)(v10 + 16));
    *(_QWORD *)v10 = v3;
    *(_QWORD *)(v10 + 8) = v6;
    *(_BYTE *)(v10 + 16) = v4;
    sub_240BF6B24(v3, v5, v4);
  }
  else
  {
    v7 = *(_QWORD *)(a1 + 24) + *(int *)(a1 + 20);
    v8 = *(_BYTE *)(a1 + 16);
    if (v8)
      v9 = 0;
    else
      v9 = *(_QWORD *)(a1 + 8);
    sub_240C73B08(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), *(_BYTE *)(v7 + 16));
    *(_QWORD *)v7 = v3;
    *(_QWORD *)(v7 + 8) = v9;
    *(_BYTE *)(v7 + 16) = v8;
    OUTLINED_FUNCTION_42();
  }
}

void NearestNeighborsConfiguration.weightingScheme.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_90();
  v4 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(v3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_4_12();
  OUTLINED_FUNCTION_54_8(v0 + *(int *)(v6 + 24), v1);
  v7 = OUTLINED_FUNCTION_7_1(v1, 1, v4);
  if (v9)
  {
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    swift_storeEnumTagMultiPayload();
    sub_240BE0B68(v1, &qword_25708BE60);
  }
  else
  {
    OUTLINED_FUNCTION_53_7(v7, v8, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme);
  }
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 1)
    v12 = type metadata accessor for Proto_InverseDistanceWeighting;
  else
    v12 = type metadata accessor for Proto_UniformWeighting;
  OUTLINED_FUNCTION_66_4(EnumCaseMultiPayload, v11, v12);
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_29_7();
  OUTLINED_FUNCTION_42();
}

void sub_240C7303C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(_QWORD), void (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  a5(0);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v12 - v10;
  sub_240BE0BF4(a1, (uint64_t)&v12 - v10, (uint64_t (*)(_QWORD))a5);
  a6(v11);
  OUTLINED_FUNCTION_42();
}

void NearestNeighborsConfiguration.weightingScheme.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  sub_240C7313C();
  sub_240BE10B8(a1, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
  v6 = OUTLINED_FUNCTION_23_6();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
  v7 = OUTLINED_FUNCTION_4_12();
  sub_240C5E97C(v2, v3 + *(int *)(v7 + 24), &qword_25708BE60);
  OUTLINED_FUNCTION_156();
}

void sub_240C7313C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_50_8(v0, v1);
  swift_getEnumCaseMultiPayload();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_29_7();
  sub_240BE10B8(v1, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
  OUTLINED_FUNCTION_42();
}

void NearestNeighborsConfiguration.weightingScheme.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  size_t v4;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
  a1[1] = OUTLINED_FUNCTION_17_5(v3);
  v4 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_26_4() - 8) + 64);
  a1[2] = malloc(v4);
  a1[3] = malloc(v4);
  NearestNeighborsConfiguration.weightingScheme.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240C73230(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = a1[2];
  v3 = a1[3];
  v5 = *a1;
  v4 = (void *)a1[1];
  if ((a2 & 1) != 0)
  {
    sub_240BE0BF4(a1[3], v2, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
    sub_240C7313C();
    OUTLINED_FUNCTION_56_7(v2);
    v6 = OUTLINED_FUNCTION_23_6();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v6);
    v7 = OUTLINED_FUNCTION_4_12();
    sub_240C5E97C((uint64_t)v4, v5 + *(int *)(v7 + 24), &qword_25708BE60);
    OUTLINED_FUNCTION_56_7(v3);
  }
  else
  {
    sub_240C7313C();
    sub_240BE10B8(v3, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
    v8 = OUTLINED_FUNCTION_23_6();
    __swift_storeEnumTagSinglePayload((uint64_t)v4, 0, 1, v8);
    v9 = OUTLINED_FUNCTION_4_12();
    sub_240C5E97C((uint64_t)v4, v5 + *(int *)(v9 + 24), &qword_25708BE60);
  }
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_288();
  free(v4);
}

uint64_t NearestNeighborsConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = OUTLINED_FUNCTION_19_8();
  OUTLINED_FUNCTION_18_0(a1, v3, v4, v2);
  v5 = (int *)OUTLINED_FUNCTION_4_12();
  v6 = a1 + v5[5];
  *(_QWORD *)v6 = 0;
  *(_QWORD *)(v6 + 8) = 0;
  *(_BYTE *)(v6 + 16) = -1;
  v7 = a1 + v5[6];
  v8 = OUTLINED_FUNCTION_23_6();
  OUTLINED_FUNCTION_18_0(v7, v9, v10, v8);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v11 = a1 + v5[8];
  v12 = OUTLINED_FUNCTION_37_6();
  OUTLINED_FUNCTION_18_0(v11, v13, v14, v12);
  v15 = a1 + v5[9];
  v16 = type metadata accessor for Proto_Int64Parameter(0);
  return __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
}

void NearestNeighborsConfiguration.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(_QWORD);
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v25 = OUTLINED_FUNCTION_15_6();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  v28 = OUTLINED_FUNCTION_60();
  type metadata accessor for NearestNeighborsConfiguration(v28);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  sub_240BE0BF4(v20, (uint64_t)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0), v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = xmmword_240F1D380;
  *(_QWORD *)(v32 + 32) = 0x6574656D61726170;
  *(_QWORD *)(v32 + 40) = 0xEA00000000007372;
  *(_QWORD *)(v32 + 72) = type metadata accessor for NearestNeighborsConfiguration.Parameters(0);
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v32 + 48));
  NearestNeighborsConfiguration.parameters.getter();
  strcpy((char *)(v32 + 80), "neighborCount");
  *(_WORD *)(v32 + 94) = -4864;
  v33 = NearestNeighborsConfiguration.neighborCount.getter();
  v34 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v32 + 96) = v33;
  *(_QWORD *)(v32 + 120) = v34;
  *(_QWORD *)(v32 + 128) = 0x62614C7373616C63;
  *(_QWORD *)(v32 + 136) = 0xEB00000000736C65;
  *(_QWORD *)(v32 + 168) = &type metadata for NearestNeighborsConfiguration.ClassLabels;
  NearestNeighborsConfiguration.classLabels.getter(v32 + 144);
  *(_QWORD *)(v32 + 176) = 0xD000000000000011;
  *(_QWORD *)(v32 + 184) = 0x8000000240F52650;
  *(_QWORD *)(v32 + 216) = &type metadata for NearestNeighborsConfiguration.DefaultClassLabel;
  NearestNeighborsConfiguration.defaultClassLabel.getter(v32 + 192);
  *(_QWORD *)(v32 + 224) = 0x6E69746867696577;
  *(_QWORD *)(v32 + 232) = 0xEF656D6568635367;
  *(_QWORD *)(v32 + 264) = OUTLINED_FUNCTION_26_4();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v32 + 240));
  NearestNeighborsConfiguration.weightingScheme.getter();
  v35 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v22, v36, v37, v35);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v21, *MEMORY[0x24BEE43C0], v25);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t NearestNeighborsConfiguration.ClassLabels.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void static NearestNeighborsConfiguration.ClassLabels.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      sub_240BEAC24(v4, v5);
  }
  else if ((v6 & 1) == 0)
  {
    sub_240BEACE0(v4, v5);
  }
}

uint64_t static NearestNeighborsConfiguration.DefaultClassLabel.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;

  v2 = *(_QWORD *)a1;
  v3 = *(_QWORD *)(a1 + 8);
  v4 = *(_BYTE *)(a1 + 16);
  v5 = *(_QWORD *)a2;
  v6 = *(_QWORD *)(a2 + 8);
  v7 = *(_BYTE *)(a2 + 16);
  if ((v4 & 1) != 0)
  {
    if (*(_BYTE *)(a2 + 16))
    {
      sub_240BF6B24(*(_QWORD *)a1, v3, 1);
      sub_240BF6B24(v5, v6, 1);
      v8 = v2 == v5;
      return v8 & 1;
    }
LABEL_6:
    sub_240BF5654(v5, v6, v7);
    sub_240BF6B24(v2, v3, v4);
    sub_240BF6B24(v5, v6, v7);
    v8 = 0;
    return v8 & 1;
  }
  if ((*(_BYTE *)(a2 + 16) & 1) != 0)
  {
    swift_bridgeObjectRetain();
    goto LABEL_6;
  }
  if (v2 == v5 && v3 == v6)
    v8 = 1;
  else
    v8 = sub_240F1CEDC();
  sub_240BF5654(v5, v6, 0);
  sub_240BF5654(v2, v3, 0);
  sub_240BF6B24(v2, v3, 0);
  sub_240BF6B24(v5, v6, 0);
  return v8 & 1;
}

uint64_t static NearestNeighborsConfiguration.WeightingScheme.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(_QWORD);
  char v24;
  char v25;
  uint64_t v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t (*v29)(uint64_t);
  uint64_t (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char v33;
  _BYTE v35[80];
  uint64_t v36;
  uint64_t v37;

  OUTLINED_FUNCTION_22();
  v36 = v2;
  v37 = v3;
  v5 = v4;
  v7 = v6;
  type metadata accessor for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_59();
  type metadata accessor for NearestNeighborsConfiguration.UniformWeightingConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v35[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_26_4();
  OUTLINED_FUNCTION_0();
  v13 = MEMORY[0x24BDAC7A8](v12);
  v15 = &v35[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v35[-v16];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CD80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_18();
  v20 = v0 + *(int *)(v19 + 48);
  OUTLINED_FUNCTION_52(v7, v0);
  OUTLINED_FUNCTION_52(v5, v20);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v21 = OUTLINED_FUNCTION_63_3();
    sub_240BE0BF4(v21, v22, v23);
    if (OUTLINED_FUNCTION_50_6() == 1)
    {
      sub_240BE0B90(v20, v1, type metadata accessor for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration);
      _s20MLModelSpecification29NearestNeighborsConfigurationV016UniformWeightingE0V2eeoiySbAE_AEtFZ_0((uint64_t)v15);
      v25 = v24;
      v26 = OUTLINED_FUNCTION_383();
      sub_240BE10B8(v26, v27);
      v28 = (uint64_t)v15;
      v29 = type metadata accessor for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration;
LABEL_9:
      sub_240BE10B8(v28, v29);
      sub_240BE10B8(v0, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
      return v25 & 1;
    }
    v30 = type metadata accessor for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration;
    v31 = (uint64_t)v15;
  }
  else
  {
    sub_240BE0BF4(v0, (uint64_t)v17, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
    if (OUTLINED_FUNCTION_50_6() != 1)
    {
      sub_240BE0B90(v20, (uint64_t)v11, type metadata accessor for NearestNeighborsConfiguration.UniformWeightingConfiguration);
      _s20MLModelSpecification29NearestNeighborsConfigurationV016UniformWeightingE0V2eeoiySbAE_AEtFZ_0((uint64_t)v17);
      v25 = v33;
      sub_240BE10B8((uint64_t)v11, type metadata accessor for NearestNeighborsConfiguration.UniformWeightingConfiguration);
      v28 = (uint64_t)v17;
      v29 = type metadata accessor for NearestNeighborsConfiguration.UniformWeightingConfiguration;
      goto LABEL_9;
    }
    v30 = type metadata accessor for NearestNeighborsConfiguration.UniformWeightingConfiguration;
    v31 = (uint64_t)v17;
  }
  sub_240BE10B8(v31, v30);
  OUTLINED_FUNCTION_62_3(v32, &qword_25708CD80);
  v25 = 0;
  return v25 & 1;
}

void NearestNeighborsConfiguration.UniformWeightingConfiguration.customMirror.getter()
{
  sub_240C739D4();
}

void NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration.customMirror.getter()
{
  sub_240C739D4();
}

void sub_240C739D4()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  void (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v13[2];

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v4 = OUTLINED_FUNCTION_15_6();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_90();
  v3(v7);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x24BDAC7A8](v8);
  sub_240BE0BF4(v0, (uint64_t)v13 - v9, (uint64_t (*)(_QWORD))v3);
  v13[1] = MEMORY[0x24BEE4AF8];
  v10 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v1, v11, v12, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v0, *MEMORY[0x24BEE43C0], v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  sub_240F1CF9C();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C73AF0(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_240BF5654(result, a2, a3 & 1);
  return result;
}

uint64_t sub_240C73B08(uint64_t result, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255)
    return sub_240BF6B24(result, a2, a3 & 1);
  return result;
}

uint64_t type metadata accessor for NearestNeighborsConfiguration.WeightingScheme(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CD98);
}

uint64_t type metadata accessor for NearestNeighborsConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F870);
}

uint64_t type metadata accessor for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CDB8);
}

uint64_t type metadata accessor for NearestNeighborsConfiguration.UniformWeightingConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CDA8);
}

void sub_240C73B70()
{
  sub_240BE18B8(&qword_25708CD88, type metadata accessor for Proto_UniformWeighting, (uint64_t)&unk_240F36244);
}

void sub_240C73B9C()
{
  sub_240BE18B8(&qword_25708CD90, type metadata accessor for Proto_InverseDistanceWeighting, (uint64_t)&unk_240F361CC);
}

void sub_240C73BC8()
{
  NearestNeighborsConfiguration.parameters.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C73BE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C7303C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for NearestNeighborsConfiguration.Parameters, (void (*)(char *))NearestNeighborsConfiguration.parameters.setter);
}

void sub_240C73C08(uint64_t *a1@<X8>)
{
  *a1 = NearestNeighborsConfiguration.neighborCount.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C73C2C(uint64_t *a1)
{
  NearestNeighborsConfiguration.neighborCount.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C73C5C()
{
  NearestNeighborsConfiguration.weightingScheme.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C73C78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C7303C(a1, a2, a3, a4, (void (*)(_QWORD))type metadata accessor for NearestNeighborsConfiguration.WeightingScheme, (void (*)(char *))NearestNeighborsConfiguration.weightingScheme.setter);
}

uint64_t *initializeBufferWithCopyOfBuffer for NearestNeighborsConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, char *, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  int *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  _DWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v67;
  void (*v68)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_KNearestNeighborsClassifier(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE58);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v16 = v6[5];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = v18[16];
    if (v19 == 255)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
      v17[16] = v18[16];
    }
    else
    {
      v20 = v19 & 1;
      v21 = *(_QWORD *)v18;
      v22 = *((_QWORD *)v18 + 1);
      sub_240BF5654(*(_QWORD *)v18, v22, v19 & 1);
      *(_QWORD *)v17 = v21;
      *((_QWORD *)v17 + 1) = v22;
      v17[16] = v20;
    }
    v23 = v6[6];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v26))
    {
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
      memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    }
    else
    {
      swift_getEnumCaseMultiPayload();
      v28 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v24, v25, v28);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v26);
    }
    v29 = v6[7];
    v30 = (char *)a1 + v29;
    v31 = (char *)a2 + v29;
    v32 = sub_240F1C930();
    v33 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16);
    v33(v30, v31, v32);
    v34 = v6[8];
    v35 = (uint64_t *)((char *)a1 + v34);
    v36 = (uint64_t *)((char *)a2 + v34);
    v37 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, (uint64_t)v37))
    {
      v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE78);
      memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    }
    else
    {
      v67 = v32;
      v68 = v33;
      *(_DWORD *)v35 = *(_DWORD *)v36;
      v35[1] = v36[1];
      v39 = v37[6];
      v40 = (char *)v35 + v39;
      v41 = (_DWORD *)((char *)v36 + v39);
      v42 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v41, 1, v42))
      {
        v43 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68);
        memcpy(v40, v41, *(_QWORD *)(*(_QWORD *)(v43 - 8) + 64));
        v32 = v67;
      }
      else
      {
        v44 = v40;
        v32 = v67;
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_DWORD *)v44 = *v41;
          v45 = type metadata accessor for Proto_SingleKdTreeIndex(0);
          v68(&v44[*(int *)(v45 + 20)], (char *)v41 + *(int *)(v45 + 20), v67);
        }
        else
        {
          v68(v44, (char *)v41, v67);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v42);
      }
      v46 = v37[7];
      v47 = (char *)v35 + v46;
      v48 = (char *)v36 + v46;
      v49 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
        v33 = v68;
      }
      else
      {
        v51 = v48;
        v33 = v68;
        v68(v47, v51, v32);
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
      }
      v68((char *)v35 + v37[8], (char *)v36 + v37[8], v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, (uint64_t)v37);
    }
    v52 = v6[9];
    v53 = (uint64_t *)((char *)a1 + v52);
    v54 = (uint64_t *)((char *)a2 + v52);
    v55 = type metadata accessor for Proto_Int64Parameter(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
    {
      v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE88);
      memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
    }
    else
    {
      *v53 = *v54;
      v57 = *(int *)(v55 + 20);
      v58 = (_QWORD *)((char *)v53 + v57);
      v59 = (_QWORD *)((char *)v54 + v57);
      v60 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60))
      {
        v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
        memcpy(v58, v59, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v58 = *v59;
          v62 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
          v63 = (char *)v58 + v62;
          v64 = (char *)v59 + v62;
          swift_bridgeObjectRetain();
          v33(v63, v64, v32);
        }
        else
        {
          *(_OWORD *)v58 = *(_OWORD *)v59;
          v65 = type metadata accessor for Proto_Int64Range(0);
          v33((char *)v58 + *(int *)(v65 + 24), (char *)v59 + *(int *)(v65 + 24), v32);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v58, 0, 1, v60);
      }
      v33((char *)v53 + *(int *)(v55 + 24), (char *)v54 + *(int *)(v55 + 24), v32);
      __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
    }
  }
  return a1;
}

uint64_t destroy for NearestNeighborsConfiguration(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t);

  v2 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v4 = type metadata accessor for Proto_Int64Vector(0);
    else
      v4 = type metadata accessor for Proto_StringVector(0);
    v5 = a1 + *(int *)(v4 + 20);
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (int *)type metadata accessor for Proto_KNearestNeighborsClassifier(0);
  v8 = a1 + v7[5];
  v9 = *(unsigned __int8 *)(v8 + 16);
  if (v9 != 255)
    sub_240BF6B24(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), v9 & 1);
  v10 = a1 + v7[6];
  v11 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    v12 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v10, v12);
  }
  v13 = a1 + v7[7];
  v14 = sub_240F1C930();
  v28 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8);
  v28(v13, v14);
  v15 = a1 + v7[8];
  v16 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
  if (!__swift_getEnumTagSinglePayload(v15, 1, (uint64_t)v16))
  {
    swift_bridgeObjectRelease();
    v17 = v15 + v16[6];
    v18 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
        v19 = v17 + *(int *)(type metadata accessor for Proto_SingleKdTreeIndex(0) + 20);
      else
        v19 = v17;
      v28(v19, v14);
    }
    v20 = v15 + v16[7];
    v21 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
    if (!__swift_getEnumTagSinglePayload(v20, 1, v21))
      v28(v20, v14);
    v28(v15 + v16[8], v14);
  }
  v22 = a1 + v7[9];
  v23 = type metadata accessor for Proto_Int64Parameter(0);
  result = __swift_getEnumTagSinglePayload(v22, 1, v23);
  if (!(_DWORD)result)
  {
    v25 = v22 + *(int *)(v23 + 20);
    v26 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    if (!__swift_getEnumTagSinglePayload(v25, 1, v26))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v27 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      }
      else
      {
        v27 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
      }
      v28(v25 + v27, v14);
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v28)(v22 + *(int *)(v23 + 24), v14);
  }
  return result;
}

_QWORD *initializeWithCopy for NearestNeighborsConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  int v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  int *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  _DWORD *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _QWORD *v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char *v61;
  uint64_t v62;
  uint64_t v64;
  void (*v65)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v12 = (int *)type metadata accessor for Proto_KNearestNeighborsClassifier(0);
  v13 = v12[5];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = v15[16];
  if (v16 == 255)
  {
    *(_OWORD *)v14 = *(_OWORD *)v15;
    v14[16] = v15[16];
  }
  else
  {
    v17 = v16 & 1;
    v18 = *(_QWORD *)v15;
    v19 = *((_QWORD *)v15 + 1);
    sub_240BF5654(*(_QWORD *)v15, v19, v16 & 1);
    *(_QWORD *)v14 = v18;
    *((_QWORD *)v14 + 1) = v19;
    v14[16] = v17;
  }
  v20 = v12[6];
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v25 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v21, v22, v25);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
  }
  v26 = v12[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_240F1C930();
  v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
  v30(v27, v28, v29);
  v31 = v12[8];
  v32 = (_QWORD *)((char *)a1 + v31);
  v33 = (_QWORD *)((char *)a2 + v31);
  v34 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, (uint64_t)v34))
  {
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE78);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
  }
  else
  {
    v64 = v29;
    v65 = v30;
    *(_DWORD *)v32 = *(_DWORD *)v33;
    v32[1] = v33[1];
    v36 = v34[6];
    v37 = (char *)v32 + v36;
    v38 = (_DWORD *)((char *)v33 + v36);
    v39 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      v29 = v64;
    }
    else
    {
      v41 = v37;
      v29 = v64;
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_DWORD *)v41 = *v38;
        v42 = type metadata accessor for Proto_SingleKdTreeIndex(0);
        v65(&v41[*(int *)(v42 + 20)], (char *)v38 + *(int *)(v42 + 20), v64);
      }
      else
      {
        v65(v41, (char *)v38, v64);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v39);
    }
    v43 = v34[7];
    v44 = (char *)v32 + v43;
    v45 = (char *)v33 + v43;
    v46 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46))
    {
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
      memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
      v30 = v65;
    }
    else
    {
      v48 = v45;
      v30 = v65;
      v65(v44, v48, v29);
      __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
    }
    v65((char *)v32 + v34[8], (char *)v33 + v34[8], v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, (uint64_t)v34);
  }
  v49 = v12[9];
  v50 = (_QWORD *)((char *)a1 + v49);
  v51 = (_QWORD *)((char *)a2 + v49);
  v52 = type metadata accessor for Proto_Int64Parameter(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
  {
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE88);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
  }
  else
  {
    *v50 = *v51;
    v54 = *(int *)(v52 + 20);
    v55 = (_QWORD *)((char *)v50 + v54);
    v56 = (_QWORD *)((char *)v51 + v54);
    v57 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v56, 1, v57))
    {
      v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
      memcpy(v55, v56, *(_QWORD *)(*(_QWORD *)(v58 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v55 = *v56;
        v59 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
        v60 = (char *)v55 + v59;
        v61 = (char *)v56 + v59;
        swift_bridgeObjectRetain();
        v30(v60, v61, v29);
      }
      else
      {
        *(_OWORD *)v55 = *(_OWORD *)v56;
        v62 = type metadata accessor for Proto_Int64Range(0);
        v30((char *)v55 + *(int *)(v62 + 24), (char *)v56 + *(int *)(v62 + 24), v29);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v55, 0, 1, v57);
    }
    v30((char *)v50 + *(int *)(v52 + 24), (char *)v51 + *(int *)(v52 + 24), v29);
    __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
  }
  return a1;
}

_QWORD *assignWithCopy for NearestNeighborsConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  int v24;
  int v25;
  char v26;
  __int128 v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  int v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  char *v51;
  char *v52;
  int *v53;
  int v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  int v67;
  int v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  void (*v77)(char *, char *, uint64_t);
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  int v84;
  int v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  int v92;
  int v93;
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  int v105;
  int v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  char *v111;
  char *v112;
  void (*v113)(char *, char *, uint64_t);
  char *v114;
  uint64_t v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  char *v119;
  char *v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  void (*v128)(char *, char *, uint64_t);
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  void (*v132)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    v14 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v14 == 1)
      v15 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v15 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_240F1C930();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = (int *)type metadata accessor for Proto_KNearestNeighborsClassifier(0);
  v21 = v20[5];
  v22 = (uint64_t)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = *((unsigned __int8 *)a1 + v21 + 16);
  v25 = *((unsigned __int8 *)a2 + v21 + 16);
  if (v24 == 255)
  {
    if (v25 == 255)
    {
      v27 = *(_OWORD *)v23;
      *(_BYTE *)(v22 + 16) = v23[16];
      *(_OWORD *)v22 = v27;
    }
    else
    {
      v34 = v25 & 1;
      v35 = *(_QWORD *)v23;
      v36 = *((_QWORD *)v23 + 1);
      sub_240BF5654(v35, v36, v25 & 1);
      *(_QWORD *)v22 = v35;
      *(_QWORD *)(v22 + 8) = v36;
      *(_BYTE *)(v22 + 16) = v34;
    }
  }
  else if (v25 == 255)
  {
    sub_240C7589C(v22);
    v26 = v23[16];
    *(_OWORD *)v22 = *(_OWORD *)v23;
    *(_BYTE *)(v22 + 16) = v26;
  }
  else
  {
    v28 = v25 & 1;
    v29 = *(_QWORD *)v23;
    v30 = *((_QWORD *)v23 + 1);
    sub_240BF5654(v29, v30, v25 & 1);
    v31 = *(_QWORD *)v22;
    v32 = *(_QWORD *)(v22 + 8);
    v33 = *(_BYTE *)(v22 + 16);
    *(_QWORD *)v22 = v29;
    *(_QWORD *)(v22 + 8) = v30;
    *(_BYTE *)(v22 + 16) = v28;
    sub_240BF6B24(v31, v32, v33);
  }
  v37 = v20[6];
  v38 = (char *)a1 + v37;
  v39 = (char *)a2 + v37;
  v40 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
  v41 = __swift_getEnumTagSinglePayload((uint64_t)v38, 1, v40);
  v42 = __swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40);
  if (v41)
  {
    if (!v42)
    {
      swift_getEnumCaseMultiPayload();
      v43 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16))(v38, v39, v43);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
      goto LABEL_28;
    }
    goto LABEL_27;
  }
  if (v42)
  {
    sub_240BE10B8((uint64_t)v38, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme);
LABEL_27:
    v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
    memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v44 - 8) + 64));
    goto LABEL_28;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v38, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme);
    swift_getEnumCaseMultiPayload();
    v62 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v62 - 8) + 16))(v38, v39, v62);
    swift_storeEnumTagMultiPayload();
  }
LABEL_28:
  v45 = v20[7];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = sub_240F1C930();
  v130 = *(_QWORD *)(v48 - 8);
  v49 = *(void (**)(char *, char *, uint64_t))(v130 + 24);
  v49(v46, v47, v48);
  v50 = v20[8];
  v51 = (char *)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
  v54 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, (uint64_t)v53);
  v55 = __swift_getEnumTagSinglePayload((uint64_t)v52, 1, (uint64_t)v53);
  if (!v54)
  {
    if (v55)
    {
      sub_240BE10B8((uint64_t)v51, type metadata accessor for Proto_NearestNeighborsIndex);
      goto LABEL_34;
    }
    v125 = v48;
    v128 = v49;
    *(_DWORD *)v51 = *(_DWORD *)v52;
    *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v63 = v53[6];
    v64 = &v51[v63];
    v65 = &v52[v63];
    v66 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    v67 = __swift_getEnumTagSinglePayload((uint64_t)v64, 1, v66);
    v68 = __swift_getEnumTagSinglePayload((uint64_t)v65, 1, v66);
    if (v67)
    {
      if (!v68)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_DWORD *)v64 = *(_DWORD *)v65;
          v69 = type metadata accessor for Proto_SingleKdTreeIndex(0);
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(&v64[*(int *)(v69 + 20)], &v65[*(int *)(v69 + 20)], v125);
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v64, v65, v125);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v64, 0, 1, v66);
        goto LABEL_59;
      }
    }
    else
    {
      if (!v68)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v64, type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_DWORD *)v64 = *(_DWORD *)v65;
            v79 = type metadata accessor for Proto_SingleKdTreeIndex(0);
            (*(void (**)(char *, char *, uint64_t))(v130 + 16))(&v64[*(int *)(v79 + 20)], &v65[*(int *)(v79 + 20)], v125);
          }
          else
          {
            (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v64, v65, v125);
          }
          swift_storeEnumTagMultiPayload();
        }
LABEL_59:
        v80 = v53[7];
        v81 = &v51[v80];
        v82 = &v52[v80];
        v83 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
        v84 = __swift_getEnumTagSinglePayload((uint64_t)v81, 1, v83);
        v85 = __swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83);
        if (v84)
        {
          if (!v85)
          {
            v86 = v82;
            v48 = v125;
            (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v81, v86, v125);
            __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
LABEL_65:
            v49 = v128;
            v128(&v51[v53[8]], &v52[v53[8]], v48);
            goto LABEL_66;
          }
        }
        else
        {
          if (!v85)
          {
            v117 = v82;
            v48 = v125;
            v49 = v128;
            v128(v81, v117, v125);
            v128(&v51[v53[8]], &v52[v53[8]], v125);
            goto LABEL_66;
          }
          sub_240BE10B8((uint64_t)v81, type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction);
        }
        v87 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
        memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v87 - 8) + 64));
        v48 = v125;
        goto LABEL_65;
      }
      sub_240BE10B8((uint64_t)v64, type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType);
    }
    v71 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68);
    memcpy(v64, v65, *(_QWORD *)(*(_QWORD *)(v71 - 8) + 64));
    goto LABEL_59;
  }
  if (v55)
  {
LABEL_34:
    v61 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE78);
    memcpy(v51, v52, *(_QWORD *)(*(_QWORD *)(v61 - 8) + 64));
    goto LABEL_66;
  }
  v124 = v48;
  v127 = v49;
  *(_DWORD *)v51 = *(_DWORD *)v52;
  *((_QWORD *)v51 + 1) = *((_QWORD *)v52 + 1);
  v56 = v53[6];
  v57 = &v51[v56];
  v58 = &v52[v56];
  v59 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v58, 1, v59))
  {
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68);
    memcpy(v57, v58, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)v57 = *(_DWORD *)v58;
      v70 = type metadata accessor for Proto_SingleKdTreeIndex(0);
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(&v57[*(int *)(v70 + 20)], &v58[*(int *)(v70 + 20)], v124);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v130 + 16))(v57, v58, v124);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v57, 0, 1, v59);
  }
  v72 = v53[7];
  v73 = &v51[v72];
  v74 = &v52[v72];
  v75 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v74, 1, v75))
  {
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
    memcpy(v73, v74, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    v77 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
    v48 = v124;
  }
  else
  {
    v77 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
    v78 = v74;
    v48 = v124;
    v77(v73, v78, v124);
    __swift_storeEnumTagSinglePayload((uint64_t)v73, 0, 1, v75);
  }
  v49 = v127;
  v77(&v51[v53[8]], &v52[v53[8]], v48);
  __swift_storeEnumTagSinglePayload((uint64_t)v51, 0, 1, (uint64_t)v53);
LABEL_66:
  v88 = v20[9];
  v89 = (char *)a1 + v88;
  v90 = (char *)a2 + v88;
  v91 = type metadata accessor for Proto_Int64Parameter(0);
  v92 = __swift_getEnumTagSinglePayload((uint64_t)v89, 1, v91);
  v93 = __swift_getEnumTagSinglePayload((uint64_t)v90, 1, v91);
  if (!v92)
  {
    if (v93)
    {
      sub_240BE10B8((uint64_t)v89, type metadata accessor for Proto_Int64Parameter);
      goto LABEL_72;
    }
    v129 = v49;
    v100 = v48;
    *(_QWORD *)v89 = *(_QWORD *)v90;
    v101 = *(int *)(v91 + 20);
    v102 = &v89[v101];
    v103 = &v90[v101];
    v104 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    v105 = __swift_getEnumTagSinglePayload((uint64_t)v102, 1, v104);
    v106 = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v104);
    if (v105)
    {
      if (!v106)
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_QWORD *)v102 = *(_QWORD *)v103;
          v107 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
          v108 = &v102[v107];
          v109 = &v103[v107];
          v131 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
          swift_bridgeObjectRetain();
          v131(v108, v109, v100);
        }
        else
        {
          *(_QWORD *)v102 = *(_QWORD *)v103;
          *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
          v121 = type metadata accessor for Proto_Int64Range(0);
          (*(void (**)(char *, char *, uint64_t))(v130 + 16))(&v102[*(int *)(v121 + 24)], &v103[*(int *)(v121 + 24)], v100);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v102, 0, 1, v104);
        goto LABEL_93;
      }
    }
    else
    {
      if (!v106)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v102, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            *(_QWORD *)v102 = *(_QWORD *)v103;
            v118 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
            v119 = &v102[v118];
            v120 = &v103[v118];
            v132 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
            swift_bridgeObjectRetain();
            v132(v119, v120, v100);
          }
          else
          {
            *(_QWORD *)v102 = *(_QWORD *)v103;
            *((_QWORD *)v102 + 1) = *((_QWORD *)v103 + 1);
            v122 = type metadata accessor for Proto_Int64Range(0);
            (*(void (**)(char *, char *, uint64_t))(v130 + 16))(&v102[*(int *)(v122 + 24)], &v103[*(int *)(v122 + 24)], v100);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_93;
      }
      sub_240BE10B8((uint64_t)v102, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    }
    v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v102, v103, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
LABEL_93:
    v129(&v89[*(int *)(v91 + 24)], &v90[*(int *)(v91 + 24)], v100);
    return a1;
  }
  if (v93)
  {
LABEL_72:
    v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE88);
    memcpy(v89, v90, *(_QWORD *)(*(_QWORD *)(v99 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v89 = *(_QWORD *)v90;
  v94 = *(int *)(v91 + 20);
  v95 = &v89[v94];
  v96 = &v90[v94];
  v97 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v96, 1, v97))
  {
    v98 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v95, v96, *(_QWORD *)(*(_QWORD *)(v98 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v130 + 16))(&v89[*(int *)(v91 + 24)], &v90[*(int *)(v91 + 24)], v48);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v95 = *(_QWORD *)v96;
      v110 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      v126 = v48;
      v111 = &v95[v110];
      v112 = &v96[v110];
      v113 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
      swift_bridgeObjectRetain();
      v114 = v111;
      v48 = v126;
      v113(v114, v112, v126);
    }
    else
    {
      *(_QWORD *)v95 = *(_QWORD *)v96;
      *((_QWORD *)v95 + 1) = *((_QWORD *)v96 + 1);
      v116 = type metadata accessor for Proto_Int64Range(0);
      v113 = *(void (**)(char *, char *, uint64_t))(v130 + 16);
      v113(&v95[*(int *)(v116 + 24)], &v96[*(int *)(v116 + 24)], v48);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v95, 0, 1, v97);
    v113(&v89[*(int *)(v91 + 24)], &v90[*(int *)(v91 + 24)], v48);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v89, 0, 1, v91);
  return a1;
}

uint64_t sub_240C7589C(uint64_t a1)
{
  destroy for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(a1);
  return a1;
}

_QWORD *initializeWithTake for NearestNeighborsConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  _DWORD *v32;
  _DWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  _QWORD *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  _QWORD *v50;
  uint64_t v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  void (*v57)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v11 = (int *)type metadata accessor for Proto_KNearestNeighborsClassifier(0);
  v12 = v11[5];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[16] = v14[16];
  v15 = v11[6];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v20 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v16, v17, v20);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v21 = v11[7];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_240F1C930();
  v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32);
  v25(v22, v23, v24);
  v26 = v11[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, (uint64_t)v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE78);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v57 = v25;
    *(_DWORD *)v27 = *(_DWORD *)v28;
    v27[1] = v28[1];
    v31 = v29[6];
    v32 = (_DWORD *)((char *)v27 + v31);
    v33 = (_DWORD *)((char *)v28 + v31);
    v34 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v32 = *v33;
        v36 = type metadata accessor for Proto_SingleKdTreeIndex(0);
        v57((char *)v32 + *(int *)(v36 + 20), (char *)v33 + *(int *)(v36 + 20), v24);
      }
      else
      {
        v57((char *)v32, (char *)v33, v24);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    v37 = v29[7];
    v38 = (char *)v27 + v37;
    v39 = (char *)v28 + v37;
    v40 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      v25 = v57;
    }
    else
    {
      v57(v38, v39, v24);
      v42 = v40;
      v25 = v57;
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v42);
    }
    v57((char *)v27 + v29[8], (char *)v28 + v29[8], v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, (uint64_t)v29);
  }
  v43 = v11[9];
  v44 = (_QWORD *)((char *)a1 + v43);
  v45 = (_QWORD *)((char *)a2 + v43);
  v46 = type metadata accessor for Proto_Int64Parameter(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v45, 1, v46))
  {
    v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE88);
    memcpy(v44, v45, *(_QWORD *)(*(_QWORD *)(v47 - 8) + 64));
  }
  else
  {
    *v44 = *v45;
    v48 = *(int *)(v46 + 20);
    v49 = (_QWORD *)((char *)v44 + v48);
    v50 = (_QWORD *)((char *)v45 + v48);
    v51 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v51))
    {
      v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
      memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
    }
    else
    {
      v53 = swift_getEnumCaseMultiPayload();
      *v49 = *v50;
      if (v53 == 1)
      {
        v54 = type metadata accessor for Proto_Int64Set(0);
        v55 = 5;
      }
      else
      {
        v49[1] = v50[1];
        v54 = type metadata accessor for Proto_Int64Range(0);
        v55 = 6;
      }
      v25((char *)v49 + *(int *)(v54 + 4 * v55), (char *)v50 + *(int *)(v54 + 4 * v55), v24);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v51);
    }
    v25((char *)v44 + *(int *)(v46 + 24), (char *)v45 + *(int *)(v46 + 24), v24);
    __swift_storeEnumTagSinglePayload((uint64_t)v44, 0, 1, v46);
  }
  return a1;
}

_QWORD *assignWithTake for NearestNeighborsConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  int *v43;
  int v44;
  int v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  int v57;
  size_t v58;
  void *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  void (*v66)(char *, char *, uint64_t);
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  int v82;
  int v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  char *v92;
  uint64_t v93;
  int v94;
  int v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  int v99;
  uint64_t v100;
  void (*v101)(char *, char *, uint64_t);
  uint64_t v102;
  uint64_t v103;
  char *v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  _DWORD *v109;
  uint64_t v110;
  uint64_t v111;
  void (*v112)(char *, char *, uint64_t);
  void (*v113)(char *, char *, uint64_t);
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;

  v4 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE58);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels);
    v13 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v13 == 1)
      v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v18 = (int *)type metadata accessor for Proto_KNearestNeighborsClassifier(0);
  v19 = v18[5];
  v20 = (uint64_t)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = *((unsigned __int8 *)a1 + v19 + 16);
  if (v22 == 255)
  {
LABEL_18:
    *(_OWORD *)v20 = *(_OWORD *)v21;
    *(_BYTE *)(v20 + 16) = v21[16];
    goto LABEL_20;
  }
  v23 = v21[16];
  if (v23 == 255)
  {
    sub_240C7589C(v20);
    goto LABEL_18;
  }
  v24 = *(_QWORD *)v20;
  v25 = *(_QWORD *)(v20 + 8);
  *(_OWORD *)v20 = *(_OWORD *)v21;
  *(_BYTE *)(v20 + 16) = v23 & 1;
  sub_240BF6B24(v24, v25, v22 & 1);
LABEL_20:
  v26 = v18[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
  v30 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v29);
  v31 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29);
  if (v30)
  {
    if (!v31)
    {
      swift_getEnumCaseMultiPayload();
      v32 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v27, v28, v32);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
      goto LABEL_26;
    }
    goto LABEL_25;
  }
  if (v31)
  {
    sub_240BE10B8((uint64_t)v27, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme);
LABEL_25:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE60);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_26;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v27, type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme);
    swift_getEnumCaseMultiPayload();
    v52 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 32))(v27, v28, v52);
    swift_storeEnumTagMultiPayload();
  }
LABEL_26:
  v34 = v18[7];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_240F1C930();
  v38 = *(_QWORD *)(v37 - 8);
  v39 = *(void (**)(char *, char *, uint64_t))(v38 + 40);
  v39(v35, v36, v37);
  v40 = v18[8];
  v41 = (char *)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, (uint64_t)v43);
  v45 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, (uint64_t)v43);
  v115 = v38;
  if (!v44)
  {
    if (v45)
    {
      sub_240BE10B8((uint64_t)v41, type metadata accessor for Proto_NearestNeighborsIndex);
      goto LABEL_32;
    }
    v111 = v37;
    v113 = v39;
    *(_DWORD *)v41 = *(_DWORD *)v42;
    *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
    swift_bridgeObjectRelease();
    v53 = v43[6];
    v54 = (uint64_t)&v41[v53];
    v55 = &v42[v53];
    v56 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
    v109 = (_DWORD *)v54;
    LODWORD(v54) = __swift_getEnumTagSinglePayload(v54, 1, v56);
    v57 = __swift_getEnumTagSinglePayload((uint64_t)v55, 1, v56);
    if ((_DWORD)v54)
    {
      if (v57)
      {
        v58 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68) - 8) + 64);
        v59 = v109;
LABEL_42:
        memcpy(v59, v55, v58);
        goto LABEL_58;
      }
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v109 = *(_DWORD *)v55;
        v68 = type metadata accessor for Proto_SingleKdTreeIndex(0);
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))((char *)v109 + *(int *)(v68 + 20), &v55[*(int *)(v68 + 20)], v111);
      }
      else
      {
        (*(void (**)(_DWORD *, char *, uint64_t))(v38 + 32))(v109, v55, v111);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v109, 0, 1, v56);
    }
    else
    {
      if (v57)
      {
        sub_240BE10B8((uint64_t)v109, type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType);
        v58 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68) - 8) + 64);
        v59 = v109;
        goto LABEL_42;
      }
      if (a1 != a2)
      {
        sub_240BE10B8((uint64_t)v109, type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v109 = *(_DWORD *)v55;
          v69 = type metadata accessor for Proto_SingleKdTreeIndex(0);
          (*(void (**)(char *, char *, uint64_t))(v38 + 32))((char *)v109 + *(int *)(v69 + 20), &v55[*(int *)(v69 + 20)], v111);
        }
        else
        {
          (*(void (**)(_DWORD *, char *, uint64_t))(v38 + 32))(v109, v55, v111);
        }
        swift_storeEnumTagMultiPayload();
      }
    }
LABEL_58:
    v70 = v43[7];
    v71 = &v41[v70];
    v72 = &v42[v70];
    v73 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
    v74 = __swift_getEnumTagSinglePayload((uint64_t)v71, 1, v73);
    v75 = __swift_getEnumTagSinglePayload((uint64_t)v72, 1, v73);
    if (v74)
    {
      if (!v75)
      {
        (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v71, v72, v111);
        v76 = v73;
        v37 = v111;
        __swift_storeEnumTagSinglePayload((uint64_t)v71, 0, 1, v76);
LABEL_64:
        v39 = v113;
        v113(&v41[v43[8]], &v42[v43[8]], v37);
        goto LABEL_65;
      }
    }
    else
    {
      if (!v75)
      {
        v104 = v72;
        v37 = v111;
        v39 = v113;
        v113(v71, v104, v111);
        v113(&v41[v43[8]], &v42[v43[8]], v111);
        goto LABEL_65;
      }
      sub_240BE10B8((uint64_t)v71, type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction);
    }
    v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
    memcpy(v71, v72, *(_QWORD *)(*(_QWORD *)(v77 - 8) + 64));
    v37 = v111;
    goto LABEL_64;
  }
  if (v45)
  {
LABEL_32:
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE78);
    memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
    goto LABEL_65;
  }
  v110 = v37;
  v112 = v39;
  *(_DWORD *)v41 = *(_DWORD *)v42;
  *((_QWORD *)v41 + 1) = *((_QWORD *)v42 + 1);
  v46 = v43[6];
  v47 = &v41[v46];
  v48 = &v42[v46];
  v49 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
  {
    v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE68);
    memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_DWORD *)v47 = *(_DWORD *)v48;
      v60 = type metadata accessor for Proto_SingleKdTreeIndex(0);
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(&v47[*(int *)(v60 + 20)], &v48[*(int *)(v60 + 20)], v110);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v47, v48, v110);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
  }
  v61 = v43[7];
  v62 = &v41[v61];
  v63 = &v42[v61];
  v64 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v63, 1, v64))
  {
    v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE70);
    memcpy(v62, v63, *(_QWORD *)(*(_QWORD *)(v65 - 8) + 64));
    v66 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v37 = v110;
  }
  else
  {
    v66 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
    v66(v62, v63, v110);
    v67 = v64;
    v37 = v110;
    __swift_storeEnumTagSinglePayload((uint64_t)v62, 0, 1, v67);
  }
  v39 = v112;
  v66(&v41[v43[8]], &v42[v43[8]], v37);
  __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, (uint64_t)v43);
LABEL_65:
  v78 = v18[9];
  v79 = (char *)a1 + v78;
  v80 = (char *)a2 + v78;
  v81 = type metadata accessor for Proto_Int64Parameter(0);
  v82 = __swift_getEnumTagSinglePayload((uint64_t)v79, 1, v81);
  v83 = __swift_getEnumTagSinglePayload((uint64_t)v80, 1, v81);
  if (!v82)
  {
    if (v83)
    {
      sub_240BE10B8((uint64_t)v79, type metadata accessor for Proto_Int64Parameter);
      goto LABEL_71;
    }
    v114 = v39;
    *(_QWORD *)v79 = *(_QWORD *)v80;
    v90 = *(int *)(v81 + 20);
    v91 = &v79[v90];
    v92 = &v80[v90];
    v93 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    v94 = __swift_getEnumTagSinglePayload((uint64_t)v91, 1, v93);
    v95 = __swift_getEnumTagSinglePayload((uint64_t)v92, 1, v93);
    if (v94)
    {
      if (!v95)
      {
        v96 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v91 = *(_QWORD *)v92;
        if (v96 == 1)
        {
          v97 = type metadata accessor for Proto_Int64Set(0);
          v98 = 5;
        }
        else
        {
          *((_QWORD *)v91 + 1) = *((_QWORD *)v92 + 1);
          v97 = type metadata accessor for Proto_Int64Range(0);
          v98 = 6;
        }
        (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v91[*(int *)(v97 + 4 * v98)], &v92[*(int *)(v97 + 4 * v98)], v37);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v91, 0, 1, v93);
        goto LABEL_92;
      }
    }
    else
    {
      if (!v95)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v91, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
          v105 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v91 = *(_QWORD *)v92;
          if (v105 == 1)
          {
            v106 = type metadata accessor for Proto_Int64Set(0);
            (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v91[*(int *)(v106 + 20)], &v92[*(int *)(v106 + 20)], v37);
          }
          else
          {
            *((_QWORD *)v91 + 1) = *((_QWORD *)v92 + 1);
            v107 = type metadata accessor for Proto_Int64Range(0);
            (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v91[*(int *)(v107 + 24)], &v92[*(int *)(v107 + 24)], v37);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_92;
      }
      sub_240BE10B8((uint64_t)v91, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    }
    v102 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v91, v92, *(_QWORD *)(*(_QWORD *)(v102 - 8) + 64));
LABEL_92:
    v114(&v79[*(int *)(v81 + 24)], &v80[*(int *)(v81 + 24)], v37);
    return a1;
  }
  if (v83)
  {
LABEL_71:
    v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE88);
    memcpy(v79, v80, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v79 = *(_QWORD *)v80;
  v84 = *(int *)(v81 + 20);
  v85 = &v79[v84];
  v86 = &v80[v84];
  v87 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v86, 1, v87))
  {
    v88 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v85, v86, *(_QWORD *)(*(_QWORD *)(v88 - 8) + 64));
    (*(void (**)(char *, char *, uint64_t))(v115 + 32))(&v79[*(int *)(v81 + 24)], &v80[*(int *)(v81 + 24)], v37);
  }
  else
  {
    v99 = swift_getEnumCaseMultiPayload();
    *(_QWORD *)v85 = *(_QWORD *)v86;
    if (v99 == 1)
    {
      v100 = type metadata accessor for Proto_Int64Set(0);
      v101 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
      v101(&v85[*(int *)(v100 + 20)], &v86[*(int *)(v100 + 20)], v37);
    }
    else
    {
      *((_QWORD *)v85 + 1) = *((_QWORD *)v86 + 1);
      v103 = type metadata accessor for Proto_Int64Range(0);
      v101 = *(void (**)(char *, char *, uint64_t))(v115 + 32);
      v101(&v85[*(int *)(v103 + 24)], &v86[*(int *)(v103 + 24)], v37);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v85, 0, 1, v87);
    v101(&v79[*(int *)(v81 + 24)], &v80[*(int *)(v81 + 24)], v37);
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v79, 0, 1, v81);
  return a1;
}

uint64_t getEnumTagSinglePayload for NearestNeighborsConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C76A8C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_4_12();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for NearestNeighborsConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C76ABC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_4_12();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C76AE0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_KNearestNeighborsClassifier);
}

ValueMetadata *type metadata accessor for NearestNeighborsConfiguration.ClassLabels()
{
  return &type metadata for NearestNeighborsConfiguration.ClassLabels;
}

uint64_t destroy for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(uint64_t a1)
{
  return sub_240BF6B24(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s20MLModelSpecification29NearestNeighborsConfigurationV17DefaultClassLabelOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a2;
  v4 = a2[1];
  v5 = *((_BYTE *)a2 + 16);
  v6 = OUTLINED_FUNCTION_383();
  sub_240BF5654(v6, v7, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240BF5654(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_240BF6B24(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_240BF6B24(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 255;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_240C76C70(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NearestNeighborsConfiguration.DefaultClassLabel()
{
  return &type metadata for NearestNeighborsConfiguration.DefaultClassLabel;
}

uint64_t *initializeBufferWithCopyOfBuffer for NearestNeighborsConfiguration.WeightingScheme(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    swift_getEnumCaseMultiPayload();
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithCopy for NearestNeighborsConfiguration.WeightingScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for NearestNeighborsConfiguration.WeightingScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_240BE10B8(a1, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
    swift_getEnumCaseMultiPayload();
    v4 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t initializeWithTake for NearestNeighborsConfiguration.WeightingScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getEnumCaseMultiPayload();
  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithTake for NearestNeighborsConfiguration.WeightingScheme(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  if (a1 != a2)
  {
    sub_240BE10B8(a1, type metadata accessor for NearestNeighborsConfiguration.WeightingScheme);
    swift_getEnumCaseMultiPayload();
    v4 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C76F38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NearestNeighborsConfiguration.UniformWeightingConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C76FBC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_42_7();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for NearestNeighborsConfiguration.UniformWeightingConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C76FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_42_7();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t _s20MLModelSpecification29NearestNeighborsConfigurationV29UniformWeightingConfigurationVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v2 - 8))(v1, v0, v2);
}

void _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersVwcp_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  OUTLINED_FUNCTION_44();
}

void _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersVwca_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  OUTLINED_FUNCTION_44();
}

void _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersVwtk_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  OUTLINED_FUNCTION_44();
}

void _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersVwta_0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  OUTLINED_FUNCTION_44();
}

uint64_t getEnumTagSinglePayload for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C770EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_5();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for NearestNeighborsConfiguration.InverseDistanceWeightingConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C77114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_41_5();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_4_12()
{
  return type metadata accessor for Proto_KNearestNeighborsClassifier(0);
}

uint64_t OUTLINED_FUNCTION_19_8()
{
  return type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
}

uint64_t OUTLINED_FUNCTION_21_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_23_6()
{
  return type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
}

uint64_t OUTLINED_FUNCTION_26_4()
{
  return type metadata accessor for NearestNeighborsConfiguration.WeightingScheme(0);
}

uint64_t OUTLINED_FUNCTION_29_7()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_34_6()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BE0B90(v2, v0, v1);
}

void OUTLINED_FUNCTION_35_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_240C5E950(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_37_6()
{
  return type metadata accessor for Proto_NearestNeighborsIndex(0);
}

uint64_t OUTLINED_FUNCTION_41_5()
{
  return type metadata accessor for Proto_InverseDistanceWeighting(0);
}

uint64_t OUTLINED_FUNCTION_42_7()
{
  return type metadata accessor for Proto_UniformWeighting(0);
}

void OUTLINED_FUNCTION_50_8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

void *OUTLINED_FUNCTION_51_6()
{
  size_t v0;

  return malloc(v0);
}

void OUTLINED_FUNCTION_53_7(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0B90(v4, v3, a3);
}

void OUTLINED_FUNCTION_54_8(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C5E950(a1, a2, v2);
}

void OUTLINED_FUNCTION_55_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0B90(a1, v3, a3);
}

void OUTLINED_FUNCTION_56_7(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

void OUTLINED_FUNCTION_62_3(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_63_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_66_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0B90(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_67_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

void sub_240C7723C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X9 }
}

uint64_t sub_240C772A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v7 = v2;
  if (v2)
  {
    *(_QWORD *)(v6 - 104) = v3;
    v8 = v2 & ~(v2 >> 63);
    *(_QWORD *)(v6 - 128) = v0;
    sub_240BF0A64();
    v9 = *(_QWORD *)(v6 - 128);
    v3 = *(_QWORD *)(v6 - 104);
    v31 = v2;
    v32 = (int)v5;
    if ((_DWORD)v9)
    {
      if ((_DWORD)v9 == 1)
        v10 = (int)v5;
      else
        v10 = *(_QWORD *)(v5 + 16);
      if (v7 < 0)
        goto LABEL_40;
    }
    else
    {
      if (v2 < 0)
      {
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
      }
      v10 = 0;
    }
    v30 = (uint64_t)v5 >> 32;
    v28 = v5 >> 16;
    v29 = v5 >> 8;
    v26 = v5 >> 40;
    v27 = v5 >> 24;
    v24 = HIBYTE(v5);
    v25 = HIWORD(v5);
    *(_QWORD *)(v6 - 136) = v5;
    while (v8)
    {
      if ((_DWORD)v9)
      {
        if ((_DWORD)v9 == 1)
        {
          if (v10 < v32 || v10 >= v30)
            goto LABEL_34;
          v12 = sub_240F1C7A4();
          if (!v12)
            goto LABEL_42;
          v13 = v12;
          v14 = sub_240F1C7BC();
          v15 = v10 - v14;
          if (__OFSUB__(v10, v14))
            goto LABEL_37;
        }
        else
        {
          if (v10 < *(_QWORD *)(v5 + 16))
            goto LABEL_36;
          if (v10 >= *(_QWORD *)(v5 + 24))
            goto LABEL_38;
          v17 = sub_240F1C7A4();
          if (!v17)
            goto LABEL_43;
          v13 = v17;
          v18 = sub_240F1C7BC();
          v15 = v10 - v18;
          if (__OFSUB__(v10, v18))
            goto LABEL_39;
        }
        v16 = *(_BYTE *)(v13 + v15);
      }
      else
      {
        if (v10 >= v31)
          goto LABEL_35;
        *(_BYTE *)(v6 - 118) = v5;
        *(_BYTE *)(v6 - 117) = v29;
        *(_BYTE *)(v6 - 116) = v28;
        *(_BYTE *)(v6 - 115) = v27;
        *(_BYTE *)(v6 - 114) = v4;
        *(_BYTE *)(v6 - 113) = v26;
        *(_BYTE *)(v6 - 112) = v25;
        *(_BYTE *)(v6 - 111) = v24;
        *(_WORD *)(v6 - 110) = v1;
        *(_BYTE *)(v6 - 108) = BYTE2(v1);
        *(_BYTE *)(v6 - 107) = BYTE3(v1);
        *(_BYTE *)(v6 - 106) = BYTE4(v1);
        *(_BYTE *)(v6 - 105) = BYTE5(v1);
        v16 = *(_BYTE *)(v6 - 118 + v10);
      }
      v19 = swift_allocObject();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CF00);
      v20 = swift_allocObject();
      *(_OWORD *)(v20 + 16) = xmmword_240F1DA30;
      *(_QWORD *)(v20 + 56) = MEMORY[0x24BEE4260];
      *(_QWORD *)(v20 + 64) = MEMORY[0x24BEE42B0];
      *(_BYTE *)(v20 + 32) = v16;
      *(_QWORD *)(v19 + 16) = sub_240F1CCA8();
      *(_QWORD *)(v19 + 24) = v21;
      *(_QWORD *)(v6 - 104) = v3;
      v22 = *(_QWORD *)(v3 + 16);
      if (v22 >= *(_QWORD *)(v3 + 24) >> 1)
      {
        sub_240BF0A64();
        v3 = *(_QWORD *)(v6 - 104);
      }
      *(_QWORD *)(v3 + 16) = v22 + 1;
      *(_QWORD *)(v3 + 8 * v22 + 32) = v19;
      ++v10;
      --v8;
      --v7;
      v5 = *(_QWORD *)(v6 - 136);
      v9 = *(_QWORD *)(v6 - 128);
      if (!v7)
        return v3;
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    JUMPOUT(0x240C775C0);
  }
  return v3;
}

void sub_240C775E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for Proto_MILSpec_Value(0);
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v12 = MEMORY[0x24BEE4AF8];
    sub_240BF0C44();
    type metadata accessor for MLProgram.Value();
    OUTLINED_FUNCTION_51_2();
    v6 = a1 + v5;
    v8 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_240BE0BF4(v6, v1, type metadata accessor for Proto_MILSpec_Value);
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_240BF0C44();
      OUTLINED_FUNCTION_78_3();
      sub_240BE0B90(v1, v10 + v11 * v9, type metadata accessor for Proto_MILSpec_Value);
      v6 += v8;
      --v4;
    }
    while (v4);
  }
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_240C776F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v34 = type metadata accessor for Proto_MILSpec_Value(0);
  v3 = MEMORY[0x24BDAC7A8](v34);
  v33 = (uint64_t)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x24BDAC7A8](v3);
  v36 = (uint64_t)v27 - v6;
  MEMORY[0x24BDAC7A8](v5);
  v35 = (uint64_t)v27 - v7;
  v8 = type metadata accessor for Proto_MILSpec_DictionaryValue.KeyValuePair(0);
  v31 = *(_QWORD *)(v8 - 8);
  v32 = v8;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v27[1] = v1;
    v38 = MEMORY[0x24BEE4AF8];
    sub_240BF0C70();
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C128);
    v14 = *(_QWORD *)(v13 - 8);
    v15 = a1 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
    v28 = *(_QWORD *)(v14 + 72);
    v29 = v13;
    v30 = v10;
    v16 = v34;
    do
    {
      v37 = v11;
      v17 = v15 + *(int *)(v29 + 48);
      v18 = v35;
      sub_240BE0BF4(v15, v35, type metadata accessor for Proto_MILSpec_Value);
      v19 = v36;
      sub_240BE0BF4(v17, v36, type metadata accessor for Proto_MILSpec_Value);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v20 = v32;
      v21 = (uint64_t)&v10[*(int *)(v32 + 20)];
      __swift_storeEnumTagSinglePayload(v21, 1, 1, v16);
      v22 = (uint64_t)&v10[*(int *)(v20 + 24)];
      __swift_storeEnumTagSinglePayload(v22, 1, 1, v16);
      v23 = v33;
      sub_240BE0BF4(v18, v33, type metadata accessor for Proto_MILSpec_Value);
      sub_240BE0B68(v21, &qword_25708CDE0);
      sub_240BE0B90(v23, v21, type metadata accessor for Proto_MILSpec_Value);
      __swift_storeEnumTagSinglePayload(v21, 0, 1, v16);
      sub_240BE0BF4(v19, v23, type metadata accessor for Proto_MILSpec_Value);
      sub_240BE0B68(v22, &qword_25708CDE0);
      sub_240BE0B90(v23, v22, type metadata accessor for Proto_MILSpec_Value);
      __swift_storeEnumTagSinglePayload(v22, 0, 1, v16);
      sub_240C7A780(v19, type metadata accessor for Proto_MILSpec_Value);
      sub_240C7A780(v18, type metadata accessor for Proto_MILSpec_Value);
      v12 = v38;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0C70();
        v12 = v38;
      }
      v24 = *(_QWORD *)(v12 + 16);
      v10 = v30;
      v25 = v37;
      if (v24 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_240BF0C70();
        v12 = v38;
      }
      *(_QWORD *)(v12 + 16) = v24 + 1;
      sub_240BE0B90((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v31 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v31 + 80))+ *(_QWORD *)(v31 + 72) * v24, type metadata accessor for Proto_MILSpec_DictionaryValue.KeyValuePair);
      v15 += v28;
      v11 = v25 - 1;
    }
    while (v11);
  }
  return v12;
}

void MLProgram.Value.BlobFileValue.fileName.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void MLProgram.Value.BlobFileValue.fileName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

#error "240C77B2C: call analysis failed (funcsize=87)"

#error "240C77CD4: call analysis failed (funcsize=69)"

void sub_240C77D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  v27 = OUTLINED_FUNCTION_60();
  v28 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(v27);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - v31;
  v33 = OUTLINED_FUNCTION_104_1();
  sub_240C5E950(v33, v34, &qword_25708CED8);
  if (__swift_getEnumTagSinglePayload(v21, 1, v28) == 1)
  {
    sub_240BE0B68(v21, &qword_25708CED8);
    OUTLINED_FUNCTION_148_1(v35, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
    *(_QWORD *)v20 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v20 + 8) = 0;
    *(_BYTE *)(v20 + 16) = 0;
    OUTLINED_FUNCTION_162_0();
    OUTLINED_FUNCTION_17_1(v20, v36, type metadata accessor for MLProgram.Value.ImmediateValue);
  }
  else
  {
    v37 = OUTLINED_FUNCTION_179_0();
    OUTLINED_FUNCTION_20_8(v37, v38);
    sub_240BE0BF4((uint64_t)v32, v22, type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value);
    sub_240C79C08();
    OUTLINED_FUNCTION_148_1(v39, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
    OUTLINED_FUNCTION_42_8((uint64_t)v32);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t static MLProgram.Value.Representation.blobFile(fileName:offset:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t result;

  OUTLINED_FUNCTION_61_5();
  OUTLINED_FUNCTION_55_0();
  result = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a4 = a1;
  a4[1] = a2;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    a4[2] = a3;
    type metadata accessor for MLProgram.Value.Representation(0);
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void MLProgram.Value.BlobFileValue.init(fileName:offset:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  OUTLINED_FUNCTION_61_5();
  OUTLINED_FUNCTION_153_0();
  *a4 = a1;
  a4[1] = a2;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    a4[2] = a3;
    OUTLINED_FUNCTION_156();
  }
}

void sub_240C77F20()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t EnumCaseMultiPayload;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  type metadata accessor for MLProgram.Value.Representation(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_60();
  type metadata accessor for MLProgram.Value.BlobFileValue(v9);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11_5();
  v11 = OUTLINED_FUNCTION_104_1();
  sub_240BE0BF4(v11, v12, type metadata accessor for MLProgram.Value.Representation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    OUTLINED_FUNCTION_148_1(EnumCaseMultiPayload, type metadata accessor for MLProgram.Value.Representation);
    v14 = OUTLINED_FUNCTION_179_0();
    OUTLINED_FUNCTION_141_1(v14, v15);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_5_4();
    *v1 = v5;
    v1[1] = v3;
    OUTLINED_FUNCTION_141_1((uint64_t)v1, v7);
    OUTLINED_FUNCTION_149_1();
  }
  else
  {
    sub_240C7A780(v0, type metadata accessor for MLProgram.Value.Representation);
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_13();
}

void sub_240C78004()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t EnumCaseMultiPayload;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v7 = v6;
  v8 = sub_240F1C870();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_60();
  type metadata accessor for MLProgram.Value.Representation(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_89();
  type metadata accessor for MLProgram.Value.BlobFileValue(v12);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_11_5();
  sub_240BE0BF4(v7, v2, type metadata accessor for MLProgram.Value.Representation);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    OUTLINED_FUNCTION_53_8(EnumCaseMultiPayload, type metadata accessor for MLProgram.Value.Representation);
    OUTLINED_FUNCTION_156_0(v2, v1);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v0, v5, v8);
    sub_240F1C840();
    OUTLINED_FUNCTION_178_0(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    sub_240C7A5FC();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_156_0(v1, v7);
    OUTLINED_FUNCTION_101_3();
    OUTLINED_FUNCTION_149_1();
  }
  else
  {
    sub_240C7A780(v2, type metadata accessor for MLProgram.Value.Representation);
  }
  OUTLINED_FUNCTION_1();
}

void MLProgram.Value.Representation.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t (*v14)(_QWORD);

  v5 = v2;
  type metadata accessor for MLProgram.Value.BlobFileValue(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_250();
  type metadata accessor for MLProgram.Value.ImmediateValue(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_12_12();
  type metadata accessor for MLProgram.Value.Representation(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_313();
  sub_240BE0BF4(v5, v4, v12);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    OUTLINED_FUNCTION_20_8(v4, v1);
    OUTLINED_FUNCTION_134_1();
    OUTLINED_FUNCTION_61_5();
    sub_240BE18B8(&qword_25708CDC8, type metadata accessor for Proto_MILSpec_Value.BlobFileValue, (uint64_t)&unk_240F32080);
    OUTLINED_FUNCTION_88_2();
    v13 = OUTLINED_FUNCTION_101_3();
  }
  else
  {
    OUTLINED_FUNCTION_28(v4, v3);
    OUTLINED_FUNCTION_125_3();
    MLProgram.Value.ImmediateValue.hash(into:)(a1);
    v13 = OUTLINED_FUNCTION_166_0();
  }
  sub_240C7A780(v13, v14);
  OUTLINED_FUNCTION_42();
}

void static MLProgram.Value.Representation.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  BOOL v46;
  uint64_t (*v47)(uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v27 = v26;
  type metadata accessor for MLProgram.Value.BlobFileValue(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (uint64_t *)((char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for MLProgram.Value.ImmediateValue(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  v33 = (char *)&a9 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MLProgram.Value.Representation(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_11_3();
  v37 = (_QWORD *)(v35 - v36);
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_110_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CDD0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_86_2();
  v41 = v20 + v40;
  sub_240BE0BF4(v27, v20, type metadata accessor for MLProgram.Value.Representation);
  sub_240BE0BF4(v25, v41, type metadata accessor for MLProgram.Value.Representation);
  v42 = OUTLINED_FUNCTION_363();
  if ((_DWORD)v42 != 1)
  {
    OUTLINED_FUNCTION_144_1(v42, v43, type metadata accessor for MLProgram.Value.Representation);
    if (OUTLINED_FUNCTION_363() != 1)
    {
      OUTLINED_FUNCTION_142_1(v41);
      static MLProgram.Value.ImmediateValue.== infix(_:_:)();
      OUTLINED_FUNCTION_108_2((uint64_t)v33);
      OUTLINED_FUNCTION_108_2(v21);
      OUTLINED_FUNCTION_53_8(v49, type metadata accessor for MLProgram.Value.Representation);
      goto LABEL_16;
    }
    v47 = type metadata accessor for MLProgram.Value.ImmediateValue;
    v48 = v21;
    goto LABEL_13;
  }
  sub_240BE0BF4(v20, (uint64_t)v37, type metadata accessor for MLProgram.Value.Representation);
  v44 = OUTLINED_FUNCTION_363();
  if ((_DWORD)v44 != 1)
  {
    v47 = type metadata accessor for MLProgram.Value.BlobFileValue;
    v48 = (uint64_t)v37;
LABEL_13:
    sub_240C7A780(v48, v47);
    sub_240BE0B68(v20, &qword_25708CDD0);
    goto LABEL_16;
  }
  OUTLINED_FUNCTION_176_0(v44, v45, type metadata accessor for MLProgram.Value.BlobFileValue);
  v46 = *v37 == *v30 && v37[1] == v30[1];
  if ((v46 || (sub_240F1CEDC() & 1) != 0) && v37[2] == v30[2])
  {
    OUTLINED_FUNCTION_61_5();
    OUTLINED_FUNCTION_20_0();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_104_1();
    sub_240F1CC90();
  }
  OUTLINED_FUNCTION_19_9((uint64_t)v30);
  OUTLINED_FUNCTION_19_9((uint64_t)v37);
  OUTLINED_FUNCTION_53_8(v50, type metadata accessor for MLProgram.Value.Representation);
LABEL_16:
  OUTLINED_FUNCTION_1();
}

void static MLProgram.Value.ImmediateValue.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  char *v16;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  type metadata accessor for MLProgram.Value.Dictionary(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_0();
  v4 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.Value.List(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v6 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.Value.Tuple(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_10();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_110_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CDD8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_86_2();
  sub_240BE0BF4(v2, v0, type metadata accessor for MLProgram.Value.ImmediateValue);
  OUTLINED_FUNCTION_147_1();
  sub_240BE0BF4(v13, v14, v15);
  v16 = (char *)sub_240C78638 + 4 * byte_240F22908[OUTLINED_FUNCTION_143_1()];
  __asm { BR              X10 }
}

#error "240C788D0: call analysis failed (funcsize=35)"

void static MLProgram.Value.BlobFileValue.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  BOOL v29;
  uint64_t v30;

  OUTLINED_FUNCTION_66();
  a17 = v19;
  a18 = v20;
  v22 = v21;
  v24 = v23;
  v25 = OUTLINED_FUNCTION_20_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - v27;
  v29 = *v24 == *v22 && v24[1] == v22[1];
  if ((v29 || (sub_240F1CEDC() & 1) != 0) && v24[2] == v22[2])
  {
    v30 = OUTLINED_FUNCTION_61_5();
    OUTLINED_FUNCTION_168_0(v30, (uint64_t)v24 + *(int *)(v30 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v30 + 24));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_12_4(v18);
    OUTLINED_FUNCTION_12_4((uint64_t)v28);
  }
  OUTLINED_FUNCTION_13();
}

void MLProgram.Value.Representation.hashValue.getter()
{
  sub_240C7A42C((void (*)(_BYTE *))MLProgram.Value.Representation.hash(into:));
}

void sub_240C78A44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C7A46C(a1, a2, a3, (void (*)(_BYTE *))MLProgram.Value.Representation.hash(into:));
}

uint64_t MLProgram.Value.Representation.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v27 = v4;
  v28 = v5;
  type metadata accessor for MLProgram.Value.BlobFileValue(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_12_12();
  type metadata accessor for MLProgram.Value.Dictionary(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_90();
  type metadata accessor for MLProgram.Value.List(v9);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  type metadata accessor for MLProgram.Value.Tuple(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v23 - v14;
  type metadata accessor for MLProgram.Value.Representation(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_61();
  sub_240BE0BF4(v0, v3, v17);
  v18 = OUTLINED_FUNCTION_175_0();
  if ((_DWORD)v18 != 1)
  {
    OUTLINED_FUNCTION_37_5(v3, (uint64_t)v15);
    sub_240BE0BF4((uint64_t)v15, v2, type metadata accessor for MLProgram.Value.ImmediateValue);
    v21 = (char *)&loc_240C78C50 + dword_240C78E2C[OUTLINED_FUNCTION_160_0()];
    __asm { BR              X10 }
  }
  OUTLINED_FUNCTION_176_0(v18, v19, type metadata accessor for MLProgram.Value.BlobFileValue);
  v24 = 0;
  v25 = 0xE000000000000000;
  sub_240F1CDEC();
  swift_bridgeObjectRelease();
  v24 = 0x6C696628626F6C42;
  v25 = 0xEF203A656D614E65;
  OUTLINED_FUNCTION_120_2();
  sub_240F1CCE4();
  OUTLINED_FUNCTION_100_1();
  sub_240F1CCE4();
  if ((*(_QWORD *)(v1 + 16) & 0x8000000000000000) != 0)
  {
    __break(1u);
    JUMPOUT(0x240C78E2CLL);
  }
  v26 = *(_QWORD *)(v1 + 16);
  sub_240F1CED0();
  OUTLINED_FUNCTION_131_2();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_11_12();
  v20 = v24;
  sub_240C7A780(v1, type metadata accessor for MLProgram.Value.BlobFileValue);
  return v20;
}

void _s20MLModelSpecification9MLProgramV5ValueV5TupleV8elementsSayAEGvg_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_18_1();
    sub_240BF0AF4();
    type metadata accessor for Proto_MILSpec_Value(0);
    OUTLINED_FUNCTION_51_2();
    v6 = v3 + v5;
    v8 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_240BE0BF4(v6, v0, type metadata accessor for Proto_MILSpec_Value);
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_240BF0AF4();
      OUTLINED_FUNCTION_78_3();
      OUTLINED_FUNCTION_141_1(v0, v10 + v11 * v9);
      v6 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void MLProgram.Value.Dictionary.keyValuePairs.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CDE0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_11_3();
  v5 = v3 - v4;
  MEMORY[0x24BDAC7A8](v6);
  v46 = (uint64_t)&v41 - v7;
  v8 = OUTLINED_FUNCTION_101();
  v9 = type metadata accessor for Proto_MILSpec_Value(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11_3();
  v13 = (_QWORD *)(v11 - v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v41 - v15);
  v47 = type metadata accessor for Proto_MILSpec_DictionaryValue.KeyValuePair(0);
  v17 = *(_QWORD *)(v47 - 8);
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_10_3();
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C128);
  v44 = *(_QWORD *)(v18 - 8);
  v45 = v18;
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *v0;
  v23 = *(_QWORD *)(*v0 + 16);
  if (v23)
  {
    v48 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF0B20();
    v24 = *(unsigned __int8 *)(v17 + 80);
    v41 = v22;
    v25 = v22 + ((v24 + 32) & ~v24);
    v42 = *(_QWORD *)(v17 + 72);
    v43 = v5;
    do
    {
      v26 = OUTLINED_FUNCTION_305();
      sub_240BE0BF4(v26, v27, type metadata accessor for Proto_MILSpec_DictionaryValue.KeyValuePair);
      v28 = v46;
      sub_240C5E950(v1 + *(int *)(v47 + 20), v46, &qword_25708CDE0);
      if (__swift_getEnumTagSinglePayload(v28, 1, v9) == 1)
      {
        *v16 = 0;
        v16[1] = 0xE000000000000000;
        v29 = OUTLINED_FUNCTION_126_2();
        OUTLINED_FUNCTION_163_0(v29);
        _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
        v30 = (uint64_t)v16 + *(int *)(v9 + 28);
        v31 = type metadata accessor for Proto_MILSpec_ValueType(0);
        OUTLINED_FUNCTION_18_0(v30, v32, v33, v31);
        sub_240BE0B68(v28, &qword_25708CDE0);
      }
      else
      {
        OUTLINED_FUNCTION_37_5(v28, (uint64_t)v16);
      }
      OUTLINED_FUNCTION_37_5((uint64_t)v16, (uint64_t)v21);
      sub_240C5E950(v1 + *(int *)(v47 + 24), v5, &qword_25708CDE0);
      if (__swift_getEnumTagSinglePayload(v5, 1, v9) == 1)
      {
        *v13 = 0;
        v13[1] = 0xE000000000000000;
        v34 = OUTLINED_FUNCTION_126_2();
        OUTLINED_FUNCTION_163_0(v34);
        _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
        v35 = (uint64_t)v13 + *(int *)(v9 + 28);
        v36 = type metadata accessor for Proto_MILSpec_ValueType(0);
        OUTLINED_FUNCTION_18_0(v35, v37, v38, v36);
        sub_240BE0B68(v5, &qword_25708CDE0);
      }
      else
      {
        OUTLINED_FUNCTION_37_5(v5, (uint64_t)v13);
      }
      OUTLINED_FUNCTION_37_5((uint64_t)v13, (uint64_t)&v21[*(int *)(v45 + 48)]);
      sub_240C7A780(v1, type metadata accessor for Proto_MILSpec_DictionaryValue.KeyValuePair);
      v39 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0B20();
        v39 = v48;
      }
      v40 = *(_QWORD *)(v39 + 16);
      if (v40 >= *(_QWORD *)(v39 + 24) >> 1)
      {
        sub_240BF0B20();
        v39 = v48;
      }
      *(_QWORD *)(v39 + 16) = v40 + 1;
      sub_240C7BF94((uint64_t)v21, v39+ ((*(unsigned __int8 *)(v44 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80))+ *(_QWORD *)(v44 + 72) * v40);
      v5 = v43;
      v25 += v42;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.Value.BlobFileValue.offset.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 16);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t sub_240C792D0()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = 4;
  else
    v1 = 0;
  return ((uint64_t (*)(void))((char *)&loc_240C792F4
                            + *((int *)qword_240C79360 + ((*(_QWORD *)(v0 + 8) >> 60) & 3 | v1))))();
}

uint64_t sub_240C79304@<X0>(uint64_t a1@<X8>)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t sub_240C7930C()
{
  unint64_t v0;

  return ((uint64_t (*)(_QWORD))((char *)&loc_240C7931C + dword_240C7937C[v0 >> 62]))(0);
}

uint64_t sub_240C7932C()
{
  uint64_t v0;

  return BYTE6(v0);
}

void sub_240C7938C()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

unint64_t sub_240C793E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_5_17();
    v2 = v9;
    v3 = v0 + 32;
    do
    {
      OUTLINED_FUNCTION_8_14();
      v4 = sub_240F1CD80();
      OUTLINED_FUNCTION_103_2(v4, v5);
      if (v6)
      {
        OUTLINED_FUNCTION_29_8();
        v2 = v9;
      }
      OUTLINED_FUNCTION_102_2();
      v3 += 4;
      --v1;
    }
    while (v1);
  }
  v7 = OUTLINED_FUNCTION_113();
  *(_QWORD *)(v7 + 16) = v2;
  return v7 | 0x8000000000000000;
}

void sub_240C79724()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = OUTLINED_FUNCTION_113();
  v3 = OUTLINED_FUNCTION_101_3();
  sub_240BF5610(v3, v4);
  v5 = OUTLINED_FUNCTION_101_3();
  sub_240C7723C(v5, v6);
  v8 = v7;
  OUTLINED_FUNCTION_158_0(v0, v1);
  *(_QWORD *)(v2 + 16) = v8;
  JUMPOUT(0x240C796FCLL);
}

void sub_240C7976C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  __int128 v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_22();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C128);
  v0 = *(_QWORD *)(v31 - 8);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_85();
  v30 = v1;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v2);
  v29 = (uint64_t)v25 - v3;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v4);
  v28 = (char *)v25 - v5;
  MLProgram.Value.Dictionary.keyValuePairs.getter();
  v7 = v6;
  v8 = *(_QWORD *)(v6 + 16);
  if (v8)
  {
    v33 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_18_1();
    sub_240BF0A64();
    v9 = *(unsigned __int8 *)(v0 + 80);
    v25[1] = v7;
    v10 = v7 + ((v9 + 32) & ~v9);
    v27 = *(_QWORD *)(v0 + 72);
    v11 = v33;
    v26 = xmmword_240F1D370;
    v12 = (uint64_t)v28;
    do
    {
      v32 = v8;
      sub_240C5E950(v10, v12, &qword_25708C128);
      v13 = OUTLINED_FUNCTION_113();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF38);
      v14 = OUTLINED_FUNCTION_113();
      *(_OWORD *)(v14 + 16) = v26;
      v15 = v31;
      v16 = *(int *)(v31 + 48);
      v17 = v29;
      v18 = v29 + v16;
      v19 = v12 + v16;
      OUTLINED_FUNCTION_106_2(v12, v29);
      OUTLINED_FUNCTION_106_2(v19, v18);
      *(_QWORD *)(v14 + 32) = sub_240DD12C8();
      OUTLINED_FUNCTION_112_3(v17);
      v20 = *(int *)(v15 + 48);
      v21 = v30;
      v22 = v30 + v20;
      OUTLINED_FUNCTION_106_2(v12, v30);
      OUTLINED_FUNCTION_106_2(v19, v22);
      *(_QWORD *)(v14 + 40) = sub_240DD12C8();
      OUTLINED_FUNCTION_112_3(v22);
      OUTLINED_FUNCTION_112_3(v21);
      OUTLINED_FUNCTION_112_3(v18);
      *(_QWORD *)(v13 + 16) = v14;
      sub_240BE0B68(v12, &qword_25708C128);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_43_8();
        v11 = v33;
      }
      v23 = *(_QWORD *)(v11 + 16);
      v24 = v32;
      if (v23 >= *(_QWORD *)(v11 + 24) >> 1)
      {
        OUTLINED_FUNCTION_43_8();
        v11 = v33;
      }
      *(_QWORD *)(v11 + 16) = v23 + 1;
      *(_QWORD *)(v11 + 8 * v23 + 32) = v13 | 0x8000000000000000;
      v10 += v27;
      v8 = v24 - 1;
    }
    while (v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v11 = MEMORY[0x24BEE4AF8];
  }
  *(_QWORD *)(OUTLINED_FUNCTION_113() + 16) = v11;
  OUTLINED_FUNCTION_1();
}

void sub_240C799E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_26_3();
  type metadata accessor for MLProgram.Value.Dictionary(v2);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for MLProgram.Value.List(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  type metadata accessor for MLProgram.Value.Tuple(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CEE0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_58_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_61();
  sub_240BE0BF4(v0, v1, v9);
  v10 = (char *)sub_240C79AF8 + 4 * byte_240F22913[OUTLINED_FUNCTION_175_0()];
  __asm { BR              X10 }
}

void sub_240C79AF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;
  uint64_t v7;

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(v2 + 8);
  v6 = *(_BYTE *)(v2 + 16);
  OUTLINED_FUNCTION_123_3();
  OUTLINED_FUNCTION_150(v1, 1);
  sub_240C7C150(v4, v5, v6);
  OUTLINED_FUNCTION_54_9();
  *(_QWORD *)(v3 - 104) = v4;
  *(_QWORD *)(v3 - 96) = v5;
  *(_BYTE *)(v3 - 88) = v6;
  sub_240C7AA14();
  OUTLINED_FUNCTION_150(v0, 0);
  sub_240C5E97C(v0, v1, &qword_25708CEE0);
  OUTLINED_FUNCTION_17_1(v1, v7, type metadata accessor for Proto_MILSpec_TensorValue);
  OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_135_2();
  OUTLINED_FUNCTION_124_2();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_1();
}

void sub_240C79C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  char *v11;

  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CEE0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_MILSpec_TensorValue.OneOf_Value(v1);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_11_3();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_71_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_57_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_3();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_124_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_18();
  v8 = OUTLINED_FUNCTION_166_0();
  sub_240BE0BF4(v8, v9, v10);
  v11 = (char *)sub_240C79D28 + 4 * byte_240F22917[OUTLINED_FUNCTION_143_1()];
  __asm { BR              X10 }
}

#error "240C79E68: call analysis failed (funcsize=65)"

#error "240C79F6C: call analysis failed (funcsize=42)"

uint64_t sub_240C79F94()
{
  uint64_t v0;
  unint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  v3 = OUTLINED_FUNCTION_125_3();
  if (v2)
    v4 = 4;
  else
    v4 = 0;
  return ((uint64_t (*)(uint64_t))((char *)sub_240C79FCC + 4
                                                                  * byte_240F2291F[(v1 >> 60) & 3 | v4]))(v3);
}

void sub_240C79FCC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_125_3();
  v0 = OUTLINED_FUNCTION_55_4();
  sub_240C7C0FC(v0, v1);
  OUTLINED_FUNCTION_105_3();
  OUTLINED_FUNCTION_13();
}

uint64_t static MLProgram.Value.Tensor.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int v18;

  OUTLINED_FUNCTION_66();
  if (*(_BYTE *)(v10 + 16))
    v18 = 4;
  else
    v18 = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_240C7A1CC + 4 * byte_240F22926[(*(_QWORD *)(v10 + 8) >> 60) & 3 | v18]))(v10, v11, v12, v13, v14, v15, v16, v17, a9, a10);
}

void sub_240C7A1CC()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  int v5;
  int v6;
  char v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_21_9();
  if (v7)
    v6 = 0;
  if (!(v5 | v6))
  {
    v8 = OUTLINED_FUNCTION_11_4();
    sub_240BEAAF8(v8, v9);
  }
  OUTLINED_FUNCTION_15_12();
  OUTLINED_FUNCTION_158_0(v0, v2);
  sub_240C7BC94(v1, v3, v4);
  OUTLINED_FUNCTION_13();
}

void static MLProgram.Value.Tuple.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_240C7A338(a1, a2, (uint64_t)sub_240BEAAE4, (uint64_t)type metadata accessor for Proto_MILSpec_TupleValue, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void static MLProgram.Value.List.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_240C7A338(a1, a2, (uint64_t)sub_240BEAAE4, (uint64_t)type metadata accessor for Proto_MILSpec_ListValue, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void static MLProgram.Value.Dictionary.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_240C7A338(a1, a2, (uint64_t)sub_240BEAAD0, (uint64_t)type metadata accessor for Proto_MILSpec_DictionaryValue, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

void sub_240C7A338(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(_QWORD);
  uint64_t (*v22)(_QWORD);
  uint64_t (*v23)(_QWORD, _QWORD);
  uint64_t (*v24)(_QWORD, _QWORD);
  _QWORD *v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;

  OUTLINED_FUNCTION_66();
  a17 = v19;
  a18 = v20;
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v29 = OUTLINED_FUNCTION_20_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - v31;
  if ((v24(*v28, *v26) & 1) != 0)
  {
    v33 = v22(0);
    OUTLINED_FUNCTION_168_0(v33, (uint64_t)v28 + *(int *)(v33 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v33 + 20));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_12_4(v18);
    OUTLINED_FUNCTION_12_4((uint64_t)v32);
  }
  OUTLINED_FUNCTION_13();
}

void MLProgram.Value.ImmediateValue.hashValue.getter()
{
  sub_240C7A42C((void (*)(_BYTE *))MLProgram.Value.ImmediateValue.hash(into:));
}

void sub_240C7A42C(void (*a1)(_BYTE *))
{
  _BYTE v2[72];

  OUTLINED_FUNCTION_22_7();
  a1(v2);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_19_7();
}

void sub_240C7A460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C7A46C(a1, a2, a3, (void (*)(_BYTE *))MLProgram.Value.ImmediateValue.hash(into:));
}

void sub_240C7A46C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_BYTE *))
{
  _BYTE v5[72];

  sub_240F1CF3C();
  a4(v5);
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_19_7();
}

void sub_240C7A4A0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  MLProgram.Value.BlobFileValue.fileName.setter(v1, v2);
}

void MLProgram.Value.BlobFileValue.fileName.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C7A514(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_156();
  }
}

uint64_t MLProgram.Value.BlobFileValue.offset.setter(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
    __break(1u);
  else
    *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t *(*MLProgram.Value.BlobFileValue.offset.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v2;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v2;
    return sub_240C7A59C;
  }
  return result;
}

uint64_t *sub_240C7A59C(uint64_t *result, char a2)
{
  uint64_t v2;

  v2 = *result;
  if ((a2 & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
LABEL_5:
      *(_QWORD *)(result[1] + 16) = v2;
      return result;
    }
    __break(1u);
  }
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MLProgram.Value.Representation(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CE78);
}

uint64_t type metadata accessor for MLProgram.Value.BlobFileValue(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CE98);
}

uint64_t type metadata accessor for MLProgram.Value.ImmediateValue(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CE88);
}

uint64_t sub_240C7A5FC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t result;

  if ((sub_240F1CD08() & 1) != 0)
  {
    OUTLINED_FUNCTION_329();
  }
  else
  {
    OUTLINED_FUNCTION_329();
    sub_240F1CCE4();
  }
  v1 = *v0;
  v2 = v0[1];
  swift_bridgeObjectRetain();
  v3 = sub_240F1CCFC();
  OUTLINED_FUNCTION_5_4();
  if ((v3 & 1) == 0)
    return swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCCC();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_147_1();
  sub_240F1CCD8();
  OUTLINED_FUNCTION_5_4();
  sub_240C7E040();
  result = sub_240F1CCB4();
  *v0 = v1;
  v0[1] = v2;
  return result;
}

uint64_t MLProgram.Value.BlobFileValue.hash(into:)(uint64_t a1)
{
  return sub_240C7BC0C(a1, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
}

void MLProgram.Value.BlobFileValue.hashValue.getter()
{
  sub_240C7BCF4((void (*)(_QWORD))type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
}

void sub_240C7A780(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_174_0(a1, a2);
  OUTLINED_FUNCTION_33(v2);
  OUTLINED_FUNCTION_44();
}

void sub_240C7A7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C7BD60(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
}

void MLProgram.Value.BlobFileValue.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v25 = v20;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_43_7();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  v30 = OUTLINED_FUNCTION_90();
  type metadata accessor for MLProgram.Value.BlobFileValue(v30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v25, v32, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v34 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v34 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v34 + 32) = 0x656D614E656C6966;
  *(_QWORD *)(v34 + 40) = 0xE800000000000000;
  v35 = v25[1];
  v36 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v34 + 48) = *v25;
  *(_QWORD *)(v34 + 56) = v35;
  *(_QWORD *)(v34 + 72) = v36;
  *(_QWORD *)(v34 + 80) = 0x74657366666FLL;
  *(_QWORD *)(v34 + 88) = 0xE600000000000000;
  v37 = v25[2];
  if (v37 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v34 + 120) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v34 + 96) = v37;
    v38 = OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_18_0(v21, v39, v40, v38);
    OUTLINED_FUNCTION_46_4((uint64_t)v28, *MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 104));
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_305();
    sub_240F1CFA8();
    OUTLINED_FUNCTION_1();
  }
}

uint64_t MLProgram.Value.BlobFileValue.debugDescription.getter()
{
  uint64_t v0;
  uint64_t result;

  sub_240F1CDEC();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_120_2();
  sub_240F1CCE4();
  OUTLINED_FUNCTION_100_1();
  result = sub_240F1CCE4();
  if ((*(_QWORD *)(v0 + 16) & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    sub_240F1CED0();
    sub_240F1CCE4();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_11_12();
    return 0xD000000000000019;
  }
  return result;
}

void sub_240C7AA14()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X11 }
}

uint64_t sub_240C7AA5C()
{
  _QWORD *v0;
  uint64_t v1;

  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedFloats(0);
  OUTLINED_FUNCTION_9_10();
  OUTLINED_FUNCTION_54_9();
  *v0 = v1;
  OUTLINED_FUNCTION_123_3();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_240C7AB54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t EnumCaseMultiPayload;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_22();
  v12 = OUTLINED_FUNCTION_26_3();
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBytes(v12);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_12_12();
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedDoubles(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  v16 = OUTLINED_FUNCTION_90();
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedLongInts(v16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedStrings(v18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBools(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  v21 = OUTLINED_FUNCTION_89();
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedInts(v21);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_10_3();
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedFloats(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_123_3();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)sub_240C7AC5C + 4 * byte_240F22934[EnumCaseMultiPayload]))(EnumCaseMultiPayload, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

void sub_240C7AC5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_20_8(v1, (uint64_t)v2);
  v3 = *v2;
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_42_8((uint64_t)v2);
  *(_QWORD *)v0 = v3;
  *(_QWORD *)(v0 + 8) = 0;
  *(_BYTE *)(v0 + 16) = 0;
  OUTLINED_FUNCTION_1();
}

void MLProgram.Value.Tensor.hash(into:)()
{
  uint64_t v0;
  int v1;

  if (*(_BYTE *)(v0 + 16))
    v1 = 4;
  else
    v1 = 0;
  __asm { BR              X10 }
}

uint64_t sub_240C7ADFC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_7();
  v0 = OUTLINED_FUNCTION_90_2();
  return sub_240C7C0FC(v0, v1);
}

uint64_t sub_240C7AE1C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_7();
  v0 = OUTLINED_FUNCTION_90_2();
  return sub_240C7C0B0(v0, v1);
}

uint64_t sub_240C7AE3C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_48_7();
  v0 = OUTLINED_FUNCTION_90_2();
  return sub_240C7C064(v0, v1);
}

void sub_240C7AE5C()
{
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_90_2();
  sub_240C7C018();
}

void sub_240C7AE7C()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);

  OUTLINED_FUNCTION_48_7();
  v0 = OUTLINED_FUNCTION_90_2();
  sub_240C7E088(v0, v1, v2);
  OUTLINED_FUNCTION_42();
}

void sub_240C7AE9C()
{
  OUTLINED_FUNCTION_48_7();
  OUTLINED_FUNCTION_90_2();
  sub_240C7BFDC();
}

uint64_t sub_240C7AEBC()
{
  uint64_t v0;
  unint64_t v1;
  char v2;

  OUTLINED_FUNCTION_48_7();
  sub_240BF5610(v0, v1 & 0xCFFFFFFFFFFFFFFFLL);
  sub_240F1C8B8();
  return sub_240C7BC94(v0, v1, v2);
}

void MLProgram.Value.Tensor.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  OUTLINED_FUNCTION_22_7();
  if (v2)
    v3 = 4;
  else
    v3 = 0;
  __asm { BR              X10 }
}

#error "240C7AF5C: call analysis failed (funcsize=8)"

void sub_240C7B028()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(unsigned __int8 *)(v0 + 16);
  sub_240F1CF3C();
  if (v2)
    v3 = 4;
  else
    v3 = 0;
  __asm { BR              X10 }
}

uint64_t sub_240C7B07C()
{
  uint64_t v0;
  uint64_t v2;

  sub_240F1CF48();
  sub_240C7C0FC((uint64_t)&v2, v0);
  return sub_240F1CF78();
}

void MLProgram.Value.Tuple.elements.modify(_QWORD *a1)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = MLProgram.Value.List.elements.getter();
  OUTLINED_FUNCTION_44();
}

void MLProgram.Value.Tuple.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_240C7B794(a1, a2, a3, type metadata accessor for Proto_MILSpec_TupleValue, (uint64_t)sub_240C7B1D8, a4);
}

void sub_240C7B1D8(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240BE0BF4(a1, a2, type metadata accessor for Proto_MILSpec_Value);
}

void sub_240C7B208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  void (*v11)(char *, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  void (*v35)(uint64_t, void (*)(char *, uint64_t, uint64_t));
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  void (*v40)(uint64_t, char *);
  _QWORD v41[2];
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  void (*v56)(char *, uint64_t, uint64_t);
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;

  v43 = a8;
  v44 = a5;
  v57 = a1;
  v58 = a2;
  v42 = *(_QWORD *)(a5 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_85();
  v56 = v11;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v12);
  v55 = (char *)v41 - v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v59 = *(_QWORD *)(AssociatedTypeWitness - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v17);
  v47 = (char *)v41 - v18;
  OUTLINED_FUNCTION_101();
  v19 = sub_240F1CD98();
  v45 = *(_QWORD *)(v19 - 8);
  v46 = v19;
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_85();
  v53 = v21;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)v41 - v23;
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_85();
  v41[1] = v26;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v27);
  v52 = *(_QWORD *)(v15 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_2_0();
  v51 = v29;
  v50 = a6;
  v60 = swift_getAssociatedTypeWitness();
  v48 = *(_QWORD *)(v60 - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v30);
  v54 = (char *)v41 - v31;
  v32 = sub_240F1CD2C();
  v61 = sub_240F1CE10();
  sub_240F1CE1C();
  sub_240F1CDF8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v52 + 16))(v51, v49, v15);
  v52 = v15;
  sub_240F1CD20();
  if (v32 < 0)
  {
    __break(1u);
LABEL_20:
    __break(1u);
    return;
  }
  if (v32)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      OUTLINED_FUNCTION_119_2();
      OUTLINED_FUNCTION_129_3((uint64_t)v24);
      if (v33)
        goto LABEL_20;
      v34 = OUTLINED_FUNCTION_155_0();
      v35(v34, v56);
      if (v8)
      {
        OUTLINED_FUNCTION_33_8();
        swift_release();
        (*(void (**)(uint64_t, _QWORD, uint64_t))(v42 + 32))(v43, v56, v44);
        OUTLINED_FUNCTION_17_15();
        goto LABEL_18;
      }
      OUTLINED_FUNCTION_17_15();
      OUTLINED_FUNCTION_116_2();
      if (!--v32)
      {
        v36 = v53;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v36 = v53;
LABEL_9:
  sub_240F1CDA4();
  OUTLINED_FUNCTION_129_3(v36);
  v37 = v47;
  if (v33)
  {
    v38 = v53;
LABEL_15:
    OUTLINED_FUNCTION_33_8();
    (*(void (**)(uint64_t, uint64_t))(v45 + 8))(v38, v46);
  }
  else
  {
    v56 = *(void (**)(char *, uint64_t, uint64_t))(v59 + 32);
    v38 = v53;
    while (1)
    {
      v56(v37, v38, AssociatedTypeWitness);
      v39 = OUTLINED_FUNCTION_155_0();
      v40(v39, v55);
      if (v8)
        break;
      OUTLINED_FUNCTION_17_15();
      OUTLINED_FUNCTION_116_2();
      OUTLINED_FUNCTION_119_2();
      OUTLINED_FUNCTION_129_3(v38);
      if (v33)
        goto LABEL_15;
    }
    OUTLINED_FUNCTION_17_15();
    OUTLINED_FUNCTION_33_8();
    swift_release();
    (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
  }
LABEL_18:
  OUTLINED_FUNCTION_7_5();
}

uint64_t MLProgram.Value.Tuple.hash(into:)(uint64_t a1)
{
  return sub_240C7BC0C(a1, type metadata accessor for Proto_MILSpec_TupleValue);
}

void MLProgram.Value.Tuple.hashValue.getter()
{
  sub_240C7BCF4((void (*)(_QWORD))type metadata accessor for Proto_MILSpec_TupleValue);
}

void sub_240C7B608(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C7BD60(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_MILSpec_TupleValue);
}

void MLProgram.Value.Tuple.init(arrayLiteral:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_240C7B8A4(a1, type metadata accessor for Proto_MILSpec_TupleValue, a2);
}

void MLProgram.Value.Tuple.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C7B914((uint64_t)type metadata accessor for MLProgram.Value.Tuple, (uint64_t)MLProgram.Value.Tuple.elements.getter, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void MLProgram.Value.Tuple.debugDescription.getter()
{
  sub_240C7BA68(0x28656C707554, 0xE600000000000000, (void (*)(uint64_t, uint64_t))MLProgram.Value.Tuple.elements.getter);
}

uint64_t sub_240C7B670()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return MLProgram.Value.List.elements.setter(v0);
}

void _s20MLModelSpecification9MLProgramV5ValueV5TupleV8elementsSayAEGvs_0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_171(a1);
  v3 = v2;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_152_0();
  *v1 = v3;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Value.List.elements.modify(_QWORD *a1)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = MLProgram.Value.List.elements.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C7B704(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = (_QWORD *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_329();
    sub_240C775E8(v3);
    v5 = v4;
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_111_3();
    *v2 = v5;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    OUTLINED_FUNCTION_171(*a1);
    v7 = v6;
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_111_3();
    *v2 = v7;
    OUTLINED_FUNCTION_6_2();
  }
}

void MLProgram.Value.List.init<A>(_:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  sub_240C7B794(a1, a2, a3, type metadata accessor for Proto_MILSpec_ListValue, (uint64_t)sub_240C7B1D8, a4);
}

void sub_240C7B794(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *a6 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_16_5(a1, a2, a3, a4);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v10 = type metadata accessor for Proto_MILSpec_Value(0);
  sub_240C7B208(a5, 0, a2, v10, MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v11);
  v13 = v12;
  OUTLINED_FUNCTION_178_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8));
  swift_bridgeObjectRelease();
  *a6 = v13;
  OUTLINED_FUNCTION_6_2();
}

uint64_t MLProgram.Value.List.hash(into:)(uint64_t a1)
{
  return sub_240C7BC0C(a1, type metadata accessor for Proto_MILSpec_ListValue);
}

void MLProgram.Value.List.hashValue.getter()
{
  sub_240C7BCF4((void (*)(_QWORD))type metadata accessor for Proto_MILSpec_ListValue);
}

void sub_240C7B878(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C7BD60(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_MILSpec_ListValue);
}

void MLProgram.Value.List.init(arrayLiteral:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  sub_240C7B8A4(a1, type metadata accessor for Proto_MILSpec_ListValue, a2);
}

void sub_240C7B8A4(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;

  *a3 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_174_0(a1, a2);
  OUTLINED_FUNCTION_153_0();
  OUTLINED_FUNCTION_171(a1);
  v6 = v5;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_152_0();
  *a3 = v6;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Value.List.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C7B914((uint64_t)type metadata accessor for MLProgram.Value.List, (uint64_t)MLProgram.Value.List.elements.getter, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240C7B914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(void);
  uint64_t (*v27)(void);
  void (*v28)(uint64_t);
  void (*v29)(uint64_t);
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  OUTLINED_FUNCTION_22();
  a19 = v24;
  a20 = v25;
  v27 = v26;
  v29 = v28;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_43_7();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  v32 = OUTLINED_FUNCTION_60();
  v29(v32);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v33);
  sub_240BE0BF4(v20, (uint64_t)&a9 - v34, (uint64_t (*)(_QWORD))v29);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v35 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v35 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v35 + 32) = 0x73746E656D656C65;
  *(_QWORD *)(v35 + 40) = 0xE800000000000000;
  v36 = v27();
  *(_QWORD *)(v35 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CE00);
  *(_QWORD *)(v35 + 48) = v36;
  v37 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v22, v38, v39, v37);
  OUTLINED_FUNCTION_46_4(v21, *MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 104));
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void MLProgram.Value.List.debugDescription.getter()
{
  sub_240C7BA68(0x287473694CLL, 0xE500000000000000, (void (*)(uint64_t, uint64_t))MLProgram.Value.List.elements.getter);
}

void sub_240C7BA68(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  a3(a1, a2);
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_165_0();
}

void sub_240C7BA90()
{
  OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_12_1();
}

void sub_240C7BAB4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Value.Dictionary.keyValuePairs.setter(v0);
}

void MLProgram.Value.Dictionary.keyValuePairs.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_170_0(a1);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_152_0();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Value.Dictionary.keyValuePairs.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  MLProgram.Value.Dictionary.keyValuePairs.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C7BB44(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_329();
    v4 = sub_240C776F8(v3);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_111_3();
    *v2 = v4;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_170_0(*a1);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_111_3();
    *v2 = v5;
    OUTLINED_FUNCTION_6_2();
  }
}

void MLProgram.Value.Dictionary.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_5_10();
  OUTLINED_FUNCTION_44();
}

uint64_t MLProgram.Value.Dictionary.hash(into:)(uint64_t a1)
{
  return sub_240C7BC0C(a1, type metadata accessor for Proto_MILSpec_DictionaryValue);
}

uint64_t sub_240C7BC0C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  OUTLINED_FUNCTION_174_0(a1, a2);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_179_0();
  return sub_240F1CC54();
}

uint64_t type metadata accessor for MLProgram.Value.Dictionary(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CEC8);
}

uint64_t type metadata accessor for MLProgram.Value.List(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CEB8);
}

uint64_t type metadata accessor for MLProgram.Value.Tuple(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CEA8);
}

uint64_t sub_240C7BC94(uint64_t result, unint64_t a2, char a3)
{
  int v3;

  if ((a3 & 1) != 0)
    v3 = 4;
  else
    v3 = 0;
  switch((a2 >> 60) & 3 | v3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_bridgeObjectRelease();
      break;
    case 6uLL:
      result = sub_240BF6AE0(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

void MLProgram.Value.Dictionary.hashValue.getter()
{
  sub_240C7BCF4((void (*)(_QWORD))type metadata accessor for Proto_MILSpec_DictionaryValue);
}

void sub_240C7BCF4(void (*a1)(_QWORD))
{
  OUTLINED_FUNCTION_22_7();
  a1(0);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_12_5();
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_8_6();
}

void sub_240C7BD44(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C7BD60(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_MILSpec_DictionaryValue);
}

void sub_240C7BD60(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  sub_240F1CF3C();
  a4(0);
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_12_5();
  OUTLINED_FUNCTION_77_1();
  OUTLINED_FUNCTION_8_6();
}

void _s20MLModelSpecification9MLProgramV5ValueV10DictionaryVyAGSayAE_AEtGcfC_0(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_72_5();
  OUTLINED_FUNCTION_153_0();
  v4 = OUTLINED_FUNCTION_170_0(a1);
  OUTLINED_FUNCTION_173();
  *a2 = v4;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Value.Dictionary.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_60();
  type metadata accessor for MLProgram.Value.Dictionary(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2(v0, v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA30;
  strcpy((char *)(v10 + 32), "keyValuePairs");
  *(_WORD *)(v10 + 46) = -4864;
  MLProgram.Value.Dictionary.keyValuePairs.getter();
  v12 = v11;
  *(_QWORD *)(v10 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CE08);
  *(_QWORD *)(v10 + 48) = v12;
  v13 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v2, v14, v15, v13);
  OUTLINED_FUNCTION_46_4(v1, *MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  OUTLINED_FUNCTION_305();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void MLProgram.Value.Dictionary.debugDescription.getter()
{
  OUTLINED_FUNCTION_66_5();
  MLProgram.Value.Dictionary.keyValuePairs.getter();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C128);
  OUTLINED_FUNCTION_165_0();
}

void sub_240C7BF70()
{
  OUTLINED_FUNCTION_141_2();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_11_12();
  OUTLINED_FUNCTION_12_1();
}

uint64_t sub_240C7BF94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C128);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_240C7BFDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_30_9();
  if (v0)
  {
    v2 = v1 + 32;
    do
    {
      v2 += 8;
      sub_240F1CF6C();
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_156();
}

void sub_240C7C018()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_30_9();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      OUTLINED_FUNCTION_120_2();
      OUTLINED_FUNCTION_147_1();
      sub_240F1CCC0();
      OUTLINED_FUNCTION_100_1();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_42();
}

uint64_t sub_240C7C064(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_240F1CF48();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      ++v5;
      result = sub_240F1CF54();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_240C7C0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_240F1CF48();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 4;
      result = sub_240F1CF60();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_240C7C0FC(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = *(_QWORD *)(a2 + 16);
  result = sub_240F1CF48();
  if (v3)
  {
    v5 = a2 + 32;
    do
    {
      v5 += 4;
      result = sub_240F1CF60();
      --v3;
    }
    while (v3);
  }
  return result;
}

uint64_t sub_240C7C150(uint64_t result, unint64_t a2, char a3)
{
  int v3;

  if ((a3 & 1) != 0)
    v3 = 4;
  else
    v3 = 0;
  switch((a2 >> 60) & 3 | v3)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
    case 5uLL:
      result = swift_bridgeObjectRetain();
      break;
    case 6uLL:
      result = sub_240BF5610(result, a2 & 0xCFFFFFFFFFFFFFFFLL);
      break;
    default:
      return result;
  }
  return result;
}

void sub_240C7C194()
{
  sub_240BE18B8(&qword_25708CE10, type metadata accessor for MLProgram.Value.Representation, (uint64_t)&protocol conformance descriptor for MLProgram.Value.Representation);
}

void sub_240C7C1C0()
{
  sub_240BE18B8(&qword_25708CE18, type metadata accessor for MLProgram.Value.ImmediateValue, (uint64_t)&protocol conformance descriptor for MLProgram.Value.ImmediateValue);
}

void sub_240C7C1EC()
{
  sub_240BE18B8(&qword_25708CE20, type metadata accessor for MLProgram.Value.BlobFileValue, (uint64_t)&protocol conformance descriptor for MLProgram.Value.BlobFileValue);
}

void sub_240C7C218()
{
  sub_240BE18B8(&qword_25708CE28, type metadata accessor for Proto_MILSpec_Value.ImmediateValue, (uint64_t)&unk_240F31C60);
}

void sub_240C7C244()
{
  sub_240BE18B8(&qword_25708CE30, type metadata accessor for Proto_MILSpec_Value.BlobFileValue, (uint64_t)&unk_240F31BE8);
}

unint64_t sub_240C7C274()
{
  unint64_t result;

  result = qword_25708CE38;
  if (!qword_25708CE38)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for MLProgram.Value.Tensor, &type metadata for MLProgram.Value.Tensor);
    atomic_store(result, (unint64_t *)&qword_25708CE38);
  }
  return result;
}

void sub_240C7C2B0()
{
  sub_240BE18B8(&qword_25708CE40, type metadata accessor for Proto_MILSpec_TensorValue, (uint64_t)&unk_240F31B70);
}

void sub_240C7C2DC()
{
  sub_240BE18B8(&qword_25708CE48, type metadata accessor for MLProgram.Value.Tuple, (uint64_t)&protocol conformance descriptor for MLProgram.Value.Tuple);
}

void sub_240C7C308()
{
  sub_240BE18B8(&qword_25708CE50, type metadata accessor for Proto_MILSpec_TupleValue, (uint64_t)&unk_240F31AF8);
}

void sub_240C7C334()
{
  sub_240BE18B8(&qword_25708CE58, type metadata accessor for MLProgram.Value.List, (uint64_t)&protocol conformance descriptor for MLProgram.Value.List);
}

void sub_240C7C360()
{
  sub_240BE18B8(&qword_25708CE60, type metadata accessor for Proto_MILSpec_ListValue, (uint64_t)&unk_240F31A80);
}

void sub_240C7C38C()
{
  sub_240BE18B8(&qword_25708CE68, type metadata accessor for MLProgram.Value.Dictionary, (uint64_t)&protocol conformance descriptor for MLProgram.Value.Dictionary);
}

void sub_240C7C3B8()
{
  sub_240BE18B8(&qword_25708CE70, type metadata accessor for Proto_MILSpec_DictionaryValue, (uint64_t)&unk_240F31A08);
}

void sub_240C7C3E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  MLProgram.Value.BlobFileValue.fileName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C7C408()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = MLProgram.Value.BlobFileValue.offset.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C7C428(uint64_t *a1)
{
  MLProgram.Value.BlobFileValue.offset.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C7C448()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_103();
  *v0 = MLProgram.Value.List.elements.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C7C470()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Value.Dictionary.keyValuePairs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s14RepresentationOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for MLProgram.Value.ImmediateValue(0);
      v13 = (char *)&loc_240C7C594 + 4 * byte_240F2295E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s14RepresentationOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for MLProgram.Value.ImmediateValue(0);
    result = swift_getEnumCaseMultiPayload();
    switch((int)result)
    {
      case 0:
        return sub_240C7BC94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      case 1:
        swift_bridgeObjectRelease();
        v4 = type metadata accessor for Proto_MILSpec_TupleValue(0);
        goto LABEL_8;
      case 2:
        swift_bridgeObjectRelease();
        v4 = type metadata accessor for Proto_MILSpec_ListValue(0);
        goto LABEL_8;
      case 3:
        swift_bridgeObjectRelease();
        v4 = type metadata accessor for Proto_MILSpec_DictionaryValue(0);
LABEL_8:
        v2 = *(int *)(v4 + 20);
        goto LABEL_9;
      default:
        return result;
    }
  }
  swift_bridgeObjectRelease();
  v2 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
LABEL_9:
  v5 = a1 + v2;
  v6 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

_QWORD *_s14RepresentationOwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  char *v10;

  if (swift_getEnumCaseMultiPayload() != 1)
  {
    type metadata accessor for MLProgram.Value.ImmediateValue(0);
    v10 = (char *)&loc_240C7C824 + 4 * byte_240F22966[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s14RepresentationOwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  char *v9;

  if (a1 != a2)
  {
    sub_240C7A780((uint64_t)a1, type metadata accessor for MLProgram.Value.Representation);
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      type metadata accessor for MLProgram.Value.ImmediateValue(0);
      v9 = (char *)&loc_240C7C9E4 + 4 * byte_240F2296A[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    *a1 = *a2;
    a1[1] = a2[1];
    a1[2] = a2[2];
    v4 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_240F1C930();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    v8(v5, v6, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *_s14RepresentationOwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v4 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  }
  else
  {
    v8 = type metadata accessor for MLProgram.Value.ImmediateValue(0);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_MILSpec_DictionaryValue(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      case 2:
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for Proto_MILSpec_ListValue(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
        break;
      case 1:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for Proto_MILSpec_TupleValue(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
        goto LABEL_11;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_11:
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s14RepresentationOwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_240C7A780((uint64_t)a1, type metadata accessor for MLProgram.Value.Representation);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v4 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
      v5 = (char *)a1 + v4;
      v6 = (char *)a2 + v4;
      v7 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    }
    else
    {
      v8 = type metadata accessor for MLProgram.Value.ImmediateValue(0);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      switch(EnumCaseMultiPayload)
      {
        case 3:
          *a1 = *a2;
          v14 = *(int *)(type metadata accessor for Proto_MILSpec_DictionaryValue(0) + 20);
          v15 = (char *)a1 + v14;
          v16 = (char *)a2 + v14;
          v17 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
          break;
        case 2:
          *a1 = *a2;
          v18 = *(int *)(type metadata accessor for Proto_MILSpec_ListValue(0) + 20);
          v19 = (char *)a1 + v18;
          v20 = (char *)a2 + v18;
          v21 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          break;
        case 1:
          *a1 = *a2;
          v10 = *(int *)(type metadata accessor for Proto_MILSpec_TupleValue(0) + 20);
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
          goto LABEL_12;
      }
      swift_storeEnumTagMultiPayload();
    }
LABEL_12:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C7CE78()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for MLProgram.Value.ImmediateValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_MILSpec_Value.BlobFileValue(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s14ImmediateValueOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_240C7CF50 + 4 * byte_240F2296E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t _s14ImmediateValueOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      return sub_240C7BC94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
    case 1:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_MILSpec_TupleValue(0);
      goto LABEL_6;
    case 2:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_MILSpec_ListValue(0);
      goto LABEL_6;
    case 3:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_MILSpec_DictionaryValue(0);
LABEL_6:
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_240F1C930();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void _s14ImmediateValueOwcp()
{
  char *v0;

  v0 = (char *)sub_240C7D1D0 + 4 * byte_240F22976[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240C7D1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  char v4;

  v2 = *(_QWORD *)v1;
  v3 = *(_QWORD *)(v1 + 8);
  v4 = *(_BYTE *)(v1 + 16);
  sub_240C7C150(v2, v3, v4);
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_BYTE *)(v0 + 16) = v4;
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t _s14ImmediateValueOwca(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240C7A780(result, type metadata accessor for MLProgram.Value.ImmediateValue);
    v2 = (char *)&loc_240C7D2F8 + 4 * byte_240F2297A[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

_QWORD *_s14ImmediateValueOwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  switch(EnumCaseMultiPayload)
  {
    case 3:
      *a1 = *a2;
      v11 = *(int *)(type metadata accessor for Proto_MILSpec_DictionaryValue(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
      break;
    case 2:
      *a1 = *a2;
      v15 = *(int *)(type metadata accessor for Proto_MILSpec_ListValue(0) + 20);
      v16 = (char *)a1 + v15;
      v17 = (char *)a2 + v15;
      v18 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      break;
    case 1:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for Proto_MILSpec_TupleValue(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s14ImmediateValueOwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  if (a1 != a2)
  {
    sub_240C7A780((uint64_t)a1, type metadata accessor for MLProgram.Value.ImmediateValue);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    switch(EnumCaseMultiPayload)
    {
      case 3:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for Proto_MILSpec_DictionaryValue(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
        break;
      case 2:
        *a1 = *a2;
        v15 = *(int *)(type metadata accessor for Proto_MILSpec_ListValue(0) + 20);
        v16 = (char *)a1 + v15;
        v17 = (char *)a2 + v15;
        v18 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
        break;
      case 1:
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for Proto_MILSpec_TupleValue(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C7D670()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = type metadata accessor for Proto_MILSpec_TupleValue(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_MILSpec_ListValue(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Proto_MILSpec_DictionaryValue(319);
      if (v3 <= 0x3F)
      {
        swift_initEnumMetadataMultiPayload();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *_s13BlobFileValueVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = *(int *)(v4 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s13BlobFileValueVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s13BlobFileValueVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *_s13BlobFileValueVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s13BlobFileValueVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s13BlobFileValueVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t _s13BlobFileValueVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DA14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_61_5();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s13BlobFileValueVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DA44()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_61_5();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C7DA68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
}

uint64_t _s6TensorOwxx(uint64_t a1)
{
  return sub_240C7BC94(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s6TensorOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240C7C150(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_156();
}

uint64_t _s6TensorOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240C7C150(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  v8 = *(_BYTE *)(a1 + 16);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  sub_240C7BC94(v6, v7, v8);
  return a1;
}

uint64_t _s6TensorOwta(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v3;
  sub_240C7BC94(v4, v5, v6);
  return a1;
}

uint64_t _s6TensorOwet(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x3FA && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 1017;
    }
    else
    {
      v2 = ((*(_QWORD *)(a1 + 8) >> 60) & 3 | (4 * *(unsigned __int8 *)(a1 + 16))) ^ 0x3FF;
      if (v2 >= 0x3F9)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t _s6TensorOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x3F9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 1018;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0x3FA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_QWORD *)(result + 8) = (-a2 & 3) << 60;
      *(_BYTE *)(result + 16) = -a2 >> 2;
    }
  }
  return result;
}

uint64_t sub_240C7DBFC(uint64_t a1)
{
  int v1;

  if (*(_BYTE *)(a1 + 16))
    v1 = 4;
  else
    v1 = 0;
  return (*(_QWORD *)(a1 + 8) >> 60) & 3 | v1;
}

uint64_t sub_240C7DC1C(uint64_t result)
{
  *(_QWORD *)(result + 8) &= 0xCFFFFFFFFFFFFFFFLL;
  return result;
}

uint64_t sub_240C7DC2C(uint64_t result, char a2)
{
  *(_QWORD *)(result + 8) = *(_QWORD *)(result + 8) & 0xCFFFFFFFFFFFFFFFLL | ((unint64_t)(a2 & 3) << 60);
  *(_BYTE *)(result + 16) = (a2 & 4) != 0;
  return result;
}

ValueMetadata *type metadata accessor for MLProgram.Value.Tensor()
{
  return &type metadata for MLProgram.Value.Tensor;
}

void _s5TupleVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DDAC(a1, a2, a3, type metadata accessor for Proto_MILSpec_TupleValue);
}

uint64_t _s5TupleVwxx(uint64_t a1)
{
  return sub_240C7DE44(a1);
}

void _s5TupleVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DE98(a1, a2, a3, type metadata accessor for Proto_MILSpec_TupleValue);
}

void _s5TupleVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C7DF08(a1, a2);
}

void _s5TupleVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DF74(a1, a2, a3, type metadata accessor for Proto_MILSpec_TupleValue);
}

void _s5TupleVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

uint64_t _s5TupleVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DCAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_115_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s5TupleVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DCD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_115_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C7DCF0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_MILSpec_TupleValue);
}

void _s4ListVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DDAC(a1, a2, a3, type metadata accessor for Proto_MILSpec_ListValue);
}

uint64_t _s4ListVwxx(uint64_t a1)
{
  return sub_240C7DE44(a1);
}

void _s4ListVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DE98(a1, a2, a3, type metadata accessor for Proto_MILSpec_ListValue);
}

void _s4ListVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C7DF08(a1, a2);
}

void _s4ListVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DF74(a1, a2, a3, type metadata accessor for Proto_MILSpec_ListValue);
}

void _s4ListVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

uint64_t _s4ListVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DD50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_114_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s4ListVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DD78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_114_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C7DD94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_MILSpec_ListValue);
}

void _s10DictionaryVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DDAC(a1, a2, a3, type metadata accessor for Proto_MILSpec_DictionaryValue);
}

void sub_240C7DDAC(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v7 = *(_DWORD *)(*(_QWORD *)(v6 - 8) + 80);
  *a1 = *a2;
  if ((v7 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = OUTLINED_FUNCTION_20_0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    OUTLINED_FUNCTION_329();
    v12(v9, v10, v11);
  }
  OUTLINED_FUNCTION_42();
}

uint64_t _s10DictionaryVwxx(uint64_t a1)
{
  return sub_240C7DE44(a1);
}

uint64_t sub_240C7DE44(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(OUTLINED_FUNCTION_33_3() + 20);
  v3 = OUTLINED_FUNCTION_20_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

void _s10DictionaryVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DE98(a1, a2, a3, type metadata accessor for Proto_MILSpec_DictionaryValue);
}

void sub_240C7DE98(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = OUTLINED_FUNCTION_20_0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  OUTLINED_FUNCTION_55_0();
  v10(v7, v8, v9);
  OUTLINED_FUNCTION_42();
}

void _s10DictionaryVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C7DF08(a1, a2);
}

void sub_240C7DF08(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_33_3();
  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s10DictionaryVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DF74(a1, a2, a3, type metadata accessor for Proto_MILSpec_DictionaryValue);
}

void sub_240C7DF74(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  void (*v5)(uint64_t);

  *a1 = *a2;
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  OUTLINED_FUNCTION_20_0();
  v4 = OUTLINED_FUNCTION_166_0();
  v5(v4);
  OUTLINED_FUNCTION_156();
}

void _s10DictionaryVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

uint64_t _s10DictionaryVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7DFE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_72_5();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10DictionaryVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C7E010()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_72_5();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C7E034(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_MILSpec_DictionaryValue);
}

unint64_t sub_240C7E040()
{
  unint64_t result;

  result = qword_25708CEE8;
  if (!qword_25708CEE8)
  {
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE0D40], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25708CEE8);
  }
  return result;
}

void sub_240C7E07C(uint64_t a1, uint64_t a2)
{
  sub_240C7E088(a1, a2, (void (*)(uint64_t))MEMORY[0x24BEE42F8]);
}

void sub_240C7E088(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;

  v5 = *(_QWORD *)(a2 + 16);
  sub_240F1CF48();
  if (v5)
  {
    v6 = (uint64_t *)(a2 + 32);
    do
    {
      v7 = *v6++;
      a3(v7);
      --v5;
    }
    while (v5);
  }
  OUTLINED_FUNCTION_156();
}

void sub_240C7E0D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_30_9();
  if (v0)
  {
    v2 = v1 + 40;
    do
    {
      sub_240F1CF48();
      sub_240F1CF48();
      v2 += 16;
      --v0;
    }
    while (v0);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t sub_240C7E110()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_240C7E134()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

unint64_t sub_240C7E158()
{
  unint64_t result;

  result = qword_25708CEF0;
  if (!qword_25708CEF0)
  {
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE4040], MEMORY[0x24BEE4008]);
    atomic_store(result, (unint64_t *)&qword_25708CEF0);
  }
  return result;
}

unint64_t sub_240C7E194()
{
  unint64_t result;

  result = qword_25708CEF8;
  if (!qword_25708CEF8)
  {
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE3FC8], MEMORY[0x24BEE3F88]);
    atomic_store(result, (unint64_t *)&qword_25708CEF8);
  }
  return result;
}

void OUTLINED_FUNCTION_5_17()
{
  sub_240BF0A64();
}

uint64_t OUTLINED_FUNCTION_8_14()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_9_10()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_11_12()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_12_12()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_15_12()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;
  char v4;
  char v5;

  sub_240C7C150(v1, v3, v5);
  return sub_240C7C150(v0, v2, v4);
}

uint64_t OUTLINED_FUNCTION_17_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 104) + 8))(v0, v1);
}

void OUTLINED_FUNCTION_19_9(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240C7A780(a1, v1);
}

void OUTLINED_FUNCTION_20_8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

void OUTLINED_FUNCTION_29_8()
{
  sub_240BF0A64();
}

uint64_t OUTLINED_FUNCTION_30_9()
{
  return sub_240F1CF48();
}

uint64_t OUTLINED_FUNCTION_33_8()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 192) + 8))(v0, *(_QWORD *)(v1 - 96));
}

void OUTLINED_FUNCTION_42_8(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240C7A780(a1, v1);
}

void OUTLINED_FUNCTION_43_8()
{
  sub_240BF0A64();
}

void OUTLINED_FUNCTION_46_5(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_240BE0BF4(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t OUTLINED_FUNCTION_48_7()
{
  return sub_240F1CF48();
}

void OUTLINED_FUNCTION_53_8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240C7A780(v2, a2);
}

uint64_t OUTLINED_FUNCTION_54_9()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_55_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_57_7()
{
  return type metadata accessor for Proto_MILSpec_TensorValue(0);
}

uint64_t OUTLINED_FUNCTION_58_5()
{
  return type metadata accessor for MLProgram.Value.ImmediateValue(0);
}

void OUTLINED_FUNCTION_60_4()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);

  sub_240BE18B8(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_61_5()
{
  return type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0);
}

char *OUTLINED_FUNCTION_68_3(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10)
{
  return &a10;
}

void OUTLINED_FUNCTION_69_2(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240C7A780(v2, a2);
}

uint64_t OUTLINED_FUNCTION_71_4()
{
  return type metadata accessor for MLProgram.Value.ImmediateValue(0);
}

uint64_t OUTLINED_FUNCTION_72_5()
{
  return type metadata accessor for Proto_MILSpec_DictionaryValue(0);
}

uint64_t OUTLINED_FUNCTION_77_1()
{
  return sub_240F1CF78();
}

void OUTLINED_FUNCTION_78_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 16) = v1;
}

uint64_t OUTLINED_FUNCTION_88_2()
{
  return sub_240F1CC54();
}

uint64_t OUTLINED_FUNCTION_90_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_97_2(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_101_3()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_102_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 8 * v3 + 32) = v0;
}

uint64_t OUTLINED_FUNCTION_103_2(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = result;
  *(_QWORD *)(v2 + 24) = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_104_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_105_3()
{
  char v0;
  unint64_t v1;
  uint64_t v2;

  return sub_240C7BC94(v2, v1, v0);
}

void OUTLINED_FUNCTION_106_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_107_1()
{
  char v0;
  unint64_t v1;
  uint64_t v2;

  return sub_240C7BC94(v2, v1, v0);
}

void OUTLINED_FUNCTION_108_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240C7A780(a1, v1);
}

uint64_t OUTLINED_FUNCTION_111_3()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_112_3(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240C7A780(a1, v1);
}

uint64_t OUTLINED_FUNCTION_114_2()
{
  return type metadata accessor for Proto_MILSpec_ListValue(0);
}

uint64_t OUTLINED_FUNCTION_115_3()
{
  return type metadata accessor for Proto_MILSpec_TupleValue(0);
}

uint64_t OUTLINED_FUNCTION_116_2()
{
  return sub_240F1CE04();
}

uint64_t OUTLINED_FUNCTION_118_2()
{
  return sub_240F1CDB0();
}

uint64_t OUTLINED_FUNCTION_119_2()
{
  return sub_240F1CDA4();
}

uint64_t OUTLINED_FUNCTION_123_3()
{
  return type metadata accessor for Proto_MILSpec_TensorValue.OneOf_Value(0);
}

uint64_t OUTLINED_FUNCTION_124_2()
{
  return type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
}

uint64_t OUTLINED_FUNCTION_125_3()
{
  return sub_240F1CF48();
}

uint64_t OUTLINED_FUNCTION_126_2()
{
  return type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
}

uint64_t OUTLINED_FUNCTION_127_3()
{
  return type metadata accessor for MLProgram.Value();
}

uint64_t OUTLINED_FUNCTION_129_3(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_131_2()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_134_1()
{
  return sub_240F1CF48();
}

uint64_t OUTLINED_FUNCTION_135_2()
{
  uint64_t v0;
  unint64_t v1;
  char v2;

  return sub_240C7BC94(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_136_2()
{
  return sub_240F1CF48();
}

uint64_t OUTLINED_FUNCTION_137_2()
{
  return sub_240F1CF48();
}

void OUTLINED_FUNCTION_139_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 8 * v3 + 32) = v0;
}

uint64_t OUTLINED_FUNCTION_141_2()
{
  return sub_240F1CCE4();
}

void OUTLINED_FUNCTION_142_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_143_1()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_144_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0BF4(v3, v4, a3);
}

void OUTLINED_FUNCTION_148_1(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240C7A780(v2, a2);
}

uint64_t OUTLINED_FUNCTION_149_1()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_150(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_151_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_152_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_153_0()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_155_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_156_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_158_0(uint64_t a1, unint64_t a2)
{
  char v2;

  return sub_240C7BC94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_160_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_162_0()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_163_0(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

void OUTLINED_FUNCTION_164_0()
{
  JUMPOUT(0x24268BDC0);
}

void OUTLINED_FUNCTION_165_0()
{
  JUMPOUT(0x24268BDC0);
}

uint64_t OUTLINED_FUNCTION_166_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_168_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v3, a2, v2);
}

uint64_t OUTLINED_FUNCTION_170_0(uint64_t a1)
{
  return sub_240C776F8(a1);
}

void OUTLINED_FUNCTION_171(uint64_t a1)
{
  sub_240C775E8(a1);
}

uint64_t OUTLINED_FUNCTION_174_0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  return a2(0);
}

uint64_t OUTLINED_FUNCTION_175_0()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_176_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0B90(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_178_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  uint64_t v0;

  return v0;
}

void static NeuralNetwork.Layer.slice(name:inputName:outputName:startIndex:endIndex:stride:axis:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, unsigned __int8 *a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  __int128 v25;
  uint64_t v26;
  uint64_t v27;

  v26 = a6;
  v27 = a7;
  v23 = a8;
  v24 = a1;
  v14 = type metadata accessor for NeuralNetwork.Layer.Kind();
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)&v21 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *a10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v17 = OUTLINED_FUNCTION_3_8();
  v25 = xmmword_240F1DA30;
  *(_OWORD *)(v17 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v17 + 32) = a2;
  *(_QWORD *)(v17 + 40) = a3;
  v18 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v18 + 16) = v25;
  *(_QWORD *)(v18 + 32) = a4;
  *(_QWORD *)(v18 + 40) = a5;
  *(_OWORD *)v16 = 0u;
  *((_OWORD *)v16 + 1) = 0u;
  v16[32] = 1;
  type metadata accessor for Proto_SliceLayerParams(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v19 = v27;
  *(_QWORD *)v16 = v26;
  *((_QWORD *)v16 + 1) = v19;
  if (a9 < 0)
  {
    __break(1u);
  }
  else
  {
    v20 = v22;
    *((_QWORD *)v16 + 2) = a9;
    *((_QWORD *)v16 + 3) = v20;
    v16[32] = 1;
    swift_storeEnumTagMultiPayload();
    NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  }
}

uint64_t static NeuralNetwork.Layer.Kind.slice(startIndex:endIndex:stride:axis:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, unsigned __int8 *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t result;

  v9 = *a4;
  *(_OWORD *)a5 = 0u;
  *(_OWORD *)(a5 + 16) = 0u;
  *(_BYTE *)(a5 + 32) = 1;
  type metadata accessor for Proto_SliceLayerParams(0);
  result = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)a5 = a1;
  *(_QWORD *)(a5 + 8) = a2;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(a5 + 16) = a3;
    *(_QWORD *)(a5 + 24) = v9;
    *(_BYTE *)(a5 + 32) = 1;
    type metadata accessor for NeuralNetwork.Layer.Kind();
    return swift_storeEnumTagMultiPayload();
  }
  return result;
}

void SupportVectorRegressorConfiguration.kernel.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v27 = OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - v31;
  v33 = v20 + *(int *)(OUTLINED_FUNCTION_4_13() + 28);
  OUTLINED_FUNCTION_11_13(v33);
  v34 = 1;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v27);
  OUTLINED_FUNCTION_51_4();
  if (EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_52_6(v36, v37, &qword_25708BE38);
    v38 = OUTLINED_FUNCTION_7_1(v21, 1, v27);
    if (v40)
    {
      v41 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      __swift_storeEnumTagSinglePayload(v22, 1, 1, v41);
      v42 = OUTLINED_FUNCTION_63_4();
      OUTLINED_FUNCTION_39(v42, &qword_25708BE38);
    }
    else
    {
      OUTLINED_FUNCTION_68_4(v38, v39, type metadata accessor for Proto_Kernel);
    }
    OUTLINED_FUNCTION_47_8(v22, v43, type metadata accessor for Proto_Kernel);
    v34 = 0;
  }
  v44 = type metadata accessor for SupportVectorKernel(0);
  __swift_storeEnumTagSinglePayload(v26, v34, 1, v44);
  OUTLINED_FUNCTION_1();
}

void SupportVectorRegressorConfiguration.kernel.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_25_7();
  v4 = type metadata accessor for SupportVectorKernel(v3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_7_1(v0, 1, v4);
  if (v6)
  {
    OUTLINED_FUNCTION_56_8();
    v7 = OUTLINED_FUNCTION_4_13();
    OUTLINED_FUNCTION_37(v7, &qword_25708BE38);
    OUTLINED_FUNCTION_18_8();
  }
  else
  {
    OUTLINED_FUNCTION_12_13(v0);
    OUTLINED_FUNCTION_37_7();
    v8 = OUTLINED_FUNCTION_4_13();
    OUTLINED_FUNCTION_37(v8, &qword_25708BE38);
    OUTLINED_FUNCTION_49_6();
    v9 = OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_62_3(v9, &qword_25708CB68);
    OUTLINED_FUNCTION_56_5();
  }
  OUTLINED_FUNCTION_13();
}

void SupportVectorRegressorConfiguration.kernel.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_60_5();
  v3 = OUTLINED_FUNCTION_69_3(v2);
  v4 = type metadata accessor for SupportVectorKernel(v3);
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_32_9(v4);
  v5 = OUTLINED_FUNCTION_47_5();
  *(_QWORD *)(v1 + 24) = v5;
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_3_14(v5);
  v6 = OUTLINED_FUNCTION_152();
  *(_QWORD *)(v1 + 40) = v6;
  v7 = OUTLINED_FUNCTION_246();
  v8 = OUTLINED_FUNCTION_3_14(v7);
  *(_QWORD *)(v1 + 48) = v8;
  v9 = OUTLINED_FUNCTION_152();
  *(_QWORD *)(v1 + 56) = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB68);
  *(_QWORD *)(v1 + 64) = OUTLINED_FUNCTION_3_14(v10);
  *(_QWORD *)(v1 + 72) = OUTLINED_FUNCTION_152();
  *(_QWORD *)(v1 + 80) = OUTLINED_FUNCTION_152();
  v11 = *(int *)(OUTLINED_FUNCTION_4_13() + 28);
  *(_DWORD *)(v1 + 88) = v11;
  v12 = v0 + v11;
  OUTLINED_FUNCTION_11_13(v12);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5);
  OUTLINED_FUNCTION_51_4();
  if (EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_242(v12, v14, &qword_25708BE38);
    v15 = OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v5);
    if (v17)
    {
      v18 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v18);
      OUTLINED_FUNCTION_62_4();
      sub_240BE0B68((uint64_t)v8, &qword_25708BE38);
    }
    else
    {
      OUTLINED_FUNCTION_54_10(v15, v16, type metadata accessor for Proto_Kernel);
    }
    OUTLINED_FUNCTION_55_5(v19, v20, type metadata accessor for Proto_Kernel);
  }
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_1();
}

void sub_240C7EC70()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  v5 = *(void **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_40_7();
    OUTLINED_FUNCTION_242(v6, v7, &qword_25708CB68);
    SupportVectorRegressorConfiguration.kernel.setter();
    sub_240BE0B68(v6, &qword_25708CB68);
  }
  else
  {
    OUTLINED_FUNCTION_67_4(v3, v4, &qword_25708CB68);
    v8 = OUTLINED_FUNCTION_30_10();
    if (v9)
    {
      sub_240BE0B68(v8, &qword_25708CB68);
      OUTLINED_FUNCTION_39(v10, &qword_25708BE38);
      OUTLINED_FUNCTION_25_8();
    }
    else
    {
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_12_13(v11);
      OUTLINED_FUNCTION_38_6();
      sub_240BE0B68(v0, &qword_25708BE38);
      OUTLINED_FUNCTION_39_5();
      v12 = OUTLINED_FUNCTION_29_9();
      OUTLINED_FUNCTION_37(v12, &qword_25708CB68);
      OUTLINED_FUNCTION_56_5();
    }
    OUTLINED_FUNCTION_41_6();
  }
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_351();
  free(v2);
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_371();
  free(v1);
  OUTLINED_FUNCTION_75(v5);
}

void SupportVectorRegressorConfiguration.supportVectors.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v3 = OUTLINED_FUNCTION_16_12();
  OUTLINED_FUNCTION_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v17 - v8;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_21_10();
  sub_240C02F94(v11, v12, &qword_25708BE40);
  v13 = 1;
  OUTLINED_FUNCTION_7_1(v1, 1, v3);
  if (!v14)
  {
    sub_240C35540(v1, (uint64_t)v9, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    sub_240C355AC((uint64_t)v9, (uint64_t)v7, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    sub_240C7EFC0((uint64_t)v7, a1);
    sub_240BE10B8((uint64_t)v9, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    v13 = 0;
  }
  v15 = type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(0);
  OUTLINED_FUNCTION_17_11(a1, v13, v16, v15);
  OUTLINED_FUNCTION_13();
}

void sub_240C7EE94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(char *))
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v12 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C02F94(a1, (uint64_t)v11, a5);
  a6(v11);
  OUTLINED_FUNCTION_42();
}

uint64_t SupportVectorRegressorConfiguration.supportVectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_15_13();
  v7 = OUTLINED_FUNCTION_7_1(a1, 1, v6);
  if (v8)
  {
    OUTLINED_FUNCTION_37(v7, &qword_25708CF08);
    v10 = OUTLINED_FUNCTION_16_12();
    v11 = 1;
  }
  else
  {
    sub_240C7F034();
    sub_240BE10B8(a1, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
    v10 = OUTLINED_FUNCTION_16_12();
    v11 = 0;
  }
  OUTLINED_FUNCTION_17_11(v2, v11, v9, v10);
  return sub_240C7FC98(v2, v3);
}

uint64_t sub_240C7EFC0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_16_12();
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = type metadata accessor for Proto_DenseSupportVectors;
  else
    v4 = type metadata accessor for Proto_SparseSupportVectors;
  sub_240C35540(a1, a2, v4);
  type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(0);
  return swift_storeEnumTagMultiPayload();
}

void sub_240C7F034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  type metadata accessor for DenseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SparseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_15_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_21_10();
  sub_240C355AC(v7, v8, v9);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240C35540(v1, (uint64_t)v4, type metadata accessor for DenseSupportVectorCollection);
    OUTLINED_FUNCTION_47_8((uint64_t)v4, v10, type metadata accessor for Proto_DenseSupportVectors);
  }
  else
  {
    sub_240C35540(v1, v0, type metadata accessor for SparseSupportVectorCollection);
    OUTLINED_FUNCTION_47_8(v0, v11, type metadata accessor for Proto_SparseSupportVectors);
  }
  OUTLINED_FUNCTION_16_12();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_42();
}

void (*SupportVectorRegressorConfiguration.supportVectors.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v1;
  v4 = malloc(0x40uLL);
  *a1 = v4;
  *v4 = v1;
  v5 = OUTLINED_FUNCTION_16_12();
  v4[1] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = malloc(v6);
  v4[2] = v7;
  v8 = malloc(v6);
  v4[3] = v8;
  v9 = OUTLINED_FUNCTION_246();
  v4[4] = OUTLINED_FUNCTION_3_14(v9);
  v10 = OUTLINED_FUNCTION_152();
  v4[5] = v10;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CF08);
  v4[6] = OUTLINED_FUNCTION_3_14(v11);
  v12 = OUTLINED_FUNCTION_152();
  v4[7] = v12;
  sub_240C02F94(v2, (uint64_t)v10, &qword_25708BE40);
  v13 = 1;
  OUTLINED_FUNCTION_7_1((uint64_t)v10, 1, v5);
  if (!v14)
  {
    sub_240C35540((uint64_t)v10, (uint64_t)v8, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    sub_240C355AC((uint64_t)v8, (uint64_t)v7, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    sub_240C7EFC0((uint64_t)v7, (uint64_t)v12);
    sub_240BE10B8((uint64_t)v8, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    v13 = 0;
  }
  v15 = type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(0);
  OUTLINED_FUNCTION_17_11((uint64_t)v12, v13, v16, v15);
  return sub_240C7F294;
}

void sub_240C7F294()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22();
  v1 = *v0;
  v2 = (*v0)[7];
  if ((v3 & 1) != 0)
  {
    v4 = v1[6];
    sub_240C02F94((*v0)[7], v4, &qword_25708CF08);
    SupportVectorRegressorConfiguration.supportVectors.setter(v4);
    sub_240BE0B68(v2, &qword_25708CF08);
  }
  else
  {
    v5 = type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(0);
    OUTLINED_FUNCTION_7_1(v2, 1, v5);
    if (v6)
    {
      sub_240BE0B68(v2, &qword_25708CF08);
      v8 = 1;
    }
    else
    {
      sub_240C7F034();
      sub_240BE10B8(v2, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
      v8 = 0;
    }
    v9 = v1[4];
    v10 = *v1;
    OUTLINED_FUNCTION_17_11(v9, v8, v7, v1[1]);
    sub_240C7FC98(v9, v10);
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_371();
  OUTLINED_FUNCTION_75(v1);
}

void SupportVectorRegressorConfiguration.coefficients.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int EnumTagSinglePayload;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v27 = OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (char *)&a9 - v31;
  v33 = v20 + *(int *)(OUTLINED_FUNCTION_4_13() + 32);
  OUTLINED_FUNCTION_11_13(v33);
  v34 = 1;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v32, 1, v27);
  OUTLINED_FUNCTION_51_4();
  if (EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_52_6(v36, v37, &qword_25708BE48);
    v38 = OUTLINED_FUNCTION_7_1(v21, 1, v27);
    if (v40)
    {
      *v22 = MEMORY[0x24BEE4AF8];
      v41 = OUTLINED_FUNCTION_63_4();
      OUTLINED_FUNCTION_39(v41, &qword_25708BE48);
    }
    else
    {
      OUTLINED_FUNCTION_68_4(v38, v39, type metadata accessor for Proto_Coefficients);
    }
    OUTLINED_FUNCTION_47_8((uint64_t)v22, v42, type metadata accessor for Proto_Coefficients);
    v34 = 0;
  }
  v43 = type metadata accessor for SupportVectorCoefficients();
  __swift_storeEnumTagSinglePayload(v26, v34, 1, v43);
  OUTLINED_FUNCTION_1();
}

void SupportVectorRegressorConfiguration.coefficients.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_46_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_25_7();
  v3 = type metadata accessor for SupportVectorCoefficients();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_7_12();
  OUTLINED_FUNCTION_7_1(v0, 1, v3);
  if (v5)
  {
    OUTLINED_FUNCTION_56_8();
    v6 = OUTLINED_FUNCTION_4_13();
    OUTLINED_FUNCTION_37(v6, &qword_25708BE48);
    OUTLINED_FUNCTION_18_8();
  }
  else
  {
    OUTLINED_FUNCTION_12_13(v0);
    OUTLINED_FUNCTION_37_7();
    v7 = OUTLINED_FUNCTION_4_13();
    OUTLINED_FUNCTION_37(v7, &qword_25708BE48);
    OUTLINED_FUNCTION_49_6();
    v8 = OUTLINED_FUNCTION_26_5();
    OUTLINED_FUNCTION_62_3(v8, &qword_25708CF10);
    OUTLINED_FUNCTION_56_5();
  }
  OUTLINED_FUNCTION_13();
}

void SupportVectorRegressorConfiguration.coefficients.modify()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_60_5();
  OUTLINED_FUNCTION_69_3(v2);
  v3 = type metadata accessor for SupportVectorCoefficients();
  *(_QWORD *)(v1 + 16) = OUTLINED_FUNCTION_32_9(v3);
  v4 = OUTLINED_FUNCTION_46_6();
  *(_QWORD *)(v1 + 24) = v4;
  *(_QWORD *)(v1 + 32) = OUTLINED_FUNCTION_3_14(v4);
  v5 = OUTLINED_FUNCTION_152();
  *(_QWORD *)(v1 + 40) = v5;
  v6 = OUTLINED_FUNCTION_246();
  v7 = OUTLINED_FUNCTION_3_14(v6);
  *(_QWORD *)(v1 + 48) = v7;
  v8 = OUTLINED_FUNCTION_152();
  *(_QWORD *)(v1 + 56) = v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CF10);
  *(_QWORD *)(v1 + 64) = OUTLINED_FUNCTION_3_14(v9);
  *(_QWORD *)(v1 + 72) = OUTLINED_FUNCTION_152();
  *(_QWORD *)(v1 + 80) = OUTLINED_FUNCTION_152();
  v10 = *(int *)(OUTLINED_FUNCTION_4_13() + 32);
  *(_DWORD *)(v1 + 88) = v10;
  v11 = v0 + v10;
  OUTLINED_FUNCTION_11_13(v11);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4);
  OUTLINED_FUNCTION_51_4();
  if (EnumTagSinglePayload != 1)
  {
    OUTLINED_FUNCTION_242(v11, v13, &qword_25708BE48);
    v14 = OUTLINED_FUNCTION_7_1((uint64_t)v7, 1, v4);
    if (v16)
    {
      *v5 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_62_4();
      sub_240BE0B68((uint64_t)v7, &qword_25708BE48);
    }
    else
    {
      OUTLINED_FUNCTION_54_10(v14, v15, type metadata accessor for Proto_Coefficients);
    }
    OUTLINED_FUNCTION_55_5(v17, v18, type metadata accessor for Proto_Coefficients);
  }
  OUTLINED_FUNCTION_35_7();
  OUTLINED_FUNCTION_1();
}

void sub_240C7F714()
{
  uint64_t v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  v5 = *(void **)v3;
  v6 = *(_QWORD *)(*(_QWORD *)v3 + 80);
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_40_7();
    OUTLINED_FUNCTION_242(v6, v7, &qword_25708CF10);
    SupportVectorRegressorConfiguration.coefficients.setter();
    sub_240BE0B68(v6, &qword_25708CF10);
  }
  else
  {
    OUTLINED_FUNCTION_67_4(v3, v4, &qword_25708CF10);
    v8 = OUTLINED_FUNCTION_30_10();
    if (v9)
    {
      sub_240BE0B68(v8, &qword_25708CF10);
      OUTLINED_FUNCTION_39(v10, &qword_25708BE48);
      OUTLINED_FUNCTION_25_8();
    }
    else
    {
      OUTLINED_FUNCTION_50_9();
      OUTLINED_FUNCTION_12_13(v11);
      OUTLINED_FUNCTION_38_6();
      sub_240BE0B68(v0, &qword_25708BE48);
      OUTLINED_FUNCTION_39_5();
      v12 = OUTLINED_FUNCTION_29_9();
      OUTLINED_FUNCTION_37(v12, &qword_25708CF10);
      OUTLINED_FUNCTION_56_5();
    }
    OUTLINED_FUNCTION_41_6();
  }
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_351();
  free(v2);
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_371();
  free(v1);
  OUTLINED_FUNCTION_75(v5);
}

double SupportVectorRegressorConfiguration.rho.getter()
{
  uint64_t v0;

  return *(double *)(v0 + *(int *)(OUTLINED_FUNCTION_4_13() + 20));
}

uint64_t SupportVectorRegressorConfiguration.rho.setter(double a1)
{
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_4_13();
  *(double *)(v1 + *(int *)(result + 20)) = a1;
  return result;
}

double (*SupportVectorRegressorConfiguration.rho.modify(uint64_t a1))(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_4_13() + 20);
  v4 = *(_QWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 16) = v3;
  *(_QWORD *)a1 = v4;
  return sub_240C7F8AC;
}

double sub_240C7F8AC(uint64_t a1)
{
  double result;

  result = *(double *)a1;
  *(_QWORD *)(*(_QWORD *)(a1 + 8) + *(int *)(a1 + 16)) = *(_QWORD *)a1;
  return result;
}

uint64_t SupportVectorRegressorConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = OUTLINED_FUNCTION_16_12();
  OUTLINED_FUNCTION_17_11(a1, 1, v3, v2);
  v4 = (int *)OUTLINED_FUNCTION_4_13();
  *(_QWORD *)(a1 + v4[5]) = 0;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v5 = a1 + v4[7];
  v6 = OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_17_11(v5, 1, v7, v6);
  v8 = a1 + v4[8];
  v9 = OUTLINED_FUNCTION_46_6();
  return __swift_storeEnumTagSinglePayload(v8, 1, 1, v9);
}

uint64_t static SupportVectorRegressorConfiguration.SupportVectors.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  _BYTE *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  char v27;
  uint64_t v29;
  _BYTE v30[80];
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_22();
  v31 = v1;
  v32 = v2;
  v4 = v3;
  v6 = v5;
  type metadata accessor for DenseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SparseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_313();
  type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(0);
  OUTLINED_FUNCTION_0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = &v30[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = &v30[-v15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CF18);
  OUTLINED_FUNCTION_0();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = &v30[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_240C355AC(v6, (uint64_t)v20, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
  sub_240C355AC(v4, v21, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240C355AC((uint64_t)v20, (uint64_t)v14, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
    if (OUTLINED_FUNCTION_50_6() == 1)
    {
      sub_240C35540(v21, (uint64_t)v9, type metadata accessor for DenseSupportVectorCollection);
      sub_240BEC2E0();
      if ((v22 & 1) != 0)
      {
        type metadata accessor for Proto_DenseSupportVectors(0);
        sub_240F1C930();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        if ((sub_240F1CC90() & 1) != 0)
        {
          OUTLINED_FUNCTION_3_2((uint64_t)v9);
          v23 = (uint64_t)v14;
LABEL_13:
          OUTLINED_FUNCTION_3_2(v23);
          sub_240BE10B8((uint64_t)v20, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
          return 1;
        }
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v9);
      v29 = (uint64_t)v14;
LABEL_16:
      OUTLINED_FUNCTION_3_2(v29);
      sub_240BE10B8((uint64_t)v20, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
      return 0;
    }
    v24 = type metadata accessor for DenseSupportVectorCollection;
    v25 = (uint64_t)v14;
  }
  else
  {
    sub_240C355AC((uint64_t)v20, (uint64_t)v16, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
    if (OUTLINED_FUNCTION_50_6() != 1)
    {
      sub_240C35540(v21, v0, type metadata accessor for SparseSupportVectorCollection);
      sub_240BEBA94();
      if ((v27 & 1) != 0)
      {
        type metadata accessor for Proto_SparseSupportVectors(0);
        sub_240F1C930();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        if ((sub_240F1CC90() & 1) != 0)
        {
          OUTLINED_FUNCTION_3_2(v0);
          v23 = (uint64_t)v16;
          goto LABEL_13;
        }
      }
      OUTLINED_FUNCTION_3_2(v0);
      v29 = (uint64_t)v16;
      goto LABEL_16;
    }
    v24 = type metadata accessor for SparseSupportVectorCollection;
    v25 = (uint64_t)v16;
  }
  sub_240BE10B8(v25, v24);
  OUTLINED_FUNCTION_62_3(v26, &qword_25708CF18);
  return 0;
}

uint64_t type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CF28);
}

uint64_t sub_240C7FC98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_240C7FCE0()
{
  sub_240BE18B8(&qword_25708CF20, type metadata accessor for Proto_SupportVectorRegressor, (uint64_t)&unk_240F2DE54);
}

#error "240C7FD1C: call analysis failed (funcsize=7)"

void sub_240C7FD28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C7EE94(a1, a2, a3, a4, &qword_25708CB68, (void (*)(char *))SupportVectorRegressorConfiguration.kernel.setter);
}

void sub_240C7FD4C(uint64_t a1@<X8>)
{
  SupportVectorRegressorConfiguration.supportVectors.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C7FD68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C7EE94(a1, a2, a3, a4, &qword_25708CF08, (void (*)(char *))SupportVectorRegressorConfiguration.supportVectors.setter);
}

#error "240C7FD9C: call analysis failed (funcsize=7)"

void sub_240C7FDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C7EE94(a1, a2, a3, a4, &qword_25708CF10, (void (*)(char *))SupportVectorRegressorConfiguration.coefficients.setter);
}

void sub_240C7FDCC(double *a1@<X8>)
{
  *a1 = SupportVectorRegressorConfiguration.rho.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C7FDF0(double *a1)
{
  SupportVectorRegressorConfiguration.rho.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for SupportVectorRegressorConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;

  v4 = type metadata accessor for Proto_SupportVectorRegressor(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    *(uint64_t *)((char *)a1 + v6[5]) = *(uint64_t *)((char *)a2 + v6[5]);
    v16 = v6[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_240F1C930();
    v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
    v20(v17, v18, v19);
    v21 = v6[7];
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = type metadata accessor for Proto_Kernel(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v26))
      {
        v28 = (char *)&loc_240C80074 + 4 * byte_240F22FB0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
      v20(&v22[*(int *)(v24 + 20)], &v23[*(int *)(v24 + 20)], v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    v29 = v6[8];
    v30 = (uint64_t *)((char *)a1 + v29);
    v31 = (uint64_t *)((char *)a2 + v29);
    v32 = type metadata accessor for Proto_Coefficients(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE48);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      *v30 = *v31;
      v34 = *(int *)(v32 + 20);
      v35 = (char *)v30 + v34;
      v36 = (char *)v31 + v34;
      swift_bridgeObjectRetain();
      v20(v35, v36, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
    }
  }
  return a1;
}

uint64_t destroy for SupportVectorRegressorConfiguration(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  void (*v19)(uint64_t, uint64_t);

  v2 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v4 = type metadata accessor for Proto_DenseSupportVectors(0);
    else
      v4 = type metadata accessor for Proto_SparseSupportVectors(0);
    v5 = a1 + *(int *)(v4 + 20);
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = (int *)type metadata accessor for Proto_SupportVectorRegressor(0);
  v8 = a1 + v7[6];
  v9 = sub_240F1C930();
  v19 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
  v19(v8, v9);
  v10 = a1 + v7[7];
  v11 = type metadata accessor for Proto_Kernel(0);
  if (!__swift_getEnumTagSinglePayload(v10, 1, v11))
  {
    v12 = v10;
    v13 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    if (!__swift_getEnumTagSinglePayload(v10, 1, v13))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_13;
        case 1u:
          v14 = type metadata accessor for Proto_RBFKernel(0);
          v15 = 5;
          goto LABEL_12;
        case 2u:
          v14 = type metadata accessor for Proto_PolyKernel(0);
          v15 = 7;
          goto LABEL_12;
        case 3u:
          v14 = type metadata accessor for Proto_SigmoidKernel(0);
          v15 = 6;
LABEL_12:
          v12 = v10 + *(int *)(v14 + 4 * v15);
LABEL_13:
          v19(v12, v9);
          break;
        default:
          break;
      }
    }
    v19(v10 + *(int *)(v11 + 20), v9);
  }
  v16 = a1 + v7[8];
  v17 = type metadata accessor for Proto_Coefficients(0);
  result = __swift_getEnumTagSinglePayload(v16, 1, v17);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v19)(v16 + *(int *)(v17 + 20), v9);
  }
  return result;
}

_QWORD *initializeWithCopy for SupportVectorRegressorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;

  v4 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v12 = (int *)type metadata accessor for Proto_SupportVectorRegressor(0);
  *(_QWORD *)((char *)a1 + v12[5]) = *(_QWORD *)((char *)a2 + v12[5]);
  v13 = v12[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_240F1C930();
  v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
  v17(v14, v15, v16);
  v18 = v12[7];
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = type metadata accessor for Proto_Kernel(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v23 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v23))
    {
      v25 = (char *)&loc_240C80628 + 4 * byte_240F22FB8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    v17(&v19[*(int *)(v21 + 20)], &v20[*(int *)(v21 + 20)], v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v26 = v12[8];
  v27 = (_QWORD *)((char *)a1 + v26);
  v28 = (_QWORD *)((char *)a2 + v26);
  v29 = type metadata accessor for Proto_Coefficients(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, v29))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE48);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *v27 = *v28;
    v31 = *(int *)(v29 + 20);
    v32 = (char *)v27 + v31;
    v33 = (char *)v28 + v31;
    swift_bridgeObjectRetain();
    v17(v32, v33, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, v29);
  }
  return a1;
}

_QWORD *assignWithCopy for SupportVectorRegressorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  int v48;
  int v49;
  uint64_t v50;
  char *v51;
  char *v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  void (*v56)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    v14 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v14 == 1)
      v15 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v15 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_240F1C930();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = (int *)type metadata accessor for Proto_SupportVectorRegressor(0);
  *(_QWORD *)((char *)a1 + v20[5]) = *(_QWORD *)((char *)a2 + v20[5]);
  v21 = v20[6];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_240F1C930();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(void (**)(char *, char *, uint64_t))(v25 + 24);
  v26(v22, v23, v24);
  v27 = v20[7];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = type metadata accessor for Proto_Kernel(0);
  v31 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v30);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30);
  if (v31)
  {
    if (!v32)
    {
      v33 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v33))
      {
        v40 = (char *)&loc_240C80B60 + 4 * byte_240F22FBC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v24);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
      goto LABEL_32;
    }
LABEL_21:
    v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    goto LABEL_32;
  }
  if (v32)
  {
    sub_240BE10B8((uint64_t)v28, type metadata accessor for Proto_Kernel);
    goto LABEL_21;
  }
  v56 = v26;
  v36 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v36);
  v38 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v36);
  if (v37)
  {
    if (!v38)
    {
      v42 = (char *)&loc_240C80BD8 + 4 * byte_240F22FC0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    v26 = v56;
    v56(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v24);
  }
  else
  {
    v26 = v56;
    if (v38)
    {
      sub_240BE10B8((uint64_t)v28, type metadata accessor for Proto_Kernel.OneOf_Kernel);
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else if (a1 != a2)
    {
      sub_240BE10B8((uint64_t)v28, type metadata accessor for Proto_Kernel.OneOf_Kernel);
      v43 = (char *)&loc_240C80CEC + 4 * byte_240F22FC4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v56(&v28[*(int *)(v30 + 20)], &v29[*(int *)(v30 + 20)], v24);
  }
LABEL_32:
  v44 = v20[8];
  v45 = (char *)a1 + v44;
  v46 = (char *)a2 + v44;
  v47 = type metadata accessor for Proto_Coefficients(0);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v45, 1, v47);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47);
  if (!v48)
  {
    if (!v49)
    {
      *(_QWORD *)v45 = *(_QWORD *)v46;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26(&v45[*(int *)(v47 + 20)], &v46[*(int *)(v47 + 20)], v24);
      return a1;
    }
    sub_240BE10B8((uint64_t)v45, type metadata accessor for Proto_Coefficients);
    goto LABEL_37;
  }
  if (v49)
  {
LABEL_37:
    v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE48);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v45 = *(_QWORD *)v46;
  v50 = *(int *)(v47 + 20);
  v51 = &v45[v50];
  v52 = &v46[v50];
  v53 = *(void (**)(char *, char *, uint64_t))(v25 + 16);
  swift_bridgeObjectRetain();
  v53(v51, v52, v24);
  __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
  return a1;
}

void sub_240C80ECC()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v1 = *(_QWORD *)v2;
  v4 = type metadata accessor for Proto_RBFKernel(0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v1[*(int *)(v4 + 20)], &v2[*(int *)(v4 + 20)], v0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x240C80DA8);
}

void sub_240C80F04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)v1 = *(_DWORD *)v2;
  *(_QWORD *)(v1 + 8) = *(_QWORD *)(v2 + 8);
  *(_QWORD *)(v1 + 16) = *(_QWORD *)(v2 + 16);
  v4 = type metadata accessor for Proto_PolyKernel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16))(v1 + *(int *)(v4 + 28), v2 + *(int *)(v4 + 28), v0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x240C80DA8);
}

void sub_240C80F4C()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v1 = *(_QWORD *)v2;
  *((_QWORD *)v1 + 1) = *((_QWORD *)v2 + 1);
  v4 = type metadata accessor for Proto_SigmoidKernel(0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(&v1[*(int *)(v4 + 24)], &v2[*(int *)(v4 + 24)], v0);
  JUMPOUT(0x240C80F88);
}

_QWORD *initializeWithTake for SupportVectorRegressorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;

  v4 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v11 = (int *)type metadata accessor for Proto_SupportVectorRegressor(0);
  *(_QWORD *)((char *)a1 + v11[5]) = *(_QWORD *)((char *)a2 + v11[5]);
  v12 = v11[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_240F1C930();
  v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
  v16(v13, v14, v15);
  v17 = v11[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = type metadata accessor for Proto_Kernel(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
  {
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
  }
  else
  {
    v22 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v22))
    {
      v24 = (char *)&loc_240C811B0 + 4 * byte_240F22FC8[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    v16(&v18[*(int *)(v20 + 20)], &v19[*(int *)(v20 + 20)], v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
  }
  v25 = v11[8];
  v26 = (_QWORD *)((char *)a1 + v25);
  v27 = (_QWORD *)((char *)a2 + v25);
  v28 = type metadata accessor for Proto_Coefficients(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE48);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    *v26 = *v27;
    v16((char *)v26 + *(int *)(v28 + 20), (char *)v27 + *(int *)(v28 + 20), v15);
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  return a1;
}

_QWORD *assignWithTake for SupportVectorRegressorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  int v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  int v46;
  int v47;
  uint64_t v48;
  void (*v50)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE40);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors);
    v13 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v13 == 1)
      v14 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v14 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v18 = (int *)type metadata accessor for Proto_SupportVectorRegressor(0);
  *(_QWORD *)((char *)a1 + v18[5]) = *(_QWORD *)((char *)a2 + v18[5]);
  v19 = v18[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v22 = sub_240F1C930();
  v23 = *(_QWORD *)(v22 - 8);
  v24 = *(void (**)(char *, char *, uint64_t))(v23 + 40);
  v24(v20, v21, v22);
  v25 = v18[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = type metadata accessor for Proto_Kernel(0);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v28);
  v30 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28);
  if (v29)
  {
    if (!v30)
    {
      v31 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v31))
      {
        v38 = (char *)&loc_240C816AC + 4 * byte_240F22FCC[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v26[*(int *)(v28 + 20)], &v27[*(int *)(v28 + 20)], v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
      goto LABEL_32;
    }
LABEL_21:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_32;
  }
  if (v30)
  {
    sub_240BE10B8((uint64_t)v26, type metadata accessor for Proto_Kernel);
    goto LABEL_21;
  }
  v50 = v24;
  v34 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
  v35 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v34);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v34);
  if (v35)
  {
    if (!v36)
    {
      v40 = (char *)&loc_240C81724 + 4 * byte_240F22FD0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
    v24 = v50;
    v50(&v26[*(int *)(v28 + 20)], &v27[*(int *)(v28 + 20)], v22);
  }
  else
  {
    v24 = v50;
    if (v36)
    {
      sub_240BE10B8((uint64_t)v26, type metadata accessor for Proto_Kernel.OneOf_Kernel);
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
      memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else if (a1 != a2)
    {
      sub_240BE10B8((uint64_t)v26, type metadata accessor for Proto_Kernel.OneOf_Kernel);
      v41 = (char *)&loc_240C81828 + 4 * byte_240F22FD4[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v50(&v26[*(int *)(v28 + 20)], &v27[*(int *)(v28 + 20)], v22);
  }
LABEL_32:
  v42 = v18[8];
  v43 = (char *)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = type metadata accessor for Proto_Coefficients(0);
  v46 = __swift_getEnumTagSinglePayload((uint64_t)v43, 1, v45);
  v47 = __swift_getEnumTagSinglePayload((uint64_t)v44, 1, v45);
  if (!v46)
  {
    if (!v47)
    {
      *(_QWORD *)v43 = *(_QWORD *)v44;
      swift_bridgeObjectRelease();
      v24(&v43[*(int *)(v45 + 20)], &v44[*(int *)(v45 + 20)], v22);
      return a1;
    }
    sub_240BE10B8((uint64_t)v43, type metadata accessor for Proto_Coefficients);
    goto LABEL_37;
  }
  if (v47)
  {
LABEL_37:
    v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE48);
    memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v43 = *(_QWORD *)v44;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v43[*(int *)(v45 + 20)], &v44[*(int *)(v45 + 20)], v22);
  __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v45);
  return a1;
}

void sub_240C819E4()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)v1 = *(_QWORD *)v2;
  v4 = type metadata accessor for Proto_RBFKernel(0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v1[*(int *)(v4 + 20)], &v2[*(int *)(v4 + 20)], v0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x240C818D4);
}

void sub_240C81A1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)v1 = *(_DWORD *)v2;
  *(_OWORD *)(v1 + 8) = *(_OWORD *)(v2 + 8);
  v4 = type metadata accessor for Proto_PolyKernel(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v1 + *(int *)(v4 + 28), v2 + *(int *)(v4 + 28), v0);
  swift_storeEnumTagMultiPayload();
  JUMPOUT(0x240C818D4);
}

void sub_240C81A5C()
{
  uint64_t v0;
  char *v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;

  *(_OWORD *)v1 = *(_OWORD *)v2;
  v4 = type metadata accessor for Proto_SigmoidKernel(0);
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(&v1[*(int *)(v4 + 24)], &v2[*(int *)(v4 + 24)], v0);
  JUMPOUT(0x240C81A90);
}

uint64_t getEnumTagSinglePayload for SupportVectorRegressorConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C81AA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_4_13();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SupportVectorRegressorConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C81AE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_4_13();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SupportVectorRegressorConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F880);
}

uint64_t sub_240C81B28()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_SupportVectorRegressor(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *assignWithCopy for SupportVectorRegressorConfiguration.SupportVectors(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *assignWithTake for SupportVectorRegressorConfiguration.SupportVectors(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t OUTLINED_FUNCTION_4_13()
{
  return type metadata accessor for Proto_SupportVectorRegressor(0);
}

void OUTLINED_FUNCTION_7_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_240C02F94(v0, v1, v2);
}

void OUTLINED_FUNCTION_11_13(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  sub_240C02F94(a1, v2, v1);
}

void OUTLINED_FUNCTION_12_13(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C35540(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_15_13()
{
  return type metadata accessor for SupportVectorRegressorConfiguration.SupportVectors(0);
}

uint64_t OUTLINED_FUNCTION_16_12()
{
  return type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
}

void OUTLINED_FUNCTION_18_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, v2);
  sub_240BE0B68(v0, v3);
}

uint64_t OUTLINED_FUNCTION_21_10()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_25_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  __swift_storeEnumTagSinglePayload(v2, 1, 1, v1);
  sub_240BE0B68(v0, v3);
}

uint64_t OUTLINED_FUNCTION_26_5()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_29_9()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_30_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v2, 1, v1);
  return *(_QWORD *)(v0 + 72);
}

void *OUTLINED_FUNCTION_32_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = a1;
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_35_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v1, v2, 1, v0);
}

void OUTLINED_FUNCTION_37_7()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(v1, v0, v2);
}

void OUTLINED_FUNCTION_38_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(v1, v0, v2);
}

void OUTLINED_FUNCTION_39_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C35540(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_46_6()
{
  return type metadata accessor for Proto_Coefficients(0);
}

void OUTLINED_FUNCTION_47_8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240C35540(a1, v3, a3);
}

void OUTLINED_FUNCTION_49_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C35540(v1, v0, v2);
}

void OUTLINED_FUNCTION_52_6(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_240C02F94(v4, v3, a3);
}

void OUTLINED_FUNCTION_54_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v3, v4, a3);
}

void OUTLINED_FUNCTION_55_5(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v4, v3, a3);
}

void OUTLINED_FUNCTION_56_8()
{
  uint64_t *v0;
  uint64_t v1;

  sub_240BE0B68(v1, v0);
}

void *OUTLINED_FUNCTION_60_5()
{
  return malloc(0x60uLL);
}

uint64_t OUTLINED_FUNCTION_62_4()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_63_4()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_67_4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_240C02F94(v4, v3, a3);
}

void OUTLINED_FUNCTION_68_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_69_3(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = a1;
  *a1 = v2;
  return 0;
}

unint64_t sub_240C81FE8(unint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  int v5;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *(_QWORD *)a2;
    *(_QWORD *)v4 = *(_QWORD *)a2;
    v4 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = *(unsigned __int8 *)(a2 + 16);
    if (v7 == 255)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    }
    else
    {
      v8 = *(_QWORD *)a2;
      v9 = *(_QWORD *)(a2 + 8);
      sub_240C820B4(*(_QWORD *)a2, v9, *(_BYTE *)(a2 + 16));
      *(_QWORD *)v4 = v8;
      *(_QWORD *)(v4 + 8) = v9;
      *(_BYTE *)(v4 + 16) = v7;
    }
    v11 = *(int *)(a3 + 20);
    v12 = v4 + v11;
    v13 = a2 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return v4;
}

uint64_t sub_240C820B4(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 5)
    return sub_240BF5610(result, a2);
  if (a3 == 1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_240C820D8(uint64_t a1, uint64_t a2)
{
  int v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(unsigned __int8 *)(a1 + 16);
  if (v4 != 255)
    sub_240C8212C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), v4);
  v5 = a1 + *(int *)(a2 + 20);
  v6 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
}

uint64_t sub_240C8212C(uint64_t result, unint64_t a2, char a3)
{
  if (a3 == 5)
    return sub_240BF6AE0(result, a2);
  if (a3 == 1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_240C82150(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *((unsigned __int8 *)a2 + 16);
  if (v6 == 255)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  }
  else
  {
    v7 = *a2;
    v8 = a2[1];
    sub_240C820B4(*a2, v8, v6);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    *(_BYTE *)(a1 + 16) = v6;
  }
  v9 = *(int *)(a3 + 20);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t sub_240C821F0(uint64_t a1, __int128 *a2, uint64_t a3)
{
  int v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  __int128 v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v6 = *((unsigned __int8 *)a2 + 16);
  if (*(unsigned __int8 *)(a1 + 16) == 255)
  {
    if (v6 == 255)
    {
      v15 = *a2;
      *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
      *(_OWORD *)a1 = v15;
    }
    else
    {
      v12 = *(_QWORD *)a2;
      v13 = *((_QWORD *)a2 + 1);
      sub_240C820B4(*(_QWORD *)a2, v13, v6);
      *(_QWORD *)a1 = v12;
      *(_QWORD *)(a1 + 8) = v13;
      *(_BYTE *)(a1 + 16) = v6;
    }
  }
  else if (v6 == 255)
  {
    sub_240C822EC(a1);
    v14 = *((_BYTE *)a2 + 16);
    *(_OWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 16) = v14;
  }
  else
  {
    v7 = *(_QWORD *)a2;
    v8 = *((_QWORD *)a2 + 1);
    sub_240C820B4(*(_QWORD *)a2, v8, v6);
    v9 = *(_QWORD *)a1;
    v10 = *(_QWORD *)(a1 + 8);
    *(_QWORD *)a1 = v7;
    *(_QWORD *)(a1 + 8) = v8;
    v11 = *(_BYTE *)(a1 + 16);
    *(_BYTE *)(a1 + 16) = v6;
    sub_240C8212C(v9, v10, v11);
  }
  v16 = *(int *)(a3 + 20);
  v17 = a1 + v16;
  v18 = (uint64_t)a2 + v16;
  v19 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 24))(v17, v18, v19);
  return a1;
}

uint64_t sub_240C822EC(uint64_t a1)
{
  destroy for Proto_CustomModel.CustomModelParamValue.OneOf_Value(a1);
  return a1;
}

uint64_t sub_240C82318(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_240C8237C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(unsigned __int8 *)(a1 + 16);
  if (v6 == 255)
    goto LABEL_5;
  v7 = *(unsigned __int8 *)(a2 + 16);
  if (v7 == 255)
  {
    sub_240C822EC(a1);
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    goto LABEL_6;
  }
  v8 = *(_QWORD *)a1;
  v9 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_BYTE *)(a1 + 16) = v7;
  sub_240C8212C(v8, v9, v6);
LABEL_6:
  v10 = *(int *)(a3 + 20);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(v11, v12, v13);
  return a1;
}

uint64_t sub_240C82420()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240C8242C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 249)
  {
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_10(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_240C82484()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240C82490(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 249)
  {
    *(_BYTE *)(a1 + 16) = ~(_BYTE)a2;
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_6(a1 + *(int *)(a4 + 20), a2, a2, v7);
  }
}

uint64_t type metadata accessor for Proto_CustomModel.CustomModelParamValue(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CF38);
}

uint64_t sub_240C824F8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for Proto_CustomModel.CustomModelParamValue.OneOf_Value(uint64_t a1)
{
  return sub_240C8212C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s20MLModelSpecification17Proto_CustomModelV21CustomModelParamValueV11OneOf_ValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240C820B4(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Proto_CustomModel.CustomModelParamValue.OneOf_Value(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240C820B4(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_240C8212C(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for Proto_CustomModel.CustomModelParamValue.OneOf_Value(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_240C8212C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_CustomModel.CustomModelParamValue.OneOf_Value(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFB && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 250;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 5)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_CustomModel.CustomModelParamValue.OneOf_Value(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 251;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFB)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for Proto_CustomModel.CustomModelParamValue.OneOf_Value()
{
  return &type metadata for Proto_CustomModel.CustomModelParamValue.OneOf_Value;
}

uint64_t *sub_240C826F4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = a2[3];
    a1[2] = a2[2];
    a1[3] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    a1[4] = a2[4];
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v3;
}

uint64_t sub_240C827B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240C82810(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *sub_240C828A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_240C8295C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C829C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  v7 = a2[4];
  a1[3] = a2[3];
  a1[4] = v7;
  swift_bridgeObjectRelease();
  v8 = *(int *)(a3 + 28);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v9, v10, v11);
  return a1;
}

uint64_t sub_240C82A54()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240C82A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_10(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t sub_240C82AC0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240C82ACC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_6(a1 + *(int *)(a4 + 28), a2, a2, v7);
  }
}

uint64_t type metadata accessor for Proto_CustomModel(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FAE0);
}

uint64_t sub_240C82B38()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_240C82BBC(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

BOOL sub_240C82BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  double v6;
  double v7;
  BOOL v8;

  v8 = v7 == v6;
  if (a6)
    return 0;
  return v8;
}

void sub_240C82D18(uint64_t a1)
{
  sub_240C82BBC(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_240C82D34@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -1;
  type metadata accessor for Proto_CustomModel.CustomModelParamValue(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C82D70@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for Proto_CustomModel.CustomModelParamValue(0);
  a1[2] = sub_240F1CC48();
  a1[3] = 0;
  a1[4] = 0xE000000000000000;
  type metadata accessor for Proto_CustomModel(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C82DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9170);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9170);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 10;
  *(_QWORD *)v7 = "className";
  *(_QWORD *)(v7 + 8) = 9;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 30;
  *(_QWORD *)v11 = "parameters";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 40;
  *(_QWORD *)v13 = "description";
  *((_QWORD *)v13 + 1) = 11;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

void sub_240C82F68()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_5_12();
  if (!v0)
  {
    while (1)
    {
      if ((v2 & 1) != 0)
        goto LABEL_2;
      if (v1 == 40)
        goto LABEL_7;
      if (v1 != 30)
        break;
      OUTLINED_FUNCTION_6_7();
      sub_240C82FE4();
LABEL_9:
      v1 = OUTLINED_FUNCTION_27_4();
    }
    if (v1 != 10)
      goto LABEL_9;
LABEL_7:
    sub_240F1CA98();
    goto LABEL_9;
  }
LABEL_2:
  OUTLINED_FUNCTION_7_13();
}

uint64_t sub_240C82FE4()
{
  sub_240F1C90C();
  type metadata accessor for Proto_CustomModel.CustomModelParamValue(0);
  sub_240C30D44(&qword_25708CF50, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23238);
  sub_240C30D44(&qword_25708CF58, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23170);
  return sub_240F1C978();
}

uint64_t sub_240C830B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v2 = v1;
  OUTLINED_FUNCTION_9_11();
  if (!v3 || (result = OUTLINED_FUNCTION_6_11(), (v2 = v1) == 0))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v0 + 16) + 16)
      || (sub_240F1C90C(),
          type metadata accessor for Proto_CustomModel.CustomModelParamValue(0),
          sub_240C30D44(&qword_25708CF50, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23238), sub_240C30D44(&qword_25708CF58, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23170), v1 = v2, result = sub_240F1CB10(), !v2))
    {
      OUTLINED_FUNCTION_9_11();
      if (!v5 || (result = OUTLINED_FUNCTION_6_11(), !v1))
      {
        type metadata accessor for Proto_CustomModel(0);
        return sub_240F1C918();
      }
    }
  }
  return result;
}

uint64_t sub_240C83204(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  char v13;
  BOOL v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  v11 = *a1 == *a2 && a1[1] == a2[1];
  if (v11 || (v12 = 0, (sub_240F1CEDC() & 1) != 0))
  {
    sub_240DB2B08();
    if ((v13 & 1) != 0)
    {
      v14 = a1[3] == a2[3] && a1[4] == a2[4];
      if (v14 || (v12 = 0, (sub_240F1CEDC() & 1) != 0))
      {
        v15 = type metadata accessor for Proto_CustomModel(0);
        OUTLINED_FUNCTION_8_15((uint64_t)v10, (uint64_t)a1 + *(int *)(v15 + 28));
        OUTLINED_FUNCTION_8_15((uint64_t)v8, (uint64_t)a2 + *(int *)(v15 + 28));
        sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v12 = sub_240F1CC90();
        v16 = *(void (**)(char *, uint64_t))(v5 + 8);
        v16(v8, v4);
        v16(v10, v4);
      }
    }
    else
    {
      v12 = 0;
    }
  }
  return v12 & 1;
}

unint64_t sub_240C83378()
{
  return 0xD000000000000011;
}

void sub_240C83394()
{
  sub_240C82F68();
}

uint64_t sub_240C833A8()
{
  return sub_240C830B0();
}

uint64_t sub_240C833BC()
{
  sub_240C30D44(&qword_25708CF88, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F23328);
  return sub_240F1C960();
}

uint64_t sub_240C8340C@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AEA0, (uint64_t)qword_2570F9170, a1);
}

uint64_t sub_240C83428()
{
  sub_240C30D44(&qword_25708CF68, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F23360);
  return sub_240F1CAF8();
}

uint64_t sub_240C83468()
{
  return sub_240C8427C(type metadata accessor for Proto_CustomModel, &qword_25708CF70, (uint64_t)&unk_240F233D8);
}

uint64_t sub_240C83494()
{
  sub_240C30D44(&qword_25708CF68, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F23360);
  return sub_240F1CB04();
}

uint64_t sub_240C834E8()
{
  uint64_t result;

  result = sub_240F1CCE4();
  qword_2570F9188 = 0xD000000000000011;
  unk_2570F9190 = 0x8000000240F52690;
  return result;
}

uint64_t *sub_240C83550()
{
  if (qword_25708AEA8 != -1)
    swift_once();
  return &qword_2570F9188;
}

uint64_t sub_240C83590()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9198);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9198);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F23420;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 10;
  *(_QWORD *)v7 = "doubleValue";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 20;
  *(_QWORD *)v11 = "stringValue";
  *(_QWORD *)(v11 + 8) = 11;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 30;
  *(_QWORD *)v13 = "intValue";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 40;
  *(_QWORD *)v15 = "longValue";
  *((_QWORD *)v15 + 1) = 9;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 50;
  *(_QWORD *)v17 = "BOOLValue";
  *((_QWORD *)v17 + 1) = 9;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 60;
  *(_QWORD *)v19 = "bytesValue";
  *((_QWORD *)v19 + 1) = 10;
  v19[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C837C0()
{
  uint64_t v0;
  uint64_t result;
  char v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t *, uint64_t, uint64_t);
  char v10;
  uint64_t v11;
  uint64_t v12;

  result = OUTLINED_FUNCTION_5_12();
  if (!v0)
  {
    v3 = MEMORY[0x24BE5C0D0];
    v4 = MEMORY[0x24BE5C100];
    while (1)
    {
      if ((v2 & 1) != 0)
        return result;
      switch(result)
      {
        case 60:
          OUTLINED_FUNCTION_6_7();
          sub_240C83BA0();
          goto LABEL_18;
        case 20:
          v11 = OUTLINED_FUNCTION_6_7();
          sub_240C838A4(v11, v12);
          goto LABEL_18;
        case 30:
          OUTLINED_FUNCTION_6_7();
          sub_240C83970();
          goto LABEL_18;
      }
      if (result == 40)
        break;
      if (result != 50)
      {
        if (result != 10)
          goto LABEL_18;
        v5 = OUTLINED_FUNCTION_6_7();
        v9 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v4;
        v10 = 0;
        goto LABEL_16;
      }
      OUTLINED_FUNCTION_6_7();
      sub_240C83AE8();
LABEL_18:
      result = OUTLINED_FUNCTION_27_4();
    }
    v5 = OUTLINED_FUNCTION_6_7();
    v9 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v3;
    v10 = 3;
LABEL_16:
    sub_240C83A28(v5, v6, v7, v8, v9, v10);
    goto LABEL_18;
  }
  return result;
}

uint64_t sub_240C838A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  result = sub_240F1CA8C();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v8)
  {
    if (*(unsigned __int8 *)(a2 + 16) == 255)
    {
      v5 = -1;
    }
    else
    {
      sub_240F1C99C();
      v5 = *(_BYTE *)(a2 + 16);
    }
    v6 = *(_QWORD *)a2;
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a2 = 0;
    *(_QWORD *)(a2 + 8) = v8;
    *(_BYTE *)(a2 + 16) = 1;
    return sub_240C845E8(v6, v7, v5);
  }
  return result;
}

uint64_t sub_240C83970()
{
  return sub_240F1CA20();
}

uint64_t sub_240C83A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, uint64_t), char a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  char v15;

  v14 = 0;
  v15 = 1;
  result = a5(&v14, a3, a4);
  if (!v6 && (v15 & 1) == 0)
  {
    v10 = v14;
    if (*(unsigned __int8 *)(a2 + 16) == 255)
    {
      v11 = -1;
    }
    else
    {
      sub_240F1C99C();
      v11 = *(_BYTE *)(a2 + 16);
    }
    v12 = *(_QWORD *)a2;
    v13 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a2 = v10;
    *(_QWORD *)(a2 + 8) = 0;
    *(_BYTE *)(a2 + 16) = a6;
    return sub_240C845E8(v12, v13, v11);
  }
  return result;
}

uint64_t sub_240C83AE8()
{
  return sub_240F1C9B4();
}

uint64_t sub_240C83BA0()
{
  uint64_t v0;
  uint64_t result;

  result = sub_240F1C9FC();
  if (v0)
    return sub_240C845FC(0, 0xF000000000000000);
  return result;
}

void sub_240C83C74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  switch(*(_BYTE *)(v0 + 16))
  {
    case 0:
      v2 = OUTLINED_FUNCTION_0_12();
      sub_240C83D3C(v2);
      goto LABEL_8;
    case 1:
      v3 = OUTLINED_FUNCTION_0_12();
      sub_240C83DA8(v3);
      goto LABEL_8;
    case 2:
      v4 = OUTLINED_FUNCTION_0_12();
      sub_240C83DE8(v4);
      goto LABEL_8;
    case 3:
      v5 = OUTLINED_FUNCTION_0_12();
      sub_240C83E58(v5);
      goto LABEL_8;
    case 4:
      v6 = OUTLINED_FUNCTION_0_12();
      sub_240C83EC8(v6);
      goto LABEL_8;
    case 5:
      v7 = OUTLINED_FUNCTION_0_12();
      sub_240C83F38(v7);
LABEL_8:
      if (!v1)
        goto LABEL_9;
      goto LABEL_10;
    default:
LABEL_9:
      type metadata accessor for Proto_CustomModel.CustomModelParamValue(0);
      sub_240F1C918();
LABEL_10:
      OUTLINED_FUNCTION_7_13();
      return;
  }
}

uint64_t sub_240C83D3C(uint64_t result)
{
  if (*(_BYTE *)(result + 16))
  {
    __break(1u);
  }
  else
  {
    sub_240C820B4(*(_QWORD *)result, *(_QWORD *)(result + 8), 0);
    return sub_240F1CBC4();
  }
  return result;
}

uint64_t sub_240C83DA8(uint64_t result)
{
  if (*(_BYTE *)(result + 16) == 1)
    return sub_240F1CBD0();
  __break(1u);
  return result;
}

uint64_t sub_240C83DE8(uint64_t result)
{
  if (*(_BYTE *)(result + 16) == 2)
  {
    sub_240C820B4(*(_QWORD *)result, *(_QWORD *)(result + 8), 2);
    return sub_240F1CBA0();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240C83E58(uint64_t result)
{
  if (*(_BYTE *)(result + 16) == 3)
  {
    sub_240C820B4(*(_QWORD *)result, *(_QWORD *)(result + 8), 3);
    return sub_240F1CBAC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240C83EC8(uint64_t result)
{
  if (*(_BYTE *)(result + 16) == 4)
  {
    sub_240C820B4(*(_QWORD *)result, *(_QWORD *)(result + 8), 4);
    return sub_240F1CB70();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240C83F38(uint64_t result)
{
  unint64_t v1;
  uint64_t v2;

  if (*(_BYTE *)(result + 16) == 5)
  {
    v2 = *(_QWORD *)result;
    v1 = *(_QWORD *)(result + 8);
    sub_240C820B4(*(_QWORD *)result, v1, 5);
    sub_240F1CB88();
    return sub_240C845E8(v2, v1, 5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240C83FC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  double v10;
  unint64_t v11;
  char v12;
  uint64_t v13;
  unint64_t v14;
  int v15;
  char v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;
  uint64_t v23;
  char v24;
  double v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  void (*v36)(uint64_t, uint64_t);
  uint64_t v38;
  uint64_t v39;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v38 - v8;
  v10 = *(double *)a1;
  v11 = *(_QWORD *)(a1 + 8);
  v12 = *(_BYTE *)(a1 + 16);
  v13 = *(uint64_t *)a2;
  v14 = *(_QWORD *)(a2 + 8);
  v15 = *(unsigned __int8 *)(a2 + 16);
  if (v15 == 255)
  {
LABEL_6:
    v17 = OUTLINED_FUNCTION_305();
    sub_240C84610(v17, v18, v12);
    sub_240C84610(v13, v14, v15);
    v19 = OUTLINED_FUNCTION_305();
    sub_240C845E8(v19, v20, v12);
    sub_240C845E8(v13, v14, v15);
LABEL_7:
    v16 = 0;
  }
  else
  {
    switch(*(_BYTE *)(a1 + 16))
    {
      case 0:
      case 6:
      case 7:
      case 8:
      case 9:
      case 0xA:
      case 0xB:
      case 0xC:
      case 0xD:
      case 0xE:
      case 0xF:
      case 0x10:
      case 0x11:
      case 0x12:
      case 0x13:
        v16 = 0;
        if (*(_BYTE *)(a2 + 16) || v10 != *(double *)&v13)
          return v16 & 1;
        goto LABEL_32;
      case 1:
        if (v15 != 1)
          goto LABEL_7;
        if (*(_QWORD *)&v10 != v13 || v11 != v14)
        {
          v22 = v7;
          v23 = v6;
          v24 = sub_240F1CEDC();
          v7 = v22;
          v6 = v23;
          v16 = 0;
          if ((v24 & 1) == 0)
            return v16 & 1;
        }
        goto LABEL_32;
      case 2:
        if (v15 != 2 || LODWORD(v10) != (_DWORD)v13)
          goto LABEL_7;
        goto LABEL_32;
      case 3:
        if (v15 != 3 || *(_QWORD *)&v10 != v13)
          goto LABEL_7;
        goto LABEL_32;
      case 4:
        v16 = 0;
        if (v15 != 4 || ((((*(_QWORD *)a1 & 1) == 0) ^ v13) & 1) == 0)
          return v16 & 1;
        goto LABEL_32;
      case 5:
        if (v15 != 5)
          goto LABEL_7;
        v27 = *(double *)a1;
        v39 = v7;
        v28 = v6;
        sub_240C84610(*(uint64_t *)&v27, v11, 5);
        sub_240C84610(v13, v14, 5);
        v29 = OUTLINED_FUNCTION_305();
        v30 = MEMORY[0x24268B91C](v29);
        sub_240C845E8(v13, v14, 5);
        v31 = OUTLINED_FUNCTION_305();
        sub_240C845E8(v31, v32, 5);
        v7 = v39;
        v6 = v28;
        if ((v30 & 1) == 0)
          goto LABEL_7;
LABEL_32:
        v33 = v6;
        v34 = v7;
        v35 = type metadata accessor for Proto_CustomModel.CustomModelParamValue(0);
        OUTLINED_FUNCTION_8_15((uint64_t)v9, a1 + *(int *)(v35 + 20));
        OUTLINED_FUNCTION_8_15(v34, a2 + *(int *)(v35 + 20));
        sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v16 = sub_240F1CC90();
        v36 = *(void (**)(uint64_t, uint64_t))(v33 + 8);
        v36(v34, v4);
        v36((uint64_t)v9, v4);
        break;
      default:
        goto LABEL_6;
    }
  }
  return v16 & 1;
}

uint64_t sub_240C8427C(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_240F1CF3C();
  a1(0);
  sub_240C30D44(a2, a1, a3);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C842FC()
{
  uint64_t v0;

  sub_240C83550();
  v0 = qword_2570F9188;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_240C84334()
{
  return sub_240C837C0();
}

void sub_240C84348()
{
  sub_240C83C74();
}

uint64_t sub_240C8435C()
{
  sub_240C30D44(&qword_25708CF90, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23200);
  return sub_240F1C960();
}

uint64_t sub_240C843AC@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AEB0, (uint64_t)qword_2570F9198, a1);
}

uint64_t sub_240C843C8()
{
  sub_240C30D44(&qword_25708CF50, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23238);
  return sub_240F1CAF8();
}

uint64_t sub_240C84408()
{
  return sub_240C8427C(type metadata accessor for Proto_CustomModel.CustomModelParamValue, &qword_25708CF58, (uint64_t)&unk_240F23170);
}

uint64_t sub_240C84434()
{
  sub_240C30D44(&qword_25708CF50, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23238);
  return sub_240F1CB04();
}

uint64_t sub_240C84488()
{
  return sub_240C30D44(&qword_25708CF48, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23148);
}

uint64_t sub_240C844B4()
{
  return sub_240C30D44(&qword_25708CF50, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23238);
}

uint64_t sub_240C844E0()
{
  return sub_240C30D44(&qword_25708CF58, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F23170);
}

uint64_t sub_240C8450C()
{
  return sub_240C30D44(&qword_25708CF60, type metadata accessor for Proto_CustomModel.CustomModelParamValue, (uint64_t)&unk_240F231B0);
}

uint64_t sub_240C84538()
{
  return sub_240C30D44(&qword_25708CF68, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F23360);
}

uint64_t sub_240C84564()
{
  return sub_240C30D44(&qword_25708CF70, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F233D8);
}

uint64_t sub_240C84590()
{
  return sub_240C30D44(&qword_25708CF78, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F232D8);
}

uint64_t sub_240C845BC()
{
  return sub_240C30D44(&qword_25708CF80, type metadata accessor for Proto_CustomModel, (uint64_t)&unk_240F232B0);
}

uint64_t sub_240C845E8(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_240C8212C(result, a2, a3);
  return result;
}

uint64_t sub_240C845FC(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_240BF6AE0(a1, a2);
  return a1;
}

uint64_t sub_240C84610(uint64_t result, unint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_240C820B4(result, a2, a3);
  return result;
}

uint64_t OUTLINED_FUNCTION_0_12()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_6_11()
{
  return sub_240F1CBD0();
}

uint64_t OUTLINED_FUNCTION_8_15(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_13_10()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_240C84690(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v16 = MEMORY[0x24BEE4AF8];
    sub_240BF0CC8();
    v7 = v16;
    type metadata accessor for TreeEnsemble.TreeNode();
    OUTLINED_FUNCTION_51_2();
    v9 = a1 + v8;
    v11 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_240BE0BF4(v9, v5, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode);
      v12 = *(_QWORD *)(v16 + 16);
      if (v12 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_240BF0CC8();
      OUTLINED_FUNCTION_78_3();
      sub_240BE0B90(v5, v13 + v14 * v12, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode);
      v9 += v11;
      --v6;
    }
    while (v6);
  }
  return v7;
}

uint64_t TreeEnsemble.nodes.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v1 = type metadata accessor for TreeEnsemble.TreeNode();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v4 = v3 - v2;
  v5 = *v0;
  v6 = *(_QWORD *)(*v0 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v16 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF0C9C();
    v7 = v16;
    type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0);
    OUTLINED_FUNCTION_51_2();
    v9 = v5 + v8;
    v11 = *(_QWORD *)(v10 + 72);
    do
    {
      sub_240BE0BF4(v9, v4, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode);
      v12 = *(_QWORD *)(v16 + 16);
      if (v12 >= *(_QWORD *)(v16 + 24) >> 1)
        sub_240BF0C9C();
      OUTLINED_FUNCTION_78_3();
      sub_240BE0B90(v4, v13 + v14 * v12, (uint64_t (*)(_QWORD))type metadata accessor for TreeEnsemble.TreeNode);
      v9 += v11;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  return v7;
}

void sub_240C84904()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  TreeEnsemble.nodes.setter(v0);
}

void TreeEnsemble.nodes.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_10_12(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

uint64_t (*TreeEnsemble.nodes.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = TreeEnsemble.nodes.getter();
  return sub_240C849A0;
}

uint64_t sub_240C849A0(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = sub_240C84690(v3);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *v2 = v4;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_10_12(*a1);
    OUTLINED_FUNCTION_42_2();
    result = swift_bridgeObjectRelease();
    *v2 = v6;
  }
  return result;
}

uint64_t TreeEnsemble.predictionSize.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 8);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t TreeEnsemble.predictionSize.setter(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
    __break(1u);
  else
    *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t *(*TreeEnsemble.predictionSize.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v2;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 8);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v2;
    return sub_240C42208;
  }
  return result;
}

uint64_t TreeEnsemble.basePrediction.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240C84A94()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  TreeEnsemble.basePrediction.setter(v0);
}

void TreeEnsemble.basePrediction.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*TreeEnsemble.basePrediction.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_240C84B18;
}

uint64_t sub_240C84B18(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 16) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 16) = v2;
  }
  return result;
}

void TreeEnsemble.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = v2;
  OUTLINED_FUNCTION_3_17();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_44();
}

void TreeEnsemble.init(basePrediction:nodes:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;

  *a3 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_3_17();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  a3[1] = *(_QWORD *)(a1 + 16);
  a3[2] = a1;
  v6 = OUTLINED_FUNCTION_10_12(a2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *a3 = v6;
  OUTLINED_FUNCTION_12_1();
}

BOOL static TreeEnsemble.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_240BEF57C();
  if ((v11 & 1) == 0)
    return 0;
  if (*(_QWORD *)(a1 + 8) != *(_QWORD *)(a2 + 8))
    return 0;
  if ((sub_240BEACE4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) == 0)
    return 0;
  v12 = OUTLINED_FUNCTION_3_17();
  v13 = a1 + *(int *)(v12 + 28);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, a2 + *(int *)(v12 + 28), v4);
  sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = sub_240F1CC90();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return (v15 & 1) != 0;
}

uint64_t TreeEnsemble.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v1 = sub_240F1CF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  v10 = type metadata accessor for TreeEnsemble();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v0, v12 - v11, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v14 + 32) = 0x7365646F6ELL;
  *(_QWORD *)(v14 + 40) = 0xE500000000000000;
  v15 = TreeEnsemble.nodes.getter();
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CF98);
  *(_QWORD *)(v14 + 48) = v15;
  *(_QWORD *)(v14 + 72) = result;
  strcpy((char *)(v14 + 80), "predictionSize");
  *(_BYTE *)(v14 + 95) = -18;
  v17 = *(_QWORD *)(v0 + 8);
  if (v17 < 0)
  {
    __break(1u);
  }
  else
  {
    v18 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v14 + 96) = v17;
    *(_QWORD *)(v14 + 120) = v18;
    strcpy((char *)(v14 + 128), "basePrediction");
    *(_BYTE *)(v14 + 143) = -18;
    v19 = *(_QWORD *)(v0 + 16);
    *(_QWORD *)(v14 + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEC8);
    *(_QWORD *)(v14 + 144) = v19;
    v20 = sub_240F1CF84();
    __swift_storeEnumTagSinglePayload(v9, 1, 1, v20);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE43C0], v1);
    swift_bridgeObjectRetain();
    return sub_240F1CFA8();
  }
  return result;
}

uint64_t type metadata accessor for TreeEnsemble()
{
  uint64_t result;

  result = qword_25708CFA0;
  if (!qword_25708CFA0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240C84FC0()
{
  sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
}

void sub_240C84FEC(uint64_t *a1@<X8>)
{
  *a1 = TreeEnsemble.nodes.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C85014(uint64_t *a1@<X8>)
{
  *a1 = TreeEnsemble.predictionSize.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C85038(uint64_t *a1)
{
  TreeEnsemble.predictionSize.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C85058(uint64_t *a1@<X8>)
{
  *a1 = TreeEnsemble.basePrediction.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for TreeEnsemble(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = *(int *)(v4 + 28);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for TreeEnsemble(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_TreeEnsembleParameters(0) + 28);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for TreeEnsemble(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_TreeEnsembleParameters(0) + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for TreeEnsemble(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_TreeEnsembleParameters(0) + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for TreeEnsemble(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_TreeEnsembleParameters(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for TreeEnsemble(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for Proto_TreeEnsembleParameters(0) + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for TreeEnsemble()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C853B8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_17();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TreeEnsemble()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C853F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_17();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C85428()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_TreeEnsembleParameters(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_17()
{
  return type metadata accessor for Proto_TreeEnsembleParameters(0);
}

uint64_t OUTLINED_FUNCTION_10_12(uint64_t a1)
{
  return sub_240C84690(a1);
}

void static NeuralNetwork.Layer.batchNormalize(name:inputName:outputName:inputChannelCount:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v12 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = v10;
  *(_QWORD *)(v12 + 40) = v8;
  v13 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = v6;
  *(_QWORD *)(v13 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v14 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  if (qword_25708B708 != -1)
    swift_once();
  *(_QWORD *)(v0 + v14) = qword_257090418;
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_11_14();
      OUTLINED_FUNCTION_192();
      v15 = OUTLINED_FUNCTION_32_10();
      *(_QWORD *)(v0 + v14) = sub_240E83C50(v15);
      OUTLINED_FUNCTION_12_14();
    }
    v16 = *(_QWORD *)(v0 + v14);
    OUTLINED_FUNCTION_16_0();
    *(_QWORD *)(v16 + 16) = v2;
    swift_storeEnumTagMultiPayload();
    NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
    OUTLINED_FUNCTION_1();
  }
}

void static NeuralNetwork.Layer.Kind.batchNormalize(inputChannelCount:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v4 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  if (qword_25708B708 != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = qword_257090418;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_11_14();
      OUTLINED_FUNCTION_192();
      v5 = OUTLINED_FUNCTION_4_14();
      *(_QWORD *)(a2 + v4) = OUTLINED_FUNCTION_14_14(v5);
      OUTLINED_FUNCTION_12_14();
    }
    v6 = *(_QWORD *)(a2 + v4);
    OUTLINED_FUNCTION_16_0();
    *(_QWORD *)(v6 + 16) = a1;
    type metadata accessor for NeuralNetwork.Layer.Kind();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_258();
  }
}

void NeuralNetwork.Layer.BatchNormalizeParameters.init(inputChannelCount:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v4 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  if (qword_25708B708 != -1)
    swift_once();
  *(_QWORD *)(a2 + v4) = qword_257090418;
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    swift_retain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_11_14();
      OUTLINED_FUNCTION_192();
      v5 = OUTLINED_FUNCTION_4_14();
      *(_QWORD *)(a2 + v4) = OUTLINED_FUNCTION_14_14(v5);
      OUTLINED_FUNCTION_12_14();
    }
    v6 = *(_QWORD *)(a2 + v4);
    OUTLINED_FUNCTION_16_0();
    *(_QWORD *)(v6 + 16) = a1;
    OUTLINED_FUNCTION_258();
  }
}

uint64_t NeuralNetwork.Layer.BatchNormalizeParameters.inputChannelCount.getter()
{
  uint64_t v0;
  uint64_t result;

  OUTLINED_FUNCTION_3_18();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_4_1();
  result = *(_QWORD *)(v0 + 16);
  if (result < 0)
    __break(1u);
  return result;
}

void NeuralNetwork.Layer.BatchNormalizeParameters.inputChannelCount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_3_18();
    if ((OUTLINED_FUNCTION_389() & 1) == 0)
    {
      OUTLINED_FUNCTION_11_14();
      OUTLINED_FUNCTION_192();
      v4 = OUTLINED_FUNCTION_4_14();
      *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_14_14(v4);
      OUTLINED_FUNCTION_12_14();
    }
    v5 = *(_QWORD *)(v1 + v2);
    OUTLINED_FUNCTION_16_0();
    *(_QWORD *)(v5 + 16) = a1;
    OUTLINED_FUNCTION_258();
  }
}

void NeuralNetwork.Layer.BatchNormalizeParameters.inputChannelCount.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  OUTLINED_FUNCTION_4_1();
  v6 = *(_QWORD *)(v5 + 16);
  if (v6 < 0)
  {
    __break(1u);
  }
  else
  {
    v3[9] = v6;
    OUTLINED_FUNCTION_156();
  }
}

void sub_240C858C0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v2 = *a1;
  v3 = *(_QWORD *)(*a1 + 72);
  if ((a2 & 1) != 0)
  {
    if ((v3 & 0x8000000000000000) == 0)
      goto LABEL_5;
    __break(1u);
LABEL_9:
    __break(1u);
    return;
  }
  if (v3 < 0)
    goto LABEL_9;
LABEL_5:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    v4 = *(int *)(v2 + 88);
    v5 = *(_QWORD *)(v2 + 80);
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v6 = OUTLINED_FUNCTION_4_14();
    *(_QWORD *)(v5 + v4) = OUTLINED_FUNCTION_14_14(v6);
    OUTLINED_FUNCTION_12_14();
  }
  v7 = (_QWORD *)(*(_QWORD *)(*(_QWORD *)(v2 + 80) + *(int *)(v2 + 88)) + 16);
  OUTLINED_FUNCTION_16_0();
  *v7 = v3;
  OUTLINED_FUNCTION_172((void *)v2);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.computesMeanVariance.getter()
{
  OUTLINED_FUNCTION_3_18();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_33_9();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.computesMeanVariance.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_3_18();
  if ((OUTLINED_FUNCTION_389() & 1) == 0)
  {
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v4 = OUTLINED_FUNCTION_4_14();
    *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_14_14(v4);
    OUTLINED_FUNCTION_12_14();
  }
  v5 = *(_QWORD *)(v1 + v2);
  OUTLINED_FUNCTION_16_0();
  *(_BYTE *)(v5 + 24) = a1 & 1;
  OUTLINED_FUNCTION_258();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.computesMeanVariance.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_21_11();
  *v0 = v2;
  v2[9] = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  *((_DWORD *)v2 + 20) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  OUTLINED_FUNCTION_4_1();
  *((_BYTE *)v2 + 84) = *(_BYTE *)(v4 + 24);
  OUTLINED_FUNCTION_156();
}

void sub_240C85A68()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = OUTLINED_FUNCTION_18_9();
  if ((v1 & 1) == 0)
  {
    if ((v3 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v3 & 1) == 0)
  {
LABEL_3:
    v4 = *(int *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 72);
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v6 = OUTLINED_FUNCTION_4_14();
    *(_QWORD *)(v5 + v4) = OUTLINED_FUNCTION_14_14(v6);
    OUTLINED_FUNCTION_12_14();
  }
LABEL_4:
  v7 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 72) + *(int *)(v0 + 80)) + 24);
  OUTLINED_FUNCTION_16_0();
  *v7 = v2;
  OUTLINED_FUNCTION_172((void *)v0);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.instanceNormalization.getter()
{
  OUTLINED_FUNCTION_3_18();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_33_9();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.instanceNormalization.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_3_18();
  if ((OUTLINED_FUNCTION_389() & 1) == 0)
  {
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v4 = OUTLINED_FUNCTION_4_14();
    *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_14_14(v4);
    OUTLINED_FUNCTION_12_14();
  }
  v5 = *(_QWORD *)(v1 + v2);
  OUTLINED_FUNCTION_16_0();
  *(_BYTE *)(v5 + 25) = a1 & 1;
  OUTLINED_FUNCTION_258();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.instanceNormalization.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_21_11();
  *v0 = v2;
  v2[9] = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  *((_DWORD *)v2 + 20) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  OUTLINED_FUNCTION_4_1();
  *((_BYTE *)v2 + 84) = *(_BYTE *)(v4 + 25);
  OUTLINED_FUNCTION_156();
}

void sub_240C85BEC()
{
  uint64_t v0;
  char v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;

  v3 = OUTLINED_FUNCTION_18_9();
  if ((v1 & 1) == 0)
  {
    if ((v3 & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((v3 & 1) == 0)
  {
LABEL_3:
    v4 = *(int *)(v0 + 80);
    v5 = *(_QWORD *)(v0 + 72);
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v6 = OUTLINED_FUNCTION_4_14();
    *(_QWORD *)(v5 + v4) = OUTLINED_FUNCTION_14_14(v6);
    OUTLINED_FUNCTION_12_14();
  }
LABEL_4:
  v7 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v0 + 72) + *(int *)(v0 + 80)) + 25);
  OUTLINED_FUNCTION_16_0();
  *v7 = v2;
  OUTLINED_FUNCTION_172((void *)v0);
}

float NeuralNetwork.Layer.BatchNormalizeParameters.minimumVariance.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_18();
  OUTLINED_FUNCTION_34_7();
  OUTLINED_FUNCTION_4_1();
  return *(float *)(v0 + 28);
}

uint64_t NeuralNetwork.Layer.BatchNormalizeParameters.minimumVariance.setter(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;

  v3 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v4 = OUTLINED_FUNCTION_32_10();
    *(_QWORD *)(v1 + v3) = sub_240E83C50(v4);
    OUTLINED_FUNCTION_12_14();
  }
  v5 = *(_QWORD *)(v1 + v3);
  result = OUTLINED_FUNCTION_16_0();
  *(float *)(v5 + 28) = a1;
  return result;
}

void NeuralNetwork.Layer.BatchNormalizeParameters.minimumVariance.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_21_11();
  *v0 = v2;
  v2[9] = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_3_18() + 20);
  *((_DWORD *)v2 + 21) = v3;
  v4 = *(_QWORD *)(v1 + v3);
  OUTLINED_FUNCTION_4_1();
  *((_DWORD *)v2 + 20) = *(_DWORD *)(v4 + 28);
  OUTLINED_FUNCTION_156();
}

void sub_240C85D90(uint64_t *a1, char a2)
{
  uint64_t v3;
  int v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;

  v3 = *a1;
  v4 = *(_DWORD *)(*a1 + 80);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 84);
    v7 = *(_QWORD *)(v3 + 72);
    OUTLINED_FUNCTION_11_14();
    OUTLINED_FUNCTION_192();
    v8 = OUTLINED_FUNCTION_4_14();
    *(_QWORD *)(v7 + v6) = OUTLINED_FUNCTION_14_14(v8);
    OUTLINED_FUNCTION_12_14();
  }
LABEL_4:
  v9 = (_DWORD *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 84)) + 28);
  OUTLINED_FUNCTION_16_0();
  *v9 = v4;
  free((void *)v3);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.scale.getter()
{
  sub_240C85EC8();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.scale.setter()
{
  sub_240C860AC();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.scale.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_27_8(a1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  *(_QWORD *)(v1 + 8) = OUTLINED_FUNCTION_0_5(v2);
  v3 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_19_10((uint64_t)v3);
  NeuralNetwork.Layer.BatchNormalizeParameters.scale.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240C85EB0(uint64_t a1, char a2)
{
  sub_240C86380(a1, a2, (void (*)(void *))NeuralNetwork.Layer.BatchNormalizeParameters.scale.setter);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.offset.getter()
{
  sub_240C85EC8();
}

void sub_240C85EC8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[48];

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for Proto_WeightParams(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  OUTLINED_FUNCTION_0();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v23[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v23[-v12];
  v14 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_3_18() + 20));
  v15 = v14 + *v3;
  OUTLINED_FUNCTION_4_1();
  sub_240C02F94(v15, (uint64_t)v13, &qword_25708C1F0);
  v16 = 1;
  LODWORD(v15) = OUTLINED_FUNCTION_24_4((uint64_t)v13);
  sub_240C866DC((uint64_t)v13, &qword_25708C1F0);
  if ((_DWORD)v15 != 1)
  {
    v17 = v14 + *v3;
    OUTLINED_FUNCTION_4_1();
    sub_240C02F94(v17, (uint64_t)v11, &qword_25708C1F0);
    if (OUTLINED_FUNCTION_24_4((uint64_t)v11) == 1)
    {
      *(_QWORD *)v1 = MEMORY[0x24BEE4AF8];
      *(_OWORD *)(v1 + 8) = xmmword_240F1FDE0;
      *(_OWORD *)(v1 + 24) = xmmword_240F1FDE0;
      *(_OWORD *)(v1 + 40) = xmmword_240F1FDE0;
      *(_BYTE *)(v1 + 56) = 0;
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v18 = v1 + *(int *)(v6 + 40);
      v19 = type metadata accessor for Proto_QuantizationParams(0);
      OUTLINED_FUNCTION_17_11(v18, 1, v20, v19);
      sub_240C866DC((uint64_t)v11, &qword_25708C1F0);
    }
    else
    {
      sub_240C35540((uint64_t)v11, v1, type metadata accessor for Proto_WeightParams);
    }
    sub_240C35540(v1, v5, type metadata accessor for Proto_WeightParams);
    v16 = 0;
  }
  v21 = type metadata accessor for NeuralNetwork.WeightParameters();
  OUTLINED_FUNCTION_17_11(v5, v16, v22, v21);
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.offset.setter()
{
  sub_240C860AC();
}

void sub_240C860AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(void);
  void (*v4)(void);
  void (*v5)(uint64_t);
  void (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  type metadata accessor for Proto_WeightParams(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  v11 = type metadata accessor for NeuralNetwork.WeightParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_11_5();
  sub_240C02F94(v8, v2, &qword_25708CFB0);
  if (__swift_getEnumTagSinglePayload(v2, 1, v11) == 1)
  {
    sub_240C866DC(v2, &qword_25708CFB0);
    v4();
    sub_240C866DC(v8, &qword_25708CFB0);
  }
  else
  {
    sub_240C35540(v2, v1, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
    sub_240C355AC(v1, v0, type metadata accessor for Proto_WeightParams);
    v6(v0);
    sub_240C866DC(v8, &qword_25708CFB0);
    sub_240C412B4(v1);
  }
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.offset.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_27_8(a1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  *(_QWORD *)(v1 + 8) = OUTLINED_FUNCTION_0_5(v2);
  v3 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_19_10((uint64_t)v3);
  NeuralNetwork.Layer.BatchNormalizeParameters.offset.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240C86218(uint64_t a1, char a2)
{
  sub_240C86380(a1, a2, (void (*)(void *))NeuralNetwork.Layer.BatchNormalizeParameters.offset.setter);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.mean.getter()
{
  sub_240C85EC8();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.mean.setter()
{
  sub_240C860AC();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.mean.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_27_8(a1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  *(_QWORD *)(v1 + 8) = OUTLINED_FUNCTION_0_5(v2);
  v3 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_19_10((uint64_t)v3);
  NeuralNetwork.Layer.BatchNormalizeParameters.mean.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240C8628C(uint64_t a1, char a2)
{
  sub_240C86380(a1, a2, (void (*)(void *))NeuralNetwork.Layer.BatchNormalizeParameters.mean.setter);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.variance.getter()
{
  sub_240C85EC8();
}

uint64_t sub_240C862A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_81();
  sub_240C02F94(a1, v5, &qword_25708CFB0);
  return a5(v5);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.variance.setter()
{
  sub_240C860AC();
}

void NeuralNetwork.Layer.BatchNormalizeParameters.variance.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  void *v3;

  OUTLINED_FUNCTION_27_8(a1);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  *(_QWORD *)(v1 + 8) = OUTLINED_FUNCTION_0_5(v2);
  v3 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_19_10((uint64_t)v3);
  NeuralNetwork.Layer.BatchNormalizeParameters.variance.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240C86374(uint64_t a1, char a2)
{
  sub_240C86380(a1, a2, (void (*)(void *))NeuralNetwork.Layer.BatchNormalizeParameters.variance.setter);
}

void sub_240C86380(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240C02F94(*(_QWORD *)(a1 + 16), (uint64_t)v4, &qword_25708CFB0);
    a3(v4);
    sub_240C866DC((uint64_t)v5, &qword_25708CFB0);
  }
  else
  {
    a3(*(void **)(a1 + 16));
  }
  free(v5);
  free(v4);
}

void NeuralNetwork.Layer.BatchNormalizeParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD v22[14];

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v5 = sub_240F1CF90();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  v22[1] = type metadata accessor for NeuralNetwork.Layer.BatchNormalizeParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  sub_240C355AC(v0, v2, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v12 + 16) = xmmword_240F234D0;
  *(_QWORD *)(v12 + 32) = 0xD000000000000011;
  *(_QWORD *)(v12 + 40) = 0x8000000240F52730;
  v13 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_3_18() + 20));
  OUTLINED_FUNCTION_4_1();
  v14 = *(_QWORD *)(v13 + 16);
  if (v14 < 0)
  {
    __break(1u);
  }
  else
  {
    v15 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v12 + 48) = v14;
    *(_QWORD *)(v12 + 72) = v15;
    *(_QWORD *)(v12 + 80) = 0xD000000000000014;
    *(_QWORD *)(v12 + 88) = 0x8000000240F52750;
    OUTLINED_FUNCTION_4_1();
    v16 = *(_BYTE *)(v13 + 24);
    v22[0] = v4;
    v17 = MEMORY[0x24BEE1328];
    *(_BYTE *)(v12 + 96) = v16;
    *(_QWORD *)(v12 + 120) = v17;
    *(_QWORD *)(v12 + 128) = 0xD000000000000015;
    *(_QWORD *)(v12 + 136) = 0x8000000240F52770;
    OUTLINED_FUNCTION_4_1();
    *(_BYTE *)(v12 + 144) = *(_BYTE *)(v13 + 25);
    *(_QWORD *)(v12 + 168) = v17;
    *(_QWORD *)(v12 + 176) = 0x566D756D696E696DLL;
    *(_QWORD *)(v12 + 184) = 0xEF65636E61697261;
    OUTLINED_FUNCTION_4_1();
    v18 = MEMORY[0x24BEE14E8];
    *(_DWORD *)(v12 + 192) = *(_DWORD *)(v13 + 28);
    *(_QWORD *)(v12 + 216) = v18;
    *(_QWORD *)(v12 + 224) = 0x656C616373;
    *(_QWORD *)(v12 + 232) = 0xE500000000000000;
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
    *(_QWORD *)(v12 + 264) = v19;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v12 + 240));
    NeuralNetwork.Layer.BatchNormalizeParameters.scale.getter();
    *(_QWORD *)(v12 + 272) = 0x74657366666FLL;
    *(_QWORD *)(v12 + 280) = 0xE600000000000000;
    *(_QWORD *)(v12 + 312) = v19;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v12 + 288));
    NeuralNetwork.Layer.BatchNormalizeParameters.offset.getter();
    *(_QWORD *)(v12 + 320) = 1851876717;
    *(_QWORD *)(v12 + 328) = 0xE400000000000000;
    *(_QWORD *)(v12 + 360) = v19;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v12 + 336));
    NeuralNetwork.Layer.BatchNormalizeParameters.mean.getter();
    *(_QWORD *)(v12 + 368) = 0x65636E6169726176;
    *(_QWORD *)(v12 + 376) = 0xE800000000000000;
    *(_QWORD *)(v12 + 408) = v19;
    __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v12 + 384));
    NeuralNetwork.Layer.BatchNormalizeParameters.variance.getter();
    v20 = sub_240F1CF84();
    OUTLINED_FUNCTION_17_11(v1, 1, v21, v20);
    (*(void (**)(char *, _QWORD, uint64_t))(v6 + 104))(v8, *MEMORY[0x24BEE43C0], v5);
    sub_240F1CFA8();
    OUTLINED_FUNCTION_1();
  }
}

void sub_240C866DC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a2);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_44();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BatchNormalizeParameters()
{
  uint64_t result;

  result = qword_25708CFC0;
  if (!qword_25708CFC0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240C86750()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708CFB8;
  if (!qword_25708CFB8)
  {
    v1 = type metadata accessor for Proto_BatchnormLayerParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4DB64, v1);
    atomic_store(result, (unint64_t *)&qword_25708CFB8);
  }
  return result;
}

void sub_240C86790()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.BatchNormalizeParameters.inputChannelCount.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C867B0(uint64_t *a1)
{
  NeuralNetwork.Layer.BatchNormalizeParameters.inputChannelCount.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C867D0()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.BatchNormalizeParameters.computesMeanVariance.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C867F4(char *a1)
{
  NeuralNetwork.Layer.BatchNormalizeParameters.computesMeanVariance.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C86814()
{
  _BYTE *v0;
  char v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.BatchNormalizeParameters.instanceNormalization.getter();
  *v0 = v1 & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C86838(char *a1)
{
  NeuralNetwork.Layer.BatchNormalizeParameters.instanceNormalization.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C86858()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.BatchNormalizeParameters.minimumVariance.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C86878(float *a1)
{
  NeuralNetwork.Layer.BatchNormalizeParameters.minimumVariance.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C86898()
{
  NeuralNetwork.Layer.BatchNormalizeParameters.scale.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C868B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240C862A4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.BatchNormalizeParameters.scale.setter);
}

void sub_240C868D0()
{
  NeuralNetwork.Layer.BatchNormalizeParameters.offset.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C868EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240C862A4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.BatchNormalizeParameters.offset.setter);
}

void sub_240C86908()
{
  NeuralNetwork.Layer.BatchNormalizeParameters.mean.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C86924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240C862A4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.BatchNormalizeParameters.mean.setter);
}

void sub_240C86940()
{
  NeuralNetwork.Layer.BatchNormalizeParameters.variance.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C8695C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240C862A4(a1, a2, a3, a4, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.BatchNormalizeParameters.variance.setter);
}

uint64_t *_s24BatchNormalizeParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Proto_BatchnormLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t _s24BatchNormalizeParametersVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Proto_BatchnormLayerParams(0);
  return swift_release();
}

uint64_t _s24BatchNormalizeParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for Proto_BatchnormLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t _s24BatchNormalizeParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for Proto_BatchnormLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s24BatchNormalizeParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for Proto_BatchnormLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t _s24BatchNormalizeParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for Proto_BatchnormLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t _s24BatchNormalizeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C86BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_18();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s24BatchNormalizeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C86C14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_18();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C86C48()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_BatchnormLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_18()
{
  return type metadata accessor for Proto_BatchnormLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_4_14()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_11_14()
{
  return type metadata accessor for Proto_BatchnormLayerParams._StorageClass(0);
}

uint64_t OUTLINED_FUNCTION_12_14()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_14(uint64_t a1)
{
  return sub_240E83C50(a1);
}

uint64_t OUTLINED_FUNCTION_18_9()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_19_10(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

void *OUTLINED_FUNCTION_21_11()
{
  return malloc(0x58uLL);
}

_QWORD *OUTLINED_FUNCTION_27_8(_QWORD *result)
{
  uint64_t v1;

  *result = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_32_10()
{
  return swift_retain();
}

uint64_t *sub_240C86D44(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    a1[2] = a2[2];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_240C86DE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240C86E30(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_240C86EA8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_240C86F2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C86F90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v7 = *(int *)(a3 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_240C87004()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240C87010(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_71_1(*(_QWORD *)(a1 + 8));
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_10(a1 + *(int *)(a3 + 24), a2, v6);
  }
}

uint64_t sub_240C87064()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240C87070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72_1();
  if (v3)
  {
    *(_QWORD *)(v1 + 8) = (v0 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_6(v1 + *(int *)(v4 + 24), v0, v0, v5);
  }
}

uint64_t type metadata accessor for Proto_FeatureVectorizer.InputColumn(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CFD0);
}

uint64_t sub_240C870D0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_240C87150(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_240C871E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240C87230(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C872A0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_240C87314(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C87370(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_240C873DC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240C873E8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_71_1(*a1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_10((uint64_t)a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_240C8743C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240C87448()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72_1();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_6((uint64_t)v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t type metadata accessor for Proto_FeatureVectorizer(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FF20);
}

uint64_t sub_240C874A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240C87520@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  type metadata accessor for Proto_FeatureVectorizer.InputColumn(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C8755C@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  type metadata accessor for Proto_FeatureVectorizer(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C87598()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F91B0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F91B0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240F1DA30;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "inputList";
  *(_QWORD *)(v5 + 8) = 9;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_240F1CC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_240F1CC18();
}

uint64_t sub_240C8769C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    result = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    if (result == 1)
      sub_240C876F8();
  }
  return result;
}

uint64_t sub_240C876F8()
{
  type metadata accessor for Proto_FeatureVectorizer.InputColumn(0);
  sub_240C30D44(&qword_25708CFE0, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23718);
  return sub_240F1CABC();
}

uint64_t sub_240C8777C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  OUTLINED_FUNCTION_58_2();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16)
    || (type metadata accessor for Proto_FeatureVectorizer.InputColumn(0),
        sub_240C30D44(&qword_25708CFE0, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23718), result = sub_240F1CBF4(), !v0))
  {
    type metadata accessor for Proto_FeatureVectorizer(0);
    return OUTLINED_FUNCTION_50_3();
  }
  return result;
}

void sub_240C87834()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char v7;
  uint64_t v8;
  void (*v9)(char *, uint64_t);
  uint64_t v10;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - v5;
  sub_240BEB958();
  if ((v7 & 1) != 0)
  {
    v8 = type metadata accessor for Proto_FeatureVectorizer(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v8 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v8 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    v9 = *(void (**)(char *, uint64_t))(v2 + 8);
    v9(v0, v1);
    v9(v6, v1);
  }
  OUTLINED_FUNCTION_13();
}

unint64_t sub_240C8790C()
{
  return 0xD000000000000017;
}

uint64_t sub_240C87928(uint64_t a1, uint64_t a2)
{
  return sub_240C8769C(a1, a2);
}

uint64_t sub_240C8793C()
{
  return sub_240C8777C();
}

uint64_t sub_240C87950()
{
  sub_240C30D44(&qword_25708D020, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F236E0);
  return sub_240F1C960();
}

uint64_t sub_240C879A0@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AEB8, (uint64_t)qword_2570F91B0, a1);
}

uint64_t sub_240C879BC()
{
  sub_240C30D44(&qword_25708CFF0, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23790);
  return sub_240F1CAF8();
}

uint64_t sub_240C879FC()
{
  return sub_240C8427C(type metadata accessor for Proto_FeatureVectorizer, &qword_25708CFF8, (uint64_t)&unk_240F23848);
}

uint64_t sub_240C87A28()
{
  sub_240C30D44(&qword_25708CFF0, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23790);
  return sub_240F1CB04();
}

uint64_t sub_240C87A7C()
{
  uint64_t result;

  result = sub_240F1CCE4();
  qword_2570F91C8 = 0xD000000000000017;
  unk_2570F91D0 = 0x8000000240F52790;
  return result;
}

uint64_t *sub_240C87AEC()
{
  if (qword_25708AEC0 != -1)
    swift_once();
  return &qword_2570F91C8;
}

uint64_t sub_240C87B2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F91D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F91D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1D370;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "inputColumn";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "inputDimensions";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C87C7C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  result = sub_240F1C990();
  if (!v2)
  {
    while ((v4 & 1) == 0)
    {
      if (result == 2)
      {
        sub_240F1CAB0();
      }
      else if (result == 1)
      {
        sub_240F1CA98();
      }
      result = sub_240F1C990();
    }
  }
  return result;
}

uint64_t sub_240C87D08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t result;

  OUTLINED_FUNCTION_58_2();
  v3 = v1[1];
  v4 = HIBYTE(v3) & 0xF;
  if ((v3 & 0x2000000000000000) == 0)
    v4 = *v1 & 0xFFFFFFFFFFFFLL;
  if (!v4 || (result = sub_240F1CBD0(), !v0))
  {
    if (!*(_QWORD *)(v2 + 16) || (result = sub_240F1CBE8(), !v0))
    {
      type metadata accessor for Proto_FeatureVectorizer.InputColumn(0);
      return OUTLINED_FUNCTION_50_3();
    }
  }
  return result;
}

void sub_240C87DB8(_QWORD *a1, _QWORD *a2)
{
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t);
  uint64_t v14;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - v9;
  v11 = *a1 == *a2 && a1[1] == a2[1];
  if ((v11 || (sub_240F1CEDC() & 1) != 0) && a1[2] == a2[2])
  {
    v12 = type metadata accessor for Proto_FeatureVectorizer.InputColumn(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v12 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v12 + 24));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    v13 = *(void (**)(char *, uint64_t))(v4 + 8);
    v13(v2, v3);
    v13(v10, v3);
  }
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C87EB4()
{
  uint64_t v0;

  sub_240C87AEC();
  v0 = qword_2570F91C8;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_240C87EEC(uint64_t a1, uint64_t a2)
{
  return sub_240C87C7C(a1, a2);
}

uint64_t sub_240C87F00()
{
  return sub_240C87D08();
}

uint64_t sub_240C87F14()
{
  sub_240C30D44(&qword_25708D028, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23630);
  return sub_240F1C960();
}

uint64_t sub_240C87F64@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AEC8, (uint64_t)qword_2570F91D8, a1);
}

uint64_t sub_240C87F80()
{
  sub_240C30D44(&qword_25708CFE0, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23718);
  return sub_240F1CAF8();
}

uint64_t sub_240C87FC0()
{
  return sub_240C8427C(type metadata accessor for Proto_FeatureVectorizer.InputColumn, &qword_25708CFE8, (uint64_t)&unk_240F23808);
}

uint64_t sub_240C87FEC()
{
  sub_240C30D44(&qword_25708CFE0, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23718);
  return sub_240F1CB04();
}

uint64_t sub_240C88040()
{
  return sub_240C30D44(&qword_25708CFE0, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23718);
}

uint64_t sub_240C8806C()
{
  return sub_240C30D44(&qword_25708CFE8, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23808);
}

uint64_t sub_240C88098()
{
  return sub_240C30D44(&qword_25708CFF0, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23790);
}

uint64_t sub_240C880C4()
{
  return sub_240C30D44(&qword_25708CFF8, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23848);
}

uint64_t sub_240C880F0()
{
  return sub_240C30D44(&qword_25708D000, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F235E0);
}

uint64_t sub_240C8811C()
{
  return sub_240C30D44(&qword_25708D008, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23690);
}

uint64_t sub_240C88148()
{
  return sub_240C30D44(&qword_25708D010, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F235B8);
}

uint64_t sub_240C88174()
{
  return sub_240C30D44(&qword_25708D018, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23668);
}

BOOL static NeuralNetwork.Layer.ConcatenateParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void (*v13)(char *, unsigned __int8 *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 != *a2)
    return 0;
  v11 = OUTLINED_FUNCTION_1_12();
  v12 = &a1[*(int *)(v11 + 20)];
  v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.concatenate(name:inputName:outputName:alongSequenceAxis:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, char a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24_1();
  v15 = (_BYTE *)(v14 - v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v16 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  v17 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v17 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v17 + 32) = a5;
  *(_QWORD *)(v17 + 40) = a6;
  OUTLINED_FUNCTION_1_12();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v15 = a7;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.concatenate(alongSequenceAxis:)@<X0>(char a1@<W0>, _BYTE *a2@<X8>)
{
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.ConcatenateParameters.init(alongSequenceAxis:)(char a1@<W0>, _BYTE *a2@<X8>)
{
  OUTLINED_FUNCTION_1_12();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.ConcatenateParameters.alongSequenceAxis.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NeuralNetwork.Layer.ConcatenateParameters.alongSequenceAxis.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.ConcatenateParameters.alongSequenceAxis.modify(uint64_t a1))(uint64_t result)
{
  _BYTE *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *v1;
  return sub_240C5500C;
}

void NeuralNetwork.Layer.ConcatenateParameters.customMirror.getter()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  type metadata accessor for NeuralNetwork.Layer.ConcatenateParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240C8861C((uint64_t)v1, v13 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = 0xD000000000000011;
  *(_QWORD *)(v14 + 40) = 0x8000000240F527D0;
  v15 = *v1;
  *(_QWORD *)(v14 + 72) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v14 + 48) = v15;
  v16 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ConcatenateParameters()
{
  uint64_t result;

  result = qword_25708D038;
  if (!qword_25708D038)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C8861C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.ConcatenateParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C88660()
{
  return sub_240C30D44(&qword_25708D030, type metadata accessor for Proto_ConcatLayerParams, (uint64_t)&unk_240F4DAEC);
}

void sub_240C88690(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ConcatenateParameters.alongSequenceAxis.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C886B8(unsigned __int8 *a1)
{
  NeuralNetwork.Layer.ConcatenateParameters.alongSequenceAxis.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s21ConcatenateParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_ConcatLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s21ConcatenateParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_BYTE *_s21ConcatenateParametersVwcp(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *_s21ConcatenateParametersVwca(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *_s21ConcatenateParametersVwtk(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *_s21ConcatenateParametersVwta(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21ConcatenateParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8895C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_12();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s21ConcatenateParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C88998(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_12();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C889CC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ConcatLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_12()
{
  return type metadata accessor for Proto_ConcatLayerParams(0);
}

BOOL static NeuralNetwork.Layer.SqueezeParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE0(*(_QWORD *)a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + 8) != *(unsigned __int8 *)(a2 + 8))
    return 0;
  v11 = OUTLINED_FUNCTION_1_13();
  v12 = a1 + *(int *)(v11 + 24);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, a2 + *(int *)(v11 + 24), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.squeeze(name:inputName:outputName:axes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v14 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  *(_QWORD *)v7 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v7 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  NeuralNetwork.Layer.SqueezeParameters.axes.setter(a7);
  OUTLINED_FUNCTION_11_15();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.squeeze(axes:)@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  OUTLINED_FUNCTION_315();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_10_13();
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void static NeuralNetwork.Layer.squeezeAll(name:inputName:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v12 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  v13 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a6;
  *(_QWORD *)v6 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v6 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_BYTE *)(v6 + 8) = 1;
  OUTLINED_FUNCTION_11_15();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.squeezeAll()@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  OUTLINED_FUNCTION_6_12();
  *(_BYTE *)(a1 + 8) = 1;
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.SqueezeParameters.init(axes:)(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_10_13();
  OUTLINED_FUNCTION_44();
}

void static NeuralNetwork.Layer.SqueezeParameters.allUnitDimensions()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  OUTLINED_FUNCTION_6_12();
  *(_BYTE *)(a1 + 8) = 1;
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.SqueezeParameters.axes.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v4 = 0;
    v3 = v8;
    v5 = *(_QWORD *)(v8 + 16);
    do
    {
      v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_240BF080C();
      ++v4;
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5++ + 32) = v6;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_240C88FA4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return NeuralNetwork.Layer.SqueezeParameters.axes.setter(v0);
}

uint64_t NeuralNetwork.Layer.SqueezeParameters.axes.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_240BF0790();
    v5 = 0;
    v6 = v10;
    v7 = *(_QWORD *)(v10 + 16);
    do
    {
      v8 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_240BF0790();
      ++v5;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      *(_QWORD *)(v10 + 8 * v7++ + 32) = v8;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  *v2 = v6;
  return result;
}

void (*NeuralNetwork.Layer.SqueezeParameters.axes.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = NeuralNetwork.Layer.SqueezeParameters.axes.getter();
  return sub_240C890F8;
}

void sub_240C890F8(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.SqueezeParameters.axes.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_10_13();
    OUTLINED_FUNCTION_44();
  }
}

uint64_t NeuralNetwork.Layer.SqueezeParameters.squeezeAllUnitDimensions.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t NeuralNetwork.Layer.SqueezeParameters.squeezeAllUnitDimensions.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result;
  return result;
}

_BYTE *(*NeuralNetwork.Layer.SqueezeParameters.squeezeAllUnitDimensions.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 8);
  return sub_240C8915C;
}

_BYTE *sub_240C8915C(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 8) = result[8];
  return result;
}

void NeuralNetwork.Layer.SqueezeParameters.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  OUTLINED_FUNCTION_1_13();
  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.SqueezeParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.SqueezeParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  sub_240C89364(v0, (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v8 + 32) = 1936029793;
  *(_QWORD *)(v8 + 40) = 0xE400000000000000;
  v9 = NeuralNetwork.Layer.SqueezeParameters.axes.getter();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 72) = v10;
  *(_QWORD *)(v8 + 80) = 0xD000000000000018;
  *(_QWORD *)(v8 + 88) = 0x8000000240F527F0;
  v11 = *(_BYTE *)(v0 + 8);
  *(_QWORD *)(v8 + 120) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v8 + 96) = v11;
  v12 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SqueezeParameters()
{
  uint64_t result;

  result = qword_25708D050;
  if (!qword_25708D050)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C89364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.SqueezeParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C893A8()
{
  return sub_240C30D44(&qword_25708D048, type metadata accessor for Proto_SqueezeLayerParams, (uint64_t)&unk_240F4DA74);
}

void sub_240C893D4(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.SqueezeParameters.axes.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C893FC(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.SqueezeParameters.squeezeAllUnitDimensions.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C89424(unsigned __int8 *a1)
{
  NeuralNetwork.Layer.SqueezeParameters.squeezeAllUnitDimensions.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t _s17SqueezeParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v4 = type metadata accessor for Proto_SqueezeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(v4 + 24);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s17SqueezeParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t _s17SqueezeParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t _s17SqueezeParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s17SqueezeParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s17SqueezeParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s17SqueezeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C89734(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_13();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s17SqueezeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C89770(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_13();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C897A4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_SqueezeLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_13()
{
  return type metadata accessor for Proto_SqueezeLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_6_12()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_10_13()
{
  uint64_t v0;

  return NeuralNetwork.Layer.SqueezeParameters.axes.setter(v0);
}

uint64_t OUTLINED_FUNCTION_11_15()
{
  return swift_storeEnumTagMultiPayload();
}

void sub_240C89834()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t EnumTagSinglePayload;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  type metadata accessor for FeatureType.StateParameters.ElementType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0();
  v2 = OUTLINED_FUNCTION_101();
  type metadata accessor for FeatureType.StateParameters(v2);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for FeatureType.SequenceParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  v5 = OUTLINED_FUNCTION_101();
  type metadata accessor for FeatureType.ImageParameters(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v7 = OUTLINED_FUNCTION_101();
  type metadata accessor for FeatureType.DictionaryParameters(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_101();
  type metadata accessor for FeatureType.ShapedArrayParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  v10 = OUTLINED_FUNCTION_101();
  type metadata accessor for FeatureType(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24_1();
  v15 = v14 - v13;
  v16 = MEMORY[0x24BEE4AF8];
  v17 = v0[1];
  v18 = *v0 & 0xFFFFFFFFFFFFLL;
  if ((v17 & 0x2000000000000000) != 0)
    v18 = HIBYTE(v17) & 0xF;
  if (!v18)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
    sub_240C89CD8();
    OUTLINED_FUNCTION_10_14();
    v19 = sub_240F1CC60();
    OUTLINED_FUNCTION_9_12();
    OUTLINED_FUNCTION_11_16(2);
    sub_240C02BB4();
    v16 = v20;
    v21 = *(_QWORD *)(v20 + 16);
    if (v21 >= *(_QWORD *)(v20 + 24) >> 1)
    {
      OUTLINED_FUNCTION_3_19();
      v16 = v32;
    }
    *(_QWORD *)(v16 + 16) = v21 + 1;
    v22 = v16 + 48 * v21;
    *(_BYTE *)(v22 + 32) = 0;
    *(_OWORD *)(v22 + 40) = xmmword_240F239B0;
    *(_BYTE *)(v22 + 56) = 3;
    *(_QWORD *)(v22 + 64) = v19;
    *(_QWORD *)(v22 + 72) = v0;
    OUTLINED_FUNCTION_7_14(2);
  }
  v23 = type metadata accessor for Proto_FeatureDescription(0);
  sub_240C384A0((uint64_t)v0 + *(int *)(v23 + 28), v15);
  v24 = type metadata accessor for Proto_FeatureType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v15, 1, v24);
  sub_240C3802C(v15);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
    sub_240C89CD8();
    OUTLINED_FUNCTION_10_14();
    v26 = sub_240F1CC60();
    OUTLINED_FUNCTION_9_12();
    OUTLINED_FUNCTION_11_16(3);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      OUTLINED_FUNCTION_3_19();
      v16 = v30;
    }
    v27 = *(_QWORD *)(v16 + 16);
    if (v27 >= *(_QWORD *)(v16 + 24) >> 1)
    {
      OUTLINED_FUNCTION_3_19();
      v16 = v31;
    }
    *(_QWORD *)(v16 + 16) = v27 + 1;
    v28 = v16 + 48 * v27;
    *(_BYTE *)(v28 + 32) = 0;
    *(_OWORD *)(v28 + 40) = xmmword_240F239C0;
    *(_BYTE *)(v28 + 56) = 3;
    *(_QWORD *)(v28 + 64) = v26;
    *(_QWORD *)(v28 + 72) = EnumTagSinglePayload;
    OUTLINED_FUNCTION_7_14(3);
  }
  FeatureDescription.type.getter();
  v29 = (char *)&loc_240C89B4C + 4 * byte_240F239D0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

unint64_t sub_240C89CD8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D068;
  if (!qword_25708D068)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708D060);
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE12B0], v1);
    atomic_store(result, (unint64_t *)&qword_25708D068);
  }
  return result;
}

uint64_t sub_240C89D1C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_15()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_3_19()
{
  sub_240C02BB4();
}

uint64_t OUTLINED_FUNCTION_4_15(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  return sub_240C89D1C(a1, v1, v2);
}

void OUTLINED_FUNCTION_5_18()
{
  sub_240C94908();
}

uint64_t OUTLINED_FUNCTION_7_14(uint64_t a1)
{
  sub_240C02F7C(a1, 0, 3);
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_9_12()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_10_14()
{
  return 46;
}

uint64_t OUTLINED_FUNCTION_11_16(uint64_t a1)
{
  sub_240C02F64(a1, 0, 3);
  return swift_bridgeObjectRetain();
}

BOOL static NeuralNetwork.Layer.L2NormalizeParameters.== infix(_:_:)(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 != *a2)
    return 0;
  v11 = OUTLINED_FUNCTION_3_20();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, (char *)a2 + *(int *)(v11 + 20), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

uint64_t NeuralNetwork.Layer.L2NormalizeParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  *a1 = 0;
  OUTLINED_FUNCTION_3_20();
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t NeuralNetwork.Layer.LRNParameters.init()@<X0>(uint64_t a1@<X8>)
{
  type metadata accessor for Proto_LRNLayerParams(0);
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 0;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t NeuralNetwork.Layer.LayerNormalizeParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v2 = *(int *)(type metadata accessor for Proto_LayerNormalizationLayerParams(0) + 20);
  if (qword_25708BC18 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_257090448;
  return swift_retain();
}

uint64_t sub_240C8A004()
{
  return sub_240C30D44(&qword_25708D070, type metadata accessor for Proto_L2NormalizeLayerParams, (uint64_t)&unk_240F4D9FC);
}

uint64_t sub_240C8A030()
{
  return sub_240C30D44(&qword_25708D078, type metadata accessor for Proto_LRNLayerParams, (uint64_t)&unk_240F4D984);
}

uint64_t sub_240C8A05C()
{
  return sub_240C30D44(&qword_25708D080, type metadata accessor for Proto_LayerNormalizationLayerParams, (uint64_t)&unk_240F4D90C);
}

uint64_t *_s21L2NormalizeParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_L2NormalizeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s21L2NormalizeParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_DWORD *_s21L2NormalizeParametersVwcp(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *_s21L2NormalizeParametersVwca(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *_s21L2NormalizeParametersVwtk(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *_s21L2NormalizeParametersVwta(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21L2NormalizeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8A30C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_20();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21L2NormalizeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8A33C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_3_20();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.L2NormalizeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D088);
}

uint64_t sub_240C8A374(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_L2NormalizeLayerParams);
}

uint64_t _s13LRNParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_LRNLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = *(int *)(v4 + 32);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s13LRNParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s13LRNParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s13LRNParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s13LRNParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s13LRNParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s13LRNParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8A65C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_13();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s13LRNParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8A684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_13();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LRNParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D098);
}

uint64_t sub_240C8A6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LRNLayerParams);
}

uint64_t *_s24LayerNormalizeParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t _s24LayerNormalizeParametersVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Proto_LayerNormalizationLayerParams(0);
  return swift_release();
}

uint64_t _s24LayerNormalizeParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t _s24LayerNormalizeParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s24LayerNormalizeParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t _s24LayerNormalizeParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t _s24LayerNormalizeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8A920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_19();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s24LayerNormalizeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8A948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_19();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LayerNormalizeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D0A8);
}

uint64_t sub_240C8A978(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LayerNormalizationLayerParams);
}

uint64_t OUTLINED_FUNCTION_3_20()
{
  return type metadata accessor for Proto_L2NormalizeLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_5_19()
{
  return type metadata accessor for Proto_LayerNormalizationLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_6_13()
{
  return type metadata accessor for Proto_LRNLayerParams(0);
}

uint64_t *sub_240C8A9AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    a1[1] = a2[1];
    v6 = *(int *)(a3 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v5;
}

uint64_t sub_240C8AA5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 24);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240C8AAAC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_240C8AB2C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_QWORD *sub_240C8ABB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_240C8AC34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8AC40(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_20_0();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 24), a2, v8);
  }
}

uint64_t sub_240C8ACB0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_240C8ACBC(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 24), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Proto_Scaler()
{
  uint64_t result;

  result = qword_25435F9E8;
  if (!qword_25435F9E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C8AD5C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240C8ADD4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  OUTLINED_FUNCTION_2_16();
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C8AE0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F91F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F91F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1D370;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "shiftValue";
  *(_QWORD *)(v7 + 8) = 10;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "scaleValue";
  *((_QWORD *)v11 + 1) = 10;
  v11[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C8AF60()
{
  uint64_t v0;

  if (qword_25708AED0 != -1)
    swift_once();
  v0 = sub_240F1CC30();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2570F91F0);
}

uint64_t sub_240C8AFA8()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_240F1C990();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2 || result == 1)
        sub_240F1CA50();
      result = sub_240F1C990();
    }
  }
  return result;
}

uint64_t sub_240C8B038()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*v0 + 16) || (result = OUTLINED_FUNCTION_0_13(), !v1))
  {
    if (!*(_QWORD *)(v0[1] + 16) || (result = OUTLINED_FUNCTION_0_13(), !v1))
    {
      type metadata accessor for Proto_Scaler();
      return sub_240F1C918();
    }
  }
  return result;
}

uint64_t sub_240C8B0D8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE4(*a1, *a2) & 1) != 0 && (sub_240BEACE4(a1[1], a2[1]) & 1) != 0)
  {
    v11 = OUTLINED_FUNCTION_2_16();
    v12 = (char *)a1 + *(int *)(v11 + 24);
    v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
    v13(v10, v12, v4);
    v13(v8, (char *)a2 + *(int *)(v11 + 24), v4);
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v14 = sub_240F1CC90();
    v15 = *(void (**)(char *, uint64_t))(v5 + 8);
    v15(v8, v4);
    v15(v10, v4);
  }
  else
  {
    v14 = 0;
  }
  return v14 & 1;
}

uint64_t sub_240C8B214()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_2_16();
  sub_240C30D44(&qword_25708D0C8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23B4C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C8B280()
{
  return 0x63532E6F746F7250;
}

uint64_t sub_240C8B2A0()
{
  return sub_240C8AFA8();
}

uint64_t sub_240C8B2B4()
{
  return sub_240C8B038();
}

uint64_t sub_240C8B2C8()
{
  sub_240C30D44(&qword_25708D0D8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23BDC);
  return sub_240F1C960();
}

uint64_t sub_240C8B318@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240C8AF60();
  v3 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_240C8B358()
{
  sub_240C30D44(&qword_25708D0C0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23C14);
  return sub_240F1CAF8();
}

uint64_t sub_240C8B39C()
{
  sub_240C30D44(&qword_25708D0C0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23C14);
  return sub_240F1CB04();
}

uint64_t sub_240C8B3F0()
{
  return sub_240C30D44(&qword_25708D0B8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23B24);
}

uint64_t sub_240C8B41C()
{
  return sub_240C30D44(&qword_25708D0C0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23C14);
}

uint64_t sub_240C8B448()
{
  return sub_240C30D44(&qword_25708D0C8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23B4C);
}

uint64_t sub_240C8B474()
{
  return sub_240C30D44(&qword_25708D0D0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23B8C);
}

uint64_t OUTLINED_FUNCTION_0_13()
{
  return sub_240F1CB58();
}

uint64_t OUTLINED_FUNCTION_2_16()
{
  return type metadata accessor for Proto_Scaler();
}

void static NeuralNetwork.Layer.scatter(name:inputNames:outputName:axis:mode:)()
{
  sub_240C8B664();
}

uint64_t static NeuralNetwork.Layer.Kind.scatter(axis:mode:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240C8B778(a1, a2, type metadata accessor for Proto_ScatterLayerParams, a3);
}

void static NeuralNetwork.Layer.scatterND(name:inputNames:outputName:mode:)()
{
  uint64_t v0;
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_81();
  v8 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = v6;
  *(_QWORD *)(v9 + 40) = v4;
  *(_QWORD *)v0 = 0;
  *(_BYTE *)(v0 + 8) = 1;
  OUTLINED_FUNCTION_13_11();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)v0 = v8;
  *(_BYTE *)(v0 + 8) = 1;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.scatterND(mode:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_7_15(a1);
  OUTLINED_FUNCTION_5_10();
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void static NeuralNetwork.Layer.scatterAlong(name:inputNames:outputName:axis:mode:)()
{
  sub_240C8B664();
}

void sub_240C8B664()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t (*v2)(_QWORD);
  unsigned __int8 *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  v13 = v5;
  v7 = v6;
  v9 = v8;
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  v11 = *v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v12 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = v9;
  *(_QWORD *)(v12 + 40) = v7;
  *(_QWORD *)v0 = 0;
  *(_QWORD *)(v0 + 8) = 0;
  *(_BYTE *)(v0 + 16) = 1;
  v2(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)v0 = v13;
  *(_QWORD *)(v0 + 8) = v11;
  *(_BYTE *)(v0 + 16) = 1;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.scatterAlong(axis:mode:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_240C8B778(a1, a2, type metadata accessor for Proto_ScatterAlongAxisLayerParams, a3);
}

uint64_t sub_240C8B778@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = *a2;
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  OUTLINED_FUNCTION_231(a1, (uint64_t)a2, a3);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 16) = 1;
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.ScatterParameters.init(axis:mode:)(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_240C8B824(a1, a2, type metadata accessor for Proto_ScatterLayerParams, a3);
}

void NeuralNetwork.Layer.ScatterNDParameters.init(mode:)(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_7_15(a1);
  OUTLINED_FUNCTION_5_10();
  *(_QWORD *)v1 = v2;
  *(_BYTE *)(v1 + 8) = v3;
  OUTLINED_FUNCTION_156();
}

void NeuralNetwork.Layer.ScatterAlongAxisParameters.init(axis:mode:)(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t a3@<X8>)
{
  sub_240C8B824(a1, a2, type metadata accessor for Proto_ScatterAlongAxisLayerParams, a3);
}

void sub_240C8B824(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, uint64_t (*a3)(_QWORD)@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;

  v6 = *a2;
  *(_QWORD *)a4 = 0;
  *(_QWORD *)(a4 + 8) = 0;
  *(_BYTE *)(a4 + 16) = 1;
  OUTLINED_FUNCTION_231(a1, (uint64_t)a2, a3);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)a4 = a1;
  *(_QWORD *)(a4 + 8) = v6;
  *(_BYTE *)(a4 + 16) = 1;
  OUTLINED_FUNCTION_156();
}

uint64_t NeuralNetwork.Layer.ScatterParameters.axis.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NeuralNetwork.Layer.ScatterParameters.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.ScatterParameters.axis.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C3E138;
}

void NeuralNetwork.Layer.ScatterParameters.mode.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  if (*(_BYTE *)(v1 + 16) == 1)
    v2 = *(_BYTE *)(v1 + 8);
  else
    v2 = 0;
  *a1 = v2;
}

unsigned __int8 *sub_240C8B8B4(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.Layer.ScatterParameters.mode.setter(&v2);
}

unsigned __int8 *NeuralNetwork.Layer.ScatterParameters.mode.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = *result;
  *(_BYTE *)(v1 + 16) = 1;
  return result;
}

uint64_t (*NeuralNetwork.Layer.ScatterParameters.mode.modify(uint64_t a1))()
{
  uint64_t v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (*(_BYTE *)(v1 + 16) == 1)
    v2 = *(_BYTE *)(v1 + 8);
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C8B92C;
}

uint64_t NeuralNetwork.Layer.ScatterParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_ScatterLayerParams);
}

void NeuralNetwork.Layer.ScatterParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_ScatterLayerParams);
}

void sub_240C8B970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_ScatterLayerParams);
}

void NeuralNetwork.Layer.ScatterParameters.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C8BD04((uint64_t)type metadata accessor for NeuralNetwork.Layer.ScatterParameters, (uint64_t)NeuralNetwork.Layer.ScatterParameters.mode.getter, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void NeuralNetwork.Layer.ScatterNDParameters.mode.getter(_BYTE *a1@<X8>)
{
  char *v1;
  char v2;

  if (v1[8] == 1)
    v2 = *v1;
  else
    v2 = 0;
  *a1 = v2;
}

unsigned __int8 *sub_240C8B9C8(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.Layer.ScatterNDParameters.mode.setter(&v2);
}

unsigned __int8 *NeuralNetwork.Layer.ScatterNDParameters.mode.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.ScatterNDParameters.mode.modify(uint64_t a1))(uint64_t *result)
{
  char *v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (v1[8] == 1)
    v2 = *v1;
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C2B768;
}

uint64_t NeuralNetwork.Layer.ScatterNDParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_ScatterNDLayerParams);
}

void NeuralNetwork.Layer.ScatterNDParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_ScatterNDLayerParams);
}

void sub_240C8BA80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_ScatterNDLayerParams);
}

void NeuralNetwork.Layer.ScatterNDParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22();
  v3 = OUTLINED_FUNCTION_15_6();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.ScatterNDParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_48();
  sub_240C8BC6C(v0, v2, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v8 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v8 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v8 + 32) = 1701080941;
  *(_QWORD *)(v8 + 40) = 0xE400000000000000;
  *(_QWORD *)(v8 + 72) = &type metadata for NeuralNetwork.Layer.ScatterMode;
  NeuralNetwork.Layer.ScatterNDParameters.mode.getter((_BYTE *)(v8 + 48));
  v9 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v1, v10, v11, v9);
  OUTLINED_FUNCTION_25_9(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t (*NeuralNetwork.Layer.ScatterAlongAxisParameters.axis.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C8C828;
}

uint64_t (*NeuralNetwork.Layer.ScatterAlongAxisParameters.mode.modify(uint64_t a1))()
{
  uint64_t v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (*(_BYTE *)(v1 + 16) == 1)
    v2 = *(_BYTE *)(v1 + 8);
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C8B92C;
}

uint64_t *sub_240C8BC10(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)(v1 + 8) = *((unsigned __int8 *)result + 8);
  *(_BYTE *)(v1 + 16) = 1;
  return result;
}

uint64_t NeuralNetwork.Layer.ScatterAlongAxisParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ScatterParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D130);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ScatterNDParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D140);
}

uint64_t sub_240C8BC6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_231(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

void NeuralNetwork.Layer.ScatterAlongAxisParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void sub_240C8BCD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void NeuralNetwork.Layer.ScatterAlongAxisParameters.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C8BD04((uint64_t)type metadata accessor for NeuralNetwork.Layer.ScatterAlongAxisParameters, (uint64_t)NeuralNetwork.Layer.ScatterAlongAxisParameters.mode.getter, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240C8BD04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(void);
  void (*v24)(void);
  uint64_t (*v25)(_QWORD);
  uint64_t (*v26)(_QWORD);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_22();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v27 = OUTLINED_FUNCTION_15_6();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = v26(0);
  MEMORY[0x24BDAC7A8](v32);
  sub_240C8BC6C((uint64_t)v20, (uint64_t)&a9 - v33, v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v34 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v34 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v34 + 32) = 1936291937;
  *(_QWORD *)(v34 + 40) = 0xE400000000000000;
  v35 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v34 + 48) = *v20;
  *(_QWORD *)(v34 + 72) = v35;
  *(_QWORD *)(v34 + 80) = 1701080941;
  *(_QWORD *)(v34 + 88) = 0xE400000000000000;
  *(_QWORD *)(v34 + 120) = &type metadata for NeuralNetwork.Layer.ScatterMode;
  v24();
  v36 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0((uint64_t)v31, v37, v38, v36);
  OUTLINED_FUNCTION_25_9(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v28 + 104));
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ScatterAlongAxisParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D150);
}

unint64_t NeuralNetwork.Layer.ScatterMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 7;
  if (result < 7)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t NeuralNetwork.Layer.ScatterMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_240C8BEA4()
{
  return sub_240C30D44(&qword_25708D0F8, type metadata accessor for NeuralNetwork.Layer.ScatterParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.ScatterParameters);
}

uint64_t sub_240C8BED0()
{
  return sub_240C30D44(&qword_25708D100, type metadata accessor for Proto_ScatterLayerParams, (uint64_t)&unk_240F4D894);
}

uint64_t sub_240C8BEFC()
{
  return sub_240C30D44(&qword_25708D108, type metadata accessor for NeuralNetwork.Layer.ScatterNDParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.ScatterNDParameters);
}

uint64_t sub_240C8BF28()
{
  return sub_240C30D44(&qword_25708D110, type metadata accessor for Proto_ScatterNDLayerParams, (uint64_t)&unk_240F4D81C);
}

uint64_t sub_240C8BF54()
{
  return sub_240C30D44(&qword_25708D118, type metadata accessor for NeuralNetwork.Layer.ScatterAlongAxisParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.ScatterAlongAxisParameters);
}

uint64_t sub_240C8BF80()
{
  return sub_240C30D44(&qword_25708D120, type metadata accessor for Proto_ScatterAlongAxisLayerParams, (uint64_t)&unk_240F4D7A4);
}

unint64_t sub_240C8BFAC@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return NeuralNetwork.Layer.ScatterMode.init(rawValue:)(*a1, a2);
}

void sub_240C8BFB4(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ScatterMode.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

unint64_t sub_240C8BFD8()
{
  unint64_t result;

  result = qword_25708D128;
  if (!qword_25708D128)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.Layer.ScatterMode, &type metadata for NeuralNetwork.Layer.ScatterMode);
    atomic_store(result, (unint64_t *)&qword_25708D128);
  }
  return result;
}

void sub_240C8C014(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ScatterParameters.axis.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C8C038(uint64_t *a1)
{
  NeuralNetwork.Layer.ScatterParameters.axis.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C8C058(_BYTE *a1@<X8>)
{
  NeuralNetwork.Layer.ScatterParameters.mode.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C8C078(_BYTE *a1@<X8>)
{
  NeuralNetwork.Layer.ScatterNDParameters.mode.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C8C098(_BYTE *a1@<X8>)
{
  NeuralNetwork.Layer.ScatterParameters.mode.getter(a1);
  OUTLINED_FUNCTION_44();
}

void _s17ScatterParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C474(a1, a2, a3, type metadata accessor for Proto_ScatterLayerParams);
}

uint64_t _s17ScatterParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C8C514(a1, a2, type metadata accessor for Proto_ScatterLayerParams);
}

void _s17ScatterParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C560(a1, a2, a3, type metadata accessor for Proto_ScatterLayerParams);
}

void _s17ScatterParametersVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C5A0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_ScatterLayerParams);
}

void _s17ScatterParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C604(a1, a2, a3, type metadata accessor for Proto_ScatterLayerParams);
}

void _s17ScatterParametersVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C644(a1, a2, a3, type metadata accessor for Proto_ScatterLayerParams);
}

uint64_t _s17ScatterParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8C10C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_24_9();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s17ScatterParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8C134()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24_9();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C8C150(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ScatterLayerParams);
}

uint64_t _s19ScatterNDParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_ScatterNDLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(v4 + 20);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s19ScatterNDParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s19ScatterNDParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s19ScatterNDParametersVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s19ScatterNDParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s19ScatterNDParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s19ScatterNDParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8C408()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_11();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s19ScatterNDParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8C438()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_11();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C8C45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ScatterNDLayerParams);
}

void _s26ScatterAlongAxisParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C474(a1, a2, a3, type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void sub_240C8C474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = a4(0);
  if ((*(_DWORD *)(*(_QWORD *)(v6 - 8) + 80) & 0x20000) != 0)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
  }
  else
  {
    v7 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v7;
    *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
    v8 = *(int *)(v6 + 24);
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s26ScatterAlongAxisParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C8C514(a1, a2, type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

uint64_t sub_240C8C514(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(OUTLINED_FUNCTION_231(a1, a2, a3) + 24);
  v4 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

void _s26ScatterAlongAxisParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C560(a1, a2, a3, type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void sub_240C8C560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_1_14(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_2_17();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s26ScatterAlongAxisParametersVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C5A0(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void sub_240C8C5A0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = v4;
  a4(0);
  v5 = OUTLINED_FUNCTION_2_17();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s26ScatterAlongAxisParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C604(a1, a2, a3, type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void sub_240C8C604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_1_14(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_2_17();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s26ScatterAlongAxisParametersVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C8C644(a1, a2, a3, type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

void sub_240C8C644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_1_14(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_2_17();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t _s26ScatterAlongAxisParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8C684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_23_7();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s26ScatterAlongAxisParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C8C6AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_7();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C8C6C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ScatterAlongAxisLayerParams);
}

uint64_t _s11ScatterModeOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFA)
  {
    if (a2 + 6 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 6) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 7;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 7;
  v5 = v6 - 7;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s11ScatterModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 6 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 6) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFA)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF9)
    return ((uint64_t (*)(void))((char *)&loc_240C8C7A8 + 4 * byte_240F23C95[v4]))();
  *a1 = a2 + 6;
  return ((uint64_t (*)(void))((char *)sub_240C8C7DC + 4 * byte_240F23C90[v4]))();
}

uint64_t sub_240C8C7DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C8C7E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C8C7ECLL);
  return result;
}

uint64_t sub_240C8C7F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C8C800);
  *(_BYTE *)result = a2 + 6;
  return result;
}

uint64_t sub_240C8C804(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C8C80C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.Layer.ScatterMode()
{
  return &type metadata for NeuralNetwork.Layer.ScatterMode;
}

uint64_t OUTLINED_FUNCTION_1_14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_2_17()
{
  return sub_240F1C930();
}

uint64_t OUTLINED_FUNCTION_7_15@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  return type metadata accessor for Proto_ScatterNDLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_13_11()
{
  return type metadata accessor for Proto_ScatterNDLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_23_7()
{
  return type metadata accessor for Proto_ScatterAlongAxisLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_24_9()
{
  return type metadata accessor for Proto_ScatterLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_25_9@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t sub_240C8C8C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  _QWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v3 = type metadata accessor for MLProgram.Value();
  MEMORY[0x24BDAC7A8](v3);
  v20 = (uint64_t)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = type metadata accessor for MLProgram.Argument.Binding(0);
  v5 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v23);
  v7 = (_QWORD *)((char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v22 = type metadata accessor for Proto_MILSpec_Argument.Binding(0);
  v8 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v10 = (_QWORD *)((char *)v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = *(_QWORD *)(a1 + 16);
  v12 = MEMORY[0x24BEE4AF8];
  if (v11)
  {
    v19[1] = v1;
    v24 = MEMORY[0x24BEE4AF8];
    sub_240BF0B78();
    v13 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    v21 = *(_QWORD *)(v5 + 72);
    v14 = type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding(0);
    do
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v14);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      sub_240BE0B68((uint64_t)v10, &qword_25708C0F8);
      sub_240BE0BF4(v13, (uint64_t)v7, type metadata accessor for MLProgram.Argument.Binding);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = v20;
        sub_240BE0B90((uint64_t)v7, v20, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        sub_240BE0B90(v15, (uint64_t)v10, type metadata accessor for Proto_MILSpec_Value);
      }
      else
      {
        v16 = v7[1];
        *v10 = *v7;
        v10[1] = v16;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v14);
      v12 = v24;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0B78();
        v12 = v24;
      }
      v17 = *(_QWORD *)(v12 + 16);
      if (v17 >= *(_QWORD *)(v12 + 24) >> 1)
      {
        sub_240BF0B78();
        v12 = v24;
      }
      *(_QWORD *)(v12 + 16) = v17 + 1;
      sub_240BE0B90((uint64_t)v10, v12+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v17, type metadata accessor for Proto_MILSpec_Argument.Binding);
      v13 += v21;
      --v11;
    }
    while (v11);
  }
  return v12;
}

void sub_240C8CB6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17[2];

  v1 = OUTLINED_FUNCTION_33_10();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18();
  v2 = *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16);
  swift_bridgeObjectRelease();
  if (v2 != 1)
  {
    v7 = OUTLINED_FUNCTION_113();
    v8 = MLProgram.Argument.bindings.getter();
    sub_240C56A44(v8, (uint64_t)v17, v9, v10, v11, v12, v13, v14, v17[0], v17[1]);
    v16 = v15;
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v7 + 16) = v16;
    goto LABEL_5;
  }
  if (*(_QWORD *)(MLProgram.Argument.bindings.getter() + 16))
  {
    OUTLINED_FUNCTION_83_2();
    sub_240BE0BF4(v3 + v4, v0, type metadata accessor for MLProgram.Argument.Binding);
    OUTLINED_FUNCTION_42_2();
    sub_240C8F404();
    v5 = OUTLINED_FUNCTION_101_3();
    sub_240BE10B8(v5, v6);
LABEL_5:
    OUTLINED_FUNCTION_156();
    return;
  }
  __break(1u);
}

void sub_240C8CC50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  unint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(_QWORD);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  int EnumCaseMultiPayload;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  uint64_t (*v94)(uint64_t);
  uint64_t v95[4];
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;

  OUTLINED_FUNCTION_22();
  v101 = v3;
  OUTLINED_FUNCTION_105_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  v100 = v5;
  type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v99 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  v107 = v9;
  v98 = OUTLINED_FUNCTION_47_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v11);
  v95[1] = OUTLINED_FUNCTION_35_8((uint64_t)v95 - v12);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v103 = (uint64_t *)((char *)v95 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_23_0();
  v16 = MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_69_4(v16, v17, v18, v19, v20, v21, v22, v23, v95[0]);
  OUTLINED_FUNCTION_109_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_85();
  v104 = v25;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v26);
  v109 = (uint64_t)v95 - v27;
  v28 = OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_85();
  v108 = v30;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_386();
  v106 = v34;
  v113 = OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v35);
  v105 = (uint64_t)v95 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_38_0();
  v111 = v38;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_386();
  v112 = v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_2_0();
  v118 = v43;
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v44);
  v117 = (uint64_t)v95 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = OUTLINED_FUNCTION_33_10();
  v115 = *(_QWORD *)(v46 - 8);
  v116 = v46;
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_46_7();
  MEMORY[0x24BDAC7A8](v48);
  v50 = (char *)v95 - v49;
  v119 = v0;
  v51 = *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16);
  swift_bridgeObjectRelease();
  v114 = v51;
  if (v51)
  {
    v52 = 0;
    v102 = v28;
    v110 = v2;
    while (v52 < *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16))
    {
      OUTLINED_FUNCTION_83_2();
      OUTLINED_FUNCTION_106_3(v53 + v54 + *(_QWORD *)(v55 + 72) * v52, (uint64_t)v50);
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_106_3((uint64_t)v50, v1);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v56 = v117;
        sub_240BE0B90(v1, v117, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v57 = OUTLINED_FUNCTION_51_5();
        sub_240C5E950(v56 + *(int *)(v57 + 20), v2, &qword_25708CB50);
        v58 = 1;
        OUTLINED_FUNCTION_7_1(v2, 1, v113);
        if (!v59)
        {
          v60 = v112;
          OUTLINED_FUNCTION_58_6(v2, v112);
          v61 = v111;
          OUTLINED_FUNCTION_36_10(v60, v111);
          v62 = v105;
          OUTLINED_FUNCTION_36_10(v61, v105);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            OUTLINED_FUNCTION_126_1();
            OUTLINED_FUNCTION_156_0(v63, v64);
            v65 = v97;
            sub_240BE0BF4(v62, v97, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
            sub_240BE10B8(v61, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
            OUTLINED_FUNCTION_26_6(v62);
            OUTLINED_FUNCTION_149_1();
            v66 = v65;
            v2 = v110;
          }
          else
          {
            v69 = v62;
            v70 = v109;
            OUTLINED_FUNCTION_156_0(v69, v109);
            v71 = v70;
            v72 = v104;
            sub_240BE0BF4(v71, v104, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
            v73 = v72;
            v74 = v107;
            OUTLINED_FUNCTION_54_8(v73, v107);
            OUTLINED_FUNCTION_7_1(v74, 1, v98);
            if (v59)
            {
              OUTLINED_FUNCTION_187(v107);
              OUTLINED_FUNCTION_26_6(v104);
              v75 = v103;
              *v103 = MEMORY[0x24BEE4AF8];
              v75[1] = 0;
              *((_BYTE *)v75 + 16) = 0;
              OUTLINED_FUNCTION_162_0();
            }
            else
            {
              OUTLINED_FUNCTION_17_16();
              OUTLINED_FUNCTION_91_1(v76, v77);
              OUTLINED_FUNCTION_126_1();
              OUTLINED_FUNCTION_51_7(v78, v79);
              sub_240C79C08();
              OUTLINED_FUNCTION_26_6(v104);
              v80 = v28;
              v28 = v102;
              OUTLINED_FUNCTION_25_4(v80);
            }
            v2 = v110;
            OUTLINED_FUNCTION_126_1();
            OUTLINED_FUNCTION_156_0(v81, v82);
            v83 = v74;
            v84 = v96;
            OUTLINED_FUNCTION_156_0(v83, v96);
            OUTLINED_FUNCTION_27_9(v111);
            sub_240BE10B8(v109, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
            OUTLINED_FUNCTION_11_2();
            OUTLINED_FUNCTION_162_0();
            v66 = v84;
          }
          v85 = v106;
          OUTLINED_FUNCTION_38_7(v66, v106);
          OUTLINED_FUNCTION_38_7(v85, v118);
          OUTLINED_FUNCTION_27_9(v112);
          v58 = 0;
        }
        v86 = v58;
        v87 = v118;
        OUTLINED_FUNCTION_14_5(v118, v86);
        OUTLINED_FUNCTION_7_1(v87, 1, v28);
        if (v59)
        {
          sub_240BE0B68(v87, &qword_25708CB10);
        }
        else
        {
          v88 = v87;
          v89 = v108;
          OUTLINED_FUNCTION_52(v88, v108);
          OUTLINED_FUNCTION_11_2();
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          if (EnumCaseMultiPayload == 1)
          {
            OUTLINED_FUNCTION_80_3();
            OUTLINED_FUNCTION_58_6(v91, v92);
            swift_bridgeObjectRetain();
            v28 = v102;
            sub_240C6FB8C(&v120, *(uint64_t *)type metadata accessor for MLProgram.Value.Representation, loc_240C7A5C8);
            swift_bridgeObjectRelease();
            v93 = type metadata accessor for MLProgram.Value.Representation;
            v2 = v110;
            v94 = type metadata accessor for MLProgram.Value.BlobFileValue;
          }
          else
          {
            v93 = (uint64_t (*)(uint64_t))v89;
            v94 = type metadata accessor for MLProgram.Value.Representation;
          }
          sub_240BE10B8((uint64_t)v93, v94);
          OUTLINED_FUNCTION_26_6(v118);
        }
        v67 = v117;
        v68 = (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value;
      }
      else
      {
        v67 = v1;
        v68 = type metadata accessor for MLProgram.Argument.Binding;
      }
      sub_240BE10B8(v67, v68);
      ++v52;
      OUTLINED_FUNCTION_26_6((uint64_t)v50);
      if (v114 == v52)
        goto LABEL_23;
    }
    __break(1u);
  }
  else
  {
LABEL_23:
    OUTLINED_FUNCTION_1();
  }
}

void sub_240C8D320()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  int v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t *v131;
  uint64_t v132;
  _QWORD v133[2];
  uint64_t v134;
  uint64_t v135;
  char *v136;
  uint64_t v137;
  uint64_t *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  _QWORD *v142;
  char *v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  uint64_t v166;
  uint64_t *v167;
  uint64_t v168;
  uint64_t v169;

  OUTLINED_FUNCTION_22();
  v168 = v3;
  v169 = v4;
  v6 = v5;
  v137 = v7;
  OUTLINED_FUNCTION_105_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v9);
  v136 = (char *)v133 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_386();
  v146 = v13;
  v145 = OUTLINED_FUNCTION_47_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_386();
  v133[1] = OUTLINED_FUNCTION_35_8(v16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_386();
  v142 = v19;
  v141 = OUTLINED_FUNCTION_109_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v22);
  v149 = (uint64_t)v133 - v23;
  v24 = OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  v153 = (uint64_t)v133 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_46_7();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_386();
  v148 = v31;
  v166 = OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v133 - v35;
  MEMORY[0x24BDAC7A8](v34);
  v157 = (uint64_t)v133 - v37;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  OUTLINED_FUNCTION_0();
  v39 = MEMORY[0x24BDAC7A8](v38);
  v41 = (char *)v133 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_107_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_386();
  v159 = v43;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v44);
  v151 = (uint64_t)v133 - ((v45 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_38_0();
  v156 = v47;
  OUTLINED_FUNCTION_23_0();
  v49 = MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)v133 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v161 = (uint64_t)v133 - v52;
  v158 = OUTLINED_FUNCTION_33_10();
  v164 = *(_QWORD *)(v158 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v53);
  v165 = (char *)v133 - ((v54 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  v163 = v56;
  v167 = v0;
  v57 = *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16);
  swift_bridgeObjectRelease();
  v162 = v57;
  if (v57)
  {
    v154 = v36;
    v155 = v51;
    v152 = v2;
    v135 = v1;
    v138 = v6;
    v58 = 0;
    v143 = v41;
    v59 = &qword_25708CED8;
    v150 = v24;
    while (1)
    {
      v60 = MLProgram.Argument.bindings.getter();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240C95804();
        v60 = v132;
      }
      v61 = (uint64_t)v165;
      if (v58 >= *(_QWORD *)(v60 + 16))
        break;
      OUTLINED_FUNCTION_83_2();
      v64 = v60 + v62 + *(_QWORD *)(v63 + 72) * v58;
      OUTLINED_FUNCTION_106_2(v64, v61);
      if (OUTLINED_FUNCTION_40_8() == 1)
      {
        OUTLINED_FUNCTION_56_7(v64);
        v65 = v61;
        v66 = v163;
        sub_240BE0B90(v65, v163, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v160 = v66 + *(int *)(OUTLINED_FUNCTION_51_5() + 20);
        v67 = v159;
        sub_240C5E950(v160, v159, &qword_25708CB50);
        v68 = 1;
        v69 = v67;
        v70 = v161;
        OUTLINED_FUNCTION_7_1(v69, 1, v166);
        if (!v71)
        {
          v72 = v157;
          OUTLINED_FUNCTION_22_8(v159, v157);
          v73 = (uint64_t)v154;
          OUTLINED_FUNCTION_106_2(v72, (uint64_t)v154);
          v74 = v147;
          OUTLINED_FUNCTION_106_2(v73, v147);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            OUTLINED_FUNCTION_56_7(v73);
            OUTLINED_FUNCTION_126_1();
            sub_240BE0B90(v75, v76, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
            OUTLINED_FUNCTION_149_1();
          }
          else
          {
            v77 = v74;
            v78 = v149;
            OUTLINED_FUNCTION_22_8(v77, v149);
            v79 = v78;
            v80 = v140;
            OUTLINED_FUNCTION_106_2(v79, v140);
            OUTLINED_FUNCTION_80_3();
            sub_240C5E950(v81, v82, &qword_25708CED8);
            if (__swift_getEnumTagSinglePayload(v73, 1, v145) == 1)
            {
              sub_240BE0B68(v146, &qword_25708CED8);
              OUTLINED_FUNCTION_56_7(v80);
              v83 = v144;
              *v144 = MEMORY[0x24BEE4AF8];
              v83[1] = 0;
              *((_BYTE *)v83 + 16) = 0;
              OUTLINED_FUNCTION_162_0();
              OUTLINED_FUNCTION_126_1();
              OUTLINED_FUNCTION_22_8(v84, v85);
            }
            else
            {
              v86 = v134;
              OUTLINED_FUNCTION_38_7(v146, v134);
              v87 = v80;
              OUTLINED_FUNCTION_126_1();
              OUTLINED_FUNCTION_52(v88, v89);
              v83 = v142;
              sub_240C79C08();
              OUTLINED_FUNCTION_56_7(v87);
              v90 = v86;
              v24 = v150;
              sub_240BE10B8(v90, type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value);
            }
            v91 = (uint64_t)v83;
            v74 = v139;
            OUTLINED_FUNCTION_22_8(v91, v139);
            OUTLINED_FUNCTION_26_6((uint64_t)v154);
            sub_240BE10B8(v149, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
            OUTLINED_FUNCTION_162_0();
            OUTLINED_FUNCTION_126_1();
            OUTLINED_FUNCTION_22_8(v92, v93);
          }
          OUTLINED_FUNCTION_22_8(v74, v70);
          OUTLINED_FUNCTION_26_6(v157);
          v68 = 0;
          v59 = &qword_25708CED8;
        }
        if (OUTLINED_FUNCTION_71_5(v70, v68, 1))
        {
          v94 = v70;
          v95 = (uint64_t)v155;
          OUTLINED_FUNCTION_39_6(v94, (uint64_t)v155);
          v96 = v156;
          OUTLINED_FUNCTION_39_6(v95, v156);
          OUTLINED_FUNCTION_7_1(v96, 1, v24);
          if (v71)
          {
            OUTLINED_FUNCTION_9_13(v95);
            OUTLINED_FUNCTION_9_13(v96);
            v97 = 1;
            v98 = v152;
          }
          else
          {
            v103 = v96;
            v104 = v153;
            sub_240BE0BF4(v103, v153, type metadata accessor for MLProgram.Value.Representation);
            v105 = OUTLINED_FUNCTION_27_0();
            if (v105 == 1)
            {
              OUTLINED_FUNCTION_126_1();
              sub_240BE0B90(v106, v107, type metadata accessor for MLProgram.Value.BlobFileValue);
              v98 = v152;
              sub_240BE0B90(v104, v152, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
            }
            else
            {
              OUTLINED_FUNCTION_126_1();
              OUTLINED_FUNCTION_38_7(v116, v117);
              OUTLINED_FUNCTION_11_17();
              OUTLINED_FUNCTION_68_5();
              v118 = OUTLINED_FUNCTION_89_2();
              __swift_storeEnumTagSinglePayload(v118, v119, v120, v121);
              v59 = &qword_25708CED8;
              sub_240C5E97C((uint64_t)&qword_25708CED8, v24, &qword_25708CED8);
              v122 = v24;
              v24 = v150;
              v98 = v152;
              sub_240BE0B90(v122, v152, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
              sub_240BE10B8(v104, type metadata accessor for MLProgram.Value.ImmediateValue);
            }
            OUTLINED_FUNCTION_84_3();
            OUTLINED_FUNCTION_9_13((uint64_t)v155);
            sub_240BE10B8(v156, type metadata accessor for MLProgram.Value.Representation);
            v97 = 0;
          }
          OUTLINED_FUNCTION_365(v98, v97);
          sub_240C5E97C(v98, v160, &qword_25708CB50);
          OUTLINED_FUNCTION_9_13(v161);
        }
        else
        {
          OUTLINED_FUNCTION_126_1();
          OUTLINED_FUNCTION_106_2(v99, v100);
          if (OUTLINED_FUNCTION_27_0() == 1)
          {
            OUTLINED_FUNCTION_56_7(v70);
            OUTLINED_FUNCTION_80_3();
            OUTLINED_FUNCTION_22_8(v101, v102);
            v59 = v138;
            OUTLINED_FUNCTION_87_2();
            OUTLINED_FUNCTION_42_2();
            qword_25708CB10 = v137;
            qword_25708CB18 = (uint64_t)v59;
            v70 = v161;
            v24 = v150;
            OUTLINED_FUNCTION_22_8((uint64_t)&qword_25708CB10, v161);
            OUTLINED_FUNCTION_149_1();
          }
          else
          {
            OUTLINED_FUNCTION_56_7(v68);
          }
          v108 = v151;
          OUTLINED_FUNCTION_39_6(v70, v151);
          OUTLINED_FUNCTION_7_1(v108, 1, v24);
          if (v71)
          {
            OUTLINED_FUNCTION_9_13(v70);
            OUTLINED_FUNCTION_9_13(v108);
            v109 = 1;
            v110 = (uint64_t)v143;
          }
          else
          {
            OUTLINED_FUNCTION_126_1();
            sub_240BE0BF4(v111, v112, type metadata accessor for MLProgram.Value.Representation);
            v113 = OUTLINED_FUNCTION_27_0();
            if (v113 == 1)
            {
              OUTLINED_FUNCTION_126_1();
              sub_240BE0B90(v114, v115, type metadata accessor for MLProgram.Value.BlobFileValue);
              v110 = (uint64_t)v143;
              sub_240BE0B90(v108, (uint64_t)v143, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
            }
            else
            {
              OUTLINED_FUNCTION_126_1();
              sub_240BE0B90(v123, v124, type metadata accessor for MLProgram.Value.ImmediateValue);
              OUTLINED_FUNCTION_11_17();
              OUTLINED_FUNCTION_68_5();
              v125 = OUTLINED_FUNCTION_89_2();
              v70 = v161;
              __swift_storeEnumTagSinglePayload(v125, v126, v127, v128);
              sub_240C5E97C((uint64_t)v59, v24, &qword_25708CED8);
              v129 = v24;
              v24 = v150;
              v110 = (uint64_t)v143;
              sub_240BE0B90(v129, (uint64_t)v143, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
              sub_240BE10B8(v108, type metadata accessor for MLProgram.Value.ImmediateValue);
            }
            OUTLINED_FUNCTION_84_3();
            OUTLINED_FUNCTION_9_13(v70);
            sub_240BE10B8(v151, type metadata accessor for MLProgram.Value.Representation);
            v109 = 0;
          }
          OUTLINED_FUNCTION_365(v110, v109);
          sub_240C5E97C(v110, v160, &qword_25708CB50);
          v59 = &qword_25708CED8;
        }
        sub_240BE0B90(v163, v64, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        OUTLINED_FUNCTION_149_1();
      }
      else
      {
        OUTLINED_FUNCTION_56_7(v61);
      }
      ++v58;
      v130 = sub_240C8C8C8(v60);
      OUTLINED_FUNCTION_173();
      v131 = v167;
      swift_bridgeObjectRelease();
      *v131 = v130;
      if (v162 == v58)
      {
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_1();
        return;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

void sub_240C8DE84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  int v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  int EnumCaseMultiPayload;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t (*v110)(_QWORD);
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  int v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141[2];
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  _QWORD *v153;
  uint64_t v154;
  _QWORD *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  _QWORD *v160;
  uint64_t v161;
  char *v162;
  _QWORD *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  _OWORD v181[2];

  OUTLINED_FUNCTION_22();
  v147 = v1;
  v3 = v2;
  v146 = sub_240F1C870();
  v145 = *(_QWORD *)(v146 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  v144 = v5;
  type metadata accessor for MLProgram.Value.BlobFileValue(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  v8 = MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_69_4(v8, v9, v10, v11, v12, v13, v14, v15, v141[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v17);
  v150 = (uint64_t)v141 - v18;
  v158 = OUTLINED_FUNCTION_47_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_386();
  v141[1] = OUTLINED_FUNCTION_35_8(v21);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v23);
  v25 = (char *)v141 - v24;
  v149 = OUTLINED_FUNCTION_109_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_386();
  v157 = v29;
  v169 = OUTLINED_FUNCTION_48_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v34);
  v156 = (char *)v141 - v35;
  v177 = OUTLINED_FUNCTION_49_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_38_0();
  v175 = v38;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v39);
  v164 = (uint64_t)v141 - v40;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_38_0();
  v167 = v43;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_386();
  v168 = v45;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_107_2();
  v49 = MEMORY[0x24BDAC7A8](v48);
  v51 = (char *)v141 - v50;
  MEMORY[0x24BDAC7A8](v49);
  v176 = (uint64_t)v141 - v52;
  v53 = OUTLINED_FUNCTION_33_10();
  v174 = *(_QWORD *)(v53 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_2_0();
  v173 = v55;
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v56);
  OUTLINED_FUNCTION_2_0();
  v172 = v57;
  v58 = *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16);
  swift_bridgeObjectRelease();
  v171 = v58;
  if (v58)
  {
    v59 = 0;
    v60 = 0;
    v163 = v3;
    v148 = v25;
    v166 = v0;
    v162 = v51;
    v165 = v53;
    while (1)
    {
      v61 = MLProgram.Argument.bindings.getter();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240C95804();
        v61 = v140;
      }
      v62 = v175;
      if (v59 >= *(_QWORD *)(v61 + 16))
        break;
      v178 = v60;
      v63 = v173;
      OUTLINED_FUNCTION_83_2();
      v66 = v61 + v64 + *(_QWORD *)(v65 + 72) * v59;
      v67 = OUTLINED_FUNCTION_166_0();
      OUTLINED_FUNCTION_51_7(v67, v68);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        OUTLINED_FUNCTION_25_4(v66);
        v69 = v63;
        v70 = v172;
        sub_240BE0B90(v69, v172, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v170 = v70 + *(int *)(OUTLINED_FUNCTION_51_5() + 20);
        v71 = v168;
        sub_240C5E950(v170, v168, &qword_25708CB50);
        v72 = 1;
        OUTLINED_FUNCTION_7_1(v71, 1, v177);
        if (!v73)
        {
          v74 = v164;
          OUTLINED_FUNCTION_91_1(v168, v164);
          OUTLINED_FUNCTION_51_7(v74, v62);
          v75 = v155;
          OUTLINED_FUNCTION_51_7(v62, (uint64_t)v155);
          if (swift_getEnumCaseMultiPayload() == 1)
          {
            OUTLINED_FUNCTION_25_4(v62);
            OUTLINED_FUNCTION_17_16();
            sub_240BE0B90(v76, v77, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
            OUTLINED_FUNCTION_149_1();
          }
          else
          {
            v154 = v66;
            OUTLINED_FUNCTION_17_16();
            OUTLINED_FUNCTION_58_6(v78, v79);
            OUTLINED_FUNCTION_80_3();
            OUTLINED_FUNCTION_36_10(v80, v81);
            v82 = v150;
            OUTLINED_FUNCTION_54_8((uint64_t)&qword_25708CB10, v150);
            OUTLINED_FUNCTION_7_1(v82, 1, v158);
            if (v73)
            {
              OUTLINED_FUNCTION_187(v82);
              OUTLINED_FUNCTION_27_9((uint64_t)&qword_25708CB10);
              v75 = v153;
              *v153 = MEMORY[0x24BEE4AF8];
              v75[1] = 0;
              *((_BYTE *)v75 + 16) = 0;
              OUTLINED_FUNCTION_162_0();
              OUTLINED_FUNCTION_17_16();
              OUTLINED_FUNCTION_38_7(v83, v84);
            }
            else
            {
              v85 = v142;
              OUTLINED_FUNCTION_91_1(v82, v142);
              OUTLINED_FUNCTION_51_7(v85, v143);
              v75 = v148;
              sub_240C79C08();
              OUTLINED_FUNCTION_27_9((uint64_t)&qword_25708CB10);
              v62 = v175;
              OUTLINED_FUNCTION_25_4(v85);
            }
            OUTLINED_FUNCTION_17_16();
            OUTLINED_FUNCTION_38_7(v86, v87);
            OUTLINED_FUNCTION_49_2(v62);
            OUTLINED_FUNCTION_25_4(v157);
            OUTLINED_FUNCTION_101_3();
            OUTLINED_FUNCTION_162_0();
            OUTLINED_FUNCTION_17_16();
            OUTLINED_FUNCTION_58_6(v88, v89);
            v66 = v154;
          }
          OUTLINED_FUNCTION_58_6((uint64_t)v75, v176);
          OUTLINED_FUNCTION_49_2(v164);
          v72 = 0;
        }
        v90 = v176;
        v91 = v169;
        v92 = OUTLINED_FUNCTION_71_5(v176, v72, 1);
        v93 = v167;
        if (v92)
        {
          v3 = (_QWORD *)v91;
          v94 = (uint64_t)v162;
          OUTLINED_FUNCTION_39_6(v90, (uint64_t)v162);
          v95 = v166;
          OUTLINED_FUNCTION_39_6(v94, v166);
          OUTLINED_FUNCTION_7_1(v95, 1, (uint64_t)v3);
          v96 = v161;
          if (v73)
          {
            OUTLINED_FUNCTION_9_13(v94);
            OUTLINED_FUNCTION_9_13(v95);
            OUTLINED_FUNCTION_67_5();
          }
          else
          {
            sub_240BE0BF4(v95, v161, type metadata accessor for MLProgram.Value.Representation);
            OUTLINED_FUNCTION_11_4();
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            if (EnumCaseMultiPayload == 1)
            {
              OUTLINED_FUNCTION_17_16();
              sub_240BE0B90(v107, v108, type metadata accessor for MLProgram.Value.BlobFileValue);
              sub_240BE0B90(v96, v93, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
              OUTLINED_FUNCTION_67_5();
              v113 = v166;
            }
            else
            {
              v3 = v153;
              OUTLINED_FUNCTION_156_0(v96, (uint64_t)v153);
              OUTLINED_FUNCTION_12_15();
              OUTLINED_FUNCTION_79_2();
              v112 = OUTLINED_FUNCTION_100_3();
              v113 = v166;
              __swift_storeEnumTagSinglePayload(v112, v114, v115, v116);
              sub_240C5E97C(v96, (uint64_t)&qword_25708CB10, &qword_25708CED8);
              sub_240BE0B90((uint64_t)&qword_25708CB10, v167, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
              v93 = v167;
              OUTLINED_FUNCTION_26_6((uint64_t)v3);
              OUTLINED_FUNCTION_67_5();
            }
            OUTLINED_FUNCTION_90_3();
            OUTLINED_FUNCTION_9_13((uint64_t)v162);
            sub_240BE10B8(v113, type metadata accessor for MLProgram.Value.Representation);
            v97 = 0;
          }
          OUTLINED_FUNCTION_14_5(v93, v97);
          sub_240C5E97C(v93, v170, &qword_25708CB50);
          OUTLINED_FUNCTION_9_13(v176);
        }
        else
        {
          OUTLINED_FUNCTION_17_16();
          sub_240BE0BF4(v98, v99, type metadata accessor for MLProgram.Value.Representation);
          if (OUTLINED_FUNCTION_27_0() == 1)
          {
            sub_240BE10B8(v90, type metadata accessor for MLProgram.Value.Representation);
            sub_240BE0B90(v72, (uint64_t)v160, type metadata accessor for MLProgram.Value.BlobFileValue);
            v100 = v145;
            v101 = v144;
            v102 = v146;
            (*(void (**)(uint64_t, uint64_t, uint64_t))(v145 + 16))(v144, v147, v146);
            v103 = sub_240F1C840();
            v105 = v104;
            (*(void (**)(uint64_t, uint64_t))(v100 + 8))(v101, v102);
            if ((sub_240F1CD08() & 1) != 0)
            {
              OUTLINED_FUNCTION_87_2();
            }
            else
            {
              *(_QWORD *)&v181[0] = v103;
              *((_QWORD *)&v181[0] + 1) = v105;
              OUTLINED_FUNCTION_87_2();
              sub_240F1CCE4();
            }
            v117 = v160;
            v118 = *v160;
            v119 = v160[1];
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_11_2();
            v120 = sub_240F1CCFC();
            swift_bridgeObjectRelease();
            if ((v120 & 1) != 0)
            {
              swift_bridgeObjectRetain();
              OUTLINED_FUNCTION_11_2();
              sub_240F1CCCC();
              OUTLINED_FUNCTION_173();
              sub_240F1CCD8();
              swift_bridgeObjectRelease();
              v180 = v119;
              strcpy((char *)v181, "@model_path/");
              BYTE13(v181[0]) = 0;
              HIWORD(v181[0]) = -5120;
              v179 = v118;
              sub_240C7E040();
              sub_240F1CCB4();
              OUTLINED_FUNCTION_88_3();
              v121 = v180;
              *v117 = v179;
              v117[1] = v121;
            }
            else
            {
              OUTLINED_FUNCTION_88_3();
              OUTLINED_FUNCTION_173();
            }
            v3 = v159;
            v90 = v176;
            sub_240BE0B90((uint64_t)v160, v176, type metadata accessor for MLProgram.Value.BlobFileValue);
            v91 = v169;
            OUTLINED_FUNCTION_149_1();
            v111 = v152;
          }
          else
          {
            v109 = OUTLINED_FUNCTION_11_4();
            sub_240BE10B8(v109, v110);
            v111 = v152;
            v3 = v159;
          }
          OUTLINED_FUNCTION_39_6(v90, (uint64_t)v3);
          OUTLINED_FUNCTION_7_1((uint64_t)v3, 1, v91);
          if (v73)
          {
            OUTLINED_FUNCTION_9_13(v90);
            OUTLINED_FUNCTION_9_13((uint64_t)v3);
            v122 = v151;
            OUTLINED_FUNCTION_67_5();
          }
          else
          {
            v124 = OUTLINED_FUNCTION_11_2();
            sub_240BE0BF4(v124, v125, type metadata accessor for MLProgram.Value.Representation);
            v126 = OUTLINED_FUNCTION_27_0();
            if (v126 == 1)
            {
              OUTLINED_FUNCTION_17_16();
              sub_240BE0B90(v127, v128, type metadata accessor for MLProgram.Value.BlobFileValue);
              OUTLINED_FUNCTION_17_16();
              sub_240BE0B90(v129, v130, type metadata accessor for Proto_MILSpec_Value.BlobFileValue);
            }
            else
            {
              OUTLINED_FUNCTION_126_1();
              OUTLINED_FUNCTION_66_3(v131, v132);
              OUTLINED_FUNCTION_12_15();
              OUTLINED_FUNCTION_79_2();
              v133 = OUTLINED_FUNCTION_100_3();
              __swift_storeEnumTagSinglePayload(v133, v134, v135, v136);
              sub_240C5E97C(v111, (uint64_t)&qword_25708CB10, &qword_25708CED8);
              OUTLINED_FUNCTION_17_16();
              sub_240BE0B90(v137, v138, type metadata accessor for Proto_MILSpec_Value.ImmediateValue);
              OUTLINED_FUNCTION_49_2((uint64_t)v3);
            }
            OUTLINED_FUNCTION_67_5();
            v122 = v111;
            OUTLINED_FUNCTION_90_3();
            OUTLINED_FUNCTION_9_13(v176);
            sub_240BE10B8((uint64_t)v159, type metadata accessor for MLProgram.Value.Representation);
            v123 = 0;
          }
          OUTLINED_FUNCTION_14_5(v122, v123);
          sub_240C5E97C(v122, v170, &qword_25708CB50);
        }
        sub_240BE0B90(v172, v66, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        OUTLINED_FUNCTION_149_1();
      }
      else
      {
        OUTLINED_FUNCTION_25_4(v63);
      }
      ++v59;
      v60 = v178;
      v139 = sub_240C8C8C8(v61);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *v3 = v139;
      if (v171 == v59)
        goto LABEL_44;
    }
    __break(1u);
  }
  else
  {
LABEL_44:
    OUTLINED_FUNCTION_1();
  }
}

uint64_t sub_240C8EB1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = type metadata accessor for MLProgram.Value();
  MEMORY[0x24BDAC7A8](v2);
  v19 = (uint64_t)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = type metadata accessor for MLProgram.Argument.Binding(0);
  v4 = *(_QWORD *)(v22 - 8);
  MEMORY[0x24BDAC7A8](v22);
  v6 = (uint64_t *)((char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v21 = type metadata accessor for Proto_MILSpec_Argument.Binding(0);
  v7 = *(_QWORD *)(v21 - 8);
  MEMORY[0x24BDAC7A8](v21);
  v9 = (uint64_t *)((char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v10 = *(_QWORD *)(a1 + 16);
  v23 = MEMORY[0x24BEE4AF8];
  sub_240BF0B78();
  v18 = a1;
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v20 = *(_QWORD *)(v4 + 72);
    v12 = type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding(0);
    swift_bridgeObjectRetain();
    do
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 1, 1, v12);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      sub_240BE0B68((uint64_t)v9, &qword_25708C0F8);
      sub_240BE0BF4(v11, (uint64_t)v6, type metadata accessor for MLProgram.Argument.Binding);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v13 = v19;
        sub_240BE0B90((uint64_t)v6, v19, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        sub_240BE0B90(v13, (uint64_t)v9, type metadata accessor for Proto_MILSpec_Value);
      }
      else
      {
        v14 = v6[1];
        *v9 = *v6;
        v9[1] = v14;
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v12);
      v15 = v23;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0B78();
        v15 = v23;
      }
      v16 = *(_QWORD *)(v15 + 16);
      if (v16 >= *(_QWORD *)(v15 + 24) >> 1)
      {
        sub_240BF0B78();
        v15 = v23;
      }
      *(_QWORD *)(v15 + 16) = v16 + 1;
      sub_240BE0B90((uint64_t)v9, v15+ ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80))+ *(_QWORD *)(v7 + 72) * v16, type metadata accessor for Proto_MILSpec_Argument.Binding);
      v11 += v20;
      --v10;
    }
    while (v10);
  }
  else
  {
    v15 = v23;
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v15;
}

uint64_t MLProgram.Argument.bindings.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t);
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int EnumCaseMultiPayload;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  _QWORD v71[2];
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;

  OUTLINED_FUNCTION_22();
  v91 = v2;
  v92 = v3;
  OUTLINED_FUNCTION_51_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  v73 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0F8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v88 = v7;
  v8 = OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_85();
  v80 = v10;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_46_7();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_386();
  v84 = v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D160);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_0();
  v90 = v15;
  v86 = OUTLINED_FUNCTION_33_10();
  v79 = *(_QWORD *)(v86 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_85();
  v83 = v17;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_38_0();
  v72 = v19;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_38_0();
  v82 = v21;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_38_0();
  v76 = v23;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_38_0();
  v78 = v25;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_386();
  v77 = v27;
  v28 = OUTLINED_FUNCTION_110_4();
  MEMORY[0x24BDAC7A8](v28);
  v87 = (uint64_t)v71 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v30);
  v89 = (uint64_t)v71 - v31;
  v32 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (!v32)
    return MEMORY[0x24BEE4AF8];
  v74 = v1;
  OUTLINED_FUNCTION_83_2();
  v35 = v33 + v34;
  v81 = *(_QWORD *)(v36 + 72);
  v71[1] = v33;
  swift_bridgeObjectRetain();
  v85 = MEMORY[0x24BEE4AF8];
  v37 = type metadata accessor for Proto_MILSpec_Argument.Binding;
  v75 = v8;
  v38 = v80;
  v39 = v8;
  v40 = v87;
  do
  {
    v41 = v37;
    v42 = v89;
    OUTLINED_FUNCTION_52(v35, v89);
    v43 = v42;
    v37 = v41;
    OUTLINED_FUNCTION_52(v43, v40);
    v44 = v88;
    OUTLINED_FUNCTION_54_8(v40, v88);
    OUTLINED_FUNCTION_7_1(v44, 1, v39);
    if (v45)
    {
      OUTLINED_FUNCTION_27_9(v40);
      OUTLINED_FUNCTION_187(v88);
      v46 = 1;
    }
    else
    {
      v47 = v84;
      sub_240BE0B90(v88, v84, type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding);
      v48 = v47;
      v49 = v74;
      sub_240BE0BF4(v48, v74, type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding);
      sub_240BE0BF4(v49, (uint64_t)v38, type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding);
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 1)
      {
        v51 = (uint64_t)v38;
        v52 = v73;
        OUTLINED_FUNCTION_141_1(v51, v73);
        v53 = v72;
        OUTLINED_FUNCTION_106_3(v52, v72);
        OUTLINED_FUNCTION_86_3();
        v54 = v52;
        v38 = v80;
        sub_240BE10B8(v54, type metadata accessor for Proto_MILSpec_Value);
        OUTLINED_FUNCTION_149_1();
        v37 = v41;
        OUTLINED_FUNCTION_141_1(v53, (uint64_t)v82);
      }
      else
      {
        OUTLINED_FUNCTION_86_3();
        v55 = v38[1];
        v56 = v82;
        *v82 = *v38;
        v56[1] = v55;
        OUTLINED_FUNCTION_162_0();
      }
      v57 = v76;
      OUTLINED_FUNCTION_141_1((uint64_t)v82, v76);
      OUTLINED_FUNCTION_27_9(v87);
      sub_240BE10B8(v84, type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding);
      v58 = v57;
      v59 = v78;
      OUTLINED_FUNCTION_141_1(v58, v78);
      OUTLINED_FUNCTION_141_1(v59, v90);
      v46 = 0;
    }
    v60 = v90;
    v61 = v86;
    OUTLINED_FUNCTION_83_3(v90, v46, 1);
    OUTLINED_FUNCTION_27_9(v89);
    OUTLINED_FUNCTION_7_1(v60, 1, v61);
    if (v45)
    {
      sub_240BE0B68(v90, &qword_25708D160);
    }
    else
    {
      v62 = v77;
      OUTLINED_FUNCTION_141_1(v90, v77);
      OUTLINED_FUNCTION_141_1(v62, v83);
      v63 = v85;
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        OUTLINED_FUNCTION_95_3();
        v63 = v68;
      }
      v65 = *(_QWORD *)(v63 + 16);
      if (v65 >= *(_QWORD *)(v63 + 24) >> 1)
      {
        OUTLINED_FUNCTION_95_3();
        v63 = v69;
      }
      *(_QWORD *)(v63 + 16) = v65 + 1;
      OUTLINED_FUNCTION_83_2();
      v85 = v63;
      OUTLINED_FUNCTION_141_1(v83, v63 + v66 + *(_QWORD *)(v67 + 72) * v65);
      v39 = v75;
      v38 = v80;
    }
    v35 += v81;
    --v32;
    v40 = v87;
  }
  while (v32);
  swift_bridgeObjectRelease();
  return v85;
}

uint64_t type metadata accessor for MLProgram.Argument.Binding(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D1B0);
}

uint64_t sub_240C8F2C8()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return MLProgram.Argument.bindings.setter(v0);
}

uint64_t MLProgram.Argument.bindings.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = sub_240C8C8C8(a1);
  OUTLINED_FUNCTION_173();
  result = swift_bridgeObjectRelease();
  *v1 = v2;
  return result;
}

void (*MLProgram.Argument.bindings.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = MLProgram.Argument.bindings.getter();
  return sub_240C8F370;
}

void sub_240C8F370(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = sub_240C8C8C8(v3);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_111_3();
    *v2 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = sub_240C8C8C8(*a1);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_111_3();
    *v2 = v5;
    OUTLINED_FUNCTION_6_2();
  }
}

void sub_240C8F404()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;

  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_78_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_30_11(v4, v5, v10);
  if (OUTLINED_FUNCTION_40_8() == 1)
  {
    v6 = OUTLINED_FUNCTION_11_4();
    sub_240BE0B90(v6, v7, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    sub_240DD12C8();
    sub_240BE10B8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_113();
    v10 = 0x2228666552;
    v11 = 0xE500000000000000;
    sub_240F1CCE4();
    swift_bridgeObjectRelease();
    sub_240F1CCE4();
    v9 = v11;
    *(_QWORD *)(v8 + 16) = v10;
    *(_QWORD *)(v8 + 24) = v9;
  }
  OUTLINED_FUNCTION_156();
}

uint64_t MLProgram.Argument.init(binding:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v5 = OUTLINED_FUNCTION_110_4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  *a2 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_5_10();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C060);
  v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240F1DA30;
  OUTLINED_FUNCTION_77_2();
  OUTLINED_FUNCTION_83_3((uint64_t)v2, 1, 1);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240BE0B68((uint64_t)v2, &qword_25708C0F8);
  sub_240C8FB2C(v2);
  OUTLINED_FUNCTION_83_3((uint64_t)v2, 0, 1);
  sub_240BE0B90((uint64_t)v2, v8 + v7, type metadata accessor for Proto_MILSpec_Argument.Binding);
  sub_240BE10B8(a1, type metadata accessor for MLProgram.Argument.Binding);
  result = swift_bridgeObjectRelease();
  *a2 = v8;
  return result;
}

void MLProgram.Argument.init<A>(bindings:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_111_4();
  *v0 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_61_6();
  v1 = OUTLINED_FUNCTION_110_4();
  OUTLINED_FUNCTION_55_6((uint64_t)sub_240C8F6A4, v2, v3, v1, MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  v7 = v6;
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_111_3();
  *v0 = v7;
  OUTLINED_FUNCTION_6_2();
}

uint64_t sub_240C8F6A4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding(0);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 1, 1, v2);
  type metadata accessor for Proto_MILSpec_Argument.Binding(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240BE0B68((uint64_t)a1, &qword_25708C0F8);
  sub_240C8FB2C(a1);
  return __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v2);
}

uint64_t MLProgram.Argument.hash(into:)()
{
  OUTLINED_FUNCTION_20_9();
  sub_240BE18B8(&qword_25708D168, type metadata accessor for Proto_MILSpec_Argument, (uint64_t)&unk_240F31F80);
  OUTLINED_FUNCTION_101_3();
  return sub_240F1CC54();
}

BOOL static MLProgram.Argument.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v20 - v9;
  sub_240BEA624();
  if ((v11 & 1) == 0)
    return 0;
  v12 = OUTLINED_FUNCTION_20_9();
  v13 = a1 + *(int *)(v12 + 20);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, a2 + *(int *)(v12 + 20), v4);
  sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  OUTLINED_FUNCTION_166_0();
  v15 = sub_240F1CC90();
  v16 = *(void (**)(uint64_t))(v5 + 8);
  v17 = OUTLINED_FUNCTION_11_4();
  v16(v17);
  v18 = OUTLINED_FUNCTION_50_0();
  v16(v18);
  return (v15 & 1) != 0;
}

void MLProgram.Argument.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_20_9();
  sub_240BE18B8(&qword_25708D168, type metadata accessor for Proto_MILSpec_Argument, (uint64_t)&unk_240F31F80);
  sub_240F1CC54();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240C8F90C()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_MILSpec_Argument(0);
  sub_240BE18B8(&qword_25708D168, type metadata accessor for Proto_MILSpec_Argument, (uint64_t)&unk_240F31F80);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void MLProgram.Argument.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v25 = sub_240F1CF90();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_81();
  type metadata accessor for MLProgram.Argument(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  sub_240BE0BF4(v20, (uint64_t)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0), v30);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v31 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v31 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v31 + 32) = 0x73676E69646E6962;
  *(_QWORD *)(v31 + 40) = 0xE800000000000000;
  v32 = MLProgram.Argument.bindings.getter();
  *(_QWORD *)(v31 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D170);
  *(_QWORD *)(v31 + 48) = v32;
  v33 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v22, 1, 1, v33);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v26 + 104))(v21, *MEMORY[0x24BEE43C0], v25);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.Argument.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_240C8CB6C();
  v1 = sub_240CC4F3C(0, 0, v0);
  swift_release();
  return v1;
}

void sub_240C8FB2C(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_31_7(v5, v6, v14);
  if (OUTLINED_FUNCTION_104_2() == 1)
  {
    v7 = OUTLINED_FUNCTION_50_0();
    sub_240BE0B90(v7, v8, v9);
    v10 = OUTLINED_FUNCTION_11_2();
    sub_240BE0B90(v10, v11, v12);
  }
  else
  {
    v13 = v1[1];
    *a1 = *v1;
    a1[1] = v13;
  }
  OUTLINED_FUNCTION_77_2();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_42();
}

void MLProgram.Argument.Binding.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18();
  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_31_7(v3, v4, v7);
  if (OUTLINED_FUNCTION_104_2() == 1)
  {
    v5 = OUTLINED_FUNCTION_166_0();
    OUTLINED_FUNCTION_66_3(v5, v6);
    sub_240F1CF48();
    OUTLINED_FUNCTION_51_5();
    sub_240BE18B8(&qword_25708D178, type metadata accessor for Proto_MILSpec_Value, (uint64_t)&unk_240F31F40);
    sub_240F1CC54();
    OUTLINED_FUNCTION_49_2(v0);
  }
  else
  {
    sub_240F1CF48();
    OUTLINED_FUNCTION_11_2();
    sub_240F1CCC0();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_42();
}

uint64_t static MLProgram.Argument.Binding.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  char v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  _BYTE v30[80];
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_22();
  v31 = v2;
  v32 = v3;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v30[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_78_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_46_7();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (uint64_t *)&v30[-v13];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D180);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_18();
  v17 = (_QWORD *)(v0 + *(int *)(v16 + 48));
  OUTLINED_FUNCTION_36_10(v7, v0);
  OUTLINED_FUNCTION_36_10(v5, (uint64_t)v17);
  if (OUTLINED_FUNCTION_40_8() != 1)
  {
    sub_240BE0BF4(v0, (uint64_t)v14, type metadata accessor for MLProgram.Argument.Binding);
    v25 = *v14;
    v24 = v14[1];
    if (OUTLINED_FUNCTION_40_8() != 1)
    {
      if (v25 == *v17 && v24 == v17[1])
      {
        v28 = swift_bridgeObjectRelease_n();
      }
      else
      {
        OUTLINED_FUNCTION_50_0();
        v27 = sub_240F1CEDC();
        swift_bridgeObjectRelease();
        v28 = OUTLINED_FUNCTION_42_2();
        if ((v27 & 1) == 0)
        {
          OUTLINED_FUNCTION_31(v28, type metadata accessor for MLProgram.Argument.Binding);
          goto LABEL_8;
        }
      }
      OUTLINED_FUNCTION_31(v28, type metadata accessor for MLProgram.Argument.Binding);
      v22 = 1;
      return v22 & 1;
    }
    OUTLINED_FUNCTION_42_2();
LABEL_7:
    sub_240BE0B68(v0, &qword_25708D180);
LABEL_8:
    v22 = 0;
    return v22 & 1;
  }
  v18 = OUTLINED_FUNCTION_101_3();
  sub_240BE0BF4(v18, v19, v20);
  if (OUTLINED_FUNCTION_40_8() != 1)
  {
    sub_240BE10B8(v1, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_22_8((uint64_t)v17, (uint64_t)v10);
  OUTLINED_FUNCTION_50_0();
  _s20MLModelSpecification9MLProgramV5ValueV2eeoiySbAE_AEtFZ_0();
  v22 = v21;
  OUTLINED_FUNCTION_56_7((uint64_t)v10);
  OUTLINED_FUNCTION_56_7(v1);
  OUTLINED_FUNCTION_31(v23, type metadata accessor for MLProgram.Argument.Binding);
  return v22 & 1;
}

void MLProgram.Argument.Binding.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  MLProgram.Argument.Binding.hash(into:)();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240C8FF30()
{
  sub_240F1CF3C();
  MLProgram.Argument.Binding.hash(into:)();
  return sub_240F1CF78();
}

uint64_t MLProgram.Argument.Binding.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  OUTLINED_FUNCTION_127_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_78_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_30_11(v4, v5, v10);
  if (OUTLINED_FUNCTION_40_8() == 1)
  {
    v6 = OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_66_3(v6, v7);
    v8 = sub_240DD12C8();
    sub_240CC4F3C(0, 0, v8);
    swift_release();
    OUTLINED_FUNCTION_49_2((uint64_t)v2);
  }
  return OUTLINED_FUNCTION_166_0();
}

void MLProgram.Argument.init(name:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  _QWORD *v3;
  uint64_t v7;

  OUTLINED_FUNCTION_33_10();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_313();
  *v3 = a1;
  v3[1] = a2;
  OUTLINED_FUNCTION_162_0();
  MLProgram.Argument.init(binding:)((uint64_t)v3, a3);
  OUTLINED_FUNCTION_156();
}

void MLProgram.Argument.init(names:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_78_4();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  v7 = *(_QWORD *)(v2 + 16);
  if (v7)
  {
    v13 = v4;
    v14 = MEMORY[0x24BEE4AF8];
    sub_240BF0CF4();
    v8 = (uint64_t *)(v2 + 40);
    do
    {
      v9 = *v8;
      *v0 = *(v8 - 1);
      v0[1] = v9;
      OUTLINED_FUNCTION_162_0();
      v10 = *(_QWORD *)(v14 + 16);
      v11 = *(_QWORD *)(v14 + 24);
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
        OUTLINED_FUNCTION_94_3();
      v8 += 2;
      *(_QWORD *)(v14 + 16) = v10 + 1;
      sub_240BE0B90((uint64_t)v0, v14+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v10, type metadata accessor for MLProgram.Argument.Binding);
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
    v4 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_5_10();
  v12 = OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_42_2();
  *v4 = v12;
  OUTLINED_FUNCTION_1();
}

void MLProgram.Argument.init(value:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_106_2(a1, v1);
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_56_7(a1);
  OUTLINED_FUNCTION_42();
}

void MLProgram.Argument.init(values:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_127_3();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_313();
  v17 = OUTLINED_FUNCTION_33_10();
  v8 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_5();
  v9 = *(_QWORD *)(v3 + 16);
  if (v9)
  {
    v16 = v5;
    v18 = MEMORY[0x24BEE4AF8];
    sub_240BF0CF4();
    OUTLINED_FUNCTION_83_2();
    v11 = v3 + v10;
    v12 = *(_QWORD *)(v7 + 72);
    do
    {
      OUTLINED_FUNCTION_36_10(v11, v0);
      OUTLINED_FUNCTION_36_10(v0, v1);
      OUTLINED_FUNCTION_149_1();
      OUTLINED_FUNCTION_27_9(v0);
      v13 = v18;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_94_3();
        v13 = v18;
      }
      v14 = *(_QWORD *)(v13 + 16);
      if (v14 >= *(_QWORD *)(v13 + 24) >> 1)
      {
        OUTLINED_FUNCTION_94_3();
        v13 = v18;
      }
      *(_QWORD *)(v13 + 16) = v14 + 1;
      sub_240BE0B90(v1, v13+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(_QWORD *)(v8 + 72) * v14, type metadata accessor for MLProgram.Argument.Binding);
      v11 += v12;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease();
    v5 = v16;
  }
  else
  {
    OUTLINED_FUNCTION_88_3();
  }
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_61_6();
  v15 = OUTLINED_FUNCTION_65_4();
  OUTLINED_FUNCTION_42_2();
  *v5 = v15;
  OUTLINED_FUNCTION_1();
}

void MLProgram.Argument.init<A>(values:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_111_4();
  v1 = OUTLINED_FUNCTION_33_10();
  OUTLINED_FUNCTION_55_6((uint64_t)sub_240C90470, v2, v3, v1, MEMORY[0x24BEE4078], v4, MEMORY[0x24BEE40A8], v5);
  v7 = v6;
  OUTLINED_FUNCTION_20_9();
  OUTLINED_FUNCTION_61_6();
  v8 = sub_240C8EB1C(v7);
  OUTLINED_FUNCTION_173();
  *v0 = v8;
  OUTLINED_FUNCTION_52_7();
  OUTLINED_FUNCTION_6_2();
}

uint64_t sub_240C90470@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_240BE0BF4(a1, a2, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
  type metadata accessor for MLProgram.Argument.Binding(0);
  return swift_storeEnumTagMultiPayload();
}

void MLProgram.Argument.init(value:)()
{
  uint64_t v0;
  char v1;

  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = OUTLINED_FUNCTION_45_7();
  MLProgram.Value.init(_:)(v1);
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_156();
}

{
  uint64_t v0;
  int v1;

  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  v1 = OUTLINED_FUNCTION_45_7();
  MLProgram.Value.init(_:)(v1);
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_50_10();
  OUTLINED_FUNCTION_156();
}

void MLProgram.Argument.init(value:)(uint64_t *a1@<X8>)
{
  sub_240C90644((void (*)(uint64_t))MLProgram.Value.init(_:), a1);
}

void MLProgram.Argument.init(value:)(float a1)
{
  uint64_t v2;

  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_62_5();
  MLProgram.Value.init(_:)(a1);
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_66_6();
}

void MLProgram.Argument.init(value:)(double a1)
{
  uint64_t v2;

  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_62_5();
  MLProgram.Value.init(_:)(a1);
  OUTLINED_FUNCTION_149_1();
  OUTLINED_FUNCTION_81_3();
  OUTLINED_FUNCTION_66_6();
}

void MLProgram.Argument.init(value:shape:)(uint64_t *a1@<X8>)
{
  sub_240C90644((void (*)(uint64_t))MLProgram.Value.init(_:shape:), a1);
}

{
  sub_240C90644((void (*)(uint64_t))MLProgram.Value.init(_:shape:), a1);
}

{
  sub_240C90644((void (*)(uint64_t))MLProgram.Value.init(_:shape:), a1);
}

void sub_240C90644(void (*a1)(uint64_t)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;

  type metadata accessor for MLProgram.Argument.Binding(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_5();
  v6 = OUTLINED_FUNCTION_50_0();
  a1(v6);
  OUTLINED_FUNCTION_149_1();
  MLProgram.Argument.init(binding:)(v2, a2);
  OUTLINED_FUNCTION_42();
}

uint64_t type metadata accessor for MLProgram.Argument(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D1A0);
}

void sub_240C906E4()
{
  sub_240BE18B8(&qword_25708D188, type metadata accessor for MLProgram.Argument, (uint64_t)&protocol conformance descriptor for MLProgram.Argument);
}

void sub_240C90710()
{
  sub_240BE18B8(&qword_25708D190, type metadata accessor for Proto_MILSpec_Argument, (uint64_t)&unk_240F31990);
}

void sub_240C9073C()
{
  sub_240BE18B8(&qword_25708D198, type metadata accessor for MLProgram.Argument.Binding, (uint64_t)&protocol conformance descriptor for MLProgram.Argument.Binding);
}

uint64_t sub_240C90768@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = MLProgram.Argument.bindings.getter();
  *a1 = result;
  return result;
}

uint64_t *_s8ArgumentVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_MILSpec_Argument(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s8ArgumentVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_MILSpec_Argument(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s8ArgumentVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Argument(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s8ArgumentVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Argument(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s8ArgumentVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Argument(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s8ArgumentVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Argument(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s8ArgumentVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C90A5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_20_9();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s8ArgumentVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C90A98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_20_9();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C90ACC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_Argument(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s8ArgumentV7BindingOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  int *v19;
  _QWORD *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v41;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    if (EnumCaseMultiPayload == 1)
    {
      v8 = (int *)type metadata accessor for Proto_MILSpec_Value(0);
      v9 = v8[5];
      v10 = (uint64_t *)((char *)a1 + v9);
      v11 = (uint64_t *)((char *)a2 + v9);
      v12 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
      {
        v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
        memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v15 = v11[1];
          *v10 = *v11;
          v10[1] = v15;
          v10[2] = v11[2];
          v16 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
          v17 = (char *)v10 + v16;
          v41 = (char *)v11 + v16;
          v18 = sub_240F1C930();
          v19 = v8;
          v20 = v10;
          v21 = v12;
          v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v17, v41, v18);
          v12 = v21;
          v10 = v20;
          v8 = v19;
        }
        else
        {
          v23 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v23))
          {
            v25 = (char *)&loc_240C90D20 + 4 * byte_240F23FD8[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
          memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
          v26 = *(int *)(type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0) + 20);
          v27 = (char *)v10 + v26;
          v28 = (char *)v11 + v26;
          v29 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      }
      v30 = v8[6];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = sub_240F1C930();
      v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
      v34(v31, v32, v33);
      v35 = v8[7];
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      v38 = type metadata accessor for Proto_MILSpec_ValueType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v34(v36, v37, v33);
        *(_QWORD *)&v36[*(int *)(v38 + 20)] = *(_QWORD *)&v37[*(int *)(v38 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_240C91090()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  sub_240BF5610(*v1, v3);
  *v0 = v2;
  v0[1] = v3;
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBytes(0);
  sub_240F1C930();
  JUMPOUT(0x240C90ED0);
}

uint64_t _s8ArgumentV7BindingOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t result;
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  result = swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v4 = (int *)type metadata accessor for Proto_MILSpec_Value(0);
    v5 = a1 + v4[5];
    v6 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v7 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
      }
      else
      {
        v8 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
        if (!__swift_getEnumTagSinglePayload(v5, 1, v8))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              v9 = type metadata accessor for Proto_MILSpec_TensorValue.OneOf_Value(0);
              if (!__swift_getEnumTagSinglePayload(v5, 1, v9))
              {
                switch(swift_getEnumCaseMultiPayload())
                {
                  case 0u:
                    swift_bridgeObjectRelease();
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedFloats(0);
                    goto LABEL_19;
                  case 1u:
                    swift_bridgeObjectRelease();
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedInts(0);
                    goto LABEL_19;
                  case 2u:
                    swift_bridgeObjectRelease();
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBools(0);
                    goto LABEL_19;
                  case 3u:
                    swift_bridgeObjectRelease();
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedStrings(0);
                    goto LABEL_19;
                  case 4u:
                    swift_bridgeObjectRelease();
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedLongInts(0);
                    goto LABEL_19;
                  case 5u:
                    swift_bridgeObjectRelease();
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedDoubles(0);
                    goto LABEL_19;
                  case 6u:
                    sub_240BF6AE0(*(_QWORD *)v5, *(_QWORD *)(v5 + 8));
                    v10 = type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBytes(0);
LABEL_19:
                    v12 = v5 + *(int *)(v10 + 20);
                    v13 = sub_240F1C930();
                    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
                    break;
                  default:
                    break;
                }
              }
              v11 = type metadata accessor for Proto_MILSpec_TensorValue(0);
              goto LABEL_21;
            case 1u:
              swift_bridgeObjectRelease();
              v11 = type metadata accessor for Proto_MILSpec_TupleValue(0);
              goto LABEL_21;
            case 2u:
              swift_bridgeObjectRelease();
              v11 = type metadata accessor for Proto_MILSpec_ListValue(0);
              goto LABEL_21;
            case 3u:
              swift_bridgeObjectRelease();
              v11 = type metadata accessor for Proto_MILSpec_DictionaryValue(0);
LABEL_21:
              v14 = v5 + *(int *)(v11 + 20);
              v15 = sub_240F1C930();
              (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
              break;
            default:
              break;
          }
        }
        v7 = *(int *)(type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0) + 20);
      }
      v16 = v5 + v7;
      v17 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    }
    v18 = a1 + v4[6];
    v19 = sub_240F1C930();
    v20 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 8);
    v20(v18, v19);
    v21 = a1 + v4[7];
    v22 = type metadata accessor for Proto_MILSpec_ValueType(0);
    result = __swift_getEnumTagSinglePayload(v21, 1, v22);
    if (!(_DWORD)result)
    {
      v20(v21, v19);
      return swift_release();
    }
  }
  return result;
}

_QWORD *_s8ArgumentV7BindingOwcp(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  int *v16;
  _QWORD *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v38;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v5 = a2[1];
  *a1 = *a2;
  a1[1] = v5;
  if (EnumCaseMultiPayload == 1)
  {
    v6 = (int *)type metadata accessor for Proto_MILSpec_Value(0);
    v7 = v6[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v12 = v9[1];
        *v8 = *v9;
        v8[1] = v12;
        v8[2] = v9[2];
        v13 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
        v14 = (char *)v8 + v13;
        v38 = (char *)v9 + v13;
        v15 = sub_240F1C930();
        v16 = v6;
        v17 = v8;
        v18 = v10;
        v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v19(v14, v38, v15);
        v10 = v18;
        v8 = v17;
        v6 = v16;
      }
      else
      {
        v20 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v20))
        {
          v22 = (char *)&loc_240C9159C + 4 * byte_240F23FEE[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        v23 = *(int *)(type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0) + 20);
        v24 = (char *)v8 + v23;
        v25 = (char *)v9 + v23;
        v26 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v27 = v6[6];
    v28 = (char *)a1 + v27;
    v29 = (char *)a2 + v27;
    v30 = sub_240F1C930();
    v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
    v31(v28, v29, v30);
    v32 = v6[7];
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = type metadata accessor for Proto_MILSpec_ValueType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      v31(v33, v34, v30);
      *(_QWORD *)&v33[*(int *)(v35 + 20)] = *(_QWORD *)&v34[*(int *)(v35 + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void sub_240C91914()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  sub_240BF5610(*v1, v3);
  *v0 = v2;
  v0[1] = v3;
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBytes(0);
  sub_240F1C930();
  JUMPOUT(0x240C9174CLL);
}

_QWORD *_s8ArgumentV7BindingOwca(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  int *v14;
  _QWORD *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v36;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for MLProgram.Argument.Binding);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    a1[1] = a2[1];
    if (EnumCaseMultiPayload == 1)
    {
      v5 = (int *)type metadata accessor for Proto_MILSpec_Value(0);
      v6 = v5[5];
      v7 = (_QWORD *)((char *)a1 + v6);
      v8 = (_QWORD *)((char *)a2 + v6);
      v9 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
      {
        v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
        memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *v7 = *v8;
          v7[1] = v8[1];
          v7[2] = v8[2];
          v11 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
          v12 = (char *)v7 + v11;
          v36 = (char *)v8 + v11;
          v13 = sub_240F1C930();
          v14 = v5;
          v15 = v7;
          v16 = v9;
          v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v17(v12, v36, v13);
          v9 = v16;
          v7 = v15;
          v5 = v14;
        }
        else
        {
          v18 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v18))
          {
            v20 = (char *)&loc_240C91B44 + 4 * byte_240F23FF9[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
          memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          v21 = *(int *)(type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0) + 20);
          v22 = (char *)v7 + v21;
          v23 = (char *)v8 + v21;
          v24 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      }
      v25 = v5[6];
      v26 = (char *)a1 + v25;
      v27 = (char *)a2 + v25;
      v28 = sub_240F1C930();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      v29(v26, v27, v28);
      v30 = v5[7];
      v31 = (char *)a1 + v30;
      v32 = (char *)a2 + v30;
      v33 = type metadata accessor for Proto_MILSpec_ValueType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
      {
        v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
        memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
      }
      else
      {
        v29(v31, v32, v28);
        *(_QWORD *)&v31[*(int *)(v33 + 20)] = *(_QWORD *)&v32[*(int *)(v33 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
      }
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_240C91EBC()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  unint64_t v3;

  v2 = *v1;
  v3 = v1[1];
  sub_240BF5610(*v1, v3);
  *v0 = v2;
  v0[1] = v3;
  type metadata accessor for Proto_MILSpec_TensorValue.RepeatedBytes(0);
  sub_240F1C930();
  JUMPOUT(0x240C91CF4);
}

_OWORD *_s8ArgumentV7BindingOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = (int *)type metadata accessor for Proto_MILSpec_Value(0);
    v7 = v6[5];
    v8 = (_QWORD *)((char *)a1 + v7);
    v9 = (_QWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v8[2] = v9[2];
        v12 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
        v13 = (char *)v8 + v12;
        v14 = (char *)v9 + v12;
        v15 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      }
      else
      {
        v16 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16))
        {
          v18 = (char *)&loc_240C9209C + 4 * byte_240F24004[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
        v19 = *(int *)(type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0) + 20);
        v20 = (char *)v8 + v19;
        v21 = (char *)v9 + v19;
        v22 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v23 = v6[6];
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_240F1C930();
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
    v27(v24, v25, v26);
    v28 = v6[7];
    v29 = (char *)a1 + v28;
    v30 = (char *)a2 + v28;
    v31 = type metadata accessor for Proto_MILSpec_ValueType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
    {
      v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
      memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
    }
    else
    {
      v27(v29, v30, v26);
      *(_QWORD *)&v29[*(int *)(v31 + 20)] = *(_QWORD *)&v30[*(int *)(v31 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
    }
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s8ArgumentV7BindingOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for MLProgram.Argument.Binding);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = (int *)type metadata accessor for Proto_MILSpec_Value(0);
      v7 = v6[5];
      v8 = (_QWORD *)((char *)a1 + v7);
      v9 = (_QWORD *)((char *)a2 + v7);
      v10 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
      {
        v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
        memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
      }
      else
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          *(_OWORD *)v8 = *(_OWORD *)v9;
          v8[2] = v9[2];
          v12 = *(int *)(type metadata accessor for Proto_MILSpec_Value.BlobFileValue(0) + 24);
          v13 = (char *)v8 + v12;
          v14 = (char *)v9 + v12;
          v15 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        }
        else
        {
          v16 = type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
          if (!__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v16))
          {
            v18 = (char *)&loc_240C92584 + 4 * byte_240F2400F[swift_getEnumCaseMultiPayload()];
            __asm { BR              X10 }
          }
          v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CED8);
          memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
          v19 = *(int *)(type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0) + 20);
          v20 = (char *)v8 + v19;
          v21 = (char *)v9 + v19;
          v22 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      }
      v23 = v6[6];
      v24 = (char *)a1 + v23;
      v25 = (char *)a2 + v23;
      v26 = sub_240F1C930();
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 32);
      v27(v24, v25, v26);
      v28 = v6[7];
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = type metadata accessor for Proto_MILSpec_ValueType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31))
      {
        v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
      }
      else
      {
        v27(v29, v30, v26);
        *(_QWORD *)&v29[*(int *)(v31 + 20)] = *(_QWORD *)&v30[*(int *)(v31 + 20)];
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v31);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_240C928C4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_Value(319);
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_240C92934()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_240C92958()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void OUTLINED_FUNCTION_9_13(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_11_17()
{
  uint64_t v0;

  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 - 352), 1, 1, *(_QWORD *)(v0 - 288));
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_12_15()
{
  uint64_t v0;

  __swift_storeEnumTagSinglePayload(*(_QWORD *)(v0 - 408), 1, 1, *(_QWORD *)(v0 - 304));
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_20_9()
{
  return type metadata accessor for Proto_MILSpec_Argument(0);
}

void OUTLINED_FUNCTION_22_8(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

void OUTLINED_FUNCTION_26_6(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

void OUTLINED_FUNCTION_27_9(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

void OUTLINED_FUNCTION_30_11(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_240BE0BF4(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

void OUTLINED_FUNCTION_31_7(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  sub_240BE0BF4(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t OUTLINED_FUNCTION_33_10()
{
  return type metadata accessor for MLProgram.Argument.Binding(0);
}

uint64_t OUTLINED_FUNCTION_35_8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for MLProgram.Value.ImmediateValue(0);
}

void OUTLINED_FUNCTION_36_10(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

void OUTLINED_FUNCTION_38_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

void OUTLINED_FUNCTION_39_6(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C5E950(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_40_8()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_45_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_47_9()
{
  return type metadata accessor for Proto_MILSpec_Value.ImmediateValue.OneOf_Value(0);
}

uint64_t OUTLINED_FUNCTION_48_8()
{
  return type metadata accessor for MLProgram.Value.Representation(0);
}

uint64_t OUTLINED_FUNCTION_49_7()
{
  return type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
}

uint64_t OUTLINED_FUNCTION_50_10()
{
  uint64_t *v0;
  uint64_t v1;

  return MLProgram.Argument.init(binding:)(v1, v0);
}

void OUTLINED_FUNCTION_51_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_52_7()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
}

void OUTLINED_FUNCTION_55_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;

  sub_240C7B208(a1, 0, v9, a4, a5, v8, a7, a8);
}

void OUTLINED_FUNCTION_58_6(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_61_6()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_65_4()
{
  uint64_t v0;

  return sub_240C8EB1C(v0);
}

void OUTLINED_FUNCTION_68_5()
{
  sub_240C799E0();
}

void OUTLINED_FUNCTION_69_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 288) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_71_5(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  __swift_storeEnumTagSinglePayload(a1, a2, a3, v4);
  return __swift_getEnumTagSinglePayload(v3, 1, v4);
}

uint64_t OUTLINED_FUNCTION_77_2()
{
  return type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding(0);
}

uint64_t OUTLINED_FUNCTION_78_4()
{
  return type metadata accessor for MLProgram.Argument.Binding(0);
}

void OUTLINED_FUNCTION_79_2()
{
  sub_240C799E0();
}

uint64_t OUTLINED_FUNCTION_81_3()
{
  uint64_t *v0;
  uint64_t v1;

  return MLProgram.Argument.init(binding:)(v1, v0);
}

uint64_t OUTLINED_FUNCTION_83_3(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return __swift_storeEnumTagSinglePayload(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_84_3()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_86_3()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_87_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_88_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_89_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_90_3()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_91_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

void OUTLINED_FUNCTION_94_3()
{
  sub_240BF0CF4();
}

void OUTLINED_FUNCTION_95_3()
{
  sub_240C02D3C();
}

uint64_t OUTLINED_FUNCTION_100_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_104_2()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_105_4()
{
  return type metadata accessor for MLProgram.Value.BlobFileValue(0);
}

void OUTLINED_FUNCTION_106_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_109_3()
{
  return type metadata accessor for Proto_MILSpec_Value.ImmediateValue(0);
}

uint64_t OUTLINED_FUNCTION_110_4()
{
  return type metadata accessor for Proto_MILSpec_Argument.Binding(0);
}

void static NeuralNetwork.Layer.SliceBySizeParameters.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_20_2();
  if (v4 && *(_QWORD *)(v1 + 8) == *(_QWORD *)(v0 + 8))
  {
    v5 = type metadata accessor for Proto_SliceBySizeLayerParams(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v5 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v5 + 24));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.SlidingWindowsParameters.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;

  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_20_2();
  if (v4 && *(_QWORD *)(v1 + 8) == *(_QWORD *)(v0 + 8) && *(_QWORD *)(v1 + 16) == *(_QWORD *)(v0 + 16))
  {
    v5 = type metadata accessor for Proto_SlidingWindowsLayerParams(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v5 + 28));
    OUTLINED_FUNCTION_10_6(*(int *)(v5 + 28));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.SliceBySizeParameters.init()(_QWORD *a1@<X8>)
{
  type metadata accessor for Proto_SliceBySizeLayerParams(0);
  *a1 = 0;
  a1[1] = 0;
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.SliceStaticParameters.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  a1[2] = v2;
  a1[3] = v2;
  a1[4] = v2;
  a1[5] = v2;
  type metadata accessor for Proto_SliceStaticLayerParams(0);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.SliceDynamicParameters.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = v2;
  a1[2] = v2;
  a1[3] = v2;
  a1[4] = v2;
  type metadata accessor for Proto_SliceDynamicLayerParams(0);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.SlidingWindowsParameters.init()(_QWORD *a1@<X8>)
{
  type metadata accessor for Proto_SlidingWindowsLayerParams(0);
  a1[1] = 0;
  a1[2] = 0;
  *a1 = 0;
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

unint64_t NeuralNetwork.Layer.SliceParameters.Axis.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t NeuralNetwork.Layer.SliceParameters.Axis.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_240C92F84()
{
  return sub_240C30D44(&qword_25708D1C0, type metadata accessor for Proto_SliceLayerParams, (uint64_t)&unk_240F4D72C);
}

uint64_t sub_240C92FB0()
{
  return sub_240C30D44(&qword_25708D1C8, type metadata accessor for Proto_SliceBySizeLayerParams, (uint64_t)&unk_240F4D6B4);
}

uint64_t sub_240C92FDC()
{
  return sub_240C30D44(&qword_25708D1D0, type metadata accessor for Proto_SliceStaticLayerParams, (uint64_t)&unk_240F4D63C);
}

uint64_t sub_240C93008()
{
  return sub_240C30D44(&qword_25708D1D8, type metadata accessor for Proto_SliceDynamicLayerParams, (uint64_t)&unk_240F4D5C4);
}

uint64_t sub_240C93034()
{
  return sub_240C30D44(&qword_25708D1E0, type metadata accessor for Proto_SlidingWindowsLayerParams, (uint64_t)&unk_240F4D54C);
}

unint64_t sub_240C93060@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return NeuralNetwork.Layer.SliceParameters.Axis.init(rawValue:)(*a1, a2);
}

void sub_240C93068(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.SliceParameters.Axis.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

unint64_t sub_240C9308C()
{
  unint64_t result;

  result = qword_25708D1E8;
  if (!qword_25708D1E8)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.Layer.SliceParameters.Axis, &type metadata for NeuralNetwork.Layer.SliceParameters.Axis);
    atomic_store(result, (unint64_t *)&qword_25708D1E8);
  }
  return result;
}

uint64_t _s15SliceParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Proto_SliceLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = a2[3];
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_QWORD *)(a1 + 24) = v6;
    *(_BYTE *)(a1 + 32) = *((_BYTE *)a2 + 32);
    v7 = *(int *)(v4 + 32);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  return a1;
}

uint64_t _s15SliceParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s15SliceParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  return a1;
}

uint64_t _s15SliceParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(_QWORD *)(a2 + 24);
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s15SliceParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t _s15SliceParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_BYTE *)(a1 + 32) = *(_BYTE *)(a2 + 32);
  v5 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t _s15SliceParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C933AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_14_15();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s15SliceParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C933D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_14_15();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SliceParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D1F0);
}

uint64_t sub_240C93404(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SliceLayerParams);
}

uint64_t *_s21SliceBySizeParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_SliceBySizeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(int *)(v4 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s21SliceBySizeParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_OWORD *_s21SliceBySizeParametersVwcp(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s21SliceBySizeParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s21SliceBySizeParametersVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *_s21SliceBySizeParametersVwta(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21SliceBySizeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9369C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_14();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21SliceBySizeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C936C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_14();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SliceBySizeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D200);
}

uint64_t sub_240C936F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SliceBySizeLayerParams);
}

uint64_t *_s21SliceStaticParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  char *v14;

  v4 = type metadata accessor for Proto_SliceStaticLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    a1[5] = a2[5];
    v9 = *(int *)(v4 + 40);
    v10 = (char *)a1 + v9;
    v14 = (char *)a2 + v9;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v10, v14, v11);
  }
  return a1;
}

uint64_t _s21SliceStaticParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s21SliceStaticParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  char *v12;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
  v8 = (char *)a1 + v7;
  v12 = (char *)a2 + v7;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v8, v12, v9);
  return a1;
}

_QWORD *_s21SliceStaticParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s21SliceStaticParametersVwtk(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *_s21SliceStaticParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21SliceStaticParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C93B70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_18();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21SliceStaticParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C93B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_18();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SliceStaticParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D210);
}

uint64_t sub_240C93BC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SliceStaticLayerParams);
}

uint64_t *_s22SliceDynamicParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_SliceDynamicLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = *(int *)(v4 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t _s22SliceDynamicParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s22SliceDynamicParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *_s22SliceDynamicParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s22SliceDynamicParametersVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *_s22SliceDynamicParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s22SliceDynamicParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C93FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_12();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s22SliceDynamicParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9400C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_12();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SliceDynamicParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D220);
}

uint64_t sub_240C9403C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SliceDynamicLayerParams);
}

uint64_t *_s24SlidingWindowsParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_SlidingWindowsLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v6 = *(int *)(v4 + 28);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s24SlidingWindowsParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s24SlidingWindowsParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s24SlidingWindowsParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  v4 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s24SlidingWindowsParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s24SlidingWindowsParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s24SlidingWindowsParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C942FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_16();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s24SlidingWindowsParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C94324()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12_16();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SlidingWindowsParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D230);
}

uint64_t sub_240C94354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SlidingWindowsLayerParams);
}

uint64_t _s15SliceParametersV4AxisOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240C943AC + 4 * byte_240F241C5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240C943E0 + 4 * byte_240F241C0[v4]))();
}

uint64_t sub_240C943E0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C943E8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C943F0);
  return result;
}

uint64_t sub_240C943FC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C94404);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240C94408(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C94410(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.Layer.SliceParameters.Axis()
{
  return &type metadata for NeuralNetwork.Layer.SliceParameters.Axis;
}

uint64_t OUTLINED_FUNCTION_11_18()
{
  return type metadata accessor for Proto_SliceStaticLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_12_16()
{
  return type metadata accessor for Proto_SlidingWindowsLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_13_12()
{
  return type metadata accessor for Proto_SliceDynamicLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_14_15()
{
  return type metadata accessor for Proto_SliceLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_15_14()
{
  return type metadata accessor for Proto_SliceBySizeLayerParams(0);
}

MLModelSpecification::Analysis __swiftcall Analysis.init()()
{
  _QWORD *v0;
  MLModelSpecification::Analysis result;

  *v0 = MEMORY[0x24BEE4AF8];
  return result;
}

void Analysis.append(severity:kind:property:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_3_21();
  OUTLINED_FUNCTION_3_21();
  sub_240C9545C();
  OUTLINED_FUNCTION_12_17();
  v2 = *v0;
  *(_QWORD *)(v2 + 16) = v1 + 1;
  OUTLINED_FUNCTION_5_20(v2 + 48 * v1);
  swift_bridgeObjectRelease();
  *v0 = v2;
  OUTLINED_FUNCTION_1();
}

Swift::Void __swiftcall Analysis.append(contentsOf:)(MLModelSpecification::Analysis contentsOf)
{
  swift_bridgeObjectRetain();
  sub_240C94908();
}

void Analysis.errors.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_240C94534(v0);
  OUTLINED_FUNCTION_122_1();
}

uint64_t sub_240C94534(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = result;
  v4 = 0;
  v5 = *(_QWORD *)(result + 16);
  v6 = MEMORY[0x24BEE4AF8];
LABEL_2:
  v7 = 48 * v4;
  while (1)
  {
    if (v5 == v4)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v4 >= *(_QWORD *)(v3 + 16))
      break;
    v8 = v7 + 48;
    ++v4;
    v9 = *(unsigned __int8 *)(v3 + v7 + 32);
    v7 += 48;
    if (!v9)
    {
      v10 = *(_QWORD *)(v3 + v8);
      v11 = *(_BYTE *)(v3 + v8 + 8);
      v12 = *(_QWORD *)(v3 + v8 + 24);
      v16 = *(_QWORD *)(v3 + v8 + 16);
      v17 = *(_QWORD *)(v3 + v8 - 8);
      sub_240C02F64(v17, v10, v11);
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      v18 = v2;
      if ((result & 1) == 0)
        result = (uint64_t)sub_240BF0D20(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
        result = (uint64_t)sub_240BF0D20((char *)(v13 > 1), v14 + 1, 1);
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 48 * v14;
      *(_BYTE *)(v15 + 32) = 0;
      v2 = v18;
      *(_QWORD *)(v15 + 40) = v17;
      *(_QWORD *)(v15 + 48) = v10;
      *(_BYTE *)(v15 + 56) = v11;
      *(_QWORD *)(v15 + 64) = v16;
      *(_QWORD *)(v15 + 72) = v12;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_240C94684(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v3 = result;
  v4 = 0;
  v5 = *(_QWORD *)(result + 16);
  v6 = MEMORY[0x24BEE4AF8];
LABEL_2:
  v7 = 48 * v4;
  while (1)
  {
    if (v5 == v4)
    {
      swift_bridgeObjectRelease();
      return v6;
    }
    if (v4 >= *(_QWORD *)(v3 + 16))
      break;
    v8 = v7 + 48;
    ++v4;
    v9 = *(unsigned __int8 *)(v3 + v7 + 32);
    v7 += 48;
    if (v9 == 1)
    {
      v10 = *(_QWORD *)(v3 + v8);
      v11 = *(_BYTE *)(v3 + v8 + 8);
      v12 = *(_QWORD *)(v3 + v8 + 24);
      v16 = *(_QWORD *)(v3 + v8 + 16);
      v17 = *(_QWORD *)(v3 + v8 - 8);
      sub_240C02F64(v17, v10, v11);
      swift_bridgeObjectRetain();
      result = swift_isUniquelyReferenced_nonNull_native();
      v18 = v2;
      if ((result & 1) == 0)
        result = (uint64_t)sub_240BF0D20(0, *(_QWORD *)(v6 + 16) + 1, 1);
      v14 = *(_QWORD *)(v6 + 16);
      v13 = *(_QWORD *)(v6 + 24);
      if (v14 >= v13 >> 1)
        result = (uint64_t)sub_240BF0D20((char *)(v13 > 1), v14 + 1, 1);
      *(_QWORD *)(v6 + 16) = v14 + 1;
      v15 = v6 + 48 * v14;
      *(_BYTE *)(v15 + 32) = 1;
      v2 = v18;
      *(_QWORD *)(v15 + 40) = v17;
      *(_QWORD *)(v15 + 48) = v10;
      *(_BYTE *)(v15 + 56) = v11;
      *(_QWORD *)(v15 + 64) = v16;
      *(_QWORD *)(v15 + 72) = v12;
      goto LABEL_2;
    }
  }
  __break(1u);
  return result;
}

void Analysis.warnings.getter()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_240C94684(v0);
  OUTLINED_FUNCTION_122_1();
}

uint64_t Analysis.all.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Analysis.init(severity:kind:property:)@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_3_21();
  sub_240C9545C();
  OUTLINED_FUNCTION_12_17();
  v3 = *a1;
  *(_QWORD *)(v3 + 16) = v1 + 1;
  OUTLINED_FUNCTION_5_20(v3 + 48 * v1);
  return swift_bridgeObjectRelease();
}

void Analysis.append(_:)(char *a1)
{
  uint64_t *v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  v3 = *((_QWORD *)a1 + 1);
  v4 = *((_QWORD *)a1 + 2);
  v6 = *((_QWORD *)a1 + 4);
  v5 = *((_QWORD *)a1 + 5);
  v7 = a1[24];
  sub_240C02F64(v3, v4, v7);
  swift_bridgeObjectRetain();
  sub_240C9545C();
  v8 = *(_QWORD *)(*v1 + 16);
  sub_240C95498(v8);
  v9 = *v1;
  *(_QWORD *)(v9 + 16) = v8 + 1;
  v10 = v9 + 48 * v8;
  *(_BYTE *)(v10 + 32) = v2;
  *(_QWORD *)(v10 + 40) = v3;
  *(_QWORD *)(v10 + 48) = v4;
  *(_BYTE *)(v10 + 56) = v7;
  *(_QWORD *)(v10 + 64) = v6;
  *(_QWORD *)(v10 + 72) = v5;
  *v1 = v9;
  OUTLINED_FUNCTION_13();
}

void sub_240C94908()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_15_15();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_13_13() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_240C02BB4();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16) < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_16_13();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v2;
    OUTLINED_FUNCTION_42();
    return;
  }
  v7 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v7, v3);
  v8 = v7 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v8;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

void sub_240C949C8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_14;
  }
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!isUniquelyReferenced_nonNull_native || (v7 = *(_QWORD *)(v3 + 24) >> 1, v7 < v4 + v2))
  {
    sub_240BF1E28();
    v3 = v8;
    *v1 = v8;
    v7 = *(_QWORD *)(v8 + 24) >> 1;
  }
  v9 = v7 - *(_QWORD *)(v3 + 16);
  if (!*(_QWORD *)(a1 + 16))
  {
    if (!v2)
    {
LABEL_11:
      swift_bridgeObjectRelease();
      if (v2 != v9)
      {
LABEL_12:
        OUTLINED_FUNCTION_13();
        return;
      }
LABEL_14:
      *v1 = v3;
      goto LABEL_12;
    }
    __break(1u);
    goto LABEL_16;
  }
  if (v9 < v2)
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1B8);
  OUTLINED_FUNCTION_16_13();
  if (!v2)
    goto LABEL_11;
  v10 = *(_QWORD *)(v3 + 16);
  v11 = __OFADD__(v10, v2);
  v12 = v10 + v2;
  if (!v11)
  {
    *(_QWORD *)(v3 + 16) = v12;
    goto LABEL_11;
  }
LABEL_17:
  __break(1u);
}

void sub_240C94ACC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  BOOL v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_15_15();
  if (v5)
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!OUTLINED_FUNCTION_13_13() || v4 > *(_QWORD *)(v2 + 24) >> 1)
  {
    sub_240C02EA4();
    v2 = v6;
  }
  if (!*(_QWORD *)(v0 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  v7 = (*(_QWORD *)(v2 + 24) >> 1) - *(_QWORD *)(v2 + 16);
  type metadata accessor for FeatureDescription();
  if (v7 < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_16_13();
  if (!v3)
  {
LABEL_11:
    swift_bridgeObjectRelease();
    *v1 = v2;
    OUTLINED_FUNCTION_42();
    return;
  }
  v8 = *(_QWORD *)(v2 + 16);
  v5 = __OFADD__(v8, v3);
  v9 = v8 + v3;
  if (!v5)
  {
    *(_QWORD *)(v2 + 16) = v9;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t static Analysis.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_240BEAD48(*a1, *a2);
}

uint64_t Analysis.startIndex.getter()
{
  return 0;
}

uint64_t Analysis.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

Swift::Int __swiftcall Analysis.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

Swift::Int __swiftcall Analysis.index(before:)(Swift::Int before)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFSUB__(before, 1);
  result = before - 1;
  if (v1)
    __break(1u);
  return result;
}

unint64_t Analysis.subscript.getter@<X0>(unint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > result)
  {
    v3 = *(_QWORD *)v2 + 48 * result;
    v4 = *(_QWORD *)(v3 + 40);
    v5 = *(_QWORD *)(v3 + 48);
    v6 = *(_QWORD *)(v3 + 64);
    v7 = *(_QWORD *)(v3 + 72);
    *(_BYTE *)a2 = *(_BYTE *)(v3 + 32);
    *(_QWORD *)(a2 + 8) = v4;
    *(_QWORD *)(a2 + 16) = v5;
    v8 = *(_BYTE *)(v3 + 56);
    *(_BYTE *)(a2 + 24) = v8;
    *(_QWORD *)(a2 + 32) = v6;
    *(_QWORD *)(a2 + 40) = v7;
    sub_240C02F64(v4, v5, v8);
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

double sub_240C94C48@<D0>(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  double result;
  _BYTE v7[8];
  __int128 v8;
  char v9;
  uint64_t v10;
  uint64_t v11;

  Analysis.subscript.getter(*a1, (uint64_t)v7);
  v3 = v9;
  v4 = v10;
  v5 = v11;
  *(_BYTE *)a2 = v7[0];
  result = *(double *)&v8;
  *(_OWORD *)(a2 + 8) = v8;
  *(_BYTE *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = v4;
  *(_QWORD *)(a2 + 40) = v5;
  return result;
}

void sub_240C94CA4(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9[8];
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;

  v3 = *a3;
  v5 = *(_QWORD *)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_BYTE *)(a1 + 24);
  v9[0] = *(_BYTE *)a1;
  v10 = v5;
  v11 = v4;
  v12 = v8;
  v13 = v6;
  v14 = v7;
  sub_240C02F64(v5, v4, v8);
  swift_bridgeObjectRetain();
  Analysis.subscript.setter(v9, v3);
}

void Analysis.subscript.setter(char *a1, unint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;

  v5 = *a1;
  v6 = *((_QWORD *)a1 + 1);
  v7 = *((_QWORD *)a1 + 2);
  v8 = a1[24];
  v9 = *((_QWORD *)a1 + 4);
  v10 = *((_QWORD *)a1 + 5);
  if ((OUTLINED_FUNCTION_14_16() & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_240C95504();
  v2 = v15;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v2 + 16) > a2)
  {
    v11 = v2 + 48 * a2;
    v12 = *(_QWORD *)(v11 + 40);
    v13 = *(_QWORD *)(v11 + 48);
    *(_BYTE *)(v11 + 32) = v5;
    *(_QWORD *)(v11 + 40) = v6;
    *(_QWORD *)(v11 + 48) = v7;
    v14 = *(_BYTE *)(v11 + 56);
    *(_BYTE *)(v11 + 56) = v8;
    *(_QWORD *)(v11 + 64) = v9;
    *(_QWORD *)(v11 + 72) = v10;
    sub_240C02F7C(v12, v13, v14);
    swift_bridgeObjectRelease();
    *v3 = v2;
    OUTLINED_FUNCTION_1();
    return;
  }
LABEL_7:
  __break(1u);
}

void Analysis.subscript.modify(_QWORD *a1, unint64_t a2)
{
  uint64_t *v2;
  _QWORD *v5;

  v5 = malloc(0x40uLL);
  *a1 = v5;
  v5[6] = a2;
  v5[7] = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*v2 + 16) > a2)
  {
    OUTLINED_FUNCTION_0_14((uint64_t)v5, *v2);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_156();
    return;
  }
  __break(1u);
}

void sub_240C94E14(uint64_t a1, char a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *(_QWORD **)a1;
  v4 = **(_QWORD **)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    sub_240C02F64(*(_QWORD *)(*(_QWORD *)a1 + 8), *(_QWORD *)(*(_QWORD *)a1 + 16), *(_BYTE *)(*(_QWORD *)a1 + 24));
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_240C95504();
      v4 = v7;
    }
    v5 = v3[6];
    if (*(_QWORD *)(v4 + 16) > v5)
    {
      OUTLINED_FUNCTION_1_15(v5);
      *v2 = v4;
      OUTLINED_FUNCTION_11_19();
LABEL_9:
      free(v3);
      return;
    }
    __break(1u);
  }
  else if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    goto LABEL_7;
  }
  sub_240C95504();
  v4 = v8;
LABEL_7:
  v6 = v3[6];
  if (*(_QWORD *)(v4 + 16) > v6)
  {
    OUTLINED_FUNCTION_1_15(v6);
    *v2 = v4;
    goto LABEL_9;
  }
  __break(1u);
}

void sub_240C94F00(char *a1, unint64_t *a2)
{
  Analysis.subscript.setter(a1, *a2);
}

uint64_t (*sub_240C94F08(_QWORD *a1, unint64_t *a2))()
{
  _QWORD *v4;
  uint64_t v5;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  Analysis.subscript.modify(v4, *a2);
  v4[4] = v5;
  return sub_240C94F54;
}

uint64_t sub_240C94F58(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD85B8(*a1, a1[1], a1[2], *a2, a2[1]);
}

uint64_t (*sub_240C94F6C(_QWORD *a1, uint64_t *a2))()
{
  _QWORD *v4;
  uint64_t v5;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  sub_240DD86E4(v4, *a2, a2[1]);
  v4[4] = v5;
  return sub_240C94F54;
}

void sub_240C94FB8(uint64_t (*a1)(_BYTE *)@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_240DD8B5C(a1, a2);
  if (!v3)
    *a3 = v5;
}

void sub_240C94FE0(unint64_t *a1, unint64_t *a2)
{
  sub_240DD8EF8(*a1, *a2);
}

uint64_t sub_240C94FEC()
{
  return sub_240F1CC78();
}

uint64_t sub_240C9500C()
{
  return sub_240F1CC6C();
}

void sub_240C9502C(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = Analysis.index(before:)(*a1);
  OUTLINED_FUNCTION_44();
}

_QWORD *sub_240C95050(_QWORD *result)
{
  if (__OFSUB__(*result, 1))
    __break(1u);
  else
    --*result;
  return result;
}

uint64_t sub_240C95068@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result;

  result = sub_240C95094(*a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_240C95094(uint64_t result, uint64_t a2)
{
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  if (a2 < 0)
  {
    v4 = 0;
    while ((result ^ 0x8000000000000000) > ~a2)
    {
      if (--v4 <= a2)
      {
        result += v4;
        return result;
      }
    }
    goto LABEL_12;
  }
  if (a2)
  {
    v2 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v3 = a2 - 1;
    while (v2 > v3)
    {
      ++result;
      if (!--a2)
        return result;
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  return result;
}

uint64_t sub_240C950F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  if (a2 < 0)
  {
    v3 = 0;
    while (result - a3 + v3)
    {
      v4 = result + v3 - 1;
      if (__OFSUB__(result + v3, 1))
      {
LABEL_15:
        __break(1u);
        return result;
      }
      if (--v3 <= a2)
        return v4;
    }
    return 0;
  }
  if (a2)
  {
    while (a3 != result)
    {
      if (result == 0x7FFFFFFFFFFFFFFFLL)
      {
        __break(1u);
        goto LABEL_15;
      }
      ++result;
      if (!--a2)
        return result;
    }
    return 0;
  }
  return result;
}

uint64_t sub_240C95170(uint64_t *a1, uint64_t *a2)
{
  return sub_240C95180(*a1, *a2);
}

uint64_t sub_240C95180(uint64_t a1, uint64_t a2)
{
  BOOL v3;
  uint64_t v4;
  uint64_t result;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  v4 = a2 - a1;
  v3 = a2 < a1;
  if (a2 <= a1)
  {
    result = 0;
    if (!v3)
      return result;
    v7 = ~a2 + a1;
    v8 = a1 ^ 0x8000000000000000;
    if (v7 >= v8)
      v7 = v8;
    v9 = 0x8000000000000000;
    if (v7 < 0x8000000000000000)
      v9 = v7;
    while ((v7 & 0x8000000000000000) == 0)
    {
      if (v8 == v9)
        goto LABEL_18;
      if (v4 == --result)
        return result;
    }
  }
  else
  {
    result = 0;
    v6 = ~a1 + a2;
    while (v6 <= 0x7FFFFFFFFFFFFFFELL)
    {
      if (v4 == ++result)
        return result;
    }
    __break(1u);
  }
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

void sub_240C95204(_QWORD *a1@<X8>)
{
  *a1 = 0;
}

void sub_240C9520C(uint64_t *a1@<X8>)
{
  *a1 = Analysis.count.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C9522C(_QWORD *a1, unint64_t *a2)
{
  _QWORD *v4;
  uint64_t v5;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  sub_240C95298(v4, *a2);
  v4[4] = v5;
  OUTLINED_FUNCTION_156();
}

void sub_240C95270(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD))(*a1 + 32))(*a1);
  OUTLINED_FUNCTION_8_16(v1);
}

void sub_240C95298(_QWORD *a1, unint64_t a2)
{
  uint64_t *v2;
  void *v5;

  v5 = malloc(0x30uLL);
  *a1 = v5;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*v2 + 16) > a2)
  {
    OUTLINED_FUNCTION_0_14((uint64_t)v5, *v2);
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_156();
    return;
  }
  __break(1u);
}

void sub_240C952FC(void **a1)
{
  void *v1;

  v1 = *a1;
  OUTLINED_FUNCTION_11_19();
  OUTLINED_FUNCTION_8_16(v1);
}

uint64_t sub_240C9531C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;

  return sub_240DD90AC(*a1, a1[1], *v2, a2);
}

uint64_t sub_240C9532C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;

  return sub_240C95334(*v1, a1);
}

uint64_t sub_240C95334@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = a1;
  a2[1] = 0;
  a2[2] = *(_QWORD *)(a1 + 16);
  return swift_bridgeObjectRetain();
}

BOOL sub_240C95344()
{
  uint64_t *v0;

  return sub_240D7015C(*v0);
}

void sub_240C95350(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

void sub_240C95360(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  char v5;

  *(_QWORD *)a4 = sub_240C950F0(*a1, a2, *a3);
  *(_BYTE *)(a4 + 8) = v5 & 1;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C95394(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD9204(*a1, *a2, a2[1]);
}

uint64_t sub_240C953A8(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD9218(*a1, *a2, a2[1]);
}

uint64_t sub_240C953BC(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD922C(*a1, a1[1], *a2, a2[1]);
}

void sub_240C953D4(Swift::Int *a1@<X0>, Swift::Int *a2@<X8>)
{
  *a2 = Analysis.index(after:)(*a1);
  OUTLINED_FUNCTION_44();
}

_QWORD *sub_240C953F8(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

void sub_240C95410(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_240C9541C()
{
  uint64_t *v0;

  return sub_240C29088(*v0);
}

uint64_t sub_240C95424()
{
  return 2;
}

void sub_240C9542C()
{
  uint64_t *v0;

  sub_240DD9384(*v0);
}

uint64_t sub_240C95434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  return sub_240DD9400(a1, a2, a3, *v3);
}

uint64_t sub_240C9543C()
{
  return sub_240F1CD38();
}

void sub_240C9545C()
{
  uint64_t v0;
  _QWORD *v1;
  int v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_14_16();
  *v1 = v0;
  if (!v2)
  {
    sub_240C02BB4();
    *v1 = v3;
  }
  OUTLINED_FUNCTION_44();
}

void sub_240C95498(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  if (a1 + 1 > *(_QWORD *)(*(_QWORD *)v1 + 24) >> 1)
  {
    sub_240C02BB4();
    *(_QWORD *)v1 = v2;
  }
}

void sub_240C954D4()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02AD8();
}

void sub_240C954E4()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02B8C();
}

void sub_240C954F4()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02BA0();
}

void sub_240C95504()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02BB4();
}

unint64_t sub_240C95518()
{
  unint64_t result;

  result = qword_25708D240;
  if (!qword_25708D240)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for Analysis, &type metadata for Analysis);
    atomic_store(result, (unint64_t *)&qword_25708D240);
  }
  return result;
}

uint64_t sub_240C95554()
{
  return sub_240C95668(&qword_25708D248, &qword_25708D250, (uint64_t (*)(void))sub_240C95588, MEMORY[0x24BEE4220]);
}

unint64_t sub_240C95588()
{
  unint64_t result;

  result = qword_25708D258;
  if (!qword_25708D258)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for Analysis, &type metadata for Analysis);
    atomic_store(result, (unint64_t *)&qword_25708D258);
  }
  return result;
}

uint64_t sub_240C955C4()
{
  return sub_240C95668(&qword_25708D260, &qword_25708D268, (uint64_t (*)(void))sub_240C955F8, MEMORY[0x24BEE0658]);
}

unint64_t sub_240C955F8()
{
  unint64_t result;

  result = qword_25708D270;
  if (!qword_25708D270)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for Analysis, &type metadata for Analysis);
    atomic_store(result, (unint64_t *)&qword_25708D270);
  }
  return result;
}

uint64_t sub_240C95634()
{
  return sub_240C95668(&qword_25708D278, &qword_25708D250, (uint64_t (*)(void))sub_240C955F8, MEMORY[0x24BEE4218]);
}

uint64_t sub_240C95668(unint64_t *a1, uint64_t *a2, uint64_t (*a3)(void), uint64_t a4)
{
  uint64_t result;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    v8 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    v9 = a3();
    result = MEMORY[0x24268C2AC](a4, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240C956D0()
{
  unint64_t result;

  result = qword_25708D280;
  if (!qword_25708D280)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for Analysis, &type metadata for Analysis);
    atomic_store(result, (unint64_t *)&qword_25708D280);
  }
  return result;
}

uint64_t sub_240C9570C()
{
  return MEMORY[0x24BEE1780];
}

uint64_t sub_240C95718()
{
  return sub_240C9579C(&qword_25708D288, &qword_25708D268, MEMORY[0x24BEE0670]);
}

uint64_t sub_240C95744()
{
  return sub_240C9579C(&qword_25708D290, &qword_25708D250, MEMORY[0x24BEE4238]);
}

uint64_t sub_240C95770()
{
  return sub_240C9579C(&qword_25708D298, &qword_25708D2A0, MEMORY[0x24BEE2C18]);
}

uint64_t sub_240C9579C(unint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x24268C2AC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_240C957E4()
{
  return 0;
}

ValueMetadata *type metadata accessor for Analysis()
{
  return &type metadata for Analysis;
}

void sub_240C95804()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02D3C();
}

void sub_240C95814()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02D50();
}

void sub_240C95824()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02D64();
}

void sub_240C95834()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02D78();
}

void sub_240C95844()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02E40();
}

void sub_240C95854()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02E54();
}

void sub_240C95864()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02E68();
}

void sub_240C95874()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02E7C();
}

void sub_240C95884()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02E90();
}

void sub_240C95894()
{
  OUTLINED_FUNCTION_2_18();
  sub_240C02EA4();
}

uint64_t OUTLINED_FUNCTION_0_14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  v4 = a2 + 48 * v2;
  v5 = *(_QWORD *)(v4 + 40);
  v6 = *(_QWORD *)(v4 + 48);
  v7 = *(_QWORD *)(v4 + 64);
  v8 = *(_QWORD *)(v4 + 72);
  v9 = *(_BYTE *)(v4 + 56);
  *(_BYTE *)a1 = *(_BYTE *)(v4 + 32);
  *(_QWORD *)(a1 + 8) = v5;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v9;
  *(_QWORD *)(a1 + 32) = v7;
  *(_QWORD *)(a1 + 40) = v8;
  return sub_240C02F64(v5, v6, v9);
}

uint64_t OUTLINED_FUNCTION_1_15@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;

  v8 = v1 + 48 * a1;
  v9 = *(_QWORD *)(v8 + 40);
  v10 = *(_QWORD *)(v8 + 48);
  *(_BYTE *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v5;
  *(_QWORD *)(v8 + 48) = v4;
  v11 = *(_BYTE *)(v8 + 56);
  *(_BYTE *)(v8 + 56) = v3;
  *(_QWORD *)(v8 + 64) = v6;
  *(_QWORD *)(v8 + 72) = v2;
  sub_240C02F7C(v9, v10, v11);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2_18()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_3_21()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  sub_240C02F64(v0, v1, v2);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_5_20@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  *(_BYTE *)(a1 + 32) = v6;
  *(_QWORD *)(a1 + 40) = v3;
  *(_QWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 56) = v5;
  *(_QWORD *)(a1 + 64) = v2;
  *(_QWORD *)(a1 + 72) = v1;
  sub_240C02F7C(v3, v4, v5);
  return v1;
}

void OUTLINED_FUNCTION_8_16(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_11_19()
{
  uint64_t v0;

  sub_240C02F7C(*(_QWORD *)(v0 + 8), *(_QWORD *)(v0 + 16), *(_BYTE *)(v0 + 24));
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_12_17()
{
  uint64_t v0;

  sub_240C95498(*(_QWORD *)(*(_QWORD *)v0 + 16));
}

uint64_t OUTLINED_FUNCTION_13_13()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_14_16()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_16_13()
{
  return swift_arrayInitWithCopy();
}

BOOL static ArrayFeatureExtractorConfiguration.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE0(*a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v11 = type metadata accessor for Proto_ArrayFeatureExtractor();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void ArrayFeatureExtractorConfiguration.indices.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF080C();
    v3 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
        break;
      v5 = *(_QWORD *)(v6 + 16);
      if (v5 >= *(_QWORD *)(v6 + 24) >> 1)
        sub_240BF080C();
      ++v3;
      *(_QWORD *)(v6 + 16) = v5 + 1;
      *(_QWORD *)(v6 + 8 * v5 + 32) = v4;
      if (v2 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_240C95C08()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ArrayFeatureExtractorConfiguration.indices.setter(v0);
}

void ArrayFeatureExtractorConfiguration.indices.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  v2 = v1;
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_1_16();
    v4 = v7;
    while ((*(_QWORD *)(a1 + 32) & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_7_16();
      if (v5)
      {
        OUTLINED_FUNCTION_2_19();
        v4 = v7;
      }
      OUTLINED_FUNCTION_6_14();
      if (v6)
      {
        OUTLINED_FUNCTION_165();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v4 = MEMORY[0x24BEE4AF8];
LABEL_10:
    swift_bridgeObjectRelease();
    *v2 = v4;
    OUTLINED_FUNCTION_3_12();
  }
}

void (*ArrayFeatureExtractorConfiguration.indices.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  ArrayFeatureExtractorConfiguration.indices.getter();
  *a1 = v3;
  return sub_240C95CFC;
}

void sub_240C95CFC(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    ArrayFeatureExtractorConfiguration.indices.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    ArrayFeatureExtractorConfiguration.indices.setter(*a1);
  }
}

void ArrayFeatureExtractorConfiguration.init(indices:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  type metadata accessor for Proto_ArrayFeatureExtractor();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_1_16();
    v4 = v7;
    while ((*(_QWORD *)(a1 + 32) & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_7_16();
      if (v5)
      {
        OUTLINED_FUNCTION_2_19();
        v4 = v7;
      }
      OUTLINED_FUNCTION_6_14();
      if (v6)
      {
        OUTLINED_FUNCTION_165();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v4 = MEMORY[0x24BEE4AF8];
LABEL_10:
    *a2 = v4;
    OUTLINED_FUNCTION_3_12();
  }
}

uint64_t ArrayFeatureExtractorConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = sub_240F1CF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  v10 = type metadata accessor for ArrayFeatureExtractorConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240C95FB0(v0, v12 - v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = 0x73656369646E69;
  *(_QWORD *)(v13 + 40) = 0xE700000000000000;
  ArrayFeatureExtractorConfiguration.indices.getter();
  v15 = v14;
  *(_QWORD *)(v13 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v13 + 48) = v15;
  v16 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE43C0], v1);
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for ArrayFeatureExtractorConfiguration()
{
  uint64_t result;

  result = qword_254360430;
  if (!qword_254360430)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C95FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ArrayFeatureExtractorConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C95FF4()
{
  return sub_240C30D44(&qword_25708D2A8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ArrayFeatureExtractor, (uint64_t)&unk_240F32BEC);
}

void sub_240C96020(_QWORD *a1@<X8>)
{
  uint64_t v2;

  ArrayFeatureExtractorConfiguration.indices.getter();
  *a1 = v2;
}

uint64_t *initializeBufferWithCopyOfBuffer for ArrayFeatureExtractorConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_ArrayFeatureExtractor();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for ArrayFeatureExtractorConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_ArrayFeatureExtractor() + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for ArrayFeatureExtractorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ArrayFeatureExtractor() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for ArrayFeatureExtractorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_ArrayFeatureExtractor() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *initializeWithTake for ArrayFeatureExtractorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ArrayFeatureExtractor() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ArrayFeatureExtractorConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_ArrayFeatureExtractor() + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ArrayFeatureExtractorConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C96314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_21();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for ArrayFeatureExtractorConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C96348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_5_21();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240C96374()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ArrayFeatureExtractor();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_1_16()
{
  sub_240BF0830();
}

void OUTLINED_FUNCTION_2_19()
{
  sub_240BF0830();
}

uint64_t OUTLINED_FUNCTION_5_21()
{
  return type metadata accessor for Proto_ArrayFeatureExtractor();
}

void OUTLINED_FUNCTION_6_14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 8 * v3 + 32) = v2;
}

void sub_240C96474()
{
  sub_240BE18B8(&qword_25708D2B0, type metadata accessor for Proto_ModBroadcastableLayerParams, (uint64_t)&unk_240F4D4D4);
}

void sub_240C964A0()
{
  sub_240BE18B8(&qword_25708D2B8, type metadata accessor for Proto_PowBroadcastableLayerParams, (uint64_t)&unk_240F4D45C);
}

void sub_240C964CC()
{
  sub_240BE18B8(&qword_25708D2C0, type metadata accessor for Proto_DivideBroadcastableLayerParams, (uint64_t)&unk_240F4D3E4);
}

void sub_240C964FC()
{
  sub_240BE18B8(&qword_25708D2C8, type metadata accessor for Proto_FloorDivBroadcastableLayerParams, (uint64_t)&unk_240F4D36C);
}

uint64_t _s26BroadcastableModParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C96534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_14();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s26BroadcastableModParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9655C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_14();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastableModParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D2D0);
}

uint64_t _s26BroadcastablePowParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9659C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_20();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s26BroadcastablePowParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C965C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_20();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastablePowParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D2E0);
}

uint64_t _s29BroadcastableDivideParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C96600()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_17();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s29BroadcastableDivideParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C96628()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_8_17();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastableDivideParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D2F0);
}

uint64_t _s31BroadcastableFloorDivParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C96664()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_15();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s31BroadcastableFloorDivParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9668C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_15();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastableFloorDivParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D300);
}

uint64_t sub_240C966BC()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_8_17()
{
  return type metadata accessor for Proto_DivideBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_9_14()
{
  return type metadata accessor for Proto_ModBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_10_15()
{
  return type metadata accessor for Proto_FloorDivBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_11_20()
{
  return type metadata accessor for Proto_PowBroadcastableLayerParams(0);
}

uint64_t sub_240C96764(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = type metadata accessor for Proto_ActivationParams(0);
  v3 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8](v15);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 16);
  v7 = MEMORY[0x24BEE4AF8];
  if (v6)
  {
    v14 = v1;
    v16 = MEMORY[0x24BEE4AF8];
    sub_240BF0854();
    v8 = *(_QWORD *)(type metadata accessor for NeuralNetwork.Layer.Activation(0) - 8);
    v9 = a1 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    v10 = *(_QWORD *)(v8 + 72);
    v11 = type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(0);
    do
    {
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 1, 1, v11);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      sub_240BE0B68((uint64_t)v5, &qword_25708C190);
      sub_240CDB23C();
      __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v11);
      v7 = v16;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0854();
        v7 = v16;
      }
      v12 = *(_QWORD *)(v7 + 16);
      if (v12 >= *(_QWORD *)(v7 + 24) >> 1)
      {
        sub_240BF0854();
        v7 = v16;
      }
      *(_QWORD *)(v7 + 16) = v12 + 1;
      sub_240C35540((uint64_t)v5, v7+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v12, type metadata accessor for Proto_ActivationParams);
      v9 += v10;
      --v6;
    }
    while (v6);
  }
  return v7;
}

void static NeuralNetwork.Layer.unidirectionalLSTM(name:inputNames:outputNames:inputSize:outputSize:sequenceOutput:)()
{
  uint64_t v0;

  OUTLINED_FUNCTION_22();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.init(inputSize:outputSize:sequenceOutput:)();
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.unidirectionalLSTM(inputSize:outputSize:sequenceOutput:)()
{
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.init(inputSize:outputSize:sequenceOutput:)();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.init(inputSize:outputSize:sequenceOutput:)()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE v27[16];

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v27[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v11 = OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = &v27[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v7 + 16) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v7 + 24) = 0;
  v15 = OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_52_8();
  v16 = v7 + *(int *)(v15 + 36);
  OUTLINED_FUNCTION_71(v16, 1);
  v17 = v7 + *(int *)(v15 + 40);
  v18 = OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_18_0(v17, v19, v20, v18);
  if (v5 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  *(_QWORD *)v7 = v5;
  if (v3 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  *(_QWORD *)(v7 + 8) = v3;
  sub_240C02F94(v16, (uint64_t)v10, &qword_25708C208);
  v21 = OUTLINED_FUNCTION_7_1((uint64_t)v10, 1, v11);
  if (v23)
  {
    v24 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_212(v24, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_49_8(v21, v22, type metadata accessor for Proto_LSTMParams);
  }
  *v14 = v1 & 1;
  sub_240BE0B68(v16, &qword_25708C208);
  sub_240C35540((uint64_t)v14, v16, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_71(v16, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C170);
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_240F1DA40;
  OUTLINED_FUNCTION_337();
  swift_storeEnumTagMultiPayload();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_54_3();
  OUTLINED_FUNCTION_337();
  OUTLINED_FUNCTION_54_3();
  v26 = OUTLINED_FUNCTION_53_9(v25);
  swift_setDeallocating();
  sub_240C42DA8();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v7 + 16) = v26;
  OUTLINED_FUNCTION_1();
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.inputSize.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*v0 < 0)
    __break(1u);
  return result;
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.inputSize.setter(uint64_t result)
{
  _QWORD *v1;

  if (result < 0)
    __break(1u);
  else
    *v1 = result;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.UnidirectionalLSTMParameters.inputSize.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  _QWORD *v1;

  *((_QWORD *)result + 1) = v1;
  if ((*v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *v1;
    return sub_240C421A0;
  }
  return result;
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.outputSize.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 8);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.outputSize.setter(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
    __break(1u);
  else
    *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.UnidirectionalLSTMParameters.outputSize.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v2;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 8);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v2;
    return sub_240C42208;
  }
  return result;
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.activations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  _QWORD v43[2];
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_22();
  v54 = v2;
  v55 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C630);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C190);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v50 = type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_11_3();
  v45 = v9 - v10;
  MEMORY[0x24BDAC7A8](v11);
  v44 = (uint64_t)v43 - v12;
  v13 = type metadata accessor for Proto_ActivationParams(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_11_3();
  v17 = v15 - v16;
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v43 - v19;
  v51 = type metadata accessor for NeuralNetwork.Layer.Activation(0);
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_11_3();
  v23 = v21 - v22;
  v25 = MEMORY[0x24BDAC7A8](v24);
  v48 = (uint64_t)v43 - v26;
  MEMORY[0x24BDAC7A8](v25);
  v52 = (uint64_t)v43 - v27;
  v28 = *(_QWORD *)(v0 + 16);
  v29 = *(_QWORD *)(v28 + 16);
  v30 = MEMORY[0x24BEE4AF8];
  if (v29)
  {
    v53 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF0880();
    v31 = *(unsigned __int8 *)(v14 + 80);
    v43[1] = v28;
    v32 = v28 + ((v31 + 32) & ~v31);
    v46 = *(_QWORD *)(v14 + 72);
    v47 = v1;
    while (1)
    {
      OUTLINED_FUNCTION_42_9(v32, (uint64_t)v20);
      OUTLINED_FUNCTION_42_9((uint64_t)v20, v17);
      sub_240C02F94(v17, (uint64_t)v7, &qword_25708C190);
      OUTLINED_FUNCTION_7_1((uint64_t)v7, 1, v50);
      if (v38)
        break;
      v35 = v44;
      OUTLINED_FUNCTION_6_6((uint64_t)v7, v44);
      v36 = v35;
      v37 = v45;
      OUTLINED_FUNCTION_6_6(v36, v45);
      sub_240CDB64C(v37, v1);
      OUTLINED_FUNCTION_7_1(v1, 1, v51);
      if (v38)
      {
        v33 = v1;
        v34 = &qword_25708C630;
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_27_9(v17);
      v39 = v1;
LABEL_10:
      v40 = v48;
      OUTLINED_FUNCTION_6_6(v39, v48);
      OUTLINED_FUNCTION_6_6(v40, v52);
      OUTLINED_FUNCTION_27_9((uint64_t)v20);
      v30 = v53;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0880();
        v30 = v53;
      }
      v41 = *(_QWORD *)(v30 + 16);
      if (v41 >= *(_QWORD *)(v30 + 24) >> 1)
      {
        sub_240BF0880();
        v30 = v53;
      }
      *(_QWORD *)(v30 + 16) = v41 + 1;
      sub_240C35540(v52, v30+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(_QWORD *)(v49 + 72) * v41, type metadata accessor for NeuralNetwork.Layer.Activation);
      v1 = v47;
      v32 += v46;
      if (!--v29)
      {
        swift_bridgeObjectRelease();
        return v30;
      }
    }
    v33 = (uint64_t)v7;
    v34 = &qword_25708C190;
LABEL_9:
    sub_240BE0B68(v33, v34);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_27_9(v17);
    swift_storeEnumTagMultiPayload();
    v39 = v23;
    goto LABEL_10;
  }
  return v30;
}

uint64_t sub_240C97088()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return NeuralNetwork.Layer.UnidirectionalLSTMParameters.activations.setter(v0);
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.activations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  v2 = OUTLINED_FUNCTION_53_9(a1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  return result;
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.activations.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = NeuralNetwork.Layer.UnidirectionalLSTMParameters.activations.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C9712C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = sub_240C96764(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v4;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_53_9(*a1);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v6;
  }
  return result;
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_7_17(v2);
  v3 = OUTLINED_FUNCTION_11_21();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_62_3(v6, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v3, v4, type metadata accessor for Proto_LSTMParams);
  }
  OUTLINED_FUNCTION_38(v7, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.setter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_8_18(v8);
  v9 = OUTLINED_FUNCTION_7_1(v1, 1, v6);
  if (v11)
  {
    v12 = OUTLINED_FUNCTION_9_15();
    OUTLINED_FUNCTION_39(v12, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v9, v10, type metadata accessor for Proto_LSTMParams);
  }
  *v0 = v4 & 1;
  OUTLINED_FUNCTION_212(v13, &qword_25708C208);
  OUTLINED_FUNCTION_17_17(v14, v15, type metadata accessor for Proto_LSTMParams);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_27_8(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.getter();
  OUTLINED_FUNCTION_47_10(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C97364(uint64_t a1)
{
  OUTLINED_FUNCTION_43_9(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_7_17(v2);
  v3 = OUTLINED_FUNCTION_11_21();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_62_3(v6, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v3, v4, type metadata accessor for Proto_LSTMParams);
  }
  OUTLINED_FUNCTION_38(v7, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_8_18(v8);
  v9 = OUTLINED_FUNCTION_7_1(v1, 1, v6);
  if (v11)
  {
    v12 = OUTLINED_FUNCTION_9_15();
    OUTLINED_FUNCTION_39(v12, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v9, v10, type metadata accessor for Proto_LSTMParams);
  }
  *(_BYTE *)(v0 + 1) = v4 & 1;
  OUTLINED_FUNCTION_212(v13, &qword_25708C208);
  OUTLINED_FUNCTION_17_17(v14, v15, type metadata accessor for Proto_LSTMParams);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_27_8(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.getter();
  OUTLINED_FUNCTION_47_10(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C97508(uint64_t a1)
{
  OUTLINED_FUNCTION_43_9(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_7_17(v2);
  v3 = OUTLINED_FUNCTION_11_21();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_62_3(v6, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v3, v4, type metadata accessor for Proto_LSTMParams);
  }
  OUTLINED_FUNCTION_38(v7, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_8_18(v8);
  v9 = OUTLINED_FUNCTION_7_1(v1, 1, v6);
  if (v11)
  {
    v12 = OUTLINED_FUNCTION_9_15();
    OUTLINED_FUNCTION_39(v12, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v9, v10, type metadata accessor for Proto_LSTMParams);
  }
  *(_BYTE *)(v0 + 2) = v4 & 1;
  OUTLINED_FUNCTION_212(v13, &qword_25708C208);
  OUTLINED_FUNCTION_17_17(v14, v15, type metadata accessor for Proto_LSTMParams);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_27_8(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.getter();
  OUTLINED_FUNCTION_47_10(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C976AC(uint64_t a1)
{
  OUTLINED_FUNCTION_43_9(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_7_17(v2);
  v3 = OUTLINED_FUNCTION_11_21();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_62_3(v6, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v3, v4, type metadata accessor for Proto_LSTMParams);
  }
  OUTLINED_FUNCTION_38(v7, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_8_18(v8);
  v9 = OUTLINED_FUNCTION_7_1(v1, 1, v6);
  if (v11)
  {
    v12 = OUTLINED_FUNCTION_9_15();
    OUTLINED_FUNCTION_39(v12, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v9, v10, type metadata accessor for Proto_LSTMParams);
  }
  *(_BYTE *)(v0 + 3) = v4 & 1;
  OUTLINED_FUNCTION_212(v13, &qword_25708C208);
  OUTLINED_FUNCTION_17_17(v14, v15, type metadata accessor for Proto_LSTMParams);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_27_8(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.getter();
  OUTLINED_FUNCTION_47_10(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C97850(uint64_t a1)
{
  OUTLINED_FUNCTION_43_9(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_7_17(v2);
  v3 = OUTLINED_FUNCTION_11_21();
  if (v5)
  {
    v6 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_62_3(v6, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v3, v4, type metadata accessor for Proto_LSTMParams);
  }
  OUTLINED_FUNCTION_38(v7, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_39_7();
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_6_15();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_8_18(v8);
  v9 = OUTLINED_FUNCTION_7_1(v1, 1, v6);
  if (v11)
  {
    v12 = OUTLINED_FUNCTION_9_15();
    OUTLINED_FUNCTION_39(v12, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_18_10(v9, v10, type metadata accessor for Proto_LSTMParams);
  }
  *(_BYTE *)(v0 + 4) = v4 & 1;
  OUTLINED_FUNCTION_212(v13, &qword_25708C208);
  OUTLINED_FUNCTION_17_17(v14, v15, type metadata accessor for Proto_LSTMParams);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_27_8(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.getter();
  OUTLINED_FUNCTION_47_10(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C979F4(uint64_t a1)
{
  OUTLINED_FUNCTION_43_9(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.setter();
  OUTLINED_FUNCTION_44();
}

float NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  float v9;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_4_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_2_20();
  OUTLINED_FUNCTION_7_17(v3);
  v4 = OUTLINED_FUNCTION_11_21();
  if (v6)
  {
    v7 = OUTLINED_FUNCTION_20_4();
    OUTLINED_FUNCTION_62_3(v7, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v4, v5, type metadata accessor for Proto_LSTMParams);
  }
  v9 = *(float *)(v0 + 8);
  OUTLINED_FUNCTION_38(v8, type metadata accessor for Proto_LSTMParams);
  return v9;
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.setter(float a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + *(int *)(OUTLINED_FUNCTION_10_16() + 36);
  OUTLINED_FUNCTION_96(v10, (uint64_t)v5);
  v11 = OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v13)
  {
    *((_DWORD *)v9 + 2) = 0;
    *(_DWORD *)v9 = 0;
    v9[4] = 0;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240BE0B68((uint64_t)v5, &qword_25708C208);
  }
  else
  {
    OUTLINED_FUNCTION_17_17(v11, v12, type metadata accessor for Proto_LSTMParams);
  }
  *((float *)v9 + 2) = a1;
  OUTLINED_FUNCTION_39(v14, &qword_25708C208);
  OUTLINED_FUNCTION_49_8(v15, v16, type metadata accessor for Proto_LSTMParams);
  return __swift_storeEnumTagSinglePayload(v10, 0, 1, v6);
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.modify(_QWORD *a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_27_8(a1);
  *(float *)(v1 + 8) = NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C97C10(uint64_t a1)
{
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.setter(*(float *)(a1 + 8));
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.weights.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_3_22();
  OUTLINED_FUNCTION_96(v1 + *(int *)(v9 + 40), (uint64_t)v6);
  OUTLINED_FUNCTION_7_1((uint64_t)v6, 1, v7);
  if (v10)
  {
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v11 = *(int *)(v7 + 20);
    if (qword_25708B8E8 != -1)
      swift_once();
    *(_QWORD *)(v2 + v11) = qword_257090438;
    v12 = swift_retain();
    OUTLINED_FUNCTION_212(v12, &qword_25708C210);
  }
  else
  {
    sub_240C35540((uint64_t)v6, v2, type metadata accessor for Proto_LSTMWeightParams);
  }
  sub_240C35540(v2, a1, type metadata accessor for Proto_LSTMWeightParams);
  OUTLINED_FUNCTION_42();
}

void sub_240C97D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C355AC(a1, (uint64_t)v4, v5);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.weights.setter((uint64_t)v4);
}

void NeuralNetwork.Layer.UnidirectionalLSTMParameters.weights.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_32_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_81();
  sub_240C355AC(a1, v2, type metadata accessor for Proto_LSTMWeightParams);
  v5 = v1 + *(int *)(OUTLINED_FUNCTION_10_16() + 40);
  sub_240BE0B68(v5, &qword_25708C210);
  OUTLINED_FUNCTION_6_6(v2, v5);
  OUTLINED_FUNCTION_71(v5, 0);
  sub_240BE10B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters);
  OUTLINED_FUNCTION_42();
}

void (*NeuralNetwork.Layer.UnidirectionalLSTMParameters.weights.modify())()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_66();
  v2 = v1;
  v3 = malloc(0x40uLL);
  *v2 = v3;
  *v3 = v0;
  v4 = OUTLINED_FUNCTION_170();
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = OUTLINED_FUNCTION_32_11();
  v3[2] = v6;
  v3[3] = OUTLINED_FUNCTION_119();
  v7 = (char *)OUTLINED_FUNCTION_119();
  v3[4] = v7;
  type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters();
  v3[5] = OUTLINED_FUNCTION_119();
  v3[6] = OUTLINED_FUNCTION_119();
  v8 = *(int *)(OUTLINED_FUNCTION_10_16() + 40);
  *((_DWORD *)v3 + 14) = v8;
  OUTLINED_FUNCTION_96(v0 + v8, (uint64_t)v5);
  v9 = OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v11)
  {
    OUTLINED_FUNCTION_337();
    v12 = *(int *)(v6 + 20);
    if (qword_25708B8E8 != -1)
      swift_once();
    *(_QWORD *)&v7[v12] = qword_257090438;
    v13 = swift_retain();
    OUTLINED_FUNCTION_62_3(v13, &qword_25708C210);
  }
  else
  {
    OUTLINED_FUNCTION_16_14(v9, v10, type metadata accessor for Proto_LSTMWeightParams);
  }
  OUTLINED_FUNCTION_18_10(v14, v15, type metadata accessor for Proto_LSTMWeightParams);
  return sub_240C97FA8;
}

void sub_240C97FA8()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_22();
  v1 = *(void **)v0;
  v2 = *(void **)(*(_QWORD *)v0 + 40);
  v3 = *(void **)(*(_QWORD *)v0 + 48);
  v4 = *(void **)(*(_QWORD *)v0 + 24);
  v5 = *(void **)(*(_QWORD *)v0 + 32);
  v6 = *(void **)(*(_QWORD *)v0 + 8);
  v7 = **(_QWORD **)v0 + *(int *)(*(_QWORD *)v0 + 56);
  if ((v8 & 1) != 0)
  {
    OUTLINED_FUNCTION_42_9(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v2);
    sub_240C355AC((uint64_t)v2, (uint64_t)v4, type metadata accessor for Proto_LSTMWeightParams);
    sub_240BE0B68(v7, &qword_25708C210);
    sub_240C35540((uint64_t)v4, v7, type metadata accessor for Proto_LSTMWeightParams);
    OUTLINED_FUNCTION_32();
    OUTLINED_FUNCTION_27_9((uint64_t)v2);
  }
  else
  {
    OUTLINED_FUNCTION_42_9(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v4);
    sub_240BE0B68(v7, &qword_25708C210);
    sub_240C35540((uint64_t)v4, v7, type metadata accessor for Proto_LSTMWeightParams);
    OUTLINED_FUNCTION_32();
  }
  sub_240BE10B8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters);
  free(v3);
  free(v2);
  free(v5);
  free(v4);
  free(v6);
  free(v1);
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.reverseInput.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.reverseInput.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

_BYTE *(*NeuralNetwork.Layer.UnidirectionalLSTMParameters.reverseInput.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 24);
  return sub_240C980F4;
}

_BYTE *sub_240C980F4(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 24) = result[8];
  return result;
}

uint64_t NeuralNetwork.Layer.UnidirectionalLSTMParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 24) = 0;
  v2 = OUTLINED_FUNCTION_10_16();
  OUTLINED_FUNCTION_52_8();
  v3 = a1 + *(int *)(v2 + 36);
  v4 = OUTLINED_FUNCTION_14_17();
  OUTLINED_FUNCTION_18_0(v3, v5, v6, v4);
  v7 = a1 + *(int *)(v2 + 40);
  v8 = OUTLINED_FUNCTION_32_11();
  return __swift_storeEnumTagSinglePayload(v7, 1, 1, v8);
}

unint64_t sub_240C98184()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D310;
  if (!qword_25708D310)
  {
    v1 = type metadata accessor for Proto_UniDirectionalLSTMLayerParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4D2F4, v1);
    atomic_store(result, (unint64_t *)&qword_25708D310);
  }
  return result;
}

void sub_240C981C4()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnidirectionalLSTMParameters.inputSize.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C981E4(uint64_t *a1)
{
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.inputSize.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C98204()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnidirectionalLSTMParameters.outputSize.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C98224(uint64_t *a1)
{
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.outputSize.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C98244()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnidirectionalLSTMParameters.activations.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C98268()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.getter();
  OUTLINED_FUNCTION_33_11(v0);
  OUTLINED_FUNCTION_44();
}

void sub_240C98288(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_36_11(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.sequenceOutput.setter();
  OUTLINED_FUNCTION_44();
}

void sub_240C982A4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.getter();
  OUTLINED_FUNCTION_33_11(v0);
  OUTLINED_FUNCTION_44();
}

void sub_240C982C4(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_36_11(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasBias.setter();
  OUTLINED_FUNCTION_44();
}

void sub_240C982E0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.getter();
  OUTLINED_FUNCTION_33_11(v0);
  OUTLINED_FUNCTION_44();
}

void sub_240C98300(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_36_11(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasForgetBias.setter();
  OUTLINED_FUNCTION_44();
}

void sub_240C9831C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.getter();
  OUTLINED_FUNCTION_33_11(v0);
  OUTLINED_FUNCTION_44();
}

void sub_240C9833C(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_36_11(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.hasPeepholeConnections.setter();
  OUTLINED_FUNCTION_44();
}

void sub_240C98358()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.getter();
  OUTLINED_FUNCTION_33_11(v0);
  OUTLINED_FUNCTION_44();
}

void sub_240C98378(unsigned __int8 *a1)
{
  OUTLINED_FUNCTION_36_11(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.coupledInputAndForgetGate.setter();
  OUTLINED_FUNCTION_44();
}

void sub_240C98394()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C983B4(float *a1)
{
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.cellClipThreshold.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C983D4(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.weights.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C983F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_103();
  v0 = NeuralNetwork.Layer.UnidirectionalLSTMParameters.reverseInput.getter();
  OUTLINED_FUNCTION_33_11(v0);
  OUTLINED_FUNCTION_44();
}

void sub_240C98414(unsigned __int8 *a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_36_11(a1);
  NeuralNetwork.Layer.UnidirectionalLSTMParameters.reverseInput.setter(v1);
  OUTLINED_FUNCTION_44();
}

uint64_t _s28UnidirectionalLSTMParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _DWORD *v13;
  _DWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = *(int *)(v4 + 32);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(v6 + 36);
    v13 = (_DWORD *)(a1 + v12);
    v14 = (_DWORD *)((char *)a2 + v12);
    v15 = type metadata accessor for Proto_LSTMParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      *v13 = *v14;
      *((_BYTE *)v13 + 4) = *((_BYTE *)v14 + 4);
      v13[2] = v14[2];
      v11((uint64_t)v13 + *(int *)(v15 + 40), (uint64_t)v14 + *(int *)(v15 + 40), v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v18 = *(int *)(v6 + 40);
    v19 = (char *)(a1 + v18);
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Proto_LSTMWeightParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v11((uint64_t)v19, (uint64_t)v20, v10);
      *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t _s28UnidirectionalLSTMParametersVwxx(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
  v3 = a1 + v2[8];
  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = a1 + v2[9];
  v7 = type metadata accessor for Proto_LSTMParams(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    v5(v6 + *(int *)(v7 + 40), v4);
  v8 = a1 + v2[10];
  v9 = type metadata accessor for Proto_LSTMWeightParams(0);
  result = __swift_getEnumTagSinglePayload(v8, 1, v9);
  if (!(_DWORD)result)
  {
    v5(v8, v4);
    return swift_release();
  }
  return result;
}

uint64_t _s28UnidirectionalLSTMParametersVwcp(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
  v5 = v4[8];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = v4[9];
  v11 = (_DWORD *)(a1 + v10);
  v12 = (_DWORD *)(a2 + v10);
  v13 = type metadata accessor for Proto_LSTMParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *((_BYTE *)v11 + 4) = *((_BYTE *)v12 + 4);
    v11[2] = v12[2];
    v9((uint64_t)v11 + *(int *)(v13 + 40), (uint64_t)v12 + *(int *)(v13 + 40), v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v15 = v4[10];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for Proto_LSTMWeightParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v16, (uint64_t)v17, v8);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  return a1;
}

uint64_t _s28UnidirectionalLSTMParametersVwca(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
  v5 = v4[8];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = v4[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Proto_LSTMParams(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
      *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
      *(_BYTE *)(v12 + 3) = *(_BYTE *)(v13 + 3);
      *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
      __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_240BE10B8(v12, type metadata accessor for Proto_LSTMParams);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
  *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
  *(_BYTE *)(v12 + 3) = *(_BYTE *)(v13 + 3);
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
  v10(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
LABEL_7:
  v18 = v4[10];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = type metadata accessor for Proto_LSTMWeightParams(0);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      v10((uint64_t)v19, (uint64_t)v20, v8);
      *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_240BE10B8((uint64_t)v19, type metadata accessor for Proto_LSTMWeightParams);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v19, v20, v8);
  *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  return a1;
}

uint64_t _s28UnidirectionalLSTMParametersVwtk(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _DWORD *v11;
  _DWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
  v5 = v4[8];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = v4[9];
  v11 = (_DWORD *)(a1 + v10);
  v12 = (_DWORD *)(a2 + v10);
  v13 = type metadata accessor for Proto_LSTMParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *((_BYTE *)v11 + 4) = *((_BYTE *)v12 + 4);
    v11[2] = v12[2];
    v9((uint64_t)v11 + *(int *)(v13 + 40), (uint64_t)v12 + *(int *)(v13 + 40), v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v15 = v4[10];
  v16 = (char *)(a1 + v15);
  v17 = (char *)(a2 + v15);
  v18 = type metadata accessor for Proto_LSTMWeightParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v16, (uint64_t)v17, v8);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  return a1;
}

uint64_t _s28UnidirectionalLSTMParametersVwta(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
  v5 = v4[8];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = v4[9];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Proto_LSTMParams(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *(_DWORD *)v12 = *(_DWORD *)v13;
      *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
      __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_240BE10B8(v12, type metadata accessor for Proto_LSTMParams);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
  *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
  *(_BYTE *)(v12 + 3) = *(_BYTE *)(v13 + 3);
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
  v10(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
LABEL_7:
  v18 = v4[10];
  v19 = (char *)(a1 + v18);
  v20 = (char *)(a2 + v18);
  v21 = type metadata accessor for Proto_LSTMWeightParams(0);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      v10((uint64_t)v19, (uint64_t)v20, v8);
      *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
      swift_release();
      return a1;
    }
    sub_240BE10B8((uint64_t)v19, type metadata accessor for Proto_LSTMWeightParams);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v19, v20, v8);
  *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  return a1;
}

uint64_t _s28UnidirectionalLSTMParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C98F84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_10_16();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s28UnidirectionalLSTMParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C98FC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_10_16();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.UnidirectionalLSTMParameters()
{
  uint64_t result;

  result = qword_25708D318;
  if (!qword_25708D318)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C9902C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_UniDirectionalLSTMLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_20()
{
  return type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_3_22()
{
  return type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_4_16()
{
  return type metadata accessor for Proto_LSTMParams(0);
}

uint64_t OUTLINED_FUNCTION_6_15()
{
  return type metadata accessor for Proto_LSTMParams(0);
}

void OUTLINED_FUNCTION_7_17(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_240C02F94(v2 + *(int *)(a1 + 36), v1, v3);
}

void OUTLINED_FUNCTION_8_18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;

  sub_240C02F94(v1 + *(int *)(a1 + 36), v2, v3);
}

uint64_t OUTLINED_FUNCTION_9_15()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 8) = 0;
  *(_DWORD *)v0 = 0;
  *(_BYTE *)(v0 + 4) = 0;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_10_16()
{
  return type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_11_21()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_14_17()
{
  return type metadata accessor for Proto_LSTMParams(0);
}

void OUTLINED_FUNCTION_16_14(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v3, v4, a3);
}

void OUTLINED_FUNCTION_17_17(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v3, v4, a3);
}

void OUTLINED_FUNCTION_18_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_32_11()
{
  return type metadata accessor for Proto_LSTMWeightParams(0);
}

uint64_t OUTLINED_FUNCTION_33_11(uint64_t result)
{
  _BYTE *v1;

  *v1 = result & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_36_11(unsigned __int8 *a1)
{
  return *a1;
}

uint64_t OUTLINED_FUNCTION_39_7()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_42_9(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_43_9(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t OUTLINED_FUNCTION_47_10(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 8) = result & 1;
  return result;
}

void OUTLINED_FUNCTION_49_8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_52_8()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_53_9(uint64_t a1)
{
  return sub_240C96764(a1);
}

uint64_t WordTaggerConfiguration.revision.getter()
{
  unsigned int *v0;

  return *v0;
}

unint64_t WordTaggerConfiguration.revision.setter(unint64_t result)
{
  _DWORD *v1;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (!HIDWORD(result))
  {
    *v1 = result;
    return result;
  }
  __break(1u);
  return result;
}

unint64_t *(*WordTaggerConfiguration.revision.modify(_QWORD *a1))(unint64_t *result, char a2)
{
  unsigned int *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C99248;
}

unint64_t *sub_240C99248(unint64_t *result, char a2)
{
  unint64_t v2;

  v2 = *result;
  if ((a2 & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) != 0)
    {
      __break(1u);
      goto LABEL_9;
    }
    if (!HIDWORD(v2))
    {
LABEL_7:
      *(_DWORD *)result[1] = v2;
      return result;
    }
    __break(1u);
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if (!HIDWORD(v2))
    goto LABEL_7;
LABEL_10:
  __break(1u);
  return result;
}

void WordTaggerConfiguration.language.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C992A4()
{
  swift_bridgeObjectRetain();
  WordTaggerConfiguration.language.setter();
}

void WordTaggerConfiguration.language.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  *(_QWORD *)(v1 + 16) = v0;
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.language.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  v3 = *(_QWORD *)(v2 + 16);
  *v1 = *(_QWORD *)(v2 + 8);
  v1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C99338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_21_12();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 8) = v2;
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 8) = v2;
    *(_QWORD *)(v1 + 16) = v0;
    OUTLINED_FUNCTION_156();
  }
}

void WordTaggerConfiguration.tokensOutputFeatureName.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C9939C()
{
  swift_bridgeObjectRetain();
  WordTaggerConfiguration.tokensOutputFeatureName.setter();
}

void WordTaggerConfiguration.tokensOutputFeatureName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  *(_QWORD *)(v1 + 32) = v0;
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.tokensOutputFeatureName.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  v3 = *(_QWORD *)(v2 + 32);
  *v1 = *(_QWORD *)(v2 + 24);
  v1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C99430()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_21_12();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 24) = v2;
    *(_QWORD *)(v1 + 32) = v0;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 24) = v2;
    *(_QWORD *)(v1 + 32) = v0;
    OUTLINED_FUNCTION_156();
  }
}

void WordTaggerConfiguration.tokenTagsOutputFeatureName.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C99494()
{
  swift_bridgeObjectRetain();
  WordTaggerConfiguration.tokenTagsOutputFeatureName.setter();
}

void WordTaggerConfiguration.tokenTagsOutputFeatureName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 40) = v2;
  *(_QWORD *)(v1 + 48) = v0;
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.tokenTagsOutputFeatureName.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  v3 = *(_QWORD *)(v2 + 48);
  *v1 = *(_QWORD *)(v2 + 40);
  v1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C99528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_21_12();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 40) = v2;
    *(_QWORD *)(v1 + 48) = v0;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 40) = v2;
    *(_QWORD *)(v1 + 48) = v0;
    OUTLINED_FUNCTION_156();
  }
}

void WordTaggerConfiguration.tokenLocationsOutputFeatureName.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C9958C()
{
  swift_bridgeObjectRetain();
  WordTaggerConfiguration.tokenLocationsOutputFeatureName.setter();
}

void WordTaggerConfiguration.tokenLocationsOutputFeatureName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 56) = v2;
  *(_QWORD *)(v1 + 64) = v0;
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.tokenLocationsOutputFeatureName.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  v3 = *(_QWORD *)(v2 + 64);
  *v1 = *(_QWORD *)(v2 + 56);
  v1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C99620()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_21_12();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 56) = v2;
    *(_QWORD *)(v1 + 64) = v0;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 56) = v2;
    *(_QWORD *)(v1 + 64) = v0;
    OUTLINED_FUNCTION_156();
  }
}

void WordTaggerConfiguration.tokenLengthsOutputFeatureName.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C99684()
{
  swift_bridgeObjectRetain();
  WordTaggerConfiguration.tokenLengthsOutputFeatureName.setter();
}

void WordTaggerConfiguration.tokenLengthsOutputFeatureName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 72) = v2;
  *(_QWORD *)(v1 + 80) = v0;
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.tokenLengthsOutputFeatureName.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  v3 = *(_QWORD *)(v2 + 80);
  *v1 = *(_QWORD *)(v2 + 72);
  v1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C99718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  OUTLINED_FUNCTION_21_12();
  if ((v3 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 72) = v2;
    *(_QWORD *)(v1 + 80) = v0;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v1 + 72) = v2;
    *(_QWORD *)(v1 + 80) = v0;
    OUTLINED_FUNCTION_156();
  }
}

void WordTaggerConfiguration.modelParameterData.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_11_4();
  sub_240BF5610(v0, v1);
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C99780(uint64_t a1)
{
  sub_240BF5610(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  WordTaggerConfiguration.modelParameterData.setter();
}

void WordTaggerConfiguration.modelParameterData.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  sub_240BF6AE0(*(_QWORD *)(v1 + 88), *(_QWORD *)(v1 + 96));
  *(_QWORD *)(v1 + 88) = v2;
  *(_QWORD *)(v1 + 96) = v0;
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.modelParameterData.modify(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  OUTLINED_FUNCTION_390(a1);
  v3 = *(_QWORD *)(v2 + 88);
  v4 = *(_QWORD *)(v2 + 96);
  *v1 = v3;
  v1[1] = v4;
  sub_240BF5610(v3, v4);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C99818(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_11_2();
    sub_240BF5610(v5, v6);
    OUTLINED_FUNCTION_6_9();
    *(_QWORD *)(v3 + 88) = v4;
    *(_QWORD *)(v3 + 96) = v2;
    v7 = OUTLINED_FUNCTION_11_2();
    return sub_240BF6AE0(v7, v8);
  }
  else
  {
    result = OUTLINED_FUNCTION_6_9();
    *(_QWORD *)(v3 + 88) = v4;
    *(_QWORD *)(v3 + 96) = v2;
  }
  return result;
}

void WordTaggerConfiguration.tags.getter(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = (uint64_t *)(v4 - v3);
  v6 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_0();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24_1();
  v15 = v14 - v13;
  v16 = OUTLINED_FUNCTION_5_22();
  OUTLINED_FUNCTION_41_7(*(int *)(v16 + 44));
  if (__swift_getEnumTagSinglePayload(v15, 1, v6) == 1)
  {
    v17 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_26_7();
    OUTLINED_FUNCTION_23_8();
    OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_91_1((uint64_t)v10, (uint64_t)v5);
    v17 = *v5;
    OUTLINED_FUNCTION_329();
    OUTLINED_FUNCTION_34_8();
    OUTLINED_FUNCTION_36_12();
  }
  *a1 = v17;
}

void sub_240C999D0(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  WordTaggerConfiguration.tags.setter(&v1);
}

void WordTaggerConfiguration.tags.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  v4 = *a1;
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_337();
  *v1 = v4;
  swift_bridgeObjectRelease();
  v5 = OUTLINED_FUNCTION_8_19();
  v8 = OUTLINED_FUNCTION_4_17((uint64_t)v1, v6, v7, v5);
  OUTLINED_FUNCTION_28_7(v8);
  OUTLINED_FUNCTION_156();
}

void (*WordTaggerConfiguration.tags.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[1] = v1;
  v4 = OUTLINED_FUNCTION_48_4();
  v3[2] = v4;
  v5 = (uint64_t *)OUTLINED_FUNCTION_17_5(v4);
  v3[3] = v5;
  v6 = OUTLINED_FUNCTION_8_19();
  v3[4] = v6;
  v7 = OUTLINED_FUNCTION_119();
  v3[5] = v7;
  v3[6] = OUTLINED_FUNCTION_119();
  v3[7] = OUTLINED_FUNCTION_119();
  v8 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0) - 8) + 64);
  v3[8] = malloc(v8);
  v9 = malloc(v8);
  v3[9] = v9;
  v10 = *(int *)(OUTLINED_FUNCTION_5_22() + 44);
  *((_DWORD *)v3 + 20) = v10;
  OUTLINED_FUNCTION_41_7(v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6) == 1)
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_26_7();
    OUTLINED_FUNCTION_23_8();
    OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_91_1((uint64_t)v7, (uint64_t)v5);
    v11 = *v5;
    OUTLINED_FUNCTION_329();
    OUTLINED_FUNCTION_34_8();
    OUTLINED_FUNCTION_36_12();
  }
  *v3 = v11;
  return sub_240C99BC0;
}

void sub_240C99BC0(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  OUTLINED_FUNCTION_213();
  v5 = (void *)v3[9];
  v6 = (void *)v3[6];
  v7 = (void *)v3[7];
  v8 = (void *)v3[3];
  v9 = (void *)v3[5];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_213();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_31_8();
    OUTLINED_FUNCTION_14_18();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_31_8();
    OUTLINED_FUNCTION_14_18();
  }
  free(v5);
  free(v4);
  free(v7);
  free(v6);
  free(v9);
  free(v8);
  free(v3);
}

uint64_t WordTaggerConfiguration.stringTags.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = (uint64_t *)(v4 - v3);
  v6 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_0();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v20 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_48();
  v17 = OUTLINED_FUNCTION_5_22();
  sub_240C9A3B4(v0 + *(int *)(v17 + 44), v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v6) == 1)
    return MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_91_1(v1, (uint64_t)v15);
  sub_240BE0BF4((uint64_t)v15, (uint64_t)v13, type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags);
  OUTLINED_FUNCTION_91_1((uint64_t)v13, (uint64_t)v10);
  sub_240BE0B90((uint64_t)v10, (uint64_t)v5, type metadata accessor for Proto_StringVector);
  v18 = *v5;
  OUTLINED_FUNCTION_329();
  sub_240BE27A0((uint64_t)v5, type metadata accessor for Proto_StringVector);
  sub_240BE27A0((uint64_t)v15, type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags);
  return v18;
}

void sub_240C99E24()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  WordTaggerConfiguration.stringTags.setter(v0);
}

void WordTaggerConfiguration.stringTags.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_48_4();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v1 = a1;
  v4 = OUTLINED_FUNCTION_8_19();
  v7 = OUTLINED_FUNCTION_4_17((uint64_t)v1, v5, v6, v4);
  OUTLINED_FUNCTION_28_7(v7);
  OUTLINED_FUNCTION_156();
}

void WordTaggerConfiguration.stringTags.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  a1[2] = (uint64_t)OUTLINED_FUNCTION_17_5(v3);
  *a1 = WordTaggerConfiguration.stringTags.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C99EF8(uint64_t *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  OUTLINED_FUNCTION_48_4();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_337();
    *v3 = v4;
    v5 = OUTLINED_FUNCTION_8_19();
    v8 = OUTLINED_FUNCTION_4_17((uint64_t)v3, v6, v7, v5);
    OUTLINED_FUNCTION_27_10(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_337();
    *v3 = v4;
    v9 = OUTLINED_FUNCTION_8_19();
    v12 = OUTLINED_FUNCTION_4_17((uint64_t)v3, v10, v11, v9);
    OUTLINED_FUNCTION_27_10(v12);
  }
  free(v3);
}

void WordTaggerConfiguration.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_QWORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = 0xE000000000000000;
  *(_QWORD *)(a1 + 40) = 0;
  *(_QWORD *)(a1 + 48) = 0xE000000000000000;
  *(_QWORD *)(a1 + 56) = 0;
  *(_QWORD *)(a1 + 64) = 0xE000000000000000;
  *(_QWORD *)(a1 + 72) = 0;
  *(_QWORD *)(a1 + 80) = 0xE000000000000000;
  *(_OWORD *)(a1 + 88) = xmmword_240F1FDE0;
  v1 = a1 + *(int *)(OUTLINED_FUNCTION_5_22() + 44);
  v2 = OUTLINED_FUNCTION_8_19();
  OUTLINED_FUNCTION_18_0(v1, v3, v4, v2);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_156();
}

uint64_t WordTaggerConfiguration.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v2 = sub_240F1CF90();
  v30 = *(_QWORD *)(v2 - 8);
  v31 = v2;
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0();
  v29 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  v28 = v5;
  type metadata accessor for WordTaggerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4((uint64_t)v0, v1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240F234D0;
  *(_QWORD *)(v8 + 32) = 0x6E6F697369766572;
  *(_QWORD *)(v8 + 40) = 0xE800000000000000;
  v9 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v8 + 48) = *(unsigned int *)v0;
  *(_QWORD *)(v8 + 72) = v9;
  *(_QWORD *)(v8 + 80) = 0x65676175676E616CLL;
  v11 = v0[1];
  v10 = v0[2];
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v8 + 88) = 0xE800000000000000;
  *(_QWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 104) = v10;
  *(_QWORD *)(v8 + 120) = v12;
  *(_QWORD *)(v8 + 128) = 0xD000000000000017;
  v13 = v0[3];
  v14 = v0[4];
  *(_QWORD *)(v8 + 136) = 0x8000000240F52820;
  *(_QWORD *)(v8 + 144) = v13;
  *(_QWORD *)(v8 + 152) = v14;
  *(_QWORD *)(v8 + 168) = v12;
  *(_QWORD *)(v8 + 176) = 0xD00000000000001ALL;
  v15 = v0[5];
  v16 = v0[6];
  *(_QWORD *)(v8 + 184) = 0x8000000240F52840;
  *(_QWORD *)(v8 + 192) = v15;
  *(_QWORD *)(v8 + 200) = v16;
  *(_QWORD *)(v8 + 216) = v12;
  *(_QWORD *)(v8 + 224) = 0xD00000000000001FLL;
  v17 = v0[7];
  v18 = v0[8];
  *(_QWORD *)(v8 + 232) = 0x8000000240F52860;
  *(_QWORD *)(v8 + 240) = v17;
  *(_QWORD *)(v8 + 248) = v18;
  *(_QWORD *)(v8 + 264) = v12;
  *(_QWORD *)(v8 + 272) = 0xD00000000000001DLL;
  v19 = v0[9];
  v20 = v0[10];
  *(_QWORD *)(v8 + 280) = 0x8000000240F52880;
  *(_QWORD *)(v8 + 288) = v19;
  *(_QWORD *)(v8 + 296) = v20;
  *(_QWORD *)(v8 + 312) = v12;
  *(_QWORD *)(v8 + 320) = 0xD000000000000012;
  v22 = v0[11];
  v21 = v0[12];
  v23 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(v8 + 328) = 0x8000000240F528A0;
  *(_QWORD *)(v8 + 336) = v22;
  *(_QWORD *)(v8 + 344) = v21;
  *(_QWORD *)(v8 + 360) = v23;
  *(_QWORD *)(v8 + 368) = 1936154996;
  *(_QWORD *)(v8 + 376) = 0xE400000000000000;
  *(_QWORD *)(v8 + 408) = &type metadata for WordTaggerConfiguration.Tags;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_213();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  sub_240BF5610(v22, v21);
  WordTaggerConfiguration.tags.getter((_QWORD *)(v8 + 384));
  v24 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v28, v25, v26, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v30 + 104))(v29, *MEMORY[0x24BEE43C0], v31);
  return sub_240F1CFA8();
}

void WordTaggerConfiguration.Tags.hash(into:)()
{
  sub_240F1CF48();
  sub_240C7C018();
}

void static WordTaggerConfiguration.Tags.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  sub_240BEAC24(*a1, *a2);
}

uint64_t WordTaggerConfiguration.Tags.hashValue.getter()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  sub_240C7C018();
  return sub_240F1CF78();
}

uint64_t sub_240C9A364()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  sub_240C7C018();
  return sub_240F1CF78();
}

uint64_t sub_240C9A3B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C9A3FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for WordTaggerConfiguration()
{
  uint64_t result;

  result = qword_25435FF70;
  if (!qword_25435FF70)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240C9A480()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D328;
  if (!qword_25708D328)
  {
    v1 = type metadata accessor for Proto_CoreMLModels_WordTagger(255);
    result = MEMORY[0x24268C2AC](&unk_240F39834, v1);
    atomic_store(result, (unint64_t *)&qword_25708D328);
  }
  return result;
}

unint64_t sub_240C9A4C4()
{
  unint64_t result;

  result = qword_25708D330;
  if (!qword_25708D330)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for WordTaggerConfiguration.Tags, &type metadata for WordTaggerConfiguration.Tags);
    atomic_store(result, (unint64_t *)&qword_25708D330);
  }
  return result;
}

void sub_240C9A500()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = WordTaggerConfiguration.revision.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C9A520(unint64_t *a1)
{
  WordTaggerConfiguration.revision.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C9A540()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  WordTaggerConfiguration.language.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9A564()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  WordTaggerConfiguration.tokensOutputFeatureName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9A588()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  WordTaggerConfiguration.tokenTagsOutputFeatureName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9A5AC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  WordTaggerConfiguration.tokenLocationsOutputFeatureName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9A5D0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  WordTaggerConfiguration.tokenLengthsOutputFeatureName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9A5F4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  WordTaggerConfiguration.modelParameterData.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9A618(_QWORD *a1@<X8>)
{
  WordTaggerConfiguration.tags.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C9A638()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = WordTaggerConfiguration.stringTags.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for WordTaggerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v4 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = a2[6];
    a1[5] = a2[5];
    a1[6] = v9;
    v10 = a2[8];
    a1[7] = a2[7];
    a1[8] = v10;
    v11 = a2[10];
    a1[9] = a2[9];
    a1[10] = v11;
    v12 = a2[11];
    v13 = a2[12];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_240BF5610(v12, v13);
    a1[11] = v12;
    a1[12] = v13;
    v14 = *(int *)(v6 + 44);
    v15 = (uint64_t *)((char *)a1 + v14);
    v16 = (uint64_t *)((char *)a2 + v14);
    v17 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      *v15 = *v16;
      v20 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v21 = (char *)v15 + v20;
      v22 = (char *)v16 + v20;
      v23 = sub_240F1C930();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v21, v22, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
    v25 = *(int *)(v6 + 48);
    v26 = (char *)a1 + v25;
    v27 = (char *)a2 + v25;
    v28 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return a1;
}

uint64_t destroy for WordTaggerConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_240BF6AE0(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
  v2 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
  v3 = a1 + *(int *)(v2 + 44);
  v4 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = v3 + *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(v2 + 48);
  v8 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for WordTaggerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  v9 = *(_QWORD *)(a2 + 88);
  v10 = *(_QWORD *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_240BF5610(v9, v10);
  *(_QWORD *)(a1 + 88) = v9;
  *(_QWORD *)(a1 + 96) = v10;
  v11 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
  v12 = *(int *)(v11 + 44);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    *v13 = *v14;
    v17 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v18 = (char *)v13 + v17;
    v19 = (char *)v14 + v17;
    v20 = sub_240F1C930();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  v22 = *(int *)(v11 + 48);
  v23 = a1 + v22;
  v24 = a2 + v22;
  v25 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  return a1;
}

uint64_t assignWithCopy for WordTaggerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = *(_QWORD *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 88);
  v5 = *(_QWORD *)(a2 + 96);
  sub_240BF5610(v4, v5);
  v6 = *(_QWORD *)(a1 + 88);
  v7 = *(_QWORD *)(a1 + 96);
  *(_QWORD *)(a1 + 88) = v4;
  *(_QWORD *)(a1 + 96) = v5;
  sub_240BF6AE0(v6, v7);
  v8 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
  v9 = *(int *)(v8 + 44);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      *v10 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      v29 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240BE27A0((uint64_t)v10, type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *v10 = *v11;
  v15 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
  v16 = (char *)v10 + v15;
  v17 = (char *)v11 + v15;
  v18 = sub_240F1C930();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
LABEL_7:
  v21 = *(int *)(v8 + 48);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for WordTaggerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  v4 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
  v5 = *(int *)(v4 + 44);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    v10 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v11 = (char *)v6 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v14 = *(int *)(v4 + 48);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for WordTaggerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 64);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_QWORD *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v8;
  swift_bridgeObjectRelease();
  v9 = *(_QWORD *)(a1 + 88);
  v10 = *(_QWORD *)(a1 + 96);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  sub_240BF6AE0(v9, v10);
  v11 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
  v12 = *(int *)(v11 + 44);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  v17 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!EnumTagSinglePayload)
  {
    if (!v17)
    {
      *v13 = *v14;
      swift_bridgeObjectRelease();
      v28 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v29 = (char *)v13 + v28;
      v30 = (char *)v14 + v28;
      v31 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
      goto LABEL_7;
    }
    sub_240BE27A0((uint64_t)v13, type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags);
    goto LABEL_6;
  }
  if (v17)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF0);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  *v13 = *v14;
  v18 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
  v19 = (char *)v13 + v18;
  v20 = (char *)v14 + v18;
  v21 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
LABEL_7:
  v23 = *(int *)(v11 + 48);
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t getEnumTagSinglePayload for WordTaggerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9B030(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_22();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for WordTaggerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9B06C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_22();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C9B0A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_CoreMLModels_WordTagger(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for WordTaggerConfiguration.Tags(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for WordTaggerConfiguration.Tags(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *__swift_memcpy8_8(_QWORD *result, _QWORD *a2)
{
  *result = *a2;
  return result;
}

_QWORD *assignWithTake for WordTaggerConfiguration.Tags(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WordTaggerConfiguration.Tags(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 8))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WordTaggerConfiguration.Tags(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 8) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WordTaggerConfiguration.Tags()
{
  return &type metadata for WordTaggerConfiguration.Tags;
}

uint64_t OUTLINED_FUNCTION_4_17(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 0, 1, a4);
  return type metadata accessor for Proto_CoreMLModels_WordTagger(0);
}

uint64_t OUTLINED_FUNCTION_5_22()
{
  return type metadata accessor for Proto_CoreMLModels_WordTagger(0);
}

uint64_t OUTLINED_FUNCTION_8_19()
{
  return type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
}

uint64_t OUTLINED_FUNCTION_14_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  return sub_240C9A3FC(v0, v1);
}

void OUTLINED_FUNCTION_23_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(v0, v1, v2);
}

void OUTLINED_FUNCTION_25_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(v1, v0, v2);
}

void OUTLINED_FUNCTION_26_7()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BE0B90(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_27_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_240C9A3FC(v1, v2 + *(int *)(a1 + 44));
}

uint64_t OUTLINED_FUNCTION_28_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_240C9A3FC(v2, v1 + *(int *)(a1 + 44));
}

uint64_t OUTLINED_FUNCTION_31_8()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_34_8()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE27A0(v0, v1);
}

void OUTLINED_FUNCTION_36_12()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE27A0(v0, v1);
}

uint64_t OUTLINED_FUNCTION_41_7@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_240C9A3B4(v1 + a1, v2);
}

uint64_t sub_240C9B318(uint64_t a1, uint64_t a2, uint64_t (*a3)(BOOL, unint64_t, uint64_t), uint64_t (*a4)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  int v9;
  unint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v21;
  uint64_t v22;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (!v4)
    return v5;
  v22 = MEMORY[0x24BEE4AF8];
  a3(0, v4, 0);
  v5 = v22;
  result = a4(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    v10 = result;
    if (result < 1 << *(_BYTE *)(a1 + 32))
    {
      v11 = v9;
      v12 = a1 + 64;
      while ((*(_QWORD *)(v12 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
      {
        if (v11 != *(_DWORD *)(a1 + 36))
          goto LABEL_18;
        v21 = v4;
        v13 = *(_QWORD *)(*(_QWORD *)(a1 + 48) + 8 * v10);
        v14 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v10);
        v16 = *(_QWORD *)(v22 + 16);
        v15 = *(_QWORD *)(v22 + 24);
        if (v16 >= v15 >> 1)
        {
          v19 = v12;
          result = a3(v15 > 1, v16 + 1, 1);
          v12 = v19;
        }
        *(_QWORD *)(v22 + 16) = v16 + 1;
        v17 = v22 + 16 * v16;
        *(_QWORD *)(v17 + 32) = v13;
        *(_QWORD *)(v17 + 40) = v14;
        if ((uint64_t)v10 >= -(-1 << *(_BYTE *)(a1 + 32)))
          goto LABEL_19;
        if ((*(_QWORD *)(v12 + 8 * (v10 >> 6)) & (1 << v10)) == 0)
          goto LABEL_20;
        if (v11 != *(_DWORD *)(a1 + 36))
          goto LABEL_21;
        v18 = v12;
        result = sub_240F1CDC8();
        v4 = v21 - 1;
        if (v21 == 1)
          return v5;
        v10 = result;
        if ((result & 0x8000000000000000) == 0)
        {
          v12 = v18;
          v11 = *(_DWORD *)(a1 + 36);
          if (result < 1 << *(_BYTE *)(a1 + 32))
            continue;
        }
        goto LABEL_22;
      }
      __break(1u);
LABEL_18:
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
    }
  }
LABEL_22:
  __break(1u);
  return result;
}

void ImputerConfiguration.missingValue.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_31_9();
  if (v6)
  {
    if (!v4)
    {
      *(_QWORD *)a1 = 0;
      *(_QWORD *)(a1 + 8) = 0;
      *(_BYTE *)(a1 + 16) = -1;
      OUTLINED_FUNCTION_156();
      return;
    }
    sub_240C9B54C(v2, v1, 2);
    OUTLINED_FUNCTION_329();
    v5 = v1;
  }
  v7 = OUTLINED_FUNCTION_19_11(v5);
  sub_240C5177C(v7, v8, v9);
}

uint64_t sub_240C9B54C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_240C02F64(a1, a2, a3);
  return a1;
}

double sub_240C9B560@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  ImputerConfiguration.missingValue.getter((uint64_t)&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

void sub_240C9B5A0(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3[2];
  char v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v3[0] = *(_QWORD *)a1;
  v3[1] = v1;
  v4 = v2;
  sub_240C9B54C(v3[0], v1, v2);
  ImputerConfiguration.missingValue.setter(v3);
}

void ImputerConfiguration.missingValue.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *a1;
  v3 = *((unsigned __int8 *)a1 + 16);
  if (!*((_BYTE *)a1 + 16) || v3 == 1)
    goto LABEL_6;
  if (v3 != 2)
  {
    v2 = 0;
LABEL_6:
    v4 = 0;
    goto LABEL_7;
  }
  v4 = a1[1];
LABEL_7:
  v5 = v1 + *(int *)(OUTLINED_FUNCTION_10_17() + 20);
  OUTLINED_FUNCTION_38_8();
  *(_QWORD *)v5 = v2;
  *(_QWORD *)(v5 + 8) = v4;
  *(_BYTE *)(v5 + 16) = v3;
  OUTLINED_FUNCTION_156();
}

void (*ImputerConfiguration.missingValue.modify(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  char v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;

  *(_QWORD *)(a1 + 24) = v1;
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(OUTLINED_FUNCTION_10_17() + 20);
  OUTLINED_FUNCTION_31_9();
  if (!v6)
    goto LABEL_6;
  if (v4)
  {
    sub_240C9B54C(v2, v1, 2);
    OUTLINED_FUNCTION_329();
    v5 = v1;
LABEL_6:
    v7 = OUTLINED_FUNCTION_19_11(v5);
    sub_240C5177C(v7, v8, v9);
    return sub_240C9B6C0;
  }
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_BYTE *)(a1 + 16) = -1;
  return sub_240C9B6C0;
}

void sub_240C9B6C0(uint64_t a1, char a2)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = *(_QWORD *)a1;
  if ((a2 & 1) != 0)
  {
    v4 = *(unsigned __int8 *)(a1 + 16);
    if (!*(_BYTE *)(a1 + 16) || v4 == 1)
    {
      v5 = 0;
    }
    else
    {
      if (v4 != 2)
      {
        v8 = 0;
        v5 = 0;
        goto LABEL_13;
      }
      v5 = *(_QWORD *)(a1 + 8);
      sub_240C02F64(*(_QWORD *)a1, v5, 2);
    }
    v8 = v3;
LABEL_13:
    v9 = *(_QWORD *)(a1 + 24) + *(int *)(a1 + 20);
    sub_240C5177C(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), *(_BYTE *)(v9 + 16));
    *(_QWORD *)v9 = v8;
    *(_QWORD *)(v9 + 8) = v5;
    *(_BYTE *)(v9 + 16) = v4;
    sub_240C5177C(v3, *(_QWORD *)(a1 + 8), v4);
    return;
  }
  v6 = *(unsigned __int8 *)(a1 + 16);
  if (!*(_BYTE *)(a1 + 16) || v6 == 1)
    goto LABEL_15;
  if (v6 != 2)
  {
    v3 = 0;
LABEL_15:
    v7 = 0;
    goto LABEL_16;
  }
  v7 = *(_QWORD *)(a1 + 8);
LABEL_16:
  v10 = *(_QWORD *)(a1 + 24) + *(int *)(a1 + 20);
  OUTLINED_FUNCTION_38_8();
  *(_QWORD *)v10 = v3;
  *(_QWORD *)(v10 + 8) = v7;
  *(_BYTE *)(v10 + 16) = v6;
  OUTLINED_FUNCTION_42();
}

void ImputerConfiguration.imputedValue.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;
  uint64_t v14;
  _OWORD v15[2];
  char v16;

  v3 = OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)v15 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_35_9();
  if (__swift_getEnumTagSinglePayload(v1, 1, v3) == 1)
  {
    v11 = 0;
    v12 = 0uLL;
  }
  else
  {
    sub_240BE0B90(v1, (uint64_t)v9, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v13 = OUTLINED_FUNCTION_50_0();
    sub_240BE0BF4(v13, v14, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240C9BA1C((uint64_t)v7);
    v15[0] = v15[1];
    v11 = v16;
    sub_240BE27A0((uint64_t)v9, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v12 = v15[0];
  }
  *(_OWORD *)a1 = v12;
  *(_BYTE *)(a1 + 16) = v11;
  OUTLINED_FUNCTION_42();
}

uint64_t sub_240C9B8BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

double sub_240C9B904@<D0>(uint64_t a1@<X8>)
{
  char v2;
  double result;
  __int128 v4;
  char v5;

  ImputerConfiguration.imputedValue.getter((uint64_t)&v4);
  v2 = v5;
  result = *(double *)&v4;
  *(_OWORD *)a1 = v4;
  *(_BYTE *)(a1 + 16) = v2;
  return result;
}

void sub_240C9B944(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3[2];
  char v4;

  v1 = *(_QWORD *)(a1 + 8);
  v2 = *(_BYTE *)(a1 + 16);
  v3[0] = *(_QWORD *)a1;
  v3[1] = v1;
  v4 = v2;
  sub_240C9CB68(v3[0], v1, v2);
  ImputerConfiguration.imputedValue.setter((uint64_t)v3);
}

void ImputerConfiguration.imputedValue.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_BYTE *)(a1 + 16);
  sub_240C9BD64();
  sub_240C9BF58(v4, v5, v6);
  v7 = OUTLINED_FUNCTION_1_17();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v7);
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_42();
}

void sub_240C9BA1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  char *v10;

  type metadata accessor for Proto_Int64ToDoubleMap(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_StringToDoubleMap(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_80();
  type metadata accessor for Proto_DoubleVector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4(a1, v1, v9);
  v10 = (char *)sub_240C9BB28 + 4 * byte_240F24A80[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240C9BB28(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_7_18(a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  *(_QWORD *)v1 = *v2;
  *(_QWORD *)(v1 + 8) = 0;
  *(_BYTE *)(v1 + 16) = 0;
  OUTLINED_FUNCTION_1();
}

void sub_240C9BD64()
{
  __asm { BR              X10 }
}

uint64_t sub_240C9BDA0()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_13_14();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_240C9BEAC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  OUTLINED_FUNCTION_20_1();
  sub_240F1CC48();
  type metadata accessor for Proto_Int64ToDoubleMap(0);
  OUTLINED_FUNCTION_19_2();
  sub_240C9B318(v2, (uint64_t)&v6, (uint64_t (*)(BOOL, unint64_t, uint64_t))sub_240BF0D3C, sub_240F1A2A8);
  sub_240C9BF58(v2, v1, 6);
  sub_240D690B8();
  v4 = v3;
  OUTLINED_FUNCTION_42_2();
  *v0 = v4;
  OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_13_14();
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_240C9BF58(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_240C9BF90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void (*ImputerConfiguration.imputedValue.modify(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  void *v8;
  size_t v9;
  void *v10;
  char v11;
  __int128 v12;
  __int128 v14;
  char v15;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[3] = v2;
  v5 = OUTLINED_FUNCTION_1_17();
  v4[4] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = malloc(v6);
  v4[5] = v7;
  v8 = malloc(v6);
  v4[6] = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8) - 8) + 64);
  v4[7] = malloc(v9);
  v10 = malloc(v9);
  v4[8] = v10;
  OUTLINED_FUNCTION_35_9();
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v5) == 1)
  {
    v11 = 0;
    v12 = 0uLL;
  }
  else
  {
    sub_240BE0B90((uint64_t)v10, (uint64_t)v8, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240BE0BF4((uint64_t)v8, (uint64_t)v7, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240C9BA1C((uint64_t)v7);
    v11 = v15;
    sub_240BE27A0((uint64_t)v8, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v12 = v14;
  }
  *(_OWORD *)v4 = v12;
  *((_BYTE *)v4 + 16) = v11;
  return sub_240C9C114;
}

void sub_240C9C114(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v2 = *a1;
  v3 = **a1;
  v4 = (*a1)[1];
  v5 = *((_BYTE *)*a1 + 16);
  v6 = (void *)(*a1)[7];
  v7 = (void *)(*a1)[8];
  v8 = (void *)(*a1)[6];
  v9 = (void *)(*a1)[5];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_15_16();
    OUTLINED_FUNCTION_12_18();
    sub_240C9BF58(*v2, v2[1], *((_BYTE *)v2 + 16));
  }
  else
  {
    OUTLINED_FUNCTION_15_16();
    sub_240C9BF58(v3, v4, v5);
    OUTLINED_FUNCTION_12_18();
  }
  free(v7);
  free(v6);
  free(v8);
  free(v9);
  free(v2);
}

void ImputerConfiguration.init(missingValue:imputedValue:)(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_80();
  v8 = *a1;
  v9 = a1[1];
  v10 = *((unsigned __int8 *)a1 + 16);
  v11 = *(_QWORD *)a2;
  v12 = *(_QWORD *)(a2 + 8);
  v13 = *(_BYTE *)(a2 + 16);
  OUTLINED_FUNCTION_1_17();
  OUTLINED_FUNCTION_151_0(a3, 1);
  v14 = OUTLINED_FUNCTION_10_17();
  OUTLINED_FUNCTION_19_2();
  if (v10 == 2)
    v15 = v8;
  else
    v15 = 0;
  if (v10 == 2)
    v16 = v9;
  else
    v16 = 0;
  if (v10 == 1)
  {
    v15 = v8;
    v16 = 0;
  }
  if (!v10)
  {
    v15 = v8;
    v16 = 0;
  }
  v17 = a3 + *(int *)(v14 + 20);
  *(_QWORD *)v17 = v15;
  *(_QWORD *)(v17 + 8) = v16;
  *(_BYTE *)(v17 + 16) = v10;
  sub_240C9BD64();
  sub_240C9BF58(v11, v12, v13);
  OUTLINED_FUNCTION_151_0(v3, 0);
  OUTLINED_FUNCTION_29_10();
  OUTLINED_FUNCTION_1();
}

void ImputerConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;

  v4 = sub_240F1CF90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_60();
  type metadata accessor for ImputerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4(v0, v3, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240F1D370;
  strcpy((char *)(v9 + 32), "missingValue");
  *(_BYTE *)(v9 + 45) = 0;
  *(_WORD *)(v9 + 46) = -5120;
  *(_QWORD *)(v9 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D338);
  ImputerConfiguration.missingValue.getter(v9 + 48);
  strcpy((char *)(v9 + 80), "imputedValue");
  *(_BYTE *)(v9 + 93) = 0;
  *(_WORD *)(v9 + 94) = -5120;
  *(_QWORD *)(v9 + 120) = &type metadata for ImputerConfiguration.ImputedValue;
  ImputerConfiguration.imputedValue.getter(v9 + 96);
  v10 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v10);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for ImputerConfiguration()
{
  uint64_t result;

  result = qword_25435FCA8;
  if (!qword_25435FCA8)
    return swift_getSingletonMetadata();
  return result;
}

void ImputerConfiguration.MissingValue.hash(into:)()
{
  uint64_t v0;

  if (!*(_BYTE *)(v0 + 16))
  {
    sub_240F1CF48();
    sub_240F1CF6C();
    goto LABEL_5;
  }
  if (*(_BYTE *)(v0 + 16) == 1)
  {
    sub_240F1CF48();
    OUTLINED_FUNCTION_34_9();
LABEL_5:
    OUTLINED_FUNCTION_156();
    return;
  }
  sub_240F1CF48();
  OUTLINED_FUNCTION_14_19();
}

void static ImputerConfiguration.MissingValue.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(unsigned __int8 *)(a1 + 16);
  v4 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 8);
  v6 = *(unsigned __int8 *)(a2 + 16);
  if (!*(_BYTE *)(a1 + 16))
  {
    if (!*(_BYTE *)(a2 + 16))
    {
      v9 = OUTLINED_FUNCTION_24_10(*(_QWORD *)a1, v2, 0);
      sub_240C02F7C(v9, v10, 0);
      goto LABEL_16;
    }
    goto LABEL_14;
  }
  if (v3 == 1)
  {
    if (v6 == 1)
    {
      v7 = OUTLINED_FUNCTION_24_10(*(_QWORD *)a1, v2, 1);
      sub_240C02F7C(v7, v8, 1);
      goto LABEL_16;
    }
LABEL_14:
    sub_240C02F64(v4, v5, v6);
    v12 = OUTLINED_FUNCTION_21_13();
    v14 = OUTLINED_FUNCTION_24_10(v12, v13, v3);
    sub_240C02F7C(v14, v15, v6);
    goto LABEL_16;
  }
  if (v6 != 2)
  {
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  if (*(_QWORD *)a1 != v4 || v2 != v5)
  {
    OUTLINED_FUNCTION_21_13();
    sub_240F1CEDC();
  }
  sub_240C02F64(v4, v5, 2);
  v16 = OUTLINED_FUNCTION_9_16();
  sub_240C02F64(v16, v17, v18);
  v19 = OUTLINED_FUNCTION_9_16();
  v22 = OUTLINED_FUNCTION_24_10(v19, v20, v21);
  sub_240C02F7C(v22, v23, 2);
LABEL_16:
  OUTLINED_FUNCTION_16_15();
}

uint64_t ImputerConfiguration.MissingValue.hashValue.getter()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  OUTLINED_FUNCTION_22_7();
  if (v1)
  {
    sub_240F1CF48();
    if (v1 == 1)
      OUTLINED_FUNCTION_34_9();
    else
      sub_240F1CCC0();
  }
  else
  {
    sub_240F1CF48();
    sub_240F1CF6C();
  }
  return sub_240F1CF78();
}

uint64_t sub_240C9C6D0()
{
  uint64_t v0;
  int v1;

  v1 = *(unsigned __int8 *)(v0 + 16);
  sub_240F1CF3C();
  if (v1)
  {
    sub_240F1CF48();
    if (v1 == 1)
      sub_240F1CF48();
    else
      sub_240F1CCC0();
  }
  else
  {
    sub_240F1CF48();
    sub_240F1CF6C();
  }
  return sub_240F1CF78();
}

void ImputerConfiguration.ImputedValue.hash(into:)()
{
  __asm { BR              X10 }
}

void sub_240C9C7AC()
{
  OUTLINED_FUNCTION_5_23();
  sub_240F1CF6C();
  OUTLINED_FUNCTION_156();
}

uint64_t sub_240C9C7D8()
{
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_166_0();
  return OUTLINED_FUNCTION_14_19();
}

void sub_240C9C7F4()
{
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_166_0();
  sub_240C7BFDC();
}

void sub_240C9C810()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_5_23();
  v0 = OUTLINED_FUNCTION_166_0();
  sub_240C7E07C(v0, v1);
}

void sub_240C9C82C()
{
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_166_0();
  sub_240C2B464();
}

void sub_240C9C848()
{
  OUTLINED_FUNCTION_5_23();
  OUTLINED_FUNCTION_166_0();
  sub_240C2B334();
}

void static ImputerConfiguration.ImputedValue.== infix(_:_:)(uint64_t a1)
{
  __asm { BR              X9 }
}

void sub_240C9C8A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (v5)
  {
    sub_240C9CB68(v1, v0, v5);
    v8 = OUTLINED_FUNCTION_21_13();
    v10 = OUTLINED_FUNCTION_2_21(v8, v9, v4);
    sub_240C9BF58(v10, v11, v5);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_2_21(v2, v3, 0);
    sub_240C9BF58(v6, v7, 0);
  }
  OUTLINED_FUNCTION_16_15();
}

uint64_t ImputerConfiguration.ImputedValue.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  ImputerConfiguration.ImputedValue.hash(into:)();
  return sub_240F1CF78();
}

uint64_t sub_240C9CB18()
{
  sub_240F1CF3C();
  ImputerConfiguration.ImputedValue.hash(into:)();
  return sub_240F1CF78();
}

uint64_t sub_240C9CB68(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  switch(a3)
  {
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
      result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_240C9CBA4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C808;
  if (!qword_25708C808)
  {
    v1 = type metadata accessor for Proto_Imputer(255);
    result = MEMORY[0x24268C2AC](&unk_240F20F00, v1);
    atomic_store(result, (unint64_t *)&qword_25708C808);
  }
  return result;
}

unint64_t sub_240C9CBE8()
{
  unint64_t result;

  result = qword_25708D340;
  if (!qword_25708D340)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for ImputerConfiguration.MissingValue, &type metadata for ImputerConfiguration.MissingValue);
    atomic_store(result, (unint64_t *)&qword_25708D340);
  }
  return result;
}

unint64_t sub_240C9CC28()
{
  unint64_t result;

  result = qword_25708D348;
  if (!qword_25708D348)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for ImputerConfiguration.ImputedValue, &type metadata for ImputerConfiguration.ImputedValue);
    atomic_store(result, (unint64_t *)&qword_25708D348);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for ImputerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v4 = type metadata accessor for Proto_Imputer(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          swift_bridgeObjectRetain();
          goto LABEL_12;
        case 3u:
          *a1 = *a2;
          v11 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_240F1C930();
          v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          goto LABEL_12;
        case 4u:
          *a1 = *a2;
          v16 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_240F1C930();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          goto LABEL_12;
        case 5u:
          *a1 = *a2;
          v21 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
          v22 = (char *)a1 + v21;
          v23 = (char *)a2 + v21;
          v24 = sub_240F1C930();
          v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          v25(v22, v23, v24);
          goto LABEL_12;
        case 6u:
          *a1 = *a2;
          v26 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_240F1C930();
          v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
          swift_bridgeObjectRetain();
          v30(v27, v28, v29);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v31 = *(int *)(v6 + 20);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = v33[16];
    if (v34 == 255)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v32[16] = v33[16];
    }
    else
    {
      v35 = *(_QWORD *)v33;
      v36 = *((_QWORD *)v33 + 1);
      sub_240C02F64(*(_QWORD *)v33, v36, v33[16]);
      *(_QWORD *)v32 = v35;
      *((_QWORD *)v32 + 1) = v36;
      v32[16] = v34;
    }
    v37 = *(int *)(v6 + 24);
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t destroy for ImputerConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        swift_bridgeObjectRelease();
        v3 = type metadata accessor for Proto_DoubleVector(0);
        goto LABEL_8;
      case 4u:
        swift_bridgeObjectRelease();
        v3 = type metadata accessor for Proto_Int64Vector(0);
        goto LABEL_8;
      case 5u:
        swift_bridgeObjectRelease();
        v3 = type metadata accessor for Proto_StringToDoubleMap(0);
        goto LABEL_8;
      case 6u:
        swift_bridgeObjectRelease();
        v3 = type metadata accessor for Proto_Int64ToDoubleMap(0);
LABEL_8:
        v4 = a1 + *(int *)(v3 + 20);
        v5 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
        break;
      default:
        break;
    }
  }
  v6 = type metadata accessor for Proto_Imputer(0);
  v7 = a1 + *(int *)(v6 + 20);
  v8 = *(unsigned __int8 *)(v7 + 16);
  if (v8 != 255)
    sub_240C02F7C(*(_QWORD *)v7, *(_QWORD *)(v7 + 8), v8);
  v9 = a1 + *(int *)(v6 + 24);
  v10 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *initializeWithCopy for ImputerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;

  v4 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        v6 = a2[1];
        *a1 = *a2;
        a1[1] = v6;
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 3u:
        *a1 = *a2;
        v7 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        goto LABEL_10;
      case 4u:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_240F1C930();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
        goto LABEL_10;
      case 5u:
        *a1 = *a2;
        v17 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v20 = sub_240F1C930();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v18, v19, v20);
        goto LABEL_10;
      case 6u:
        *a1 = *a2;
        v22 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v23 = (char *)a1 + v22;
        v24 = (char *)a2 + v22;
        v25 = sub_240F1C930();
        v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
        swift_bridgeObjectRetain();
        v26(v23, v24, v25);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v27 = type metadata accessor for Proto_Imputer(0);
  v28 = *(int *)(v27 + 20);
  v29 = (char *)a1 + v28;
  v30 = (char *)a2 + v28;
  v31 = v30[16];
  if (v31 == 255)
  {
    *(_OWORD *)v29 = *(_OWORD *)v30;
    v29[16] = v30[16];
  }
  else
  {
    v32 = *(_QWORD *)v30;
    v33 = *((_QWORD *)v30 + 1);
    sub_240C02F64(*(_QWORD *)v30, v33, v30[16]);
    *(_QWORD *)v29 = v32;
    *((_QWORD *)v29 + 1) = v33;
    v29[16] = v31;
  }
  v34 = *(int *)(v27 + 24);
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 16))(v35, v36, v37);
  return a1;
}

_QWORD *assignWithCopy for ImputerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  void (*v37)(char *, char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char v57;
  uint64_t v58;
  uint64_t v59;
  char v60;
  __int128 v61;
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;

  v4 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 3u:
          *a1 = *a2;
          v8 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
          v9 = (char *)a1 + v8;
          v10 = (char *)a2 + v8;
          v11 = sub_240F1C930();
          v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
          swift_bridgeObjectRetain();
          v12(v9, v10, v11);
          goto LABEL_17;
        case 4u:
          *a1 = *a2;
          v13 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
          v14 = (char *)a1 + v13;
          v15 = (char *)a2 + v13;
          v16 = sub_240F1C930();
          v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
          swift_bridgeObjectRetain();
          v17(v14, v15, v16);
          goto LABEL_17;
        case 5u:
          *a1 = *a2;
          v18 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
          v19 = (char *)a1 + v18;
          v20 = (char *)a2 + v18;
          v21 = sub_240F1C930();
          v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
          swift_bridgeObjectRetain();
          v22(v19, v20, v21);
          goto LABEL_17;
        case 6u:
          *a1 = *a2;
          v23 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
          v24 = (char *)a1 + v23;
          v25 = (char *)a2 + v23;
          v26 = sub_240F1C930();
          v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
          swift_bridgeObjectRetain();
          v27(v24, v25, v26);
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v6)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
LABEL_7:
    v7 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v7 + 64));
    goto LABEL_25;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_240F1C930();
        v32 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 16);
        swift_bridgeObjectRetain();
        v32(v29, v30, v31);
        break;
      case 4u:
        *a1 = *a2;
        v33 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_240F1C930();
        v37 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16);
        swift_bridgeObjectRetain();
        v37(v34, v35, v36);
        break;
      case 5u:
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = sub_240F1C930();
        v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
        swift_bridgeObjectRetain();
        v42(v39, v40, v41);
        break;
      case 6u:
        *a1 = *a2;
        v43 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = sub_240F1C930();
        v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v47(v44, v45, v46);
        break;
      default:
        v7 = *(_QWORD *)(v4 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_25:
  v48 = type metadata accessor for Proto_Imputer(0);
  v49 = *(int *)(v48 + 20);
  v50 = (uint64_t)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = *((unsigned __int8 *)a2 + v49 + 16);
  if (*((unsigned __int8 *)a1 + v49 + 16) == 255)
  {
    if (v52 == 255)
    {
      v61 = *(_OWORD *)v51;
      *(_BYTE *)(v50 + 16) = v51[16];
      *(_OWORD *)v50 = v61;
    }
    else
    {
      v58 = *(_QWORD *)v51;
      v59 = *((_QWORD *)v51 + 1);
      sub_240C02F64(v58, v59, v52);
      *(_QWORD *)v50 = v58;
      *(_QWORD *)(v50 + 8) = v59;
      *(_BYTE *)(v50 + 16) = v52;
    }
  }
  else if (v52 == 255)
  {
    sub_240C4DA18(v50);
    v60 = v51[16];
    *(_OWORD *)v50 = *(_OWORD *)v51;
    *(_BYTE *)(v50 + 16) = v60;
  }
  else
  {
    v53 = *(_QWORD *)v51;
    v54 = *((_QWORD *)v51 + 1);
    sub_240C02F64(v53, v54, v52);
    v55 = *(_QWORD *)v50;
    v56 = *(_QWORD *)(v50 + 8);
    *(_QWORD *)v50 = v53;
    *(_QWORD *)(v50 + 8) = v54;
    v57 = *(_BYTE *)(v50 + 16);
    *(_BYTE *)(v50 + 16) = v52;
    sub_240C02F7C(v55, v56, v57);
  }
  v62 = *(int *)(v48 + 24);
  v63 = (char *)a1 + v62;
  v64 = (char *)a2 + v62;
  v65 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 24))(v63, v64, v65);
  return a1;
}

_QWORD *initializeWithTake for ImputerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v4 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_9;
      case 6u:
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v22 = type metadata accessor for Proto_Imputer(0);
  v23 = *(int *)(v22 + 20);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  *(_OWORD *)v24 = *(_OWORD *)v25;
  v24[16] = v25[16];
  v26 = *(int *)(v22 + 24);
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
  return a1;
}

_QWORD *assignWithTake for ImputerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;

  v4 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          *a1 = *a2;
          v7 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
          v8 = (char *)a1 + v7;
          v9 = (char *)a2 + v7;
          v10 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
          goto LABEL_16;
        case 4u:
          *a1 = *a2;
          v16 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
          goto LABEL_16;
        case 5u:
          *a1 = *a2;
          v20 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
          v21 = (char *)a1 + v20;
          v22 = (char *)a2 + v20;
          v23 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
          goto LABEL_16;
        case 6u:
          *a1 = *a2;
          v24 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
          v25 = (char *)a1 + v24;
          v26 = (char *)a2 + v24;
          v27 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v6)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
LABEL_7:
    v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v11 + 64));
    goto LABEL_23;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        break;
      case 4u:
        *a1 = *a2;
        v28 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        break;
      case 5u:
        *a1 = *a2;
        v32 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        break;
      case 6u:
        *a1 = *a2;
        v36 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        break;
      default:
        v11 = *(_QWORD *)(v4 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v40 = type metadata accessor for Proto_Imputer(0);
  v41 = *(int *)(v40 + 20);
  v42 = (uint64_t)a1 + v41;
  v43 = (char *)a2 + v41;
  v44 = *((unsigned __int8 *)a1 + v41 + 16);
  if (v44 == 255)
  {
LABEL_27:
    *(_OWORD *)v42 = *(_OWORD *)v43;
    *(_BYTE *)(v42 + 16) = v43[16];
    goto LABEL_28;
  }
  v45 = v43[16];
  if (v45 == 255)
  {
    sub_240C4DA18(v42);
    goto LABEL_27;
  }
  v46 = *(_QWORD *)v42;
  v47 = *(_QWORD *)(v42 + 8);
  *(_OWORD *)v42 = *(_OWORD *)v43;
  *(_BYTE *)(v42 + 16) = v45;
  sub_240C02F7C(v46, v47, v44);
LABEL_28:
  v48 = *(int *)(v40 + 24);
  v49 = (char *)a1 + v48;
  v50 = (char *)a2 + v48;
  v51 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 40))(v49, v50, v51);
  return a1;
}

uint64_t getEnumTagSinglePayload for ImputerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9DF68(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_10_17();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ImputerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9DFA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_10_17();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C9DFD8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_Imputer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ImputerConfiguration.MissingValue(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_240C9E098(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_240C9E234);
}

uint64_t *assignWithCopy for ImputerConfiguration.MissingValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_240C9E0F4(a1, a2, a3, (uint64_t)sub_240C9E234, (void (*)(uint64_t, uint64_t, uint64_t))sub_240C9E230);
}

void assignWithTake for ImputerConfiguration.MissingValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_240C9E15C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_240C9E230);
}

ValueMetadata *type metadata accessor for ImputerConfiguration.MissingValue()
{
  return &type metadata for ImputerConfiguration.MissingValue;
}

uint64_t initializeBufferWithCopyOfBuffer for ImputerConfiguration.ImputedValue(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  return sub_240C9E098(a1, a2, a3, (void (*)(_QWORD, uint64_t, uint64_t))sub_240C9CB68);
}

uint64_t destroy for ImputerConfiguration.ImputedValue(uint64_t a1)
{
  return sub_240C9BF58(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t sub_240C9E098(uint64_t a1, uint64_t *a2, uint64_t a3, void (*a4)(_QWORD, uint64_t, uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *a2;
  v6 = a2[1];
  v7 = *((unsigned __int8 *)a2 + 16);
  a4(*a2, v6, v7);
  *(_QWORD *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v6;
  *(_BYTE *)(a1 + 16) = v7;
  return a1;
}

uint64_t *assignWithCopy for ImputerConfiguration.ImputedValue(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_240C9E0F4(a1, a2, a3, (uint64_t)sub_240C9CB68, (void (*)(uint64_t, uint64_t, uint64_t))sub_240C9BF58);
}

uint64_t *sub_240C9E0F4(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v7 = *a2;
  v8 = a2[1];
  v9 = *((_BYTE *)a2 + 16);
  v10 = OUTLINED_FUNCTION_21_13();
  v11(v10);
  v12 = *a1;
  v13 = a1[1];
  *a1 = v7;
  a1[1] = v8;
  v14 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v9;
  a5(v12, v13, v14);
  return a1;
}

void assignWithTake for ImputerConfiguration.ImputedValue(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  sub_240C9E15C(a1, a2, a3, (void (*)(uint64_t, uint64_t, uint64_t))sub_240C9BF58);
}

void sub_240C9E15C(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, uint64_t))
{
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = *(_BYTE *)(a2 + 16);
  v6 = *a1;
  v7 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v8 = *((unsigned __int8 *)a1 + 16);
  *((_BYTE *)a1 + 16) = v5;
  a4(v6, v7, v8);
  OUTLINED_FUNCTION_44();
}

uint64_t getEnumTagSinglePayload for ImputerConfiguration.ImputedValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFA && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 249;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 6)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ImputerConfiguration.ImputedValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF9)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 250;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFA)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for ImputerConfiguration.ImputedValue()
{
  return &type metadata for ImputerConfiguration.ImputedValue;
}

uint64_t OUTLINED_FUNCTION_1_17()
{
  return type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
}

uint64_t OUTLINED_FUNCTION_2_21(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_240C9BF58(a1, a2, a3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_5_23()
{
  return sub_240F1CF48();
}

void OUTLINED_FUNCTION_7_18(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240BE27A0(v2, a2);
}

uint64_t OUTLINED_FUNCTION_9_16()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_10_17()
{
  return type metadata accessor for Proto_Imputer(0);
}

uint64_t OUTLINED_FUNCTION_12_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  return sub_240C9BF90(v0, v1);
}

uint64_t OUTLINED_FUNCTION_13_14()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_19()
{
  return sub_240F1CCC0();
}

void OUTLINED_FUNCTION_15_16()
{
  sub_240C9BD64();
}

uint64_t OUTLINED_FUNCTION_19_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  *(_QWORD *)v1 = v2;
  *(_QWORD *)(v1 + 8) = a1;
  *(_BYTE *)(v1 + 16) = v3;
  return v2;
}

uint64_t OUTLINED_FUNCTION_21_13()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_23_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_24_10(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t v3;

  sub_240C02F7C(a1, a2, a3);
  return v3;
}

uint64_t OUTLINED_FUNCTION_29_10()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C9BF90(v1, v0);
}

uint64_t OUTLINED_FUNCTION_34_9()
{
  return sub_240F1CF48();
}

uint64_t OUTLINED_FUNCTION_35_9()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C9B8BC(v1, v0);
}

uint64_t OUTLINED_FUNCTION_38_8()
{
  uint64_t v0;

  return sub_240C5177C(*(_QWORD *)v0, *(_QWORD *)(v0 + 8), *(_BYTE *)(v0 + 16));
}

void static NeuralNetwork.Layer.upsample(name:inputName:outputName:scalingFactor:interpolation:linearUpsamplingMode:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 *a9)
{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_6_16();
  v19 = *a9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v16 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  v17 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v17 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v17 + 32) = a5;
  *(_QWORD *)(v17 + 40) = a6;
  v18 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v9 + 8) = v18;
  *(_QWORD *)(v9 + 16) = 0;
  *(_BYTE *)(v9 + 24) = 1;
  *(_QWORD *)(v9 + 32) = 0;
  *(_BYTE *)(v9 + 40) = 1;
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_10_18();
  NeuralNetwork.Layer.UpsampleParameters.scalingFactor.setter(a7);
  *(_QWORD *)(v9 + 16) = v20;
  *(_BYTE *)(v9 + 24) = 1;
  *(_QWORD *)(v9 + 32) = v19;
  *(_BYTE *)(v9 + 40) = 1;
  OUTLINED_FUNCTION_9_17();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

{
  uint64_t v9;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_6_16();
  v19 = *a9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v16 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  v17 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v17 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v17 + 32) = a5;
  *(_QWORD *)(v17 + 40) = a6;
  v18 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v9 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v9 + 8) = v18;
  *(_QWORD *)(v9 + 16) = 0;
  *(_BYTE *)(v9 + 24) = 1;
  *(_QWORD *)(v9 + 32) = 0;
  *(_BYTE *)(v9 + 40) = 1;
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_10_18();
  *(_QWORD *)(v9 + 8) = a7;
  *(_QWORD *)(v9 + 16) = v20;
  *(_BYTE *)(v9 + 24) = 1;
  *(_QWORD *)(v9 + 32) = v19;
  *(_BYTE *)(v9 + 40) = 1;
  OUTLINED_FUNCTION_9_17();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.upsample(scalingFactor:interpolation:linearUpsamplingMode:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_15();
  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 8) = v2;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_10_18();
  OUTLINED_FUNCTION_15_17();
  *(_QWORD *)(v0 + 16) = v1;
  OUTLINED_FUNCTION_8_20();
  return OUTLINED_FUNCTION_4_18();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_15();
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 8) = v3;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_10_18();
  *(_QWORD *)(v1 + 8) = v0;
  *(_QWORD *)(v1 + 16) = v2;
  OUTLINED_FUNCTION_8_20();
  return OUTLINED_FUNCTION_4_18();
}

void NeuralNetwork.Layer.UpsampleParameters.init(scalingFactor:interpolation:linearUpsamplingMode:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_14_20();
  v3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v0 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v0 + 8) = v3;
  *(_QWORD *)(v0 + 16) = 0;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = 0;
  *(_BYTE *)(v0 + 40) = 1;
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_16_16();
  OUTLINED_FUNCTION_15_17();
  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 24) = 1;
  *(_QWORD *)(v0 + 32) = v2;
  *(_BYTE *)(v0 + 40) = 1;
  OUTLINED_FUNCTION_42();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_14_20();
  v4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)v1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + 8) = v4;
  *(_QWORD *)(v1 + 16) = 0;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = 0;
  *(_BYTE *)(v1 + 40) = 1;
  OUTLINED_FUNCTION_1_18();
  OUTLINED_FUNCTION_16_16();
  *(_QWORD *)(v1 + 8) = v0;
  *(_QWORD *)(v1 + 16) = v2;
  *(_BYTE *)(v1 + 24) = 1;
  *(_QWORD *)(v1 + 32) = v3;
  *(_BYTE *)(v1 + 40) = 1;
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.UpsampleParameters.scalingFactor.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v3 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
        break;
      v5 = *(_QWORD *)(v6 + 16);
      if (v5 >= *(_QWORD *)(v6 + 24) >> 1)
        sub_240BF080C();
      ++v3;
      *(_QWORD *)(v6 + 16) = v5 + 1;
      *(_QWORD *)(v6 + 8 * v5 + 32) = v4;
      if (v2 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_240C9E868()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.UpsampleParameters.scalingFactor.setter(v0);
}

void NeuralNetwork.Layer.UpsampleParameters.scalingFactor.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_240BF0830();
    v5 = 0;
    v6 = v9;
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 < 0)
        break;
      v8 = *(_QWORD *)(v9 + 16);
      if (v8 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_240BF0830();
      ++v5;
      *(_QWORD *)(v9 + 16) = v8 + 1;
      *(_QWORD *)(v9 + 8 * v8 + 32) = v7;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
LABEL_9:
    swift_bridgeObjectRelease();
    *v2 = v6;
  }
}

void (*NeuralNetwork.Layer.UpsampleParameters.scalingFactor.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  NeuralNetwork.Layer.UpsampleParameters.scalingFactor.getter();
  *a1 = v3;
  return sub_240C9E9BC;
}

void sub_240C9E9BC(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.UpsampleParameters.scalingFactor.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_15_17();
    OUTLINED_FUNCTION_44();
  }
}

uint64_t NeuralNetwork.Layer.UpsampleParameters.fractionalScalingFactor.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240C9E9FC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.UpsampleParameters.fractionalScalingFactor.setter(v0);
}

void NeuralNetwork.Layer.UpsampleParameters.fractionalScalingFactor.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*NeuralNetwork.Layer.UpsampleParameters.fractionalScalingFactor.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_240C9EA80;
}

uint64_t sub_240C9EA80(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 8) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 8) = v2;
  }
  return result;
}

void NeuralNetwork.Layer.UpsampleParameters.interpolation.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_16_2(a1);
}

void sub_240C9EB00(_BYTE *a1@<X8>)
{
  char v2;

  NeuralNetwork.Layer.UpsampleParameters.interpolation.getter(&v2);
  *a1 = v2;
}

unsigned __int8 *sub_240C9EB38(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.Layer.UpsampleParameters.interpolation.setter(&v2);
}

unsigned __int8 *NeuralNetwork.Layer.UpsampleParameters.interpolation.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.UpsampleParameters.interpolation.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  BOOL v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_BYTE *)(v1 + 24) == 1 && *(_QWORD *)(v1 + 16) != 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C28BEC;
}

void NeuralNetwork.Layer.UpsampleParameters.linearUpsamplingMode.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_16_2(a1);
}

unsigned __int8 *sub_240C9EBD4(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.Layer.UpsampleParameters.linearUpsamplingMode.setter(&v2);
}

unsigned __int8 *NeuralNetwork.Layer.UpsampleParameters.linearUpsamplingMode.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = *result;
  *(_BYTE *)(v1 + 40) = 1;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.UpsampleParameters.linearUpsamplingMode.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (*(_BYTE *)(v1 + 40) == 1)
    v2 = *(_BYTE *)(v1 + 32);
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C9EC4C;
}

uint64_t *sub_240C9EC4C(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)(v1 + 32) = *((unsigned __int8 *)result + 8);
  *(_BYTE *)(v1 + 40) = 1;
  return result;
}

uint64_t NeuralNetwork.Layer.UpsampleParameters.hash(into:)()
{
  OUTLINED_FUNCTION_1_18();
  sub_240C30D44(&qword_25708D350, type metadata accessor for Proto_UpsampleLayerParams, (uint64_t)&unk_240F4FCDC);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.UpsampleParameters.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_1_18();
  sub_240C30D44(&qword_25708D350, type metadata accessor for Proto_UpsampleLayerParams, (uint64_t)&unk_240F4FCDC);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C9ED28()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_UpsampleLayerParams(0);
  sub_240C30D44(&qword_25708D350, type metadata accessor for Proto_UpsampleLayerParams, (uint64_t)&unk_240F4FCDC);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void NeuralNetwork.Layer.UpsampleParameters.customMirror.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  BOOL v17;
  uint64_t v18;
  _QWORD v19[2];

  v19[1] = a1;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v19 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NeuralNetwork.Layer.UpsampleParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  sub_240C9F0B0(v1, (uint64_t)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240F1E9E0;
  strcpy((char *)(v11 + 32), "scalingFactor");
  *(_WORD *)(v11 + 46) = -4864;
  NeuralNetwork.Layer.UpsampleParameters.scalingFactor.getter();
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v11 + 48) = v13;
  *(_QWORD *)(v11 + 72) = v14;
  *(_QWORD *)(v11 + 80) = 0xD000000000000017;
  *(_QWORD *)(v11 + 88) = 0x8000000240F528C0;
  v15 = *(_QWORD *)(v1 + 8);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF90);
  *(_QWORD *)(v11 + 96) = v15;
  *(_QWORD *)(v11 + 120) = v16;
  strcpy((char *)(v11 + 128), "interpolation");
  *(_WORD *)(v11 + 142) = -4864;
  *(_QWORD *)(v11 + 168) = &type metadata for NeuralNetwork.Layer.UpsampleParameters.Interpolation;
  v17 = *(_BYTE *)(v1 + 24) == 1 && *(_QWORD *)(v1 + 16) != 0;
  *(_BYTE *)(v11 + 144) = v17;
  *(_QWORD *)(v11 + 176) = 0xD000000000000014;
  *(_QWORD *)(v11 + 184) = 0x8000000240F528E0;
  *(_QWORD *)(v11 + 216) = &type metadata for NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode;
  NeuralNetwork.Layer.UpsampleParameters.linearUpsamplingMode.getter((_BYTE *)(v11 + 192));
  v18 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE43C0], v2);
  swift_bridgeObjectRetain();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.UpsampleParameters.Interpolation.init(rawValue:)(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_16_2(a1);
}

uint64_t NeuralNetwork.Layer.UpsampleParameters.Interpolation.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

void sub_240C9F00C(_BYTE *a1@<X8>)
{
  NeuralNetwork.Layer.UpsampleParameters.Interpolation.init(rawValue:)(a1);
}

void sub_240C9F014(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.UpsampleParameters.Interpolation.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

unint64_t NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 3;
  if (result < 3)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_240C9F050@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode.init(rawValue:)(*a1, a2);
}

void sub_240C9F058(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.UpsampleParameters()
{
  uint64_t result;

  result = qword_25708D378;
  if (!qword_25708D378)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C9F0B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.UpsampleParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C9F0F4()
{
  return sub_240C30D44(&qword_25708D358, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.UpsampleParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.UpsampleParameters);
}

uint64_t sub_240C9F120()
{
  return sub_240C30D44(&qword_25708D360, type metadata accessor for Proto_UpsampleLayerParams, (uint64_t)&unk_240F4D27C);
}

unint64_t sub_240C9F150()
{
  unint64_t result;

  result = qword_25708D368;
  if (!qword_25708D368)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.Layer.UpsampleParameters.Interpolation, &type metadata for NeuralNetwork.Layer.UpsampleParameters.Interpolation);
    atomic_store(result, (unint64_t *)&qword_25708D368);
  }
  return result;
}

unint64_t sub_240C9F190()
{
  unint64_t result;

  result = qword_25708D370;
  if (!qword_25708D370)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode, &type metadata for NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode);
    atomic_store(result, (unint64_t *)&qword_25708D370);
  }
  return result;
}

void sub_240C9F1CC(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.Layer.UpsampleParameters.scalingFactor.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C9F1F4(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.UpsampleParameters.fractionalScalingFactor.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C9F224(_BYTE *a1@<X8>)
{
  NeuralNetwork.Layer.UpsampleParameters.linearUpsamplingMode.getter(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t _s18UpsampleParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = type metadata accessor for Proto_UpsampleLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v8 = *(int *)(v4 + 32);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t _s18UpsampleParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t _s18UpsampleParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t _s18UpsampleParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t _s18UpsampleParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s18UpsampleParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s18UpsampleParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9F5FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_18();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s18UpsampleParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C9F638(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_18();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C9F66C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_UpsampleLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s18UpsampleParametersV13InterpolationOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_240C9F720 + 4 * byte_240F24C75[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_240C9F754 + 4 * byte_240F24C70[v4]))();
}

uint64_t sub_240C9F754(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C9F75C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C9F764);
  return result;
}

uint64_t sub_240C9F770(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C9F778);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_240C9F77C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C9F784(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.Layer.UpsampleParameters.Interpolation()
{
  return &type metadata for NeuralNetwork.Layer.UpsampleParameters.Interpolation;
}

uint64_t _s18UpsampleParametersV20LinearUpsamplingModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240C9F7EC + 4 * byte_240F24C7F[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240C9F820 + 4 * byte_240F24C7A[v4]))();
}

uint64_t sub_240C9F820(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C9F828(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C9F830);
  return result;
}

uint64_t sub_240C9F83C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C9F844);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240C9F848(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C9F850(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode()
{
  return &type metadata for NeuralNetwork.Layer.UpsampleParameters.LinearUpsamplingMode;
}

uint64_t OUTLINED_FUNCTION_1_18()
{
  return type metadata accessor for Proto_UpsampleLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_4_18()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_6_16()
{
  unsigned __int8 *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = *v0;
}

uint64_t OUTLINED_FUNCTION_8_20()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + 24) = v2;
  *(_QWORD *)(v0 + 32) = v1;
  *(_BYTE *)(v0 + 40) = v2;
  return type metadata accessor for NeuralNetwork.Layer.Kind();
}

uint64_t OUTLINED_FUNCTION_9_17()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_10_18()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_15_17()
{
  uint64_t v0;

  NeuralNetwork.Layer.UpsampleParameters.scalingFactor.setter(v0);
}

uint64_t OUTLINED_FUNCTION_16_16()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void DictionaryVectorizerConfiguration.keys.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = v1;
  v5 = OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_0();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_313();
  sub_240C9FA34(v3, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    v13 = 0;
    v14 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90(v2, (uint64_t)v11, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240BE0BF4((uint64_t)v11, (uint64_t)v9, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240C9FBE8();
    v14 = v15;
    v13 = v16;
    sub_240BE27A0((uint64_t)v11, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  }
  *(_QWORD *)a1 = v14;
  *(_BYTE *)(a1 + 8) = v13;
}

uint64_t sub_240C9FA34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_240C9FA7C(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  DictionaryVectorizerConfiguration.keys.getter((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_240C9FABC(uint64_t a1)
{
  char v1;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)a1;
  v4 = v1;
  swift_bridgeObjectRetain();
  return DictionaryVectorizerConfiguration.keys.setter(&v3);
}

uint64_t DictionaryVectorizerConfiguration.keys.setter(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v6 = (_QWORD *)(v5 - v4);
  v7 = *a1;
  if ((a1[1] & 1) != 0)
  {
    OUTLINED_FUNCTION_48_4();
    swift_bridgeObjectRetain();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    *v6 = v7;
  }
  else
  {
    v9 = swift_bridgeObjectRetain();
    sub_240C5E7DC(v9);
  }
  v8 = OUTLINED_FUNCTION_3_23();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_3_23();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  return sub_240C9FDE8((uint64_t)v6, v1);
}

void sub_240C9FBE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v7 = (uint64_t *)(v6 - v5);
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v26 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v14 = v13 - v12;
  sub_240BE0BF4(v1, v13 - v12, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_240BE0B90(v14, (uint64_t)v10, type metadata accessor for Proto_Int64Vector);
    v20 = *(_QWORD *)v10;
    v21 = *(_QWORD *)(*(_QWORD *)v10 + 16);
    if (v21)
    {
      v26 = v3;
      v27 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_240BF080C();
      v17 = v27;
      v22 = (uint64_t *)(v20 + 32);
      v23 = *(_QWORD *)(v27 + 16);
      do
      {
        v25 = *v22++;
        v24 = v25;
        v27 = v17;
        if (v23 >= *(_QWORD *)(v17 + 24) >> 1)
        {
          sub_240BF080C();
          v17 = v27;
        }
        *(_QWORD *)(v17 + 16) = v23 + 1;
        *(_QWORD *)(v17 + 8 * v23++ + 32) = v24;
        --v21;
      }
      while (v21);
      v3 = v26;
    }
    else
    {
      swift_bridgeObjectRetain();
      v17 = MEMORY[0x24BEE4AF8];
    }
    sub_240BE27A0(v1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    swift_bridgeObjectRelease();
    v19 = type metadata accessor for Proto_Int64Vector;
    v18 = (uint64_t)v10;
  }
  else
  {
    sub_240BE27A0(v1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240BE0B90(v14, (uint64_t)v7, type metadata accessor for Proto_StringVector);
    v17 = *v7;
    OUTLINED_FUNCTION_329();
    v18 = (uint64_t)v7;
    v19 = type metadata accessor for Proto_StringVector;
  }
  sub_240BE27A0(v18, v19);
  *(_QWORD *)v3 = v17;
  *(_BYTE *)(v3 + 8) = EnumCaseMultiPayload != 1;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C9FDE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void (*DictionaryVectorizerConfiguration.keys.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[2] = v2;
  v5 = OUTLINED_FUNCTION_3_23();
  v4[3] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = malloc(v6);
  v4[4] = v7;
  v8 = malloc(v6);
  v4[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  v4[6] = OUTLINED_FUNCTION_51_6();
  v4[7] = OUTLINED_FUNCTION_51_6();
  v9 = OUTLINED_FUNCTION_51_6();
  v4[8] = v9;
  sub_240C9FA34(v2, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5) == 1)
  {
    v10 = 0;
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90((uint64_t)v9, (uint64_t)v8, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240BE0BF4((uint64_t)v8, (uint64_t)v7, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240C9FBE8();
    v11 = v13;
    v10 = v14;
    sub_240BE27A0((uint64_t)v8, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  }
  *v4 = v11;
  *((_BYTE *)v4 + 8) = v10;
  return sub_240C9FF70;
}

void sub_240C9FF70()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  char v8;
  char *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22();
  v5 = *v4;
  v6 = **v4;
  v7 = (void *)(*v4)[3];
  if ((v8 & 1) != 0)
  {
    v9 = (char *)v5[6];
    if (((*v4)[1] & 1) != 0)
    {
      v0 = &v9[*(int *)(OUTLINED_FUNCTION_48_4() + 20)];
      OUTLINED_FUNCTION_59_2();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      OUTLINED_FUNCTION_59_2();
      sub_240C5E7DC(v6);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_31_5((uint64_t)v0);
    sub_240C9FDE8((uint64_t)v0, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (char *)v5[7];
    if (((*v4)[1] & 1) != 0)
    {
      v0 = &v9[*(int *)(OUTLINED_FUNCTION_48_4() + 20)];
      OUTLINED_FUNCTION_329();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      v10 = OUTLINED_FUNCTION_329();
      sub_240C5E7DC(v10);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_31_5((uint64_t)v9);
    sub_240C9FDE8((uint64_t)v9, v3);
  }
  free(v7);
  free(v9);
  free(v0);
  free(v1);
  free(v2);
  free(v5);
}

uint64_t DictionaryVectorizerConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_18_0(a1, v3, v4, v2);
  OUTLINED_FUNCTION_4_19();
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void DictionaryVectorizerConfiguration.init<A>(keys:)()
{
  sub_240CA0154();
}

{
  sub_240CA0154();
}

uint64_t sub_240CA00FC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_240CA0154()
{
  int v0;
  void (*v1)(uint64_t, uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  _DWORD v21[4];

  OUTLINED_FUNCTION_22();
  v21[3] = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  v12 = v11;
  v13 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_1();
  v16 = v15 - v14;
  v18 = v17(0);
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)v21 - v19;
  OUTLINED_FUNCTION_3_23();
  OUTLINED_FUNCTION_150(v12, 1);
  OUTLINED_FUNCTION_4_19();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16))(v16, v10, v8);
  v2(v16, v8, v6);
  sub_240CA00FC(v12);
  sub_240BE0B90((uint64_t)v20, v12, v4);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_150(v12, 0);
  (*(void (**)(uint64_t, uint64_t))(v13 + 8))(v10, v8);
  OUTLINED_FUNCTION_1();
}

uint64_t DictionaryVectorizerConfiguration.hash(into:)()
{
  OUTLINED_FUNCTION_4_19();
  sub_240BE18B8(&qword_25708C240, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E990);
  return sub_240F1CC54();
}

void DictionaryVectorizerConfiguration.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_4_19();
  sub_240BE18B8(&qword_25708C240, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E990);
  sub_240F1CC54();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240CA032C()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_DictVectorizer(0);
  sub_240BE18B8(&qword_25708C240, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E990);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void DictionaryVectorizerConfiguration.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v24 = sub_240F1CF90();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DictionaryVectorizerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v20, v31 - v30, v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v33 + 32) = 1937335659;
  *(_QWORD *)(v33 + 40) = 0xE400000000000000;
  *(_QWORD *)(v33 + 72) = &type metadata for DictionaryVectorizerConfiguration.Keys;
  DictionaryVectorizerConfiguration.keys.getter(v33 + 48);
  v34 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0((uint64_t)v28, v35, v36, v34);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v25 + 104))(v21, *MEMORY[0x24BEE43C0], v24);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for DictionaryVectorizerConfiguration()
{
  uint64_t result;

  result = qword_254360398;
  if (!qword_254360398)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t DictionaryVectorizerConfiguration.Keys.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void DictionaryVectorizerConfiguration.Keys.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    sub_240F1CF48();
    sub_240C7C018();
  }
  else
  {
    sub_240F1CF48();
    sub_240C7E07C(a1, v3);
  }
}

void static DictionaryVectorizerConfiguration.Keys.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      sub_240BEAC24(v4, v5);
  }
  else if ((v6 & 1) == 0)
  {
    sub_240BEACE0(v4, v5);
  }
}

void DictionaryVectorizerConfiguration.Keys.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v3[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  OUTLINED_FUNCTION_22_7();
  sub_240F1CF48();
  if ((v2 & 1) != 0)
    sub_240C7C018();
  else
    sub_240C7E07C((uint64_t)v3, v1);
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240CA0638()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_240F1CF3C();
  sub_240F1CF48();
  if ((v2 & 1) != 0)
    sub_240C7C018();
  else
    sub_240C7E07C((uint64_t)v4, v1);
  return sub_240F1CF78();
}

void sub_240CA06AC()
{
  sub_240BE18B8(&qword_25708D388, (uint64_t (*)(uint64_t))type metadata accessor for DictionaryVectorizerConfiguration, (uint64_t)&protocol conformance descriptor for DictionaryVectorizerConfiguration);
}

void sub_240CA06D8()
{
  sub_240BE18B8(&qword_25708C238, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E918);
}

unint64_t sub_240CA0708()
{
  unint64_t result;

  result = qword_25708D390;
  if (!qword_25708D390)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for DictionaryVectorizerConfiguration.Keys, &type metadata for DictionaryVectorizerConfiguration.Keys);
    atomic_store(result, (unint64_t *)&qword_25708D390);
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for DictionaryVectorizerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = type metadata accessor for Proto_DictVectorizer(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(v6 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t destroy for DictionaryVectorizerConfiguration(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v4 = type metadata accessor for Proto_Int64Vector(0);
    else
      v4 = type metadata accessor for Proto_StringVector(0);
    v5 = a1 + *(int *)(v4 + 20);
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(type metadata accessor for Proto_DictVectorizer(0) + 20);
  v8 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for DictionaryVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v4 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v12 = *(int *)(type metadata accessor for Proto_DictVectorizer(0) + 20);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  return a1;
}

_QWORD *assignWithCopy for DictionaryVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    v14 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v14 == 1)
      v15 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v15 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_240F1C930();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = *(int *)(type metadata accessor for Proto_DictVectorizer(0) + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 24))(v21, v22, v23);
  return a1;
}

_QWORD *initializeWithTake for DictionaryVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v4 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v11 = *(int *)(type metadata accessor for Proto_DictVectorizer(0) + 20);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
  return a1;
}

_QWORD *assignWithTake for DictionaryVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  v4 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    v13 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v13 == 1)
      v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v18 = *(int *)(type metadata accessor for Proto_DictVectorizer(0) + 20);
  v19 = (char *)a1 + v18;
  v20 = (char *)a2 + v18;
  v21 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 40))(v19, v20, v21);
  return a1;
}

uint64_t getEnumTagSinglePayload for DictionaryVectorizerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA1168(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_4_19();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DictionaryVectorizerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA11A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_4_19();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CA11D8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_DictVectorizer(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for DictionaryVectorizerConfiguration.Keys()
{
  return &type metadata for DictionaryVectorizerConfiguration.Keys;
}

uint64_t OUTLINED_FUNCTION_3_23()
{
  return type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
}

uint64_t OUTLINED_FUNCTION_4_19()
{
  return type metadata accessor for Proto_DictVectorizer(0);
}

void OneHotEncoderConfiguration.orderedCategories.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = v1;
  v5 = OUTLINED_FUNCTION_5_24();
  OUTLINED_FUNCTION_0();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v15 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_313();
  sub_240CA2054(v3, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    v13 = 0;
    v14 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90(v2, (uint64_t)v11, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    sub_240BE0BF4((uint64_t)v11, (uint64_t)v9, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    sub_240CA14F0();
    v14 = v15;
    v13 = v16;
    sub_240BE27A0((uint64_t)v11, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
  }
  *(_QWORD *)a1 = v14;
  *(_BYTE *)(a1 + 8) = v13;
}

void sub_240CA1388(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  OneHotEncoderConfiguration.orderedCategories.getter((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

uint64_t sub_240CA13C8(uint64_t a1)
{
  char v1;
  uint64_t v3;
  char v4;

  v1 = *(_BYTE *)(a1 + 8);
  v3 = *(_QWORD *)a1;
  v4 = v1;
  swift_bridgeObjectRetain();
  return OneHotEncoderConfiguration.orderedCategories.setter(&v3);
}

uint64_t OneHotEncoderConfiguration.orderedCategories.setter(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = (_QWORD *)(v4 - v3);
  v6 = *a1;
  if ((a1[1] & 1) != 0)
  {
    v7 = swift_bridgeObjectRetain();
    sub_240C5E7DC(v7);
  }
  else
  {
    OUTLINED_FUNCTION_48_4();
    swift_bridgeObjectRetain();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    *v5 = v6;
  }
  v8 = OUTLINED_FUNCTION_5_24();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_24();
  __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v8);
  return OUTLINED_FUNCTION_20_10((uint64_t)v5);
}

void sub_240CA14F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = (uint64_t *)(v8 - v7);
  OUTLINED_FUNCTION_5_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  v13 = v12 - v11;
  sub_240BE0BF4(v2, v12 - v11, v14);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_240BE0B90(v13, v0, type metadata accessor for Proto_Int64Vector);
    v16 = *(_QWORD *)v0;
    v17 = *(_QWORD *)(*(_QWORD *)v0 + 16);
    if (v17)
    {
      v25 = v4;
      v26 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_240BF080C();
      v18 = v26;
      v19 = (uint64_t *)(v16 + 32);
      v20 = *(_QWORD *)(v26 + 16);
      do
      {
        v22 = *v19++;
        v21 = v22;
        if (v20 >= *(_QWORD *)(v26 + 24) >> 1)
          sub_240BF080C();
        *(_QWORD *)(v26 + 16) = v20 + 1;
        *(_QWORD *)(v26 + 8 * v20++ + 32) = v21;
        --v17;
      }
      while (v17);
      v4 = v25;
    }
    else
    {
      swift_bridgeObjectRetain();
      v18 = MEMORY[0x24BEE4AF8];
    }
    sub_240BE27A0(v2, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    swift_bridgeObjectRelease();
    v24 = type metadata accessor for Proto_Int64Vector;
    v23 = v0;
  }
  else
  {
    sub_240BE27A0(v2, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    sub_240BE0B90(v13, (uint64_t)v9, type metadata accessor for Proto_StringVector);
    v18 = *v9;
    OUTLINED_FUNCTION_329();
    v23 = (uint64_t)v9;
    v24 = type metadata accessor for Proto_StringVector;
  }
  sub_240BE27A0(v23, v24);
  *(_QWORD *)v4 = v18;
  *(_BYTE *)(v4 + 8) = EnumCaseMultiPayload == 1;
  OUTLINED_FUNCTION_1();
}

void (*OneHotEncoderConfiguration.orderedCategories.modify(_QWORD *a1))()
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  void *v8;
  void *v9;
  char v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  v2 = v1;
  v4 = malloc(0x48uLL);
  *a1 = v4;
  v4[2] = v2;
  v5 = OUTLINED_FUNCTION_5_24();
  v4[3] = v5;
  v6 = *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64);
  v7 = malloc(v6);
  v4[4] = v7;
  v8 = malloc(v6);
  v4[5] = v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  v4[6] = OUTLINED_FUNCTION_51_6();
  v4[7] = OUTLINED_FUNCTION_51_6();
  v9 = OUTLINED_FUNCTION_51_6();
  v4[8] = v9;
  sub_240CA2054(v2, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v5) == 1)
  {
    v10 = 0;
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90((uint64_t)v9, (uint64_t)v8, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    sub_240BE0BF4((uint64_t)v8, (uint64_t)v7, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    sub_240CA14F0();
    v11 = v13;
    v10 = v14;
    sub_240BE27A0((uint64_t)v8, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
  }
  *v4 = v11;
  *((_BYTE *)v4 + 8) = v10;
  return sub_240CA1820;
}

void sub_240CA1820()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t **v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  char v8;
  char *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22();
  v5 = *v4;
  v6 = **v4;
  v7 = (void *)(*v4)[3];
  if ((v8 & 1) != 0)
  {
    v9 = (char *)v5[6];
    if (((*v4)[1] & 1) != 0)
    {
      OUTLINED_FUNCTION_59_2();
      sub_240C5E7DC(v6);
    }
    else
    {
      v0 = &v9[*(int *)(OUTLINED_FUNCTION_48_4() + 20)];
      OUTLINED_FUNCTION_59_2();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_31_5((uint64_t)v0);
    sub_240CA209C((uint64_t)v0, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v9 = (char *)v5[7];
    if (((*v4)[1] & 1) != 0)
    {
      v10 = OUTLINED_FUNCTION_329();
      sub_240C5E7DC(v10);
    }
    else
    {
      v0 = &v9[*(int *)(OUTLINED_FUNCTION_48_4() + 20)];
      OUTLINED_FUNCTION_329();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_21_8();
    OUTLINED_FUNCTION_31_5((uint64_t)v9);
    sub_240CA209C((uint64_t)v9, v3);
  }
  free(v7);
  free(v9);
  free(v0);
  free(v1);
  free(v2);
  free(v5);
}

uint64_t OneHotEncoderConfiguration.sparseOutput.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + *(int *)(OUTLINED_FUNCTION_3_24() + 20));
}

void OneHotEncoderConfiguration.sparseOutput.setter(char a1)
{
  uint64_t v1;

  *(_BYTE *)(v1 + *(int *)(OUTLINED_FUNCTION_3_24() + 20)) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*OneHotEncoderConfiguration.sparseOutput.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)a1 = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_3_24() + 20);
  *(_BYTE *)(a1 + 12) = *(_BYTE *)(v1 + v3);
  *(_DWORD *)(a1 + 8) = v3;
  return sub_240CA19D8;
}

uint64_t sub_240CA19D8(uint64_t result)
{
  *(_BYTE *)(*(_QWORD *)result + *(int *)(result + 8)) = *(_BYTE *)(result + 12);
  return result;
}

void OneHotEncoderConfiguration.unknownBehaviour.getter(BOOL *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  BOOL v4;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_3_24() + 24);
  v4 = *(_BYTE *)(v3 + 8) == 1 && *(_QWORD *)v3 != 0;
  *a1 = v4;
  OUTLINED_FUNCTION_44();
}

void sub_240CA1A34(_BYTE *a1@<X8>)
{
  BOOL v2;

  OneHotEncoderConfiguration.unknownBehaviour.getter(&v2);
  *a1 = v2;
}

void sub_240CA1A6C(unsigned __int8 *a1)
{
  unsigned __int8 v1;

  v1 = *a1;
  OneHotEncoderConfiguration.unknownBehaviour.setter(&v1);
}

void OneHotEncoderConfiguration.unknownBehaviour.setter(unsigned __int8 *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = v1 + *(int *)(OUTLINED_FUNCTION_3_24() + 24);
  *(_QWORD *)v3 = v2;
  *(_BYTE *)(v3 + 8) = 1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*OneHotEncoderConfiguration.unknownBehaviour.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  BOOL *v3;
  uint64_t v4;
  uint64_t v5;
  BOOL v6;

  v3 = (BOOL *)(a1 + 12);
  *(_QWORD *)a1 = v1;
  v4 = *(int *)(OUTLINED_FUNCTION_3_24() + 24);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = v1 + v4;
  v6 = *(_BYTE *)(v5 + 8) == 1 && *(_QWORD *)v5 != 0;
  *v3 = v6;
  return sub_240CA1B3C;
}

uint64_t sub_240CA1B3C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(int *)(result + 8);
  *(_QWORD *)v1 = *(unsigned __int8 *)(result + 12);
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

void OneHotEncoderConfiguration.init(orderedCategories:sparseOutput:unknownBehavior:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_5_24();
  OUTLINED_FUNCTION_151_0(v4, 1);
  v6 = OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_4_20(v6);
  OUTLINED_FUNCTION_48_4();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v0 = v2;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_151_0((uint64_t)v0, 0);
  OUTLINED_FUNCTION_20_10((uint64_t)v0);
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_1();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_5_24();
  OUTLINED_FUNCTION_71(v4, 1);
  v6 = OUTLINED_FUNCTION_3_24();
  OUTLINED_FUNCTION_4_20(v6);
  sub_240C5E7DC(v2);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_71(v0, 0);
  OUTLINED_FUNCTION_20_10(v0);
  OUTLINED_FUNCTION_23_10();
  OUTLINED_FUNCTION_1();
}

void OneHotEncoderConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  type metadata accessor for OneHotEncoderConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v0, v8 - v7, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v10 + 32) = 0xD000000000000011;
  *(_QWORD *)(v10 + 40) = 0x8000000240F52900;
  *(_QWORD *)(v10 + 72) = &type metadata for OneHotEncoderConfiguration.OrderedCategories;
  OneHotEncoderConfiguration.orderedCategories.getter(v10 + 48);
  strcpy((char *)(v10 + 80), "sparseOutput");
  *(_BYTE *)(v10 + 93) = 0;
  *(_WORD *)(v10 + 94) = -5120;
  v11 = OUTLINED_FUNCTION_3_24();
  v12 = MEMORY[0x24BEE1328];
  *(_BYTE *)(v10 + 96) = *(_BYTE *)(v0 + *(int *)(v11 + 20));
  *(_QWORD *)(v10 + 120) = v12;
  *(_QWORD *)(v10 + 128) = 0xD000000000000010;
  *(_QWORD *)(v10 + 136) = 0x8000000240F52920;
  *(_QWORD *)(v10 + 168) = &type metadata for OneHotEncoderConfiguration.UnknownBehavior;
  OneHotEncoderConfiguration.unknownBehaviour.getter((BOOL *)(v10 + 144));
  v13 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t OneHotEncoderConfiguration.OrderedCategories.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void OneHotEncoderConfiguration.OrderedCategories.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)v1;
  if ((*(_BYTE *)(v1 + 8) & 1) != 0)
  {
    sub_240F1CF48();
    sub_240C7E07C(a1, v3);
  }
  else
  {
    sub_240F1CF48();
    sub_240C7C018();
  }
}

void static OneHotEncoderConfiguration.OrderedCategories.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      sub_240BEACE0(v4, v5);
  }
  else if ((v6 & 1) == 0)
  {
    sub_240BEAC24(v4, v5);
  }
}

uint64_t OneHotEncoderConfiguration.OrderedCategories.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_240F1CF3C();
  sub_240F1CF48();
  if ((v2 & 1) != 0)
    sub_240C7E07C((uint64_t)v4, v1);
  else
    sub_240C7C018();
  return sub_240F1CF78();
}

uint64_t sub_240CA1F94()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  _BYTE v4[72];

  v1 = *(_QWORD *)v0;
  v2 = *(_BYTE *)(v0 + 8);
  sub_240F1CF3C();
  sub_240F1CF48();
  if ((v2 & 1) != 0)
    sub_240C7E07C((uint64_t)v4, v1);
  else
    sub_240C7C018();
  return sub_240F1CF78();
}

MLModelSpecification::OneHotEncoderConfiguration::UnknownBehavior_optional __swiftcall OneHotEncoderConfiguration.UnknownBehavior.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if (rawValue == 1)
    v2 = 1;
  else
    v2 = 2;
  if (!rawValue)
    v2 = 0;
  *v1 = v2;
  return (MLModelSpecification::OneHotEncoderConfiguration::UnknownBehavior_optional)rawValue;
}

uint64_t OneHotEncoderConfiguration.UnknownBehavior.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

MLModelSpecification::OneHotEncoderConfiguration::UnknownBehavior_optional sub_240CA202C(Swift::Int *a1)
{
  return OneHotEncoderConfiguration.UnknownBehavior.init(rawValue:)(*a1);
}

void sub_240CA2034(uint64_t *a1@<X8>)
{
  *a1 = OneHotEncoderConfiguration.UnknownBehavior.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CA2054(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CA209C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for OneHotEncoderConfiguration()
{
  uint64_t result;

  result = qword_254360040;
  if (!qword_254360040)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240CA2120()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D398;
  if (!qword_25708D398)
  {
    v1 = type metadata accessor for Proto_OneHotEncoder(255);
    result = MEMORY[0x24268C2AC](&unk_240F29B7C, v1);
    atomic_store(result, (unint64_t *)&qword_25708D398);
  }
  return result;
}

unint64_t sub_240CA2164()
{
  unint64_t result;

  result = qword_25708D3A0;
  if (!qword_25708D3A0)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for OneHotEncoderConfiguration.OrderedCategories, &type metadata for OneHotEncoderConfiguration.OrderedCategories);
    atomic_store(result, (unint64_t *)&qword_25708D3A0);
  }
  return result;
}

unint64_t sub_240CA21A4()
{
  unint64_t result;

  result = qword_25708D3A8;
  if (!qword_25708D3A8)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for OneHotEncoderConfiguration.UnknownBehavior, &type metadata for OneHotEncoderConfiguration.UnknownBehavior);
    atomic_store(result, (unint64_t *)&qword_25708D3A8);
  }
  return result;
}

void sub_240CA21E8(_BYTE *a1@<X8>)
{
  *a1 = OneHotEncoderConfiguration.sparseOutput.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240CA2210(char *a1)
{
  OneHotEncoderConfiguration.sparseOutput.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for OneHotEncoderConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v4 = type metadata accessor for Proto_OneHotEncoder(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = (int *)v4;
    v7 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    *((_BYTE *)a1 + v6[5]) = *((_BYTE *)a2 + v6[5]);
    v16 = v6[6];
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = v6[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t destroy for OneHotEncoderConfiguration(uint64_t a1)
{
  uint64_t v2;
  int EnumCaseMultiPayload;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v2))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v4 = type metadata accessor for Proto_Int64Vector(0);
    else
      v4 = type metadata accessor for Proto_StringVector(0);
    v5 = a1 + *(int *)(v4 + 20);
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(type metadata accessor for Proto_OneHotEncoder(0) + 28);
  v8 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

_QWORD *initializeWithCopy for OneHotEncoderConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  int *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v4 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v12 = (int *)type metadata accessor for Proto_OneHotEncoder(0);
  *((_BYTE *)a1 + v12[5]) = *((_BYTE *)a2 + v12[5]);
  v13 = v12[6];
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v14[8] = v15[8];
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v16 = v12[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  return a1;
}

_QWORD *assignWithCopy for OneHotEncoderConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  int *v20;
  uint64_t v21;
  char *v22;
  char *v23;
  char v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;

  v4 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
      swift_bridgeObjectRetain();
      v12(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    v14 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v14 == 1)
      v15 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v15 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v16 = (char *)a1 + v15;
    v17 = (char *)a2 + v15;
    v18 = sub_240F1C930();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = (int *)type metadata accessor for Proto_OneHotEncoder(0);
  *((_BYTE *)a1 + v20[5]) = *((_BYTE *)a2 + v20[5]);
  v21 = v20[6];
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = v23[8];
  *(_QWORD *)v22 = *(_QWORD *)v23;
  v22[8] = v24;
  v25 = v20[7];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 24))(v26, v27, v28);
  return a1;
}

_QWORD *initializeWithTake for OneHotEncoderConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  v4 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v5 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
  }
  v11 = (int *)type metadata accessor for Proto_OneHotEncoder(0);
  *((_BYTE *)a1 + v11[5]) = *((_BYTE *)a2 + v11[5]);
  v12 = v11[6];
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v13[8] = v14[8];
  *(_QWORD *)v13 = *(_QWORD *)v14;
  v15 = v11[7];
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *assignWithTake for OneHotEncoderConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int EnumTagSinglePayload;
  int v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  int *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v4 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v4);
  v6 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v4);
  if (EnumTagSinglePayload)
  {
    if (!v6)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v8 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v8 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v4);
      goto LABEL_15;
    }
LABEL_7:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    goto LABEL_15;
  }
  if (v6)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    v13 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v13 == 1)
      v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v18 = (int *)type metadata accessor for Proto_OneHotEncoder(0);
  *((_BYTE *)a1 + v18[5]) = *((_BYTE *)a2 + v18[5]);
  v19 = v18[6];
  v20 = (char *)a1 + v19;
  v21 = (char *)a2 + v19;
  v20[8] = v21[8];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v22 = v18[7];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t getEnumTagSinglePayload for OneHotEncoderConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA2D1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_24();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for OneHotEncoderConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA2D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_24();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CA2D8C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_OneHotEncoder(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for OneHotEncoderConfiguration.OrderedCategories()
{
  return &type metadata for OneHotEncoderConfiguration.OrderedCategories;
}

uint64_t storeEnumTagSinglePayload for OneHotEncoderConfiguration.UnknownBehavior(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_240CA2E50 + 4 * byte_240F25035[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_240CA2E84 + 4 * byte_240F25030[v4]))();
}

uint64_t sub_240CA2E84(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CA2E8C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240CA2E94);
  return result;
}

uint64_t sub_240CA2EA0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240CA2EA8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_240CA2EAC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CA2EB4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for OneHotEncoderConfiguration.UnknownBehavior()
{
  return &type metadata for OneHotEncoderConfiguration.UnknownBehavior;
}

uint64_t OUTLINED_FUNCTION_3_24()
{
  return type metadata accessor for Proto_OneHotEncoder(0);
}

uint64_t OUTLINED_FUNCTION_4_20(uint64_t a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_BYTE *)(v1 + *(int *)(a1 + 20)) = 0;
  v3 = v1 + *(int *)(a1 + 24);
  *(_QWORD *)v3 = 0;
  *(_BYTE *)(v3 + 8) = v2;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_5_24()
{
  return type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
}

uint64_t OUTLINED_FUNCTION_20_10(uint64_t a1)
{
  uint64_t v1;

  return sub_240CA209C(a1, v1);
}

void OUTLINED_FUNCTION_23_10()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v1 + v4) = v0;
  *(_QWORD *)v5 = v2;
  *(_BYTE *)(v5 + 8) = v3;
}

void TextClassifierConfiguration.language.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_44();
}

void sub_240CA2F48(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  TextClassifierConfiguration.language.setter(v1, v2);
}

void TextClassifierConfiguration.language.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_156();
}

void TextClassifierConfiguration.language.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240CA2FE8(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
    OUTLINED_FUNCTION_156();
  }
}

void TextClassifierConfiguration.modelParameterData.getter()
{
  uint64_t v0;

  sub_240BF5610(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
  OUTLINED_FUNCTION_44();
}

void sub_240CA3070(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_240BF5610(*a1, v2);
  TextClassifierConfiguration.modelParameterData.setter(v1, v2);
}

void TextClassifierConfiguration.modelParameterData.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_240BF6AE0(*(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32));
  *(_QWORD *)(v2 + 24) = a1;
  *(_QWORD *)(v2 + 32) = a2;
  OUTLINED_FUNCTION_156();
}

void TextClassifierConfiguration.modelParameterData.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  v4 = *(_QWORD *)(v1 + 32);
  *a1 = v3;
  a1[1] = v4;
  sub_240BF5610(v3, v4);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CA3110(uint64_t *a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_240BF5610(*a1, v2);
    OUTLINED_FUNCTION_6_9();
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v2;
    return sub_240BF6AE0(v4, v2);
  }
  else
  {
    result = OUTLINED_FUNCTION_6_9();
    *(_QWORD *)(v3 + 24) = v4;
    *(_QWORD *)(v3 + 32) = v2;
  }
  return result;
}

void TextClassifierConfiguration.classLabels.getter(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (uint64_t *)((char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_0();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x24BDAC7A8](v7);
  MEMORY[0x24BDAC7A8](v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v14 = v13 - v12;
  v15 = OUTLINED_FUNCTION_3_25();
  OUTLINED_FUNCTION_30_12(*(int *)(v15 + 28));
  if (__swift_getEnumTagSinglePayload(v14, 1, v5) == 1)
  {
    v16 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_26_7();
    OUTLINED_FUNCTION_23_8();
    OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_91_1((uint64_t)v9, (uint64_t)v4);
    v16 = *v4;
    OUTLINED_FUNCTION_329();
    OUTLINED_FUNCTION_23_11((uint64_t)v4);
    OUTLINED_FUNCTION_36_12();
  }
  *a1 = v16;
}

void sub_240CA32DC(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_bridgeObjectRetain();
  TextClassifierConfiguration.classLabels.setter(&v1);
}

void TextClassifierConfiguration.classLabels.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  v4 = *a1;
  OUTLINED_FUNCTION_48_4();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_337();
  *v1 = v4;
  swift_bridgeObjectRelease();
  v5 = OUTLINED_FUNCTION_4_21();
  v8 = OUTLINED_FUNCTION_2_22((uint64_t)v1, v6, v7, v5);
  OUTLINED_FUNCTION_17_18(v8);
  OUTLINED_FUNCTION_156();
}

void (*TextClassifierConfiguration.classLabels.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  void *v7;
  size_t v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[1] = v1;
  v4 = OUTLINED_FUNCTION_48_4();
  v3[2] = v4;
  v5 = (uint64_t *)OUTLINED_FUNCTION_17_5(v4);
  v3[3] = v5;
  v6 = OUTLINED_FUNCTION_4_21();
  v3[4] = v6;
  v7 = OUTLINED_FUNCTION_119();
  v3[5] = v7;
  v3[6] = OUTLINED_FUNCTION_119();
  v3[7] = OUTLINED_FUNCTION_119();
  v8 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8) - 8) + 64);
  v3[8] = malloc(v8);
  v9 = malloc(v8);
  v3[9] = v9;
  v10 = *(int *)(OUTLINED_FUNCTION_3_25() + 28);
  *((_DWORD *)v3 + 20) = v10;
  OUTLINED_FUNCTION_30_12(v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v6) == 1)
  {
    v11 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_26_7();
    OUTLINED_FUNCTION_23_8();
    OUTLINED_FUNCTION_25_10();
    OUTLINED_FUNCTION_91_1((uint64_t)v7, (uint64_t)v5);
    v11 = *v5;
    OUTLINED_FUNCTION_329();
    OUTLINED_FUNCTION_23_11((uint64_t)v5);
    OUTLINED_FUNCTION_36_12();
  }
  *v3 = v11;
  return sub_240CA34D4;
}

void sub_240CA34D4(uint64_t a1, char a2)
{
  _QWORD *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v3 = *(_QWORD **)a1;
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  swift_bridgeObjectRetain();
  v5 = (void *)v3[9];
  v6 = (void *)v3[6];
  v7 = (void *)v3[7];
  v8 = (void *)v3[3];
  v9 = (void *)v3[5];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_31_8();
    OUTLINED_FUNCTION_6_17();
    swift_bridgeObjectRelease();
  }
  else
  {
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_31_8();
    OUTLINED_FUNCTION_6_17();
  }
  free(v5);
  free(v4);
  free(v7);
  free(v6);
  free(v9);
  free(v8);
  free(v3);
}

uint64_t TextClassifierConfiguration.stringClassLabels.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;

  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = (uint64_t *)(v4 - v3);
  v6 = OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_0();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x24BDAC7A8](v8);
  v13 = (char *)&v20 - v12;
  MEMORY[0x24BDAC7A8](v11);
  v15 = (char *)&v20 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_48();
  v17 = OUTLINED_FUNCTION_3_25();
  sub_240CA3BD0(v0 + *(int *)(v17 + 28), v1);
  if (__swift_getEnumTagSinglePayload(v1, 1, v6) == 1)
    return MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_91_1(v1, (uint64_t)v15);
  sub_240BE0BF4((uint64_t)v15, (uint64_t)v13, type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels);
  OUTLINED_FUNCTION_91_1((uint64_t)v13, (uint64_t)v10);
  sub_240BE0B90((uint64_t)v10, (uint64_t)v5, type metadata accessor for Proto_StringVector);
  v18 = *v5;
  OUTLINED_FUNCTION_329();
  sub_240BE27A0((uint64_t)v5, type metadata accessor for Proto_StringVector);
  OUTLINED_FUNCTION_23_11((uint64_t)v15);
  return v18;
}

void sub_240CA373C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  TextClassifierConfiguration.stringClassLabels.setter(v0);
}

void TextClassifierConfiguration.stringClassLabels.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_48_4();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v1 = a1;
  v4 = OUTLINED_FUNCTION_4_21();
  v7 = OUTLINED_FUNCTION_2_22((uint64_t)v1, v5, v6, v4);
  OUTLINED_FUNCTION_17_18(v7);
  OUTLINED_FUNCTION_156();
}

void TextClassifierConfiguration.stringClassLabels.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  a1[2] = (uint64_t)OUTLINED_FUNCTION_17_5(v3);
  *a1 = TextClassifierConfiguration.stringClassLabels.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CA3810(uint64_t *a1, char a2)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  OUTLINED_FUNCTION_48_4();
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_337();
    *v3 = v4;
    v5 = OUTLINED_FUNCTION_4_21();
    v8 = OUTLINED_FUNCTION_2_22((uint64_t)v3, v6, v7, v5);
    OUTLINED_FUNCTION_18_11(v8);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_337();
    *v3 = v4;
    v9 = OUTLINED_FUNCTION_4_21();
    v12 = OUTLINED_FUNCTION_2_22((uint64_t)v3, v10, v11, v9);
    OUTLINED_FUNCTION_18_11(v12);
  }
  free(v3);
}

void TextClassifierConfiguration.init()(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_OWORD *)(a1 + 24) = xmmword_240F1FDE0;
  v1 = a1 + *(int *)(OUTLINED_FUNCTION_3_25() + 28);
  v2 = OUTLINED_FUNCTION_4_21();
  OUTLINED_FUNCTION_18_0(v1, v3, v4, v2);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_156();
}

uint64_t TextClassifierConfiguration.customMirror.getter@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v24[2];

  v24[1] = a1;
  v24[0] = sub_240F1CF90();
  v3 = *(_QWORD *)(v24[0] - 8);
  MEMORY[0x24BDAC7A8](v24[0]);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for TextClassifierConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4((uint64_t)v1, v2, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240F1E9E0;
  *(_QWORD *)(v12 + 32) = 0x6E6F697369766572;
  *(_QWORD *)(v12 + 40) = 0xE800000000000000;
  v13 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 48) = *(unsigned int *)v1;
  *(_QWORD *)(v12 + 72) = v13;
  *(_QWORD *)(v12 + 80) = 0x65676175676E616CLL;
  v15 = v1[1];
  v14 = v1[2];
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 88) = 0xE800000000000000;
  *(_QWORD *)(v12 + 96) = v15;
  *(_QWORD *)(v12 + 104) = v14;
  *(_QWORD *)(v12 + 120) = v16;
  *(_QWORD *)(v12 + 128) = 0xD000000000000012;
  v17 = v1[3];
  v18 = v1[4];
  v19 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(v12 + 136) = 0x8000000240F528A0;
  *(_QWORD *)(v12 + 144) = v17;
  *(_QWORD *)(v12 + 152) = v18;
  *(_QWORD *)(v12 + 168) = v19;
  *(_QWORD *)(v12 + 176) = 0x62614C7373616C63;
  *(_QWORD *)(v12 + 184) = 0xEB00000000736C65;
  *(_QWORD *)(v12 + 216) = &type metadata for TextClassifierConfiguration.Labels;
  swift_bridgeObjectRetain();
  sub_240BF5610(v17, v18);
  TextClassifierConfiguration.classLabels.getter((_QWORD *)(v12 + 192));
  v20 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0((uint64_t)v9, v21, v22, v20);
  (*(void (**)(uint64_t, _QWORD, _QWORD))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v24[0]);
  return sub_240F1CFA8();
}

void TextClassifierConfiguration.Labels.hash(into:)()
{
  sub_240F1CF48();
  sub_240C7C018();
}

void static TextClassifierConfiguration.Labels.== infix(_:_:)(_QWORD **a1, _QWORD **a2)
{
  sub_240BEAC24(*a1, *a2);
}

uint64_t TextClassifierConfiguration.Labels.hashValue.getter()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  sub_240C7C018();
  return sub_240F1CF78();
}

uint64_t sub_240CA3BD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CA3C18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TextClassifierConfiguration()
{
  uint64_t result;

  result = qword_254360178;
  if (!qword_254360178)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240CA3C9C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D3B0;
  if (!qword_25708D3B0)
  {
    v1 = type metadata accessor for Proto_CoreMLModels_TextClassifier(255);
    result = MEMORY[0x24268C2AC](&unk_240F3AE3C, v1);
    atomic_store(result, (unint64_t *)&qword_25708D3B0);
  }
  return result;
}

unint64_t sub_240CA3CE0()
{
  unint64_t result;

  result = qword_25708D3B8;
  if (!qword_25708D3B8)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for TextClassifierConfiguration.Labels, &type metadata for TextClassifierConfiguration.Labels);
    atomic_store(result, (unint64_t *)&qword_25708D3B8);
  }
  return result;
}

void sub_240CA3D1C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  TextClassifierConfiguration.language.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240CA3D44(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  TextClassifierConfiguration.modelParameterData.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240CA3D6C(_QWORD *a1@<X8>)
{
  TextClassifierConfiguration.classLabels.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CA3D8C(uint64_t *a1@<X8>)
{
  *a1 = TextClassifierConfiguration.stringClassLabels.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for TextClassifierConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[3];
    v9 = a2[4];
    swift_bridgeObjectRetain();
    sub_240BF5610(v8, v9);
    a1[3] = v8;
    a1[4] = v9;
    v10 = *(int *)(v6 + 28);
    v11 = (uint64_t *)((char *)a1 + v10);
    v12 = (uint64_t *)((char *)a2 + v10);
    v13 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
    {
      v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    }
    else
    {
      *v11 = *v12;
      v16 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v17 = (char *)v11 + v16;
      v18 = (char *)v12 + v16;
      v19 = sub_240F1C930();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v17, v18, v19);
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
    }
    v21 = *(int *)(v6 + 32);
    v22 = (char *)a1 + v21;
    v23 = (char *)a2 + v21;
    v24 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  }
  return a1;
}

uint64_t destroy for TextClassifierConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  swift_bridgeObjectRelease();
  sub_240BF6AE0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  v2 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
  v3 = a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    swift_bridgeObjectRelease();
    v5 = v3 + *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  }
  v7 = a1 + *(int *)(v2 + 32);
  v8 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
}

uint64_t initializeWithCopy for TextClassifierConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 24);
  v6 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_240BF5610(v5, v6);
  *(_QWORD *)(a1 + 24) = v5;
  *(_QWORD *)(a1 + 32) = v6;
  v7 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
  v8 = *(int *)(v7 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    *v9 = *v10;
    v13 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v14 = (char *)v9 + v13;
    v15 = (char *)v10 + v13;
    v16 = sub_240F1C930();
    v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
    swift_bridgeObjectRetain();
    v17(v14, v15, v16);
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v18 = *(int *)(v7 + 32);
  v19 = a1 + v18;
  v20 = a2 + v18;
  v21 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
  return a1;
}

uint64_t assignWithCopy for TextClassifierConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 24);
  v5 = *(_QWORD *)(a2 + 32);
  sub_240BF5610(v4, v5);
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = v5;
  sub_240BF6AE0(v6, v7);
  v8 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
  v9 = *(int *)(v8 + 28);
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  v12 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (!EnumTagSinglePayload)
  {
    if (!v14)
    {
      *v10 = *v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v26 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v27 = (char *)v10 + v26;
      v28 = (char *)v11 + v26;
      v29 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
      goto LABEL_7;
    }
    sub_240BE27A0((uint64_t)v10, type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_7;
  }
  *v10 = *v11;
  v15 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
  v16 = (char *)v10 + v15;
  v17 = (char *)v11 + v15;
  v18 = sub_240F1C930();
  v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
  swift_bridgeObjectRetain();
  v19(v16, v17, v18);
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
LABEL_7:
  v21 = *(int *)(v8 + 32);
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 24))(v22, v23, v24);
  return a1;
}

uint64_t initializeWithTake for TextClassifierConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
  v5 = *(int *)(v4 + 28);
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *v6 = *v7;
    v10 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v11 = (char *)v6 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v14 = *(int *)(v4 + 32);
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

uint64_t assignWithTake for TextClassifierConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a1 + 24);
  v6 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_240BF6AE0(v5, v6);
  v7 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
  v8 = *(int *)(v7 + 28);
  v9 = (_QWORD *)(a1 + v8);
  v10 = (_QWORD *)(a2 + v8);
  v11 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    if (!v13)
    {
      *v9 = *v10;
      swift_bridgeObjectRelease();
      v24 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v25 = (char *)v9 + v24;
      v26 = (char *)v10 + v24;
      v27 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 40))(v25, v26, v27);
      goto LABEL_7;
    }
    sub_240BE27A0((uint64_t)v9, type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels);
    goto LABEL_6;
  }
  if (v13)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDF8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  *v9 = *v10;
  v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
  v15 = (char *)v9 + v14;
  v16 = (char *)v10 + v14;
  v17 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
LABEL_7:
  v19 = *(int *)(v7 + 32);
  v20 = a1 + v19;
  v21 = a2 + v19;
  v22 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 40))(v20, v21, v22);
  return a1;
}

uint64_t getEnumTagSinglePayload for TextClassifierConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA4608(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_25();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TextClassifierConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA4644(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_25();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CA4678()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_CoreMLModels_TextClassifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for TextClassifierConfiguration.Labels()
{
  return &type metadata for TextClassifierConfiguration.Labels;
}

uint64_t OUTLINED_FUNCTION_2_22(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 0, 1, a4);
  return type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
}

uint64_t OUTLINED_FUNCTION_3_25()
{
  return type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
}

uint64_t OUTLINED_FUNCTION_4_21()
{
  return type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
}

uint64_t OUTLINED_FUNCTION_6_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  return sub_240CA3C18(v0, v1);
}

uint64_t OUTLINED_FUNCTION_17_18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_240CA3C18(v2, v1 + *(int *)(a1 + 28));
}

uint64_t OUTLINED_FUNCTION_18_11(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return sub_240CA3C18(v1, v2 + *(int *)(a1 + 28));
}

void OUTLINED_FUNCTION_23_11(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE27A0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_30_12@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return sub_240CA3BD0(v1 + a1, v2);
}

uint64_t *sub_240CA4778(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      v10 = sub_240F1C930();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v11 = *(int *)(a3 + 20);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
  }
  return a1;
}

uint64_t type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_2543604F0);
}

uint64_t sub_240CA488C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    v5 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a1, v5);
  }
  v6 = a1 + *(int *)(a2 + 20);
  v7 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
}

char *sub_240CA4904(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

char *sub_240CA49D8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v16 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 24))(a1, a2, v16);
      goto LABEL_7;
    }
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 24))(v12, v13, v14);
  return a1;
}

char *sub_240CA4B04(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  v6 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v9 = *(int *)(a3 + 20);
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

char *sub_240CA4BD8(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v16;

  v6 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (!EnumTagSinglePayload)
  {
    if (!v8)
    {
      v16 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 40))(a1, a2, v16);
      goto LABEL_7;
    }
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    goto LABEL_7;
  }
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(a1, a2, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
LABEL_7:
  v11 = *(int *)(a3 + 20);
  v12 = &a1[v11];
  v13 = &a2[v11];
  v14 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  return a1;
}

uint64_t sub_240CA4D04()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA4D10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_240CA4D78()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA4D84(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_20_0();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360508);
}

void sub_240CA4E08()
{
  unint64_t v0;
  unint64_t v1;

  sub_240CA4E8C();
  if (v0 <= 0x3F)
  {
    sub_240F1C930();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240CA4E8C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_254360500)
  {
    type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(255);
    v0 = sub_240F1CD98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_254360500);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for SoundAnalysisPreprocessorKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_240CA4F64()
{
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA4FA0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_15();
  return __swift_getEnumTagSinglePayload(v2, a2, v4);
}

uint64_t type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D3C8);
}

uint64_t sub_240CA4FE0()
{
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA502C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_15();
  return __swift_storeEnumTagSinglePayload(v2, a2, a2, v4);
}

uint64_t sub_240CA505C(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = sub_240F1C930();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t _s25BroadcastToLikeParametersVwxx_0(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_20_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void sub_240CA50E8()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 16));
  OUTLINED_FUNCTION_44();
}

void sub_240CA5118()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 24));
  OUTLINED_FUNCTION_44();
}

void sub_240CA5148()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 32));
  OUTLINED_FUNCTION_44();
}

void sub_240CA5178()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_0_15();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v0 - 8) + 40));
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CA51A8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA51B4()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA51C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D438);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  v13 = v10 - v9 + *(int *)(v12 + 48);
  sub_240CA6440(a1, v10 - v9);
  sub_240CA6440(a2, v13);
  sub_240C2837C(v11, v7, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
  LOBYTE(a2) = _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersV2eeoiySbAE_AEtFZ_0(v7, v13);
  OUTLINED_FUNCTION_25_1(v13);
  OUTLINED_FUNCTION_25_1(v7);
  return a2 & 1;
}

uint64_t sub_240CA52A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240CA52F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9208);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9208);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240F1DA30;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 20;
  *(_QWORD *)v5 = "vggish";
  *(_QWORD *)(v5 + 8) = 6;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_240F1CC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_240F1CC18();
}

void sub_240CA53F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v9;
  char v10;

  v5 = v3;
  while (1)
  {
    v9 = sub_240F1C990();
    if (v4 || (v10 & 1) != 0)
      break;
    if (v9 == 20)
      sub_240CA5464(v5, a1, a2, a3);
  }
}

void sub_240CA5464(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int EnumTagSinglePayload;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v29 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v29 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D420);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v29 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v29 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v29 - v23, 1, 1, v5);
  v31 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708D3C0);
  v30 = v13;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708D3C0);
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
    sub_240BE0B68((uint64_t)v24, &qword_25708D420);
    sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
    sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
  }
  v25 = v34;
  sub_240BE18B8(&qword_25708D3D8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25554);
  sub_240F1CAC8();
  if (v25)
  {
    v26 = (uint64_t)v24;
LABEL_8:
    sub_240BE0B68(v26, &qword_25708D420);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708D420);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708D420);
    v26 = (uint64_t)v22;
    goto LABEL_8;
  }
  v27 = v33;
  sub_240C2837C((uint64_t)v22, v33, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708D420);
  v28 = v31;
  sub_240BE0B68(v31, &qword_25708D3C0);
  sub_240C2837C(v27, v28, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
  __swift_storeEnumTagSinglePayload(v28, 0, 1, v30);
}

void sub_240CA580C()
{
  uint64_t v0;
  uint64_t v1;

  sub_240CA588C(v0);
  if (!v1)
  {
    type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing(0);
    sub_240F1C918();
  }
}

void sub_240CA588C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708D3C0);
  v8 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708D3C0);
  }
  else
  {
    sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
    sub_240BE18B8(&qword_25708D3D8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25554);
    sub_240F1CC00();
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
  }
}

uint64_t sub_240CA59F8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  void (*v33)(char *, uint64_t, uint64_t);
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;

  v39 = OUTLINED_FUNCTION_0_15();
  v44 = *(_QWORD *)(v39 - 8);
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_11_3();
  v43 = (char *)(v4 - v5);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (char *)&v39 - v7;
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D430);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_24_1();
  v16 = v15 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_3();
  v20 = v18 - v19;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v39 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v39 - v25;
  v40 = v2;
  OUTLINED_FUNCTION_9_3(v2, (uint64_t)&v39 - v25);
  v42 = a2;
  OUTLINED_FUNCTION_9_3(a2, (uint64_t)v24);
  v27 = v16 + *(int *)(v12 + 48);
  OUTLINED_FUNCTION_9_3((uint64_t)v26, v16);
  OUTLINED_FUNCTION_9_3((uint64_t)v24, v27);
  OUTLINED_FUNCTION_8_2(v16);
  if (!v28)
  {
    sub_240C283B4(v16, v20, &qword_25708D3C0);
    OUTLINED_FUNCTION_8_2(v27);
    if (!v28)
    {
      sub_240C2837C(v27, v11, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
      v29 = sub_240CA51C4(v20, v11);
      OUTLINED_FUNCTION_25_1(v11);
      OUTLINED_FUNCTION_15_2((uint64_t)v24);
      OUTLINED_FUNCTION_15_2((uint64_t)v26);
      OUTLINED_FUNCTION_25_1(v20);
      OUTLINED_FUNCTION_15_2(v16);
      if ((v29 & 1) != 0)
        goto LABEL_11;
LABEL_12:
      v36 = 0;
      return v36 & 1;
    }
    OUTLINED_FUNCTION_166((uint64_t)v24);
    OUTLINED_FUNCTION_166((uint64_t)v26);
    sub_240BE10B8(v20, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
LABEL_9:
    sub_240BE0B68(v16, &qword_25708D430);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_166((uint64_t)v24);
  OUTLINED_FUNCTION_166((uint64_t)v26);
  OUTLINED_FUNCTION_8_2(v27);
  if (!v28)
    goto LABEL_9;
  sub_240BE0B68(v16, &qword_25708D3C0);
LABEL_11:
  v30 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing(0);
  v31 = v41;
  v32 = v44;
  v33 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
  v34 = v39;
  v33(v41, v40 + *(int *)(v30 + 20), v39);
  v35 = v43;
  v33(v43, v42 + *(int *)(v30 + 20), v34);
  sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v36 = sub_240F1CC90();
  v37 = *(void (**)(uint64_t, uint64_t))(v32 + 8);
  v37((uint64_t)v35, v34);
  v37((uint64_t)v31, v34);
  return v36 & 1;
}

unint64_t sub_240CA5D1C()
{
  return 0xD00000000000002DLL;
}

void sub_240CA5D38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240CA53F4(a1, a2, a3);
}

void sub_240CA5D4C()
{
  sub_240CA580C();
}

uint64_t sub_240CA5D60()
{
  sub_240BE18B8(&qword_25708D418, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F2551C);
  return sub_240F1C960();
}

uint64_t sub_240CA5DB0@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AED8, (uint64_t)qword_2570F9208, a1);
}

uint64_t sub_240CA5DCC()
{
  sub_240BE18B8(&qword_25708D3F0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F255CC);
  return sub_240F1CAF8();
}

uint64_t sub_240CA5E0C()
{
  return sub_240C4B5F8(type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, &qword_25708D3F8, (uint64_t)&unk_240F2548C);
}

uint64_t sub_240CA5E38()
{
  sub_240BE18B8(&qword_25708D3F0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F255CC);
  return sub_240F1CB04();
}

uint64_t sub_240CA5E8C()
{
  uint64_t result;

  result = sub_240F1CCE4();
  qword_2570F9220 = 0xD00000000000002DLL;
  *(_QWORD *)algn_2570F9228 = 0x8000000240F52940;
  return result;
}

uint64_t *sub_240CA5EF4()
{
  if (qword_25708AEE0 != -1)
    swift_once();
  return &qword_2570F9220;
}

uint64_t sub_240CA5F34()
{
  uint64_t v0;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9230);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9230);
  return sub_240F1CC24();
}

uint64_t sub_240CA5F7C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  do
    result = sub_240F1C990();
  while (!v0 && (v2 & 1) == 0);
  return result;
}

uint64_t sub_240CA5FBC()
{
  return sub_240F1C918();
}

uint64_t _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, uint64_t, uint64_t);
  void (*v14)(char *, uint64_t);
  uint64_t v16;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
  v6 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_3();
  v9 = (char *)(v7 - v8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - v11;
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v13((char *)&v16 - v11, a1, v4);
  v13(v9, a2, v4);
  sub_240BE18B8(&qword_25708BD88, v5, MEMORY[0x24BE5BF20]);
  LOBYTE(a2) = sub_240F1CC90();
  v14 = *(void (**)(char *, uint64_t))(v6 + 8);
  v14(v9, v4);
  v14(v12, v4);
  return a2 & 1;
}

uint64_t sub_240CA60D4()
{
  uint64_t v0;

  sub_240CA5EF4();
  v0 = qword_2570F9220;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_240CA610C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_240CA6144(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*sub_240CA617C())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_240CA618C()
{
  return sub_240CA5F7C();
}

uint64_t sub_240CA61A0()
{
  return sub_240CA5FBC();
}

uint64_t sub_240CA61B4()
{
  sub_240BE18B8(&qword_25708D428, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F2542C);
  return sub_240F1C960();
}

uint64_t sub_240CA6204@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AEE8, (uint64_t)qword_2570F9230, a1);
}

uint64_t sub_240CA6220()
{
  sub_240BE18B8(&qword_25708D3D8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25554);
  return sub_240F1CAF8();
}

uint64_t sub_240CA6260()
{
  return sub_240C4B5F8(type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, &qword_25708D3E0, (uint64_t)&unk_240F25644);
}

uint64_t sub_240CA628C()
{
  sub_240BE18B8(&qword_25708D3D8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25554);
  return sub_240F1CB04();
}

void sub_240CA62E0()
{
  sub_240BE18B8(&qword_25708D3D8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25554);
}

void sub_240CA630C()
{
  sub_240BE18B8(&qword_25708D3E0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25644);
}

void sub_240CA6338()
{
  sub_240BE18B8(&qword_25708D3E8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F25464);
}

void sub_240CA6364()
{
  sub_240BE18B8(&qword_25708D3F0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F255CC);
}

void sub_240CA6390()
{
  sub_240BE18B8(&qword_25708D3F8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F2548C);
}

void sub_240CA63BC()
{
  sub_240BE18B8(&qword_25708D400, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F253DC);
}

void sub_240CA63E8()
{
  sub_240BE18B8(&qword_25708D408, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F254CC);
}

void sub_240CA6414()
{
  sub_240BE18B8(&qword_25708D410, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F253B4);
}

uint64_t sub_240CA6440(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_15()
{
  return sub_240F1C930();
}

void NeuralNetworkClassifier.layers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  OUTLINED_FUNCTION_22();
  v3 = type metadata accessor for NeuralNetwork.Layer();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_18_1();
    sub_240BF066C();
    type metadata accessor for Proto_NeuralNetworkLayer(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_7_4();
      OUTLINED_FUNCTION_21_2();
      if (v6)
      {
        OUTLINED_FUNCTION_10_4(v5);
        sub_240BF066C();
      }
      OUTLINED_FUNCTION_0_1();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240CA6564()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetworkClassifier.layers.setter(v0);
}

void NeuralNetworkClassifier.layers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_3(a1, (uint64_t)&v3, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void NeuralNetworkClassifier.layers.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetworkClassifier.layers.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void NeuralNetworkClassifier.preprocessors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  OUTLINED_FUNCTION_22();
  v3 = type metadata accessor for NeuralNetwork.Preprocessor(0);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_18_1();
    sub_240BF06C4();
    type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_7_4();
      OUTLINED_FUNCTION_21_2();
      if (v6)
      {
        OUTLINED_FUNCTION_10_4(v5);
        sub_240BF06C4();
      }
      OUTLINED_FUNCTION_0_1();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240CA66D4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetworkClassifier.preprocessors.setter(v0);
}

void NeuralNetworkClassifier.preprocessors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_3(a1, (uint64_t)&v3, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_12_1();
}

void NeuralNetworkClassifier.preprocessors.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetworkClassifier.preprocessors.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void NeuralNetworkClassifier.arrayInputShapeMapping.getter(BOOL *a1@<X8>)
{
  uint64_t v1;
  BOOL v2;

  v2 = *(_BYTE *)(v1 + 24) == 1 && *(_QWORD *)(v1 + 16) != 0;
  *a1 = v2;
}

void sub_240CA67A4(_BYTE *a1@<X8>)
{
  BOOL v2;

  NeuralNetworkClassifier.arrayInputShapeMapping.getter(&v2);
  *a1 = v2;
}

unsigned __int8 *sub_240CA67DC(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetworkClassifier.arrayInputShapeMapping.setter(&v2);
}

unsigned __int8 *NeuralNetworkClassifier.arrayInputShapeMapping.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

uint64_t *(*NeuralNetworkClassifier.arrayInputShapeMapping.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  BOOL v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_BYTE *)(v1 + 24) == 1 && *(_QWORD *)(v1 + 16) != 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C28BEC;
}

void NeuralNetworkClassifier.imageInputShapeMapping.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + 40);
}

void sub_240CA6868(_BYTE *a1@<X8>)
{
  char v2;

  NeuralNetworkClassifier.imageInputShapeMapping.getter(&v2);
  *a1 = v2;
}

void NeuralNetworkClassifier.imageInputShapeMapping.setter()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 1;
  *(_BYTE *)(v0 + 40) = 1;
}

uint64_t *(*NeuralNetworkClassifier.imageInputShapeMapping.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 40);
  return sub_240C28C70;
}

void NeuralNetworkClassifier.classLabels.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v3 = OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v15 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  v12 = OUTLINED_FUNCTION_1_19();
  sub_240CA7500(v1 + *(int *)(v12 + 32), v11);
  if (__swift_getEnumTagSinglePayload(v11, 1, v3) == 1)
  {
    v13 = 0;
    v14 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90(v11, (uint64_t)v7, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    OUTLINED_FUNCTION_35_10((uint64_t)v7);
    sub_240CA6B50();
    v14 = v15;
    v13 = v16;
    sub_240BE27A0((uint64_t)v7, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
  }
  *(_QWORD *)a1 = v14;
  *(_BYTE *)(a1 + 8) = v13;
}

void sub_240CA69F4(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  NeuralNetworkClassifier.classLabels.getter((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

void sub_240CA6A34(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = v1;
  swift_bridgeObjectRetain();
  NeuralNetworkClassifier.classLabels.setter(&v2);
}

void NeuralNetworkClassifier.classLabels.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  v5 = *a1;
  if ((a1[1] & 1) != 0)
  {
    OUTLINED_FUNCTION_48_4();
    OUTLINED_FUNCTION_55_0();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    *v1 = v5;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_55_0();
    sub_240C5E7DC(v7);
  }
  v6 = OUTLINED_FUNCTION_9_18();
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_9_18();
  __swift_storeEnumTagSinglePayload((uint64_t)v1, 0, 1, v6);
  v8 = OUTLINED_FUNCTION_1_19();
  sub_240CA7548((uint64_t)v1, v2 + *(int *)(v8 + 32));
  OUTLINED_FUNCTION_156();
}

void sub_240CA6B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t);
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  OUTLINED_FUNCTION_48_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v7 = (uint64_t *)(v6 - v5);
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v14 = v13 - v12;
  sub_240BE0BF4(v1, v13 - v12, v15);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_240BE0B90(v14, (uint64_t)v10, type metadata accessor for Proto_Int64Vector);
    v20 = *(_QWORD *)v10;
    v21 = *(_QWORD *)(*(_QWORD *)v10 + 16);
    if (v21)
    {
      v27 = v3;
      v28 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_240BF080C();
      v17 = v28;
      v22 = (uint64_t *)(v20 + 32);
      v23 = *(_QWORD *)(v28 + 16);
      do
      {
        v25 = *v22++;
        v24 = v25;
        v28 = v17;
        v26 = *(_QWORD *)(v17 + 24);
        if (v23 >= v26 >> 1)
        {
          OUTLINED_FUNCTION_10_4(v26);
          sub_240BF080C();
          v17 = v28;
        }
        *(_QWORD *)(v17 + 16) = v23 + 1;
        *(_QWORD *)(v17 + 8 * v23++ + 32) = v24;
        --v21;
      }
      while (v21);
      v3 = v27;
    }
    else
    {
      swift_bridgeObjectRetain();
      v17 = MEMORY[0x24BEE4AF8];
    }
    sub_240BE27A0(v1, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    swift_bridgeObjectRelease();
    v19 = type metadata accessor for Proto_Int64Vector;
    v18 = (uint64_t)v10;
  }
  else
  {
    sub_240BE27A0(v1, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    sub_240BE0B90(v14, (uint64_t)v7, type metadata accessor for Proto_StringVector);
    v17 = *v7;
    OUTLINED_FUNCTION_329();
    v18 = (uint64_t)v7;
    v19 = type metadata accessor for Proto_StringVector;
  }
  sub_240BE27A0(v18, v19);
  *(_QWORD *)v3 = v17;
  *(_BYTE *)(v3 + 8) = EnumCaseMultiPayload != 1;
  OUTLINED_FUNCTION_1();
}

void (*NeuralNetworkClassifier.classLabels.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v12;
  char v13;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[2] = v1;
  v4 = OUTLINED_FUNCTION_9_18();
  v3[3] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v3[4] = malloc(v5);
  v6 = malloc(v5);
  v3[5] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
  v3[6] = OUTLINED_FUNCTION_61_2();
  v3[7] = OUTLINED_FUNCTION_61_2();
  v7 = OUTLINED_FUNCTION_61_2();
  v3[8] = v7;
  v8 = *(int *)(OUTLINED_FUNCTION_1_19() + 32);
  *((_DWORD *)v3 + 3) = v8;
  sub_240CA7500(v1 + v8, (uint64_t)v7);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4) == 1)
  {
    v9 = 0;
    v10 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    sub_240BE0B90((uint64_t)v7, (uint64_t)v6, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    OUTLINED_FUNCTION_35_10((uint64_t)v6);
    sub_240CA6B50();
    v10 = v12;
    v9 = v13;
    sub_240BE27A0((uint64_t)v6, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
  }
  *v3 = v10;
  *((_BYTE *)v3 + 8) = v9;
  return sub_240CA6E80;
}

void sub_240CA6E80()
{
  char *v0;
  void *v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t **v5;
  uint64_t *v6;
  uint64_t v7;
  void *v8;
  char v9;
  char *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22();
  v6 = *v5;
  v7 = **v5;
  v8 = (void *)(*v5)[3];
  if ((v9 & 1) != 0)
  {
    v10 = (char *)v6[6];
    if (((*v5)[1] & 1) != 0)
    {
      v0 = &v10[*(int *)(OUTLINED_FUNCTION_48_4() + 20)];
      OUTLINED_FUNCTION_59_2();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      OUTLINED_FUNCTION_59_2();
      sub_240C5E7DC(v7);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_31_5((uint64_t)v0);
    sub_240CA7548((uint64_t)v0, v4 + v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    v10 = (char *)v6[7];
    if (((*v5)[1] & 1) != 0)
    {
      v0 = &v10[*(int *)(OUTLINED_FUNCTION_48_4() + 20)];
      OUTLINED_FUNCTION_329();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      v11 = OUTLINED_FUNCTION_329();
      sub_240C5E7DC(v11);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_31_5((uint64_t)v10);
    sub_240CA7548((uint64_t)v10, v4 + v3);
  }
  free(v8);
  free(v10);
  free(v0);
  free(v1);
  free(v2);
  free(v6);
}

void NeuralNetworkClassifier.labelProbabilityLayerName.getter()
{
  OUTLINED_FUNCTION_1_19();
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_44();
}

void sub_240CA6FF0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  NeuralNetworkClassifier.labelProbabilityLayerName.setter(v1, v2);
}

void NeuralNetworkClassifier.labelProbabilityLayerName.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_1_19() + 36));
  swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  OUTLINED_FUNCTION_156();
}

void NeuralNetworkClassifier.labelProbabilityLayerName.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  *(_QWORD *)(a1 + 16) = v1;
  v3 = *(int *)(OUTLINED_FUNCTION_1_19() + 36);
  *(_DWORD *)(a1 + 24) = v3;
  v4 = (_QWORD *)(v1 + v3);
  v5 = v4[1];
  *(_QWORD *)a1 = *v4;
  *(_QWORD *)(a1 + 8) = v5;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240CA70AC(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = (_QWORD *)(a1[2] + *((int *)a1 + 6));
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_156();
  }
}

uint64_t NeuralNetworkClassifier.init(layers:preprocessors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t updated;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[8];
  _BYTE v16[16];

  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v7 = OUTLINED_FUNCTION_1_19();
  v8 = OUTLINED_FUNCTION_9_18();
  OUTLINED_FUNCTION_27_1(v8);
  v9 = (_QWORD *)(a3 + *(int *)(v7 + 36));
  *v9 = 0;
  v9[1] = 0xE000000000000000;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v10 = a3 + *(int *)(v7 + 44);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  __swift_storeEnumTagSinglePayload(v10, 1, 1, updated);
  v12 = OUTLINED_FUNCTION_5_3(a1, (uint64_t)v16, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v12;
  v13 = sub_240C28550(a2, (uint64_t)v15, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
  OUTLINED_FUNCTION_42_2();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 8) = v13;
  return result;
}

void NeuralNetworkClassifier.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_22();
  v1 = sub_240F1CF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  type metadata accessor for NeuralNetworkClassifier();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v0, v9 - v8, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240F23420;
  *(_QWORD *)(v11 + 32) = 0x73726579616CLL;
  *(_QWORD *)(v11 + 40) = 0xE600000000000000;
  NeuralNetworkClassifier.layers.getter();
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C288);
  *(_QWORD *)(v11 + 48) = v13;
  *(_QWORD *)(v11 + 72) = v14;
  strcpy((char *)(v11 + 80), "preprocessors");
  *(_WORD *)(v11 + 94) = -4864;
  NeuralNetworkClassifier.preprocessors.getter();
  v16 = v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C290);
  *(_QWORD *)(v11 + 96) = v16;
  *(_QWORD *)(v11 + 120) = v17;
  *(_QWORD *)(v11 + 128) = 0xD000000000000016;
  *(_QWORD *)(v11 + 136) = 0x8000000240F520B0;
  *(_QWORD *)(v11 + 168) = &type metadata for NeuralNetwork.ArrayShapeMapping;
  v18 = *(_BYTE *)(v0 + 24) == 1 && *(_QWORD *)(v0 + 16) != 0;
  *(_BYTE *)(v11 + 144) = v18;
  *(_QWORD *)(v11 + 176) = 0xD000000000000016;
  *(_QWORD *)(v11 + 184) = 0x8000000240F520D0;
  *(_BYTE *)(v11 + 192) = *(_BYTE *)(v0 + 40);
  *(_QWORD *)(v11 + 216) = &type metadata for NeuralNetwork.ImageShapeMapping;
  *(_QWORD *)(v11 + 224) = 0x62614C7373616C63;
  *(_QWORD *)(v11 + 232) = 0xEB00000000736C65;
  *(_QWORD *)(v11 + 264) = &type metadata for NeuralNetworkClassifier.ClassLabels;
  NeuralNetworkClassifier.classLabels.getter(v11 + 240);
  *(_QWORD *)(v11 + 272) = 0xD000000000000019;
  *(_QWORD *)(v11 + 280) = 0x8000000240F52980;
  v19 = (uint64_t *)(v0 + *(int *)(OUTLINED_FUNCTION_1_19() + 36));
  v20 = *v19;
  v21 = v19[1];
  *(_QWORD *)(v11 + 312) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v11 + 288) = v20;
  *(_QWORD *)(v11 + 296) = v21;
  v22 = sub_240F1CF84();
  OUTLINED_FUNCTION_27_1(v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE43C0], v1);
  OUTLINED_FUNCTION_329();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t NeuralNetworkClassifier.ClassLabels.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void static NeuralNetworkClassifier.ClassLabels.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      sub_240BEAC24(v4, v5);
  }
  else if ((v6 & 1) == 0)
  {
    sub_240BEACE0(v4, v5);
  }
}

uint64_t sub_240CA7500(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CA7548(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NeuralNetworkClassifier()
{
  uint64_t result;

  result = qword_25435FEF0;
  if (!qword_25435FEF0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240CA75CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D440;
  if (!qword_25708D440)
  {
    v1 = type metadata accessor for Proto_NeuralNetworkClassifier(255);
    result = MEMORY[0x24268C2AC](&unk_240F4D204, v1);
    atomic_store(result, (unint64_t *)&qword_25708D440);
  }
  return result;
}

void sub_240CA760C(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetworkClassifier.layers.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CA7634(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetworkClassifier.preprocessors.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CA7668()
{
  NeuralNetworkClassifier.imageInputShapeMapping.setter();
  OUTLINED_FUNCTION_44();
}

void sub_240CA768C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  NeuralNetworkClassifier.labelProbabilityLayerName.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t initializeBufferWithCopyOfBuffer for NeuralNetworkClassifier(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t updated;
  uint64_t v33;

  v4 = type metadata accessor for Proto_NeuralNetworkClassifier(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = (int *)v4;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = *(int *)(v4 + 32);
    v10 = (_QWORD *)(a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v10 = *v11;
      if (EnumCaseMultiPayload == 1)
        v15 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v15 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v16 = (char *)v10 + v15;
      v17 = (char *)v11 + v15;
      v18 = sub_240F1C930();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v20 = v7[9];
    v21 = (_QWORD *)(a1 + v20);
    v22 = (uint64_t *)((char *)a2 + v20);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    v24 = v7[10];
    v25 = a1 + v24;
    v26 = (uint64_t)a2 + v24;
    v27 = sub_240F1C930();
    v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
    swift_bridgeObjectRetain();
    v28(v25, v26, v27);
    v29 = v7[11];
    v30 = (char *)(a1 + v29);
    v31 = (char *)a2 + v29;
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, updated))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v28((uint64_t)v30, (uint64_t)v31, v27);
      *(_QWORD *)&v30[*(int *)(updated + 20)] = *(_QWORD *)&v31[*(int *)(updated + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, updated);
    }
  }
  return a1;
}

uint64_t destroy for NeuralNetworkClassifier(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t updated;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Proto_NeuralNetworkClassifier(0);
  v3 = a1 + v2[8];
  v4 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Proto_Int64Vector(0);
    else
      v6 = type metadata accessor for Proto_StringVector(0);
    v7 = v3 + *(int *)(v6 + 20);
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  v9 = a1 + v2[10];
  v10 = sub_240F1C930();
  v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
  v11(v9, v10);
  v12 = a1 + v2[11];
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  result = __swift_getEnumTagSinglePayload(v12, 1, updated);
  if (!(_DWORD)result)
  {
    v11(v12, v10);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for NeuralNetworkClassifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t updated;
  uint64_t v30;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = (int *)type metadata accessor for Proto_NeuralNetworkClassifier(0);
  v6 = v5[8];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
      v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v12 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_240F1C930();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v17 = v5[9];
  v18 = (_QWORD *)(a1 + v17);
  v19 = (_QWORD *)(a2 + v17);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  v21 = v5[10];
  v22 = a1 + v21;
  v23 = a2 + v21;
  v24 = sub_240F1C930();
  v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
  swift_bridgeObjectRetain();
  v25(v22, v23, v24);
  v26 = v5[11];
  v27 = (char *)(a1 + v26);
  v28 = (char *)(a2 + v26);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v28, 1, updated))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v25((uint64_t)v27, (uint64_t)v28, v24);
    *(_QWORD *)&v27[*(int *)(updated + 20)] = *(_QWORD *)&v28[*(int *)(updated + 20)];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v27, 0, 1, updated);
  }
  return a1;
}

uint64_t assignWithCopy for NeuralNetworkClassifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t updated;
  int v39;
  uint64_t v40;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = (int *)type metadata accessor for Proto_NeuralNetworkClassifier(0);
  v7 = v6[8];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v8 = *v9;
      if (EnumCaseMultiPayload == 1)
        v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_240F1C930();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_15;
    }
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_15;
  }
  if (v12)
  {
    sub_240BE27A0((uint64_t)v8, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)v8, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    v20 = swift_getEnumCaseMultiPayload();
    *v8 = *v9;
    if (v20 == 1)
      v21 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v21 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = sub_240F1C930();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v26 = v6[9];
  v27 = (_QWORD *)(a1 + v26);
  v28 = (_QWORD *)(a2 + v26);
  *v27 = *v28;
  v27[1] = v28[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v29 = v6[10];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_240F1C930();
  v33 = *(_QWORD *)(v32 - 8);
  v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v33 + 24);
  v34(v30, v31, v32);
  v35 = v6[11];
  v36 = (char *)(a1 + v35);
  v37 = (char *)(a2 + v35);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  LODWORD(v31) = __swift_getEnumTagSinglePayload((uint64_t)v36, 1, updated);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, updated);
  if (!(_DWORD)v31)
  {
    if (!v39)
    {
      v34((uint64_t)v36, (uint64_t)v37, v32);
      *(_QWORD *)&v36[*(int *)(updated + 20)] = *(_QWORD *)&v37[*(int *)(updated + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_240BE27A0((uint64_t)v36, type metadata accessor for Proto_NetworkUpdateParameters);
    goto LABEL_20;
  }
  if (v39)
  {
LABEL_20:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v36, v37, v32);
  *(_QWORD *)&v36[*(int *)(updated + 20)] = *(_QWORD *)&v37[*(int *)(updated + 20)];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, updated);
  return a1;
}

uint64_t initializeWithTake for NeuralNetworkClassifier(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t updated;
  uint64_t v24;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = (int *)type metadata accessor for Proto_NeuralNetworkClassifier(0);
  v5 = v4[8];
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (EnumCaseMultiPayload == 1)
      v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v11 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  *(_OWORD *)(a1 + v4[9]) = *(_OWORD *)(a2 + v4[9]);
  v15 = v4[10];
  v16 = a1 + v15;
  v17 = a2 + v15;
  v18 = sub_240F1C930();
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 32);
  v19(v16, v17, v18);
  v20 = v4[11];
  v21 = (char *)(a1 + v20);
  v22 = (char *)(a2 + v20);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, updated))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v19((uint64_t)v21, (uint64_t)v22, v18);
    *(_QWORD *)&v21[*(int *)(updated + 20)] = *(_QWORD *)&v22[*(int *)(updated + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, updated);
  }
  return a1;
}

uint64_t assignWithTake for NeuralNetworkClassifier(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t updated;
  int v37;
  uint64_t v38;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = (int *)type metadata accessor for Proto_NeuralNetworkClassifier(0);
  v5 = v4[8];
  v6 = (_QWORD *)(a1 + v5);
  v7 = (_QWORD *)(a2 + v5);
  v8 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v6 = *v7;
      if (EnumCaseMultiPayload == 1)
        v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v12 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v13 = (char *)v6 + v12;
      v14 = (char *)v7 + v12;
      v15 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_15;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE18);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_240BE27A0((uint64_t)v6, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)v6, type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels);
    v17 = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (v17 == 1)
      v18 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v18 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v19 = (char *)v6 + v18;
    v20 = (char *)v7 + v18;
    v21 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v22 = v4[9];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (uint64_t *)(a2 + v22);
  v26 = *v24;
  v25 = v24[1];
  *v23 = v26;
  v23[1] = v25;
  swift_bridgeObjectRelease();
  v27 = v4[10];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_240F1C930();
  v31 = *(_QWORD *)(v30 - 8);
  v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40);
  v32(v28, v29, v30);
  v33 = v4[11];
  v34 = (char *)(a1 + v33);
  v35 = (char *)(a2 + v33);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  LODWORD(v29) = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, updated);
  v37 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, updated);
  if (!(_DWORD)v29)
  {
    if (!v37)
    {
      v32((uint64_t)v34, (uint64_t)v35, v30);
      *(_QWORD *)&v34[*(int *)(updated + 20)] = *(_QWORD *)&v35[*(int *)(updated + 20)];
      swift_release();
      return a1;
    }
    sub_240BE27A0((uint64_t)v34, type metadata accessor for Proto_NetworkUpdateParameters);
    goto LABEL_20;
  }
  if (v37)
  {
LABEL_20:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v34, v35, v30);
  *(_QWORD *)&v34[*(int *)(updated + 20)] = *(_QWORD *)&v35[*(int *)(updated + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, updated);
  return a1;
}

uint64_t getEnumTagSinglePayload for NeuralNetworkClassifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA86D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_19();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for NeuralNetworkClassifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8714(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_19();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CA8748()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_NeuralNetworkClassifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetworkClassifier.ClassLabels()
{
  return &type metadata for NeuralNetworkClassifier.ClassLabels;
}

uint64_t OUTLINED_FUNCTION_1_19()
{
  return type metadata accessor for Proto_NeuralNetworkClassifier(0);
}

uint64_t OUTLINED_FUNCTION_9_18()
{
  return type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
}

void OUTLINED_FUNCTION_35_10(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BE0BF4(a1, v2, v1);
}

BOOL static NeuralNetwork.Layer.EqualParameters.== infix(_:_:)(float *a1, float *a2)
{
  return sub_240CA87F4(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_EqualLayerParams);
}

BOOL static NeuralNetwork.Layer.NotEqualParameters.== infix(_:_:)(float *a1, float *a2)
{
  return sub_240CA87F4(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_NotEqualLayerParams);
}

BOOL sub_240CA87F4(float *a1, float *a2, uint64_t (*a3)(_QWORD, float))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = OUTLINED_FUNCTION_20_0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  if (*a1 != *a2)
    return 0;
  v13 = a3(0, *a1);
  v14 = (char *)a1 + *(int *)(v13 + 20);
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v15(v12, v14, v6);
  v15(v10, (char *)a2 + *(int *)(v13 + 20), v6);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_240F1CC90();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  return (v16 & 1) != 0;
}

BOOL static NeuralNetwork.Layer.LessThanParameters.== infix(_:_:)(float *a1, float *a2)
{
  return sub_240CA87F4(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_LessThanLayerParams);
}

BOOL static NeuralNetwork.Layer.LessEqualParameters.== infix(_:_:)(float *a1, float *a2)
{
  return sub_240CA87F4(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_LessEqualLayerParams);
}

BOOL static NeuralNetwork.Layer.GreaterThanParameters.== infix(_:_:)(float *a1, float *a2)
{
  return sub_240CA87F4(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_GreaterThanLayerParams);
}

BOOL static NeuralNetwork.Layer.GreaterEqualParameters.== infix(_:_:)(float *a1, float *a2)
{
  return sub_240CA87F4(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_GreaterEqualLayerParams);
}

uint64_t NeuralNetwork.Layer.EqualParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  return sub_240CA89B8((void (*)(_QWORD))type metadata accessor for Proto_EqualLayerParams, a1);
}

uint64_t NeuralNetwork.Layer.NotEqualParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  return sub_240CA89B8((void (*)(_QWORD))type metadata accessor for Proto_NotEqualLayerParams, a1);
}

uint64_t NeuralNetwork.Layer.LessThanParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  return sub_240CA89B8((void (*)(_QWORD))type metadata accessor for Proto_LessThanLayerParams, a1);
}

uint64_t NeuralNetwork.Layer.LessEqualParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  return sub_240CA89B8((void (*)(_QWORD))type metadata accessor for Proto_LessEqualLayerParams, a1);
}

uint64_t NeuralNetwork.Layer.GreaterThanParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  return sub_240CA89B8((void (*)(_QWORD))type metadata accessor for Proto_GreaterThanLayerParams, a1);
}

uint64_t NeuralNetwork.Layer.GreaterEqualParameters.init()@<X0>(_DWORD *a1@<X8>)
{
  return sub_240CA89B8((void (*)(_QWORD))type metadata accessor for Proto_GreaterEqualLayerParams, a1);
}

uint64_t sub_240CA89B8@<X0>(void (*a1)(_QWORD)@<X0>, _DWORD *a2@<X8>)
{
  *a2 = 0;
  a1(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240CA89F0()
{
  return sub_240C30D44(&qword_25708D448, type metadata accessor for Proto_EqualLayerParams, (uint64_t)&unk_240F4D18C);
}

uint64_t sub_240CA8A1C()
{
  return sub_240C30D44(&qword_25708D450, type metadata accessor for Proto_NotEqualLayerParams, (uint64_t)&unk_240F4D114);
}

uint64_t sub_240CA8A48()
{
  return sub_240C30D44(&qword_25708D458, type metadata accessor for Proto_LessThanLayerParams, (uint64_t)&unk_240F4D09C);
}

uint64_t sub_240CA8A74()
{
  return sub_240C30D44(&qword_25708D460, type metadata accessor for Proto_LessEqualLayerParams, (uint64_t)&unk_240F4D024);
}

uint64_t sub_240CA8AA0()
{
  return sub_240C30D44(&qword_25708D468, type metadata accessor for Proto_GreaterThanLayerParams, (uint64_t)&unk_240F4CFAC);
}

uint64_t sub_240CA8AD0()
{
  return sub_240C30D44(&qword_25708D470, type metadata accessor for Proto_GreaterEqualLayerParams, (uint64_t)&unk_240F4CF34);
}

void _s15EqualParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CA8EA0(a1, a2, a3, type metadata accessor for Proto_EqualLayerParams);
}

uint64_t _s15EqualParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_EqualLayerParams);
}

void _s15EqualParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8F80(a1, a2, a3, type metadata accessor for Proto_EqualLayerParams);
}

void _s15EqualParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8FC0(a1, a2, a3, type metadata accessor for Proto_EqualLayerParams);
}

void _s15EqualParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9000(a1, a2, a3, type metadata accessor for Proto_EqualLayerParams);
}

void _s15EqualParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9040(a1, a2, a3, type metadata accessor for Proto_EqualLayerParams);
}

uint64_t _s15EqualParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8B50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_18();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s15EqualParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8B78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_18();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.EqualParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D478);
}

uint64_t sub_240CA8BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_EqualLayerParams);
}

void _s18NotEqualParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CA8EA0(a1, a2, a3, type metadata accessor for Proto_NotEqualLayerParams);
}

uint64_t _s18NotEqualParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_NotEqualLayerParams);
}

void _s18NotEqualParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8F80(a1, a2, a3, type metadata accessor for Proto_NotEqualLayerParams);
}

void _s18NotEqualParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8FC0(a1, a2, a3, type metadata accessor for Proto_NotEqualLayerParams);
}

void _s18NotEqualParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9000(a1, a2, a3, type metadata accessor for Proto_NotEqualLayerParams);
}

void _s18NotEqualParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9040(a1, a2, a3, type metadata accessor for Proto_NotEqualLayerParams);
}

uint64_t _s18NotEqualParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8C08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_14_21();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s18NotEqualParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8C30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_14_21();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.NotEqualParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D488);
}

uint64_t sub_240CA8C60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_NotEqualLayerParams);
}

void _s18LessThanParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CA8EA0(a1, a2, a3, type metadata accessor for Proto_LessThanLayerParams);
}

uint64_t _s18LessThanParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_LessThanLayerParams);
}

void _s18LessThanParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8F80(a1, a2, a3, type metadata accessor for Proto_LessThanLayerParams);
}

void _s18LessThanParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8FC0(a1, a2, a3, type metadata accessor for Proto_LessThanLayerParams);
}

void _s18LessThanParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9000(a1, a2, a3, type metadata accessor for Proto_LessThanLayerParams);
}

void _s18LessThanParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9040(a1, a2, a3, type metadata accessor for Proto_LessThanLayerParams);
}

uint64_t _s18LessThanParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8CC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_22();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s18LessThanParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_22();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LessThanParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D498);
}

uint64_t sub_240CA8D18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LessThanLayerParams);
}

void _s19LessEqualParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CA8EA0(a1, a2, a3, type metadata accessor for Proto_LessEqualLayerParams);
}

uint64_t _s19LessEqualParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_LessEqualLayerParams);
}

void _s19LessEqualParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8F80(a1, a2, a3, type metadata accessor for Proto_LessEqualLayerParams);
}

void _s19LessEqualParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8FC0(a1, a2, a3, type metadata accessor for Proto_LessEqualLayerParams);
}

void _s19LessEqualParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9000(a1, a2, a3, type metadata accessor for Proto_LessEqualLayerParams);
}

void _s19LessEqualParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9040(a1, a2, a3, type metadata accessor for Proto_LessEqualLayerParams);
}

uint64_t _s19LessEqualParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8D78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_16();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s19LessEqualParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_16();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LessEqualParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D4A8);
}

uint64_t sub_240CA8DD0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LessEqualLayerParams);
}

void _s21GreaterThanParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CA8EA0(a1, a2, a3, type metadata accessor for Proto_GreaterThanLayerParams);
}

uint64_t _s21GreaterThanParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_GreaterThanLayerParams);
}

void _s21GreaterThanParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8F80(a1, a2, a3, type metadata accessor for Proto_GreaterThanLayerParams);
}

void _s21GreaterThanParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8FC0(a1, a2, a3, type metadata accessor for Proto_GreaterThanLayerParams);
}

void _s21GreaterThanParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9000(a1, a2, a3, type metadata accessor for Proto_GreaterThanLayerParams);
}

void _s21GreaterThanParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9040(a1, a2, a3, type metadata accessor for Proto_GreaterThanLayerParams);
}

uint64_t _s21GreaterThanParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8E30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_19();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21GreaterThanParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA8E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_19();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.GreaterThanParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D4B8);
}

uint64_t sub_240CA8E88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_GreaterThanLayerParams);
}

void _s22GreaterEqualParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CA8EA0(a1, a2, a3, type metadata accessor for Proto_GreaterEqualLayerParams);
}

void sub_240CA8EA0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a4(0);
  if ((*(_DWORD *)(*(_QWORD *)(v6 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = OUTLINED_FUNCTION_20_0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s22GreaterEqualParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_GreaterEqualLayerParams);
}

uint64_t sub_240CA8F34(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  v3 = a1 + *(int *)(a3(0) + 20);
  v4 = OUTLINED_FUNCTION_20_0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

void _s22GreaterEqualParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8F80(a1, a2, a3, type metadata accessor for Proto_GreaterEqualLayerParams);
}

void sub_240CA8F80(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_9_19(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s22GreaterEqualParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA8FC0(a1, a2, a3, type metadata accessor for Proto_GreaterEqualLayerParams);
}

void sub_240CA8FC0(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_8_21(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s22GreaterEqualParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9000(a1, a2, a3, type metadata accessor for Proto_GreaterEqualLayerParams);
}

void sub_240CA9000(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_9_19(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s22GreaterEqualParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CA9040(a1, a2, a3, type metadata accessor for Proto_GreaterEqualLayerParams);
}

void sub_240CA9040(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_8_21(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t _s22GreaterEqualParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA9080()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_19();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s22GreaterEqualParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA90A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12_19();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.GreaterEqualParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D4C8);
}

uint64_t sub_240CA90D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_GreaterEqualLayerParams);
}

uint64_t OUTLINED_FUNCTION_8_21(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  *a1 = *a2;
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_9_19(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  *a1 = *a2;
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_10_19()
{
  return type metadata accessor for Proto_GreaterThanLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_11_22()
{
  return type metadata accessor for Proto_LessThanLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_12_19()
{
  return type metadata accessor for Proto_GreaterEqualLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_13_16()
{
  return type metadata accessor for Proto_LessEqualLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_14_21()
{
  return type metadata accessor for Proto_NotEqualLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_15_18()
{
  return type metadata accessor for Proto_EqualLayerParams(0);
}

void static NeuralNetwork.Layer.unary(name:inputName:outputName:function:shift:scale:alpha:epsilon:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_54_2();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v5;
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NeuralNetwork.Layer.UnaryFunctionParameters.init(function:shift:scale:alpha:epsilon:)();
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t static NeuralNetwork.Layer.Kind.unary(function:shift:scale:alpha:epsilon:)()
{
  NeuralNetwork.Layer.UnaryFunctionParameters.init(function:shift:scale:alpha:epsilon:)();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

uint64_t NeuralNetwork.Layer.UnaryFunctionParameters.init(function:shift:scale:alpha:epsilon:)()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  uint64_t result;

  OUTLINED_FUNCTION_54_2();
  v5 = v4;
  v7 = *v6;
  *(_QWORD *)v4 = 0;
  *(_BYTE *)(v4 + 8) = 1;
  OUTLINED_FUNCTION_1_20();
  *(_QWORD *)(v5 + 20) = 0;
  *(_QWORD *)(v5 + 12) = 0;
  result = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)v5 = v7;
  *(_BYTE *)(v5 + 8) = 1;
  *(_DWORD *)(v5 + 20) = v3;
  *(_DWORD *)(v5 + 24) = v2;
  *(_DWORD *)(v5 + 12) = v1;
  *(_DWORD *)(v5 + 16) = v0;
  return result;
}

void NeuralNetwork.Layer.UnaryFunctionParameters.function.getter(_BYTE *a1@<X8>)
{
  char *v1;
  char v2;

  if (v1[8] == 1)
    v2 = *v1;
  else
    v2 = 0;
  *a1 = v2;
}

unsigned __int8 *sub_240CA9394(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.Layer.UnaryFunctionParameters.function.setter(&v2);
}

unsigned __int8 *NeuralNetwork.Layer.UnaryFunctionParameters.function.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.UnaryFunctionParameters.function.modify(uint64_t a1))(uint64_t *result)
{
  char *v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (v1[8] == 1)
    v2 = *v1;
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C2B768;
}

float NeuralNetwork.Layer.UnaryFunctionParameters.alpha.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void NeuralNetwork.Layer.UnaryFunctionParameters.alpha.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

float (*NeuralNetwork.Layer.UnaryFunctionParameters.alpha.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 12);
  return sub_240C2D100;
}

float NeuralNetwork.Layer.UnaryFunctionParameters.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void NeuralNetwork.Layer.UnaryFunctionParameters.epsilon.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

float (*NeuralNetwork.Layer.UnaryFunctionParameters.epsilon.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 16);
  return sub_240C2D1B4;
}

float NeuralNetwork.Layer.UnaryFunctionParameters.shift.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 20);
}

void NeuralNetwork.Layer.UnaryFunctionParameters.shift.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 20) = a1;
}

float (*NeuralNetwork.Layer.UnaryFunctionParameters.shift.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 20);
  return sub_240CA9490;
}

float sub_240CA9490(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 20) = result;
  return result;
}

float NeuralNetwork.Layer.UnaryFunctionParameters.scale.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 24);
}

void NeuralNetwork.Layer.UnaryFunctionParameters.scale.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 24) = a1;
}

float (*NeuralNetwork.Layer.UnaryFunctionParameters.scale.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 24);
  return sub_240CA94CC;
}

float sub_240CA94CC(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 24) = result;
  return result;
}

uint64_t NeuralNetwork.Layer.UnaryFunctionParameters.hash(into:)()
{
  OUTLINED_FUNCTION_1_20();
  sub_240C30D44(&qword_25708D4D8, type metadata accessor for Proto_UnaryFunctionLayerParams, (uint64_t)&unk_240F4FC9C);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.UnaryFunctionParameters.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_1_20();
  sub_240C30D44(&qword_25708D4D8, type metadata accessor for Proto_UnaryFunctionLayerParams, (uint64_t)&unk_240F4FC9C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240CA95A0()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_UnaryFunctionLayerParams(0);
  sub_240C30D44(&qword_25708D4D8, type metadata accessor for Proto_UnaryFunctionLayerParams, (uint64_t)&unk_240F4FC9C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t NeuralNetwork.Layer.UnaryFunctionParameters.customMirror.getter()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NeuralNetwork.Layer.UnaryFunctionParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  sub_240CA9838((uint64_t)v0, (uint64_t)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1D380;
  *(_QWORD *)(v9 + 32) = 0x6E6F6974636E7566;
  *(_QWORD *)(v9 + 40) = 0xE800000000000000;
  *(_QWORD *)(v9 + 72) = &type metadata for NeuralNetwork.Layer.UnaryFunctionParameters.Function;
  NeuralNetwork.Layer.UnaryFunctionParameters.function.getter((_BYTE *)(v9 + 48));
  v10 = v0[4];
  *(_DWORD *)(v9 + 96) = v0[3];
  *(_DWORD *)(v9 + 144) = v10;
  v11 = v0[6];
  *(_DWORD *)(v9 + 192) = v0[5];
  *(_QWORD *)(v9 + 80) = 0x6168706C61;
  *(_QWORD *)(v9 + 88) = 0xE500000000000000;
  v12 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v9 + 120) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v9 + 128) = 0x6E6F6C69737065;
  *(_QWORD *)(v9 + 136) = 0xE700000000000000;
  *(_QWORD *)(v9 + 168) = v12;
  *(_QWORD *)(v9 + 176) = 0x7466696873;
  *(_QWORD *)(v9 + 184) = 0xE500000000000000;
  *(_QWORD *)(v9 + 216) = v12;
  *(_QWORD *)(v9 + 224) = 0x656C616373;
  *(_QWORD *)(v9 + 232) = 0xE500000000000000;
  *(_QWORD *)(v9 + 264) = v12;
  *(_DWORD *)(v9 + 240) = v11;
  v13 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BEE43C0], v2);
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.UnaryFunctionParameters()
{
  uint64_t result;

  result = qword_25708D4F8;
  if (!qword_25708D4F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CA9838(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.UnaryFunctionParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t NeuralNetwork.Layer.UnaryFunctionParameters.Function.init(rawValue:)@<X0>(unint64_t result@<X0>, char *a2@<X8>)
{
  char v2;

  v2 = 8;
  if (result < 8)
    v2 = result;
  *a2 = v2;
  return result;
}

uint64_t NeuralNetwork.Layer.UnaryFunctionParameters.Function.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t sub_240CA989C()
{
  return sub_240C30D44(&qword_25708D4E0, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.UnaryFunctionParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.UnaryFunctionParameters);
}

uint64_t sub_240CA98C8()
{
  return sub_240C30D44(&qword_25708D4E8, type metadata accessor for Proto_UnaryFunctionLayerParams, (uint64_t)&unk_240F4CEBC);
}

unint64_t sub_240CA98F4@<X0>(unint64_t *a1@<X0>, char *a2@<X8>)
{
  return NeuralNetwork.Layer.UnaryFunctionParameters.Function.init(rawValue:)(*a1, a2);
}

void sub_240CA98FC(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.UnaryFunctionParameters.Function.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

unint64_t sub_240CA9920()
{
  unint64_t result;

  result = qword_25708D4F0;
  if (!qword_25708D4F0)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.Layer.UnaryFunctionParameters.Function, &type metadata for NeuralNetwork.Layer.UnaryFunctionParameters.Function);
    atomic_store(result, (unint64_t *)&qword_25708D4F0);
  }
  return result;
}

void sub_240CA995C(_BYTE *a1@<X8>)
{
  NeuralNetwork.Layer.UnaryFunctionParameters.function.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CA997C()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnaryFunctionParameters.alpha.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CA999C(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Layer.UnaryFunctionParameters.alpha.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CA99B8()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnaryFunctionParameters.epsilon.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CA99D8(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Layer.UnaryFunctionParameters.epsilon.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CA99F4()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnaryFunctionParameters.shift.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CA9A14(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Layer.UnaryFunctionParameters.shift.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CA9A30()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.UnaryFunctionParameters.scale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CA9A50(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Layer.UnaryFunctionParameters.scale.setter(v1);
  OUTLINED_FUNCTION_44();
}

uint64_t _s23UnaryFunctionParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_UnaryFunctionLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_OWORD *)(a1 + 12) = *(_OWORD *)((char *)a2 + 12);
    v6 = *(int *)(v4 + 36);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s23UnaryFunctionParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s23UnaryFunctionParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  v4 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s23UnaryFunctionParametersVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
  *(_DWORD *)(a1 + 20) = *((_DWORD *)a2 + 5);
  *(_DWORD *)(a1 + 24) = *((_DWORD *)a2 + 6);
  v5 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s23UnaryFunctionParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  v4 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s23UnaryFunctionParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_OWORD *)(a1 + 12) = *(_OWORD *)(a2 + 12);
  v4 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s23UnaryFunctionParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA9D58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_20();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s23UnaryFunctionParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CA9D94(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_20();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CA9DC8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_UnaryFunctionLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s23UnaryFunctionParametersV8FunctionOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s23UnaryFunctionParametersV8FunctionOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_240CA9F04 + 4 * byte_240F259B5[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_240CA9F38 + 4 * asc_240F259B0[v4]))();
}

uint64_t sub_240CA9F38(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CA9F40(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240CA9F48);
  return result;
}

uint64_t sub_240CA9F54(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240CA9F5CLL);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_240CA9F60(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CA9F68(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.Layer.UnaryFunctionParameters.Function()
{
  return &type metadata for NeuralNetwork.Layer.UnaryFunctionParameters.Function;
}

uint64_t OUTLINED_FUNCTION_1_20()
{
  return type metadata accessor for Proto_UnaryFunctionLayerParams(0);
}

void sub_240CA9F8C()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v25 = v4;
  OUTLINED_FUNCTION_36_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_25_7();
  type metadata accessor for FeatureType.SequenceParameters(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = OUTLINED_FUNCTION_11_23(v10, v23);
  type metadata accessor for FeatureType.ImageParameters(v11);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = OUTLINED_FUNCTION_25_11(v13, v24);
  type metadata accessor for FeatureType.StringParameters(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  v16 = OUTLINED_FUNCTION_21_4();
  type metadata accessor for FeatureType.DoubleParameters(v16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for FeatureType.IntParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_10_3();
  v20 = v3;
  sub_240CAF524(v3, v1);
  v21 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
  if (__swift_getEnumTagSinglePayload(v1, 1, v21) != 1)
  {
    v22 = (char *)&loc_240CAA180 + 4 * byte_240F25B60[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v0 = 0;
  sub_240BE10B8(v20, type metadata accessor for Proto_FeatureType);
  swift_storeEnumTagMultiPayload();
  sub_240BE0B90((uint64_t)v0, v25, type metadata accessor for FeatureType);
  OUTLINED_FUNCTION_1();
}

void sub_240CAA384()
{
  sub_240F1CE58();
  __break(1u);
}

void sub_240CAA3E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46[20];
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  type metadata accessor for Proto_StateFeatureType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v46[17] = (uint64_t)v46 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = OUTLINED_FUNCTION_101();
  v46[16] = type metadata accessor for FeatureType.StateParameters(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = OUTLINED_FUNCTION_11_23(v6, v46[0]);
  type metadata accessor for Proto_SequenceFeatureType(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = OUTLINED_FUNCTION_24_11(v9, v46[0]);
  v46[13] = type metadata accessor for FeatureType.SequenceParameters(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v46[15] = (uint64_t)v46 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_101();
  type metadata accessor for Proto_DictionaryFeatureType(v13);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  v46[11] = (uint64_t)v46 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46[10] = OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  v46[12] = (uint64_t)v46 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = OUTLINED_FUNCTION_101();
  type metadata accessor for Proto_ArrayFeatureType(v18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_2_0();
  v46[8] = v20;
  v46[7] = OUTLINED_FUNCTION_31_10();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_0();
  v46[9] = v22;
  v23 = OUTLINED_FUNCTION_101();
  type metadata accessor for Proto_ImageFeatureType(v23);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_0();
  v46[5] = v25;
  v46[4] = OUTLINED_FUNCTION_32_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_0();
  v46[6] = v27;
  v28 = OUTLINED_FUNCTION_101();
  type metadata accessor for Proto_StringFeatureType(v28);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_2_0();
  v46[2] = v30;
  v46[1] = type metadata accessor for FeatureType.StringParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_2_0();
  v46[3] = v32;
  v33 = OUTLINED_FUNCTION_101();
  type metadata accessor for Proto_DoubleFeatureType(v33);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v34);
  v35 = OUTLINED_FUNCTION_60();
  type metadata accessor for FeatureType.DoubleParameters(v35);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_10_3();
  type metadata accessor for Proto_Int64FeatureType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v37);
  v38 = OUTLINED_FUNCTION_21_4();
  type metadata accessor for FeatureType.IntParameters(v38);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v39);
  v40 = OUTLINED_FUNCTION_25_7();
  type metadata accessor for FeatureType(v40);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_24_1();
  v44 = v43 - v42;
  v47 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v47);
  v48 = *(int *)(OUTLINED_FUNCTION_21_14() + 20);
  v49 = v1;
  *(_BYTE *)(v1 + v48) = 0;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240BE0BF4(v46[19], v44, type metadata accessor for FeatureType);
  v45 = (char *)sub_240CAA6C4 + 4 * byte_240F25B68[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240CAA6C4()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  sub_240BE0B90(v4, (uint64_t)v2, type metadata accessor for FeatureType.IntParameters);
  sub_240BE0BF4((uint64_t)&v2[*(int *)(v3 + 20)], v0, type metadata accessor for Proto_Int64FeatureType);
  OUTLINED_FUNCTION_7_19(v6, &qword_25435FB00);
  sub_240BE0B90(v0, v1, type metadata accessor for Proto_Int64FeatureType);
  OUTLINED_FUNCTION_9_20();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_20_11();
  v7 = *v2;
  OUTLINED_FUNCTION_25_1((uint64_t)v2);
  *(_BYTE *)(v1 + *(_QWORD *)(v5 - 104)) = v7;
  OUTLINED_FUNCTION_1();
}

void FeatureType.IntParameters.init(optional:)(char a1@<W0>, _BYTE *a2@<X8>)
{
  sub_240CAA978(a1, (void (*)(_QWORD))type metadata accessor for FeatureType.IntParameters, a2);
}

uint64_t type metadata accessor for FeatureType.IntParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F8B0);
}

void FeatureType.DoubleParameters.init(optional:)(char a1@<W0>, _BYTE *a2@<X8>)
{
  sub_240CAA978(a1, (void (*)(_QWORD))type metadata accessor for FeatureType.DoubleParameters, a2);
}

void sub_240CAA978(char a1@<W0>, void (*a2)(_QWORD)@<X1>, _BYTE *a3@<X8>)
{
  a2(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  OUTLINED_FUNCTION_44();
}

void FeatureType.StringParameters.init(optional:)(char a1@<W0>, _BYTE *a2@<X8>)
{
  sub_240CAA978(a1, (void (*)(_QWORD))type metadata accessor for FeatureType.StringParameters, a2);
}

void FeatureType.parameters.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  char *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_36_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  sub_240BE0BF4(v0, (uint64_t)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  v4 = (char *)sub_240CAAA38 + 4 * byte_240F25B70[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240CAAA38()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v0[3] = type metadata accessor for FeatureType.IntParameters(0);
  v0[4] = (uint64_t)&protocol witness table for FeatureType.IntParameters;
  __swift_allocate_boxed_opaque_existential_0(v0);
  v1 = OUTLINED_FUNCTION_47_11();
  sub_240BE0B90(v1, v2, type metadata accessor for FeatureType.IntParameters);
  OUTLINED_FUNCTION_156();
}

uint64_t FeatureType.isOptional.getter()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD v3[3];
  uint64_t v4;
  uint64_t v5;

  FeatureType.parameters.getter();
  v0 = v4;
  v1 = v5;
  __swift_project_boxed_opaque_existential_1(v3, v4);
  LOBYTE(v0) = (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v1);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v0 & 1;
}

void FeatureType.isOptional.setter(char a1)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  int EnumCaseMultiPayload;
  uint64_t v7;

  OUTLINED_FUNCTION_36_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  sub_240BE0B90((uint64_t)v1, v2, v5);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  OUTLINED_FUNCTION_6_1(v2, v7, (uint64_t (*)(_QWORD))off_251116E28[EnumCaseMultiPayload]);
  *v1 = a1;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_42();
}

void (*FeatureType.isOptional.modify(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x38uLL);
  *a1 = v3;
  v3[5] = v1;
  FeatureType.parameters.getter();
  v4 = v3[3];
  v5 = v3[4];
  __swift_project_boxed_opaque_existential_1(v3, v4);
  LOBYTE(v4) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  *((_BYTE *)v3 + 48) = v4 & 1;
  return sub_240CAACAC;
}

void sub_240CAACAC(uint64_t a1)
{
  void *v1;

  v1 = *(void **)a1;
  FeatureType.isOptional.setter(*(_BYTE *)(*(_QWORD *)a1 + 48));
  free(v1);
}

uint64_t FeatureType.init()@<X0>(_BYTE *a1@<X8>)
{
  type metadata accessor for FeatureType.DoubleParameters(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a1 = 0;
  type metadata accessor for FeatureType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeatureType.image(width:height:colorSpace:optional:)()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = *v8;
  v10 = &v6[*(int *)(type metadata accessor for FeatureType.ImageParameters(0) + 20)];
  v11 = type metadata accessor for Proto_ImageFeatureType(0);
  v12 = (uint64_t)v10 + *(int *)(v11 + 24);
  v13 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
  OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v10 = v5;
  v10[1] = v3;
  v16 = (char *)v10 + *(int *)(v11 + 28);
  *(_QWORD *)v16 = v9 + 1;
  v16[8] = 1;
  *v7 = v1;
  type metadata accessor for FeatureType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeatureType.shapedArray(dataType:shape:optional:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  char v8;

  v8 = *a1;
  swift_bridgeObjectRetain();
  FeatureType.ShapedArrayParameters.init(dataType:shape:optional:)(&v8, a2, a3, a4);
  type metadata accessor for FeatureType(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeatureType.shapedArray(dataType:shapeFlexibility:optional:)()
{
  swift_bridgeObjectRetain();
  FeatureType.ShapedArrayParameters.init(dataType:shapeFlexibility:optional:)();
  type metadata accessor for FeatureType(0);
  OUTLINED_FUNCTION_47_11();
  return swift_storeEnumTagMultiPayload();
}

uint64_t static FeatureType.dictionaryWithIntKeys(optional:)(uint64_t a1)
{
  return sub_240CAAED0(a1, type metadata accessor for FeatureType.IntParameters, 0);
}

uint64_t static FeatureType.dictionaryWithStringKeys(optional:)(uint64_t a1)
{
  return sub_240CAAED0(a1, type metadata accessor for FeatureType.StringParameters, 1);
}

#error "240CAAFBC: call analysis failed (funcsize=73)"

void static FeatureType.sequenceOfInt(optional:)(char a1@<W0>, _BYTE *a2@<X8>)
{
  sub_240CAB018(a1, (void (*)(uint64_t))type metadata accessor for FeatureType.IntParameters, a2);
}

void static FeatureType.sequenceOfString(optional:)(char a1@<W0>, _BYTE *a2@<X8>)
{
  sub_240CAB018(a1, (void (*)(uint64_t))type metadata accessor for FeatureType.StringParameters, a2);
}

void sub_240CAB018(char a1@<W0>, void (*a2)(uint64_t)@<X1>, _BYTE *a3@<X8>)
{
  _BYTE *v3;
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for FeatureType.SequenceParameters.ElementType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_25_7();
  a2(v8);
  OUTLINED_FUNCTION_45_8();
  *v3 = 0;
  swift_storeEnumTagMultiPayload();
  FeatureType.SequenceParameters.init(elementType:optional:)((uint64_t)v3, a1, a3);
  type metadata accessor for FeatureType(0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_42();
}

void static FeatureType.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38[19];
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  v39 = v2;
  v40 = v1;
  v38[8] = type metadata accessor for FeatureType.StateParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = OUTLINED_FUNCTION_11_23(v4, v38[0]);
  v38[7] = type metadata accessor for FeatureType.SequenceParameters(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v38[15] = (uint64_t)v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[6] = OUTLINED_FUNCTION_30_13();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_25_11(v9, v38[0]);
  v38[5] = type metadata accessor for FeatureType.ShapedArrayParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v38[13] = (uint64_t)v38 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v38[4] = OUTLINED_FUNCTION_32_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = OUTLINED_FUNCTION_24_11(v13, v38[0]);
  v38[3] = type metadata accessor for FeatureType.StringParameters(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  v38[11] = v16;
  v17 = OUTLINED_FUNCTION_101();
  v38[2] = type metadata accessor for FeatureType.DoubleParameters(v17);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  v38[10] = (uint64_t)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = OUTLINED_FUNCTION_101();
  v38[1] = type metadata accessor for FeatureType.IntParameters(v20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  v38[9] = (uint64_t)v38 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = OUTLINED_FUNCTION_101();
  type metadata accessor for FeatureType(v23);
  OUTLINED_FUNCTION_0();
  v25 = MEMORY[0x24BDAC7A8](v24);
  v38[18] = (uint64_t)v38 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x24BDAC7A8](v25);
  v38[17] = (uint64_t)v38 - v28;
  v29 = MEMORY[0x24BDAC7A8](v27);
  v30 = MEMORY[0x24BDAC7A8](v29);
  v31 = MEMORY[0x24BDAC7A8](v30);
  v32 = MEMORY[0x24BDAC7A8](v31);
  v33 = MEMORY[0x24BDAC7A8](v32);
  MEMORY[0x24BDAC7A8](v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D508);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_313();
  v36 = v0 + *(int *)(v35 + 48);
  sub_240BE0BF4(v40, v0, type metadata accessor for FeatureType);
  sub_240BE0BF4(v39, v36, type metadata accessor for FeatureType);
  v37 = (char *)sub_240CAB370 + 4 * byte_240F25B78[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240CAB370()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  v4 = OUTLINED_FUNCTION_27_11();
  sub_240BE0BF4(v4, v2, v5);
  if (OUTLINED_FUNCTION_8_22())
  {
    sub_240BE10B8(v2, type metadata accessor for FeatureType.IntParameters);
    sub_240BE0B68(v0, &qword_25708D508);
  }
  else
  {
    v7 = *(_QWORD *)(v3 - 184);
    OUTLINED_FUNCTION_6_1(v1, v6, type metadata accessor for FeatureType.IntParameters);
    OUTLINED_FUNCTION_39_8();
    if (v8)
    {
      v9 = *(int *)(*(_QWORD *)(v3 - 248) + 20);
      if ((((uint64_t (*)(uint64_t, uint64_t))sub_240DF5FE0)(v2 + v9, v7 + v9) & 1) != 0)
      {
        OUTLINED_FUNCTION_112_2();
        sub_240BE10B8(v2, type metadata accessor for FeatureType.IntParameters);
        sub_240BE10B8(v0, type metadata accessor for FeatureType);
        return 1;
      }
    }
    OUTLINED_FUNCTION_112_2();
    sub_240BE10B8(v2, type metadata accessor for FeatureType.IntParameters);
    sub_240BE10B8(v0, type metadata accessor for FeatureType);
  }
  return 0;
}

uint64_t static FeatureType.IntParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240CAB8B8(a1, a2, type metadata accessor for FeatureType.IntParameters, (uint64_t (*)(unsigned __int8 *, unsigned __int8 *))sub_240DF5FE0);
}

uint64_t static FeatureType.DoubleParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240CAB8B8(a1, a2, type metadata accessor for FeatureType.DoubleParameters, (uint64_t (*)(unsigned __int8 *, unsigned __int8 *))sub_240DF5FE0);
}

uint64_t sub_240CAB8B8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t (*a3)(_QWORD), uint64_t (*a4)(unsigned __int8 *, unsigned __int8 *))
{
  uint64_t v7;

  if (*a1 != *a2)
    return 0;
  v7 = *(int *)(a3(0) + 20);
  return a4(&a1[v7], &a2[v7]);
}

uint64_t static FeatureType.StringParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240CAB8B8(a1, a2, type metadata accessor for FeatureType.StringParameters, (uint64_t (*)(unsigned __int8 *, unsigned __int8 *))sub_240DF5FE0);
}

uint64_t FeatureType.IntParameters.isOptional.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeatureType.IntParameters.isOptional.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeatureType.IntParameters.isOptional.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t type metadata accessor for FeatureType.DoubleParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F8D0);
}

uint64_t (*FeatureType.DoubleParameters.isOptional.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t type metadata accessor for FeatureType.StringParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F8E0);
}

uint64_t (*FeatureType.StringParameters.isOptional.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t type metadata accessor for FeatureType(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F930);
}

void FeatureType.IntParameters.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240CAB9F4((uint64_t)type metadata accessor for FeatureType.IntParameters, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void FeatureType.DoubleParameters.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240CAB9F4((uint64_t)type metadata accessor for FeatureType.DoubleParameters, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void FeatureType.StringParameters.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240CAB9F4((uint64_t)type metadata accessor for FeatureType.StringParameters, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240CAB9F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t (*v25)(uint64_t);
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  v26 = v20;
  v27 = sub_240F1CF90();
  v28 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_24_1();
  v31 = v30 - v29;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v32);
  v33 = OUTLINED_FUNCTION_60();
  v34 = v25(v33);
  MEMORY[0x24BDAC7A8](v34);
  sub_240BE0BF4((uint64_t)v26, (uint64_t)&a9 - v35, v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v36 + 32) = 0x6E6F6974704F7369;
  *(_QWORD *)(v36 + 40) = 0xEA00000000006C61;
  v37 = *v26;
  *(_QWORD *)(v36 + 72) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v36 + 48) = v37;
  v38 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v21, v39, v40, v38);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v31, *MEMORY[0x24BEE43C0], v27);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void sub_240CABB58()
{
  sub_240CABC08(&qword_25435FB10, (void (*)(uint64_t))type metadata accessor for Proto_FeatureType);
}

void sub_240CABB84()
{
  sub_240CABC08(&qword_25435FE60, (void (*)(uint64_t))type metadata accessor for Proto_Int64FeatureType);
}

void sub_240CABBB0()
{
  sub_240CABC08(&qword_25708D510, (void (*)(uint64_t))type metadata accessor for Proto_DoubleFeatureType);
}

void sub_240CABBDC()
{
  sub_240CABC08(&qword_25708D518, (void (*)(uint64_t))type metadata accessor for Proto_StringFeatureType);
}

void sub_240CABC08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t v3;

  if (!*a1)
  {
    a2(255);
    v3 = OUTLINED_FUNCTION_47_11();
    atomic_store(MEMORY[0x24268C2AC](v3), a1);
  }
  OUTLINED_FUNCTION_44();
}

void sub_240CABC40(_BYTE *a1@<X8>)
{
  *a1 = FeatureType.isOptional.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240CABC68(char *a1)
{
  FeatureType.isOptional.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t initializeBufferWithCopyOfBuffer for FeatureType(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_240CABCE8 + 4 * byte_240F25B80[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t destroy for FeatureType(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(uint64_t, uint64_t);
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = type metadata accessor for FeatureType.IntParameters(0);
      goto LABEL_35;
    case 1:
      v3 = type metadata accessor for FeatureType.DoubleParameters(0);
      goto LABEL_35;
    case 2:
      v3 = type metadata accessor for FeatureType.StringParameters(0);
      goto LABEL_35;
    case 3:
      v4 = a1 + *(int *)(type metadata accessor for FeatureType.ImageParameters(0) + 20);
      v5 = type metadata accessor for Proto_ImageFeatureType(0);
      v6 = v4 + *(int *)(v5 + 24);
      v7 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
      if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v8 = sub_240F1C930();
          v9 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
          v9(v6, v8);
          v10 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
          v11 = v6 + *(int *)(v10 + 20);
          v12 = type metadata accessor for Proto_SizeRange(0);
          if (!__swift_getEnumTagSinglePayload(v11, 1, v12))
            v9(v11 + *(int *)(v12 + 24), v8);
          v13 = v6 + *(int *)(v10 + 24);
          if (!__swift_getEnumTagSinglePayload(v13, 1, v12))
            v9(v13 + *(int *)(v12 + 24), v8);
        }
        else
        {
          swift_bridgeObjectRelease();
          v39 = v6 + *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
          v40 = sub_240F1C930();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 8))(v39, v40);
        }
      }
      v41 = v4 + *(int *)(v5 + 32);
      goto LABEL_36;
    case 4:
      v14 = a1 + *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
      swift_bridgeObjectRelease();
      v15 = type metadata accessor for Proto_ArrayFeatureType(0);
      v16 = v14 + *(int *)(v15 + 24);
      v17 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      if (!__swift_getEnumTagSinglePayload(v16, 1, v17))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
          v19 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
        else
          v19 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
        v42 = v16 + *(int *)(v19 + 20);
        v43 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(v42, v43);
      }
      v41 = v14 + *(int *)(v15 + 32);
      goto LABEL_36;
    case 5:
      a1 += *(int *)(type metadata accessor for FeatureType.DictionaryParameters(0) + 20);
      v20 = type metadata accessor for Proto_DictionaryFeatureType.OneOf_KeyType(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v20))
      {
        v21 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8))(a1, v21);
      }
      v3 = type metadata accessor for Proto_DictionaryFeatureType(0);
      goto LABEL_35;
    case 6:
      v22 = a1 + *(int *)(type metadata accessor for FeatureType.SequenceParameters(0) + 20);
      v23 = type metadata accessor for Proto_SequenceFeatureType.OneOf_Type(0);
      if (!__swift_getEnumTagSinglePayload(v22, 1, v23))
      {
        v24 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 8))(v22, v24);
      }
      v25 = type metadata accessor for Proto_SequenceFeatureType(0);
      v26 = v22 + *(int *)(v25 + 20);
      v27 = sub_240F1C930();
      v48 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8);
      v48(v26, v27);
      v28 = v22 + *(int *)(v25 + 24);
      v29 = type metadata accessor for Proto_SizeRange(0);
      result = __swift_getEnumTagSinglePayload(v28, 1, v29);
      if ((_DWORD)result)
        return result;
      v36 = v28 + *(int *)(v29 + 24);
      v37 = v27;
      v38 = (uint64_t (*)(uint64_t, uint64_t))v48;
      goto LABEL_37;
    case 7:
      a1 += *(int *)(type metadata accessor for FeatureType.StateParameters(0) + 20);
      v30 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v30))
      {
        swift_bridgeObjectRelease();
        v31 = type metadata accessor for Proto_ArrayFeatureType(0);
        v32 = a1 + *(int *)(v31 + 24);
        v33 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
        if (!__swift_getEnumTagSinglePayload(v32, 1, v33))
        {
          v34 = swift_getEnumCaseMultiPayload();
          swift_bridgeObjectRelease();
          if (v34 == 1)
            v35 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
          else
            v35 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
          v44 = v32 + *(int *)(v35 + 20);
          v45 = sub_240F1C930();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v45 - 8) + 8))(v44, v45);
        }
        v46 = a1 + *(int *)(v31 + 32);
        v47 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v47 - 8) + 8))(v46, v47);
      }
      v3 = type metadata accessor for Proto_StateFeatureType(0);
LABEL_35:
      v41 = a1 + *(int *)(v3 + 20);
LABEL_36:
      v37 = sub_240F1C930();
      v38 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 8);
      v36 = v41;
LABEL_37:
      result = v38(v36, v37);
      break;
    default:
      return result;
  }
  return result;
}

void initializeWithCopy for FeatureType()
{
  char *v0;

  v0 = (char *)sub_240CACC28 + 4 * byte_240F25B90[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_BYTE *sub_240CACC28(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__dst, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;

  *v26 = *v27;
  v28 = *(int *)(type metadata accessor for FeatureType.IntParameters(0) + 20);
  v29 = &v26[v28];
  v30 = &v27[v28];
  v31 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 16))(v29, v30, v31);
  swift_storeEnumTagMultiPayload();
  return v26;
}

uint64_t assignWithCopy for FeatureType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240BE10B8(result, type metadata accessor for FeatureType);
    v2 = (char *)&loc_240CAD59C + 4 * byte_240F25B98[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for FeatureType()
{
  char *v0;

  v0 = (char *)sub_240CADF20 + 4 * byte_240F25BA0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_BYTE *sub_240CADF20()
{
  _BYTE *v0;
  _BYTE *v1;
  uint64_t v2;
  _BYTE *v3;
  _BYTE *v4;
  uint64_t v5;

  *v0 = *v1;
  v2 = *(int *)(type metadata accessor for FeatureType.IntParameters(0) + 20);
  v3 = &v0[v2];
  v4 = &v1[v2];
  v5 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for FeatureType(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240BE10B8(result, type metadata accessor for FeatureType);
    v2 = (char *)&loc_240CAE824 + 4 * byte_240F25BA8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_240CAF0B8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;

  result = type metadata accessor for FeatureType.IntParameters(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for FeatureType.DoubleParameters(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for FeatureType.StringParameters(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for FeatureType.ImageParameters(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for FeatureType.ShapedArrayParameters();
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for FeatureType.DictionaryParameters(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for FeatureType.SequenceParameters(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for FeatureType.StateParameters(319);
                if (v8 <= 0x3F)
                {
                  swift_initEnumMetadataMultiPayload();
                  return 0;
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t dispatch thunk of FeatureTypeParameters.isOptional.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of FeatureTypeParameters.isOptional.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of FeatureTypeParameters.isOptional.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t getEnumTagSinglePayload for FeatureType.IntParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CAF21C(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Proto_Int64FeatureType);
}

uint64_t storeEnumTagSinglePayload for FeatureType.IntParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CAF234(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Proto_Int64FeatureType);
}

uint64_t getEnumTagSinglePayload for FeatureType.DoubleParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CAF250(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Proto_DoubleFeatureType);
}

uint64_t storeEnumTagSinglePayload for FeatureType.DoubleParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CAF268(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Proto_DoubleFeatureType);
}

void _s20MLModelSpecification11FeatureTypeO13IntParametersVwCP_0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a3 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v3 = sub_240F1C930();
    OUTLINED_FUNCTION_15_19(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  }
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification11FeatureTypeO13IntParametersVwcp_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_23(a1, a2);
  OUTLINED_FUNCTION_15_19(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification11FeatureTypeO13IntParametersVwca_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_23(a1, a2);
  OUTLINED_FUNCTION_15_19(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification11FeatureTypeO13IntParametersVwtk_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_23(a1, a2);
  OUTLINED_FUNCTION_15_19(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification11FeatureTypeO13IntParametersVwta_0(_BYTE *a1, _BYTE *a2)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_2_23(a1, a2);
  OUTLINED_FUNCTION_15_19(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t getEnumTagSinglePayload for FeatureType.StringParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CAF3B8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Proto_StringFeatureType);
}

uint64_t __swift_get_extra_inhabitant_indexTm(unsigned __int8 *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  unsigned int v5;
  BOOL v6;
  int v7;
  uint64_t v11;

  if ((_DWORD)a2 == 254)
  {
    v5 = *a1;
    v6 = v5 >= 2;
    v7 = (v5 + 2147483646) & 0x7FFFFFFF;
    if (v6)
      return (v7 + 1);
    else
      return 0;
  }
  else
  {
    v11 = a4(0);
    return __swift_getEnumTagSinglePayload((uint64_t)&a1[*(int *)(a3 + 20)], a2, v11);
  }
}

uint64_t storeEnumTagSinglePayload for FeatureType.StringParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CAF444(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  __swift_store_extra_inhabitant_indexTm(a1, a2, a3, a4, type metadata accessor for Proto_StringFeatureType);
}

void __swift_store_extra_inhabitant_indexTm(_BYTE *a1, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  uint64_t v8;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v8 = a5(0);
    __swift_storeEnumTagSinglePayload((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v8);
  }
}

uint64_t sub_240CAF4B0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240CAF524(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_2_23(_BYTE *a1, _BYTE *a2)
{
  *a1 = *a2;
  return sub_240F1C930();
}

void OUTLINED_FUNCTION_4_22()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240BE0B90(v2, v1, v0);
}

void OUTLINED_FUNCTION_5_25(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240BE10B8(*(_QWORD *)(v2 - 168), a2);
}

void OUTLINED_FUNCTION_7_19(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(*(_QWORD *)(v2 - 96), a2);
}

uint64_t OUTLINED_FUNCTION_8_22()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_9_20()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_10_20(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BE0BF4(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_11_23@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void OUTLINED_FUNCTION_12_20(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BE0B90(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_19@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

void OUTLINED_FUNCTION_16_17(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0B90(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_17_19()
{
  _BYTE *v0;

  *v0 = 0;
  return type metadata accessor for Proto_FeatureType(0);
}

uint64_t OUTLINED_FUNCTION_20_11()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_21_14()
{
  return type metadata accessor for Proto_FeatureType(0);
}

void OUTLINED_FUNCTION_23_12(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0B90(v3, a2, a3);
}

uint64_t OUTLINED_FUNCTION_24_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 160) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_25_11@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_8()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_27_11()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_29_11@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 20);
}

uint64_t OUTLINED_FUNCTION_30_13()
{
  return type metadata accessor for FeatureType.DictionaryParameters(0);
}

uint64_t OUTLINED_FUNCTION_31_10()
{
  return type metadata accessor for FeatureType.ShapedArrayParameters();
}

uint64_t OUTLINED_FUNCTION_32_12()
{
  return type metadata accessor for FeatureType.ImageParameters(0);
}

uint64_t OUTLINED_FUNCTION_36_13()
{
  return type metadata accessor for FeatureType(0);
}

uint64_t OUTLINED_FUNCTION_45_8()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_47_11()
{
  uint64_t v0;

  return v0;
}

void static NeuralNetwork.Layer.broadcastableMultiply(name:inputNames:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_24_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  *(_QWORD *)(v14 + 48) = a5;
  *(_QWORD *)(v14 + 56) = a6;
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a7;
  *(_QWORD *)(v15 + 40) = a8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t NeuralNetwork.Layer.BroadcastableMultiplyParameters.hash(into:)()
{
  type metadata accessor for Proto_MultiplyBroadcastableLayerParams(0);
  sub_240C30D44(&qword_25708D520, type metadata accessor for Proto_MultiplyBroadcastableLayerParams, (uint64_t)&unk_240F4FC5C);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.BroadcastableMultiplyParameters.hashValue.getter()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_MultiplyBroadcastableLayerParams(0);
  sub_240C30D44(&qword_25708D520, type metadata accessor for Proto_MultiplyBroadcastableLayerParams, (uint64_t)&unk_240F4FC5C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240CAF920()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_MultiplyBroadcastableLayerParams(0);
  sub_240C30D44(&qword_25708D520, type metadata accessor for Proto_MultiplyBroadcastableLayerParams, (uint64_t)&unk_240F4FC5C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t NeuralNetwork.Layer.BroadcastableMultiplyParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  type metadata accessor for NeuralNetwork.Layer.BroadcastableMultiplyParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240CAFB0C(v1, v13 - v12);
  v14 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  return sub_240F1CF9C();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastableMultiplyParameters()
{
  uint64_t result;

  result = qword_25708D538;
  if (!qword_25708D538)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CAFB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.BroadcastableMultiplyParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CAFB50()
{
  return sub_240C30D44(&qword_25708D528, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.BroadcastableMultiplyParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.BroadcastableMultiplyParameters);
}

uint64_t sub_240CAFB7C()
{
  return sub_240C30D44(&qword_25708D530, type metadata accessor for Proto_MultiplyBroadcastableLayerParams, (uint64_t)&unk_240F4CE44);
}

uint64_t _s31BroadcastableMultiplyParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CAFBB8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_21();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s31BroadcastableMultiplyParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CAFBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_21();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t OUTLINED_FUNCTION_1_21()
{
  return type metadata accessor for Proto_MultiplyBroadcastableLayerParams(0);
}

void sub_240CAFC28(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = OUTLINED_FUNCTION_90();
  type metadata accessor for SoundAnalysisPreprocessorKind(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_11_5();
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(0);
  OUTLINED_FUNCTION_5_8(a1, 1);
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240CB04F4(a1);
  sub_240BE0BF4(v1, v3, type metadata accessor for SoundAnalysisPreprocessorKind);
  sub_240BE0B90(v3, v2, type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters);
  sub_240BE0B90(v2, a1, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish);
  OUTLINED_FUNCTION_5_8(a1, 0);
  OUTLINED_FUNCTION_13();
}

void sub_240CAFD04(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t (*v13)(uint64_t);
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for SoundAnalysisPreprocessorKind(0);
  OUTLINED_FUNCTION_0();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  OUTLINED_FUNCTION_0();
  ((void (*)(void))MEMORY[0x24BDAC7A8])();
  v6 = OUTLINED_FUNCTION_90();
  v7 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType(v6);
  OUTLINED_FUNCTION_0();
  v8 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v15 - v11;
  sub_240CB0534(a1, v3);
  if (__swift_getEnumTagSinglePayload(v3, 1, v7) == 1)
  {
    sub_240CB04F4(v3);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240BE27A0(a1, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing);
    v13 = type metadata accessor for SoundAnalysisPreprocessorKind;
    v14 = v2;
  }
  else
  {
    sub_240BE27A0(a1, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing);
    sub_240BE0B90(v3, (uint64_t)v12, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
    sub_240BE0B90((uint64_t)v12, (uint64_t)v10, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.OneOf_SoundAnalysisPreprocessingType);
    v13 = type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish;
    v14 = (uint64_t)v10;
  }
  sub_240BE0B90(v14, a2, v13);
  OUTLINED_FUNCTION_13();
}

uint64_t static SoundAnalysisPreprocessorKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_0();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v15 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D548);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_11_5();
  v13 = v2 + *(int *)(v12 + 48);
  sub_240BE0BF4(a1, v2, type metadata accessor for SoundAnalysisPreprocessorKind);
  sub_240BE0BF4(a2, v13, type metadata accessor for SoundAnalysisPreprocessorKind);
  OUTLINED_FUNCTION_28(v2, (uint64_t)v10);
  OUTLINED_FUNCTION_28(v13, (uint64_t)v8);
  LOBYTE(a2) = _s20MLModelSpecification29SoundAnalysisPreprocessorKindO16VGGishParametersV2eeoiySbAE_AEtFZ_0((uint64_t)v10, (uint64_t)v8);
  OUTLINED_FUNCTION_17_13((uint64_t)v8);
  OUTLINED_FUNCTION_17_13((uint64_t)v10);
  return a2 & 1;
}

uint64_t type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters(uint64_t a1)
{
  return sub_240BE3274(a1, qword_254375290);
}

uint64_t type metadata accessor for SoundAnalysisPreprocessorKind(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360328);
}

void SoundAnalysisPreprocessorKind.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  OUTLINED_FUNCTION_10_21();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_80();
  type metadata accessor for SoundAnalysisPreprocessorKind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  sub_240BE0BF4(v0, v5 - v4, v7);
  OUTLINED_FUNCTION_28(v6, v1);
  sub_240F1CF48();
  OUTLINED_FUNCTION_6_18();
  sub_240BE18B8(&qword_25708D3E0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25644);
  sub_240F1CC54();
  OUTLINED_FUNCTION_17_13(v1);
}

void SoundAnalysisPreprocessorKind.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  SoundAnalysisPreprocessorKind.hash(into:)();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240CB00AC()
{
  sub_240F1CF3C();
  SoundAnalysisPreprocessorKind.hash(into:)();
  return sub_240F1CF78();
}

uint64_t SoundAnalysisPreprocessorKind.VGGishParameters.hash(into:)()
{
  OUTLINED_FUNCTION_6_18();
  sub_240BE18B8(&qword_25708D3E0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25644);
  return sub_240F1CC54();
}

void SoundAnalysisPreprocessorKind.VGGishParameters.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_6_18();
  sub_240BE18B8(&qword_25708D3E0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25644);
  sub_240F1CC54();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240CB019C()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
  sub_240BE18B8(&qword_25708D3E0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25644);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void SoundAnalysisPreprocessorKind.VGGishParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;

  v2 = v0;
  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_90();
  type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters(v9);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v2, v12 - v11, v13);
  v14 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE43C0], v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  sub_240F1CF9C();
  OUTLINED_FUNCTION_13();
}

void sub_240CB033C()
{
  sub_240BE18B8(&qword_25708D550, type metadata accessor for SoundAnalysisPreprocessorKind, (uint64_t)&protocol conformance descriptor for SoundAnalysisPreprocessorKind);
}

void sub_240CB0368()
{
  sub_240BE18B8(&qword_25708D3F0, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing, (uint64_t)&unk_240F255CC);
}

void sub_240CB0394()
{
  sub_240BE18B8(&qword_25708D558, type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters, (uint64_t)&protocol conformance descriptor for SoundAnalysisPreprocessorKind.VGGishParameters);
}

void sub_240CB03C4()
{
  sub_240BE18B8(&qword_25708D3D8, type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish, (uint64_t)&unk_240F25554);
}

uint64_t getEnumTagSinglePayload for SoundAnalysisPreprocessorKind()
{
  type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB042C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_6_18();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SoundAnalysisPreprocessorKind()
{
  type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB04A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_6_18();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t getEnumTagSinglePayload for SoundAnalysisPreprocessorKind.VGGishParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for SoundAnalysisPreprocessorKind.VGGishParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB04F4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240CB0534(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D3C0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_6_18()
{
  return type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing.Vggish(0);
}

uint64_t OUTLINED_FUNCTION_10_21()
{
  return type metadata accessor for SoundAnalysisPreprocessorKind.VGGishParameters(0);
}

#error "240CB071C: call analysis failed (funcsize=360)"

void sub_240CB0B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  v28 = v27;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v30);
  v32 = (uint64_t *)((char *)&a9 - v31);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D560);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&a9 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_10_3();
  v39 = (uint64_t *)(v20 + *(int *)(v38 + 20));
  v40 = *v39;
  if (v26 && v26 < 3)
    goto LABEL_7;
  sub_240C3E408(v20, v22, type metadata accessor for FeatureType.ImageParameters);
  if (v40)
  {
    sub_240C32310(v22, type metadata accessor for FeatureType.ImageParameters);
LABEL_6:
    v40 = *v39;
LABEL_7:
    v42 = v39[1];
LABEL_8:
    *v28 = v40;
    v28[1] = v42;
    OUTLINED_FUNCTION_1();
    return;
  }
  v41 = *(_QWORD *)(v22 + *(int *)(v36 + 20) + 8);
  sub_240C32310(v22, type metadata accessor for FeatureType.ImageParameters);
  if (v41)
    goto LABEL_6;
  v40 = *v39;
  v42 = v39[1];
  FeatureType.ImageParameters.sizeFlexibility.getter((uint64_t)v35);
  v43 = type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v43) == 1)
    goto LABEL_8;
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v46 = *(_QWORD *)v35;
    if (*(_QWORD *)(*(_QWORD *)v35 + 16))
    {
      v40 = *(_QWORD *)(v46 + 32);
      v42 = *(_QWORD *)(v46 + 40);
    }
    swift_bridgeObjectRelease();
    goto LABEL_8;
  }
  v44 = (uint64_t)&v35[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48)];
  sub_240CB1924((uint64_t)v35, (uint64_t)v32);
  sub_240CB1924(v44, (uint64_t)v21);
  v40 = *v32;
  if (*v32 < 0)
  {
    __break(1u);
  }
  else
  {
    v45 = sub_240C32310((uint64_t)v32, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    v42 = *v21;
    if ((*v21 & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_50_11(v45, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
      goto LABEL_8;
    }
  }
  __break(1u);
}

void sub_240CB0D50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_22();
  v2 = v0;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v9 = OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v31 - v12;
  if (!*(_QWORD *)(v6 + 16))
  {
    v32 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
    OUTLINED_FUNCTION_36_14();
    v26 = OUTLINED_FUNCTION_10_22();
    v28 = v27;
    *v8 = MEMORY[0x24BEE4AF8];
    sub_240C02F64(0xD000000000000023, 0x8000000240F52B40, 2);
    swift_bridgeObjectRetain();
    sub_240C9545C();
    v29 = *(_QWORD *)(*v8 + 16);
    sub_240C95498(v29);
    v18 = *v8;
    *(_QWORD *)(v18 + 16) = v29 + 1;
    v30 = v18 + 48 * v29;
    *(_BYTE *)(v30 + 32) = 0;
    *(_QWORD *)(v30 + 40) = 0xD000000000000023;
    *(_QWORD *)(v30 + 48) = 0x8000000240F52B40;
    *(_BYTE *)(v30 + 56) = 2;
    *(_QWORD *)(v30 + 64) = v26;
    *(_QWORD *)(v30 + 72) = v28;
    v24 = 0xD000000000000023;
    v25 = 0x8000000240F52B40;
    goto LABEL_7;
  }
  v14 = *(_QWORD *)(v2 + *(int *)(v9 + 20));
  sub_240C3E408(v2, (uint64_t)&v31 - v12, type metadata accessor for FeatureType.ImageParameters);
  if (v14 < 1)
  {
    OUTLINED_FUNCTION_43_10((uint64_t)v13);
    v16 = sub_240C3E408(v2, v1, type metadata accessor for FeatureType.ImageParameters);
    goto LABEL_9;
  }
  v15 = *(_QWORD *)&v13[*(int *)(v9 + 20) + 8];
  sub_240C32310((uint64_t)v13, type metadata accessor for FeatureType.ImageParameters);
  v16 = sub_240C3E408(v2, v1, type metadata accessor for FeatureType.ImageParameters);
  if (v15 < 1)
  {
LABEL_9:
    OUTLINED_FUNCTION_50_11(v16, type metadata accessor for FeatureType.ImageParameters);
    v18 = MEMORY[0x24BEE4AF8];
    goto LABEL_10;
  }
  v17 = sub_240D35020(*(_QWORD *)(v1 + *(int *)(v9 + 20)), *(_QWORD *)(v1 + *(int *)(v9 + 20) + 8), v6);
  OUTLINED_FUNCTION_50_11(v17, type metadata accessor for FeatureType.ImageParameters);
  v18 = MEMORY[0x24BEE4AF8];
  if ((v17 & 1) == 0)
  {
    v32 = v4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
    OUTLINED_FUNCTION_36_14();
    v19 = OUTLINED_FUNCTION_10_22();
    v21 = v20;
    *v8 = v18;
    sub_240C02F64(0xD000000000000041, 0x8000000240F52AF0, 2);
    swift_bridgeObjectRetain();
    sub_240C9545C();
    v22 = *(_QWORD *)(*v8 + 16);
    sub_240C95498(v22);
    v18 = *v8;
    *(_QWORD *)(v18 + 16) = v22 + 1;
    v23 = v18 + 48 * v22;
    *(_BYTE *)(v23 + 32) = 0;
    *(_QWORD *)(v23 + 40) = 0xD000000000000041;
    *(_QWORD *)(v23 + 48) = 0x8000000240F52AF0;
    *(_BYTE *)(v23 + 56) = 2;
    *(_QWORD *)(v23 + 64) = v19;
    *(_QWORD *)(v23 + 72) = v21;
    v24 = 0xD000000000000041;
    v25 = 0x8000000240F52AF0;
LABEL_7:
    sub_240C02F7C(v24, v25, 2);
    swift_bridgeObjectRelease();
  }
LABEL_10:
  *v8 = v18;
  OUTLINED_FUNCTION_1();
}

void sub_240CB0FF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  const char *v5;
  const char *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char v18;
  uint64_t *v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  unint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t *v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;

  OUTLINED_FUNCTION_22();
  v92 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v88 = v7;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_85();
  v90 = (uint64_t *)v9;
  MEMORY[0x24BDAC7A8](v10);
  v12 = (uint64_t *)((char *)&v85 - v11);
  v91 = OUTLINED_FUNCTION_40_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_85();
  v89 = v14;
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v85 - v16;
  v95 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_41_8();
  if (v18)
    OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_32_13();
  sub_240F14C64(v19);
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_33_12();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    OUTLINED_FUNCTION_0_16();
  OUTLINED_FUNCTION_41_8();
  if (v18)
    OUTLINED_FUNCTION_27_12();
  OUTLINED_FUNCTION_32_13();
  sub_240F14C64(v20);
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_33_12();
  v21 = v91;
  v22 = (uint64_t *)(v92 + *(int *)(v91 + 20));
  v23 = *v22;
  sub_240C3E408(v92, (uint64_t)v17, type metadata accessor for FeatureType.ImageParameters);
  sub_240C3E408((uint64_t)v6, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  v87 = v22;
  if (v23 < 1)
  {
    sub_240C32310((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240C32310((uint64_t)v17, type metadata accessor for FeatureType.ImageParameters);
    goto LABEL_22;
  }
  v23 = *(_QWORD *)&v17[*(int *)(v21 + 20)];
  sub_240C32310((uint64_t)v17, type metadata accessor for FeatureType.ImageParameters);
  v24 = *v12;
  if (*v12 < 0)
  {
    __break(1u);
    goto LABEL_59;
  }
  sub_240C32310((uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  if (v23 >= v24)
    goto LABEL_22;
  OUTLINED_FUNCTION_13_17();
  sub_240F1CDEC();
  OUTLINED_FUNCTION_30_14();
  v93 = *v22;
  OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_18_12();
  if ((*(_QWORD *)v6 & 0x8000000000000000) != 0)
    goto LABEL_60;
  v93 = *(_QWORD *)v6;
  OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_24_12();
  OUTLINED_FUNCTION_23_13();
  v25 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_61;
  while (1)
  {
    v26 = *(_QWORD *)(v25 + 16);
    OUTLINED_FUNCTION_41_8();
    if (v18)
    {
      OUTLINED_FUNCTION_15_20(v27);
      sub_240C02D78();
      v25 = v70;
    }
    *(_QWORD *)(v25 + 16) = v23;
    OUTLINED_FUNCTION_22_9(v25 + 16 * v26);
    v94 = v25;
    OUTLINED_FUNCTION_315();
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
    OUTLINED_FUNCTION_47_12();
    v86 = OUTLINED_FUNCTION_6_19();
    v23 = v28;
    v29 = v95;
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_329();
    OUTLINED_FUNCTION_1_22((uint64_t)v22, v24);
    v30 = v4;
    if ((OUTLINED_FUNCTION_48_9() & 1) == 0)
    {
      OUTLINED_FUNCTION_7_20();
      v29 = v71;
    }
    v31 = *(_QWORD *)(v29 + 16);
    if (v31 >= *(_QWORD *)(v29 + 24) >> 1)
    {
      OUTLINED_FUNCTION_3_19();
      v29 = v72;
    }
    *(_QWORD *)(v29 + 16) = v31 + 1;
    OUTLINED_FUNCTION_16_18(v29 + 48 * v31);
    *(_QWORD *)(v32 + 64) = v86;
    *(_QWORD *)(v32 + 72) = v23;
    OUTLINED_FUNCTION_14_22();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_122_2();
    OUTLINED_FUNCTION_122_2();
    v95 = v29;
    v4 = v30;
    OUTLINED_FUNCTION_38_9();
LABEL_22:
    v33 = *((_QWORD *)v6 + 1);
    v6 = ") is greater than the allowed maximum (";
    if ((v33 & 0x8000000000000000) == 0)
    {
      v34 = *v22;
      if (v33 < *v22)
      {
        OUTLINED_FUNCTION_13_17();
        sub_240F1CDEC();
        OUTLINED_FUNCTION_30_14();
        v93 = v34;
        v35 = MEMORY[0x24BEE1768];
        v22 = (uint64_t *)MEMORY[0x24BEE17D8];
        OUTLINED_FUNCTION_11_24();
        OUTLINED_FUNCTION_12_21();
        OUTLINED_FUNCTION_5_4();
        OUTLINED_FUNCTION_18_12();
        v93 = v33;
        OUTLINED_FUNCTION_11_24();
        OUTLINED_FUNCTION_9_21();
        OUTLINED_FUNCTION_173();
        OUTLINED_FUNCTION_24_12();
        OUTLINED_FUNCTION_23_13();
        v36 = v2;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_0_16();
          v36 = v73;
        }
        v37 = *(_QWORD *)(v36 + 16);
        OUTLINED_FUNCTION_41_8();
        if (v18)
        {
          OUTLINED_FUNCTION_15_20(v38);
          sub_240C02D78();
          v36 = v74;
        }
        *(_QWORD *)(v36 + 16) = v23;
        OUTLINED_FUNCTION_22_9(v36 + 16 * v37);
        v94 = v36;
        OUTLINED_FUNCTION_315();
        __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
        OUTLINED_FUNCTION_47_12();
        v39 = OUTLINED_FUNCTION_6_19();
        v41 = v40;
        v42 = v95;
        OUTLINED_FUNCTION_315();
        OUTLINED_FUNCTION_329();
        OUTLINED_FUNCTION_1_22((uint64_t)v22, v35);
        v43 = v4;
        if ((OUTLINED_FUNCTION_48_9() & 1) == 0)
        {
          OUTLINED_FUNCTION_7_20();
          v42 = v75;
        }
        v44 = *(_QWORD *)(v42 + 16);
        if (v44 >= *(_QWORD *)(v42 + 24) >> 1)
        {
          OUTLINED_FUNCTION_3_19();
          v42 = v76;
        }
        *(_QWORD *)(v42 + 16) = v44 + 1;
        OUTLINED_FUNCTION_16_18(v42 + 48 * v44);
        *(_QWORD *)(v45 + 64) = v39;
        *(_QWORD *)(v45 + 72) = v41;
        OUTLINED_FUNCTION_14_22();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_122_2();
        OUTLINED_FUNCTION_122_2();
        v95 = v42;
        v4 = v43;
        OUTLINED_FUNCTION_38_9();
        v6 = ") is greater than the allowed maximum (";
      }
    }
    v46 = v22[1];
    v23 = v89;
    sub_240C3E408(v92, v89, type metadata accessor for FeatureType.ImageParameters);
    v47 = v90;
    sub_240C3E408((uint64_t)v4, (uint64_t)v90, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    if (v46 < 1)
    {
      sub_240C32310((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
      sub_240C32310(v23, type metadata accessor for FeatureType.ImageParameters);
      goto LABEL_46;
    }
    v24 = *(_QWORD *)(v23 + *(int *)(v91 + 20) + 8);
    sub_240C32310(v23, type metadata accessor for FeatureType.ImageParameters);
    v23 = *v47;
    if ((*v47 & 0x8000000000000000) == 0)
      break;
LABEL_59:
    __break(1u);
LABEL_60:
    __break(1u);
LABEL_61:
    OUTLINED_FUNCTION_0_16();
    v25 = v69;
  }
  sub_240C32310((uint64_t)v47, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  if (v24 >= v23)
    goto LABEL_46;
  OUTLINED_FUNCTION_13_17();
  sub_240F1CDEC();
  OUTLINED_FUNCTION_18_12();
  v93 = v22[1];
  OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_18_12();
  if ((*v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_63;
  }
  v93 = *v4;
  OUTLINED_FUNCTION_26_9();
  OUTLINED_FUNCTION_9_21();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_24_12();
  OUTLINED_FUNCTION_23_13();
  v48 = v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
LABEL_63:
    OUTLINED_FUNCTION_0_16();
    v48 = v77;
  }
  v50 = *(_QWORD *)(v48 + 16);
  v49 = *(_QWORD *)(v48 + 24);
  v51 = v4;
  if (v50 >= v49 >> 1)
  {
    OUTLINED_FUNCTION_15_20(v49);
    sub_240C02D78();
    v48 = v78;
  }
  *(_QWORD *)(v48 + 16) = v50 + 1;
  OUTLINED_FUNCTION_19_12(v48 + 16 * v50);
  v94 = v48;
  OUTLINED_FUNCTION_315();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
  sub_240C89CD8();
  v52 = sub_240F1CC60();
  v23 = v53;
  v54 = v95;
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_1_22((uint64_t)v22, v24);
  if ((OUTLINED_FUNCTION_48_9() & 1) == 0)
  {
    OUTLINED_FUNCTION_7_20();
    v54 = v79;
  }
  v55 = *(_QWORD *)(v54 + 16);
  if (v55 >= *(_QWORD *)(v54 + 24) >> 1)
  {
    OUTLINED_FUNCTION_3_19();
    v54 = v80;
  }
  *(_QWORD *)(v54 + 16) = v55 + 1;
  OUTLINED_FUNCTION_16_18(v54 + 48 * v55);
  *(_QWORD *)(v56 + 64) = v52;
  *(_QWORD *)(v56 + 72) = v23;
  OUTLINED_FUNCTION_14_22();
  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_122_2();
  OUTLINED_FUNCTION_122_2();
  v95 = v54;
  v4 = v51;
  OUTLINED_FUNCTION_38_9();
LABEL_46:
  v57 = v4[1];
  if ((v57 & 0x8000000000000000) == 0)
  {
    v58 = v22[1];
    if (v57 < v58)
    {
      OUTLINED_FUNCTION_13_17();
      sub_240F1CDEC();
      OUTLINED_FUNCTION_18_12();
      v93 = v58;
      v59 = MEMORY[0x24BEE1768];
      v60 = MEMORY[0x24BEE17D8];
      OUTLINED_FUNCTION_11_24();
      OUTLINED_FUNCTION_12_21();
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_18_12();
      v93 = v57;
      OUTLINED_FUNCTION_11_24();
      OUTLINED_FUNCTION_9_21();
      OUTLINED_FUNCTION_173();
      OUTLINED_FUNCTION_24_12();
      OUTLINED_FUNCTION_23_13();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_0_16();
        v2 = v81;
      }
      v61 = *(_QWORD *)(v2 + 16);
      OUTLINED_FUNCTION_41_8();
      if (v18)
      {
        OUTLINED_FUNCTION_15_20(v62);
        sub_240C02D78();
        v2 = v82;
      }
      *(_QWORD *)(v2 + 16) = v23;
      OUTLINED_FUNCTION_19_12(v2 + 16 * v61);
      v94 = v2;
      OUTLINED_FUNCTION_315();
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
      OUTLINED_FUNCTION_47_12();
      v63 = OUTLINED_FUNCTION_6_19();
      v65 = v64;
      v66 = v95;
      OUTLINED_FUNCTION_315();
      OUTLINED_FUNCTION_329();
      OUTLINED_FUNCTION_1_22(v60, v59);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_45_9();
        v66 = v83;
      }
      v67 = *(_QWORD *)(v66 + 16);
      if (v67 >= *(_QWORD *)(v66 + 24) >> 1)
      {
        OUTLINED_FUNCTION_45_9();
        v66 = v84;
      }
      *(_QWORD *)(v66 + 16) = v67 + 1;
      OUTLINED_FUNCTION_16_18(v66 + 48 * v67);
      *(_QWORD *)(v68 + 64) = v63;
      *(_QWORD *)(v68 + 72) = v65;
      OUTLINED_FUNCTION_14_22();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_122_2();
      OUTLINED_FUNCTION_122_2();
      v95 = v66;
    }
  }
  *v88 = v95;
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240CB1924(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SizeRange();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_0_16()
{
  sub_240C02D78();
}

uint64_t OUTLINED_FUNCTION_1_22(uint64_t a1, uint64_t a2)
{
  sub_240C02F64(a1, a2, 2);
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_6_19()
{
  return sub_240F1CC60();
}

void OUTLINED_FUNCTION_7_20()
{
  sub_240C02BB4();
}

uint64_t OUTLINED_FUNCTION_9_21()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_10_22()
{
  return sub_240F1CC60();
}

uint64_t OUTLINED_FUNCTION_11_24()
{
  return sub_240F1CED0();
}

uint64_t OUTLINED_FUNCTION_12_21()
{
  return sub_240F1CCE4();
}

void OUTLINED_FUNCTION_13_17()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 104) = 0;
  *(_QWORD *)(v0 - 96) = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_14_22()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C02F7C(v1, v0, 2);
}

BOOL OUTLINED_FUNCTION_15_20@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_16_18(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(a1 + 32) = 0;
  *(_QWORD *)(a1 + 40) = v2;
  *(_QWORD *)(a1 + 48) = v1;
  *(_BYTE *)(a1 + 56) = 2;
}

uint64_t OUTLINED_FUNCTION_18_12()
{
  return sub_240F1CCE4();
}

void OUTLINED_FUNCTION_19_12(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 32) = 0x6152746867696568;
  *(_QWORD *)(a1 + 40) = 0xEB0000000065676ELL;
}

void OUTLINED_FUNCTION_20_12()
{
  sub_240C02BB4();
}

void OUTLINED_FUNCTION_21_15()
{
  sub_240C02BB4();
}

void OUTLINED_FUNCTION_22_9(uint64_t a1@<X8>)
{
  *(_QWORD *)(a1 + 32) = 0x6E61526874646977;
  *(_QWORD *)(a1 + 40) = 0xEA00000000006567;
}

uint64_t OUTLINED_FUNCTION_23_13()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_24_12()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_26_9()
{
  return sub_240F1CED0();
}

void OUTLINED_FUNCTION_27_12()
{
  sub_240C02D78();
}

uint64_t OUTLINED_FUNCTION_28_8()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_29_12()
{
  return sub_240F1CC60();
}

uint64_t OUTLINED_FUNCTION_30_14()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_32_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v4 + 16) = v2;
  v5 = v4 + 16 * v3;
  *(_QWORD *)(v5 + 32) = v1;
  *(_QWORD *)(v5 + 40) = v0;
  return v4;
}

void OUTLINED_FUNCTION_33_12()
{
  sub_240C94908();
}

uint64_t OUTLINED_FUNCTION_35_11()
{
  return swift_bridgeObjectRetain();
}

unint64_t OUTLINED_FUNCTION_36_14()
{
  return sub_240C89CD8();
}

uint64_t OUTLINED_FUNCTION_37_8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_40_9()
{
  return type metadata accessor for FeatureType.ImageParameters(0);
}

uint64_t OUTLINED_FUNCTION_43_10(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  return sub_240C32310(a1, v1);
}

void OUTLINED_FUNCTION_45_9()
{
  sub_240C02BB4();
}

uint64_t OUTLINED_FUNCTION_46_8()
{
  return type metadata accessor for SizeRange();
}

unint64_t OUTLINED_FUNCTION_47_12()
{
  return sub_240C89CD8();
}

uint64_t OUTLINED_FUNCTION_48_9()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_49_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = v1;
  *(_BYTE *)(v0 + 48 * v2 + 32) = 0;
}

uint64_t OUTLINED_FUNCTION_50_11(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  return sub_240C32310(v2, a2);
}

uint64_t sub_240CB1BE4(uint64_t a1)
{
  return sub_240CB1BF8(a1);
}

uint64_t sub_240CB1BF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;

  type metadata accessor for Proto_Model(0);
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  v5 = *(_QWORD *)(a1 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v13 = MEMORY[0x24BEE4AF8];
    sub_240BF0D84();
    v6 = v13;
    type metadata accessor for Model(0);
    OUTLINED_FUNCTION_51_2();
    v8 = a1 + v7;
    v10 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240BE0BF4(v8, v1, type metadata accessor for Proto_Model);
      v11 = *(_QWORD *)(v13 + 16);
      if (v11 >= *(_QWORD *)(v13 + 24) >> 1)
        sub_240BF0D84();
      *(_QWORD *)(v13 + 16) = v11 + 1;
      sub_240BE0B90(v1, v13+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v11, type metadata accessor for Proto_Model);
      v8 += v10;
      --v5;
    }
    while (v5);
  }
  return v6;
}

void PipelineConfiguration.models.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  OUTLINED_FUNCTION_22();
  type metadata accessor for Model(0);
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_54_11();
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_7_4();
      OUTLINED_FUNCTION_21_2();
      if (v5)
        OUTLINED_FUNCTION_38_10();
      OUTLINED_FUNCTION_0_1();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void PipelineClassifierConfiguration.models.getter()
{
  sub_240CB1E00();
}

void PipelineRegressorConfiguration.models.getter()
{
  sub_240CB1E00();
}

void sub_240CB1E00()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  _QWORD v19[2];

  OUTLINED_FUNCTION_22();
  v3 = v2;
  type metadata accessor for Model(0);
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (_QWORD *)((char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = v3(0);
  sub_240CB2F28(v0 + *(int *)(v12 + 20), (uint64_t)v7);
  v13 = OUTLINED_FUNCTION_17_20((uint64_t)v7);
  v15 = MEMORY[0x24BEE4AF8];
  if ((_DWORD)v13 == 1)
  {
    *v11 = MEMORY[0x24BEE4AF8];
    v11[1] = v15;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240CB2F70((uint64_t)v7);
  }
  else
  {
    OUTLINED_FUNCTION_55_7(v13, v14, type metadata accessor for Proto_Pipeline);
  }
  v16 = *v11;
  OUTLINED_FUNCTION_55_0();
  sub_240CB2FB0((uint64_t)v11);
  v17 = *(_QWORD *)(v16 + 16);
  if (v17)
  {
    v19[1] = v15;
    OUTLINED_FUNCTION_26_10();
    OUTLINED_FUNCTION_54_11();
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_7_4();
      OUTLINED_FUNCTION_21_2();
      if (v18)
        OUTLINED_FUNCTION_38_10();
      OUTLINED_FUNCTION_0_1();
      v8 += v1;
      --v17;
    }
    while (v17);
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_1();
}

BOOL static PipelineConfiguration.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_BYTE *, uint64_t, uint64_t);
  char v18;
  void (*v19)(_BYTE *, uint64_t);
  _BYTE v21[64];
  uint64_t v22;
  uint64_t v23;

  OUTLINED_FUNCTION_66();
  v22 = v0;
  v23 = v1;
  v3 = v2;
  v5 = v4;
  v6 = OUTLINED_FUNCTION_20_0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v8);
  v12 = &v21[-v11];
  sub_240BEED68();
  if ((v13 & 1) == 0)
    return 0;
  sub_240BEAC24(*(_QWORD **)(v5 + 8), *(_QWORD **)(v3 + 8));
  if ((v14 & 1) == 0)
    return 0;
  v15 = OUTLINED_FUNCTION_2_24();
  v16 = v5 + *(int *)(v15 + 24);
  v17 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16);
  v17(v12, v16, v6);
  v17(v10, v3 + *(int *)(v15 + 24), v6);
  sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v18 = sub_240F1CC90();
  v19 = *(void (**)(_BYTE *, uint64_t))(v7 + 8);
  v19(v10, v6);
  v19(v12, v6);
  return (v18 & 1) != 0;
}

void sub_240CB20BC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  PipelineConfiguration.models.setter(v0);
}

void PipelineConfiguration.models.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_45_10(a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void PipelineConfiguration.models.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  PipelineConfiguration.models.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CB2154(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = sub_240CB1BF8(v3);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *v2 = v4;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_45_10(*a1);
    OUTLINED_FUNCTION_42_2();
    result = swift_bridgeObjectRelease();
    *v2 = v6;
  }
  return result;
}

uint64_t PipelineConfiguration.names.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240CB2204()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  PipelineConfiguration.names.setter(v0);
}

void PipelineConfiguration.names.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_44();
}

void PipelineConfiguration.names.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240CB2284(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v2;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v2;
    OUTLINED_FUNCTION_156();
  }
}

void PipelineConfiguration.init(models:names:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;

  v6 = MEMORY[0x24BEE4AF8];
  *a3 = MEMORY[0x24BEE4AF8];
  a3[1] = v6;
  OUTLINED_FUNCTION_2_24();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v7 = OUTLINED_FUNCTION_45_10(a1);
  OUTLINED_FUNCTION_42_2();
  swift_bridgeObjectRelease();
  *a3 = v7;
  swift_bridgeObjectRelease();
  a3[1] = a2;
  OUTLINED_FUNCTION_12_1();
}

void PipelineConfiguration.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t (*v32)(_QWORD);
  __n128 *v33;
  unint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v24 = sub_240F1CF90();
  v25 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8](v24);
  v27 = (char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  v29 = OUTLINED_FUNCTION_60();
  type metadata accessor for PipelineConfiguration(v29);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v30);
  sub_240BE0BF4(v20, (uint64_t)&a9 - ((v31 + 15) & 0xFFFFFFFFFFFFFFF0), v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v33 = (__n128 *)OUTLINED_FUNCTION_59_4();
  OUTLINED_FUNCTION_27_13(v33, (__n128)xmmword_240F1D370);
  PipelineConfiguration.models.getter();
  v35 = v34;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D570);
  v33[3].n128_u64[0] = v35;
  v33[4].n128_u64[1] = v36;
  v33[5].n128_u64[0] = 0x73656D616ELL;
  v33[5].n128_u64[1] = 0xE500000000000000;
  v37 = *(_QWORD *)(v20 + 8);
  v33[7].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
  v33[6].n128_u64[0] = v37;
  v38 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v21, v39, v40, v38);
  (*(void (**)(char *, _QWORD, uint64_t))(v25 + 104))(v27, *MEMORY[0x24BEE43C0], v24);
  swift_bridgeObjectRetain();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240CB24BC()
{
  swift_bridgeObjectRetain();
  return PipelineClassifierConfiguration.models.setter();
}

uint64_t PipelineClassifierConfiguration.models.setter()
{
  return sub_240CB2614();
}

void PipelineClassifierConfiguration.models.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  PipelineClassifierConfiguration.models.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB251C(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))PipelineClassifierConfiguration.models.setter);
}

void PipelineClassifierConfiguration.names.getter()
{
  sub_240CB27B0(type metadata accessor for Proto_PipelineClassifier);
}

void sub_240CB2534()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  PipelineClassifierConfiguration.names.setter(v0);
}

void PipelineClassifierConfiguration.names.setter(uint64_t a1)
{
  sub_240CB28B8(a1, type metadata accessor for Proto_PipelineClassifier);
}

void PipelineClassifierConfiguration.names.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  PipelineClassifierConfiguration.names.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB2594(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, PipelineClassifierConfiguration.names.setter);
}

void PipelineClassifierConfiguration.init(models:names:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_240CB2A20(a1, a2, (void (*)(uint64_t))PipelineClassifierConfiguration.models.setter, PipelineClassifierConfiguration.names.setter, a3);
}

void PipelineClassifierConfiguration.customMirror.getter()
{
  sub_240CB2AA8();
}

uint64_t sub_240CB25E0()
{
  swift_bridgeObjectRetain();
  return PipelineRegressorConfiguration.models.setter();
}

uint64_t PipelineRegressorConfiguration.models.setter()
{
  return sub_240CB2614();
}

uint64_t sub_240CB2614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t (*v4)(_QWORD);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[80];
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_66();
  v19 = v1;
  v20 = v2;
  v4 = v3;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v18[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (uint64_t *)&v18[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v14 = OUTLINED_FUNCTION_45_10(v6);
  swift_bridgeObjectRelease();
  v15 = v0 + *(int *)(v4(0) + 20);
  sub_240CB2F28(v15, (uint64_t)v9);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10) == 1)
  {
    v16 = MEMORY[0x24BEE4AF8];
    *v13 = MEMORY[0x24BEE4AF8];
    v13[1] = v16;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240CB2F70((uint64_t)v9);
  }
  else
  {
    sub_240BE0B90((uint64_t)v9, (uint64_t)v13, type metadata accessor for Proto_Pipeline);
  }
  swift_bridgeObjectRelease();
  *v13 = v14;
  sub_240CB2F70(v15);
  sub_240BE0B90((uint64_t)v13, v15, type metadata accessor for Proto_Pipeline);
  return __swift_storeEnumTagSinglePayload(v15, 0, 1, v10);
}

void PipelineRegressorConfiguration.models.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  PipelineRegressorConfiguration.models.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB2798(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))PipelineRegressorConfiguration.models.setter);
}

void PipelineRegressorConfiguration.names.getter()
{
  sub_240CB27B0(type metadata accessor for Proto_PipelineRegressor);
}

void sub_240CB27B0(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_60();
  v8 = a1(v7);
  sub_240CB2F28(v2 + *(int *)(v8 + 20), v1);
  if (OUTLINED_FUNCTION_24_4(v1) == 1)
  {
    v9 = MEMORY[0x24BEE4AF8];
    *v3 = MEMORY[0x24BEE4AF8];
    v3[1] = v9;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240CB2F70(v1);
  }
  else
  {
    sub_240BE0B90(v1, (uint64_t)v3, type metadata accessor for Proto_Pipeline);
  }
  swift_bridgeObjectRetain();
  sub_240CB2FB0((uint64_t)v3);
  OUTLINED_FUNCTION_42();
}

void sub_240CB2884()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  PipelineRegressorConfiguration.names.setter(v0);
}

void PipelineRegressorConfiguration.names.setter(uint64_t a1)
{
  sub_240CB28B8(a1, type metadata accessor for Proto_PipelineRegressor);
}

void sub_240CB28B8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_60();
  v8 = type metadata accessor for Proto_Pipeline(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v12 = v2 + *(int *)(a2(0) + 20);
  sub_240CB2F28(v12, v3);
  if (__swift_getEnumTagSinglePayload(v3, 1, v8) == 1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    *v11 = MEMORY[0x24BEE4AF8];
    v11[1] = v13;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240CB2F70(v3);
  }
  else
  {
    sub_240BE0B90(v3, (uint64_t)v11, type metadata accessor for Proto_Pipeline);
  }
  swift_bridgeObjectRelease();
  v11[1] = a1;
  v14 = sub_240CB2F70(v12);
  OUTLINED_FUNCTION_55_7(v14, v15, type metadata accessor for Proto_Pipeline);
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v8);
  OUTLINED_FUNCTION_42();
}

void PipelineRegressorConfiguration.names.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  PipelineRegressorConfiguration.names.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB29F8(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, PipelineRegressorConfiguration.names.setter);
}

void PipelineRegressorConfiguration.init(models:names:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  sub_240CB2A20(a1, a2, (void (*)(uint64_t))PipelineRegressorConfiguration.models.setter, PipelineRegressorConfiguration.names.setter, a3);
}

void sub_240CB2A20(uint64_t a1@<X0>, uint64_t a2@<X1>, void (*a3)(uint64_t)@<X3>, void (*a4)(uint64_t)@<X4>, uint64_t a5@<X8>)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v10 = a5 + *(int *)(OUTLINED_FUNCTION_335() + 20);
  v11 = OUTLINED_FUNCTION_2_24();
  OUTLINED_FUNCTION_18_0(v10, v12, v13, v11);
  a3(a1);
  a4(a2);
  OUTLINED_FUNCTION_42();
}

void PipelineRegressorConfiguration.customMirror.getter()
{
  sub_240CB2AA8();
}

void sub_240CB2AA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t (*v5)(__n128 *);
  uint64_t (*v6)(__n128 *);
  uint64_t (*v7)(uint64_t);
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __n128 *v16;
  __n128 *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v24[1] = v9;
  v10 = sub_240F1CF90();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_60();
  v14 = v8(v13);
  MEMORY[0x24BDAC7A8](v14);
  sub_240BE0BF4(v0, (uint64_t)v24 - v15, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v16 = (__n128 *)OUTLINED_FUNCTION_59_4();
  v17 = OUTLINED_FUNCTION_27_13(v16, (__n128)xmmword_240F1D370);
  v18 = v6(v17);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D570);
  v16[3].n128_u64[0] = v18;
  v16[4].n128_u64[1] = v19;
  v16[5].n128_u64[0] = 0x73656D616ELL;
  v16[5].n128_u64[1] = 0xE500000000000000;
  v20 = v4();
  v16[7].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
  v16[6].n128_u64[0] = v20;
  v21 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v2, v22, v23, v21);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 104))(v1, *MEMORY[0x24BEE43C0], v10);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240CB2C20()
{
  return MEMORY[0x24BEE4AF8];
}

void sub_240CB2C2C(uint64_t a1)
{
  sub_240CB2C5C(a1, sub_240BF0640);
}

void sub_240CB2C38(uint64_t a1)
{
  sub_240CB2C5C(a1, sub_240BF066C);
}

void sub_240CB2C44(uint64_t a1)
{
  sub_240CB2C5C(a1, sub_240BF06C4);
}

void sub_240CB2C50(uint64_t a1)
{
  sub_240CB2C5C(a1, sub_240BF0DDC);
}

void sub_240CB2C5C(uint64_t a1, void (*a2)(void))
{
  uint64_t *v2;
  uint64_t v4;
  int isUniquelyReferenced_nonNull_native;

  v4 = *v2;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v2 = v4;
  if (isUniquelyReferenced_nonNull_native && a1 <= *(_QWORD *)(v4 + 24) >> 1)
    OUTLINED_FUNCTION_12_1();
  else
    a2();
}

uint64_t sub_240CB2CC8(uint64_t a1)
{
  return sub_240CB2D40(a1, (void (*)(_QWORD))type metadata accessor for Model);
}

void sub_240CB2CD4(uint64_t a1)
{
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    if (a1)
      *(_QWORD *)(sub_240F1CD5C() + 16) = a1;
    OUTLINED_FUNCTION_44();
  }
}

uint64_t sub_240CB2D1C(uint64_t a1)
{
  return sub_240CB2D40(a1, (void (*)(_QWORD))type metadata accessor for Proto_Model);
}

uint64_t sub_240CB2D28(uint64_t a1)
{
  return sub_240CB2D40(a1, (void (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
}

uint64_t sub_240CB2D34(uint64_t a1)
{
  return sub_240CB2D40(a1, (void (*)(_QWORD))type metadata accessor for NeuralNetwork.Preprocessor);
}

uint64_t sub_240CB2D40(uint64_t result, void (*a2)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    v3 = result;
    if (result)
    {
      a2(0);
      v4 = sub_240F1CD5C();
      *(_QWORD *)(v4 + 16) = v3;
    }
    else
    {
      v4 = MEMORY[0x24BEE4AF8];
    }
    a2(0);
    return v4;
  }
  return result;
}

uint64_t sub_240CB2DBC()
{
  return sub_240CB2DEC((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_240BF0640);
}

uint64_t sub_240CB2DC8()
{
  return sub_240CB2DEC((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_240BF066C);
}

uint64_t sub_240CB2DD4()
{
  return sub_240CB2DEC((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_240BF06C4);
}

uint64_t sub_240CB2DE0()
{
  return sub_240CB2DEC((uint64_t (*)(_QWORD, uint64_t, uint64_t))sub_240BF0DDC);
}

uint64_t sub_240CB2DEC(uint64_t (*a1)(_QWORD, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t result;

  v2 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v2;
  if ((result & 1) == 0)
    return a1(0, *(_QWORD *)(v2 + 16) + 1, 1);
  return result;
}

uint64_t sub_240CB2E48(uint64_t a1)
{
  return sub_240CB2E78(a1, (uint64_t (*)(BOOL))sub_240BF0640);
}

uint64_t sub_240CB2E54(uint64_t a1)
{
  return sub_240CB2E78(a1, (uint64_t (*)(BOOL))sub_240BF066C);
}

uint64_t sub_240CB2E60(uint64_t a1)
{
  return sub_240CB2E78(a1, (uint64_t (*)(BOOL))sub_240BF06C4);
}

uint64_t sub_240CB2E6C(uint64_t a1)
{
  return sub_240CB2E78(a1, (uint64_t (*)(BOOL))sub_240BF0DDC);
}

uint64_t sub_240CB2E78(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
    return a2(v3 > 1);
  return result;
}

void sub_240CB2EA4(uint64_t a1, uint64_t a2)
{
  sub_240CB2EBC(a1, a2, (void (*)(_QWORD))type metadata accessor for Model);
}

void sub_240CB2EB0(uint64_t a1, uint64_t a2)
{
  sub_240CB2EBC(a1, a2, (void (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
}

void sub_240CB2EBC(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = *v3;
  *(_QWORD *)(v7 + 16) = a1 + 1;
  a3(0);
  OUTLINED_FUNCTION_51_2();
  sub_240BE0B90(a2, v7 + v8 + *(_QWORD *)(v9 + 72) * a1, (uint64_t (*)(_QWORD))a3);
  OUTLINED_FUNCTION_156();
}

void sub_240CB2F10(uint64_t a1, uint64_t a2)
{
  sub_240CB2EBC(a1, a2, (void (*)(_QWORD))type metadata accessor for NeuralNetwork.Preprocessor);
}

void sub_240CB2F1C(uint64_t a1, uint64_t a2)
{
  sub_240CB2EBC(a1, a2, (void (*)(_QWORD))type metadata accessor for FeatureVectorizerConfiguration.Input);
}

uint64_t sub_240CB2F28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CB2F70(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240CB2FB0(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for Proto_Pipeline(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t type metadata accessor for PipelineConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FD20);
}

uint64_t type metadata accessor for PipelineClassifierConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360368);
}

uint64_t type metadata accessor for PipelineRegressorConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360348);
}

void sub_240CB3028()
{
  sub_240BE18B8(&qword_25708D578, type metadata accessor for Proto_Pipeline, (uint64_t)&unk_240F33D54);
}

void sub_240CB3054()
{
  sub_240BE18B8(&qword_25708D580, type metadata accessor for Proto_PipelineClassifier, (uint64_t)&unk_240F33CDC);
}

void sub_240CB3080()
{
  sub_240BE18B8(&qword_25708D588, type metadata accessor for Proto_PipelineRegressor, (uint64_t)&unk_240F33C64);
}

void sub_240CB30AC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  PipelineConfiguration.models.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB30D0()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = PipelineConfiguration.names.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CB30F4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  PipelineClassifierConfiguration.models.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB3118()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  PipelineClassifierConfiguration.names.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB313C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  PipelineRegressorConfiguration.models.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB3160()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  PipelineRegressorConfiguration.names.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for PipelineConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_Pipeline(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v7 = *(int *)(v4 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for PipelineConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_Pipeline(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for PipelineConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for Proto_Pipeline(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for PipelineConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_Pipeline(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for PipelineConfiguration(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_Pipeline(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for PipelineConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_Pipeline(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for PipelineConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB34A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_2_24();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PipelineConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB34D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_24();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CB34F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_Pipeline);
}

void initializeBufferWithCopyOfBuffer for PipelineClassifierConfiguration()
{
  sub_240CB35B4();
}

void destroy for PipelineClassifierConfiguration(uint64_t a1)
{
  sub_240CB366C(a1);
}

void initializeWithCopy for PipelineClassifierConfiguration()
{
  sub_240CB3710();
}

void assignWithCopy for PipelineClassifierConfiguration()
{
  sub_240CB378C();
}

void initializeWithTake for PipelineClassifierConfiguration()
{
  sub_240CB387C();
}

void assignWithTake for PipelineClassifierConfiguration()
{
  sub_240CB3910();
}

uint64_t getEnumTagSinglePayload for PipelineClassifierConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB3558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_44_8();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PipelineClassifierConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB3580()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_44_8();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CB359C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_PipelineClassifier);
}

void initializeBufferWithCopyOfBuffer for PipelineRegressorConfiguration()
{
  sub_240CB35B4();
}

void sub_240CB35B4()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_66();
  v2 = v1;
  v4 = v3;
  v6 = v5(0);
  if ((*(_DWORD *)(*(_QWORD *)(v6 - 8) + 80) & 0x20000) != 0)
  {
    *v4 = *v2;
    swift_retain();
  }
  else
  {
    v7 = v6;
    v8 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_15_21(v8);
    v9 = (uint64_t)v2 + *(int *)(v7 + 20);
    v10 = OUTLINED_FUNCTION_2_24();
    if (OUTLINED_FUNCTION_31_11(v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
      OUTLINED_FUNCTION_25_12(v11);
    }
    else
    {
      OUTLINED_FUNCTION_18_13();
      OUTLINED_FUNCTION_63_1();
      OUTLINED_FUNCTION_28_9(v0, v9);
      OUTLINED_FUNCTION_33_13();
    }
  }
  OUTLINED_FUNCTION_13();
}

void destroy for PipelineRegressorConfiguration(uint64_t a1)
{
  sub_240CB366C(a1);
}

void sub_240CB366C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);

  v2 = OUTLINED_FUNCTION_20_0();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v5(a1, v2);
  v3 = a1 + *(int *)(OUTLINED_FUNCTION_335() + 20);
  v4 = OUTLINED_FUNCTION_2_24();
  if (OUTLINED_FUNCTION_24_4(v3))
  {
    OUTLINED_FUNCTION_12_1();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v3 + *(int *)(v4 + 24), v2);
  }
}

void initializeWithCopy for PipelineRegressorConfiguration()
{
  sub_240CB3710();
}

void sub_240CB3710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_66();
  v2 = OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_15_21(v2);
  v3 = v0 + *(int *)(OUTLINED_FUNCTION_335() + 20);
  v4 = OUTLINED_FUNCTION_2_24();
  if (OUTLINED_FUNCTION_31_11(v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
    OUTLINED_FUNCTION_25_12(v5);
  }
  else
  {
    OUTLINED_FUNCTION_18_13();
    OUTLINED_FUNCTION_63_1();
    OUTLINED_FUNCTION_28_9(v1, v3);
    OUTLINED_FUNCTION_33_13();
  }
  OUTLINED_FUNCTION_13();
}

void assignWithCopy for PipelineRegressorConfiguration()
{
  sub_240CB378C();
}

void sub_240CB378C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_4_23();
  OUTLINED_FUNCTION_36_15();
  v4 = *(int *)(OUTLINED_FUNCTION_335() + 20);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v1 + v4);
  v7 = OUTLINED_FUNCTION_2_24();
  v8 = OUTLINED_FUNCTION_12_22(v7);
  if (!v3)
  {
    if (!v8)
    {
      *v5 = *v6;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v5[1] = v6[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_13();
      goto LABEL_7;
    }
    sub_240CB2FB0((uint64_t)v5);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
    OUTLINED_FUNCTION_7_21(v12);
    goto LABEL_7;
  }
  *v5 = *v6;
  v5[1] = v6[1];
  v9 = *(int *)(v2 + 24);
  v10 = (uint64_t)v5 + v9;
  v11 = (uint64_t)v6 + v9;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_63_1();
  OUTLINED_FUNCTION_28_9(v10, v11);
  OUTLINED_FUNCTION_10_23();
LABEL_7:
  OUTLINED_FUNCTION_13();
}

void initializeWithTake for PipelineRegressorConfiguration()
{
  sub_240CB387C();
}

void sub_240CB387C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;

  v2 = OUTLINED_FUNCTION_4_23();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v3(v0, v1, v2);
  v4 = v1 + *(int *)(OUTLINED_FUNCTION_335() + 20);
  OUTLINED_FUNCTION_2_24();
  if (OUTLINED_FUNCTION_17_20(v4))
  {
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
    OUTLINED_FUNCTION_7_21(v5);
  }
  else
  {
    v6 = OUTLINED_FUNCTION_47_13();
    ((void (*)(char *))v3)(v6);
    OUTLINED_FUNCTION_10_23();
  }
  OUTLINED_FUNCTION_42();
}

void assignWithTake for PipelineRegressorConfiguration()
{
  sub_240CB3910();
}

void sub_240CB3910()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  int v8;
  char *v9;
  uint64_t v10;

  OUTLINED_FUNCTION_66();
  v3 = *(_QWORD *)(OUTLINED_FUNCTION_4_23() - 8);
  OUTLINED_FUNCTION_36_15();
  v4 = *(int *)(OUTLINED_FUNCTION_335() + 20);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v1 + v4);
  v7 = OUTLINED_FUNCTION_2_24();
  v8 = OUTLINED_FUNCTION_12_22(v7);
  if (!v2)
  {
    if (!v8)
    {
      *v5 = *v6;
      swift_bridgeObjectRelease();
      v5[1] = v6[1];
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_29_13();
      goto LABEL_7;
    }
    sub_240CB2FB0((uint64_t)v5);
    goto LABEL_6;
  }
  if (v8)
  {
LABEL_6:
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
    OUTLINED_FUNCTION_7_21(v10);
    goto LABEL_7;
  }
  v9 = OUTLINED_FUNCTION_47_13();
  (*(void (**)(char *))(v3 + 32))(v9);
  OUTLINED_FUNCTION_10_23();
LABEL_7:
  OUTLINED_FUNCTION_13();
}

uint64_t getEnumTagSinglePayload for PipelineRegressorConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB39CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_43_11();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t storeEnumTagSinglePayload for PipelineRegressorConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB39F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_43_11();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CB3A10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_PipelineRegressor);
}

uint64_t OUTLINED_FUNCTION_2_24()
{
  return type metadata accessor for Proto_Pipeline(0);
}

uint64_t OUTLINED_FUNCTION_4_23()
{
  return sub_240F1C930();
}

void *OUTLINED_FUNCTION_7_21(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_10_23()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_12_22(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v1, 1, a1);
  return __swift_getEnumTagSinglePayload(v2, 1, a1);
}

uint64_t OUTLINED_FUNCTION_15_21(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_17_20(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_18_13()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *v0 = *v1;
  v0[1] = v2;
  return swift_bridgeObjectRetain();
}

void *OUTLINED_FUNCTION_25_12(uint64_t a1)
{
  void *v1;
  const void *v2;

  return memcpy(v1, v2, *(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

void OUTLINED_FUNCTION_26_10()
{
  sub_240BF0640();
}

__n128 *OUTLINED_FUNCTION_27_13(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 0x736C65646F6DLL;
  result[2].n128_u64[1] = 0xE600000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_28_9(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_29_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v0 + *(int *)(v3 + 24), v2 + *(int *)(v3 + 24), v1);
}

uint64_t OUTLINED_FUNCTION_31_11(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_33_13()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_36_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v0, v2, v1);
}

void OUTLINED_FUNCTION_38_10()
{
  sub_240BF0640();
}

uint64_t OUTLINED_FUNCTION_43_11()
{
  return type metadata accessor for Proto_PipelineRegressor(0);
}

uint64_t OUTLINED_FUNCTION_44_8()
{
  return type metadata accessor for Proto_PipelineClassifier(0);
}

uint64_t OUTLINED_FUNCTION_45_10(uint64_t a1)
{
  return sub_240CB1BF8(a1);
}

char *OUTLINED_FUNCTION_47_13()
{
  _OWORD *v0;
  _OWORD *v1;
  uint64_t v2;

  *v0 = *v1;
  return (char *)v0 + *(int *)(v2 + 24);
}

uint64_t OUTLINED_FUNCTION_54_11()
{
  return type metadata accessor for Proto_Model(0);
}

void OUTLINED_FUNCTION_55_7(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0B90(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_59_4()
{
  return swift_allocObject();
}

uint64_t sub_240CB3BDC(uint64_t a1, uint64_t a2)
{
  return sub_240CB3C08(a1, a2, type metadata accessor for Proto_MILSpec_NamedValueType, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0988, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
}

uint64_t sub_240CB3C08(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;

  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v22[0] = a4;
    v22[1] = v5;
    v23 = MEMORY[0x24BEE4AF8];
    a4(0, v14, 0);
    v15 = v23;
    v16 = *(_QWORD *)(a5(0) - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v18 = *(_QWORD *)(v16 + 72);
    do
    {
      sub_240C355AC(v17, (uint64_t)v13, a3);
      v23 = v15;
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v22[0])(v19 > 1, v20 + 1, 1);
        v15 = v23;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      sub_240C35540((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v20, a3);
      v17 += v18;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_240CB3D68(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_240BF0A64();
    v2 = v11;
    v4 = *(_QWORD *)(type metadata accessor for MLProgram.Operation() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      sub_240C574CC();
      v8 = v7;
      v9 = *(_QWORD *)(v11 + 16);
      if (v9 >= *(_QWORD *)(v11 + 24) >> 1)
        sub_240BF0A64();
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_QWORD *)(v11 + 8 * v9 + 32) = v8;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_240CB3E58(uint64_t a1, uint64_t a2)
{
  return sub_240CB3C08(a1, a2, type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
}

void sub_240CB3E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  char v70;
  char v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  _QWORD *v85;
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  _QWORD *v89;
  unint64_t v90;
  char v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  char v95;
  uint64_t v96;
  unint64_t v97;
  _QWORD *v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  __int128 v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t *v119;
  uint64_t *v120;
  _QWORD *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  uint64_t v128;

  OUTLINED_FUNCTION_22();
  v122 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_85();
  v121 = v3;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v4);
  v120 = (uint64_t *)((char *)&v107 - v5);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v6);
  v119 = (uint64_t *)((char *)&v107 - v7);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_386();
  v118 = v9;
  v10 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.DictionaryParameters(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v115 = v12;
  v13 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.TupleParameters(v13);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_0();
  v114 = v15;
  v16 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.ListParameters(v16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  v113 = (char *)&v107 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.TensorParameters(v19);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  v112 = (char *)&v107 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_24_1();
  v25 = v24 - v23;
  v26 = type metadata accessor for Proto_MILSpec_ValueType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_10_3();
  v28 = type metadata accessor for MLProgram.NamedValueType();
  v29 = *(_QWORD *)(v28 - 8);
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_2_0();
  v125 = v30;
  MLProgram.Block.inputs.getter();
  v32 = *(_QWORD *)(v31 + 16);
  swift_bridgeObjectRelease();
  v33 = MEMORY[0x24BEE4AF8];
  v108 = v0;
  if (v32)
  {
    MLProgram.Block.inputs.getter();
    v35 = v34;
    v36 = *(_QWORD *)(v34 + 16);
    if (v36)
    {
      v128 = v33;
      sub_240BF0A90(0, v36, 0);
      v37 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      v107 = v35;
      v116 = *(_QWORD *)(v29 + 72);
      v109 = xmmword_240F1DA30;
      v111 = v25;
      v110 = v26;
      v117 = v1;
      v38 = v125;
      sub_240C355AC(v35 + v37, v125, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
      OUTLINED_FUNCTION_54_6();
      OUTLINED_FUNCTION_63_1();
      sub_240F1CCE4();
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_43_6();
      v123 = v127;
      v124 = v126;
      v39 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
      sub_240C02F94(v38 + *(int *)(v39 + 24), v25, &qword_25708C098);
      if (__swift_getEnumTagSinglePayload(v25, 1, v26) == 1)
      {
        _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
        v40 = *(int *)(v26 + 20);
        if (qword_25708B0D0 != -1)
          swift_once();
        *(_QWORD *)(v1 + v40) = qword_25708EA38;
        swift_retain();
        sub_240BE0B68(v25, &qword_25708C098);
      }
      else
      {
        sub_240C35540(v25, v1, type metadata accessor for Proto_MILSpec_ValueType);
      }
      sub_240D34658();
      __asm { BR              X9 }
    }
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(OUTLINED_FUNCTION_113() + 16) = v33;
    sub_240C02C78();
    v41 = v42;
    if (*(_QWORD *)(v42 + 16) >= *(_QWORD *)(v42 + 24) >> 1)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v100;
    }
    v33 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_53_10();
    v43[4] = 0x737475706E69;
    v43[5] = 0xE600000000000000;
    v43[6] = v44;
  }
  else
  {
    v41 = MEMORY[0x24BEE4AF8];
  }
  v45 = *(_QWORD *)(v0 + 8);
  v46 = *(_QWORD *)(v45 + 16);
  if (v46)
  {
    v116 = v41;
    v125 = 0;
    v128 = v33;
    OUTLINED_FUNCTION_315();
    sub_240BF0A64();
    v47 = v128;
    v124 = v45;
    v48 = v45 + 40;
    do
    {
      v49 = OUTLINED_FUNCTION_113();
      v126 = 34;
      v127 = 0xE100000000000000;
      swift_bridgeObjectRetain();
      sub_240F1CCE4();
      OUTLINED_FUNCTION_43_6();
      v50 = v127;
      *(_QWORD *)(v49 + 16) = v126;
      *(_QWORD *)(v49 + 24) = v50;
      swift_bridgeObjectRelease();
      v128 = v47;
      v51 = *(_QWORD *)(v47 + 16);
      if (v51 >= *(_QWORD *)(v47 + 24) >> 1)
      {
        sub_240BF0A64();
        v47 = v128;
      }
      v48 += 16;
      *(_QWORD *)(v47 + 16) = v51 + 1;
      *(_QWORD *)(v47 + 8 * v51 + 32) = v49;
      --v46;
    }
    while (v46);
    swift_bridgeObjectRelease();
    *(_QWORD *)(OUTLINED_FUNCTION_113() + 16) = v47;
    v41 = v116;
    if ((OUTLINED_FUNCTION_75_3() & 1) == 0)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v101;
    }
    v0 = v108;
    v33 = MEMORY[0x24BEE4AF8];
    if (*(_QWORD *)(v41 + 16) >= *(_QWORD *)(v41 + 24) >> 1)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v102;
    }
    OUTLINED_FUNCTION_53_10();
    v52[4] = 0x7374757074756FLL;
    v52[5] = 0xE700000000000000;
    v52[6] = v53;
  }
  MLProgram.Block.operations.getter();
  v55 = *(_QWORD *)(v54 + 16);
  swift_bridgeObjectRelease();
  if (v55)
  {
    v56 = OUTLINED_FUNCTION_113();
    MLProgram.Block.operations.getter();
    v58 = sub_240CB3D68(v57);
    OUTLINED_FUNCTION_5_4();
    *(_QWORD *)(v56 + 16) = v58;
    if ((OUTLINED_FUNCTION_75_3() & 1) == 0)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v103;
    }
    if (*(_QWORD *)(v41 + 16) >= *(_QWORD *)(v41 + 24) >> 1)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v104;
    }
    OUTLINED_FUNCTION_53_10();
    v59[4] = 0x6F6974617265706FLL;
    v59[5] = 0xEA0000000000736ELL;
    v59[6] = v60;
  }
  v61 = *(_QWORD *)(v0 + 24);
  sub_240CB6790(v61);
  v63 = *(_QWORD *)(v62 + 16);
  swift_release();
  if (v63)
  {
    sub_240CB6790(v61);
    v65 = v64;
    v66 = *(_QWORD *)(v64 + 16);
    if (v66)
    {
      v116 = v41;
      v128 = v33;
      sub_240BF0A90(0, v66, 0);
      v67 = sub_240F1A2A8(v65);
      v69 = v68;
      v71 = v70 & 1;
      v72 = v128;
      v73 = v65;
      v117 = v65;
      do
      {
        v74 = v122;
        v75 = v118;
        v76 = (uint64_t)v118 + *(int *)(v122 + 48);
        LODWORD(v125) = v71 & 1;
        v77 = sub_240CB7404(v76, v67, v69, v71 & 1, v73, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        *v75 = v77;
        v75[1] = v78;
        v79 = v119;
        *v119 = v77;
        v79[1] = v78;
        OUTLINED_FUNCTION_28_10(v76, (uint64_t)v79 + *(int *)(v74 + 48));
        v80 = (uint64_t)v79;
        v81 = v120;
        sub_240CB7388(v80, (uint64_t)v120);
        OUTLINED_FUNCTION_329();
        sub_240BE0B68((uint64_t)v75, &qword_25708CBF8);
        OUTLINED_FUNCTION_54_6();
        v82 = *v81;
        v83 = v81[1];
        sub_240F1CCE4();
        OUTLINED_FUNCTION_43_6();
        v123 = v127;
        v124 = v126;
        v84 = *(int *)(v74 + 48);
        v85 = v121;
        *v121 = v82;
        v85[1] = v83;
        OUTLINED_FUNCTION_28_10((uint64_t)v81 + v84, (uint64_t)v85 + v84);
        v86 = sub_240DD12C8();
        OUTLINED_FUNCTION_67_6();
        sub_240BE0B68((uint64_t)v81, &qword_25708CBF8);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_20_7(*(_QWORD *)(v72 + 16));
          v72 = v128;
        }
        v88 = *(_QWORD *)(v72 + 16);
        v87 = *(_QWORD *)(v72 + 24);
        v73 = v117;
        if (v88 >= v87 >> 1)
        {
          sub_240BF0A90((_QWORD *)(v87 > 1), v88 + 1, 1);
          v72 = v128;
        }
        *(_QWORD *)(v72 + 16) = v88 + 1;
        v89 = (_QWORD *)(v72 + 24 * v88);
        v90 = v123;
        v89[4] = v124;
        v89[5] = v90;
        v89[6] = v86;
        v91 = v125;
        v92 = sub_240CB7300(v67, v69, v125, v73);
        v94 = v93;
        v71 = v95 & 1;
        sub_240C67718(v67, v69, v91);
        v67 = v92;
        v69 = v94;
        --v66;
      }
      while (v66);
      sub_240C67718(v92, v94, v71);
      swift_release();
      v41 = v116;
    }
    else
    {
      swift_release();
      v72 = MEMORY[0x24BEE4AF8];
    }
    v96 = OUTLINED_FUNCTION_113();
    *(_QWORD *)(v96 + 16) = v72;
    if ((OUTLINED_FUNCTION_75_3() & 1) == 0)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v105;
    }
    v97 = *(_QWORD *)(v41 + 16);
    if (v97 >= *(_QWORD *)(v41 + 24) >> 1)
    {
      OUTLINED_FUNCTION_5_26();
      v41 = v106;
    }
    *(_QWORD *)(v41 + 16) = v97 + 1;
    v98 = (_QWORD *)(v41 + 24 * v97);
    v98[4] = 0x7475626972747461;
    v98[5] = 0xEA00000000007365;
    v98[6] = v96 | 0xC000000000000000;
  }
  v99 = (_QWORD *)OUTLINED_FUNCTION_113();
  v99[2] = 0x6B636F6C42;
  v99[3] = 0xE500000000000000;
  v99[4] = v41;
  OUTLINED_FUNCTION_1();
}

void sub_240CB4978()
{
  sub_240CB4990();
}

void sub_240CB4984()
{
  sub_240CB4990();
}

void sub_240CB4990()
{
  void (*v0)(uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t i;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  BOOL v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  int64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t (*v93)(uint64_t);
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  int64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v108 = v2;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_57_8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  v106 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_0();
  v98 = v11;
  v12 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.Value.BlobFileValue(v12);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  v95 = (uint64_t *)v14;
  v15 = OUTLINED_FUNCTION_101();
  v103 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(v15);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_85();
  v97 = v17;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_386();
  v96 = v19;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_2_0();
  v109 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  v105 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  v104 = OUTLINED_FUNCTION_29_6(v25, v94);
  v119 = *(_QWORD *)(v104 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v26);
  v102 = OUTLINED_FUNCTION_4_24(v27, v94);
  v117 = *(_QWORD *)(v102 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_11_25(v29, v94);
  MLProgram.Block.operations.getter();
  v31 = *(_QWORD *)(v30 + 16);
  swift_bridgeObjectRelease();
  if (v31)
  {
    for (i = 0; i != v31; ++i)
    {
      MLProgram.Block.operations.getter();
      if (i >= *(_QWORD *)(v33 + 16))
        goto LABEL_77;
      OUTLINED_FUNCTION_120_1(v33+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * i, v9);
      OUTLINED_FUNCTION_42_2();
      v1(v9, v108);
      sub_240BE10B8(v9, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
    }
  }
  sub_240CB6790(*(_QWORD *)(v4 + 24));
  v34 = 0;
  v99 = v35 + 64;
  v107 = v35;
  OUTLINED_FUNCTION_13_8();
  v38 = v37 & v36;
  v100 = (unint64_t)(v39 + 63) >> 6;
  v101 = v4;
  if ((v37 & v36) == 0)
    goto LABEL_7;
LABEL_6:
  v111 = (v38 - 1) & v38;
  v112 = v34;
  v40 = __clz(__rbit64(v38)) | (v34 << 6);
  while (2)
  {
    v48 = (uint64_t *)(*(_QWORD *)(v107 + 48) + 16 * v40);
    v49 = v48[1];
    v110 = *v48;
    v50 = *(_QWORD *)(v4 + 24);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v51 = sub_240F1CE64();
    v52 = v51;
    v53 = 1 << *(_BYTE *)(v50 + 32);
    v120 = v50;
    v56 = *(_QWORD *)(v50 + 64);
    v55 = v50 + 64;
    v54 = v56;
    if (v53 < 64)
      v57 = ~(-1 << v53);
    else
      v57 = -1;
    v58 = v57 & v54;
    v114 = v55;
    v115 = (unint64_t)(v53 + 63) >> 6;
    v4 = v51 + 64;
    v113 = v49;
    OUTLINED_FUNCTION_315();
    v59 = 0;
    if (v58)
    {
LABEL_33:
      v60 = __clz(__rbit64(v58));
      v58 &= v58 - 1;
      v61 = v60 | (v59 << 6);
      goto LABEL_54;
    }
    while (1)
    {
      v62 = v59 + 1;
      if (__OFADD__(v59, 1))
      {
        __break(1u);
        goto LABEL_76;
      }
      if (v62 >= v115)
        goto LABEL_57;
      v63 = *(_QWORD *)(v114 + 8 * v62);
      ++v59;
      if (!v63)
      {
        v59 = v62 + 1;
        OUTLINED_FUNCTION_84_4();
        if (v43 == v44)
          goto LABEL_57;
        OUTLINED_FUNCTION_72_6();
        if (!v63)
        {
          v59 = v64 + 2;
          OUTLINED_FUNCTION_84_4();
          if (v43 == v44)
            goto LABEL_57;
          OUTLINED_FUNCTION_72_6();
          if (!v63)
          {
            v59 = v65 + 3;
            OUTLINED_FUNCTION_84_4();
            if (v43 == v44)
              goto LABEL_57;
            OUTLINED_FUNCTION_72_6();
            if (!v63)
              break;
          }
        }
      }
LABEL_53:
      v58 = (v63 - 1) & v63;
      v61 = __clz(__rbit64(v63)) + (v59 << 6);
LABEL_54:
      v69 = (uint64_t *)(*(_QWORD *)(v120 + 48) + 16 * v61);
      v55 = *v69;
      v70 = v69[1];
      v71 = v116;
      OUTLINED_FUNCTION_29_14(*(_QWORD *)(v120 + 56) + *(_QWORD *)(v117 + 72) * v61, v116);
      v72 = v118;
      OUTLINED_FUNCTION_29_14(v71, v118);
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_85_3(v71);
      *(_QWORD *)(v4 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
      v73 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * v61);
      *v73 = v55;
      v73[1] = v70;
      OUTLINED_FUNCTION_27_14();
      sub_240C35540(v72, v74 + v75 * v61, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      v76 = *(_QWORD *)(v52 + 16);
      v44 = __OFADD__(v76, 1);
      v77 = v76 + 1;
      if (v44)
      {
        __break(1u);
        goto LABEL_74;
      }
      *(_QWORD *)(v52 + 16) = v77;
      if (v58)
        goto LABEL_33;
    }
    v67 = v66 + 4;
    if (v67 >= v115)
    {
LABEL_57:
      if (*(_QWORD *)(v52 + 16))
      {
        sub_240C66A40(v110, v113);
        OUTLINED_FUNCTION_86_4();
        if ((v78 & 1) != 0)
        {
          OUTLINED_FUNCTION_27_14();
          sub_240C355AC(v80 + v81 * v79, v59, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
          v82 = 0;
        }
        else
        {
          v82 = 1;
        }
      }
      else
      {
        OUTLINED_FUNCTION_86_4();
      }
      v83 = v104;
      __swift_storeEnumTagSinglePayload(v59, v82, 1, v104);
      swift_bridgeObjectRelease();
      swift_release();
      if (__swift_getEnumTagSinglePayload(v59, 1, v83) == 1)
        goto LABEL_80;
      v84 = v109;
      sub_240C02F94(v59 + *(int *)(v102 + 20), v109, &qword_25708CB50);
      v85 = 1;
      if (__swift_getEnumTagSinglePayload(v84, 1, v103) != 1)
      {
        v86 = v96;
        sub_240C35540(v109, v96, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
        v87 = v97;
        sub_240C355AC(v86, v97, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
        sub_240C77BEC(v87);
        sub_240BE10B8(v86, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
        v85 = 0;
      }
      __swift_storeEnumTagSinglePayload(v58, v85, 1, v55);
      if (__swift_getEnumTagSinglePayload(v58, 1, v55) == 1)
      {
        sub_240BE0B68(v58, &qword_25708CB10);
        v38 = v111;
        v34 = v112;
      }
      else
      {
        v88 = v98;
        OUTLINED_FUNCTION_28_10(v58, v98);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          v89 = v95;
          sub_240C35540(v88, (uint64_t)v95, type metadata accessor for MLProgram.Value.BlobFileValue);
          v90 = *v89;
          v91 = v89[1];
          OUTLINED_FUNCTION_329();
          sub_240C6FB8C(&v121, v90, v91);
          swift_bridgeObjectRelease();
          v92 = (uint64_t)v89;
          v93 = type metadata accessor for MLProgram.Value.BlobFileValue;
        }
        else
        {
          v92 = v88;
          v93 = type metadata accessor for MLProgram.Value.Representation;
        }
        sub_240BE10B8(v92, v93);
        v38 = v111;
        v34 = v112;
        sub_240BE10B8(v58, type metadata accessor for MLProgram.Value.Representation);
      }
      sub_240BE10B8(v59, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      if (!v38)
      {
LABEL_7:
        if (__OFADD__(v34, 1))
          goto LABEL_78;
        if (v34 + 1 >= v100)
          goto LABEL_74;
        OUTLINED_FUNCTION_83_4();
        if (!v41)
        {
          OUTLINED_FUNCTION_22_5();
          if (v43 == v44)
          {
LABEL_74:
            swift_release();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_27_6();
          if (!v41)
          {
            OUTLINED_FUNCTION_22_5();
            if (v43 == v44)
              goto LABEL_74;
            OUTLINED_FUNCTION_27_6();
            if (!v41)
            {
              OUTLINED_FUNCTION_22_5();
              if (v43 == v44)
                goto LABEL_74;
              OUTLINED_FUNCTION_27_6();
              if (!v41)
              {
                OUTLINED_FUNCTION_22_5();
                if (v43 == v44)
                  goto LABEL_74;
                OUTLINED_FUNCTION_27_6();
                if (!v41)
                {
                  if (v45 + 5 >= v100)
                    goto LABEL_74;
                  OUTLINED_FUNCTION_83_4();
                  if (!v41)
                  {
                    while (!__OFADD__(v46, 1))
                    {
                      OUTLINED_FUNCTION_22_5();
                      if (v43 == v44)
                        goto LABEL_74;
                      OUTLINED_FUNCTION_27_6();
                      v46 = v47 + 1;
                      if (v41)
                        goto LABEL_28;
                    }
                    goto LABEL_79;
                  }
                }
              }
            }
          }
        }
LABEL_28:
        v111 = (v41 - 1) & v41;
        v112 = v42;
        v40 = __clz(__rbit64(v41)) + (v42 << 6);
        continue;
      }
      goto LABEL_6;
    }
    break;
  }
  v63 = *(_QWORD *)(v114 + 8 * v67);
  if (v63)
  {
    v59 = v67;
    goto LABEL_53;
  }
  while (1)
  {
    v59 = v67 + 1;
    if (__OFADD__(v67, 1))
      break;
    OUTLINED_FUNCTION_84_4();
    if (v43 == v44)
      goto LABEL_57;
    OUTLINED_FUNCTION_72_6();
    v67 = v68 + 1;
    if (v63)
      goto LABEL_53;
  }
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
}

void sub_240CB5118()
{
  sub_240CB5140();
}

void sub_240CB512C()
{
  sub_240CB5140();
}

void sub_240CB5140()
{
  char *v0;
  char *v1;
  void (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  unint64_t v51;
  unint64_t v52;
  int64_t v53;
  uint64_t *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  unint64_t v62;
  char v63;
  uint64_t v64;
  _BOOL8 v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  void (*v80)(uint64_t, uint64_t, uint64_t);
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  unint64_t v90;
  char *v91;
  int64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v80 = v2;
  v4 = v3;
  v85 = v5;
  v7 = v6;
  v8 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_85();
  v82 = v10;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_386();
  v84 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  v83 = v14;
  type metadata accessor for MLProgram.Value();
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v15);
  v94 = *(_QWORD *)(OUTLINED_FUNCTION_4_24(v16, v78) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_25(v18, v79);
  v86 = v4;
  swift_bridgeObjectRetain_n();
  v90 = v7;
  MLProgram.Block.operations.getter();
  v20 = *(_QWORD *)(v19 + 16);
  swift_bridgeObjectRelease();
  if (v20)
  {
    v21 = 0;
    do
    {
      MLProgram.Block.operations.getter();
      v23 = v22;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240C95814();
        v23 = v28;
      }
      if (v21 >= *(_QWORD *)(v23 + 16))
        goto LABEL_74;
      v7 = v21 + 1;
      OUTLINED_FUNCTION_57_8();
      OUTLINED_FUNCTION_59_1();
      v26 = v25 + v24 * v21;
      swift_bridgeObjectRetain();
      ((void (*)(uint64_t, uint64_t, uint64_t))v1)(v26, v85, v86);
      v27 = sub_240CB3C08(v23, (uint64_t)&v97, type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_80_1();
      *(_QWORD *)(v90 + 16) = v27;
      v21 = v7;
    }
    while (v20 != v7);
  }
  OUTLINED_FUNCTION_73_4();
  v81 = v29 + 64;
  OUTLINED_FUNCTION_3_13();
  if (!v31)
    goto LABEL_9;
LABEL_8:
  v89 = v8;
  OUTLINED_FUNCTION_98_1();
  v87 = v32;
  v88 = v33;
  while (2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v43 = OUTLINED_FUNCTION_46_9();
    OUTLINED_FUNCTION_13_8();
    v46 = v45 & v44;
    v91 = v1 + 64;
    v92 = (unint64_t)(v47 + 63) >> 6;
    v49 = v48 + 64;
    OUTLINED_FUNCTION_55_0();
    v50 = 0;
    if (v46)
    {
LABEL_27:
      v51 = __clz(__rbit64(v46));
      v46 &= v46 - 1;
      v7 = v51 | (v50 << 6);
      goto LABEL_45;
    }
    while (1)
    {
      v36 = __OFADD__(v50++, 1);
      if (v36)
      {
        __break(1u);
        goto LABEL_73;
      }
      if (v50 >= v92)
        goto LABEL_52;
      v52 = *(_QWORD *)&v91[8 * v50];
      if (!v52)
        break;
LABEL_44:
      v46 = (v52 - 1) & v52;
      v7 = __clz(__rbit64(v52)) + (v50 << 6);
LABEL_45:
      v54 = (uint64_t *)(*((_QWORD *)v96 + 6) + 16 * v7);
      v56 = *v54;
      v55 = v54[1];
      OUTLINED_FUNCTION_29_14(*((_QWORD *)v96 + 7) + *(_QWORD *)(v94 + 72) * v7, v93);
      OUTLINED_FUNCTION_29_14(v93, v95);
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_85_3(v93);
      *(_QWORD *)(v49 + ((v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v7;
      v57 = (_QWORD *)(*(_QWORD *)(v43 + 48) + 16 * v7);
      *v57 = v56;
      v57[1] = v55;
      OUTLINED_FUNCTION_27_14();
      sub_240C35540(v95, v58 + v59 * v7, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      v60 = *(_QWORD *)(v43 + 16);
      v36 = __OFADD__(v60, 1);
      v61 = v60 + 1;
      if (v36)
      {
        __break(1u);
        goto LABEL_71;
      }
      *(_QWORD *)(v43 + 16) = v61;
      if (v46)
        goto LABEL_27;
    }
    OUTLINED_FUNCTION_95_2();
    if (v35 == v36)
      goto LABEL_52;
    OUTLINED_FUNCTION_25_13();
    if (v52)
      goto LABEL_43;
    OUTLINED_FUNCTION_95_2();
    if (v35 == v36)
      goto LABEL_52;
    OUTLINED_FUNCTION_25_13();
    if (v52)
      goto LABEL_43;
    OUTLINED_FUNCTION_95_2();
    if (v35 == v36)
      goto LABEL_52;
    OUTLINED_FUNCTION_25_13();
    if (v52)
      goto LABEL_43;
    OUTLINED_FUNCTION_95_2();
    if (v35 == v36)
    {
LABEL_52:
      v8 = v89;
      swift_bridgeObjectRetain();
      swift_isUniquelyReferenced_nonNull_native();
      swift_bridgeObjectRetain();
      v62 = OUTLINED_FUNCTION_76_3();
      v64 = *(_QWORD *)(v43 + 16);
      v65 = (v63 & 1) == 0;
      v7 = v64 + v65;
      if (__OFADD__(v64, v65))
        goto LABEL_75;
      v66 = v62;
      v67 = v63;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
      v7 = v83;
      if ((sub_240F1CE34() & 1) != 0)
      {
        v68 = OUTLINED_FUNCTION_76_3();
        if ((v67 & 1) != (v69 & 1))
          goto LABEL_79;
        v66 = v68;
      }
      if ((v67 & 1) == 0)
        goto LABEL_78;
      OUTLINED_FUNCTION_82_1();
      sub_240C35540(v70 + v71 * v66, v83, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      OUTLINED_FUNCTION_48_10(v83, 0);
      OUTLINED_FUNCTION_80_4();
      v72 = OUTLINED_FUNCTION_132_2();
      if (OUTLINED_FUNCTION_59_5(v72))
      {
        sub_240C02F94(v84, v82, &qword_25708CB10);
        OUTLINED_FUNCTION_54_12(v82);
        sub_240BE0B68(v84, &qword_25708CB10);
      }
      else
      {
        OUTLINED_FUNCTION_329();
        v80(v84, v85, v86);
        OUTLINED_FUNCTION_54_12(v84);
      }
      sub_240C6F79C();
      sub_240BE0B68(v83, &qword_25708CB18);
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_73_1();
      OUTLINED_FUNCTION_73_1();
      sub_240CB6A4C(v43);
      v1 = v73;
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_147_0();
      v96 = v1;
      *(_QWORD *)(v90 + 24) = v1;
      v30 = v88;
      if (!v87)
      {
LABEL_9:
        if (__OFADD__(v30, 1))
          goto LABEL_76;
        OUTLINED_FUNCTION_108_1();
        if (v35 == v36)
          goto LABEL_71;
        if (!*(_QWORD *)(v81 + 8 * v34))
        {
          OUTLINED_FUNCTION_19_5();
          if (v35 == v36)
          {
LABEL_71:
            OUTLINED_FUNCTION_173();
            swift_release();
            swift_bridgeObjectRelease_n();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_23_4();
          if (!v37)
          {
            OUTLINED_FUNCTION_19_5();
            if (v35 == v36)
              goto LABEL_71;
            OUTLINED_FUNCTION_23_4();
            if (!v38)
            {
              OUTLINED_FUNCTION_19_5();
              if (v35 == v36)
                goto LABEL_71;
              OUTLINED_FUNCTION_23_4();
              if (!v39)
              {
                OUTLINED_FUNCTION_19_5();
                if (v35 == v36)
                  goto LABEL_71;
                OUTLINED_FUNCTION_23_4();
                if (!v40)
                {
                  OUTLINED_FUNCTION_19_5();
                  if (v35 == v36)
                    goto LABEL_71;
                  OUTLINED_FUNCTION_23_4();
                  if (!v75)
                  {
                    while (!__OFADD__(v74, 1))
                    {
                      OUTLINED_FUNCTION_108_1();
                      if (v35 == v36)
                        goto LABEL_71;
                      v74 = v76 + 1;
                      if (*(_QWORD *)(v81 + 8 * v77))
                        goto LABEL_25;
                    }
                    goto LABEL_77;
                  }
                }
              }
            }
          }
        }
LABEL_25:
        v89 = v8;
        OUTLINED_FUNCTION_125_2();
        v87 = v41;
        v88 = v42;
        continue;
      }
      goto LABEL_8;
    }
    break;
  }
  OUTLINED_FUNCTION_25_13();
  if (v52)
  {
LABEL_43:
    v50 = v53;
    goto LABEL_44;
  }
  while (1)
  {
    v50 = v53 + 1;
    if (__OFADD__(v53, 1))
      break;
    if (v50 >= v92)
      goto LABEL_52;
    v52 = *(_QWORD *)&v91[8 * v50];
    ++v53;
    if (v52)
      goto LABEL_44;
  }
LABEL_73:
  __break(1u);
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  swift_bridgeObjectRelease_n();
  OUTLINED_FUNCTION_48_10(v7, 1);
  __break(1u);
LABEL_79:
  swift_bridgeObjectRelease_n();
  sub_240F1CEF4();
  __break(1u);
}

void sub_240CB57F0()
{
  uint64_t (*v0)();
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char v36;
  BOOL v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  int64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  int64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  char v65;
  unint64_t v66;
  char v67;
  unint64_t v68;
  char v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;

  OUTLINED_FUNCTION_22();
  v89 = v2;
  v4 = v3;
  v5 = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_85();
  v83 = v7;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_386();
  v87 = v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v85 = OUTLINED_FUNCTION_29_6(v11, v77);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v12);
  v100 = *(_QWORD *)(OUTLINED_FUNCTION_4_24(v13, v78) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_11_25(v15, v79);
  v96 = v4;
  MLProgram.Block.operations.getter();
  v17 = *(_QWORD *)(v16 + 16);
  swift_bridgeObjectRelease();
  if (v17)
  {
    v18 = 0;
    v0 = type metadata accessor for MLProgram.Operation;
    isUniquelyReferenced_nonNull_native = (uint64_t)type metadata accessor for Proto_MILSpec_Operation;
    do
    {
      MLProgram.Block.operations.getter();
      v20 = v19;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240C95814();
        v20 = v30;
      }
      if (v18 >= *(_QWORD *)(v20 + 16))
        goto LABEL_75;
      OUTLINED_FUNCTION_57_8();
      OUTLINED_FUNCTION_59_1();
      sub_240C59444(v22 + v21 * v18, v89, v23, v24, v25, v26, v27, v28, v80, v81, v83, v84, v85, v86, v87, v88, v89, v90, v92,
        v94);
      v29 = sub_240CB3C08(v20, (uint64_t)&v103, type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
      OUTLINED_FUNCTION_42_2();
      OUTLINED_FUNCTION_80_1();
      *(_QWORD *)(v96 + 16) = v29;
      ++v18;
    }
    while (v17 != v18);
  }
  OUTLINED_FUNCTION_73_4();
  v82 = v31 + 64;
  OUTLINED_FUNCTION_3_13();
  if (!v33)
    goto LABEL_9;
LABEL_8:
  v93 = v32;
  v95 = v5;
  OUTLINED_FUNCTION_98_1();
  v91 = v34;
  while (2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v44 = OUTLINED_FUNCTION_46_9();
    v97 = (char *)v0 + 64;
    OUTLINED_FUNCTION_13_8();
    v47 = v46 & v45;
    v98 = (unint64_t)(v48 + 63) >> 6;
    v50 = v49 + 64;
    OUTLINED_FUNCTION_55_0();
    v51 = 0;
    if (v47)
    {
LABEL_28:
      v52 = __clz(__rbit64(v47));
      v47 &= v47 - 1;
      v53 = v52 | (v51 << 6);
      goto LABEL_46;
    }
    while (1)
    {
      v37 = __OFADD__(v51++, 1);
      if (v37)
      {
        __break(1u);
        goto LABEL_74;
      }
      if (v51 >= v98)
        goto LABEL_53;
      v54 = *(_QWORD *)&v97[8 * v51];
      if (!v54)
        break;
LABEL_45:
      v47 = (v54 - 1) & v54;
      v53 = __clz(__rbit64(v54)) + (v51 << 6);
LABEL_46:
      v56 = (uint64_t *)(*(_QWORD *)(v102 + 48) + 16 * v53);
      v58 = *v56;
      v57 = v56[1];
      OUTLINED_FUNCTION_29_14(*(_QWORD *)(v102 + 56) + *(_QWORD *)(v100 + 72) * v53, v99);
      isUniquelyReferenced_nonNull_native = v101;
      OUTLINED_FUNCTION_29_14(v99, v101);
      OUTLINED_FUNCTION_55_0();
      OUTLINED_FUNCTION_85_3(v99);
      *(_QWORD *)(v50 + ((v53 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v53;
      v59 = (_QWORD *)(*(_QWORD *)(v44 + 48) + 16 * v53);
      *v59 = v58;
      v59[1] = v57;
      OUTLINED_FUNCTION_27_14();
      sub_240C35540(v101, v60 + v61 * v53, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      v62 = *(_QWORD *)(v44 + 16);
      v37 = __OFADD__(v62, 1);
      v63 = v62 + 1;
      if (v37)
      {
        __break(1u);
        goto LABEL_72;
      }
      *(_QWORD *)(v44 + 16) = v63;
      if (v47)
        goto LABEL_28;
    }
    OUTLINED_FUNCTION_95_2();
    if (v36 == v37)
      goto LABEL_53;
    OUTLINED_FUNCTION_25_13();
    if (v54)
      goto LABEL_44;
    OUTLINED_FUNCTION_95_2();
    if (v36 == v37)
      goto LABEL_53;
    OUTLINED_FUNCTION_25_13();
    if (v54)
      goto LABEL_44;
    OUTLINED_FUNCTION_95_2();
    if (v36 == v37)
      goto LABEL_53;
    OUTLINED_FUNCTION_25_13();
    if (v54)
      goto LABEL_44;
    OUTLINED_FUNCTION_95_2();
    if (v36 == v37)
    {
LABEL_53:
      v5 = v95;
      OUTLINED_FUNCTION_63_1();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      OUTLINED_FUNCTION_63_1();
      v64 = OUTLINED_FUNCTION_61_7();
      if (__OFADD__(*(_QWORD *)(v44 + 16), (v65 & 1) == 0))
        goto LABEL_76;
      v66 = v64;
      v67 = v65;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
      isUniquelyReferenced_nonNull_native = v86;
      if ((sub_240F1CE34() & 1) != 0)
      {
        v68 = OUTLINED_FUNCTION_61_7();
        if ((v67 & 1) != (v69 & 1))
          goto LABEL_80;
        v66 = v68;
      }
      if ((v67 & 1) == 0)
        goto LABEL_79;
      OUTLINED_FUNCTION_82_1();
      sub_240C35540(v70 + v71 * v66, v86, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      OUTLINED_FUNCTION_69_5(v86, 0);
      OUTLINED_FUNCTION_80_4();
      v72 = OUTLINED_FUNCTION_132_2();
      if (OUTLINED_FUNCTION_59_5(v72))
      {
        sub_240C02F94(v87, v83, &qword_25708CB10);
        OUTLINED_FUNCTION_54_12(v83);
        sub_240BE0B68(v87, &qword_25708CB10);
      }
      else
      {
        sub_240C78004();
        OUTLINED_FUNCTION_54_12(v87);
      }
      sub_240C6F79C();
      sub_240BE0B68(v86, &qword_25708CB18);
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_12_2();
      sub_240CB6A4C(v44);
      isUniquelyReferenced_nonNull_native = v73;
      OUTLINED_FUNCTION_42_2();
      v0 = (uint64_t (*)())v96;
      swift_bridgeObjectRelease();
      v102 = isUniquelyReferenced_nonNull_native;
      *(_QWORD *)(v96 + 24) = isUniquelyReferenced_nonNull_native;
      v32 = v93;
      if (!v91)
      {
LABEL_9:
        if (__OFADD__(v32, 1))
          goto LABEL_77;
        OUTLINED_FUNCTION_108_1();
        if (v36 == v37)
          goto LABEL_72;
        if (!*(_QWORD *)(v82 + 8 * v35))
        {
          OUTLINED_FUNCTION_19_5();
          if (v36 == v37)
          {
LABEL_72:
            swift_release();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_22_10();
          if (v39)
            goto LABEL_25;
          OUTLINED_FUNCTION_19_5();
          if (v36 == v37)
            goto LABEL_72;
          OUTLINED_FUNCTION_22_10();
          if (v40)
            goto LABEL_25;
          OUTLINED_FUNCTION_19_5();
          if (v36 == v37)
            goto LABEL_72;
          OUTLINED_FUNCTION_22_10();
          if (v41)
            goto LABEL_25;
          OUTLINED_FUNCTION_19_5();
          if (v36 == v37)
            goto LABEL_72;
          OUTLINED_FUNCTION_22_10();
          if (v42)
          {
LABEL_25:
            v35 = v38;
          }
          else
          {
            OUTLINED_FUNCTION_19_5();
            if (v36 == v37)
              goto LABEL_72;
            OUTLINED_FUNCTION_22_10();
            v35 = v74;
            if (!v75)
            {
              while (!__OFADD__(v74, 1))
              {
                OUTLINED_FUNCTION_108_1();
                if (v36 == v37)
                  goto LABEL_72;
                v74 = v76 + 1;
                if (*(_QWORD *)(v82 + 8 * v35))
                  goto LABEL_26;
              }
              goto LABEL_78;
            }
          }
        }
LABEL_26:
        v93 = v35;
        v95 = v5;
        OUTLINED_FUNCTION_125_2();
        v91 = v43;
        continue;
      }
      goto LABEL_8;
    }
    break;
  }
  OUTLINED_FUNCTION_25_13();
  if (v54)
  {
LABEL_44:
    v51 = v55;
    goto LABEL_45;
  }
  while (1)
  {
    v51 = v55 + 1;
    if (__OFADD__(v55, 1))
      break;
    if (v51 >= v98)
      goto LABEL_53;
    v54 = *(_QWORD *)&v97[8 * v51];
    ++v55;
    if (v54)
      goto LABEL_45;
  }
LABEL_74:
  __break(1u);
LABEL_75:
  __break(1u);
LABEL_76:
  __break(1u);
LABEL_77:
  __break(1u);
LABEL_78:
  __break(1u);
LABEL_79:
  OUTLINED_FUNCTION_69_5(isUniquelyReferenced_nonNull_native, 1);
  __break(1u);
LABEL_80:
  sub_240F1CEF4();
  __break(1u);
}

void MLProgram.Block.operations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  OUTLINED_FUNCTION_22();
  v4 = OUTLINED_FUNCTION_57_8();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 16) + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_18_1();
    sub_240BF0B4C();
    type metadata accessor for Proto_MILSpec_Operation(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_28_10(v2, v0);
      OUTLINED_FUNCTION_21_2();
      if (v7)
      {
        OUTLINED_FUNCTION_10_4(v6);
        sub_240BF0B4C();
      }
      OUTLINED_FUNCTION_14_11();
      v2 += v3;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.Block.outputs.getter()
{
  return swift_bridgeObjectRetain();
}

void MLProgram.Block.inputs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  OUTLINED_FUNCTION_22();
  v4 = type metadata accessor for MLProgram.NamedValueType();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  v5 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  if (v5)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_18_1();
    sub_240BF095C();
    type metadata accessor for Proto_MILSpec_NamedValueType(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_28_10(v2, v0);
      OUTLINED_FUNCTION_21_2();
      if (v7)
      {
        OUTLINED_FUNCTION_10_4(v6);
        sub_240BF095C();
      }
      OUTLINED_FUNCTION_14_11();
      v2 += v3;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240CB5FBC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Block.inputs.setter(v0);
}

void MLProgram.Block.inputs.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_35_12(a1, (uint64_t)&v3, type metadata accessor for Proto_MILSpec_NamedValueType, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0988, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
  OUTLINED_FUNCTION_173();
  swift_bridgeObjectRelease();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Block.inputs.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  MLProgram.Block.inputs.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240CB6068(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_315();
    v5 = OUTLINED_FUNCTION_63_5(v3, v4, type metadata accessor for Proto_MILSpec_NamedValueType, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0988, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *v2 = v5;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_35_12(*a1, (uint64_t)(a1 + 2), type metadata accessor for Proto_MILSpec_NamedValueType, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0988, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *v2 = v6;
    OUTLINED_FUNCTION_6_2();
  }
}

void sub_240CB6114()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Block.outputs.setter(v0);
}

void MLProgram.Block.outputs.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_44();
}

void MLProgram.Block.outputs.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240CB6194()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Block.operations.setter(v0);
}

void MLProgram.Block.operations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_35_12(a1, (uint64_t)&v3, type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_80_1();
  *(_QWORD *)(v1 + 16) = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Block.operations.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  MLProgram.Block.operations.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240CB623C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_315();
    v5 = OUTLINED_FUNCTION_63_5(v3, v4, type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v5;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_35_12(*a1, (uint64_t)(a1 + 2), type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v6;
    OUTLINED_FUNCTION_6_2();
  }
}

void MLProgram.Block.attributes.getter()
{
  OUTLINED_FUNCTION_38_11();
}

void sub_240CB630C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Block.attributes.setter(v0);
}

void MLProgram.Block.attributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_240CB6A4C(a1);
  v3 = v2;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_147_0();
  *(_QWORD *)(v1 + 24) = v3;
  OUTLINED_FUNCTION_12_1();
}

void (*MLProgram.Block.attributes.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_38_11();
  a1[2] = v2;
  *a1 = v4;
  return sub_240CB63B4;
}

void sub_240CB63B4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = a1[1];
  v3 = *a1;
  if ((a2 & 1) != 0)
  {
    v4 = swift_bridgeObjectRetain();
    sub_240CB6A4C(v4);
    v6 = v5;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 24) = v6;
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_240CB6A4C(v3);
    v8 = v7;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 24) = v8;
    OUTLINED_FUNCTION_12_1();
  }
}

uint64_t MLProgram.Block.init(inputs:outputs:operations:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  char v12[8];
  char v13[16];

  v8 = MEMORY[0x24BEE4AF8];
  *a4 = MEMORY[0x24BEE4AF8];
  a4[1] = v8;
  a4[2] = v8;
  type metadata accessor for Proto_MILSpec_Value(0);
  a4[3] = sub_240F1CC48();
  type metadata accessor for Proto_MILSpec_Block(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v9 = OUTLINED_FUNCTION_35_12(a1, (uint64_t)v13, type metadata accessor for Proto_MILSpec_NamedValueType, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0988, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
  OUTLINED_FUNCTION_5_4();
  swift_bridgeObjectRelease();
  *a4 = v9;
  swift_bridgeObjectRelease();
  a4[1] = a2;
  v10 = sub_240CB3C08(a3, (uint64_t)v12, type metadata accessor for Proto_MILSpec_Operation, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0BA4, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
  OUTLINED_FUNCTION_42_2();
  result = swift_bridgeObjectRelease();
  a4[2] = v10;
  return result;
}

void MLProgram.Block.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22();
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  type metadata accessor for MLProgram.Block();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_10_3();
  sub_240C355AC(v0, v1, v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v13 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v13 + 16) = xmmword_240F1E9E0;
  *(_QWORD *)(v13 + 32) = 0x737475706E69;
  *(_QWORD *)(v13 + 40) = 0xE600000000000000;
  MLProgram.Block.inputs.getter();
  v15 = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAE0);
  *(_QWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 72) = v16;
  *(_QWORD *)(v13 + 80) = 0x7374757074756FLL;
  *(_QWORD *)(v13 + 88) = 0xE700000000000000;
  v17 = *(_QWORD *)(v0 + 8);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D060);
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 120) = v18;
  *(_QWORD *)(v13 + 128) = 0x6F6974617265706FLL;
  *(_QWORD *)(v13 + 136) = 0xEA0000000000736ELL;
  OUTLINED_FUNCTION_55_0();
  MLProgram.Block.operations.getter();
  v20 = v19;
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D590);
  *(_QWORD *)(v13 + 144) = v20;
  *(_QWORD *)(v13 + 168) = v21;
  *(_QWORD *)(v13 + 176) = 0x7475626972747461;
  *(_QWORD *)(v13 + 184) = 0xEA00000000007365;
  OUTLINED_FUNCTION_38_11();
  v23 = v22;
  *(_QWORD *)(v13 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAF0);
  *(_QWORD *)(v13 + 192) = v23;
  v24 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v24);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.Block.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_240CB3E84();
  v1 = sub_240CC4F3C(0, 0, v0);
  swift_release();
  return v1;
}

void sub_240CB6790(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  _QWORD *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v2 = type metadata accessor for MLProgram.Value();
  v33 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v31 = (char *)&v27 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for Proto_MILSpec_Value(0);
  v32 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
  v7 = sub_240F1CE64();
  v8 = (_QWORD *)v7;
  v9 = 0;
  v34 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v28 = a1 + 64;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v29 = (unint64_t)(v11 + 63) >> 6;
  v30 = v7 + 64;
  v14 = (uint64_t)v31;
  if ((v12 & v10) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (uint64_t *)(*(_QWORD *)(v34 + 48) + 16 * i);
    v21 = *v20;
    v22 = v20[1];
    sub_240C355AC(*(_QWORD *)(v34 + 56) + *(_QWORD *)(v32 + 72) * i, (uint64_t)v6, type metadata accessor for Proto_MILSpec_Value);
    sub_240C355AC((uint64_t)v6, v14, type metadata accessor for Proto_MILSpec_Value);
    swift_bridgeObjectRetain();
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_MILSpec_Value);
    *(_QWORD *)(v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v23 = (_QWORD *)(v8[6] + 16 * i);
    *v23 = v21;
    v23[1] = v22;
    sub_240C35540(v14, v8[7] + *(_QWORD *)(v33 + 72) * i, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    v24 = v8[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v8[2] = v26;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
      goto LABEL_24;
    if (v17 >= v29)
      return;
    v18 = *(_QWORD *)(v28 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v29)
        return;
      v18 = *(_QWORD *)(v28 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v29)
          return;
        v18 = *(_QWORD *)(v28 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_18:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v29)
    return;
  v18 = *(_QWORD *)(v28 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v29)
      return;
    v18 = *(_QWORD *)(v28 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

void sub_240CB6A4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t i;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = type metadata accessor for Proto_MILSpec_Value(0);
  v39 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v37 = (char *)&v31 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MLProgram.Value();
  v38 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v35 = (uint64_t)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB60);
  v6 = sub_240F1CE64();
  v7 = 0;
  v40 = a1;
  v10 = *(_QWORD *)(a1 + 64);
  v9 = a1 + 64;
  v8 = v10;
  v11 = 1 << *(_BYTE *)(v9 - 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v8;
  v32 = v9;
  v33 = (unint64_t)(v11 + 63) >> 6;
  v36 = v6 + 64;
  v34 = v6;
  v14 = (uint64_t)v37;
  if ((v12 & v8) == 0)
    goto LABEL_5;
LABEL_4:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  v16 = v7;
  for (i = v15 | (v7 << 6); ; i = __clz(__rbit64(v19)) + (v20 << 6))
  {
    v22 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v23 = *v22;
    v24 = v22[1];
    v25 = v35;
    sub_240C355AC(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v38 + 72) * i, v35, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    sub_240C355AC(v25, v14, type metadata accessor for Proto_MILSpec_Value);
    swift_bridgeObjectRetain();
    sub_240BE10B8(v25, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v26 = v34;
    v27 = (_QWORD *)(*(_QWORD *)(v34 + 48) + 16 * i);
    *v27 = v23;
    v27[1] = v24;
    sub_240C35540(v14, *(_QWORD *)(v26 + 56) + *(_QWORD *)(v39 + 72) * i, type metadata accessor for Proto_MILSpec_Value);
    v28 = *(_QWORD *)(v26 + 16);
    v29 = __OFADD__(v28, 1);
    v30 = v28 + 1;
    if (v29)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(_QWORD *)(v26 + 16) = v30;
    v7 = v16;
    if (v13)
      goto LABEL_4;
LABEL_5:
    v18 = v7 + 1;
    if (__OFADD__(v7, 1))
      goto LABEL_24;
    if (v18 >= v33)
      return;
    v19 = *(_QWORD *)(v32 + 8 * v18);
    v20 = v7 + 1;
    if (!v19)
    {
      v20 = v7 + 2;
      if (v7 + 2 >= v33)
        return;
      v19 = *(_QWORD *)(v32 + 8 * v20);
      if (!v19)
      {
        v20 = v7 + 3;
        if (v7 + 3 >= v33)
          return;
        v19 = *(_QWORD *)(v32 + 8 * v20);
        if (!v19)
          break;
      }
    }
LABEL_18:
    v13 = (v19 - 1) & v19;
    v16 = v20;
  }
  v21 = v7 + 4;
  if (v7 + 4 >= v33)
    return;
  v19 = *(_QWORD *)(v32 + 8 * v21);
  if (v19)
  {
    v20 = v7 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    v20 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v20 >= v33)
      return;
    v19 = *(_QWORD *)(v32 + 8 * v20);
    ++v21;
    if (v19)
      goto LABEL_18;
  }
LABEL_25:
  __break(1u);
}

uint64_t type metadata accessor for MLProgram.Block()
{
  uint64_t result;

  result = qword_25708D5A0;
  if (!qword_25708D5A0)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240CB6D64()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D598;
  if (!qword_25708D598)
  {
    v1 = type metadata accessor for Proto_MILSpec_Block(255);
    result = MEMORY[0x24268C2AC](&unk_240F31918, v1);
    atomic_store(result, (unint64_t *)&qword_25708D598);
  }
  return result;
}

void sub_240CB6DA4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Block.inputs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB6DC8()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = MLProgram.Block.outputs.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CB6DEC()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Block.operations.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB6E10()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Block.attributes.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s5BlockVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_MILSpec_Block(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    a1[3] = a2[3];
    v8 = *(int *)(v4 + 32);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t _s5BlockVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_MILSpec_Block(0) + 32);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s5BlockVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = *(int *)(type metadata accessor for Proto_MILSpec_Block(0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *_s5BlockVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Block(0) + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s5BlockVwtk(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Block(0) + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *_s5BlockVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Block(0) + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s5BlockVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB71F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_52_9();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s5BlockVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB7228()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_52_9();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240CB7254()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_Block(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240CB72BC()
{
  OUTLINED_FUNCTION_80_1();
  return swift_deallocObject();
}

uint64_t sub_240CB72DC()
{
  OUTLINED_FUNCTION_147_0();
  return swift_deallocObject();
}

uint64_t sub_240CB7300(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || -(-1 << *(_BYTE *)(a4 + 32)) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a4 + 64 + (((unint64_t)result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2)
    return sub_240F1CDC8();
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_240CB737C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_240CB7404(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
}

uint64_t sub_240CB7388(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBF8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CB73D0()
{
  OUTLINED_FUNCTION_147_0();
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_240CB73F8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_240CB7404(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
}

uint64_t sub_240CB7404(uint64_t result, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v8 = result;
    v9 = *(_QWORD *)(a5 + 56);
    v10 = *(_QWORD *)(*(_QWORD *)(a5 + 48) + 16 * a2);
    v11 = a6(0);
    sub_240C355AC(v9 + *(_QWORD *)(*(_QWORD *)(v11 - 8) + 72) * a2, v8, a6);
    swift_bridgeObjectRetain();
    return v10;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_240CB74BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  return sub_240CB7404(a1, a2, a3, a4, a5, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function);
}

uint64_t OUTLINED_FUNCTION_4_24@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Proto_MILSpec_Value(0);
}

void OUTLINED_FUNCTION_5_26()
{
  sub_240C02C78();
}

void OUTLINED_FUNCTION_11_25(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_28_10(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(a1, a2, v2);
}

void OUTLINED_FUNCTION_29_14(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_35_12(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  return sub_240CB3C08(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_36_16()
{
  return swift_projectBox();
}

void OUTLINED_FUNCTION_38_11()
{
  uint64_t v0;

  sub_240CB6790(*(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_46_9()
{
  return sub_240F1CE64();
}

uint64_t OUTLINED_FUNCTION_48_10(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(v2 - 264));
}

uint64_t OUTLINED_FUNCTION_52_9()
{
  return type metadata accessor for Proto_MILSpec_Block(0);
}

void OUTLINED_FUNCTION_53_10()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
}

void OUTLINED_FUNCTION_54_12(uint64_t a1)
{
  MLProgram.Value.representation.setter(a1);
}

uint64_t OUTLINED_FUNCTION_57_8()
{
  return type metadata accessor for MLProgram.Operation();
}

uint64_t OUTLINED_FUNCTION_59_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

unint64_t OUTLINED_FUNCTION_61_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C66A40(*(_QWORD *)(v1 - 176), v0);
}

uint64_t OUTLINED_FUNCTION_63_5(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  return sub_240CB3C08(a1, v5, a3, a4, a5);
}

void OUTLINED_FUNCTION_67_6()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_69_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(v2 - 256));
}

void OUTLINED_FUNCTION_73_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(v0 + 24);
  *(_QWORD *)(v1 - 120) = v2;
  sub_240CB6790(v2);
}

uint64_t OUTLINED_FUNCTION_75_3()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

unint64_t OUTLINED_FUNCTION_76_3()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C66A40(v1, v0);
}

void OUTLINED_FUNCTION_80_4()
{
  uint64_t v0;

  MLProgram.Value.representation.getter(v0);
}

void OUTLINED_FUNCTION_85_3(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

void NeuralNetwork.Border.leadingHeight.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_25();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_1_23(v4, v5, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_39_9();
  v8 = sub_240C3E408(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_37_9(v8, v9, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_13_18();
  if ((*v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_27_15();
    OUTLINED_FUNCTION_36_17();
    OUTLINED_FUNCTION_42();
    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t type metadata accessor for NeuralNetwork.Border.EdgeSizes(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D5D0);
}

#error "240CB77D0: call analysis failed (funcsize=34)"

void NeuralNetwork.Border.trailingHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_4_25();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_1_23(v4, v5, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_39_9();
  v8 = sub_240C3E408(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_37_9(v8, v9, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_13_18();
  if ((*(_QWORD *)(v0 + 8) & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_27_15();
    OUTLINED_FUNCTION_36_17();
    OUTLINED_FUNCTION_42();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "240CB7920: call analysis failed (funcsize=34)"

void NeuralNetwork.Border.leadingWidth.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_25();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_1_23(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = v2 + *(int *)(v4 + 36);
  v9 = OUTLINED_FUNCTION_39_9();
  v10 = sub_240C3E408(v9, v8, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_12_23(v10, v11, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_13_18();
  if ((*v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_27_15();
    OUTLINED_FUNCTION_36_17();
    OUTLINED_FUNCTION_42();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "240CB7A74: call analysis failed (funcsize=34)"

void NeuralNetwork.Border.trailingWidth.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_4_25();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = OUTLINED_FUNCTION_6_20();
  OUTLINED_FUNCTION_1_23(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = v2 + *(int *)(v4 + 36);
  v9 = OUTLINED_FUNCTION_39_9();
  v10 = sub_240C3E408(v9, v8, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_12_23(v10, v11, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_13_18();
  if ((*(_QWORD *)(v0 + 8) & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_27_15();
    OUTLINED_FUNCTION_36_17();
    OUTLINED_FUNCTION_42();
    return;
  }
LABEL_7:
  __break(1u);
}

#error "240CB7BC8: call analysis failed (funcsize=34)"

#error "240CB7C9C: call analysis failed (funcsize=53)"

void NeuralNetwork.Border.extent.getter(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;

  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_46_10();
    v7 = v3 + v6;
    OUTLINED_FUNCTION_12_23(v8, v9, v10);
    if (v4 != 1)
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
      sub_240C3E408(v7 + *(_QWORD *)(v2 + 72), a1 + *(int *)(v11 + 36), type metadata accessor for Proto_BorderAmounts.EdgeSizes);
      OUTLINED_FUNCTION_156();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t sub_240CB7D34(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

#error "240CB7DD4: call analysis failed (funcsize=29)"

void NeuralNetwork.Border.extent.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_66();
  a17 = v20;
  a18 = v21;
  v23 = v22;
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (char *)&a9 - v26;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
  v28 = *(_QWORD *)(OUTLINED_FUNCTION_6_20() - 8);
  v29 = *(_QWORD *)(v28 + 72);
  v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
  v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_240F1D370;
  v32 = v31 + v30;
  OUTLINED_FUNCTION_26_11(v23, (uint64_t)v27);
  sub_240CB86A8((uint64_t)v27, v32);
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_26_11(v23 + *(int *)(v33 + 36), v19);
  sub_240CB86A8(v19, v32 + v29);
  sub_240CB7D34(v23);
  swift_bridgeObjectRelease();
  *v18 = v31;
  OUTLINED_FUNCTION_13();
}

uint64_t (*NeuralNetwork.Border.extent.modify(uint64_t **a1))()
{
  uint64_t *v1;
  uint64_t v3;
  size_t v4;
  uint64_t (*result)();
  uint64_t v6;
  uint64_t (*v7)();
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  v4 = *(_QWORD *)(*(_QWORD *)(v3 - 8) + 64);
  a1[1] = (uint64_t *)malloc(v4);
  result = (uint64_t (*)())malloc(v4);
  a1[2] = (uint64_t *)result;
  v6 = *v1;
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = result;
    v8 = *(_QWORD *)(OUTLINED_FUNCTION_6_20() - 8);
    v9 = v6 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    result = (uint64_t (*)())OUTLINED_FUNCTION_40_10(v9, v10, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
    if (*(_QWORD *)(v6 + 16) >= 2uLL)
    {
      sub_240C3E408(v9 + *(_QWORD *)(v8 + 72), (uint64_t)v7 + *(int *)(v3 + 36), type metadata accessor for Proto_BorderAmounts.EdgeSizes);
      return sub_240CB7FC0;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

#error "240CB7FFC: call analysis failed (funcsize=23)"

uint64_t NeuralNetwork.Border.EdgeSizes.leading.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*v0 < 0)
    __break(1u);
  return result;
}

uint64_t sub_240CB802C(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t NeuralNetwork.Border.EdgeSizes.leading.setter(uint64_t result)
{
  _QWORD *v1;

  if (result < 0)
    __break(1u);
  else
    *v1 = result;
  return result;
}

void NeuralNetwork.Border.leadingHeight.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.Border.leadingHeight.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB80A4(_QWORD *a1)
{
  NeuralNetwork.Border.leadingHeight.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Border.EdgeSizes.trailing.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 8);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t NeuralNetwork.Border.EdgeSizes.trailing.setter(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
    __break(1u);
  else
    *(_QWORD *)(v1 + 8) = result;
  return result;
}

void NeuralNetwork.Border.trailingHeight.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.Border.trailingHeight.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB810C(_QWORD *a1)
{
  NeuralNetwork.Border.trailingHeight.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Border.leadingWidth.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.Border.leadingWidth.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB8154(_QWORD *a1)
{
  NeuralNetwork.Border.leadingWidth.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Border.trailingWidth.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.Border.trailingWidth.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CB819C(_QWORD *a1)
{
  NeuralNetwork.Border.trailingWidth.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Border.init(extent:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v17 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_81();
  *a2 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_24_13();
  OUTLINED_FUNCTION_153_0();
  sub_240CB86EC(a1, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
  v12 = *(_QWORD *)(OUTLINED_FUNCTION_6_20() - 8);
  v13 = *(_QWORD *)(v12 + 72);
  v14 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240F1D370;
  v16 = v15 + v14;
  OUTLINED_FUNCTION_26_11(v3, (uint64_t)v9);
  sub_240CB86A8((uint64_t)v9, v16);
  OUTLINED_FUNCTION_26_11(v3 + *(int *)(v10 + 36), v2);
  sub_240CB86A8(v2, v16 + v13);
  OUTLINED_FUNCTION_13_18();
  swift_bridgeObjectRelease();
  *a2 = v15;
  sub_240CB7D34(a1);
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Border.EdgeSizes.init(leading:trailing:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  OUTLINED_FUNCTION_6_20();
  *a3 = 0;
  a3[1] = 0;
  OUTLINED_FUNCTION_153_0();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    *a3 = a1;
    if ((a2 & 0x8000000000000000) == 0)
    {
      a3[1] = a2;
      OUTLINED_FUNCTION_156();
      return;
    }
  }
  __break(1u);
}

void static NeuralNetwork.Border.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v1);
  sub_240BEEF04();
  if ((v2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_24_13();
    OUTLINED_FUNCTION_11_6(*(int *)(v3 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v3 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Border.customMirror.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)(_QWORD);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v6 = sub_240F1CF90();
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Border(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_48();
  sub_240C3E408(v1, v4, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240F1D380;
  *(_QWORD *)(v10 + 32) = 0x746E65747865;
  *(_QWORD *)(v10 + 40) = 0xE600000000000000;
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  *(_QWORD *)(v10 + 72) = v11;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 48));
  v13 = *(_QWORD *)v1;
  if (*(_QWORD *)(*(_QWORD *)v1 + 16))
  {
    v14 = (uint64_t)boxed_opaque_existential_0;
    OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_46_10();
    v16 = v13 + v15;
    sub_240C3E408(v13 + v15, v14, v17);
    if (*(_QWORD *)(v13 + 16) >= 2uLL)
    {
      sub_240C3E408(v16 + *(_QWORD *)(a1 + 72), v14 + *(int *)(v11 + 36), type metadata accessor for Proto_BorderAmounts.EdgeSizes);
      OUTLINED_FUNCTION_34_10();
      *(_QWORD *)(v10 + 80) = v18 & 0xFFFFFFFFFFFFLL | 0x4867000000000000;
      *(_QWORD *)(v10 + 88) = 0xED00007468676965;
      NeuralNetwork.Border.leadingHeight.getter();
      v19 = MEMORY[0x24BEE1768];
      *(_QWORD *)(v10 + 96) = v20;
      *(_QWORD *)(v10 + 120) = v19;
      strcpy((char *)(v10 + 128), "trailingHeight");
      *(_BYTE *)(v10 + 143) = -18;
      NeuralNetwork.Border.trailingHeight.getter();
      *(_QWORD *)(v10 + 144) = v21;
      OUTLINED_FUNCTION_34_10();
      *(_QWORD *)(v10 + 168) = v19;
      *(_QWORD *)(v10 + 176) = v22 & 0xFFFFFFFFFFFFLL | 0x5767000000000000;
      *(_QWORD *)(v10 + 184) = 0xEC00000068746469;
      NeuralNetwork.Border.leadingWidth.getter();
      *(_QWORD *)(v10 + 192) = v23;
      *(_QWORD *)(v10 + 216) = v19;
      strcpy((char *)(v10 + 224), "trailingWidth");
      *(_WORD *)(v10 + 238) = -4864;
      NeuralNetwork.Border.trailingWidth.getter();
      *(_QWORD *)(v10 + 264) = v19;
      *(_QWORD *)(v10 + 240) = v24;
      v25 = sub_240F1CF84();
      OUTLINED_FUNCTION_18_0(v3, v26, v27, v25);
      (*(void (**)(uint64_t, _QWORD, uint64_t))(v28 + 104))(v2, *MEMORY[0x24BEE43C0], v29);
      sub_240F1CFA8();
      OUTLINED_FUNCTION_1();
      return;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

uint64_t *(*NeuralNetwork.Border.EdgeSizes.leading.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  _QWORD *v1;

  *((_QWORD *)result + 1) = v1;
  if ((*v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *v1;
    return sub_240C421A0;
  }
  return result;
}

uint64_t *(*NeuralNetwork.Border.EdgeSizes.trailing.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v2;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 8);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v2;
    return sub_240C42208;
  }
  return result;
}

uint64_t sub_240CB86A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_BorderAmounts.EdgeSizes(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CB86EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NeuralNetwork.Border(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D5C0);
}

void static NeuralNetwork.Border.EdgeSizes.== infix(_:_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v3);
  if (*v1 == *v0 && v1[1] == v0[1])
  {
    v4 = OUTLINED_FUNCTION_6_20();
    OUTLINED_FUNCTION_11_6(*(int *)(v4 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v4 + 24));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Border.EdgeSizes.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v0;
  v4 = sub_240F1CF90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  sub_240C3E408((uint64_t)v3, v2, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_240F1D370;
  OUTLINED_FUNCTION_34_10();
  v11[4] = v12 & 0xFFFFFFFFFFFFLL | 0x67000000000000;
  v11[5] = 0xE700000000000000;
  if ((*v3 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v13 = MEMORY[0x24BEE1768];
    v11[6] = *v3;
    v11[9] = v13;
    v11[10] = 0x676E696C69617274;
    v11[11] = 0xE800000000000000;
    v14 = v3[1];
    if ((v14 & 0x8000000000000000) == 0)
    {
      v11[15] = v13;
      v11[12] = v14;
      v15 = sub_240F1CF84();
      OUTLINED_FUNCTION_18_0(v1, v16, v17, v15);
      (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x24BEE43C0], v4);
      sub_240F1CFA8();
      OUTLINED_FUNCTION_1();
      return;
    }
  }
  __break(1u);
}

uint64_t sub_240CB8990()
{
  return sub_240C30D44(&qword_25708D5B0, type metadata accessor for Proto_BorderAmounts, (uint64_t)&unk_240F4CDCC);
}

uint64_t sub_240CB89C0()
{
  return sub_240C30D44(&qword_25708D5B8, type metadata accessor for Proto_BorderAmounts.EdgeSizes, (uint64_t)&unk_240F4CD54);
}

void sub_240CB89EC(uint64_t a1@<X8>)
{
  NeuralNetwork.Border.extent.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CB8A0C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Border.leadingHeight.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB8A2C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_14_23(a1);
  NeuralNetwork.Border.leadingHeight.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CB8A48()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Border.trailingHeight.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB8A68(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_14_23(a1);
  NeuralNetwork.Border.trailingHeight.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CB8A84()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Border.leadingWidth.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB8AA4(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_14_23(a1);
  NeuralNetwork.Border.leadingWidth.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CB8AC0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Border.trailingWidth.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240CB8AE0(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_14_23(a1);
  NeuralNetwork.Border.trailingWidth.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CB8AFC()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Border.EdgeSizes.leading.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CB8B1C(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_14_23(a1);
  NeuralNetwork.Border.EdgeSizes.leading.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240CB8B38()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Border.EdgeSizes.trailing.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CB8B58(uint64_t a1)
{
  uint64_t v1;

  v1 = OUTLINED_FUNCTION_14_23(a1);
  NeuralNetwork.Border.EdgeSizes.trailing.setter(v1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s14descr251117181C6BorderVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_BorderAmounts(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s14descr251117181C6BorderVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_BorderAmounts(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s14descr251117181C6BorderVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s14descr251117181C6BorderVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s14descr251117181C6BorderVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s14descr251117181C6BorderVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s14descr251117181C6BorderVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB8E3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_24_13();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t _s14descr251117181C6BorderVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB8E74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_24_13();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CB8E98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_BorderAmounts);
}

uint64_t *_s14descr251117181C6BorderV9EdgeSizesVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_BorderAmounts.EdgeSizes(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(int *)(v4 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s14descr251117181C6BorderV9EdgeSizesVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_BorderAmounts.EdgeSizes(0) + 24);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_OWORD *_s14descr251117181C6BorderV9EdgeSizesVwcp(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts.EdgeSizes(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s14descr251117181C6BorderV9EdgeSizesVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts.EdgeSizes(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s14descr251117181C6BorderV9EdgeSizesVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts.EdgeSizes(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *_s14descr251117181C6BorderV9EdgeSizesVwta(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_BorderAmounts.EdgeSizes(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s14descr251117181C6BorderV9EdgeSizesVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB9130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_6_20();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t _s14descr251117181C6BorderV9EdgeSizesVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB9168()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_20();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CB918C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
}

uint64_t OUTLINED_FUNCTION_1_23(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  return sub_240C3E408(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)), v4, a3);
}

uint64_t OUTLINED_FUNCTION_2_25(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  return sub_240C3E408(v4+ ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)), v3, a3);
}

uint64_t OUTLINED_FUNCTION_6_20()
{
  return type metadata accessor for Proto_BorderAmounts.EdgeSizes(0);
}

uint64_t OUTLINED_FUNCTION_12_23(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  return sub_240C3E408(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_13_18()
{
  uint64_t v0;

  return sub_240CB7D34(v0);
}

uint64_t OUTLINED_FUNCTION_14_23(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_24_13()
{
  return type metadata accessor for Proto_BorderAmounts(0);
}

uint64_t OUTLINED_FUNCTION_26_11(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  return sub_240C3E408(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_27_15()
{
  uint64_t v0;

  return sub_240CB802C(v0);
}

void OUTLINED_FUNCTION_29_15(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;

  NeuralNetwork.Border.extent.setter(v18, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18);
}

uint64_t OUTLINED_FUNCTION_36_17()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_37_9(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  return sub_240C3E408(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_39_9()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(_QWORD *)(v1 + 72);
}

uint64_t OUTLINED_FUNCTION_40_10(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  return sub_240C3E408(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_45_11()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(_QWORD *)(v1 + 72);
}

uint64_t static ModelError.== infix(_:_:)()
{
  return 1;
}

uint64_t ModelError.hash(into:)()
{
  return sub_240F1CF48();
}

uint64_t ModelError.hashValue.getter()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  return sub_240F1CF78();
}

uint64_t sub_240CB9328()
{
  return ModelError.hashValue.getter();
}

uint64_t sub_240CB933C()
{
  return ModelError.hash(into:)();
}

uint64_t sub_240CB9350()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  return sub_240F1CF78();
}

unint64_t ModelError.errorDescription.getter()
{
  return 0xD000000000000025;
}

unint64_t sub_240CB93BC()
{
  unint64_t result;

  result = qword_25708D5E0;
  if (!qword_25708D5E0)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for ModelError, &type metadata for ModelError);
    atomic_store(result, (unint64_t *)&qword_25708D5E0);
  }
  return result;
}

unint64_t sub_240CB93FC()
{
  unint64_t result;

  result = qword_25708D5E8;
  if (!qword_25708D5E8)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for ModelError, &type metadata for ModelError);
    atomic_store(result, (unint64_t *)&qword_25708D5E8);
  }
  return result;
}

unint64_t sub_240CB9438()
{
  ModelError.errorDescription.getter();
  return 0xD000000000000025;
}

uint64_t getEnumTagSinglePayload for ModelError(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for ModelError(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_240CB94F4 + 4 * asc_240F26400[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_240CB9514 + 4 * byte_240F26405[v4]))();
}

_BYTE *sub_240CB94F4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_240CB9514(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_240CB951C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_240CB9524(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_240CB952C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_240CB9534(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for ModelError()
{
  return &type metadata for ModelError;
}

uint64_t sub_240CB9550()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CB955C(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *a1;
    if ((unint64_t)*a1 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_20_0();
    return __swift_getEnumTagSinglePayload((uint64_t)a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t sub_240CB95CC()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_QWORD *sub_240CB95D8(_QWORD *result, uint64_t a2, int a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *result = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    return (_QWORD *)__swift_storeEnumTagSinglePayload((uint64_t)v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Proto_ClassConfidenceThresholding()
{
  uint64_t result;

  result = qword_2543603B8;
  if (!qword_2543603B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CB9678@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_24();
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240CB96B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9248);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9248);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240F1DA30;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 100;
  *(_QWORD *)v5 = "precisionRecallCurves";
  *(_QWORD *)(v5 + 8) = 21;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_240F1CC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_240F1CC18();
}

uint64_t sub_240CB97B4()
{
  uint64_t v0;

  if (qword_25708AEF0 != -1)
    swift_once();
  v0 = sub_240F1CC30();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2570F9248);
}

uint64_t sub_240CB97FC()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_240F1C990();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 100)
      sub_240CB986C();
  }
  return result;
}

uint64_t sub_240CB986C()
{
  type metadata accessor for Proto_PrecisionRecallCurve(0);
  sub_240C30D44(&qword_25708D618, type metadata accessor for Proto_PrecisionRecallCurve, (uint64_t)&unk_240F2B46C);
  return sub_240F1CABC();
}

uint64_t sub_240CB98F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for Proto_PrecisionRecallCurve(0),
        sub_240C30D44(&qword_25708D618, type metadata accessor for Proto_PrecisionRecallCurve, (uint64_t)&unk_240F2B46C),
        result = sub_240F1CBF4(),
        !v1))
  {
    type metadata accessor for Proto_ClassConfidenceThresholding();
    return sub_240F1C918();
  }
  return result;
}

uint64_t sub_240CB99C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_240BEC42C();
  if ((v11 & 1) != 0)
  {
    v12 = OUTLINED_FUNCTION_1_24();
    v13 = a1 + *(int *)(v12 + 20);
    v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v14(v10, v13, v4);
    v14(v8, a2 + *(int *)(v12 + 20), v4);
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    v15 = sub_240F1CC90();
    v16 = *(void (**)(char *, uint64_t))(v5 + 8);
    v16(v8, v4);
    v16(v10, v4);
  }
  else
  {
    v15 = 0;
  }
  return v15 & 1;
}

uint64_t sub_240CB9AEC()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_1_24();
  sub_240C30D44(&qword_25708D5F8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F2666C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

unint64_t sub_240CB9B58()
{
  return 0xD000000000000021;
}

uint64_t sub_240CB9B74()
{
  return sub_240CB97FC();
}

uint64_t sub_240CB9B88()
{
  return sub_240CB98F0();
}

uint64_t sub_240CB9B9C()
{
  sub_240C30D44(&qword_25708D610, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F265BC);
  return sub_240F1C960();
}

uint64_t sub_240CB9BEC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240CB97B4();
  v3 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_240CB9C2C()
{
  sub_240C30D44(&qword_25708D5F0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F265F4);
  return sub_240F1CAF8();
}

uint64_t sub_240CB9C70()
{
  sub_240C30D44(&qword_25708D5F0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F265F4);
  return sub_240F1CB04();
}

uint64_t sub_240CB9CC4()
{
  return sub_240C30D44(&qword_25708D5F0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F265F4);
}

uint64_t sub_240CB9CF0()
{
  return sub_240C30D44(&qword_25708D5F8, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F2666C);
}

uint64_t sub_240CB9D1C()
{
  return sub_240C30D44(&qword_25708D600, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F2656C);
}

uint64_t sub_240CB9D48()
{
  return sub_240C30D44(&qword_25708D608, (uint64_t (*)(uint64_t))type metadata accessor for Proto_ClassConfidenceThresholding, (uint64_t)&unk_240F26544);
}

uint64_t OUTLINED_FUNCTION_1_24()
{
  return type metadata accessor for Proto_ClassConfidenceThresholding();
}

void static NeuralNetwork.Layer.BroadcastToStaticParameters.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v5);
  if ((sub_240BEACE0(*a1, *a2) & 1) != 0)
  {
    v6 = type metadata accessor for Proto_BroadcastToStaticLayerParams(0);
    OUTLINED_FUNCTION_6_21(v6);
    OUTLINED_FUNCTION_13_19();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.FlattenTo2DParameters.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v5);
  if (*a1 == *a2)
  {
    v6 = type metadata accessor for Proto_FlattenTo2DLayerParams(0);
    OUTLINED_FUNCTION_6_21(v6);
    OUTLINED_FUNCTION_13_19();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

uint64_t NeuralNetwork.Layer.BroadcastToStaticParameters.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_240CB9F2C(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_BroadcastToStaticLayerParams, a1);
}

uint64_t NeuralNetwork.Layer.FlattenTo2DParameters.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_240CB9F2C(0, (void (*)(_QWORD))type metadata accessor for Proto_FlattenTo2DLayerParams, a1);
}

uint64_t sub_240CB9F2C@<X0>(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a2(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void sub_240CB9F70()
{
  sub_240BE18B8(&qword_25708D620, type metadata accessor for Proto_BroadcastToLikeLayerParams, (uint64_t)&unk_240F4CCDC);
}

void sub_240CB9F9C()
{
  sub_240BE18B8(&qword_25708D628, type metadata accessor for Proto_BroadcastToStaticLayerParams, (uint64_t)&unk_240F4CC64);
}

void sub_240CB9FC8()
{
  sub_240BE18B8(&qword_25708D630, type metadata accessor for Proto_BroadcastToDynamicLayerParams, (uint64_t)&unk_240F4CBEC);
}

void sub_240CB9FF4()
{
  sub_240BE18B8(&qword_25708D638, type metadata accessor for Proto_FlattenTo2DLayerParams, (uint64_t)&unk_240F4CB74);
}

void sub_240CBA020()
{
  sub_240BE18B8(&qword_25708D640, type metadata accessor for Proto_ReshapeLikeLayerParams, (uint64_t)&unk_240F4CAFC);
}

void sub_240CBA050()
{
  sub_240BE18B8(&qword_25708D648, type metadata accessor for Proto_ReshapeDynamicLayerParams, (uint64_t)&unk_240F4CA84);
}

uint64_t _s25BroadcastToLikeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA088()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_19_13();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s25BroadcastToLikeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA0B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_19_13();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastToLikeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D650);
}

uint64_t *_s27BroadcastToStaticParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_BroadcastToStaticLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s27BroadcastToStaticParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s27BroadcastToStaticParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s27BroadcastToStaticParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s27BroadcastToStaticParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_240CBA5C8(a1, a2, a3, type metadata accessor for Proto_BroadcastToStaticLayerParams);
}

_QWORD *_s27BroadcastToStaticParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s27BroadcastToStaticParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA34C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_14_24();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s27BroadcastToStaticParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_14_24();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastToStaticParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D660);
}

uint64_t sub_240CBA3A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_BroadcastToStaticLayerParams);
}

uint64_t _s28BroadcastToDynamicParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_14();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s28BroadcastToDynamicParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA3E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_14();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastToDynamicParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D670);
}

uint64_t *_s21FlattenTo2DParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_FlattenTo2DLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s21FlattenTo2DParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_QWORD *_s21FlattenTo2DParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s21FlattenTo2DParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s21FlattenTo2DParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  return sub_240CBA5C8(a1, a2, a3, type metadata accessor for Proto_FlattenTo2DLayerParams);
}

_QWORD *sub_240CBA5C8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a4(0) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = OUTLINED_FUNCTION_20_0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  return a1;
}

_QWORD *_s21FlattenTo2DParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21FlattenTo2DParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA6A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_19();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21FlattenTo2DParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA6C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_19();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.FlattenTo2DParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D680);
}

uint64_t sub_240CBA6F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_FlattenTo2DLayerParams);
}

uint64_t _s21ReshapeLikeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_22();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21ReshapeLikeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_22();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReshapeLikeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D690);
}

uint64_t _s24ReshapeDynamicParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA774()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_21();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s24ReshapeDynamicParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBA79C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_21();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReshapeDynamicParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D6A0);
}

uint64_t OUTLINED_FUNCTION_6_21(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3 + *(int *)(a1 + 20), v1);
}

uint64_t OUTLINED_FUNCTION_13_19()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;

  return v3(v0, v2 + *(int *)(v4 + 20), v1);
}

uint64_t OUTLINED_FUNCTION_14_24()
{
  return type metadata accessor for Proto_BroadcastToStaticLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_15_22()
{
  return type metadata accessor for Proto_ReshapeLikeLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_16_19()
{
  return type metadata accessor for Proto_FlattenTo2DLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_17_21()
{
  return type metadata accessor for Proto_ReshapeDynamicLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_18_14()
{
  return type metadata accessor for Proto_BroadcastToDynamicLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_19_13()
{
  return type metadata accessor for Proto_BroadcastToLikeLayerParams(0);
}

BOOL static NeuralNetwork.Layer.ConstantPadParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(float *)a1 != *(float *)a2)
    return 0;
  if ((sub_240BEACE0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) == 0)
    return 0;
  if (*(unsigned __int8 *)(a1 + 16) != *(unsigned __int8 *)(a2 + 16))
    return 0;
  v11 = OUTLINED_FUNCTION_0_17();
  v12 = a1 + *(int *)(v11 + 28);
  v13 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, a2 + *(int *)(v11 + 28), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.constantPad(name:inputNames:outputName:value:amounts:padsToOutputSize:)(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  uint64_t v8;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  *(_DWORD *)v8 = 0;
  *(_QWORD *)(v8 + 8) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v8 + 16) = 0;
  OUTLINED_FUNCTION_0_17();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(float *)v8 = a1;
  NeuralNetwork.Layer.ConstantPadParameters.amounts.setter(a7);
  *(_BYTE *)(v8 + 16) = a8;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t static NeuralNetwork.Layer.Kind.constantPad(value:amounts:padsToOutputSize:)@<X0>(_DWORD *a1@<X8>)
{
  char v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_28(a1);
  *(_QWORD *)(v2 + 8) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v2 + 16) = 0;
  OUTLINED_FUNCTION_0_17();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_3_26();
  *(_BYTE *)(v2 + 16) = v1;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.ConstantPadParameters.init(value:amounts:padsToOutputSize:)(_DWORD *a1@<X8>)
{
  char v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_28(a1);
  *(_QWORD *)(v2 + 8) = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(v2 + 16) = 0;
  OUTLINED_FUNCTION_0_17();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_3_26();
  *(_BYTE *)(v2 + 16) = v1;
}

float NeuralNetwork.Layer.ConstantPadParameters.value.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void NeuralNetwork.Layer.ConstantPadParameters.value.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

float (*NeuralNetwork.Layer.ConstantPadParameters.value.modify(uint64_t a1))(uint64_t a1)
{
  _DWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *v1;
  return sub_240C2D0C4;
}

void NeuralNetwork.Layer.ConstantPadParameters.amounts.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 8);
  v2 = *(_QWORD *)(v1 + 16);
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v3 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
        break;
      v5 = *(_QWORD *)(v6 + 16);
      if (v5 >= *(_QWORD *)(v6 + 24) >> 1)
        sub_240BF080C();
      ++v3;
      *(_QWORD *)(v6 + 16) = v5 + 1;
      *(_QWORD *)(v6 + 8 * v5 + 32) = v4;
      if (v2 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_240CBACBC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.ConstantPadParameters.amounts.setter(v0);
}

void NeuralNetwork.Layer.ConstantPadParameters.amounts.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_240BF0830();
    v5 = 0;
    v6 = v9;
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 < 0)
        break;
      v8 = *(_QWORD *)(v9 + 16);
      if (v8 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_240BF0830();
      ++v5;
      *(_QWORD *)(v9 + 16) = v8 + 1;
      *(_QWORD *)(v9 + 8 * v8 + 32) = v7;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
LABEL_9:
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 8) = v6;
  }
}

void (*NeuralNetwork.Layer.ConstantPadParameters.amounts.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  NeuralNetwork.Layer.ConstantPadParameters.amounts.getter();
  *a1 = v3;
  return sub_240CBAE10;
}

void sub_240CBAE10(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.ConstantPadParameters.amounts.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    NeuralNetwork.Layer.ConstantPadParameters.amounts.setter(*a1);
    OUTLINED_FUNCTION_44();
  }
}

uint64_t NeuralNetwork.Layer.ConstantPadParameters.padsToOutputSize.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 16);
}

uint64_t NeuralNetwork.Layer.ConstantPadParameters.padsToOutputSize.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 16) = result;
  return result;
}

_BYTE *(*NeuralNetwork.Layer.ConstantPadParameters.padsToOutputSize.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 16);
  return sub_240CBAE78;
}

_BYTE *sub_240CBAE78(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 16) = result[8];
  return result;
}

uint64_t NeuralNetwork.Layer.ConstantPadParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  uint64_t v18;

  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v18 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for NeuralNetwork.Layer.ConstantPadParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  sub_240CBB0A4(v0, v1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v10 + 32) = 0x65756C6176;
  *(_QWORD *)(v10 + 40) = 0xE500000000000000;
  v11 = MEMORY[0x24BEE14E8];
  *(_DWORD *)(v10 + 48) = *(_DWORD *)v0;
  *(_QWORD *)(v10 + 72) = v11;
  *(_QWORD *)(v10 + 80) = 0x73746E756F6D61;
  *(_QWORD *)(v10 + 88) = 0xE700000000000000;
  NeuralNetwork.Layer.ConstantPadParameters.amounts.getter();
  v13 = v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 120) = v14;
  *(_QWORD *)(v10 + 128) = 0xD000000000000010;
  *(_QWORD *)(v10 + 136) = 0x8000000240F52CA0;
  v15 = *(_BYTE *)(v0 + 16);
  *(_QWORD *)(v10 + 168) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v10 + 144) = v15;
  v16 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 1, 1, v16);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE43C0], v2);
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ConstantPadParameters()
{
  uint64_t result;

  result = qword_25708D6B8;
  if (!qword_25708D6B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CBB0A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.ConstantPadParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CBB0E8()
{
  return sub_240C30D44(&qword_25708D6B0, type metadata accessor for Proto_ConstantPaddingLayerParams, (uint64_t)&unk_240F4CA0C);
}

void sub_240CBB114(float *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ConstantPadParameters.value.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CBB138(float *a1)
{
  NeuralNetwork.Layer.ConstantPadParameters.value.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CBB158(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.Layer.ConstantPadParameters.amounts.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CBB180(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ConstantPadParameters.padsToOutputSize.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240CBB1A8(unsigned __int8 *a1)
{
  NeuralNetwork.Layer.ConstantPadParameters.padsToOutputSize.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t _s21ConstantPadParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;

  v4 = type metadata accessor for Proto_ConstantPaddingLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
    v6 = *(int *)(v4 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return a1;
}

uint64_t _s21ConstantPadParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t _s21ConstantPadParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t _s21ConstantPadParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s21ConstantPadParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s21ConstantPadParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21ConstantPadParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBB4E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_17();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s21ConstantPadParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBB520(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_17();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CBB554()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ConstantPaddingLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_17()
{
  return type metadata accessor for Proto_ConstantPaddingLayerParams(0);
}

void OUTLINED_FUNCTION_3_26()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;

  *v1 = v2;
  NeuralNetwork.Layer.ConstantPadParameters.amounts.setter(v0);
}

void OUTLINED_FUNCTION_5_28(_DWORD *a1@<X8>)
{
  *a1 = 0;
}

uint64_t TreeEnsembleRegressorConfiguration.treeEnsemble.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_60();
  v6 = type metadata accessor for Proto_TreeEnsembleParameters(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_1_25();
  sub_240CBB6C8(v1 + *(int *)(v10 + 24), v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v6) == 1)
  {
    OUTLINED_FUNCTION_2_26(MEMORY[0x24BEE4AF8]);
    sub_240CBB710(v2);
  }
  else
  {
    sub_240CBB750(v2, (uint64_t)v9);
  }
  return sub_240CBB750((uint64_t)v9, a1);
}

uint64_t sub_240CBB6C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CBB710(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240CBB750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CBB794(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for TreeEnsemble();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C3E408(a1, (uint64_t)v4, v5);
  return TreeEnsembleRegressorConfiguration.treeEnsemble.setter((uint64_t)v4);
}

uint64_t TreeEnsembleRegressorConfiguration.treeEnsemble.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;

  v4 = OUTLINED_FUNCTION_6_22();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  sub_240C3E408(a1, v2, v6);
  v7 = v1 + *(int *)(OUTLINED_FUNCTION_1_25() + 24);
  sub_240CBB710(v7);
  sub_240CBB750(v2, v7);
  __swift_storeEnumTagSinglePayload(v7, 0, 1, v4);
  return sub_240C32310(a1, (uint64_t (*)(_QWORD))type metadata accessor for TreeEnsemble);
}

void (*TreeEnsembleRegressorConfiguration.treeEnsemble.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  void *v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = OUTLINED_FUNCTION_6_22();
  v3[2] = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[3] = malloc(v7);
  v8 = malloc(v7);
  v3[4] = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for TreeEnsemble() - 8) + 64);
  v3[5] = malloc(v9);
  v10 = malloc(v9);
  v3[6] = v10;
  v11 = *(int *)(OUTLINED_FUNCTION_1_25() + 24);
  *((_DWORD *)v3 + 14) = v11;
  sub_240CBB6C8(v1 + v11, (uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    OUTLINED_FUNCTION_2_26(MEMORY[0x24BEE4AF8]);
    sub_240CBB710((uint64_t)v5);
  }
  else
  {
    sub_240CBB750((uint64_t)v5, (uint64_t)v8);
  }
  sub_240CBB750((uint64_t)v8, (uint64_t)v10);
  return sub_240CBB9D4;
}

void sub_240CBB9D4(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 40);
  v4 = *(void **)(*(_QWORD *)a1 + 48);
  v5 = *(void **)(*(_QWORD *)a1 + 24);
  v6 = *(void **)(*(_QWORD *)a1 + 32);
  v7 = *(void **)(*(_QWORD *)a1 + 8);
  v8 = **(_QWORD **)a1 + *(int *)(*(_QWORD *)a1 + 56);
  if ((a2 & 1) != 0)
  {
    sub_240C3E408(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TreeEnsemble);
    sub_240C3E408((uint64_t)v3, (uint64_t)v5, type metadata accessor for Proto_TreeEnsembleParameters);
    sub_240CBB710(v8);
    OUTLINED_FUNCTION_8_23();
    OUTLINED_FUNCTION_32();
    sub_240C32310((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for TreeEnsemble);
  }
  else
  {
    sub_240C3E408(*(_QWORD *)(*(_QWORD *)a1 + 48), (uint64_t)v5, type metadata accessor for Proto_TreeEnsembleParameters);
    sub_240CBB710(v8);
    OUTLINED_FUNCTION_8_23();
    OUTLINED_FUNCTION_32();
  }
  sub_240C32310((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for TreeEnsemble);
  free(v4);
  free(v3);
  free(v6);
  free(v5);
  free(v7);
  free(v2);
}

void TreeEnsembleRegressorConfiguration.postEvaluationFunction.getter(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  unsigned int v2;

  if (v1[8] == 1)
    v2 = 0x1020100u >> (8 * *v1);
  else
    LOBYTE(v2) = 0;
  *a1 = v2;
}

unsigned __int8 *sub_240CBBB08(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return TreeEnsembleRegressorConfiguration.postEvaluationFunction.setter(&v2);
}

unsigned __int8 *TreeEnsembleRegressorConfiguration.postEvaluationFunction.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t *(*TreeEnsembleRegressorConfiguration.postEvaluationFunction.modify(uint64_t a1))(uint64_t *result)
{
  _BYTE *v1;
  unsigned int v2;

  *(_QWORD *)a1 = v1;
  if (v1[8] == 1)
    v2 = 0x1020100u >> (8 * *v1);
  else
    LOBYTE(v2) = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C2B768;
}

uint64_t TreeEnsembleRegressorConfiguration.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  v2 = OUTLINED_FUNCTION_1_25();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v3 = a1 + *(int *)(v2 + 24);
  v4 = OUTLINED_FUNCTION_6_22();
  return OUTLINED_FUNCTION_35(v3, 1, 1, v4);
}

uint64_t TreeEnsembleRegressorConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v11;
  uint64_t v13;

  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_60();
  type metadata accessor for TreeEnsembleRegressorConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  sub_240C3E408(v0, (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240F1D370;
  strcpy((char *)(v9 + 32), "treeEnsemble");
  *(_BYTE *)(v9 + 45) = 0;
  *(_WORD *)(v9 + 46) = -5120;
  *(_QWORD *)(v9 + 72) = type metadata accessor for TreeEnsemble();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v9 + 48));
  TreeEnsembleRegressorConfiguration.treeEnsemble.getter((uint64_t)boxed_opaque_existential_0);
  *(_QWORD *)(v9 + 80) = 0xD000000000000016;
  *(_QWORD *)(v9 + 88) = 0x8000000240F525B0;
  *(_QWORD *)(v9 + 120) = &type metadata for TreeEnsemble.PostEvaluationFunction;
  TreeEnsembleRegressorConfiguration.postEvaluationFunction.getter((_BYTE *)(v9 + 96));
  v11 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for TreeEnsembleRegressorConfiguration()
{
  uint64_t result;

  result = qword_254360440;
  if (!qword_254360440)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240CBBDDC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C6C8;
  if (!qword_25708C6C8)
  {
    v1 = type metadata accessor for Proto_TreeEnsembleRegressor(255);
    result = MEMORY[0x24268C2AC](&unk_240F209D0, v1);
    atomic_store(result, (unint64_t *)&qword_25708C6C8);
  }
  return result;
}

uint64_t sub_240CBBE1C@<X0>(uint64_t a1@<X8>)
{
  return TreeEnsembleRegressorConfiguration.treeEnsemble.getter(a1);
}

void sub_240CBBE40(_BYTE *a1@<X8>)
{
  TreeEnsembleRegressorConfiguration.postEvaluationFunction.getter(a1);
}

uint64_t initializeBufferWithCopyOfBuffer for TreeEnsembleRegressorConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v4 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v17 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(v4 + 20);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(v6 + 24);
    v13 = (_QWORD *)(a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for Proto_TreeEnsembleParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      *v13 = *v14;
      v13[1] = v18;
      v13[2] = v14[2];
      v19 = *(int *)(v15 + 28);
      v20 = (char *)v13 + v19;
      v21 = (char *)v14 + v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11((uint64_t)v20, (uint64_t)v21, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t destroy for TreeEnsembleRegressorConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  v2 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_240F1C930();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(v3, v4);
  v5 = a1 + *(int *)(v2 + 24);
  v6 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v8(v5 + *(int *)(v6 + 28), v4);
  }
  return result;
}

uint64_t initializeWithCopy for TreeEnsembleRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v5 = *(int *)(v4 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v12[1];
    *v11 = *v12;
    v11[1] = v15;
    v11[2] = v12[2];
    v16 = *(int *)(v13 + 28);
    v17 = (char *)v11 + v16;
    v18 = (char *)v12 + v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9((uint64_t)v17, (uint64_t)v18, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithCopy for TreeEnsembleRegressorConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  uint64_t v17;
  char *v18;
  char *v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v6 = *(int *)(v5 + 20);
  v7 = a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 24);
  v11(v7, v8, v9);
  v12 = *(int *)(v5 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)((char *)a2 + v12);
  v15 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!EnumTagSinglePayload)
    {
      *v13 = *v14;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v13[1] = v14[1];
      v13[2] = v14[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v11((uint64_t)v13 + *(int *)(v15 + 28), (uint64_t)v14 + *(int *)(v15 + 28), v9);
      return a1;
    }
    sub_240C32310((uint64_t)v13, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    return a1;
  }
  *v13 = *v14;
  v13[1] = v14[1];
  v13[2] = v14[2];
  v17 = *(int *)(v15 + 28);
  v18 = (char *)v13 + v17;
  v19 = (char *)v14 + v17;
  v20 = *(void (**)(char *, char *, uint64_t))(v10 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v20(v18, v19, v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t initializeWithTake for TreeEnsembleRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)(a1 + v5);
  v7 = (char *)(a2 + v5);
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v11[2] = v12[2];
    v9((char *)v11 + *(int *)(v13 + 28), (char *)v12 + *(int *)(v13 + 28), v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

uint64_t assignWithTake for TreeEnsembleRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v5 = *(int *)(v4 + 20);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      *v12 = *v13;
      swift_bridgeObjectRelease();
      v18 = v13[2];
      v12[1] = v13[1];
      v12[2] = v18;
      swift_bridgeObjectRelease();
      v10((uint64_t)v12 + *(int *)(v14 + 28), (uint64_t)v13 + *(int *)(v14 + 28), v8);
      return a1;
    }
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v12 = *(_OWORD *)v13;
  v12[2] = v13[2];
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))((char *)v12 + *(int *)(v14 + 28), (char *)v13 + *(int *)(v14 + 28), v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t getEnumTagSinglePayload for TreeEnsembleRegressorConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBC5D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_25();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for TreeEnsembleRegressorConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBC614(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_25();
  return OUTLINED_FUNCTION_35(a1, a2, a2, v4);
}

uint64_t sub_240CBC644()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_TreeEnsembleRegressor(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_25()
{
  return type metadata accessor for Proto_TreeEnsembleRegressor(0);
}

uint64_t OUTLINED_FUNCTION_2_26@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_6_22()
{
  return type metadata accessor for Proto_TreeEnsembleParameters(0);
}

uint64_t OUTLINED_FUNCTION_8_23()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240CBB750(v0, v1);
}

void static NeuralNetwork.Layer.scale(name:inputName:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v17 = a1;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v16 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v13 = OUTLINED_FUNCTION_3_8();
  v16 = xmmword_240F1DA30;
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = a3;
  *(_QWORD *)(v13 + 40) = a4;
  v14 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v14 + 16) = v16;
  *(_QWORD *)(v14 + 32) = a5;
  *(_QWORD *)(v14 + 40) = a6;
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v15 = *(int *)(OUTLINED_FUNCTION_0_18() + 20);
  if (qword_25708B808 != -1)
    swift_once();
  *(_QWORD *)&v12[v15] = qword_257090420;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_176();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.scale()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v2 = *(int *)(OUTLINED_FUNCTION_0_18() + 20);
  if (qword_25708B808 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_257090420;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  swift_storeEnumTagMultiPayload();
  return swift_retain();
}

uint64_t NeuralNetwork.Layer.ScaleParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v2 = *(int *)(OUTLINED_FUNCTION_0_18() + 20);
  if (qword_25708B808 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_257090420;
  return swift_retain();
}

void NeuralNetwork.Layer.ScaleParameters.scaleShape.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_18() + 20));
  OUTLINED_FUNCTION_4_1();
  v2 = *(_QWORD *)(v1 + 16);
  if (*(_QWORD *)(v2 + 16))
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_14_25();
    while ((*(_QWORD *)(v2 + 32) & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_31_12();
      if (v3)
        OUTLINED_FUNCTION_9_22();
      OUTLINED_FUNCTION_16_20();
      if (v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    OUTLINED_FUNCTION_7_22();
  }
}

void sub_240CBC9A0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.ScaleParameters.scaleShape.setter(v0);
}

void NeuralNetwork.Layer.ScaleParameters.scaleShape.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    OUTLINED_FUNCTION_1_16();
    v4 = v9;
    while ((*(_QWORD *)(a1 + 32) & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_25_14();
      if (v5)
      {
        OUTLINED_FUNCTION_2_19();
        v4 = v9;
      }
      OUTLINED_FUNCTION_15_23();
      if (v6)
      {
        OUTLINED_FUNCTION_165();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v4 = MEMORY[0x24BEE4AF8];
LABEL_10:
    OUTLINED_FUNCTION_0_18();
    if ((OUTLINED_FUNCTION_30_15() & 1) == 0)
    {
      OUTLINED_FUNCTION_22_11();
      OUTLINED_FUNCTION_192();
      OUTLINED_FUNCTION_176();
      sub_240E8D480();
      *(_QWORD *)(v1 + v3) = v7;
      OUTLINED_FUNCTION_12_14();
    }
    v8 = *(_QWORD *)(v1 + v3);
    OUTLINED_FUNCTION_16_0();
    *(_QWORD *)(v8 + 16) = v4;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_29();
  }
}

uint64_t (*NeuralNetwork.Layer.ScaleParameters.scaleShape.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  NeuralNetwork.Layer.ScaleParameters.scaleShape.getter();
  *a1 = v3;
  return sub_240CBCAE0;
}

uint64_t sub_240CBCAE0(uint64_t *a1, char a2)
{
  return sub_240CBCCF0(a1, a2, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.ScaleParameters.scaleShape.setter);
}

void NeuralNetwork.Layer.ScaleParameters.biasShape.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  char v4;

  v1 = (uint64_t *)(*(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_18() + 20))
                 + OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__shapeBias);
  OUTLINED_FUNCTION_4_1();
  v2 = *v1;
  if (*(_QWORD *)(v2 + 16))
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_14_25();
    while ((*(_QWORD *)(v2 + 32) & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_31_12();
      if (v3)
        OUTLINED_FUNCTION_9_22();
      OUTLINED_FUNCTION_16_20();
      if (v4)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    OUTLINED_FUNCTION_7_22();
  }
}

void sub_240CBCB98()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.ScaleParameters.biasShape.setter(v0);
}

void NeuralNetwork.Layer.ScaleParameters.biasShape.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;

  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    OUTLINED_FUNCTION_1_16();
    v4 = v9;
    while ((*(_QWORD *)(a1 + 32) & 0x8000000000000000) == 0)
    {
      OUTLINED_FUNCTION_25_14();
      if (v5)
      {
        OUTLINED_FUNCTION_2_19();
        v4 = v9;
      }
      OUTLINED_FUNCTION_15_23();
      if (v6)
      {
        OUTLINED_FUNCTION_165();
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v4 = MEMORY[0x24BEE4AF8];
LABEL_10:
    OUTLINED_FUNCTION_0_18();
    if ((OUTLINED_FUNCTION_30_15() & 1) == 0)
    {
      OUTLINED_FUNCTION_22_11();
      OUTLINED_FUNCTION_192();
      OUTLINED_FUNCTION_176();
      sub_240E8D480();
      *(_QWORD *)(v1 + v3) = v7;
      OUTLINED_FUNCTION_12_14();
    }
    v8 = (_QWORD *)(*(_QWORD *)(v1 + v3)
                  + OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__shapeBias);
    OUTLINED_FUNCTION_16_0();
    *v8 = v4;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_5_29();
  }
}

uint64_t (*NeuralNetwork.Layer.ScaleParameters.biasShape.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  NeuralNetwork.Layer.ScaleParameters.biasShape.getter();
  *a1 = v3;
  return sub_240CBCCE4;
}

uint64_t sub_240CBCCE4(uint64_t *a1, char a2)
{
  return sub_240CBCCF0(a1, a2, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.ScaleParameters.biasShape.setter);
}

uint64_t sub_240CBCCF0(uint64_t *a1, char a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) == 0)
    return a3(*a1);
  v4 = swift_bridgeObjectRetain();
  a3(v4);
  return swift_bridgeObjectRelease();
}

void NeuralNetwork.Layer.ScaleParameters.scale.getter(uint64_t a1@<X8>)
{
  sub_240CBCDCC(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__scale, a1);
}

void NeuralNetwork.Layer.ScaleParameters.scale.setter(uint64_t a1)
{
  sub_240CBD034(a1, (void (*)(uint64_t))sub_240E1D4B0, sub_240E1D4D4);
}

void NeuralNetwork.Layer.ScaleParameters.scale.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  v4 = OUTLINED_FUNCTION_0_5(v3);
  v5 = OUTLINED_FUNCTION_26_12((uint64_t)v4);
  a1[2] = v5;
  NeuralNetwork.Layer.ScaleParameters.scale.getter((uint64_t)v5);
  OUTLINED_FUNCTION_156();
}

void sub_240CBCDB4(uint64_t a1, char a2)
{
  sub_240CBD1C4(a1, a2, (void (*)(void *))NeuralNetwork.Layer.ScaleParameters.scale.setter);
}

void NeuralNetwork.Layer.ScaleParameters.bias.getter(uint64_t a1@<X8>)
{
  sub_240CBCDCC(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__bias, a1);
}

void sub_240CBCDCC(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[24];

  v6 = type metadata accessor for Proto_WeightParams(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  OUTLINED_FUNCTION_0();
  v9 = MEMORY[0x24BDAC7A8](v8);
  v11 = &v21[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v9);
  v13 = &v21[-v12];
  v14 = *(_QWORD *)(v2 + *(int *)(OUTLINED_FUNCTION_0_18() + 20));
  v15 = v14 + *a1;
  OUTLINED_FUNCTION_4_1();
  sub_240C283B4(v15, (uint64_t)v13, &qword_25708C1F0);
  v16 = 1;
  LODWORD(v15) = OUTLINED_FUNCTION_24_4((uint64_t)v13);
  sub_240C866DC((uint64_t)v13, &qword_25708C1F0);
  if ((_DWORD)v15 != 1)
  {
    v17 = v14 + *a1;
    OUTLINED_FUNCTION_4_1();
    sub_240C283B4(v17, (uint64_t)v11, &qword_25708C1F0);
    if (OUTLINED_FUNCTION_24_4((uint64_t)v11) == 1)
    {
      *(_QWORD *)v3 = MEMORY[0x24BEE4AF8];
      *(_OWORD *)(v3 + 8) = xmmword_240F1FDE0;
      *(_OWORD *)(v3 + 24) = xmmword_240F1FDE0;
      *(_OWORD *)(v3 + 40) = xmmword_240F1FDE0;
      *(_BYTE *)(v3 + 56) = 0;
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v18 = v3 + *(int *)(v6 + 40);
      v19 = type metadata accessor for Proto_QuantizationParams(0);
      __swift_storeEnumTagSinglePayload(v18, 1, 1, v19);
      sub_240C866DC((uint64_t)v11, &qword_25708C1F0);
    }
    else
    {
      sub_240C2837C((uint64_t)v11, v3, type metadata accessor for Proto_WeightParams);
    }
    sub_240C2837C(v3, a2, type metadata accessor for Proto_WeightParams);
    v16 = 0;
  }
  v20 = type metadata accessor for NeuralNetwork.WeightParameters();
  __swift_storeEnumTagSinglePayload(a2, v16, 1, v20);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240CBCFAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_81();
  sub_240C283B4(a1, v5, &qword_25708CFB0);
  return a5(v5);
}

void NeuralNetwork.Layer.ScaleParameters.bias.setter(uint64_t a1)
{
  sub_240CBD034(a1, (void (*)(uint64_t))sub_240E1D4F8, sub_240E1D51C);
}

void sub_240CBD034(uint64_t a1, void (*a2)(uint64_t), void (*a3)(void))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;

  type metadata accessor for Proto_WeightParams(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  v10 = type metadata accessor for NeuralNetwork.WeightParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v14 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, v4, &qword_25708CFB0);
  if (__swift_getEnumTagSinglePayload(v4, 1, v10) == 1)
  {
    sub_240C866DC(v4, &qword_25708CFB0);
    a3();
    sub_240C866DC(a1, &qword_25708CFB0);
  }
  else
  {
    sub_240C2837C(v4, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
    sub_240CBD458((uint64_t)v13, v3);
    a2(v3);
    sub_240C866DC(a1, &qword_25708CFB0);
    sub_240C412B4((uint64_t)v13);
  }
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.ScaleParameters.bias.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  void *v5;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  v4 = OUTLINED_FUNCTION_0_5(v3);
  v5 = OUTLINED_FUNCTION_26_12((uint64_t)v4);
  a1[2] = v5;
  NeuralNetwork.Layer.ScaleParameters.bias.getter((uint64_t)v5);
  OUTLINED_FUNCTION_156();
}

void sub_240CBD1B8(uint64_t a1, char a2)
{
  sub_240CBD1C4(a1, a2, (void (*)(void *))NeuralNetwork.Layer.ScaleParameters.bias.setter);
}

void sub_240CBD1C4(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;

  v4 = *(void **)(a1 + 8);
  v5 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240C283B4(*(_QWORD *)(a1 + 16), (uint64_t)v4, &qword_25708CFB0);
    a3(v4);
    sub_240C866DC((uint64_t)v5, &qword_25708CFB0);
  }
  else
  {
    a3(*(void **)(a1 + 16));
  }
  free(v5);
  free(v4);
}

uint64_t NeuralNetwork.Layer.ScaleParameters.hasBias.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(*(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_0_18() + 20))
                         + OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__hasBias_p);
  OUTLINED_FUNCTION_4_1();
  return *v1;
}

uint64_t NeuralNetwork.Layer.ScaleParameters.hasBias.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t result;

  v3 = *(int *)(OUTLINED_FUNCTION_0_18() + 20);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_22_11();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_176();
    sub_240E8D480();
    *(_QWORD *)(v1 + v3) = v4;
    OUTLINED_FUNCTION_12_14();
  }
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v3)
               + OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__hasBias_p);
  result = OUTLINED_FUNCTION_16_0();
  *v5 = a1 & 1;
  return result;
}

void NeuralNetwork.Layer.ScaleParameters.hasBias.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(OUTLINED_FUNCTION_0_18() + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__hasBias_p);
  OUTLINED_FUNCTION_4_1();
  *((_BYTE *)v3 + 84) = *v5;
  OUTLINED_FUNCTION_156();
}

void sub_240CBD390(uint64_t *a1, char a2)
{
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;

  v3 = *a1;
  v4 = *(_BYTE *)(*a1 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    v6 = *(int *)(v3 + 80);
    v7 = *(_QWORD *)(v3 + 72);
    OUTLINED_FUNCTION_22_11();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_176();
    sub_240E8D480();
    *(_QWORD *)(v7 + v6) = v8;
    OUTLINED_FUNCTION_12_14();
  }
LABEL_4:
  v9 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
               + OBJC_IVAR____TtCV20MLModelSpecification22Proto_ScaleLayerParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__hasBias_p);
  OUTLINED_FUNCTION_16_0();
  *v9 = v4;
  free((void *)v3);
}

uint64_t sub_240CBD458(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_WeightParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_240CBD4A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D6C8;
  if (!qword_25708D6C8)
  {
    v1 = type metadata accessor for Proto_ScaleLayerParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4C994, v1);
    atomic_store(result, (unint64_t *)&qword_25708D6C8);
  }
  return result;
}

void sub_240CBD4E0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.Layer.ScaleParameters.scaleShape.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CBD508(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.Layer.ScaleParameters.biasShape.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240CBD530(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.ScaleParameters.scale.getter(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CBD54C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240CBCFAC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.ScaleParameters.scale.setter);
}

void sub_240CBD568(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.ScaleParameters.bias.getter(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CBD584(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_240CBCFAC(a1, a2, a3, a4, (uint64_t (*)(uint64_t))NeuralNetwork.Layer.ScaleParameters.bias.setter);
}

void sub_240CBD5A0(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ScaleParameters.hasBias.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240CBD5C8(char *a1)
{
  NeuralNetwork.Layer.ScaleParameters.hasBias.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s15ScaleParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Proto_ScaleLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t _s15ScaleParametersVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Proto_ScaleLayerParams(0);
  return swift_release();
}

uint64_t _s15ScaleParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for Proto_ScaleLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t _s15ScaleParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for Proto_ScaleLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s15ScaleParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for Proto_ScaleLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t _s15ScaleParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for Proto_ScaleLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t _s15ScaleParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBD848(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_18();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s15ScaleParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBD884(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_18();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ScaleParameters()
{
  uint64_t result;

  result = qword_25708D6D0;
  if (!qword_25708D6D0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CBD8F0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ScaleLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_18()
{
  return type metadata accessor for Proto_ScaleLayerParams(0);
}

void OUTLINED_FUNCTION_9_22()
{
  sub_240BF080C();
}

void OUTLINED_FUNCTION_14_25()
{
  sub_240BF080C();
}

void OUTLINED_FUNCTION_15_23()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 8 * v3 + 32) = v2;
}

void OUTLINED_FUNCTION_16_20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 8 * v3 + 32) = v2;
}

uint64_t OUTLINED_FUNCTION_22_11()
{
  return type metadata accessor for Proto_ScaleLayerParams._StorageClass(0);
}

void *OUTLINED_FUNCTION_26_12(uint64_t a1)
{
  uint64_t v1;
  size_t v2;

  *(_QWORD *)(v1 + 8) = a1;
  return malloc(v2);
}

uint64_t OUTLINED_FUNCTION_30_15()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

BOOL static NeuralNetwork.Layer.StackParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 != *(_QWORD *)a2)
    return 0;
  v11 = OUTLINED_FUNCTION_0_19();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.stack(name:inputNames:outputName:axis:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_1();
  v12 = (_QWORD *)(v11 - v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a5;
  *v12 = 0;
  OUTLINED_FUNCTION_0_19();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v12 = a6;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.stack(axis:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.StackParameters.init(axis:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = 0;
  OUTLINED_FUNCTION_0_19();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.StackParameters.axis.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NeuralNetwork.Layer.StackParameters.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.StackParameters.axis.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C3E138;
}

uint64_t NeuralNetwork.Layer.StackParameters.hash(into:)()
{
  OUTLINED_FUNCTION_0_19();
  sub_240C30D44(&qword_25708D6E0, type metadata accessor for Proto_StackLayerParams, (uint64_t)&unk_240F4FC1C);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.StackParameters.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_0_19();
  sub_240C30D44(&qword_25708D6E0, type metadata accessor for Proto_StackLayerParams, (uint64_t)&unk_240F4FC1C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240CBDDC0()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_StackLayerParams(0);
  sub_240C30D44(&qword_25708D6E0, type metadata accessor for Proto_StackLayerParams, (uint64_t)&unk_240F4FC1C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void NeuralNetwork.Layer.StackParameters.customMirror.getter()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  type metadata accessor for NeuralNetwork.Layer.StackParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240CBDFC0((uint64_t)v1, v13 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = 1936291937;
  *(_QWORD *)(v14 + 40) = 0xE400000000000000;
  v15 = *v1;
  *(_QWORD *)(v14 + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v14 + 48) = v15;
  v16 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.StackParameters()
{
  uint64_t result;

  result = qword_25708D6F8;
  if (!qword_25708D6F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CBDFC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.StackParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CBE004()
{
  return sub_240C30D44(&qword_25708D6E8, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.StackParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.StackParameters);
}

uint64_t sub_240CBE030()
{
  return sub_240C30D44(&qword_25708D6F0, type metadata accessor for Proto_StackLayerParams, (uint64_t)&unk_240F4C91C);
}

void sub_240CBE060(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.StackParameters.axis.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CBE084(uint64_t *a1)
{
  NeuralNetwork.Layer.StackParameters.axis.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s15StackParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_StackLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s15StackParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_QWORD *_s15StackParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s15StackParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s15StackParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s15StackParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s15StackParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBE328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_19();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s15StackParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBE364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_19();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CBE398()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_StackLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_19()
{
  return type metadata accessor for Proto_StackLayerParams(0);
}

BOOL static NeuralNetwork.Layer.GatherParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_240CBE424(a1, a2, type metadata accessor for Proto_GatherLayerParams);
}

BOOL static NeuralNetwork.Layer.GatherAlongAxisParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_240CBE424(a1, a2, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

BOOL sub_240CBE424(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v6 = OUTLINED_FUNCTION_20_0();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v19 - v11;
  if (*a1 != *(_QWORD *)a2)
    return 0;
  v13 = a3(0);
  v14 = (char *)a1 + *(int *)(v13 + 20);
  v15 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v15(v12, v14, v6);
  v15(v10, &a2[*(int *)(v13 + 20)], v6);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_240F1CC90();
  v17 = *(void (**)(char *, uint64_t))(v7 + 8);
  v17(v10, v6);
  v17(v12, v6);
  return (v16 & 1) != 0;
}

void static NeuralNetwork.Layer.gather(name:inputNames:outputName:axis:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_240CBE660(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for Proto_GatherLayerParams);
}

uint64_t static NeuralNetwork.Layer.Kind.gather(axis:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240CBE768(a1, type metadata accessor for Proto_GatherLayerParams, a2);
}

void static NeuralNetwork.Layer.gatherND(name:inputNames:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_10_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v8 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v8 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v8 + 32) = a4;
  *(_QWORD *)(v8 + 40) = a5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.gatherAlong(name:inputNames:outputName:axis:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_240CBE660(a1, a2, a3, a4, a5, a6, (void (*)(_QWORD))type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBE660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, void (*a7)(_QWORD))
{
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v13 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = a4;
  *(_QWORD *)(v13 + 40) = a5;
  *v7 = 0;
  a7(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v7 = a6;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.gatherAlong(axis:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_240CBE768(a1, type metadata accessor for Proto_GatherAlongAxisLayerParams, a2);
}

uint64_t sub_240CBE768@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  OUTLINED_FUNCTION_174_0(a1, a2);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.GatherParameters.init(axis:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240CBE7D4(a1, type metadata accessor for Proto_GatherLayerParams, a2);
}

void NeuralNetwork.Layer.GatherAlongAxisParameters.init(axis:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  sub_240CBE7D4(a1, type metadata accessor for Proto_GatherAlongAxisLayerParams, a2);
}

void sub_240CBE7D4(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t *a3@<X8>)
{
  *a3 = 0;
  OUTLINED_FUNCTION_174_0(a1, a2);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.GatherParameters.axis.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NeuralNetwork.Layer.GatherParameters.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.GatherParameters.axis.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C3E138;
}

uint64_t NeuralNetwork.Layer.GatherParameters.hash(into:)(uint64_t a1)
{
  return sub_240CBEA78(a1, type metadata accessor for Proto_GatherLayerParams);
}

void NeuralNetwork.Layer.GatherParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_GatherLayerParams);
}

void sub_240CBE870(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_GatherLayerParams);
}

void NeuralNetwork.Layer.GatherParameters.customMirror.getter()
{
  sub_240CBEB40(type metadata accessor for NeuralNetwork.Layer.GatherParameters);
}

uint64_t NeuralNetwork.Layer.GatherNDParameters.hash(into:)(uint64_t a1)
{
  return sub_240CBEA78(a1, type metadata accessor for Proto_GatherNDLayerParams);
}

void NeuralNetwork.Layer.GatherNDParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_GatherNDLayerParams);
}

void sub_240CBE8E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_GatherNDLayerParams);
}

uint64_t NeuralNetwork.Layer.GatherNDParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(_QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = OUTLINED_FUNCTION_15_6();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  type metadata accessor for NeuralNetwork.Layer.GatherNDParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240C3E408(v1, v13 - v12, v14);
  v15 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v10, v16, v17, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  return sub_240F1CF9C();
}

uint64_t (*NeuralNetwork.Layer.GatherAlongAxisParameters.axis.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C8C828;
}

uint64_t NeuralNetwork.Layer.GatherAlongAxisParameters.hash(into:)(uint64_t a1)
{
  return sub_240CBEA78(a1, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

uint64_t sub_240CBEA78(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  OUTLINED_FUNCTION_174_0(a1, a2);
  OUTLINED_FUNCTION_2_6();
  return sub_240F1CC54();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.GatherParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D750);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.GatherNDParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D760);
}

void NeuralNetwork.Layer.GatherAlongAxisParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBEB14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void NeuralNetwork.Layer.GatherAlongAxisParameters.customMirror.getter()
{
  sub_240CBEB40(type metadata accessor for NeuralNetwork.Layer.GatherAlongAxisParameters);
}

void sub_240CBEB40(uint64_t (*a1)(_QWORD))
{
  uint64_t *v1;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v3 = v1;
  v4 = OUTLINED_FUNCTION_15_6();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_1();
  v12 = v11 - v10;
  v13 = a1(0);
  MEMORY[0x24BDAC7A8](v13);
  sub_240C3E408((uint64_t)v3, (uint64_t)&v20 - v14, a1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v15 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = 1936291937;
  *(_QWORD *)(v15 + 40) = 0xE400000000000000;
  v16 = *v3;
  *(_QWORD *)(v15 + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v15 + 48) = v16;
  v17 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v12, v18, v19, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.GatherAlongAxisParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D770);
}

uint64_t sub_240CBECB0()
{
  return sub_240C30D44(&qword_25708D720, type metadata accessor for NeuralNetwork.Layer.GatherParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.GatherParameters);
}

uint64_t sub_240CBECDC()
{
  return sub_240C30D44(&qword_25708D728, type metadata accessor for Proto_GatherLayerParams, (uint64_t)&unk_240F4C8A4);
}

uint64_t sub_240CBED08()
{
  return sub_240C30D44(&qword_25708D730, type metadata accessor for NeuralNetwork.Layer.GatherNDParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.GatherNDParameters);
}

uint64_t sub_240CBED34()
{
  return sub_240C30D44(&qword_25708D738, type metadata accessor for Proto_GatherNDLayerParams, (uint64_t)&unk_240F4C82C);
}

uint64_t sub_240CBED60()
{
  return sub_240C30D44(&qword_25708D740, type metadata accessor for NeuralNetwork.Layer.GatherAlongAxisParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.GatherAlongAxisParameters);
}

uint64_t sub_240CBED8C()
{
  return sub_240C30D44(&qword_25708D748, type metadata accessor for Proto_GatherAlongAxisLayerParams, (uint64_t)&unk_240F4C7B4);
}

void sub_240CBEDBC(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.GatherParameters.axis.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CBEDE0(uint64_t *a1)
{
  NeuralNetwork.Layer.GatherParameters.axis.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void _s16GatherParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBEF00(a1, a2, a3, type metadata accessor for Proto_GatherLayerParams);
}

uint64_t _s16GatherParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_GatherLayerParams);
}

void _s16GatherParametersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBEFA0(a1, a2, a3, type metadata accessor for Proto_GatherLayerParams);
}

void _s16GatherParametersVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBEFE0(a1, a2, a3, type metadata accessor for Proto_GatherLayerParams);
}

void _s16GatherParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBF020(a1, a2, a3, type metadata accessor for Proto_GatherLayerParams);
}

void _s16GatherParametersVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBF060(a1, a2, a3, type metadata accessor for Proto_GatherLayerParams);
}

uint64_t _s16GatherParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBEE54()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_22();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s16GatherParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBEE7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_17_22();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CBEE98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_GatherLayerParams);
}

uint64_t _s18GatherNDParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBEEB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_21();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s18GatherNDParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBEED8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_16_21();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

void _s25GatherAlongAxisParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBEF00(a1, a2, a3, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBEF00(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a4(0);
  if ((*(_DWORD *)(*(_QWORD *)(v6 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = OUTLINED_FUNCTION_20_0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s25GatherAlongAxisParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240CA8F34(a1, a2, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void _s25GatherAlongAxisParametersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBEFA0(a1, a2, a3, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBEFA0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_0_20(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s25GatherAlongAxisParametersVwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBEFE0(a1, a2, a3, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBEFE0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_0_20(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s25GatherAlongAxisParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBF020(a1, a2, a3, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBF020(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_0_20(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s25GatherAlongAxisParametersVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CBF060(a1, a2, a3, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

void sub_240CBF060(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_0_20(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t _s25GatherAlongAxisParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBF0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_18_15();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s25GatherAlongAxisParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBF0C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_18_15();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CBF0E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_GatherAlongAxisLayerParams);
}

uint64_t OUTLINED_FUNCTION_0_20(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  *a1 = *a2;
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_16_21()
{
  return type metadata accessor for Proto_GatherNDLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_17_22()
{
  return type metadata accessor for Proto_GatherLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_18_15()
{
  return type metadata accessor for Proto_GatherAlongAxisLayerParams(0);
}

uint64_t sub_240CBF14C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240BF5654(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

ValueMetadata *type metadata accessor for Proto_CategoricalMapping.OneOf_ValueOnUnknown()
{
  return &type metadata for Proto_CategoricalMapping.OneOf_ValueOnUnknown;
}

uint64_t *sub_240CBF1A4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  int v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = v18[16];
    if (v19 == 255)
    {
      *(_OWORD *)v17 = *(_OWORD *)v18;
      v17[16] = v18[16];
    }
    else
    {
      v20 = v19 & 1;
      v21 = *(_QWORD *)v18;
      v22 = *((_QWORD *)v18 + 1);
      sub_240BF5654(*(_QWORD *)v18, v22, v19 & 1);
      *(_QWORD *)v17 = v21;
      *((_QWORD *)v17 + 1) = v22;
      v17[16] = v20;
    }
    v23 = *(int *)(a3 + 24);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FFA0);
}

uint64_t sub_240CBF3B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;

  v4 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Proto_Int64ToStringMap(0);
    else
      v6 = type metadata accessor for Proto_StringToInt64Map(0);
    v7 = a1 + *(int *)(v6 + 20);
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = *(unsigned __int8 *)(v9 + 16);
  if (v10 != 255)
    sub_240BF6B24(*(_QWORD *)v9, *(_QWORD *)(v9 + 8), v10 & 1);
  v11 = a1 + *(int *)(a2 + 24);
  v12 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
}

_QWORD *sub_240CBF490(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  int v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v6 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v9 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v9 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = v16[16];
  if (v17 == 255)
  {
    *(_OWORD *)v15 = *(_OWORD *)v16;
    v15[16] = v16[16];
  }
  else
  {
    v18 = v17 & 1;
    v19 = *(_QWORD *)v16;
    v20 = *((_QWORD *)v16 + 1);
    sub_240BF5654(*(_QWORD *)v16, v20, v17 & 1);
    *(_QWORD *)v15 = v19;
    *((_QWORD *)v15 + 1) = v20;
    v15[16] = v18;
  }
  v21 = *(int *)(a3 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  return a1;
}

_QWORD *sub_240CBF65C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  int v25;
  int v26;
  char v27;
  __int128 v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;

  v6 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
      else
        v10 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    v16 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v16 == 1)
      v17 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v17 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_240F1C930();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v22 = *(int *)(a3 + 20);
  v23 = (uint64_t)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *((unsigned __int8 *)a1 + v22 + 16);
  v26 = *((unsigned __int8 *)a2 + v22 + 16);
  if (v25 == 255)
  {
    if (v26 == 255)
    {
      v28 = *(_OWORD *)v24;
      *(_BYTE *)(v23 + 16) = v24[16];
      *(_OWORD *)v23 = v28;
    }
    else
    {
      v35 = v26 & 1;
      v36 = *(_QWORD *)v24;
      v37 = *((_QWORD *)v24 + 1);
      sub_240BF5654(v36, v37, v26 & 1);
      *(_QWORD *)v23 = v36;
      *(_QWORD *)(v23 + 8) = v37;
      *(_BYTE *)(v23 + 16) = v35;
    }
  }
  else if (v26 == 255)
  {
    sub_240CBF98C(v23);
    v27 = v24[16];
    *(_OWORD *)v23 = *(_OWORD *)v24;
    *(_BYTE *)(v23 + 16) = v27;
  }
  else
  {
    v29 = v26 & 1;
    v30 = *(_QWORD *)v24;
    v31 = *((_QWORD *)v24 + 1);
    sub_240BF5654(v30, v31, v26 & 1);
    v32 = *(_QWORD *)v23;
    v33 = *(_QWORD *)(v23 + 8);
    v34 = *(_BYTE *)(v23 + 16);
    *(_QWORD *)v23 = v30;
    *(_QWORD *)(v23 + 8) = v31;
    *(_BYTE *)(v23 + 16) = v29;
    sub_240BF6B24(v32, v33, v34);
  }
  v38 = *(int *)(a3 + 24);
  v39 = (char *)a1 + v38;
  v40 = (char *)a2 + v38;
  v41 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 24))(v39, v40, v41);
  return a1;
}

uint64_t sub_240CBF98C(uint64_t a1)
{
  destroy for Proto_KNearestNeighborsClassifier.OneOf_DefaultClassLabel(a1);
  return a1;
}

_QWORD *sub_240CBF9B8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v9 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v9 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = *(int *)(a3 + 24);
  v15 = (char *)a1 + v13;
  v16 = (char *)a2 + v13;
  *(_OWORD *)v15 = *(_OWORD *)v16;
  v15[16] = v16[16];
  v17 = (char *)a1 + v14;
  v18 = (char *)a2 + v14;
  v19 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *sub_240CBFB28(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
      else
        v10 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    v15 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v15 == 1)
      v16 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v16 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = *(int *)(a3 + 20);
  v21 = (uint64_t)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = *((unsigned __int8 *)a1 + v20 + 16);
  if (v23 != 255)
  {
    v24 = v22[16];
    if (v24 != 255)
    {
      v25 = *(_QWORD *)v21;
      v26 = *(_QWORD *)(v21 + 8);
      *(_OWORD *)v21 = *(_OWORD *)v22;
      *(_BYTE *)(v21 + 16) = v24 & 1;
      sub_240BF6B24(v25, v26, v23 & 1);
      goto LABEL_20;
    }
    sub_240CBF98C(v21);
  }
  *(_OWORD *)v21 = *(_OWORD *)v22;
  *(_BYTE *)(v21 + 16) = v22[16];
LABEL_20:
  v27 = *(int *)(a3 + 24);
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 40))(v28, v29, v30);
  return a1;
}

uint64_t sub_240CBFDC8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBFDD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 253)
  {
    v7 = OUTLINED_FUNCTION_20_0();
    v8 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 <= 1)
    return 0;
  else
    return v9 ^ 0xFF;
}

uint64_t sub_240CBFE6C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CBFE78(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 253)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = ~(_BYTE)a2;
      return result;
    }
    v9 = OUTLINED_FUNCTION_20_0();
    v10 = a1 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for Proto_CategoricalMapping(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FFB8);
}

void sub_240CBFF24()
{
  unint64_t v0;
  unint64_t v1;

  sub_240CBFFB0();
  if (v0 <= 0x3F)
  {
    sub_240F1C930();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240CBFFB0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25435FFB0)
  {
    type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(255);
    v0 = sub_240F1CD98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25435FFB0);
  }
}

uint64_t *sub_240CC0004(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240CC012C(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    v3 = type metadata accessor for Proto_Int64ToStringMap(0);
  else
    v3 = type metadata accessor for Proto_StringToInt64Map(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240CC0194(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_240CC0288(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_240CC0394(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_240CC0460(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_Int64ToStringMap(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_StringToInt64Map(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240CC0544()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Proto_StringToInt64Map(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_Int64ToStringMap(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_240CC05C4(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t (*v24)(uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  type metadata accessor for Proto_Int64ToStringMap(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v7 = v6 - v5;
  type metadata accessor for Proto_StringToInt64Map(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_15_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_11_3();
  v12 = v10 - v11;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (uint64_t *)((char *)&v26 - v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D7C8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_24_1();
  v19 = v18 - v17;
  v21 = v18 - v17 + *(int *)(v20 + 48);
  sub_240CC2130(a1, v18 - v17);
  sub_240CC2130(v27, v21);
  if (OUTLINED_FUNCTION_12_24() == 1)
  {
    sub_240CC2130(v19, v12);
    if (OUTLINED_FUNCTION_12_24() == 1)
    {
      sub_240C2837C(v21, v7, type metadata accessor for Proto_Int64ToStringMap);
      sub_240DB1E10();
      if ((v22 & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2(v7);
      v23 = v12;
LABEL_14:
      OUTLINED_FUNCTION_3_2(v23);
      sub_240BE10B8(v19, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
      goto LABEL_15;
    }
    v24 = type metadata accessor for Proto_Int64ToStringMap;
    v25 = v12;
  }
  else
  {
    sub_240CC2130(v19, (uint64_t)v15);
    if (OUTLINED_FUNCTION_12_24() != 1)
    {
      sub_240C2837C(v21, (uint64_t)v2, type metadata accessor for Proto_StringToInt64Map);
      if ((sub_240DB0498(*v15, *v2) & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v2);
      v23 = (uint64_t)v15;
      goto LABEL_14;
    }
    v24 = type metadata accessor for Proto_StringToInt64Map;
    v25 = (uint64_t)v15;
  }
  sub_240BE10B8(v25, v24);
  sub_240BE0B68(v19, &qword_25708D7C8);
LABEL_15:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240CC08B4(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, unsigned __int8 a6)
{
  if ((a3 & 1) != 0)
    return a6 & (a1 == a4);
  if ((a6 & 1) != 0)
    return 0;
  if (a1 == a4 && a2 == a5)
    return 1;
  else
    return sub_240F1CEDC();
}

uint64_t sub_240CC08FC(uint64_t a1, uint64_t a2)
{
  return sub_240CC08B4(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_240CC0918@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_15_24();
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  v3 = a1 + *(int *)(type metadata accessor for Proto_CategoricalMapping(0) + 20);
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 16) = -1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240CC0974()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9260);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9260);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1E9E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "stringToInt64Map";
  *(_QWORD *)(v7 + 8) = 16;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "int64ToStringMap";
  *(_QWORD *)(v11 + 8) = 16;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 101;
  *(_QWORD *)v13 = "strValue";
  *((_QWORD *)v13 + 1) = 8;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 102;
  *(_QWORD *)v15 = "int64Value";
  *((_QWORD *)v15 + 1) = 10;
  v15[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240CC0B34()
{
  uint64_t v0;

  if (qword_25708AEF8 != -1)
    swift_once();
  v0 = sub_240F1CC30();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2570F9260);
}

void sub_240CC0B7C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  while (1)
  {
    v1 = sub_240F1C990();
    if (v0 || (v2 & 1) != 0)
      break;
    switch(v1)
    {
      case 102:
        OUTLINED_FUNCTION_6_7();
        sub_240CC14D8();
        break;
      case 2:
        v7 = OUTLINED_FUNCTION_17_2();
        sub_240CC1014(v7, v8, v9, v10);
        break;
      case 101:
        v11 = OUTLINED_FUNCTION_6_7();
        sub_240CC1400(v11, v12);
        break;
      case 1:
        v3 = OUTLINED_FUNCTION_17_2();
        sub_240CC0C28(v3, v4, v5, v6);
        break;
    }
  }
}

void sub_240CC0C28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_StringToInt64Map(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D7B8);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDC0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDC0);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    }
    else
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708D7B8);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_StringToInt64Map);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_StringToInt64Map);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25708D7A8, type metadata accessor for Proto_StringToInt64Map, (uint64_t)&unk_240F2B3F4);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708D7B8);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708D7B8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708D7B8);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_StringToInt64Map);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708D7B8);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDC0);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_StringToInt64Map);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_240CC1014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_Int64ToStringMap(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D7C0);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDC0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDC0);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708D7C0);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_Int64ToStringMap);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_Int64ToStringMap);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25708D7B0, type metadata accessor for Proto_Int64ToStringMap, (uint64_t)&unk_240F2B28C);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708D7C0);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708D7C0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708D7C0);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_Int64ToStringMap);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708D7C0);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDC0);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_Int64ToStringMap);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

uint64_t sub_240CC1400(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  unsigned __int8 v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_240F1CA8C();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v9)
  {
    v5 = a2 + *(int *)(type metadata accessor for Proto_CategoricalMapping(0) + 20);
    if (*(unsigned __int8 *)(v5 + 16) == 255)
    {
      v6 = -1;
    }
    else
    {
      sub_240F1C99C();
      v6 = *(_BYTE *)(v5 + 16);
    }
    v7 = *(_QWORD *)v5;
    v8 = *(_QWORD *)(v5 + 8);
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = v9;
    *(_BYTE *)(v5 + 16) = 0;
    return sub_240C73B08(v7, v8, v6);
  }
  return result;
}

uint64_t sub_240CC14D8()
{
  return sub_240F1CA38();
}

void sub_240CC15A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  sub_240C283B4(v0, v4 - v3, &qword_25708BDC0);
  v6 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
    goto LABEL_10;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = OUTLINED_FUNCTION_7_3();
    sub_240CC1880(v7);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_7_3();
    sub_240CC16E8(v8);
  }
  sub_240BE10B8(v5, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
  if (!v1)
  {
LABEL_10:
    if (*(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for Proto_CategoricalMapping(0) + 20) + 16) == 255)
      goto LABEL_11;
    v9 = OUTLINED_FUNCTION_7_3();
    if ((v10 & 1) != 0)
      sub_240CC1AC0(v9);
    else
      sub_240CC1A18(v9);
    if (!v1)
LABEL_11:
      sub_240F1C918();
  }
}

void sub_240CC16E8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_StringToInt64Map(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDC0);
  v8 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDC0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_StringToInt64Map);
      sub_240BE18B8(&qword_25708D7A8, type metadata accessor for Proto_StringToInt64Map, (uint64_t)&unk_240F2B3F4);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_StringToInt64Map);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
  }
  __break(1u);
}

void sub_240CC1880(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64ToStringMap(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDC0);
  v8 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDC0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64ToStringMap);
      sub_240BE18B8(&qword_25708D7B0, type metadata accessor for Proto_Int64ToStringMap, (uint64_t)&unk_240F2B28C);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64ToStringMap);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
  }
  __break(1u);
}

uint64_t sub_240CC1A18(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  unsigned __int8 v4;
  uint64_t v5;
  uint64_t v6;

  result = type metadata accessor for Proto_CategoricalMapping(0);
  v3 = a1 + *(int *)(result + 20);
  v4 = *(_BYTE *)(v3 + 16);
  if ((v4 & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    v6 = *(_QWORD *)v3;
    v5 = *(_QWORD *)(v3 + 8);
    sub_240BF5654(*(_QWORD *)v3, v5, 0);
    sub_240F1CBD0();
    return sub_240C73B08(v6, v5, v4);
  }
  return result;
}

uint64_t sub_240CC1AC0(uint64_t a1)
{
  uint64_t result;
  int v3;

  result = type metadata accessor for Proto_CategoricalMapping(0);
  v3 = *(unsigned __int8 *)(a1 + *(int *)(result + 20) + 16);
  if (v3 != 255 && (v3 & 1) != 0)
    return sub_240F1CBAC();
  __break(1u);
  return result;
}

void _s20MLModelSpecification31CategoricalMappingConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  int v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  void (*v39)(char *, uint64_t, uint64_t);
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  void (*v44)(uint64_t, uint64_t);
  uint64_t v45;
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;

  v46 = OUTLINED_FUNCTION_20_0();
  v49 = *(_QWORD *)(v46 - 8);
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_11_3();
  v48 = (char *)(v5 - v6);
  MEMORY[0x24BDAC7A8](v7);
  v47 = (char *)&v45 - v8;
  OUTLINED_FUNCTION_15_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_10_3();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D7D0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_11_3();
  v18 = v16 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v45 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v45 - v23;
  v50 = a1;
  OUTLINED_FUNCTION_15_9(a1, (uint64_t)&v45 - v23);
  v25 = a2;
  OUTLINED_FUNCTION_15_9(a2, (uint64_t)v22);
  v26 = v14 + *(int *)(v10 + 48);
  OUTLINED_FUNCTION_15_9((uint64_t)v24, v14);
  OUTLINED_FUNCTION_15_9((uint64_t)v22, v26);
  OUTLINED_FUNCTION_8_2(v14);
  if (!v27)
  {
    sub_240C283B4(v14, v18, &qword_25708BDC0);
    OUTLINED_FUNCTION_8_2(v26);
    if (!v27)
    {
      sub_240C2837C(v26, v2, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
      sub_240CC05C4(v18, v2);
      v29 = v28;
      sub_240BE10B8(v2, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
      OUTLINED_FUNCTION_15_2((uint64_t)v22);
      OUTLINED_FUNCTION_15_2((uint64_t)v24);
      sub_240BE10B8(v18, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
      OUTLINED_FUNCTION_15_2(v14);
      if ((v29 & 1) == 0)
        goto LABEL_10;
      goto LABEL_12;
    }
    sub_240BE0B68((uint64_t)v22, &qword_25708BDC0);
    sub_240BE0B68((uint64_t)v24, &qword_25708BDC0);
    sub_240BE10B8(v18, type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType);
LABEL_9:
    sub_240BE0B68(v14, &qword_25708D7D0);
    goto LABEL_10;
  }
  sub_240BE0B68((uint64_t)v22, &qword_25708BDC0);
  sub_240BE0B68((uint64_t)v24, &qword_25708BDC0);
  OUTLINED_FUNCTION_8_2(v26);
  if (!v27)
    goto LABEL_9;
  sub_240BE0B68(v14, &qword_25708BDC0);
LABEL_12:
  v30 = type metadata accessor for Proto_CategoricalMapping(0);
  v31 = *(int *)(v30 + 20);
  v32 = v50;
  v33 = (uint64_t *)(v50 + v31);
  v34 = *(unsigned __int8 *)(v50 + v31 + 16);
  v35 = v25 + v31;
  v36 = *(unsigned __int8 *)(v35 + 16);
  if (v34 == 255)
  {
    if (v36 == 255)
    {
LABEL_17:
      v37 = v32 + *(int *)(v30 + 24);
      v38 = v49;
      v39 = *(void (**)(char *, uint64_t, uint64_t))(v49 + 16);
      v40 = v46;
      v41 = v47;
      v39(v47, v37, v46);
      v42 = v25 + *(int *)(v30 + 24);
      v43 = v48;
      v39(v48, v42, v40);
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_240F1CC90();
      v44 = *(void (**)(uint64_t, uint64_t))(v38 + 8);
      v44((uint64_t)v43, v40);
      v44((uint64_t)v41, v40);
    }
  }
  else if (v36 != 255 && (sub_240CC08B4(*v33, v33[1], v34 & 1, *(_QWORD *)v35, *(_QWORD *)(v35 + 8), v36 & 1) & 1) != 0)
  {
    goto LABEL_17;
  }
LABEL_10:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240CC1EA4()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_CategoricalMapping(0);
  sub_240BE18B8(&qword_25708D790, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26EAC);
  sub_240F1CC54();
  return sub_240F1CF78();
}

unint64_t sub_240CC1F14()
{
  return 0xD000000000000018;
}

void sub_240CC1F30()
{
  sub_240CC0B7C();
}

void sub_240CC1F44()
{
  sub_240CC15A0();
}

uint64_t sub_240CC1F58()
{
  sub_240BE18B8(&qword_25708D7A0, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26F3C);
  return sub_240F1C960();
}

uint64_t sub_240CC1FA8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240CC0B34();
  v3 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_240CC1FE8()
{
  sub_240BE18B8((unint64_t *)&qword_25708D788, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26F74);
  return sub_240F1CAF8();
}

uint64_t sub_240CC202C()
{
  sub_240BE18B8((unint64_t *)&qword_25708D788, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26F74);
  return sub_240F1CB04();
}

void sub_240CC2080()
{
  sub_240BE18B8(&qword_25708D780, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26E84);
}

void sub_240CC20AC()
{
  sub_240BE18B8((unint64_t *)&qword_25708D788, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26F74);
}

void sub_240CC20D8()
{
  sub_240BE18B8(&qword_25708D790, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26EAC);
}

void sub_240CC2104()
{
  sub_240BE18B8(&qword_25708D798, type metadata accessor for Proto_CategoricalMapping, (uint64_t)&unk_240F26EEC);
}

uint64_t sub_240CC2130(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_12_24()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_15_24()
{
  return type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
}

uint64_t sub_240CC2184(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v3 = type metadata accessor for Proto_SizeRange(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v14[1] = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_240BF07B4();
    v8 = v15;
    v9 = *(_QWORD *)(type metadata accessor for SizeRange() - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240BE0BF4(v10, (uint64_t)v6, type metadata accessor for Proto_SizeRange);
      v15 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_240BF07B4();
        v8 = v15;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      sub_240BE0B90((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, type metadata accessor for Proto_SizeRange);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

uint64_t FeatureType.ShapedArrayParameters.init(dataType:shape:optional:)@<X0>(char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _BYTE *a4@<X8>)
{
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;

  v7 = *a1;
  v8 = &a4[*(int *)(OUTLINED_FUNCTION_2_27() + 20)];
  v9 = OUTLINED_FUNCTION_3_27();
  v10 = (uint64_t)&v8[*(int *)(v9 + 24)];
  v11 = OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_17_11(v10, 1, v12, v11);
  OUTLINED_FUNCTION_18_16((uint64_t)&v8[*(int *)(v9 + 28)]);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v13 = *(_QWORD *)(a2 + 16);
  if (v13)
  {
    v21 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_25_15();
    v14 = 0;
    v15 = v21;
    v16 = *(_QWORD *)(v21 + 16);
    do
    {
      v17 = *(_QWORD *)(a2 + 8 * v14 + 32);
      v18 = *(_QWORD *)(v21 + 24);
      if (v16 >= v18 >> 1)
      {
        OUTLINED_FUNCTION_21_16(v18);
        OUTLINED_FUNCTION_30_16();
      }
      ++v14;
      *(_QWORD *)(v21 + 16) = v16 + 1;
      *(_QWORD *)(v21 + 8 * v16++ + 32) = v17;
    }
    while (v13 != v14);
    result = swift_bridgeObjectRelease();
  }
  else
  {
    result = swift_bridgeObjectRelease();
    v15 = MEMORY[0x24BEE4AF8];
  }
  v20 = qword_240F271C0[v7];
  *(_QWORD *)v8 = v15;
  *((_QWORD *)v8 + 1) = v20;
  v8[16] = 1;
  *a4 = a3 & 1;
  return result;
}

void FeatureType.ShapedArrayParameters.init(dataType:shapeFlexibility:optional:)()
{
  uint64_t *v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_19_14();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_313();
  v10 = *v6;
  v11 = *(_BYTE *)(v4 + 8);
  *v8 = 0;
  v12 = &v8[*(int *)(OUTLINED_FUNCTION_2_27() + 20)];
  *(_QWORD *)v12 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v12 + 1) = 0;
  v12[16] = 1;
  v13 = OUTLINED_FUNCTION_3_27();
  v14 = (uint64_t)&v12[*(int *)(v13 + 24)];
  OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_5_8(v14, 1);
  OUTLINED_FUNCTION_18_16((uint64_t)&v12[*(int *)(v13 + 28)]);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  if ((v11 & 1) != 0)
  {
    OUTLINED_FUNCTION_13_20();
    OUTLINED_FUNCTION_20_1();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v15 = OUTLINED_FUNCTION_33_14();
    swift_bridgeObjectRelease();
    *v0 = v15;
  }
  else
  {
    OUTLINED_FUNCTION_20_1();
    sub_240CC3948();
  }
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_5_8((uint64_t)v0, 0);
  sub_240CC3CC0((uint64_t)v0, v14);
  *((_QWORD *)v12 + 1) = qword_240F271C0[v10];
  v12[16] = 1;
  *v8 = v2 & 1;
  OUTLINED_FUNCTION_1();
}

void static FeatureType.ShapedArrayParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    OUTLINED_FUNCTION_2_27();
    sub_240DF6114();
  }
}

uint64_t FeatureType.ShapedArrayParameters.isOptional.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeatureType.ShapedArrayParameters.isOptional.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeatureType.ShapedArrayParameters.isOptional.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t FeatureType.ShapedArrayParameters.shape.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  OUTLINED_FUNCTION_19_14();
  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_2_27() + 20));
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v4 = 0;
    v3 = v9;
    v5 = *(_QWORD *)(v9 + 16);
    do
    {
      v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
      v7 = *(_QWORD *)(v9 + 24);
      if (v5 >= v7 >> 1)
      {
        OUTLINED_FUNCTION_21_16(v7);
        OUTLINED_FUNCTION_38_12();
      }
      ++v4;
      *(_QWORD *)(v9 + 16) = v5 + 1;
      *(_QWORD *)(v9 + 8 * v5++ + 32) = v6;
    }
    while (v2 != v4);
    OUTLINED_FUNCTION_173();
  }
  return v3;
}

uint64_t sub_240CC26D4()
{
  swift_bridgeObjectRetain();
  return FeatureType.ShapedArrayParameters.shape.setter();
}

uint64_t FeatureType.ShapedArrayParameters.shape.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;

  OUTLINED_FUNCTION_19_14();
  v1 = v0;
  v3 = v2;
  v4 = *(_QWORD *)(v2 + 16);
  if (v4)
  {
    v12 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_25_15();
    v5 = 0;
    v6 = v12;
    v7 = *(_QWORD *)(v12 + 16);
    do
    {
      v8 = *(_QWORD *)(v3 + 8 * v5 + 32);
      v9 = *(_QWORD *)(v12 + 24);
      if (v7 >= v9 >> 1)
      {
        OUTLINED_FUNCTION_21_16(v9);
        OUTLINED_FUNCTION_30_16();
      }
      ++v5;
      *(_QWORD *)(v12 + 16) = v7 + 1;
      *(_QWORD *)(v12 + 8 * v7++ + 32) = v8;
    }
    while (v4 != v5);
    OUTLINED_FUNCTION_165();
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v6 = MEMORY[0x24BEE4AF8];
  }
  v10 = *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v10) = v6;
  return result;
}

void (*FeatureType.ShapedArrayParameters.shape.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = FeatureType.ShapedArrayParameters.shape.getter();
  return sub_240CC2814;
}

void sub_240CC2814(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    FeatureType.ShapedArrayParameters.shape.setter();
    swift_bridgeObjectRelease();
  }
  else
  {
    FeatureType.ShapedArrayParameters.shape.setter();
    OUTLINED_FUNCTION_44();
  }
}

void FeatureType.ShapedArrayParameters.dataType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  if ((*(_BYTE *)(v3 + 16) & 1) != 0)
  {
    v4 = 0x3020102uLL >> (8 * *(_QWORD *)(v3 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_9_23();
    if (v5)
    {
      LOBYTE(v4) = 0;
    }
    else
    {
      OUTLINED_FUNCTION_23_14();
      if (v5)
      {
        LOBYTE(v4) = 3;
      }
      else
      {
        OUTLINED_FUNCTION_9_23();
        if (!v5 && (OUTLINED_FUNCTION_9_23(), v5))
          LOBYTE(v4) = 1;
        else
          LOBYTE(v4) = 2;
      }
    }
  }
  *a1 = v4;
  OUTLINED_FUNCTION_44();
}

void sub_240CC28E0(char *a1)
{
  char v1;

  v1 = *a1;
  FeatureType.ShapedArrayParameters.dataType.setter(&v1);
}

void FeatureType.ShapedArrayParameters.dataType.setter(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = qword_240F271C0[*a1];
  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  *(_QWORD *)(v3 + 8) = v2;
  *(_BYTE *)(v3 + 16) = 1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*FeatureType.ShapedArrayParameters.dataType.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  char v8;
  char v10;

  v3 = (char *)(a1 + 12);
  *(_QWORD *)a1 = v1;
  v4 = *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  *(_DWORD *)(a1 + 8) = v4;
  v5 = v1 + v4;
  v6 = *(_QWORD *)(v1 + v4 + 8);
  if (*(_BYTE *)(v5 + 16) == 1)
    __asm { BR              X12 }
  OUTLINED_FUNCTION_9_23();
  if (v7)
  {
    v8 = 0;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_9_23();
  if (v7)
  {
    v8 = 1;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_9_23();
  if (v7)
  {
    v8 = 2;
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_23_14();
  if (v7)
  {
    v8 = 3;
LABEL_12:
    v10 = v8;
    goto LABEL_13;
  }
  v10 = 2;
LABEL_13:
  *v3 = v10;
  return sub_240CC2A20;
}

uint64_t sub_240CC2A20(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(int *)(result + 8);
  *(_QWORD *)(v1 + 8) = qword_240F271C0[*(char *)(result + 12)];
  *(_BYTE *)(v1 + 16) = 1;
  return result;
}

void FeatureType.ShapedArrayParameters.shapeFlexibility.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v5);
  v9 = (char *)&v15 - v8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v1 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  v14 = OUTLINED_FUNCTION_3_27();
  sub_240CC3D08(v13 + *(int *)(v14 + 24), (uint64_t)v12);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v3) == 1)
  {
    *(_QWORD *)a1 = 0;
    *(_BYTE *)(a1 + 8) = -1;
  }
  else
  {
    OUTLINED_FUNCTION_40_11((uint64_t)v12);
    sub_240BE0BF4((uint64_t)v9, (uint64_t)v7, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    sub_240CC2D04();
    OUTLINED_FUNCTION_35_13();
  }
  OUTLINED_FUNCTION_42();
}

void sub_240CC2B60(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  FeatureType.ShapedArrayParameters.shapeFlexibility.getter((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

void sub_240CC2BA0(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = v1;
  sub_240CC3D50(v2, v1);
  FeatureType.ShapedArrayParameters.shapeFlexibility.setter((uint64_t)&v2);
}

void FeatureType.ShapedArrayParameters.shapeFlexibility.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  v5 = *(unsigned __int8 *)(a1 + 8);
  if (v5 == 255)
  {
    v8 = OUTLINED_FUNCTION_4_26();
    v9 = (uint64_t)v1;
    v10 = 1;
  }
  else
  {
    v6 = *(_QWORD *)a1;
    if ((v5 & 1) != 0)
    {
      OUTLINED_FUNCTION_13_20();
      sub_240CC3D50(v6, v5);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v11 = OUTLINED_FUNCTION_33_14();
      OUTLINED_FUNCTION_32_14();
      *v1 = v11;
    }
    else
    {
      OUTLINED_FUNCTION_20_1();
      sub_240CC3948();
    }
    v7 = OUTLINED_FUNCTION_4_26();
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_32_14();
    OUTLINED_FUNCTION_4_26();
    v9 = (uint64_t)v1;
    v10 = 0;
    v8 = v7;
  }
  __swift_storeEnumTagSinglePayload(v9, v10, 1, v8);
  v12 = v2 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  v13 = OUTLINED_FUNCTION_3_27();
  sub_240CC3CC0((uint64_t)v1, v12 + *(int *)(v13 + 24));
  OUTLINED_FUNCTION_42();
}

void sub_240CC2D04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t (*v24)(_QWORD);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int EnumCaseMultiPayload;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  OUTLINED_FUNCTION_19_14();
  v2 = v1;
  v4 = v3;
  v5 = type metadata accessor for SizeRange();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  OUTLINED_FUNCTION_13_20();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  v13 = v12 - v11;
  v14 = type metadata accessor for Proto_ArrayFeatureType.Shape(0);
  v15 = *(_QWORD *)(v14 - 8);
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_24_1();
  v18 = v17 - v16;
  OUTLINED_FUNCTION_27_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_24_1();
  v22 = v21 - v20;
  OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_18();
  sub_240BE0BF4(v2, v0, v24);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 1)
  {
    sub_240BE0B90(v0, v13, type metadata accessor for Proto_ArrayFeatureType.ShapeRange);
    v25 = *(_QWORD *)v13;
    v26 = *(_QWORD *)(*(_QWORD *)v13 + 16);
    if (v26)
    {
      v45 = v2;
      v47 = v4;
      v54 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_315();
      OUTLINED_FUNCTION_26_13();
      sub_240BF07E0();
      v27 = v54;
      v28 = *(_QWORD *)(type metadata accessor for Proto_SizeRange(0) - 8);
      v29 = v25 + ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80));
      v30 = *(_QWORD *)(v28 + 72);
      do
      {
        sub_240BE0BF4(v29, v9, type metadata accessor for Proto_SizeRange);
        v31 = *(_QWORD *)(v54 + 16);
        if (v31 >= *(_QWORD *)(v54 + 24) >> 1)
          sub_240BF07E0();
        *(_QWORD *)(v54 + 16) = v31 + 1;
        sub_240BE0B90(v9, v54+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v31, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
        v29 += v30;
        --v26;
      }
      while (v26);
      v2 = v45;
      v4 = v47;
    }
    else
    {
      OUTLINED_FUNCTION_315();
      v27 = MEMORY[0x24BEE4AF8];
    }
    sub_240BE27A0(v2, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    OUTLINED_FUNCTION_173();
    v42 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange;
    v43 = v13;
  }
  else
  {
    sub_240BE0B90(v0, v22, type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes);
    v32 = *(_QWORD *)v22;
    v33 = *(_QWORD *)(*(_QWORD *)v22 + 16);
    if (v33)
    {
      v44 = v22;
      v46 = v2;
      v48 = v4;
      v55 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_315();
      OUTLINED_FUNCTION_26_13();
      sub_240BF0DB0();
      v34 = 0;
      v52 = v32 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      v51 = *(_QWORD *)(v15 + 72);
      v50 = v18;
      do
      {
        sub_240BE0BF4(v52 + v51 * v34, v18, type metadata accessor for Proto_ArrayFeatureType.Shape);
        v35 = *(_QWORD *)v18;
        v36 = *(_QWORD *)(*(_QWORD *)v18 + 16);
        if (v36)
        {
          v53 = MEMORY[0x24BEE4AF8];
          swift_bridgeObjectRetain();
          sub_240BF080C();
          v37 = 0;
          v38 = v53;
          v39 = *(_QWORD *)(v53 + 16);
          do
          {
            v40 = *(_QWORD *)(v35 + 8 * v37 + 32);
            if (v39 >= *(_QWORD *)(v53 + 24) >> 1)
              OUTLINED_FUNCTION_38_12();
            ++v37;
            *(_QWORD *)(v53 + 16) = v39 + 1;
            *(_QWORD *)(v53 + 8 * v39++ + 32) = v40;
          }
          while (v36 != v37);
          swift_bridgeObjectRelease();
          v18 = v50;
        }
        else
        {
          v38 = MEMORY[0x24BEE4AF8];
        }
        sub_240BE27A0(v18, type metadata accessor for Proto_ArrayFeatureType.Shape);
        v27 = v55;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_26_13();
          sub_240BF0DB0();
          v27 = v55;
        }
        v41 = *(_QWORD *)(v27 + 16);
        if (v41 >= *(_QWORD *)(v27 + 24) >> 1)
        {
          sub_240BF0DB0();
          v27 = v55;
        }
        ++v34;
        *(_QWORD *)(v27 + 16) = v41 + 1;
        *(_QWORD *)(v27 + 8 * v41 + 32) = v38;
      }
      while (v34 != v33);
      v2 = v46;
      v4 = v48;
      v22 = v44;
    }
    else
    {
      OUTLINED_FUNCTION_315();
      v27 = MEMORY[0x24BEE4AF8];
    }
    sub_240BE27A0(v2, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    OUTLINED_FUNCTION_173();
    v42 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes;
    v43 = v22;
  }
  sub_240BE27A0(v43, v42);
  *(_QWORD *)v4 = v27;
  *(_BYTE *)(v4 + 8) = EnumCaseMultiPayload == 1;
  OUTLINED_FUNCTION_1();
}

void (*FeatureType.ShapedArrayParameters.shapeFlexibility.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[4] = v1;
  v4 = OUTLINED_FUNCTION_4_26();
  v3[5] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v6 = malloc(v5);
  v3[6] = v6;
  v7 = malloc(v5);
  v3[7] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
  v3[8] = OUTLINED_FUNCTION_61_2();
  v3[9] = OUTLINED_FUNCTION_61_2();
  v8 = OUTLINED_FUNCTION_61_2();
  v3[10] = v8;
  v9 = *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  *((_DWORD *)v3 + 3) = v9;
  v10 = v1 + v9;
  v11 = *(int *)(OUTLINED_FUNCTION_3_27() + 24);
  *((_DWORD *)v3 + 22) = v11;
  sub_240CC3D08(v10 + v11, (uint64_t)v8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v4) == 1)
  {
    *v3 = 0;
    *((_BYTE *)v3 + 8) = -1;
  }
  else
  {
    OUTLINED_FUNCTION_40_11((uint64_t)v8);
    sub_240BE0BF4((uint64_t)v7, (uint64_t)v6, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    sub_240CC2D04();
    OUTLINED_FUNCTION_35_13();
  }
  return sub_240CC3290;
}

void sub_240CC3290()
{
  void *v0;
  uint64_t *v1;
  void *v2;
  uint64_t v3;
  void ***v4;
  void **v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_19_14();
  v5 = *v4;
  v6 = **v4;
  v7 = *((unsigned __int8 *)*v4 + 8);
  if ((v8 & 1) != 0)
  {
    if ((_DWORD)v7 != 255)
    {
      v1 = (uint64_t *)v5[8];
      v2 = v5[5];
      if ((v7 & 1) != 0)
      {
        v3 = (uint64_t)(v5 + 2);
        OUTLINED_FUNCTION_13_20();
        OUTLINED_FUNCTION_12_25();
        *v1 = OUTLINED_FUNCTION_20_13();
      }
      else
      {
        swift_bridgeObjectRetain_n();
        sub_240CC3948();
      }
      swift_storeEnumTagMultiPayload();
      sub_240CC3D64((uint64_t)v6, v7);
    }
    OUTLINED_FUNCTION_10_24();
    OUTLINED_FUNCTION_17_11(v7, v9, v10, v11);
    sub_240CC3CC0(v7, v3);
    sub_240CC3D64((uint64_t)*v5, *((_BYTE *)v5 + 8));
  }
  else
  {
    if ((_DWORD)v7 != 255)
    {
      v1 = (uint64_t *)v5[9];
      v2 = v5[5];
      if ((v7 & 1) != 0)
      {
        v3 = (uint64_t)(v5 + 3);
        OUTLINED_FUNCTION_13_20();
        OUTLINED_FUNCTION_12_25();
        v0 = (void *)OUTLINED_FUNCTION_20_13();
        sub_240CC3D64((uint64_t)v6, v7);
        *v1 = (uint64_t)v0;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_240CC3948();
      }
      swift_storeEnumTagMultiPayload();
      sub_240CC3D64((uint64_t)v6, v7);
    }
    OUTLINED_FUNCTION_10_24();
    OUTLINED_FUNCTION_17_11((uint64_t)v0, v12, v13, v14);
    sub_240CC3CC0((uint64_t)v0, v3);
  }
  free(v6);
  free(v0);
  free((void *)v7);
  free(v1);
  free(v2);
  free(v5);
}

double FeatureType.ShapedArrayParameters.defaultValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  double result;
  double v5;
  double v6;

  v1 = v0 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  v2 = OUTLINED_FUNCTION_3_27();
  result = OUTLINED_FUNCTION_6_23((_BYTE *)(v1 + *(int *)(v2 + 28)));
  if (v3 == 1)
    result = v6;
  if (!v3)
    return v5;
  return result;
}

uint64_t FeatureType.ShapedArrayParameters.defaultValue.setter(double a1)
{
  uint64_t v1;
  uint64_t v3;
  char v4;
  unsigned int v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  char v9;

  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  if (*(_BYTE *)(v3 + 16) == 1)
    __asm { BR              X10 }
  OUTLINED_FUNCTION_23_14();
  if (v4)
  {
    if ((~*(_QWORD *)&a1 & 0x7FF0000000000000) != 0)
    {
      if (a1 > -2147483650.0)
      {
        if (a1 < 2147483650.0)
        {
          result = OUTLINED_FUNCTION_3_27();
          v9 = 0;
          v8 = v3 + *(int *)(result + 28);
          *(_QWORD *)v8 = (int)a1;
          goto LABEL_12;
        }
LABEL_15:
        __break(1u);
        JUMPOUT(0x240CC3580);
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_15;
  }
  OUTLINED_FUNCTION_9_23();
  if (v4 || (OUTLINED_FUNCTION_9_23(), v4))
  {
    *(float *)&v5 = a1;
    v6 = v5;
    result = OUTLINED_FUNCTION_3_27();
    v8 = v3 + *(int *)(result + 28);
    *(_QWORD *)v8 = v6;
    v9 = 1;
  }
  else
  {
    result = OUTLINED_FUNCTION_3_27();
    v8 = v3 + *(int *)(result + 28);
    *(double *)v8 = a1;
    v9 = 2;
  }
LABEL_12:
  *(_BYTE *)(v8 + 8) = v9;
  return result;
}

void (*FeatureType.ShapedArrayParameters.defaultValue.modify(uint64_t a1))(double *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  int v5;
  double v6;
  double v7;
  double v8;

  *(_QWORD *)(a1 + 8) = v1;
  v3 = v1 + *(int *)(OUTLINED_FUNCTION_2_27() + 20);
  v4 = OUTLINED_FUNCTION_3_27();
  v6 = OUTLINED_FUNCTION_6_23((_BYTE *)(v3 + *(int *)(v4 + 28)));
  if (v5 == 1)
    v6 = v8;
  if (!v5)
    v6 = v7;
  *(double *)a1 = v6;
  return sub_240CC35F0;
}

void sub_240CC35F0(double *a1)
{
  FeatureType.ShapedArrayParameters.defaultValue.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void FeatureType.ShapedArrayParameters.init()(_BYTE *a1@<X8>)
{
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = 0;
  v1 = &a1[*(int *)(OUTLINED_FUNCTION_2_27() + 20)];
  *(_QWORD *)v1 = MEMORY[0x24BEE4AF8];
  *((_QWORD *)v1 + 1) = 0;
  v1[16] = 1;
  v2 = OUTLINED_FUNCTION_3_27();
  v3 = (uint64_t)&v1[*(int *)(v2 + 24)];
  v4 = OUTLINED_FUNCTION_4_26();
  OUTLINED_FUNCTION_17_11(v3, 1, v5, v4);
  OUTLINED_FUNCTION_18_16((uint64_t)&v1[*(int *)(v2 + 28)]);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_156();
}

uint64_t type metadata accessor for FeatureType.ShapedArrayParameters()
{
  uint64_t result;

  result = qword_25435F920;
  if (!qword_25435F920)
    return swift_getSingletonMetadata();
  return result;
}

void FeatureType.ShapedArrayParameters.customMirror.getter()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE *v17;
  double *v18;
  double v19;
  int v20;
  double v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_19_14();
  v26 = v2;
  v27 = v3;
  v4 = sub_240F1CF90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4((uint64_t)v0, v12 - v11, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1D380;
  *(_QWORD *)(v14 + 32) = 0x6570616873;
  *(_QWORD *)(v14 + 40) = 0xE500000000000000;
  v15 = FeatureType.ShapedArrayParameters.shape.getter();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v14 + 48) = v15;
  *(_QWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 80) = 0x6570795461746164;
  *(_QWORD *)(v14 + 88) = 0xE800000000000000;
  *(_QWORD *)(v14 + 120) = &type metadata for FeatureType.ShapedArrayParameters.DataType;
  FeatureType.ShapedArrayParameters.dataType.getter((_BYTE *)(v14 + 96));
  *(_QWORD *)(v14 + 128) = 0xD000000000000010;
  *(_QWORD *)(v14 + 136) = 0x8000000240F52D30;
  *(_QWORD *)(v14 + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D7D8);
  FeatureType.ShapedArrayParameters.shapeFlexibility.getter(v14 + 144);
  strcpy((char *)(v14 + 176), "defaultValue");
  *(_BYTE *)(v14 + 189) = 0;
  *(_WORD *)(v14 + 190) = -5120;
  v17 = &v0[*(int *)(v9 + 20)];
  v18 = (double *)&v17[*(int *)(OUTLINED_FUNCTION_3_27() + 28)];
  v19 = *v18;
  v20 = *((unsigned __int8 *)v18 + 8);
  if (v20)
  {
    if (v20 == 1)
    {
      v21 = *(float *)&v19;
    }
    else
    {
      v21 = 0.0;
      if (v20 == 2)
        v21 = v19;
    }
  }
  else
  {
    v21 = (double)SLODWORD(v19);
  }
  v22 = MEMORY[0x24BEE13C8];
  *(double *)(v14 + 192) = v21;
  *(_QWORD *)(v14 + 216) = v22;
  *(_QWORD *)(v14 + 224) = 0x6E6F6974704F7369;
  *(_QWORD *)(v14 + 232) = 0xEA00000000006C61;
  LOBYTE(v22) = *v0;
  *(_QWORD *)(v14 + 264) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v14 + 240) = v22;
  v23 = sub_240F1CF84();
  OUTLINED_FUNCTION_17_11((uint64_t)v8, 1, v24, v23);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void sub_240CC3948()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  _QWORD v23[2];
  _QWORD *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  OUTLINED_FUNCTION_19_14();
  v32 = v0;
  v33 = v1;
  v3 = v2;
  v5 = v4;
  v6 = type metadata accessor for Proto_ArrayFeatureType.Shape(0);
  v28 = *(_QWORD *)(v6 - 8);
  v29 = v6;
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)v23 - v10;
  OUTLINED_FUNCTION_27_16();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v12 = *(_QWORD *)(v3 + 16);
  if (v12)
  {
    v24 = v5;
    v31 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_26_13();
    sub_240BF0764();
    v13 = 0;
    v14 = v31;
    v23[1] = v3;
    v26 = v11;
    v27 = v3 + 32;
    v25 = v12;
    do
    {
      v15 = *(_QWORD *)(v27 + 8 * v13);
      v16 = v9;
      swift_bridgeObjectRetain();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v17 = *(_QWORD *)(v15 + 16);
      if (v17)
      {
        v30 = MEMORY[0x24BEE4AF8];
        OUTLINED_FUNCTION_25_15();
        v18 = 0;
        v19 = v30;
        v20 = *(_QWORD *)(v30 + 16);
        do
        {
          v21 = *(_QWORD *)(v15 + 8 * v18 + 32);
          v30 = v19;
          if (v20 >= *(_QWORD *)(v19 + 24) >> 1)
          {
            OUTLINED_FUNCTION_30_16();
            v19 = v30;
          }
          ++v18;
          *(_QWORD *)(v19 + 16) = v20 + 1;
          *(_QWORD *)(v19 + 8 * v20++ + 32) = v21;
        }
        while (v17 != v18);
        swift_bridgeObjectRelease();
        v12 = v25;
        v11 = v26;
      }
      else
      {
        swift_bridgeObjectRelease();
        v19 = MEMORY[0x24BEE4AF8];
      }
      v9 = v16;
      *(_QWORD *)v16 = v19;
      sub_240BE0B90((uint64_t)v16, (uint64_t)v11, type metadata accessor for Proto_ArrayFeatureType.Shape);
      v31 = v14;
      v22 = *(_QWORD *)(v14 + 16);
      if (v22 >= *(_QWORD *)(v14 + 24) >> 1)
      {
        sub_240BF0764();
        v14 = v31;
      }
      ++v13;
      *(_QWORD *)(v14 + 16) = v22 + 1;
      sub_240BE0B90((uint64_t)v11, v14+ ((*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80))+ *(_QWORD *)(v28 + 72) * v22, type metadata accessor for Proto_ArrayFeatureType.Shape);
    }
    while (v13 != v12);
    swift_bridgeObjectRelease();
    v5 = v24;
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v14 = MEMORY[0x24BEE4AF8];
  }
  *v5 = v14;
  OUTLINED_FUNCTION_1();
}

void static FeatureType.ShapedArrayParameters.ShapeFlexibility.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((*(_BYTE *)(a2 + 8) & 1) != 0)
    {
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_315();
      sub_240BEFB0C();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_173();
    }
    goto LABEL_5;
  }
  if ((*(_BYTE *)(a2 + 8) & 1) != 0)
  {
LABEL_5:
    OUTLINED_FUNCTION_156();
    return;
  }
  sub_240BEFA30(*(_QWORD *)a1, *(_QWORD *)a2);
}

uint64_t FeatureType.ShapedArrayParameters.DataType.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;
  char v4;

  if (result == 65600)
    v2 = 2;
  else
    v2 = 4;
  if (result == 131104)
    v3 = 3;
  else
    v3 = v2;
  if (result == 65568)
    v4 = 1;
  else
    v4 = v3;
  if (result == 65552)
    v4 = 0;
  *a2 = v4;
  return result;
}

uint64_t FeatureType.ShapedArrayParameters.DataType.rawValue.getter()
{
  char *v0;

  return qword_240F271E0[*v0];
}

BOOL sub_240CC3C74(char *a1, char *a2)
{
  return sub_240C51CAC(*a1, *a2);
}

uint64_t sub_240CC3C80@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return FeatureType.ShapedArrayParameters.DataType.init(rawValue:)(*a1, a2);
}

void sub_240CC3C88(uint64_t *a1@<X8>)
{
  *a1 = FeatureType.ShapedArrayParameters.DataType.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CC3CA8()
{
  sub_240E18D44();
}

void sub_240CC3CB0()
{
  sub_240E190B8();
}

void sub_240CC3CB8()
{
  sub_240E19148();
}

uint64_t sub_240CC3CC0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CC3D08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CC3D50(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 != -1)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_240CC3D64(uint64_t a1, char a2)
{
  uint64_t result;

  if (a2 != -1)
    return swift_bridgeObjectRelease();
  return result;
}

unint64_t sub_240CC3D7C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25435FDF8;
  if (!qword_25435FDF8)
  {
    v1 = type metadata accessor for Proto_ArrayFeatureType(255);
    result = MEMORY[0x24268C2AC](&unk_240F38FA8, v1);
    atomic_store(result, (unint64_t *)&qword_25435FDF8);
  }
  return result;
}

unint64_t sub_240CC3DC0()
{
  unint64_t result;

  result = qword_25708D7E0;
  if (!qword_25708D7E0)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for FeatureType.ShapedArrayParameters.DataType, &type metadata for FeatureType.ShapedArrayParameters.DataType);
    atomic_store(result, (unint64_t *)&qword_25708D7E0);
  }
  return result;
}

void sub_240CC3DFC(uint64_t *a1@<X8>)
{
  *a1 = FeatureType.ShapedArrayParameters.shape.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CC3E24(_BYTE *a1@<X8>)
{
  FeatureType.ShapedArrayParameters.dataType.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CC3E4C(double *a1@<X8>)
{
  *a1 = FeatureType.ShapedArrayParameters.defaultValue.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CC3E70(double *a1)
{
  FeatureType.ShapedArrayParameters.defaultValue.setter(*a1);
  OUTLINED_FUNCTION_44();
}

_QWORD *_s21ShapedArrayParametersVwCP(_BYTE *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int EnumCaseMultiPayload;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  _BYTE *v23;
  char *v24;
  uint64_t v25;
  _BYTE *v26;
  char *v27;
  uint64_t v28;
  char *v30;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v16 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v16 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = &a1[v5];
    v7 = (char *)a2 + v5;
    v6[16] = *((_BYTE *)a2 + v5 + 16);
    v9 = *(_QWORD *)((char *)a2 + v5);
    v8 = *(_QWORD *)((char *)a2 + v5 + 8);
    *(_QWORD *)v6 = v9;
    *((_QWORD *)v6 + 1) = v8;
    v10 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
    v11 = v10[6];
    v12 = &v6[v11];
    v13 = &v7[v11];
    v14 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v12 = *(_QWORD *)v13;
      if (EnumCaseMultiPayload == 1)
        v18 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v18 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v19 = (char *)v12 + v18;
      v30 = &v13[v18];
      v20 = sub_240F1C930();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v19, v30, v20);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    v22 = v10[7];
    v23 = &v6[v22];
    v24 = &v7[v22];
    *(_QWORD *)v23 = *(_QWORD *)v24;
    v23[8] = v24[8];
    v25 = v10[8];
    v26 = &v6[v25];
    v27 = &v7[v25];
    v28 = sub_240F1C930();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  }
  return v3;
}

uint64_t _s21ShapedArrayParametersVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = a1 + *(int *)(a2 + 20);
  swift_bridgeObjectRelease();
  v3 = type metadata accessor for Proto_ArrayFeatureType(0);
  v4 = v2 + *(int *)(v3 + 24);
  v5 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v7 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
    else
      v7 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
    v8 = v4 + *(int *)(v7 + 20);
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = v2 + *(int *)(v3 + 32);
  v11 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_BYTE *_s21ShapedArrayParametersVwcp(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  char *v28;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v5[16] = a2[v4 + 16];
  v8 = *(_QWORD *)&a2[v4];
  v7 = *(_QWORD *)&a2[v4 + 8];
  *(_QWORD *)v5 = v8;
  *((_QWORD *)v5 + 1) = v7;
  v9 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v10 = v9[6];
  v11 = &v5[v10];
  v12 = &v6[v10];
  v13 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
      v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v17 = (char *)v11 + v16;
    v28 = (char *)v12 + v16;
    v18 = sub_240F1C930();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v17, v28, v18);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v20 = v9[7];
  v21 = &v5[v20];
  v22 = &v6[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = v9[8];
  v24 = &v5[v23];
  v25 = &v6[v23];
  v26 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

_BYTE *_s21ShapedArrayParametersVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  int EnumTagSinglePayload;
  int v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  int v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  _BYTE *v28;
  _BYTE *v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  _BYTE *v33;
  uint64_t v34;
  char *v36;
  char *v37;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  *(_QWORD *)&a1[v5] = *(_QWORD *)&a2[v5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v8 = *((_QWORD *)v7 + 1);
  v6[16] = v7[16];
  *((_QWORD *)v6 + 1) = v8;
  v9 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v10 = v9[6];
  v11 = &v6[v10];
  v12 = &v7[v10];
  v13 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v13);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v11 = *v12;
      if (EnumCaseMultiPayload == 1)
        v17 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v17 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v18 = (char *)v11 + v17;
      v36 = (char *)v12 + v17;
      v19 = sub_240F1C930();
      v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
      swift_bridgeObjectRetain();
      v20(v18, v36, v19);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
      goto LABEL_15;
    }
LABEL_7:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_15;
  }
  if (v15)
  {
    sub_240BE27A0((uint64_t)v11, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)v11, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    v22 = swift_getEnumCaseMultiPayload();
    *v11 = *v12;
    if (v22 == 1)
      v23 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v23 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v24 = (char *)v11 + v23;
    v37 = (char *)v12 + v23;
    v25 = sub_240F1C930();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v24, v37, v25);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v27 = v9[7];
  v28 = &v6[v27];
  v29 = &v7[v27];
  v30 = *(_QWORD *)v29;
  v28[8] = v29[8];
  *(_QWORD *)v28 = v30;
  v31 = v9[8];
  v32 = &v6[v31];
  v33 = &v7[v31];
  v34 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_BYTE *_s21ShapedArrayParametersVwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v5[16] = a2[v4 + 16];
  v7 = *(_QWORD *)&a2[v4 + 8];
  *(_QWORD *)v5 = *(_QWORD *)&a2[v4];
  *((_QWORD *)v5 + 1) = v7;
  v8 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v9 = v8[6];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v10 = *v11;
    if (EnumCaseMultiPayload == 1)
      v15 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v15 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  v19 = v8[7];
  v20 = &v5[v19];
  v21 = &v6[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = v8[8];
  v23 = &v5[v22];
  v24 = &v6[v22];
  v25 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

_BYTE *_s21ShapedArrayParametersVwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE *v30;
  _BYTE *v31;
  uint64_t v32;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  *(_QWORD *)&a1[v5] = *(_QWORD *)&a2[v5];
  swift_bridgeObjectRelease();
  *((_QWORD *)v6 + 1) = *((_QWORD *)v7 + 1);
  v6[16] = v7[16];
  v8 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v9 = v8[6];
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v10 = *v11;
      if (EnumCaseMultiPayload == 1)
        v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v17 = (char *)v10 + v16;
      v18 = (char *)v11 + v16;
      v19 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_15;
    }
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_15;
  }
  if (v14)
  {
    sub_240BE27A0((uint64_t)v10, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)v10, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    v21 = swift_getEnumCaseMultiPayload();
    *v10 = *v11;
    if (v21 == 1)
      v22 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v22 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v23 = (char *)v10 + v22;
    v24 = (char *)v11 + v22;
    v25 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v26 = v8[7];
  v27 = &v6[v26];
  v28 = &v7[v26];
  *(_QWORD *)v27 = *(_QWORD *)v28;
  v27[8] = v28[8];
  v29 = v8[8];
  v30 = &v6[v29];
  v31 = &v7[v29];
  v32 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  return a1;
}

uint64_t _s21ShapedArrayParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240CC4AE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 254)
  {
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_3_27();
    __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t _s21ShapedArrayParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CC4B58(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_3_27();
    __swift_storeEnumTagSinglePayload((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v7);
  }
}

uint64_t sub_240CC4BB4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ArrayFeatureType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureType.ShapedArrayParameters.ShapeFlexibility()
{
  return &type metadata for FeatureType.ShapedArrayParameters.ShapeFlexibility;
}

uint64_t _s21ShapedArrayParametersV8DataTypeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_240CC4C84 + 4 * byte_240F26FFA[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_240CC4CB8 + 4 * byte_240F26FF5[v4]))();
}

uint64_t sub_240CC4CB8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CC4CC0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240CC4CC8);
  return result;
}

uint64_t sub_240CC4CD4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240CC4CDCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_240CC4CE0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CC4CE8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureType.ShapedArrayParameters.DataType()
{
  return &type metadata for FeatureType.ShapedArrayParameters.DataType;
}

uint64_t OUTLINED_FUNCTION_2_27()
{
  return type metadata accessor for FeatureType.ShapedArrayParameters();
}

uint64_t OUTLINED_FUNCTION_3_27()
{
  return type metadata accessor for Proto_ArrayFeatureType(0);
}

uint64_t OUTLINED_FUNCTION_4_26()
{
  return type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
}

double OUTLINED_FUNCTION_6_23@<D0>(_BYTE *a1@<X8>)
{
  double result;

  result = 0.0;
  if (a1[8] == 2)
    return *(double *)a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_12_25()
{
  uint64_t v0;
  char v1;

  sub_240CC3D50(v0, v1);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_13_20()
{
  return type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
}

void OUTLINED_FUNCTION_18_16(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = -1;
}

uint64_t OUTLINED_FUNCTION_20_13()
{
  uint64_t v0;

  return sub_240CC2184(v0);
}

BOOL OUTLINED_FUNCTION_21_16@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

void OUTLINED_FUNCTION_25_15()
{
  sub_240BF0790();
}

uint64_t OUTLINED_FUNCTION_26_13()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_27_16()
{
  return type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
}

void OUTLINED_FUNCTION_30_16()
{
  sub_240BF0790();
}

uint64_t OUTLINED_FUNCTION_32_14()
{
  char v0;
  uint64_t v1;

  return sub_240CC3D64(v1, v0);
}

uint64_t OUTLINED_FUNCTION_33_14()
{
  uint64_t v0;

  return sub_240CC2184(v0);
}

void OUTLINED_FUNCTION_35_13()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE27A0(v1, v0);
}

void OUTLINED_FUNCTION_38_12()
{
  sub_240BF080C();
}

void OUTLINED_FUNCTION_40_11(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BE0B90(a1, v2, v1);
}

uint64_t sub_240CC4E5C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_240BF080C();
    v2 = v10;
    v4 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v4++;
      swift_retain();
      sub_240CC5354(v5);
      v7 = v6;
      swift_release();
      v8 = *(_QWORD *)(v10 + 16);
      if (v8 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_240BF080C();
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v7;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_240CC4F3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  if (a1 + 0x4000000000000000 < 0)
  {
    __break(1u);
    goto LABEL_12;
  }
  v5 = MEMORY[0x24268BD84](32, 0xE100000000000000, 2 * a1);
  if (!a2)
  {
    v9 = sub_240F1CCCC();
    sub_240CC5354(a3);
    if (!__OFADD__(v9, v10))
    {
      if (v9 + v10 <= 120)
      {
        OUTLINED_FUNCTION_26_14();
        sub_240F1CCE4();
        OUTLINED_FUNCTION_173();
        return v5;
      }
LABEL_8:
      __asm { BR              X10 }
    }
LABEL_13:
    __break(1u);
    JUMPOUT(0x240CC5344);
  }
  sub_240CC5354(a3);
  if (__OFADD__(a2, v6))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (a2 + v6 > 120)
    goto LABEL_8;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_26_14();
  return v7;
}

void sub_240CC5354(uint64_t a1)
{
  __asm { BR              X10 }
}

uint64_t sub_240CC5390()
{
  OUTLINED_FUNCTION_5_29();
  return sub_240F1CCCC();
}

void sub_240CC53AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = *(_QWORD *)(a1 + 32);
  v2 = *(_QWORD *)(v1 + 16);
  if (!v2)
    goto LABEL_15;
  if (v2 + 0x3FFFFFFFFFFFFFFFLL < 0)
  {
LABEL_24:
    __break(1u);
    JUMPOUT(0x240CC56B8);
  }
  v3 = 2 * v2 - 2;
  v18 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_20_14();
  sub_240BF080C();
  v4 = (uint64_t *)(v1 + 48);
  do
  {
    v5 = *v4;
    swift_retain();
    OUTLINED_FUNCTION_63_1();
    v6 = sub_240F1CCCC();
    sub_240CC5354(v5);
    v8 = v7;
    swift_release();
    OUTLINED_FUNCTION_12_2();
    v9 = v6 + v8;
    if (__OFADD__(v6, v8))
    {
      __break(1u);
LABEL_21:
      __break(1u);
      JUMPOUT(0x240CC569CLL);
    }
    v10 = v9 + 2;
    if (__OFADD__(v9, 2))
      goto LABEL_21;
    v12 = *(_QWORD *)(v18 + 16);
    v11 = *(_QWORD *)(v18 + 24);
    if (v12 >= v11 >> 1)
    {
      OUTLINED_FUNCTION_11_26(v11);
      sub_240BF080C();
    }
    v4 += 3;
    *(_QWORD *)(v18 + 16) = v12 + 1;
    *(_QWORD *)(v18 + 8 * v12 + 32) = v10;
    --v2;
  }
  while (v2);
  v13 = 0;
  do
  {
    v14 = *(_QWORD *)(v18 + 8 * v13 + 32);
    v15 = __OFADD__(v2, v14);
    v2 += v14;
    if (v15)
    {
      __break(1u);
      JUMPOUT(0x240CC56ACLL);
    }
    ++v13;
  }
  while (v12 + 1 != v13);
  swift_release();
  v16 = v2 + v3;
  if (__OFADD__(v2, v3))
  {
    __break(1u);
LABEL_15:
    v16 = 0;
  }
  v17 = sub_240F1CCCC();
  if (__OFADD__(v17, 2))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (__OFADD__(v17 + 2, v16))
  {
    __break(1u);
    JUMPOUT(0x240CC5650);
  }
  OUTLINED_FUNCTION_5_29();
}

uint64_t sub_240CC56DC(uint64_t a1)
{
  return sub_240CC4F3C(0, 0, a1);
}

void sub_240CC56EC(uint64_t a1)
{
  __asm { BR              X10 }
}

void sub_240CC5728()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_5_29();
}

uint64_t sub_240CC5A30()
{
  uint64_t *v0;

  return sub_240CC56DC(*v0);
}

_QWORD *initializeBufferWithCopyOfBuffer for PrintNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  return a1;
}

uint64_t destroy for PrintNode()
{
  return swift_release();
}

_QWORD *assignWithCopy for PrintNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for PrintNode(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for PrintNode(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 8))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = (((*(_QWORD *)a1 >> 57) >> 5) | (4 * ((*(_QWORD *)a1 >> 57) & 0x18 | *(_QWORD *)a1 & 7))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for PrintNode(uint64_t result, unsigned int a2, unsigned int a3)
{
  uint64_t v3;

  if (a2 > 0x7C)
  {
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 8) = 0;
    if (a2)
    {
      v3 = (-a2 >> 2) & 0x1F | (32 * (-a2 & 0x7F));
      *(_QWORD *)result = (v3 | (v3 << 57)) & 0xF000000000000007;
    }
  }
  return result;
}

uint64_t sub_240CC5B8C(_QWORD *a1)
{
  return *a1 >> 62;
}

_QWORD *sub_240CC5B98(_QWORD *result)
{
  *result &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t *sub_240CC5BA8(uint64_t *result, uint64_t a2)
{
  *result = *result & 0xFFFFFFFFFFFFFF8 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for PrintNode()
{
  return &type metadata for PrintNode;
}

uint64_t OUTLINED_FUNCTION_0_21()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_1_26()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_2_28()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_3_28()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_4_27()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_5_30()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_7_23()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9_24()
{
  return swift_release();
}

char *OUTLINED_FUNCTION_10_25()
{
  int64_t v0;

  return sub_240BF0AAC(0, v0, 0);
}

BOOL OUTLINED_FUNCTION_11_26@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_13_21(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;

  return sub_240CC4F3C(a10, v10, v11);
}

uint64_t OUTLINED_FUNCTION_16_22()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_17_23()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_19_15()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_20_14()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_22_12()
{
  return 8236;
}

uint64_t OUTLINED_FUNCTION_24_14()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_25_16()
{
  return sub_240F1CCCC();
}

void OUTLINED_FUNCTION_26_14()
{
  uint64_t v0;

  sub_240CC56EC(v0);
}

uint64_t sub_240CC5CE0(uint64_t a1, uint64_t a2)
{
  return sub_240CC5D38(a1, a2, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (void (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
}

uint64_t sub_240CC5D0C(uint64_t a1, uint64_t a2)
{
  return sub_240CC5D38(a1, a2, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, (void (*)(_QWORD))type metadata accessor for NeuralNetwork.Preprocessor);
}

uint64_t sub_240CC5D38(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), void (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  _QWORD v23[2];
  uint64_t v24;

  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v23 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v23[0] = a4;
    v23[1] = v5;
    v24 = MEMORY[0x24BEE4AF8];
    a4(0, v14, 0);
    v15 = v24;
    a5(0);
    OUTLINED_FUNCTION_51_2();
    v17 = a1 + v16;
    v19 = *(_QWORD *)(v18 + 72);
    do
    {
      sub_240C355AC(v17, (uint64_t)v13, a3);
      v24 = v15;
      v21 = *(_QWORD *)(v15 + 16);
      v20 = *(_QWORD *)(v15 + 24);
      if (v21 >= v20 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v23[0])(v20 > 1, v21 + 1, 1);
        v15 = v24;
      }
      *(_QWORD *)(v15 + 16) = v21 + 1;
      sub_240C35540((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v21, a3);
      v17 += v19;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_240CC5E8C(uint64_t a1, uint64_t a2)
{
  return sub_240CC5D38(a1, a2, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0E08, (void (*)(_QWORD))type metadata accessor for FeatureVectorizerConfiguration.Input);
}

Swift::Void __swiftcall Model.rename(feature:to:)(Swift::String feature, Swift::String to)
{
  uint64_t v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  char v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char v98;
  char v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int v110;
  uint64_t v111;
  uint64_t v112;
  void *v113;
  uint64_t v114;
  BOOL v115;
  char v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  void *v120;
  char v122;
  char *v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD v126[6];
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  void *object;
  uint64_t countAndFlagsBits;
  uint64_t v144;
  void *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;

  object = to._object;
  countAndFlagsBits = to._countAndFlagsBits;
  v3 = feature._object;
  v4 = feature._countAndFlagsBits;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_19_0(v7);
  v136 = type metadata accessor for MLProgram.Function();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v9);
  type metadata accessor for MLProgram();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v11);
  type metadata accessor for NeuralNetwork();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v13);
  type metadata accessor for NeuralNetworkRegressor();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_0();
  v16 = OUTLINED_FUNCTION_19_0(v15);
  v138 = *(_QWORD *)(type metadata accessor for NeuralNetwork.Preprocessor(v16) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_85();
  v146 = v18;
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_38_0();
  v148 = v21;
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_19_0(v25);
  v139 = *(_QWORD *)(type metadata accessor for NeuralNetwork.Layer() - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_85();
  v147 = v27;
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_19_0(v30);
  type metadata accessor for NeuralNetworkClassifier();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_2_0();
  v33 = OUTLINED_FUNCTION_19_0(v32);
  v137 = *(_QWORD *)(type metadata accessor for Model(v33) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_2_0();
  v36 = OUTLINED_FUNCTION_19_0(v35);
  type metadata accessor for PipelineConfiguration(v36);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_2_0();
  v39 = OUTLINED_FUNCTION_19_0(v38);
  type metadata accessor for PipelineRegressorConfiguration(v39);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_2_0();
  v129 = v41;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_386();
  v45 = OUTLINED_FUNCTION_19_0(v44);
  v134 = type metadata accessor for Proto_Pipeline(v45);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v46);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_386();
  v49 = OUTLINED_FUNCTION_19_0(v48);
  type metadata accessor for PipelineClassifierConfiguration(v49);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v50);
  OUTLINED_FUNCTION_2_0();
  v52 = OUTLINED_FUNCTION_19_0(v51);
  type metadata accessor for ItemSimilarityRecommenderConfiguration(v52);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v54);
  type metadata accessor for WordTaggerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  v57 = OUTLINED_FUNCTION_19_0(v56);
  type metadata accessor for NonMaximumSuppressorConfiguration(v57);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v58);
  OUTLINED_FUNCTION_2_0();
  v126[1] = v59;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435F950);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_2_0();
  v62 = OUTLINED_FUNCTION_19_0(v61);
  v128 = *(_QWORD *)(type metadata accessor for FeatureVectorizerConfiguration.Input(v62) - 8);
  OUTLINED_FUNCTION_1_1();
  v64 = MEMORY[0x24BDAC7A8](v63);
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_386();
  v66 = OUTLINED_FUNCTION_19_0(v65);
  type metadata accessor for FeatureVectorizerConfiguration(v66);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_0();
  v69 = OUTLINED_FUNCTION_19_0(v68);
  v135 = type metadata accessor for ModelKind(v69);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_386();
  v133 = v72;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FEC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_386();
  v76 = OUTLINED_FUNCTION_19_0(v75);
  v140 = type metadata accessor for Proto_ModelDescription(v76);
  OUTLINED_FUNCTION_0();
  v78 = MEMORY[0x24BDAC7A8](v77);
  v80 = (_QWORD *)((char *)v126 - ((v79 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v78);
  v82 = (_QWORD *)((char *)v126 - v81);
  Model.inputs.getter();
  v84 = v83;
  OUTLINED_FUNCTION_20_1();
  v85 = sub_240CC7FA0(v84, v4, (uint64_t)v3, (void (*)(_QWORD))type metadata accessor for FeatureDescription);
  v87 = v86;
  OUTLINED_FUNCTION_12_2();
  v141 = v2;
  v145 = v3;
  v88 = v4;
  v144 = v4;
  if ((v87 & 1) != 0)
  {
LABEL_6:
    v95 = v2;
    Model.outputs.getter();
    v97 = v96;
    OUTLINED_FUNCTION_20_1();
    v85 = sub_240CC7FA0(v97, v88, (uint64_t)v3, (void (*)(_QWORD))type metadata accessor for FeatureDescription);
    v99 = v98;
    OUTLINED_FUNCTION_42_2();
    if ((v99 & 1) != 0)
      goto LABEL_11;
    swift_bridgeObjectRetain();
    Model.outputs.getter();
    v101 = v100;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
    {
      if ((v85 & 0x8000000000000000) == 0)
        goto LABEL_9;
      goto LABEL_38;
    }
LABEL_37:
    sub_240C95894();
    v101 = v125;
    if ((v85 & 0x8000000000000000) == 0)
    {
LABEL_9:
      if (v85 < *(_QWORD *)(v101 + 16))
      {
        type metadata accessor for FeatureDescription();
        OUTLINED_FUNCTION_59_1();
        v104 = (_QWORD *)(v103 + v102 * v85);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_78_5();
        *v104 = v106;
        v104[1] = v105;
        OUTLINED_FUNCTION_83_5();
        v95 = v101;
        Model.outputs.setter();
LABEL_11:
        v130 = 0;
        v127 = type metadata accessor for Proto_Model(0);
        v107 = *(int *)(v127 + 20);
        v108 = *(_QWORD *)(v95 + v107)
             + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
        OUTLINED_FUNCTION_80_2();
        v109 = v131;
        sub_240C02F94(v108, v131, &qword_25435FEC0);
        v110 = OUTLINED_FUNCTION_49_10(v109);
        v111 = MEMORY[0x24BEE4AF8];
        if (v110 == 1)
        {
          *v82 = MEMORY[0x24BEE4AF8];
          v82[1] = 0;
          v82[2] = 0xE000000000000000;
          v82[3] = v111;
          v82[4] = v111;
          v82[5] = 0;
          v82[6] = 0xE000000000000000;
          v82[7] = 0;
          v82[8] = 0xE000000000000000;
          v82[9] = v111;
          _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
          v112 = type metadata accessor for Proto_Metadata(0);
          OUTLINED_FUNCTION_4_6(v112);
          sub_240BE0B68(v109, &qword_25435FEC0);
        }
        else
        {
          sub_240C35540(v109, (uint64_t)v82, type metadata accessor for Proto_ModelDescription);
        }
        v114 = v82[5];
        v113 = (void *)v82[6];
        OUTLINED_FUNCTION_329();
        sub_240BE10B8((uint64_t)v82, type metadata accessor for Proto_ModelDescription);
        v115 = v114 == v144 && v113 == v145;
        if (v115)
        {
          OUTLINED_FUNCTION_29_16();
        }
        else
        {
          v116 = OUTLINED_FUNCTION_51_0();
          OUTLINED_FUNCTION_42_2();
          if ((v116 & 1) == 0)
          {
LABEL_22:
            v117 = *(_QWORD *)(v141 + v107)
                 + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
            OUTLINED_FUNCTION_80_2();
            v118 = v132;
            sub_240C02F94(v117, v132, &qword_25435FEC0);
            if (OUTLINED_FUNCTION_49_10(v118) == 1)
            {
              *v80 = v111;
              v80[1] = 0;
              v80[2] = 0xE000000000000000;
              v80[3] = v111;
              v80[4] = v111;
              v80[5] = 0;
              v80[6] = 0xE000000000000000;
              v80[7] = 0;
              v80[8] = 0xE000000000000000;
              v80[9] = v111;
              _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
              v119 = type metadata accessor for Proto_Metadata(0);
              OUTLINED_FUNCTION_4_6(v119);
              sub_240BE0B68(v118, &qword_25435FEC0);
            }
            else
            {
              sub_240C35540(v118, (uint64_t)v80, type metadata accessor for Proto_ModelDescription);
            }
            v120 = (void *)v80[8];
            OUTLINED_FUNCTION_329();
            sub_240BE10B8((uint64_t)v80, type metadata accessor for Proto_ModelDescription);
            OUTLINED_FUNCTION_60_6();
            if (v115 && v120 == v145)
            {
              OUTLINED_FUNCTION_29_16();
            }
            else
            {
              v122 = OUTLINED_FUNCTION_51_0();
              OUTLINED_FUNCTION_42_2();
              if ((v122 & 1) == 0)
              {
LABEL_33:
                Model.kind.getter();
                v123 = (char *)&loc_240CC67E0 + dword_240CC7F0C[swift_getEnumCaseMultiPayload()];
                __asm { BR              X10 }
              }
            }
            swift_bridgeObjectRetain();
            OUTLINED_FUNCTION_83_5();
            Model.predictedProbabilitiesName.setter();
            goto LABEL_33;
          }
        }
        OUTLINED_FUNCTION_329();
        OUTLINED_FUNCTION_83_5();
        Model.predictedFeatureName.setter();
        goto LABEL_22;
      }
LABEL_39:
      __break(1u);
      JUMPOUT(0x240CC7EF8);
    }
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  swift_bridgeObjectRetain();
  Model.inputs.getter();
  v2 = v89;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((v85 & 0x8000000000000000) == 0)
      goto LABEL_4;
  }
  else
  {
    sub_240C95894();
    v2 = v124;
    if ((v85 & 0x8000000000000000) == 0)
    {
LABEL_4:
      if (v85 < *(_QWORD *)(v2 + 16))
      {
        type metadata accessor for FeatureDescription();
        OUTLINED_FUNCTION_59_1();
        v92 = (_QWORD *)(v91 + v90 * v85);
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_78_5();
        *v92 = v94;
        v92[1] = v93;
        OUTLINED_FUNCTION_83_5();
        Model.inputs.setter();
        v3 = v145;
        v88 = v144;
        goto LABEL_6;
      }
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
  }
  __break(1u);
  goto LABEL_36;
}

uint64_t sub_240CC7FA0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;

  v5 = *(_QWORD *)(a1 + 16);
  if (v5)
  {
    a4(0);
    v8 = 0;
    OUTLINED_FUNCTION_51_2();
    v10 = *(_QWORD *)(v9 + 72);
    v12 = (_QWORD *)(v11 + a1 + 8);
    while (1)
    {
      v13 = *(v12 - 1) == a2 && *v12 == a3;
      if (v13 || (sub_240F1CEDC() & 1) != 0)
        break;
      v12 = (_QWORD *)((char *)v12 + v10);
      if (v5 == ++v8)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    v8 = 0;
  }
  swift_bridgeObjectRelease();
  return v8;
}

void sub_240CC805C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD **v11;
  uint64_t v12;
  char v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD **v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v5 = v4;
  v10 = *(int *)(type metadata accessor for Proto_NeuralNetworkLayer(0) + 20);
  v11 = (_QWORD **)(*(_QWORD *)(v4 + v10) + 32);
  swift_beginAccess();
  v12 = sub_240CC8CF0(a1, a2, *v11);
  if ((v13 & 1) != 0)
    goto LABEL_8;
  v14 = v12;
  v15 = (uint64_t)*v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_4;
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  sub_240C95834();
  v15 = v26;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_17;
LABEL_4:
  if (v14 >= *(_QWORD *)(v15 + 16))
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  v16 = v15 + 16 * v14;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_NeuralNetworkLayer._StorageClass(0);
    swift_allocObject();
    swift_retain();
    sub_240E348BC();
    *(_QWORD *)(v5 + v10) = v17;
    swift_release();
  }
  v18 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  *(_QWORD *)(v18 + 32) = v15;
  swift_bridgeObjectRelease();
LABEL_8:
  v19 = (_QWORD **)(*(_QWORD *)(v5 + v10) + 40);
  swift_beginAccess();
  v20 = sub_240CC8CF0(a1, a2, *v19);
  if ((v21 & 1) != 0)
    return;
  v14 = v20;
  v22 = (uint64_t)*v19;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((v14 & 0x8000000000000000) == 0)
      goto LABEL_11;
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_19:
  sub_240C95834();
  v22 = v27;
  if ((v14 & 0x8000000000000000) != 0)
    goto LABEL_20;
LABEL_11:
  if (v14 >= *(_QWORD *)(v22 + 16))
  {
LABEL_21:
    __break(1u);
    return;
  }
  v23 = v22 + 16 * v14;
  *(_QWORD *)(v23 + 32) = a3;
  *(_QWORD *)(v23 + 40) = a4;
  swift_bridgeObjectRelease();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_NeuralNetworkLayer._StorageClass(0);
    swift_allocObject();
    swift_retain();
    sub_240E348BC();
    *(_QWORD *)(v5 + v10) = v24;
    swift_release();
  }
  v25 = *(_QWORD *)(v5 + v10);
  swift_beginAccess();
  *(_QWORD *)(v25 + 40) = v22;
  swift_bridgeObjectRelease();
}

void sub_240CC82A4(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t *v4;
  unint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  unint64_t v33;
  unint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  BOOL v42;
  int64_t v43;
  unint64_t v44;
  int64_t v45;
  uint64_t *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  _QWORD *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t isUniquelyReferenced_nonNull_native;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  int64_t v99;
  unint64_t *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  int64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  unint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  int64_t v116;
  unint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  _QWORD *v123;

  v5 = v4;
  v104 = a3;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBE8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v97 = (unint64_t)&v97 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x24BDAC7A8](v10);
  v14 = (unint64_t)&v97 - v13;
  MEMORY[0x24BDAC7A8](v12);
  v103 = (uint64_t)&v97 - v15;
  v16 = type metadata accessor for Proto_MILSpec_Block(0);
  v119 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  v118 = (uint64_t)&v97 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = type metadata accessor for MLProgram.Block();
  v120 = *(_QWORD *)(v18 - 8);
  v19 = MEMORY[0x24BDAC7A8](v18);
  v121 = (unint64_t)&v97 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v19);
  v113 = (uint64_t)&v97 - v21;
  MLProgram.Function.inputs.getter();
  v23 = v22;
  swift_bridgeObjectRetain();
  v101 = a1;
  v24 = a1;
  v102 = a2;
  v25 = 0;
  v26 = sub_240CC7FA0(v23, v24, a2, (void (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
  v28 = v27;
  swift_bridgeObjectRelease();
  v105 = a4;
  if ((v28 & 1) != 0)
    goto LABEL_6;
  swift_bridgeObjectRetain();
  MLProgram.Function.inputs.getter();
  v30 = v29;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_100;
  if ((v26 & 0x8000000000000000) != 0)
    goto LABEL_101;
  do
  {
    if (v26 >= *(_QWORD *)(v30 + 16))
      goto LABEL_102;
    v31 = type metadata accessor for MLProgram.NamedValueType();
    v32 = (_QWORD *)(v30
                   + ((*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v31 - 8) + 80))
                   + *(_QWORD *)(*(_QWORD *)(v31 - 8) + 72) * v26);
    swift_bridgeObjectRelease();
    v33 = v105;
    *v32 = v104;
    v32[1] = v33;
    sub_240C624BC();
    v26 = v34;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v5 = v26;
LABEL_6:
    sub_240C66C58();
    v109 = v25;
    v35 = 0;
    v37 = *(_QWORD *)(v36 + 64);
    v98 = v36 + 64;
    v106 = v36;
    v38 = 1 << *(_BYTE *)(v36 + 32);
    if (v38 < 64)
      v39 = ~(-1 << v38);
    else
      v39 = -1;
    v40 = v39 & v37;
    v99 = (unint64_t)(v38 + 63) >> 6;
    v111 = v18;
    v112 = v14;
    v100 = v5;
    if (v40)
    {
LABEL_10:
      v107 = (v40 - 1) & v40;
      v108 = v35;
      v41 = __clz(__rbit64(v40)) | (v35 << 6);
    }
    else
    {
LABEL_11:
      v42 = __OFADD__(v35, 1);
      v43 = v35 + 1;
      if (v42)
        goto LABEL_99;
      if (v43 >= v99)
      {
LABEL_94:
        swift_release();
        return;
      }
      v44 = *(_QWORD *)(v98 + 8 * v43);
      if (!v44)
      {
        v45 = v43 + 1;
        if (v43 + 1 >= v99)
          goto LABEL_94;
        v44 = *(_QWORD *)(v98 + 8 * v45);
        if (!v44)
        {
          v45 = v43 + 2;
          if (v43 + 2 >= v99)
            goto LABEL_94;
          v44 = *(_QWORD *)(v98 + 8 * v45);
          if (!v44)
          {
            v45 = v43 + 3;
            if (v43 + 3 >= v99)
              goto LABEL_94;
            v44 = *(_QWORD *)(v98 + 8 * v45);
            if (!v44)
            {
              v45 = v43 + 4;
              if (v43 + 4 >= v99)
                goto LABEL_94;
              v44 = *(_QWORD *)(v98 + 8 * v45);
              if (!v44)
              {
                v45 = v43 + 5;
                if (v43 + 5 >= v99)
                  goto LABEL_94;
                v44 = *(_QWORD *)(v98 + 8 * v45);
                if (!v44)
                {
                  while (1)
                  {
                    v43 = v45 + 1;
                    if (__OFADD__(v45, 1))
                      goto LABEL_103;
                    if (v43 >= v99)
                      goto LABEL_94;
                    v44 = *(_QWORD *)(v98 + 8 * v43);
                    ++v45;
                    if (v44)
                      goto LABEL_25;
                  }
                }
              }
            }
          }
        }
        v43 = v45;
      }
LABEL_25:
      v107 = (v44 - 1) & v44;
      v108 = v43;
      v41 = __clz(__rbit64(v44)) + (v43 << 6);
    }
    v46 = (uint64_t *)(*(_QWORD *)(v106 + 48) + 16 * v41);
    v48 = *v46;
    v47 = v46[1];
    v114 = v48;
    v115 = v47;
    v49 = v5[3];
    v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC08);
    v50 = sub_240F1CE64();
    v51 = (_QWORD *)v50;
    v18 = 0;
    v52 = 1 << *(_BYTE *)(v49 + 32);
    v53 = *(_QWORD *)(v49 + 64);
    v117 = v49 + 64;
    if (v52 < 64)
      v54 = ~(-1 << v52);
    else
      v54 = -1;
    v14 = v54 & v53;
    v116 = (unint64_t)(v52 + 63) >> 6;
    v5 = (unint64_t *)(v50 + 64);
    if ((v54 & v53) != 0)
    {
LABEL_30:
      v55 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      v26 = v55 | (v18 << 6);
      goto LABEL_44;
    }
    while (1)
    {
      v42 = __OFADD__(v18++, 1);
      if (v42)
      {
        __break(1u);
LABEL_96:
        __break(1u);
        goto LABEL_97;
      }
      if (v18 >= v116)
        goto LABEL_51;
      v56 = *(_QWORD *)(v117 + 8 * v18);
      if (!v56)
        break;
LABEL_43:
      v14 = (v56 - 1) & v56;
      v26 = __clz(__rbit64(v56)) + (v18 << 6);
LABEL_44:
      v58 = (uint64_t *)(*(_QWORD *)(v49 + 48) + 16 * v26);
      v59 = *v58;
      v25 = v58[1];
      v60 = v118;
      sub_240C355AC(*(_QWORD *)(v49 + 56) + *(_QWORD *)(v119 + 72) * v26, v118, type metadata accessor for Proto_MILSpec_Block);
      v61 = v60;
      v62 = v121;
      sub_240C35540(v61, v121, type metadata accessor for Proto_MILSpec_Block);
      *(unint64_t *)((char *)v5 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      v63 = (_QWORD *)(v51[6] + 16 * v26);
      *v63 = v59;
      v63[1] = v25;
      sub_240C35540(v62, v51[7] + *(_QWORD *)(v120 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
      v64 = v51[2];
      v42 = __OFADD__(v64, 1);
      v65 = v64 + 1;
      if (v42)
      {
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      v51[2] = v65;
      swift_bridgeObjectRetain();
      if (v14)
        goto LABEL_30;
    }
    v57 = v18 + 1;
    if (v18 + 1 >= v116)
      goto LABEL_51;
    v56 = *(_QWORD *)(v117 + 8 * v57);
    if (v56)
      goto LABEL_42;
    v57 = v18 + 2;
    if (v18 + 2 >= v116)
      goto LABEL_51;
    v56 = *(_QWORD *)(v117 + 8 * v57);
    if (v56)
      goto LABEL_42;
    v57 = v18 + 3;
    if (v18 + 3 >= v116)
      goto LABEL_51;
    v56 = *(_QWORD *)(v117 + 8 * v57);
    if (v56)
      goto LABEL_42;
    v57 = v18 + 4;
    if (v18 + 4 >= v116)
    {
LABEL_51:
      v66 = v111;
      v25 = v112;
      v67 = v115;
      v26 = v105;
      v68 = v103;
      if (v51[2])
      {
        swift_bridgeObjectRetain_n();
        v69 = sub_240C66A40(v114, v67);
        if ((v70 & 1) != 0)
        {
          sub_240C355AC(v51[7] + *(_QWORD *)(v120 + 72) * v69, v68, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
          v71 = v68;
          v72 = 0;
        }
        else
        {
          v71 = v68;
          v72 = 1;
        }
        __swift_storeEnumTagSinglePayload(v71, v72, 1, v66);
        swift_bridgeObjectRelease();
      }
      else
      {
        __swift_storeEnumTagSinglePayload(v103, 1, 1, v111);
        swift_bridgeObjectRetain();
      }
      swift_release();
      if (__swift_getEnumTagSinglePayload(v68, 1, v66) == 1)
        goto LABEL_104;
      v73 = v113;
      sub_240C35540(v68, v113, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
      sub_240CC8DD4(v101, v102, v104, v26);
      sub_240C355AC(v73, v25, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
      __swift_storeEnumTagSinglePayload(v25, 0, 1, v66);
      v74 = sub_240F1CE64();
      v75 = (_QWORD *)v74;
      v18 = 0;
      v76 = 1 << *(_BYTE *)(v49 + 32);
      v77 = *(_QWORD *)(v49 + 64);
      if (v76 < 64)
        v78 = ~(-1 << v76);
      else
        v78 = -1;
      v14 = v78 & v77;
      v116 = (unint64_t)(v76 + 63) >> 6;
      v5 = (unint64_t *)(v74 + 64);
      if ((v78 & v77) != 0)
      {
LABEL_62:
        v79 = __clz(__rbit64(v14));
        v14 &= v14 - 1;
        v26 = v79 | (v18 << 6);
        goto LABEL_76;
      }
      while (1)
      {
        v42 = __OFADD__(v18++, 1);
        if (v42)
          goto LABEL_96;
        if (v18 >= v116)
          goto LABEL_83;
        v80 = *(_QWORD *)(v117 + 8 * v18);
        if (!v80)
        {
          v81 = v18 + 1;
          if (v18 + 1 >= v116)
            goto LABEL_83;
          v80 = *(_QWORD *)(v117 + 8 * v81);
          if (!v80)
          {
            v81 = v18 + 2;
            if (v18 + 2 >= v116)
              goto LABEL_83;
            v80 = *(_QWORD *)(v117 + 8 * v81);
            if (!v80)
            {
              v81 = v18 + 3;
              if (v18 + 3 >= v116)
                goto LABEL_83;
              v80 = *(_QWORD *)(v117 + 8 * v81);
              if (!v80)
              {
                v81 = v18 + 4;
                if (v18 + 4 >= v116)
                {
LABEL_83:
                  v5 = v100;
                  v90 = v112;
                  v91 = v115;
                  v123 = v75;
                  if (__swift_getEnumTagSinglePayload(v112, 1, v111) == 1)
                  {
                    sub_240BE0B68(v90, &qword_25708CBE8);
                    v26 = v97;
                    sub_240C6FB78(v114, v91, v97);
                    swift_bridgeObjectRelease();
                    sub_240BE0B68(v26, &qword_25708CBE8);
                  }
                  else
                  {
                    v92 = v90;
                    v26 = v121;
                    sub_240C35540(v92, v121, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
                    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                    v122 = v75;
                    sub_240DAF0D8(v26, v114, v91, isUniquelyReferenced_nonNull_native);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                  }
                  v25 = v109;
                  sub_240C66ED4();
                  v95 = v94;
                  v109 = v25;
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  v5[3] = v95;
                  sub_240BE10B8(v113, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
                  v40 = v107;
                  v35 = v108;
                  if (v107)
                    goto LABEL_10;
                  goto LABEL_11;
                }
                v80 = *(_QWORD *)(v117 + 8 * v81);
                if (!v80)
                {
                  while (1)
                  {
                    v18 = v81 + 1;
                    if (__OFADD__(v81, 1))
                      goto LABEL_98;
                    if (v18 >= v116)
                      goto LABEL_83;
                    v80 = *(_QWORD *)(v117 + 8 * v18);
                    ++v81;
                    if (v80)
                      goto LABEL_75;
                  }
                }
              }
            }
          }
          v18 = v81;
        }
LABEL_75:
        v14 = (v80 - 1) & v80;
        v26 = __clz(__rbit64(v80)) + (v18 << 6);
LABEL_76:
        v82 = (uint64_t *)(*(_QWORD *)(v49 + 48) + 16 * v26);
        v83 = *v82;
        v25 = v82[1];
        v84 = v118;
        sub_240C355AC(*(_QWORD *)(v49 + 56) + *(_QWORD *)(v119 + 72) * v26, v118, type metadata accessor for Proto_MILSpec_Block);
        v85 = v84;
        v86 = v121;
        sub_240C35540(v85, v121, type metadata accessor for Proto_MILSpec_Block);
        *(unint64_t *)((char *)v5 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
        v87 = (_QWORD *)(v75[6] + 16 * v26);
        *v87 = v83;
        v87[1] = v25;
        sub_240C35540(v86, v75[7] + *(_QWORD *)(v120 + 72) * v26, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
        v88 = v75[2];
        v42 = __OFADD__(v88, 1);
        v89 = v88 + 1;
        if (v42)
          goto LABEL_93;
        v75[2] = v89;
        swift_bridgeObjectRetain();
        if (v14)
          goto LABEL_62;
      }
    }
    v56 = *(_QWORD *)(v117 + 8 * v57);
    if (v56)
    {
LABEL_42:
      v18 = v57;
      goto LABEL_43;
    }
    while (1)
    {
      v18 = v57 + 1;
      if (__OFADD__(v57, 1))
        break;
      if (v18 >= v116)
        goto LABEL_51;
      v56 = *(_QWORD *)(v117 + 8 * v18);
      ++v57;
      if (v56)
        goto LABEL_43;
    }
LABEL_97:
    __break(1u);
LABEL_98:
    __break(1u);
LABEL_99:
    __break(1u);
LABEL_100:
    sub_240C95844();
    v30 = v96;
  }
  while ((v26 & 0x8000000000000000) == 0);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
}

uint64_t sub_240CC8CF0(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  BOOL v7;
  uint64_t result;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char v13;

  v3 = a3[2];
  if (!v3)
    return 0;
  v7 = a3[4] == a1 && a3[5] == a2;
  if (v7 || (sub_240F1CEDC() & 1) != 0)
    return 0;
  v9 = 0;
  v10 = a3 + 7;
  v11 = 1;
  while (1)
  {
    if (v3 == v11)
      return 0;
    ++v9;
    if (*(v10 - 1) == a1 && *v10 == a2)
      break;
    v13 = sub_240F1CEDC();
    result = v11++;
    v10 += 2;
    if ((v13 & 1) != 0)
      return result;
  }
  return v9;
}

void sub_240CC8DD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  char v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  char v33[8];
  char v34[16];

  v5 = v4;
  MLProgram.Block.inputs.getter();
  v10 = v9;
  swift_bridgeObjectRetain();
  v11 = sub_240CC7FA0(v10, a1, a2, (void (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
  v13 = v12;
  swift_bridgeObjectRelease();
  if ((v13 & 1) != 0)
    goto LABEL_6;
  swift_bridgeObjectRetain();
  MLProgram.Block.inputs.getter();
  v15 = v14;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    goto LABEL_19;
  if ((v11 & 0x8000000000000000) != 0)
    goto LABEL_20;
LABEL_4:
  if (v11 >= *(_QWORD *)(v15 + 16))
  {
    while (1)
    {
      __break(1u);
LABEL_22:
      sub_240C95834();
      v22 = v31;
      if ((v11 & 0x8000000000000000) != 0)
        break;
LABEL_9:
      if (v11 >= v22[2])
        goto LABEL_24;
      v23 = &v22[2 * v11];
      v23[4] = a3;
      v23[5] = a4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5[1] = (uint64_t)v22;
LABEL_11:
      MLProgram.Block.operations.getter();
      v25 = *(_QWORD *)(v24 + 16);
      swift_bridgeObjectRelease();
      if (!v25)
        return;
      v26 = 0;
      while (1)
      {
        MLProgram.Block.operations.getter();
        v11 = v27;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240C95814();
          v11 = v29;
        }
        if (v26 >= *(_QWORD *)(v11 + 16))
          break;
        type metadata accessor for MLProgram.Operation();
        sub_240CC9044(a1, a2, a3, a4);
        v28 = sub_240CB3E58(v11, (uint64_t)v34);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v5[2] = v28;
        if (v25 == ++v26)
          return;
      }
      __break(1u);
LABEL_19:
      sub_240C95844();
      v15 = v30;
      if ((v11 & 0x8000000000000000) == 0)
        goto LABEL_4;
LABEL_20:
      __break(1u);
    }
  }
  else
  {
    v16 = type metadata accessor for MLProgram.NamedValueType();
    v17 = (uint64_t *)(v15
                    + ((*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v16 - 8) + 80))
                    + *(_QWORD *)(*(_QWORD *)(v16 - 8) + 72) * v11);
    swift_bridgeObjectRelease();
    *v17 = a3;
    v17[1] = a4;
    v18 = sub_240CB3BDC(v15, (uint64_t)v33);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *v5 = v18;
LABEL_6:
    v19 = (_QWORD *)v5[1];
    v20 = sub_240CC8CF0(a1, a2, v19);
    if ((v21 & 1) != 0)
      goto LABEL_11;
    v11 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v22 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_22;
    if ((v11 & 0x8000000000000000) == 0)
      goto LABEL_9;
  }
  __break(1u);
LABEL_24:
  __break(1u);
}

void sub_240CC9044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  BOOL v40;
  int64_t v41;
  unint64_t v42;
  int64_t v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t *v69;
  uint64_t v70;
  unint64_t v71;
  char v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  _QWORD *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD *v83;
  uint64_t v84;
  uint64_t v85;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  int64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  char v132;
  char v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  int64_t v151;
  uint64_t v152;
  uint64_t v153;
  int64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  _QWORD *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  _QWORD *v168;
  uint64_t v169;
  int64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char v185[8];
  _QWORD *v186;
  _QWORD *v187;

  v162 = a4;
  v161 = a3;
  v164 = a2;
  v163 = a1;
  v5 = type metadata accessor for MLProgram.Value();
  MEMORY[0x24BDAC7A8](v5);
  v180 = (uint64_t)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Proto_MILSpec_Argument.Binding(0);
  v181 = *(_QWORD *)(v7 - 8);
  v182 = v7;
  v8 = MEMORY[0x24BDAC7A8](v7);
  v10 = (uint64_t *)((char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v148 - v11;
  v183 = type metadata accessor for MLProgram.Argument.Binding(0);
  v166 = *(_QWORD *)(v183 - 8);
  v13 = MEMORY[0x24BDAC7A8](v183);
  v15 = (uint64_t *)((char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = MEMORY[0x24BDAC7A8](v13);
  v184 = (uint64_t)&v148 - v17;
  MEMORY[0x24BDAC7A8](v16);
  v167 = (char *)&v148 - v18;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB20);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v149 = (uint64_t)&v148 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x24BDAC7A8](v20);
  v165 = (uint64_t)&v148 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v152 = (uint64_t)&v148 - v24;
  v25 = type metadata accessor for Proto_MILSpec_Argument(0);
  v177 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v176 = (uint64_t)&v148 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v171 = type metadata accessor for MLProgram.Argument(0);
  v178 = *(_QWORD *)(v171 - 8);
  v27 = MEMORY[0x24BDAC7A8](v171);
  v179 = (uint64_t)&v148 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v27);
  v168 = (uint64_t *)((char *)&v148 - v29);
  v30 = 0;
  sub_240C5A310();
  v31 = 0;
  v33 = *(_QWORD *)(v32 + 64);
  v150 = v32 + 64;
  v153 = v32;
  v34 = 1 << *(_BYTE *)(v32 + 32);
  if (v34 < 64)
    v35 = ~(-1 << v34);
  else
    v35 = -1;
  v36 = v35 & v33;
  v151 = (unint64_t)(v34 + 63) >> 6;
  v37 = (unint64_t)type metadata accessor for MLProgram.Argument;
  v38 = (uint64_t)v12;
  v175 = v12;
  v158 = v4;
  if (!v36)
    goto LABEL_6;
  do
  {
    v155 = v30;
    v156 = (v36 - 1) & v36;
    v154 = v31;
    v39 = __clz(__rbit64(v36)) | (v31 << 6);
LABEL_21:
    v44 = (uint64_t *)(*(_QWORD *)(v153 + 48) + 16 * v39);
    v46 = *v44;
    v45 = v44[1];
    v159 = v46;
    v160 = v45;
    v47 = v4[2];
    v157 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB28);
    v48 = sub_240F1CE64();
    v4 = (_QWORD *)v48;
    v49 = 0;
    v50 = 1 << *(_BYTE *)(v47 + 32);
    v173 = v47;
    v174 = v48;
    v51 = *(_QWORD *)(v47 + 64);
    v169 = v47 + 64;
    if (v50 < 64)
      v52 = ~(-1 << v50);
    else
      v52 = -1;
    v53 = v52 & v51;
    v170 = (unint64_t)(v50 + 63) >> 6;
    v172 = v48 + 64;
    if ((v52 & v51) != 0)
    {
LABEL_25:
      v54 = __clz(__rbit64(v53));
      v53 &= v53 - 1;
      v55 = v54 | (v49 << 6);
      goto LABEL_39;
    }
    while (1)
    {
      v40 = __OFADD__(v49++, 1);
      if (v40)
      {
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
        goto LABEL_130;
      }
      if (v49 >= v170)
      {
        v69 = (uint64_t *)v167;
        v57 = v171;
        goto LABEL_48;
      }
      v56 = *(_QWORD *)(v169 + 8 * v49);
      v57 = v171;
      if (!v56)
        break;
LABEL_38:
      v53 = (v56 - 1) & v56;
      v55 = __clz(__rbit64(v56)) + (v49 << 6);
LABEL_39:
      v59 = (uint64_t *)(*(_QWORD *)(v173 + 48) + 16 * v55);
      v61 = *v59;
      v60 = v59[1];
      v62 = v176;
      sub_240C355AC(*(_QWORD *)(v173 + 56) + *(_QWORD *)(v177 + 72) * v55, v176, type metadata accessor for Proto_MILSpec_Argument);
      v63 = v62;
      v64 = v179;
      sub_240C35540(v63, v179, type metadata accessor for Proto_MILSpec_Argument);
      *(_QWORD *)(v172 + ((v55 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v55;
      v4 = (_QWORD *)v174;
      v65 = (_QWORD *)(*(_QWORD *)(v174 + 48) + 16 * v55);
      *v65 = v61;
      v65[1] = v60;
      v66 = v64;
      v37 = (unint64_t)type metadata accessor for MLProgram.Argument;
      sub_240C35540(v66, v4[7] + *(_QWORD *)(v178 + 72) * v55, type metadata accessor for MLProgram.Argument);
      v67 = v4[2];
      v40 = __OFADD__(v67, 1);
      v68 = v67 + 1;
      if (v40)
      {
        __break(1u);
LABEL_120:
        __break(1u);
        goto LABEL_121;
      }
      v4[2] = v68;
      swift_bridgeObjectRetain();
      v38 = (uint64_t)v175;
      if (v53)
        goto LABEL_25;
    }
    v58 = v49 + 1;
    if (v49 + 1 >= v170)
      goto LABEL_47;
    v56 = *(_QWORD *)(v169 + 8 * v58);
    if (v56)
      goto LABEL_37;
    v58 = v49 + 2;
    if (v49 + 2 >= v170)
      goto LABEL_47;
    v56 = *(_QWORD *)(v169 + 8 * v58);
    if (v56)
      goto LABEL_37;
    v58 = v49 + 3;
    if (v49 + 3 >= v170)
      goto LABEL_47;
    v56 = *(_QWORD *)(v169 + 8 * v58);
    if (v56)
      goto LABEL_37;
    v58 = v49 + 4;
    if (v49 + 4 < v170)
    {
      v56 = *(_QWORD *)(v169 + 8 * v58);
      if (!v56)
      {
        while (1)
        {
          v49 = v58 + 1;
          if (__OFADD__(v58, 1))
            break;
          if (v49 >= v170)
            goto LABEL_47;
          v56 = *(_QWORD *)(v169 + 8 * v49);
          ++v58;
          if (v56)
            goto LABEL_38;
        }
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
        goto LABEL_133;
      }
LABEL_37:
      v49 = v58;
      goto LABEL_38;
    }
LABEL_47:
    v69 = (uint64_t *)v167;
LABEL_48:
    v70 = v160;
    if (v4[2])
    {
      swift_bridgeObjectRetain_n();
      v71 = sub_240C66A40(v159, v70);
      v73 = v152;
      if ((v72 & 1) != 0)
      {
        sub_240C355AC(v4[7] + *(_QWORD *)(v178 + 72) * v71, v152, type metadata accessor for MLProgram.Argument);
        v74 = v73;
        v75 = 0;
      }
      else
      {
        v74 = v152;
        v75 = 1;
      }
      v57 = v171;
      __swift_storeEnumTagSinglePayload(v74, v75, 1, v171);
      swift_bridgeObjectRelease();
    }
    else
    {
      v73 = v152;
      __swift_storeEnumTagSinglePayload(v152, 1, 1, v57);
      swift_bridgeObjectRetain();
    }
    swift_release();
    if (__swift_getEnumTagSinglePayload(v73, 1, v57) == 1)
      goto LABEL_137;
    v76 = v168;
    sub_240C35540(v73, (uint64_t)v168, type metadata accessor for MLProgram.Argument);
    v77 = *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16);
    swift_bridgeObjectRelease();
    v172 = v77;
    if (v77)
    {
      v78 = 0;
      do
      {
        v79 = MLProgram.Argument.bindings.getter();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240C95804();
          v79 = v96;
        }
        v37 = (unint64_t)type metadata accessor for MLProgram.Argument.Binding;
        if (v78 >= *(_QWORD *)(v79 + 16))
        {
          __break(1u);
          goto LABEL_128;
        }
        v80 = (*(unsigned __int8 *)(v166 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v166 + 80);
        v174 = v79;
        v81 = v79 + v80;
        v82 = *(_QWORD *)(v166 + 72);
        v83 = (_QWORD *)(v79 + v80 + v82 * v78);
        sub_240C355AC((uint64_t)v83, (uint64_t)v69, type metadata accessor for MLProgram.Argument.Binding);
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          sub_240BE10B8((uint64_t)v69, type metadata accessor for MLProgram.Argument.Binding);
        }
        else
        {
          v84 = *v69;
          v85 = v69[1];
          if (v84 == v163 && v85 == v164)
          {
            swift_bridgeObjectRelease();
          }
          else
          {
            v87 = sub_240F1CEDC();
            swift_bridgeObjectRelease();
            if ((v87 & 1) == 0)
              goto LABEL_70;
          }
          sub_240BE10B8((uint64_t)v83, type metadata accessor for MLProgram.Argument.Binding);
          v88 = v162;
          *v83 = v161;
          v83[1] = v88;
          swift_storeEnumTagMultiPayload();
          swift_bridgeObjectRetain();
        }
LABEL_70:
        v89 = *(_QWORD *)(v174 + 16);
        if (v89)
        {
          v173 = v78;
          v187 = (_QWORD *)MEMORY[0x24BEE4AF8];
          sub_240BF0B78();
          do
          {
            v90 = v184;
            sub_240C355AC(v81, v184, type metadata accessor for MLProgram.Argument.Binding);
            v91 = type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding(0);
            __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v91);
            _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
            sub_240BE0B68((uint64_t)v10, &qword_25708C0F8);
            sub_240C355AC(v90, (uint64_t)v15, type metadata accessor for MLProgram.Argument.Binding);
            if (swift_getEnumCaseMultiPayload() == 1)
            {
              v92 = v180;
              sub_240C35540((uint64_t)v15, v180, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
              sub_240C35540(v92, (uint64_t)v10, type metadata accessor for Proto_MILSpec_Value);
            }
            else
            {
              v93 = v15[1];
              *v10 = *v15;
              v10[1] = v93;
            }
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v91);
            sub_240C35540((uint64_t)v10, v38, type metadata accessor for Proto_MILSpec_Argument.Binding);
            sub_240BE10B8(v184, type metadata accessor for MLProgram.Argument.Binding);
            v94 = v187;
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_240BF0B78();
              v94 = v187;
            }
            v95 = v94[2];
            if (v95 >= v94[3] >> 1)
            {
              sub_240BF0B78();
              v94 = v187;
            }
            v94[2] = v95 + 1;
            sub_240C35540(v38, (uint64_t)v94+ ((*(unsigned __int8 *)(v181 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v181 + 80))+ *(_QWORD *)(v181 + 72) * v95, type metadata accessor for Proto_MILSpec_Argument.Binding);
            v81 += v82;
            --v89;
          }
          while (v89);
          swift_bridgeObjectRelease();
          v78 = v173;
        }
        else
        {
          swift_bridgeObjectRelease();
          v94 = (_QWORD *)MEMORY[0x24BEE4AF8];
        }
        ++v78;
        v76 = v168;
        swift_bridgeObjectRelease();
        *v76 = v94;
        v69 = (uint64_t *)v167;
        v37 = (unint64_t)type metadata accessor for MLProgram.Argument;
      }
      while (v78 != v172);
    }
    v97 = (uint64_t)v76;
    v98 = v165;
    sub_240C355AC(v97, v165, type metadata accessor for MLProgram.Argument);
    __swift_storeEnumTagSinglePayload(v98, 0, 1, v171);
    v99 = v158[2];
    v100 = sub_240F1CE64();
    v4 = (_QWORD *)v100;
    v101 = 0;
    v102 = 1 << *(_BYTE *)(v99 + 32);
    v173 = v99;
    v174 = v100;
    v103 = *(_QWORD *)(v99 + 64);
    v169 = v99 + 64;
    if (v102 < 64)
      v104 = ~(-1 << v102);
    else
      v104 = -1;
    v105 = v104 & v103;
    v170 = (unint64_t)(v102 + 63) >> 6;
    v172 = v100 + 64;
    if ((v104 & v103) != 0)
    {
LABEL_87:
      v106 = __clz(__rbit64(v105));
      v105 &= v105 - 1;
      v107 = v106 | (v101 << 6);
      goto LABEL_101;
    }
    while (1)
    {
      v40 = __OFADD__(v101++, 1);
      if (v40)
        goto LABEL_129;
      if (v101 >= v170)
      {
        v109 = v165;
        v122 = v155;
        v110 = v171;
        goto LABEL_110;
      }
      v108 = *(_QWORD *)(v169 + 8 * v101);
      v109 = v165;
      v110 = v171;
      if (!v108)
        break;
LABEL_100:
      v105 = (v108 - 1) & v108;
      v107 = __clz(__rbit64(v108)) + (v101 << 6);
LABEL_101:
      v112 = (uint64_t *)(*(_QWORD *)(v173 + 48) + 16 * v107);
      v114 = *v112;
      v113 = v112[1];
      v115 = v176;
      sub_240C355AC(*(_QWORD *)(v173 + 56) + *(_QWORD *)(v177 + 72) * v107, v176, type metadata accessor for Proto_MILSpec_Argument);
      v116 = v115;
      v117 = v179;
      sub_240C35540(v116, v179, type metadata accessor for Proto_MILSpec_Argument);
      *(_QWORD *)(v172 + ((v107 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v107;
      v4 = (_QWORD *)v174;
      v118 = (_QWORD *)(*(_QWORD *)(v174 + 48) + 16 * v107);
      *v118 = v114;
      v118[1] = v113;
      v119 = v117;
      v37 = (unint64_t)type metadata accessor for MLProgram.Argument;
      sub_240C35540(v119, v4[7] + *(_QWORD *)(v178 + 72) * v107, type metadata accessor for MLProgram.Argument);
      v120 = v4[2];
      v40 = __OFADD__(v120, 1);
      v121 = v120 + 1;
      if (v40)
        goto LABEL_120;
      v4[2] = v121;
      swift_bridgeObjectRetain();
      v38 = (uint64_t)v175;
      if (v105)
        goto LABEL_87;
    }
    v111 = v101 + 1;
    if (v101 + 1 >= v170)
      goto LABEL_109;
    v108 = *(_QWORD *)(v169 + 8 * v111);
    if (v108)
      goto LABEL_99;
    v111 = v101 + 2;
    if (v101 + 2 >= v170)
      goto LABEL_109;
    v108 = *(_QWORD *)(v169 + 8 * v111);
    if (v108)
      goto LABEL_99;
    v111 = v101 + 3;
    if (v101 + 3 >= v170)
      goto LABEL_109;
    v108 = *(_QWORD *)(v169 + 8 * v111);
    if (v108)
      goto LABEL_99;
    v111 = v101 + 4;
    if (v101 + 4 < v170)
    {
      v108 = *(_QWORD *)(v169 + 8 * v111);
      if (!v108)
      {
        while (1)
        {
          v101 = v111 + 1;
          if (__OFADD__(v111, 1))
            goto LABEL_131;
          if (v101 >= v170)
            goto LABEL_109;
          v108 = *(_QWORD *)(v169 + 8 * v101);
          ++v111;
          if (v108)
            goto LABEL_100;
        }
      }
LABEL_99:
      v101 = v111;
      goto LABEL_100;
    }
LABEL_109:
    v122 = v155;
LABEL_110:
    v31 = v154;
    v187 = v4;
    if (__swift_getEnumTagSinglePayload(v109, 1, v110) == 1)
    {
      sub_240BE0B68(v109, &qword_25708CB20);
      v123 = v149;
      sub_240C6FA30(v159, v160, v149);
      swift_bridgeObjectRelease();
      sub_240BE0B68(v123, &qword_25708CB20);
    }
    else
    {
      v124 = v109;
      v125 = v179;
      sub_240C35540(v124, v179, type metadata accessor for MLProgram.Argument);
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v186 = v4;
      sub_240DAEF70(v125, v159, v160, isUniquelyReferenced_nonNull_native);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    v30 = v122;
    sub_240C5A33C();
    v128 = v127;
    swift_bridgeObjectRelease();
    v4 = v158;
    swift_bridgeObjectRelease();
    v4[2] = v128;
    sub_240BE10B8((uint64_t)v168, type metadata accessor for MLProgram.Argument);
    v36 = v156;
  }
  while (v156);
LABEL_6:
  v40 = __OFADD__(v31, 1);
  v41 = v31 + 1;
  if (v40)
    goto LABEL_132;
  if (v41 >= v151)
  {
LABEL_121:
    swift_release();
    MLProgram.Operation.outputs.getter();
    v130 = v129;
    v131 = v164;
    swift_bridgeObjectRetain();
    v37 = sub_240CC7FA0(v130, v163, v131, (void (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    v133 = v132;
    swift_bridgeObjectRelease();
    if ((v133 & 1) != 0)
      return;
    swift_bridgeObjectRetain();
    v15 = v4;
    MLProgram.Operation.outputs.getter();
    v135 = v134;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      goto LABEL_134;
    if ((v37 & 0x8000000000000000) == 0)
      goto LABEL_124;
LABEL_135:
    __break(1u);
    goto LABEL_136;
  }
  v42 = *(_QWORD *)(v150 + 8 * v41);
  if (v42)
  {
LABEL_20:
    v155 = v30;
    v156 = (v42 - 1) & v42;
    v154 = v41;
    v39 = __clz(__rbit64(v42)) + (v41 << 6);
    goto LABEL_21;
  }
  v43 = v41 + 1;
  if (v41 + 1 >= v151)
    goto LABEL_121;
  v42 = *(_QWORD *)(v150 + 8 * v43);
  if (v42)
    goto LABEL_19;
  v43 = v41 + 2;
  if (v41 + 2 >= v151)
    goto LABEL_121;
  v42 = *(_QWORD *)(v150 + 8 * v43);
  if (v42)
    goto LABEL_19;
  v43 = v41 + 3;
  if (v41 + 3 >= v151)
    goto LABEL_121;
  v42 = *(_QWORD *)(v150 + 8 * v43);
  if (v42)
    goto LABEL_19;
  v43 = v41 + 4;
  if (v41 + 4 >= v151)
    goto LABEL_121;
  v42 = *(_QWORD *)(v150 + 8 * v43);
  if (v42)
    goto LABEL_19;
  v43 = v41 + 5;
  if (v41 + 5 >= v151)
    goto LABEL_121;
  v42 = *(_QWORD *)(v150 + 8 * v43);
  if (v42)
  {
LABEL_19:
    v41 = v43;
    goto LABEL_20;
  }
  while (1)
  {
    v41 = v43 + 1;
    if (__OFADD__(v43, 1))
      break;
    if (v41 >= v151)
      goto LABEL_121;
    v42 = *(_QWORD *)(v150 + 8 * v41);
    ++v43;
    if (v42)
      goto LABEL_20;
  }
LABEL_133:
  __break(1u);
LABEL_134:
  sub_240C95844();
  v135 = v147;
  if ((v37 & 0x8000000000000000) != 0)
    goto LABEL_135;
LABEL_124:
  if (v37 >= *(_QWORD *)(v135 + 16))
  {
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
    return;
  }
  v136 = type metadata accessor for MLProgram.NamedValueType();
  v137 = (_QWORD *)(v135
                  + ((*(unsigned __int8 *)(*(_QWORD *)(v136 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v136 - 8) + 80))
                  + *(_QWORD *)(*(_QWORD *)(v136 - 8) + 72) * v37);
  swift_bridgeObjectRelease();
  v138 = v162;
  *v137 = v161;
  v137[1] = v138;
  sub_240C56488(v135, (uint64_t)v185, v139, v140, v141, v142, v143, v144);
  v146 = v145;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v15[3] = v146;
}

unint64_t sub_240CC9FD8(unint64_t result, char a2, uint64_t a3)
{
  if ((a2 & 1) != 0)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(_QWORD *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_240CC9FF8(uint64_t (*a1)(uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;

  v3 = *v1;
  result = swift_isUniquelyReferenced_nonNull_native();
  *v1 = v3;
  if (!(_DWORD)result)
  {
    result = a1(v3);
    *v1 = result;
  }
  return result;
}

unint64_t sub_240CCA040(unint64_t result, uint64_t a2)
{
  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(a2 + 16) <= result)
LABEL_5:
    __break(1u);
  return result;
}

void OUTLINED_FUNCTION_0_22(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240C355AC(a1, *(_QWORD *)(v2 - 584), v1);
}

void OUTLINED_FUNCTION_5_31()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  *v0 = *(_QWORD *)(v2 - 288);
  v0[1] = v1;
}

uint64_t OUTLINED_FUNCTION_7_24(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return sub_240D7327C(v1);
}

uint64_t OUTLINED_FUNCTION_10_26()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_26()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_15_25()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 280);
}

void OUTLINED_FUNCTION_16_23()
{
  sub_240BE6998();
}

unint64_t OUTLINED_FUNCTION_19_16()
{
  unint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240CC9FD8(v0, 1, v1);
  return v1
       + ((*(unsigned __int8 *)(*(_QWORD *)(v2 - 328) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v2 - 328) + 80))
       + *(_QWORD *)(*(_QWORD *)(v2 - 328) + 72) * v0;
}

void OUTLINED_FUNCTION_20_15(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_240C35540(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_22_13(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = result;
  return result;
}

void OUTLINED_FUNCTION_25_17(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_240C35540(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_26_15()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_27_17()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 280);
}

uint64_t OUTLINED_FUNCTION_29_16()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_30_17()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 24) = *(_QWORD *)(v2 - 288);
  *(_QWORD *)(v1 + 32) = v0;
}

void OUTLINED_FUNCTION_31_13()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 56) = *(_QWORD *)(v2 - 288);
  *(_QWORD *)(v1 + 64) = v0;
}

void OUTLINED_FUNCTION_32_15()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 40) = *(_QWORD *)(v2 - 288);
  *(_QWORD *)(v1 + 48) = v0;
}

uint64_t OUTLINED_FUNCTION_35_14@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return *(_QWORD *)(v1 + a1);
}

uint64_t OUTLINED_FUNCTION_37_10()
{
  unint64_t v0;
  uint64_t v1;

  sub_240CCA040(v0, *(_QWORD *)(v1 - 152));
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_38_13()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_43_12(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_45_12(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;

  *v2 = *(_QWORD *)(v4 - 288);
  v2[1] = v3;
  return nullsub_1(a1, a2);
}

uint64_t OUTLINED_FUNCTION_49_10(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(v1 - 312));
}

void OUTLINED_FUNCTION_52_10()
{
  uint64_t v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;

  *v2 = *(_QWORD *)(v3 - 240);
  sub_240BE0B68(v0, v1);
}

uint64_t OUTLINED_FUNCTION_53_11()
{
  uint64_t v0;

  return sub_240CB2E60(*(_QWORD *)(*(_QWORD *)(v0 - 152) + 16));
}

void OUTLINED_FUNCTION_54_13()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240C355AC(v1, v2, v0);
}

void OUTLINED_FUNCTION_56_9(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  sub_240C02F94(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_61_8()
{
  return type metadata accessor for Proto_Model.OneOf_Type(0);
}

uint64_t OUTLINED_FUNCTION_65_5()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, *(_QWORD *)(v1 - 384));
}

void OUTLINED_FUNCTION_67_7(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

unint64_t OUTLINED_FUNCTION_69_6()
{
  unint64_t v0;
  uint64_t v1;

  return sub_240CCA040(v0, *(_QWORD *)(v1 - 152));
}

uint64_t OUTLINED_FUNCTION_73_5(uint64_t a1, uint64_t a2)
{
  return nullsub_1(a1, a2);
}

uint64_t OUTLINED_FUNCTION_74_1()
{
  return sub_240CB2DD4();
}

uint64_t OUTLINED_FUNCTION_75_4()
{
  return sub_240CB2DC8();
}

void OUTLINED_FUNCTION_76_4()
{
  uint64_t v0;

  sub_240CB2C44(v0);
}

uint64_t OUTLINED_FUNCTION_77_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 152) = a1;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_79_3()
{
  return type metadata accessor for Proto_NeuralNetworkLayer(0);
}

uint64_t OUTLINED_FUNCTION_80_5()
{
  return type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
}

uint64_t OUTLINED_FUNCTION_81_4()
{
  return sub_240CB2D28(0);
}

uint64_t OUTLINED_FUNCTION_84_5()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_85_4()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_86_5()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 152);
}

uint64_t sub_240CCA4EC()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240CCA4F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_13_22();
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_10(a1 + *(int *)(a3 + 20), a2, v6);
  }
}

uint64_t sub_240CCA548()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CCA554()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72_1();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_6((uint64_t)v1 + *(int *)(v4 + 20), v0, v0, v5);
  }
}

uint64_t type metadata accessor for Proto_GLMRegressor.DoubleArray(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D7E8);
}

uint64_t sub_240CCA5B4(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = v4 + ((v3 + 16) & ~(unint64_t)v3);
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v6;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v7 = *(int *)(a3 + 28);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_240CCA66C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_240CCA6BC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(a3 + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t sub_240CCA74C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(int *)(a3 + 28);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_240CCA7E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_240CCA854(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v6 = *(int *)(a3 + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_240CCA8E0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240CCA8EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_13_22();
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_10(a1 + *(int *)(a3 + 28), a2, v6);
  }
}

uint64_t sub_240CCA93C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CCA948()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_72_1();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v4 = v2;
    v5 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_3_6((uint64_t)v1 + *(int *)(v4 + 28), v0, v0, v5);
  }
}

uint64_t type metadata accessor for Proto_GLMRegressor(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FBC8);
}

uint64_t sub_240CCA9A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_240CCAA2C(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  type metadata accessor for Proto_GLMRegressor(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_44();
}

void sub_240CCAA70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_10_27();
  sub_240BEED88();
  if ((v6 & 1) != 0
    && (sub_240BEACE4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) != 0
    && (sub_240C52BE0(*(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)(a2 + 16), *(unsigned __int8 *)(a2 + 24)) & 1) != 0)
  {
    v7 = type metadata accessor for Proto_GLMRegressor(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v7 + 28));
    OUTLINED_FUNCTION_10_6(*(int *)(v7 + 28));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void sub_240CCAB44(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  type metadata accessor for Proto_GLMRegressor.DoubleArray(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_44();
}

void sub_240CCAB7C()
{
  uint64_t v0;

  sub_240E18D7C(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_240CCAB88()
{
  sub_240CCB9C8();
  return sub_240F1C96C();
}

void sub_240CCABC0(uint64_t a1)
{
  uint64_t v1;

  sub_240E1919C(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

void sub_240CCABCC()
{
  qword_2570F9278 = (uint64_t)&unk_251110E18;
}

uint64_t *sub_240CCABE0()
{
  if (qword_25708AF00 != -1)
    swift_once();
  return &qword_2570F9278;
}

uint64_t sub_240CCAC20@<X0>(_QWORD *a1@<X8>)
{
  sub_240CCABE0();
  *a1 = qword_2570F9278;
  return swift_bridgeObjectRetain();
}

uint64_t sub_240CCAC4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9280);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9280);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "weights";
  *(_QWORD *)(v7 + 8) = 7;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "offset";
  *((_QWORD *)v11 + 1) = 6;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "postEvaluationTransform";
  *((_QWORD *)v13 + 1) = 23;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240CCADD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  result = sub_240F1C990();
  if (!v2)
  {
    while ((v4 & 1) == 0)
    {
      switch(result)
      {
        case 3:
          OUTLINED_FUNCTION_6_7();
          sub_240CCAEEC();
          break;
        case 2:
          OUTLINED_FUNCTION_14_27();
          break;
        case 1:
          OUTLINED_FUNCTION_6_7();
          sub_240CCAE68();
          break;
      }
      result = sub_240F1C990();
    }
  }
  return result;
}

uint64_t sub_240CCAE68()
{
  type metadata accessor for Proto_GLMRegressor.DoubleArray(0);
  sub_240C30D44(&qword_25708D800, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27390);
  return sub_240F1CABC();
}

uint64_t sub_240CCAEEC()
{
  sub_240CCB9C8();
  return sub_240F1C9CC();
}

uint64_t sub_240CCAF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_58_2();
  if (!*(_QWORD *)(*(_QWORD *)v0 + 16)
    || (type metadata accessor for Proto_GLMRegressor.DoubleArray(0),
        sub_240C30D44(&qword_25708D800, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27390), OUTLINED_FUNCTION_16_24(), result = sub_240F1CBF4(), !v1))
  {
    if (!*(_QWORD *)(*(_QWORD *)(v2 + 8) + 16) || (result = OUTLINED_FUNCTION_11_27(), !v1))
    {
      if (!*(_QWORD *)(v2 + 16) || (sub_240CCB9C8(), OUTLINED_FUNCTION_16_24(), result = sub_240F1CB7C(), !v1))
      {
        type metadata accessor for Proto_GLMRegressor(0);
        return OUTLINED_FUNCTION_50_3();
      }
    }
  }
  return result;
}

unint64_t sub_240CCB060()
{
  return 0xD000000000000012;
}

uint64_t sub_240CCB07C(uint64_t a1, uint64_t a2)
{
  return sub_240CCADD4(a1, a2);
}

uint64_t sub_240CCB090()
{
  return sub_240CCAF4C();
}

uint64_t sub_240CCB0A4()
{
  sub_240C30D44(&qword_25708D838, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F274A8);
  return sub_240F1C960();
}

uint64_t sub_240CCB0F4@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AF08, (uint64_t)qword_2570F9280, a1);
}

uint64_t sub_240CCB110()
{
  sub_240C30D44(&qword_25708C880, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27518);
  return sub_240F1CAF8();
}

uint64_t sub_240CCB150()
{
  return sub_240C8427C(type metadata accessor for Proto_GLMRegressor, &qword_25708C868, (uint64_t)&unk_240F27590);
}

uint64_t sub_240CCB17C()
{
  sub_240C30D44(&qword_25708C880, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27518);
  return sub_240F1CB04();
}

uint64_t sub_240CCB1D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9298);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9298);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "NoTransform";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "Logit";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "Probit";
  *((_QWORD *)v13 + 1) = 6;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240CCB354@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AF10, (uint64_t)qword_2570F9298, a1);
}

uint64_t sub_240CCB370()
{
  uint64_t result;

  result = sub_240F1CCE4();
  qword_2570F92B0 = 0xD000000000000012;
  *(_QWORD *)algn_2570F92B8 = 0x8000000240F52D50;
  return result;
}

uint64_t *sub_240CCB3E0()
{
  if (qword_25708AF18 != -1)
    swift_once();
  return &qword_2570F92B0;
}

uint64_t sub_240CCB420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F92C0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F92C0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240F1DA30;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "value";
  *(_QWORD *)(v5 + 8) = 5;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_240F1CC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_240F1CC18();
}

uint64_t sub_240CCB524(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    result = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    if (result == 1)
      OUTLINED_FUNCTION_14_27();
  }
  return result;
}

uint64_t sub_240CCB574()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  OUTLINED_FUNCTION_58_2();
  if (!*(_QWORD *)(*(_QWORD *)v0 + 16) || (result = OUTLINED_FUNCTION_11_27(), !v1))
  {
    type metadata accessor for Proto_GLMRegressor.DoubleArray(0);
    return OUTLINED_FUNCTION_50_3();
  }
  return result;
}

void sub_240CCB5E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_10_27();
  if ((sub_240BEACE4(v2, v3) & 1) != 0)
  {
    v4 = type metadata accessor for Proto_GLMRegressor.DoubleArray(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v4 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v4 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240CCB694()
{
  uint64_t v0;

  sub_240CCB3E0();
  v0 = qword_2570F92B0;
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t sub_240CCB6CC(uint64_t a1, uint64_t a2)
{
  return sub_240CCB524(a1, a2);
}

uint64_t sub_240CCB6E0()
{
  return sub_240CCB574();
}

uint64_t sub_240CCB6F4()
{
  sub_240C30D44(&qword_25708D848, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27358);
  return sub_240F1C960();
}

uint64_t sub_240CCB744@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AF20, (uint64_t)qword_2570F92C0, a1);
}

uint64_t sub_240CCB760()
{
  sub_240C30D44(&qword_25708D800, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27390);
  return sub_240F1CAF8();
}

uint64_t sub_240CCB7A0()
{
  return sub_240C8427C(type metadata accessor for Proto_GLMRegressor.DoubleArray, &qword_25708D808, (uint64_t)&unk_240F272C8);
}

uint64_t sub_240CCB7CC()
{
  sub_240C30D44(&qword_25708D800, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27390);
  return sub_240F1CB04();
}

uint64_t sub_240CCB820()
{
  return sub_240C30D44(&qword_25708D7F8, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F272A0);
}

uint64_t sub_240CCB84C()
{
  return sub_240C30D44(&qword_25708D800, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27390);
}

uint64_t sub_240CCB878()
{
  return sub_240C30D44(&qword_25708D808, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F272C8);
}

uint64_t sub_240CCB8A4()
{
  return sub_240C30D44(&qword_25708D810, type metadata accessor for Proto_GLMRegressor.DoubleArray, (uint64_t)&unk_240F27308);
}

uint64_t sub_240CCB8D0()
{
  return sub_240C30D44(&qword_25708C880, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27518);
}

uint64_t sub_240CCB8FC()
{
  return sub_240C30D44(&qword_25708C868, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27590);
}

unint64_t sub_240CCB92C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D818;
  if (!qword_25708D818)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708D820);
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25708D818);
  }
  return result;
}

uint64_t sub_240CCB970()
{
  return sub_240C30D44(&qword_25708D828, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27458);
}

uint64_t sub_240CCB99C()
{
  return sub_240C30D44(&qword_25708D830, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27430);
}

unint64_t sub_240CCB9C8()
{
  unint64_t result;

  result = qword_25708D840;
  if (!qword_25708D840)
  {
    result = MEMORY[0x24268C2AC](&unk_240F27688, &type metadata for Proto_GLMRegressor.PostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708D840);
  }
  return result;
}

ValueMetadata *type metadata accessor for Proto_GLMRegressor.PostEvaluationTransform()
{
  return &type metadata for Proto_GLMRegressor.PostEvaluationTransform;
}

unint64_t sub_240CCBA18()
{
  unint64_t result;

  result = qword_25708D850;
  if (!qword_25708D850)
  {
    result = MEMORY[0x24268C2AC](&unk_240F275E8, &type metadata for Proto_GLMRegressor.PostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708D850);
  }
  return result;
}

unint64_t sub_240CCBA58()
{
  unint64_t result;

  result = qword_25708D858;
  if (!qword_25708D858)
  {
    result = MEMORY[0x24268C2AC](&unk_240F27610, &type metadata for Proto_GLMRegressor.PostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708D858);
  }
  return result;
}

unint64_t sub_240CCBA98()
{
  unint64_t result;

  result = qword_25708D860;
  if (!qword_25708D860)
  {
    result = MEMORY[0x24268C2AC](&unk_240F27650, &type metadata for Proto_GLMRegressor.PostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708D860);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_10_27()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t OUTLINED_FUNCTION_11_27()
{
  return sub_240F1CB58();
}

uint64_t OUTLINED_FUNCTION_13_22()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if ((unint64_t)*v0 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

uint64_t OUTLINED_FUNCTION_14_27()
{
  return sub_240F1CA50();
}

BOOL static NeuralNetwork.Layer.MeanVarianceNormalizeParameters.== infix(_:_:)(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void (*v13)(char *, unsigned __int8 *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*(unsigned __int8 *)a1 != *(unsigned __int8 *)a2)
    return 0;
  if (*((unsigned __int8 *)a1 + 1) != *((unsigned __int8 *)a2 + 1))
    return 0;
  if (a1[1] != a2[1])
    return 0;
  v11 = OUTLINED_FUNCTION_3_29();
  v12 = (unsigned __int8 *)a1 + *(int *)(v11 + 28);
  v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, (unsigned __int8 *)a2 + *(int *)(v11 + 28), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.meanVarianceNormalize(name:inputName:outputName:kind:amount:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  type metadata accessor for NeuralNetwork.Border(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_48();
  type metadata accessor for NeuralNetwork.Layer.PadParameters.Kind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_24_1();
  v16 = v15 - v14;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_24_1();
  v20 = v19 - v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v21 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v21 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v21 + 32) = a3;
  *(_QWORD *)(v21 + 40) = a4;
  v22 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v22 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v22 + 32) = a5;
  *(_QWORD *)(v22 + 40) = a6;
  sub_240C3E408(a7, v16, type metadata accessor for NeuralNetwork.Layer.PadParameters.Kind);
  sub_240C3E408(a8, v8, type metadata accessor for NeuralNetwork.Border);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NeuralNetwork.Layer.PadParameters.init(kind:amount:)(v16, v8, v20);
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.meanVarianceNormalize(kind:amount:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);

  type metadata accessor for NeuralNetwork.Border(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.PadParameters.Kind(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_1();
  v12 = v11 - v10;
  sub_240C3E408(a1, v11 - v10, v13);
  sub_240C3E408(a2, v3, type metadata accessor for NeuralNetwork.Border);
  NeuralNetwork.Layer.PadParameters.init(kind:amount:)(v12, v3, a3);
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.acrossChannels.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.acrossChannels.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.MeanVarianceNormalizeParameters.acrossChannels.modify(uint64_t a1))(uint64_t result)
{
  _BYTE *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *v1;
  return sub_240C5500C;
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.normalizeVariance.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 1);
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.normalizeVariance.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 1) = result;
  return result;
}

_BYTE *(*NeuralNetwork.Layer.MeanVarianceNormalizeParameters.normalizeVariance.modify(uint64_t a1))(_BYTE *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 1);
  return sub_240CCBF20;
}

_BYTE *sub_240CCBF20(_BYTE *result)
{
  *(_BYTE *)(*(_QWORD *)result + 1) = result[8];
  return result;
}

float NeuralNetwork.Layer.MeanVarianceNormalizeParameters.epsilon.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void NeuralNetwork.Layer.MeanVarianceNormalizeParameters.epsilon.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

float (*NeuralNetwork.Layer.MeanVarianceNormalizeParameters.epsilon.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_240C2D178;
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.init(acrossChannels:normalizeVariance:epsilon:)@<X0>(char a1@<W0>, char a2@<W1>, uint64_t a3@<X8>, float a4@<S0>)
{
  uint64_t result;

  *(_WORD *)a3 = 0;
  *(_DWORD *)(a3 + 4) = 0;
  OUTLINED_FUNCTION_3_29();
  result = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_BYTE *)a3 = a1;
  *(_BYTE *)(a3 + 1) = a2;
  *(float *)(a3 + 4) = a4;
  return result;
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.hash(into:)()
{
  OUTLINED_FUNCTION_3_29();
  sub_240C30D44(&qword_25708D868, type metadata accessor for Proto_MeanVarianceNormalizeLayerParams, (uint64_t)&unk_240F4FB1C);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.MeanVarianceNormalizeParameters.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_3_29();
  sub_240C30D44(&qword_25708D868, type metadata accessor for Proto_MeanVarianceNormalizeLayerParams, (uint64_t)&unk_240F4FB1C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240CCC07C()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0);
  sub_240C30D44(&qword_25708D868, type metadata accessor for Proto_MeanVarianceNormalizeLayerParams, (uint64_t)&unk_240F4FB1C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void NeuralNetwork.Layer.MeanVarianceNormalizeParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  v3 = v0;
  v4 = sub_240F1CF90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.MeanVarianceNormalizeParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  sub_240C3E408(v3, v2, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA40;
  strcpy((char *)(v12 + 32), "acrossChannels");
  *(_BYTE *)(v12 + 47) = -18;
  v13 = MEMORY[0x24BEE1328];
  *(_BYTE *)(v12 + 48) = *(_BYTE *)v3;
  *(_QWORD *)(v12 + 72) = v13;
  *(_QWORD *)(v12 + 80) = 0xD000000000000011;
  *(_QWORD *)(v12 + 88) = 0x8000000240F52D90;
  *(_BYTE *)(v12 + 96) = *(_BYTE *)(v3 + 1);
  *(_QWORD *)(v12 + 120) = v13;
  *(_QWORD *)(v12 + 128) = 0x6E6F6C69737065;
  *(_QWORD *)(v12 + 136) = 0xE700000000000000;
  v14 = *(_DWORD *)(v3 + 4);
  *(_QWORD *)(v12 + 168) = MEMORY[0x24BEE14E8];
  *(_DWORD *)(v12 + 144) = v14;
  v15 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.MeanVarianceNormalizeParameters()
{
  uint64_t result;

  result = qword_25708D880;
  if (!qword_25708D880)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CCC2D4()
{
  return sub_240C30D44(&qword_25708D870, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.MeanVarianceNormalizeParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.MeanVarianceNormalizeParameters);
}

uint64_t sub_240CCC300()
{
  return sub_240C30D44(&qword_25708D878, type metadata accessor for Proto_MeanVarianceNormalizeLayerParams, (uint64_t)&unk_240F4C73C);
}

void sub_240CCC330(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.MeanVarianceNormalizeParameters.acrossChannels.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240CCC358(unsigned __int8 *a1)
{
  NeuralNetwork.Layer.MeanVarianceNormalizeParameters.acrossChannels.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CCC378(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.MeanVarianceNormalizeParameters.normalizeVariance.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240CCC3A0(unsigned __int8 *a1)
{
  NeuralNetwork.Layer.MeanVarianceNormalizeParameters.normalizeVariance.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CCC3C0(float *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.MeanVarianceNormalizeParameters.epsilon.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CCC3E4(float *a1)
{
  NeuralNetwork.Layer.MeanVarianceNormalizeParameters.epsilon.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t _s31MeanVarianceNormalizeParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_WORD *)a1 = *(_WORD *)a2;
    *(_DWORD *)(a1 + 4) = *((_DWORD *)a2 + 1);
    v6 = *(int *)(v4 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s31MeanVarianceNormalizeParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s31MeanVarianceNormalizeParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s31MeanVarianceNormalizeParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s31MeanVarianceNormalizeParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_WORD *)a1 = *(_WORD *)a2;
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s31MeanVarianceNormalizeParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_BYTE *)(a1 + 1) = *(_BYTE *)(a2 + 1);
  *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
  v4 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s31MeanVarianceNormalizeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCC6C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_29();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s31MeanVarianceNormalizeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCC6FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_3_29();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CCC730()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_29()
{
  return type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0);
}

uint64_t *sub_240CCC7A0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

_BYTE *sub_240CCC828(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *sub_240CCC884(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *sub_240CCC8E0(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *sub_240CCC93C(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_240CCC998()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240CCC9A4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 254)
  {
    OUTLINED_FUNCTION_156();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v2 = OUTLINED_FUNCTION_49_11();
    OUTLINED_FUNCTION_3_10(v2, v3, v4);
  }
}

uint64_t sub_240CCC9F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CCCA04(_BYTE *a1, char a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_156();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v3 = OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_3_6(v3, v4, v5, v6);
  }
}

uint64_t type metadata accessor for Proto_BoolParameter(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D890);
}

uint64_t sub_240CCCA5C()
{
  return sub_240CCD92C();
}

uint64_t *sub_240CCCA68(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
    v7 = (char *)v4 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v4;
}

uint64_t sub_240CCCAFC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_OWORD *sub_240CCCB40(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240CCCBA8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_240CCCC18(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *sub_240CCCC80(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_240CCCCE8()
{
  type metadata accessor for Proto_DoubleRange(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCCD24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = OUTLINED_FUNCTION_20_0();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_240CCCD58()
{
  type metadata accessor for Proto_DoubleRange(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCCDA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = OUTLINED_FUNCTION_20_0();
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D8A0);
}

uint64_t sub_240CCCDF0(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Proto_DoubleRange(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t *sub_240CCCE4C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (_OWORD *)((char *)a1 + v7);
    v9 = (_OWORD *)((char *)a2 + v7);
    v10 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      *v8 = *v9;
      v13 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
      v14 = (char *)v8 + v13;
      v15 = (char *)v9 + v13;
      v16 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v17 = *(int *)(a3 + 24);
    v18 = (char *)v4 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  }
  return v4;
}

uint64_t sub_240CCCF8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    v6 = v4 + *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(a2 + 24);
  v9 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *sub_240CCD024(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
  return a1;
}

_QWORD *sub_240CCD138(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v22 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v7[1] = v8[1];
  v12 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 24))(v18, v19, v20);
  return a1;
}

_QWORD *sub_240CCD2C8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v15 = *(int *)(a3 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *sub_240CCD3DC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _OWORD *v7;
  _OWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_OWORD *)((char *)a1 + v6);
  v8 = (_OWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (!EnumTagSinglePayload)
  {
    if (!v11)
    {
      *v7 = *v8;
      v22 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
      v23 = (char *)v7 + v22;
      v24 = (char *)v8 + v22;
      v25 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
      goto LABEL_7;
    }
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_7;
  }
  *v7 = *v8;
  v12 = *(int *)(type metadata accessor for Proto_DoubleRange(0) + 24);
  v13 = (char *)v7 + v12;
  v14 = (char *)v8 + v12;
  v15 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
LABEL_7:
  v17 = *(int *)(a3 + 24);
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 40))(v18, v19, v20);
  return a1;
}

uint64_t sub_240CCD55C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCD568(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_3Tm(a1, a2, a3, &qword_25708D8B0);
}

uint64_t sub_240CCD574()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCD580(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_4Tm(a1, a2, a3, a4, &qword_25708D8B0);
}

uint64_t type metadata accessor for Proto_DoubleParameter(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D8B8);
}

void sub_240CCD5A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240CCEB3C(a1, a2, a3, MEMORY[0x24BEE0178] + 64, &qword_25708D8C8, (void (*)(uint64_t))type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
}

uint64_t *sub_240CCD5C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v11 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v11 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return v3;
}

uint64_t sub_240CCD65C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240CCD6A4(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_240CCD714(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

_OWORD *sub_240CCD790(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240CCD7EC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_240CCD858()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240CCD864(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_156();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v2 = OUTLINED_FUNCTION_49_11();
    OUTLINED_FUNCTION_3_10(v2, v3, v4);
  }
}

uint64_t sub_240CCD8B8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CCD8C4(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(a1 + 8) = (a2 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v3 = OUTLINED_FUNCTION_39_10();
    OUTLINED_FUNCTION_3_6(v3, v4, v5, v6);
  }
}

uint64_t type metadata accessor for Proto_StringParameter(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FD60);
}

uint64_t sub_240CCD920()
{
  return sub_240CCD92C();
}

uint64_t sub_240CCD92C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_240CCD998(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_240F1C930();
      v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v12 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240CCDABC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
  }
  else
  {
    v2 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
  }
  v3 = a1 + v2;
  v4 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_QWORD *sub_240CCDB24(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
    v5 = (char *)a1 + v4;
    v6 = (char *)a2 + v4;
    v7 = sub_240F1C930();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    v8(v5, v6, v7);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v9 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_240CCDC14(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v4 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      v5 = (char *)a1 + v4;
      v6 = (char *)a2 + v4;
      v7 = sub_240F1C930();
      v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      swift_bridgeObjectRetain();
      v8(v5, v6, v7);
    }
    else
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v9 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
      v10 = (char *)a1 + v9;
      v11 = (char *)a2 + v9;
      v12 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FCE0);
}

_QWORD *sub_240CCDD38(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
  }
  else
  {
    a1[1] = a2[1];
    v5 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
  }
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_240CCDE0C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
    }
    else
    {
      a1[1] = a2[1];
      v5 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
    }
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240CCDEF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Proto_Int64Range(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_Int64Set(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_240CCDF78(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v7 = *(int *)(a3 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v8 = *v9;
        v13 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
        v14 = (char *)v8 + v13;
        v15 = (char *)v9 + v13;
        v16 = sub_240F1C930();
        v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
        swift_bridgeObjectRetain();
        v17(v14, v15, v16);
      }
      else
      {
        *(_OWORD *)v8 = *(_OWORD *)v9;
        v18 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
        v19 = (char *)v8 + v18;
        v20 = (char *)v9 + v18;
        v21 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16))(v19, v20, v21);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v22 = *(int *)(a3 + 24);
    v23 = (char *)v4 + v22;
    v24 = (char *)a2 + v22;
    v25 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
  }
  return v4;
}

uint64_t sub_240CCE134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a1 + *(int *)(a2 + 20);
  v5 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v6 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
    }
    else
    {
      v6 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
    }
    v7 = v4 + v6;
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 24);
  v10 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_240CCE1FC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v11 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      v12 = (char *)v7 + v11;
      v13 = (char *)v8 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
    }
    else
    {
      *(_OWORD *)v7 = *(_OWORD *)v8;
      v16 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
      v17 = (char *)v7 + v16;
      v18 = (char *)v8 + v16;
      v19 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v20 = *(int *)(a3 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *sub_240CCE38C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *v7 = *v8;
        v12 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
        v13 = (char *)v7 + v12;
        v14 = (char *)v8 + v12;
        v15 = sub_240F1C930();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
      }
      else
      {
        *v7 = *v8;
        v7[1] = v8[1];
        v23 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
        v24 = (char *)v7 + v23;
        v25 = (char *)v8 + v23;
        v26 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_15;
  }
  if (v11)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *v7 = *v8;
      v18 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      v19 = (char *)v7 + v18;
      v20 = (char *)v8 + v18;
      v21 = sub_240F1C930();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v19, v20, v21);
    }
    else
    {
      *v7 = *v8;
      v7[1] = v8[1];
      v27 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
      v28 = (char *)v7 + v27;
      v29 = (char *)v8 + v27;
      v30 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v31 = *(int *)(a3 + 24);
  v32 = (char *)a1 + v31;
  v33 = (char *)a2 + v31;
  v34 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 24))(v32, v33, v34);
  return a1;
}

_QWORD *sub_240CCE62C(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
    {
      v12 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
    }
    else
    {
      v7[1] = v8[1];
      v12 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
    }
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v16 = *(int *)(a3 + 24);
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *sub_240CCE7A8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = (_QWORD *)((char *)a1 + v6);
  v8 = (_QWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      if (EnumCaseMultiPayload == 1)
      {
        v13 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
      }
      else
      {
        v7[1] = v8[1];
        v13 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
      }
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_15;
  }
  if (v11)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    v18 = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (v18 == 1)
    {
      v19 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
    }
    else
    {
      v7[1] = v8[1];
      v19 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
    }
    v20 = (char *)v7 + v19;
    v21 = (char *)v8 + v19;
    v22 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v23 = *(int *)(a3 + 24);
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_240CCEA18()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCEA24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_index_3Tm(a1, a2, a3, &qword_25708BE80);
}

uint64_t __swift_get_extra_inhabitant_index_3Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v7 = __swift_instantiateConcreteTypeFromMangledName(a4);
  if (*(_DWORD *)(*(_QWORD *)(v7 - 8) + 84) == (_DWORD)a2)
  {
    v8 = v7;
    v9 = *(int *)(a3 + 20);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_20_0();
    v9 = *(int *)(a3 + 24);
  }
  return OUTLINED_FUNCTION_3_10(a1 + v9, a2, v8);
}

uint64_t sub_240CCEA8C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CCEA98(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_index_4Tm(a1, a2, a3, a4, &qword_25708BE80);
}

uint64_t __swift_store_extra_inhabitant_index_4Tm(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  if (*(_DWORD *)(*(_QWORD *)(v9 - 8) + 84) == a3)
  {
    v10 = v9;
    v11 = *(int *)(a4 + 20);
  }
  else
  {
    v10 = OUTLINED_FUNCTION_20_0();
    v11 = *(int *)(a4 + 24);
  }
  return OUTLINED_FUNCTION_3_6(a1 + v11, a2, a2, v10);
}

uint64_t type metadata accessor for Proto_Int64Parameter(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FCF8);
}

void sub_240CCEB1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240CCEB3C(a1, a2, a3, MEMORY[0x24BEE0178] + 64, &qword_25435FCF0, (void (*)(uint64_t))type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
}

void sub_240CCEB3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, void (*a6)(uint64_t))
{
  unint64_t v6;
  unint64_t v7;

  sub_240C46134(319, a5, a6);
  if (v6 <= 0x3F)
  {
    sub_240F1C930();
    if (v7 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240CCEBCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v27 = v0;
  v28 = v1;
  type metadata accessor for Proto_Int64Set(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = (_QWORD *)(v4 - v3);
  type metadata accessor for Proto_Int64Range(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = (_QWORD *)(v8 - v7);
  OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11_3();
  v13 = (_QWORD *)(v11 - v12);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (uint64_t *)((char *)&v27 - v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D980);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_24_1();
  v20 = v19 - v18;
  v22 = v19 - v18 + *(int *)(v21 + 48);
  sub_240C355AC(v27, v19 - v18, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
  sub_240C355AC(v28, v22, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
  if (OUTLINED_FUNCTION_10_2() == 1)
  {
    sub_240C355AC(v20, (uint64_t)v13, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    if (OUTLINED_FUNCTION_10_2() == 1)
    {
      sub_240C35540(v22, (uint64_t)v5, type metadata accessor for Proto_Int64Set);
      if ((sub_240BEACE0(*v13, *v5) & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v5);
      v25 = (uint64_t)v13;
LABEL_15:
      OUTLINED_FUNCTION_3_2(v25);
      OUTLINED_FUNCTION_31(v26, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
      goto LABEL_16;
    }
    v23 = type metadata accessor for Proto_Int64Set;
    v24 = (uint64_t)v13;
  }
  else
  {
    sub_240C355AC(v20, (uint64_t)v16, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    if (OUTLINED_FUNCTION_10_2() != 1)
    {
      sub_240C35540(v22, (uint64_t)v9, type metadata accessor for Proto_Int64Range);
      if (*v16 == *v9 && v16[1] == v9[1])
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_48_11();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v9);
      v25 = (uint64_t)v16;
      goto LABEL_15;
    }
    v23 = type metadata accessor for Proto_Int64Range;
    v24 = (uint64_t)v16;
  }
  sub_240BE10B8(v24, v23);
  sub_240BE0B68(v20, &qword_25708D980);
LABEL_16:
  OUTLINED_FUNCTION_1();
}

void sub_240CCEED4(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0;
  type metadata accessor for Proto_Int64Parameter(0);
  v1 = OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_156();
}

void sub_240CCEF10()
{
  double *v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v6 = v5;
  type metadata accessor for Proto_DoubleRange(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_38_14();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D9A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  v11 = v2 + *(int *)(v10 + 48);
  sub_240C355AC(v6, v2, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
  sub_240C355AC(v4, v11, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
  sub_240C35540(v2, (uint64_t)v1, type metadata accessor for Proto_DoubleRange);
  sub_240C35540(v11, (uint64_t)v0, type metadata accessor for Proto_DoubleRange);
  if (*v1 == *v0 && v1[1] == v0[1])
  {
    OUTLINED_FUNCTION_20_0();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_48_11();
  }
  sub_240BE10B8((uint64_t)v0, type metadata accessor for Proto_DoubleRange);
  sub_240BE10B8((uint64_t)v1, type metadata accessor for Proto_DoubleRange);
  OUTLINED_FUNCTION_1();
}

void sub_240CCF078(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = 0;
  type metadata accessor for Proto_DoubleParameter(0);
  v1 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  OUTLINED_FUNCTION_20_16(v1);
  OUTLINED_FUNCTION_156();
}

uint64_t sub_240CCF0B8@<X0>(_QWORD *a1@<X8>)
{
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  type metadata accessor for Proto_StringParameter(0);
  return OUTLINED_FUNCTION_5_10();
}

uint64_t sub_240CCF0E8@<X0>(_BYTE *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for Proto_BoolParameter(0);
  return OUTLINED_FUNCTION_5_10();
}

uint64_t sub_240CCF114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F92D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F92D8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "defaultValue";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 10;
  *(_QWORD *)v11 = "range";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 11;
  *(_QWORD *)v13 = "set";
  *((_QWORD *)v13 + 1) = 3;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

void sub_240CCF2A0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    v3 = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    switch(v3)
    {
      case 11:
        v5 = OUTLINED_FUNCTION_17_2();
        sub_240CCF710(v5, v6, v7, v8);
        break;
      case 10:
        v9 = OUTLINED_FUNCTION_17_2();
        sub_240CCF314(v9, v10, v11, v12);
        break;
      case 1:
        OUTLINED_FUNCTION_24_15();
        sub_240F1CA44();
        break;
    }
    OUTLINED_FUNCTION_55_8();
  }
  OUTLINED_FUNCTION_53_3();
}

void sub_240CCF314(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = type metadata accessor for Proto_Int64Range(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v35 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D968);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v33 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v33 - v23, 1, 1, v5);
  v34 = a1 + *(int *)(type metadata accessor for Proto_Int64Parameter(0) + 20);
  sub_240C02F94(v34, (uint64_t)v12, &qword_25708BE80);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BE80);
    v26 = v13;
  }
  else
  {
    v33 = v9;
    sub_240C35540((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    sub_240C35540((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    }
    else
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708D968);
      v27 = (uint64_t)v33;
      sub_240C35540((uint64_t)v16, (uint64_t)v33, type metadata accessor for Proto_Int64Range);
      sub_240C35540(v27, (uint64_t)v24, type metadata accessor for Proto_Int64Range);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v28 = v36;
  sub_240BE18B8(&qword_25708D958, type metadata accessor for Proto_Int64Range, (uint64_t)&unk_240F2A8B4);
  sub_240F1CAC8();
  if (v28)
  {
    v29 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v29, &qword_25708D968);
    return;
  }
  sub_240C02F94((uint64_t)v24, (uint64_t)v22, &qword_25708D968);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708D968);
    v29 = (uint64_t)v22;
    goto LABEL_10;
  }
  v30 = (uint64_t)v22;
  v31 = v35;
  sub_240C35540(v30, v35, type metadata accessor for Proto_Int64Range);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708D968);
  v32 = v34;
  sub_240BE0B68(v34, &qword_25708BE80);
  sub_240C35540(v31, v32, type metadata accessor for Proto_Int64Range);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v32, 0, 1, v26);
}

void sub_240CCF710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = type metadata accessor for Proto_Int64Set(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v35 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D970);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v33 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v33 - v23, 1, 1, v5);
  v34 = a1 + *(int *)(type metadata accessor for Proto_Int64Parameter(0) + 20);
  sub_240C02F94(v34, (uint64_t)v12, &qword_25708BE80);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BE80);
    v26 = v13;
  }
  else
  {
    v33 = v9;
    sub_240C35540((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    sub_240C35540((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708D970);
      v27 = (uint64_t)v33;
      sub_240C35540((uint64_t)v16, (uint64_t)v33, type metadata accessor for Proto_Int64Set);
      sub_240C35540(v27, (uint64_t)v24, type metadata accessor for Proto_Int64Set);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    }
  }
  v28 = v36;
  sub_240BE18B8(&qword_25708D960, type metadata accessor for Proto_Int64Set, (uint64_t)&unk_240F2A74C);
  sub_240F1CAC8();
  if (v28)
  {
    v29 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v29, &qword_25708D970);
    return;
  }
  sub_240C02F94((uint64_t)v24, (uint64_t)v22, &qword_25708D970);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708D970);
    v29 = (uint64_t)v22;
    goto LABEL_10;
  }
  v30 = (uint64_t)v22;
  v31 = v35;
  sub_240C35540(v30, v35, type metadata accessor for Proto_Int64Set);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708D970);
  v32 = v34;
  sub_240BE0B68(v34, &qword_25708BE80);
  sub_240C35540(v31, v32, type metadata accessor for Proto_Int64Set);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v32, 0, 1, v26);
}

void sub_240CCFB0C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_48();
  if (!*v0 || (sub_240F1CBAC(), !v1))
  {
    v4 = type metadata accessor for Proto_Int64Parameter(0);
    sub_240C02F94((uint64_t)v0 + *(int *)(v4 + 20), v2, &qword_25708BE80);
    v5 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
    if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
      goto LABEL_8;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      OUTLINED_FUNCTION_40_13();
      sub_240CCFE04(v6);
    }
    else
    {
      OUTLINED_FUNCTION_40_13();
      sub_240CCFC60(v7);
    }
    sub_240BE10B8(v2, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
    if (!v1)
LABEL_8:
      sub_240F1C918();
  }
}

void sub_240CCFC60(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64Range(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Int64Parameter(0);
  sub_240C02F94(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_25708BE80);
  v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v9) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BE80);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_240C35540((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64Range);
      sub_240BE18B8(&qword_25708D958, type metadata accessor for Proto_Int64Range, (uint64_t)&unk_240F2A8B4);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Range);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
  }
  __break(1u);
}

void sub_240CCFE04(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64Set(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_Int64Parameter(0);
  sub_240C02F94(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_25708BE80);
  v9 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v9) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BE80);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240C35540((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64Set);
      sub_240BE18B8(&qword_25708D960, type metadata accessor for Proto_Int64Set, (uint64_t)&unk_240F2A74C);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Set);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
  }
  __break(1u);
}

void sub_240CCFFA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  v38 = OUTLINED_FUNCTION_20_0();
  v40 = *(_QWORD *)(v38 - 8);
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_11_3();
  v39 = v6 - v7;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v34 - v9;
  v41 = OUTLINED_FUNCTION_51_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v14 = v13 - v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D978);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_3();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_373();
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v34 - v21;
  if (*v5 != *v3)
    goto LABEL_13;
  v23 = v3;
  v24 = v20;
  v35 = v14;
  v37 = v10;
  v25 = type metadata accessor for Proto_Int64Parameter(0);
  OUTLINED_FUNCTION_11_28((uint64_t)v5 + *(int *)(v25 + 20), (uint64_t)v22);
  v36 = v25;
  OUTLINED_FUNCTION_11_28((uint64_t)v23 + *(int *)(v25 + 20), v0);
  v26 = v1 + *(int *)(v15 + 48);
  OUTLINED_FUNCTION_11_28((uint64_t)v22, v1);
  OUTLINED_FUNCTION_11_28(v0, v26);
  OUTLINED_FUNCTION_36_18(v1);
  if (v28)
  {
    OUTLINED_FUNCTION_70_0(v0);
    OUTLINED_FUNCTION_70_0((uint64_t)v22);
    v27 = OUTLINED_FUNCTION_36_18(v26);
    if (v28)
    {
      OUTLINED_FUNCTION_131(v27, &qword_25708BE80);
LABEL_12:
      v33 = v36;
      OUTLINED_FUNCTION_32_16((uint64_t)v37, (uint64_t)v5 + *(int *)(v36 + 24));
      OUTLINED_FUNCTION_32_16(v39, (uint64_t)v23 + *(int *)(v33 + 24));
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_28_11();
      OUTLINED_FUNCTION_25_18();
      OUTLINED_FUNCTION_54_14();
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_240C02F94(v1, v24, &qword_25708BE80);
  OUTLINED_FUNCTION_36_18(v26);
  if (v28)
  {
    OUTLINED_FUNCTION_157(v0);
    OUTLINED_FUNCTION_157((uint64_t)v22);
    OUTLINED_FUNCTION_31(v29, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
LABEL_10:
    OUTLINED_FUNCTION_131(v27, &qword_25708D978);
    goto LABEL_13;
  }
  v30 = v35;
  sub_240C35540(v26, v35, type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues);
  sub_240CCEBCC();
  v32 = v31;
  OUTLINED_FUNCTION_56_7(v30);
  OUTLINED_FUNCTION_279(v0);
  OUTLINED_FUNCTION_279((uint64_t)v22);
  OUTLINED_FUNCTION_56_7(v24);
  OUTLINED_FUNCTION_279(v1);
  if ((v32 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  OUTLINED_FUNCTION_1();
}

unint64_t sub_240CD0298()
{
  return 0xD000000000000014;
}

void sub_240CD02B8(uint64_t a1, uint64_t a2)
{
  sub_240CCF2A0(a1, a2);
}

void sub_240CD02CC()
{
  sub_240CCFB0C();
}

uint64_t sub_240CD02E0()
{
  sub_240BE18B8(&qword_25708D950, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27D98);
  return sub_240F1C960();
}

uint64_t sub_240CD0330(uint64_t a1, uint64_t a2)
{
  return sub_240CD16A8(a1, a2, &qword_25708AF28, (uint64_t)qword_2570F92D8);
}

uint64_t sub_240CD034C()
{
  sub_240BE18B8(&qword_25708D938, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27DD0);
  return sub_240F1CAF8();
}

uint64_t sub_240CD038C()
{
  return sub_240C4B5F8(type metadata accessor for Proto_Int64Parameter, &qword_25708D940, (uint64_t)&unk_240F27D08);
}

uint64_t sub_240CD03B8()
{
  sub_240BE18B8(&qword_25708D938, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27DD0);
  return sub_240F1CB04();
}

uint64_t sub_240CD040C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F92F0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F92F0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1D370;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "defaultValue";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 10;
  *(_QWORD *)v11 = "range";
  *((_QWORD *)v11 + 1) = 5;
  v11[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240CD0560(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = OUTLINED_FUNCTION_50_12();
  return __swift_project_value_buffer(v3, a2);
}

void sub_240CD059C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    v3 = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 10)
    {
      v5 = OUTLINED_FUNCTION_17_2();
      sub_240CD05F8(v5, v6, v7, v8);
    }
    else if (v3 == 1)
    {
      OUTLINED_FUNCTION_24_15();
      sub_240F1CA80();
    }
    OUTLINED_FUNCTION_55_8();
  }
  OUTLINED_FUNCTION_53_3();
}

void sub_240CD05F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v35 = a2;
  v37 = a4;
  v36 = a3;
  v5 = type metadata accessor for Proto_DoubleRange(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v33 = (uint64_t)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v31 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v31 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D998);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v31 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v31 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v31 - v23, 1, 1, v5);
  v31 = a1 + *(int *)(type metadata accessor for Proto_DoubleParameter(0) + 20);
  sub_240C02F94(v31, (uint64_t)v12, &qword_25708D8B0);
  v32 = v13;
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708D8B0);
  }
  else
  {
    sub_240C35540((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
    sub_240C35540((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
    sub_240BE0B68((uint64_t)v24, &qword_25708D998);
    sub_240C35540((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_DoubleRange);
    sub_240C35540((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_DoubleRange);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
  }
  v26 = v34;
  sub_240BE18B8(&qword_25708D990, type metadata accessor for Proto_DoubleRange, (uint64_t)&unk_240F2A5E4);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_8:
    sub_240BE0B68(v27, &qword_25708D998);
    return;
  }
  sub_240C02F94((uint64_t)v24, (uint64_t)v22, &qword_25708D998);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708D998);
    v27 = (uint64_t)v22;
    goto LABEL_8;
  }
  v28 = (uint64_t)v22;
  v29 = v33;
  sub_240C35540(v28, v33, type metadata accessor for Proto_DoubleRange);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708D998);
  v30 = v31;
  sub_240BE0B68(v31, &qword_25708D8B0);
  sub_240C35540(v29, v30, type metadata accessor for Proto_DoubleRange);
  __swift_storeEnumTagSinglePayload(v30, 0, 1, v32);
}

void sub_240CD09A8()
{
  uint64_t v0;
  double *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_28();
  if (*v1 == 0.0 || (v2 = v0, sub_240F1CBC4(), !v0))
  {
    OUTLINED_FUNCTION_40_13();
    sub_240CD0A28(v3);
    if (!v2)
    {
      type metadata accessor for Proto_DoubleParameter(0);
      OUTLINED_FUNCTION_5_32();
    }
  }
  OUTLINED_FUNCTION_47_3();
}

void sub_240CD0A28(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_DoubleRange(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_DoubleParameter(0);
  sub_240C02F94(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_25708D8B0);
  v9 = type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v9) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708D8B0);
  }
  else
  {
    sub_240C35540((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_DoubleRange);
    sub_240BE18B8(&qword_25708D990, type metadata accessor for Proto_DoubleRange, (uint64_t)&unk_240F2A5E4);
    sub_240F1CC00();
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_DoubleRange);
  }
}

void sub_240CD0BA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  double *v22;
  double *v23;
  uint64_t v24;
  char *v25;
  double *v26;
  double *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  char v35;
  _QWORD v36[2];
  double *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v3 = OUTLINED_FUNCTION_20_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_11_3();
  v7 = v5 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v40 = (uint64_t)v36 - v9;
  type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  v13 = v12 - v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D9A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_11_5();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D8B0);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_11_3();
  v19 = v17 - v18;
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_373();
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)v36 - v24;
  if (*v23 != *v22)
    goto LABEL_13;
  v36[1] = v3;
  v38 = v7;
  v39 = v4;
  v26 = v23;
  v27 = v22;
  v28 = type metadata accessor for Proto_DoubleParameter(0);
  v29 = *(int *)(v28 + 20);
  v36[0] = v26;
  OUTLINED_FUNCTION_11_28((uint64_t)v26 + v29, (uint64_t)v25);
  v30 = *(int *)(v28 + 20);
  v37 = v27;
  OUTLINED_FUNCTION_11_28((uint64_t)v27 + v30, v2);
  v31 = v0 + *(int *)(v14 + 48);
  OUTLINED_FUNCTION_11_28((uint64_t)v25, v0);
  OUTLINED_FUNCTION_11_28(v2, v31);
  OUTLINED_FUNCTION_37_11(v0);
  if (v33)
  {
    OUTLINED_FUNCTION_70_0(v2);
    OUTLINED_FUNCTION_70_0((uint64_t)v25);
    v32 = OUTLINED_FUNCTION_37_11(v31);
    if (v33)
    {
      OUTLINED_FUNCTION_131(v32, &qword_25708D8B0);
LABEL_12:
      OUTLINED_FUNCTION_32_16(v40, v36[0] + *(int *)(v28 + 24));
      OUTLINED_FUNCTION_32_16(v38, (uint64_t)v37 + *(int *)(v28 + 24));
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_28_11();
      OUTLINED_FUNCTION_25_18();
      OUTLINED_FUNCTION_54_14();
      goto LABEL_13;
    }
    goto LABEL_10;
  }
  sub_240C02F94(v0, v19, &qword_25708D8B0);
  OUTLINED_FUNCTION_37_11(v31);
  if (v33)
  {
    OUTLINED_FUNCTION_157(v2);
    OUTLINED_FUNCTION_157((uint64_t)v25);
    sub_240BE10B8(v19, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
LABEL_10:
    OUTLINED_FUNCTION_131(v32, &qword_25708D9A0);
    goto LABEL_13;
  }
  sub_240C35540(v31, v13, type metadata accessor for Proto_DoubleParameter.OneOf_AllowedValues);
  sub_240CCEF10();
  v35 = v34;
  OUTLINED_FUNCTION_56_7(v13);
  OUTLINED_FUNCTION_279(v2);
  OUTLINED_FUNCTION_279((uint64_t)v25);
  OUTLINED_FUNCTION_56_7(v19);
  OUTLINED_FUNCTION_279(v0);
  if ((v35 & 1) != 0)
    goto LABEL_12;
LABEL_13:
  OUTLINED_FUNCTION_1();
}

unint64_t sub_240CD0E98()
{
  return 0xD000000000000015;
}

uint64_t sub_240CD0EB4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_41_9();
  return OUTLINED_FUNCTION_12_8(v0, v1, v2, v3);
}

void sub_240CD0EDC(uint64_t a1, uint64_t a2)
{
  sub_240CD059C(a1, a2);
}

void sub_240CD0EF0()
{
  sub_240CD09A8();
}

uint64_t sub_240CD0F04()
{
  sub_240BE18B8(&qword_25708D988, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27C30);
  return sub_240F1C960();
}

uint64_t sub_240CD0F54(uint64_t a1, uint64_t a2)
{
  return sub_240CD16A8(a1, a2, &qword_25708AF30, (uint64_t)qword_2570F92F0);
}

uint64_t sub_240CD0F70()
{
  sub_240BE18B8(&qword_25708D918, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27C68);
  return sub_240F1CAF8();
}

uint64_t sub_240CD0FB0()
{
  return sub_240C4B5F8(type metadata accessor for Proto_DoubleParameter, &qword_25708D920, (uint64_t)&unk_240F27BA0);
}

uint64_t sub_240CD0FDC()
{
  sub_240BE18B8(&qword_25708D918, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27C68);
  return sub_240F1CB04();
}

void sub_240CD1030(uint64_t a1)
{
  sub_240CD1344(a1, qword_2570F9308);
}

void sub_240CD103C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    v3 = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      OUTLINED_FUNCTION_24_15();
      sub_240F1CA98();
    }
    OUTLINED_FUNCTION_55_8();
  }
  OUTLINED_FUNCTION_53_3();
}

void sub_240CD1080()
{
  uint64_t v0;
  _QWORD *v1;
  unint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_28();
  v2 = v1[1];
  v3 = HIBYTE(v2) & 0xF;
  if ((v2 & 0x2000000000000000) == 0)
    v3 = *v1 & 0xFFFFFFFFFFFFLL;
  if (!v3 || (sub_240F1CBD0(), !v0))
  {
    type metadata accessor for Proto_StringParameter(0);
    OUTLINED_FUNCTION_5_32();
  }
  OUTLINED_FUNCTION_47_3();
}

void sub_240CD10F0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_38_14();
  v10 = *a1 == *a2 && a1[1] == a2[1];
  if (v10 || (sub_240F1CEDC() & 1) != 0)
  {
    v11 = type metadata accessor for Proto_StringParameter(0);
    OUTLINED_FUNCTION_6_21(v11);
    OUTLINED_FUNCTION_13_19();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    v12 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v12(v2, v3);
    v12(v4, v3);
  }
  OUTLINED_FUNCTION_13();
}

unint64_t sub_240CD11C0()
{
  return 0xD000000000000015;
}

void sub_240CD11E4(uint64_t a1, uint64_t a2)
{
  sub_240CD103C(a1, a2);
}

void sub_240CD11F8()
{
  sub_240CD1080();
}

uint64_t sub_240CD120C()
{
  sub_240BE18B8(&qword_25708D9B0, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27AC8);
  return sub_240F1C960();
}

uint64_t sub_240CD125C(uint64_t a1, uint64_t a2)
{
  return sub_240CD16A8(a1, a2, &qword_25708AF38, (uint64_t)qword_2570F9308);
}

uint64_t sub_240CD1278()
{
  sub_240BE18B8(&qword_25708D8F8, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27B00);
  return sub_240F1CAF8();
}

uint64_t sub_240CD12B8()
{
  return sub_240C4B5F8(type metadata accessor for Proto_StringParameter, &qword_25708D900, (uint64_t)&unk_240F27A38);
}

uint64_t sub_240CD12E4()
{
  sub_240BE18B8(&qword_25708D8F8, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27B00);
  return sub_240F1CB04();
}

void sub_240CD1338(uint64_t a1)
{
  sub_240CD1344(a1, qword_2570F9320);
}

void sub_240CD1344(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3 = OUTLINED_FUNCTION_50_12();
  __swift_allocate_value_buffer(v3, a2);
  __swift_project_value_buffer(v3, (uint64_t)a2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240F1DA30;
  v8 = v7 + v6 + *(int *)(v4 + 48);
  *(_QWORD *)(v7 + v6) = 1;
  *(_QWORD *)v8 = "defaultValue";
  *(_QWORD *)(v8 + 8) = 12;
  *(_BYTE *)(v8 + 16) = 2;
  v9 = *MEMORY[0x24BE5C318];
  v10 = sub_240F1CC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 104))(v8, v9, v10);
  sub_240F1CC18();
  OUTLINED_FUNCTION_156();
}

void sub_240CD1438(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    v3 = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 1)
    {
      OUTLINED_FUNCTION_24_15();
      sub_240F1C9C0();
    }
    OUTLINED_FUNCTION_55_8();
  }
  OUTLINED_FUNCTION_53_3();
}

void sub_240CD147C()
{
  uint64_t v0;
  _BYTE *v1;

  OUTLINED_FUNCTION_10_28();
  if (*v1 != 1 || (sub_240F1CB70(), !v0))
  {
    type metadata accessor for Proto_BoolParameter(0);
    OUTLINED_FUNCTION_5_32();
  }
  OUTLINED_FUNCTION_47_3();
}

void sub_240CD14E4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_38_14();
  if (*a1 == *a2)
  {
    v10 = type metadata accessor for Proto_BoolParameter(0);
    OUTLINED_FUNCTION_6_21(v10);
    OUTLINED_FUNCTION_13_19();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    v11 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
    v11(v2, v3);
    v11(v4, v3);
  }
  OUTLINED_FUNCTION_13();
}

unint64_t sub_240CD15A8()
{
  return 0xD000000000000013;
}

uint64_t sub_240CD15C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_12_8(v0, v1, v2, v3);
}

uint64_t sub_240CD15EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_41_9();
  return OUTLINED_FUNCTION_12_8(v0, v1, v2, v3);
}

void sub_240CD1614(uint64_t a1, uint64_t a2)
{
  sub_240CD1438(a1, a2);
}

void sub_240CD1628()
{
  sub_240CD147C();
}

uint64_t sub_240CD163C()
{
  sub_240BE18B8(&qword_25708D9B8, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F27960);
  return sub_240F1C960();
}

uint64_t sub_240CD168C(uint64_t a1, uint64_t a2)
{
  return sub_240CD16A8(a1, a2, &qword_25708AF40, (uint64_t)qword_2570F9320);
}

uint64_t sub_240CD16A8(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_240CD0560(a3, a4);
  OUTLINED_FUNCTION_50_12();
  v4 = OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_12_8(v4, v5, v6, v7);
}

uint64_t sub_240CD16DC()
{
  sub_240BE18B8(&qword_25708D8D8, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F27998);
  return sub_240F1CAF8();
}

uint64_t sub_240CD171C()
{
  return sub_240C4B5F8(type metadata accessor for Proto_BoolParameter, &qword_25708D8E0, (uint64_t)&unk_240F278D0);
}

uint64_t sub_240CD1748()
{
  sub_240BE18B8(&qword_25708D8D8, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F27998);
  return sub_240F1CB04();
}

void sub_240CD179C()
{
  sub_240BE18B8(&qword_25708D8D0, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F278A8);
}

void sub_240CD17C8()
{
  sub_240BE18B8(&qword_25708D8D8, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F27998);
}

void sub_240CD17F4()
{
  sub_240BE18B8(&qword_25708D8E0, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F278D0);
}

void sub_240CD1820()
{
  sub_240BE18B8(&qword_25708D8E8, type metadata accessor for Proto_BoolParameter, (uint64_t)&unk_240F27910);
}

void sub_240CD184C()
{
  sub_240BE18B8(&qword_25708D8F0, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27A10);
}

void sub_240CD1878()
{
  sub_240BE18B8(&qword_25708D8F8, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27B00);
}

void sub_240CD18A4()
{
  sub_240BE18B8(&qword_25708D900, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27A38);
}

void sub_240CD18D0()
{
  sub_240BE18B8(&qword_25708D908, type metadata accessor for Proto_StringParameter, (uint64_t)&unk_240F27A78);
}

void sub_240CD18FC()
{
  sub_240BE18B8(&qword_25708D910, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27B78);
}

void sub_240CD1928()
{
  sub_240BE18B8(&qword_25708D918, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27C68);
}

void sub_240CD1954()
{
  sub_240BE18B8(&qword_25708D920, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27BA0);
}

void sub_240CD1980()
{
  sub_240BE18B8(&qword_25708D928, type metadata accessor for Proto_DoubleParameter, (uint64_t)&unk_240F27BE0);
}

void sub_240CD19AC()
{
  sub_240BE18B8(&qword_25708D930, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27CE0);
}

void sub_240CD19D8()
{
  sub_240BE18B8(&qword_25708D938, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27DD0);
}

void sub_240CD1A04()
{
  sub_240BE18B8(&qword_25708D940, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27D08);
}

void sub_240CD1A30()
{
  sub_240BE18B8(&qword_25708D948, type metadata accessor for Proto_Int64Parameter, (uint64_t)&unk_240F27D48);
}

uint64_t OUTLINED_FUNCTION_5_32()
{
  return sub_240F1C918();
}

void OUTLINED_FUNCTION_11_28(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_20_16(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_24_15()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_25_18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v2, v0);
}

uint64_t OUTLINED_FUNCTION_28_11()
{
  return sub_240F1CC90();
}

uint64_t OUTLINED_FUNCTION_32_16(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;

  return v2(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_36_18(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, *(_QWORD *)(v1 - 88));
}

uint64_t OUTLINED_FUNCTION_37_11(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_39_10()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_41_9()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_48_11()
{
  return sub_240F1CC90();
}

uint64_t OUTLINED_FUNCTION_49_11()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 20);
}

uint64_t OUTLINED_FUNCTION_50_12()
{
  return sub_240F1CC30();
}

uint64_t OUTLINED_FUNCTION_51_8()
{
  return type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
}

uint64_t OUTLINED_FUNCTION_54_14()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, v0);
}

uint64_t OUTLINED_FUNCTION_55_8()
{
  uint64_t v0;

  return v0;
}

void FeatureType.StateParameters.elementType.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_10_29();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_313();
  v9 = type metadata accessor for FeatureType.StateParameters(0);
  sub_240CD1D20(v1 + *(int *)(v9 + 20), (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    *(_QWORD *)v2 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)(v2 + 8) = 0;
    *(_BYTE *)(v2 + 16) = 1;
    v10 = type metadata accessor for Proto_ArrayFeatureType(0);
    v11 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    OUTLINED_FUNCTION_27_1(v11);
    v12 = v2 + *(int *)(v10 + 28);
    *(_QWORD *)v12 = 0;
    *(_BYTE *)(v12 + 8) = -1;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240CD1DBC((uint64_t)v6);
  }
  else
  {
    sub_240BE0B90((uint64_t)v6, v2, type metadata accessor for Proto_StateFeatureType.OneOf_Type);
  }
  v13 = OUTLINED_FUNCTION_2_27();
  sub_240BE0B90(v2, (uint64_t)&a1[*(int *)(v13 + 20)], type metadata accessor for Proto_ArrayFeatureType);
  *a1 = 0;
}

uint64_t type metadata accessor for FeatureType.StateParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D9D0);
}

uint64_t sub_240CD1D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void static FeatureType.StateParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    type metadata accessor for FeatureType.StateParameters(0);
    sub_240DF648C();
  }
}

uint64_t sub_240CD1DBC(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t FeatureType.StateParameters.isOptional.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeatureType.StateParameters.isOptional.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeatureType.StateParameters.isOptional.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_240CD1E1C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v7;

  v2 = type metadata accessor for FeatureType.StateParameters.ElementType(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BE0BF4(a1, (uint64_t)v4, v5);
  return FeatureType.StateParameters.elementType.setter((uint64_t)v4);
}

uint64_t FeatureType.StateParameters.elementType.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_60();
  type metadata accessor for FeatureType.StateParameters.ElementType(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_10_3();
  sub_240BE0BF4(a1, v3, type metadata accessor for FeatureType.StateParameters.ElementType);
  OUTLINED_FUNCTION_66_3(v3, v2);
  sub_240BE0B90(v2 + *(int *)(v6 + 20), v4, type metadata accessor for Proto_ArrayFeatureType);
  sub_240BE27A0(a1, type metadata accessor for FeatureType.StateParameters.ElementType);
  v11 = OUTLINED_FUNCTION_10_29();
  __swift_storeEnumTagSinglePayload(v4, 0, 1, v11);
  v12 = type metadata accessor for FeatureType.StateParameters(0);
  return sub_240CD21C8(v4, v1 + *(int *)(v12 + 20));
}

void (*FeatureType.StateParameters.elementType.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  _BYTE *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_5_33() - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  FeatureType.StateParameters.elementType.getter(v4);
  return sub_240CD2008;
}

void sub_240CD2008(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240BE0BF4(*(_QWORD *)(a1 + 16), (uint64_t)v2, type metadata accessor for FeatureType.StateParameters.ElementType);
    FeatureType.StateParameters.elementType.setter((uint64_t)v2);
    OUTLINED_FUNCTION_15_26((uint64_t)v3);
  }
  else
  {
    FeatureType.StateParameters.elementType.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

void FeatureType.StateParameters.init(elementType:optional:)(uint64_t a1@<X0>, char a2@<W1>, _BYTE *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v8 = OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_5_33();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_10_3();
  *a3 = 0;
  v14 = (uint64_t)&a3[*(int *)(type metadata accessor for FeatureType.StateParameters(0) + 20)];
  OUTLINED_FUNCTION_10_29();
  OUTLINED_FUNCTION_151_0(v14, 1);
  type metadata accessor for Proto_StateFeatureType(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240BE0BF4(a1, (uint64_t)v12, type metadata accessor for FeatureType.StateParameters.ElementType);
  sub_240BE0B90((uint64_t)v12, v3, (uint64_t (*)(_QWORD))type metadata accessor for FeatureType.ShapedArrayParameters);
  sub_240BE0B90(v3 + *(int *)(v8 + 20), v4, type metadata accessor for Proto_ArrayFeatureType);
  sub_240BE27A0(a1, type metadata accessor for FeatureType.StateParameters.ElementType);
  OUTLINED_FUNCTION_151_0(v4, 0);
  sub_240CD21C8(v4, v14);
  *a3 = a2;
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for FeatureType.StateParameters.ElementType(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708D9E0);
}

uint64_t sub_240CD21C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void FeatureType.StateParameters.customMirror.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t *boxed_opaque_existential_0;
  char v11;
  uint64_t v12;

  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_60();
  type metadata accessor for FeatureType.StateParameters(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4((uint64_t)v0, v2, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v9 + 32) = 0x54746E656D656C65;
  *(_QWORD *)(v9 + 40) = 0xEB00000000657079;
  *(_QWORD *)(v9 + 72) = OUTLINED_FUNCTION_5_33();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v9 + 48));
  FeatureType.StateParameters.elementType.getter(boxed_opaque_existential_0);
  *(_QWORD *)(v9 + 80) = 0x6E6F6974704F7369;
  *(_QWORD *)(v9 + 88) = 0xEA00000000006C61;
  v11 = *v0;
  *(_QWORD *)(v9 + 120) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v9 + 96) = v11;
  v12 = sub_240F1CF84();
  OUTLINED_FUNCTION_27_1(v12);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

BOOL static FeatureType.StateParameters.ElementType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  _BOOL8 v15;
  uint64_t v17;

  OUTLINED_FUNCTION_2_27();
  OUTLINED_FUNCTION_0();
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (unsigned __int8 *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (unsigned __int8 *)&v17 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D9C0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_48();
  v13 = v2 + *(int *)(v12 + 48);
  sub_240BE0BF4(a1, v2, type metadata accessor for FeatureType.StateParameters.ElementType);
  sub_240BE0BF4(a2, v13, type metadata accessor for FeatureType.StateParameters.ElementType);
  OUTLINED_FUNCTION_66_3(v2, (uint64_t)v10);
  OUTLINED_FUNCTION_66_3(v13, (uint64_t)v8);
  v15 = 0;
  if (*v10 == *v8)
  {
    sub_240DF6114();
    if ((v14 & 1) != 0)
      v15 = 1;
  }
  OUTLINED_FUNCTION_15_26((uint64_t)v8);
  OUTLINED_FUNCTION_15_26((uint64_t)v10);
  return v15;
}

unint64_t sub_240CD24E0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708D9C8;
  if (!qword_25708D9C8)
  {
    v1 = type metadata accessor for Proto_StateFeatureType(255);
    result = MEMORY[0x24268C2AC](&unk_240F38F30, v1);
    atomic_store(result, (unint64_t *)&qword_25708D9C8);
  }
  return result;
}

void sub_240CD2524(_BYTE *a1@<X8>)
{
  FeatureType.StateParameters.elementType.getter(a1);
}

uint64_t *_s15StateParametersVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  char *v34;
  char *v35;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v10 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v10 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (uint64_t *)((char *)a1 + v5);
    v7 = (uint64_t *)((char *)a2 + v5);
    v8 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
    {
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
      memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
    }
    else
    {
      v11 = v7[1];
      *v6 = *v7;
      v6[1] = v11;
      *((_BYTE *)v6 + 16) = *((_BYTE *)v7 + 16);
      v12 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
      v13 = v12[6];
      v14 = (_QWORD *)((char *)v6 + v13);
      v15 = (_QWORD *)((char *)v7 + v13);
      v16 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
      {
        v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
        memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v14 = *v15;
        if (EnumCaseMultiPayload == 1)
          v19 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v19 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
        v34 = (char *)v15 + v19;
        v35 = (char *)v14 + v19;
        v20 = sub_240F1C930();
        v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
        swift_bridgeObjectRetain();
        v21(v35, v34, v20);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
      }
      v22 = v12[7];
      v23 = (char *)v6 + v22;
      v24 = (char *)v7 + v22;
      *(_QWORD *)v23 = *(_QWORD *)v24;
      v23[8] = v24[8];
      v25 = v12[8];
      v26 = (char *)v6 + v25;
      v27 = (char *)v7 + v25;
      v28 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
    }
    v29 = *(int *)(type metadata accessor for Proto_StateFeatureType(0) + 20);
    v30 = (char *)v6 + v29;
    v31 = (char *)v7 + v29;
    v32 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
  }
  return v3;
}

uint64_t _s15StateParametersVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
  if (!__swift_getEnumTagSinglePayload(v2, 1, v3))
  {
    swift_bridgeObjectRelease();
    v4 = type metadata accessor for Proto_ArrayFeatureType(0);
    v5 = v2 + *(int *)(v4 + 24);
    v6 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      swift_bridgeObjectRelease();
      if (EnumCaseMultiPayload == 1)
        v8 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
      else
        v8 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
      v9 = v5 + *(int *)(v8 + 20);
      v10 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
    }
    v11 = v2 + *(int *)(v4 + 32);
    v12 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 8))(v11, v12);
  }
  v13 = v2 + *(int *)(type metadata accessor for Proto_StateFeatureType(0) + 20);
  v14 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
}

_BYTE *_s15StateParametersVwcp(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  char *v32;
  char *v33;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = v6[1];
    *v5 = *v6;
    v5[1] = v9;
    *((_BYTE *)v5 + 16) = *((_BYTE *)v6 + 16);
    v10 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
    v11 = v10[6];
    v12 = (_QWORD *)((char *)v5 + v11);
    v13 = (_QWORD *)((char *)v6 + v11);
    v14 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v12 = *v13;
      if (EnumCaseMultiPayload == 1)
        v17 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v17 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v32 = (char *)v13 + v17;
      v33 = (char *)v12 + v17;
      v18 = sub_240F1C930();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v33, v32, v18);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    v20 = v10[7];
    v21 = (char *)v5 + v20;
    v22 = (char *)v6 + v20;
    *(_QWORD *)v21 = *(_QWORD *)v22;
    v21[8] = v22[8];
    v23 = v10[8];
    v24 = (char *)v5 + v23;
    v25 = (char *)v6 + v23;
    v26 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  v27 = *(int *)(type metadata accessor for Proto_StateFeatureType(0) + 20);
  v28 = (char *)v5 + v27;
  v29 = (char *)v6 + v27;
  v30 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
  return a1;
}

_BYTE *_s15StateParametersVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int *v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  int v25;
  int v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  int v32;
  uint64_t v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char *v63;
  char *v64;
  char *v65;
  char *v66;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (uint64_t)&a1[v5];
  v7 = (uint64_t)&a2[v5];
  v8 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!EnumTagSinglePayload)
  {
    if (v10)
    {
      sub_240BE27A0(v6, type metadata accessor for Proto_StateFeatureType.OneOf_Type);
      goto LABEL_7;
    }
    *(_QWORD *)v6 = *(_QWORD *)v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v19 = *(_QWORD *)(v7 + 8);
    *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
    *(_QWORD *)(v6 + 8) = v19;
    v20 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
    v21 = v20[6];
    v22 = (_QWORD *)(v6 + v21);
    v23 = (_QWORD *)(v7 + v21);
    v24 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v24);
    v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24);
    if (v25)
    {
      if (!v26)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v22 = *v23;
        if (EnumCaseMultiPayload == 1)
          v28 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v28 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
        v29 = (char *)v22 + v28;
        v64 = (char *)v23 + v28;
        v30 = sub_240F1C930();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v29, v64, v30);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v26)
      {
        if (a1 != a2)
        {
          sub_240BE27A0((uint64_t)v22, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
          v45 = swift_getEnumCaseMultiPayload();
          *v22 = *v23;
          if (v45 == 1)
            v46 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
          else
            v46 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
          v47 = (char *)v22 + v46;
          v66 = (char *)v23 + v46;
          v48 = sub_240F1C930();
          v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
          swift_bridgeObjectRetain();
          v49(v47, v66, v48);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_240BE27A0((uint64_t)v22, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_27:
    v50 = v20[7];
    v51 = v6 + v50;
    v52 = (uint64_t *)(v7 + v50);
    v53 = *v52;
    *(_BYTE *)(v51 + 8) = *((_BYTE *)v52 + 8);
    *(_QWORD *)v51 = v53;
    v54 = v20[8];
    v55 = v6 + v54;
    v56 = v7 + v54;
    v57 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v57 - 8) + 24))(v55, v56, v57);
    goto LABEL_28;
  }
  if (v10)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
    memcpy((void *)v6, (const void *)v7, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_28;
  }
  *(_QWORD *)v6 = *(_QWORD *)v7;
  v11 = *(_QWORD *)(v7 + 8);
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  *(_QWORD *)(v6 + 8) = v11;
  v12 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v13 = v12[6];
  v14 = (_QWORD *)(v6 + v13);
  v15 = (_QWORD *)(v7 + v13);
  v16 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v32 = swift_getEnumCaseMultiPayload();
    *v14 = *v15;
    if (v32 == 1)
      v33 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v33 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v63 = (char *)v15 + v33;
    v65 = (char *)v14 + v33;
    v34 = sub_240F1C930();
    v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
    swift_bridgeObjectRetain();
    v35(v65, v63, v34);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v37 = v12[7];
  v38 = v6 + v37;
  v39 = (uint64_t *)(v7 + v37);
  v40 = *v39;
  *(_BYTE *)(v38 + 8) = *((_BYTE *)v39 + 8);
  *(_QWORD *)v38 = v40;
  v41 = v12[8];
  v42 = v6 + v41;
  v43 = v7 + v41;
  v44 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 16))(v42, v43, v44);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v8);
LABEL_28:
  v58 = *(int *)(type metadata accessor for Proto_StateFeatureType(0) + 20);
  v59 = v6 + v58;
  v60 = v7 + v58;
  v61 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v61 - 8) + 24))(v59, v60, v61);
  return a1;
}

_BYTE *_s15StateParametersVwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  int EnumCaseMultiPayload;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = v6[1];
    *v5 = *v6;
    v5[1] = v9;
    *((_BYTE *)v5 + 16) = *((_BYTE *)v6 + 16);
    v10 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
    v11 = v10[6];
    v12 = (_QWORD *)((char *)v5 + v11);
    v13 = (_QWORD *)((char *)v6 + v11);
    v14 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v12 = *v13;
      if (EnumCaseMultiPayload == 1)
        v17 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v17 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v18 = (char *)v12 + v17;
      v19 = (char *)v13 + v17;
      v20 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    v21 = v10[7];
    v22 = (char *)v5 + v21;
    v23 = (char *)v6 + v21;
    *(_QWORD *)v22 = *(_QWORD *)v23;
    v22[8] = v23[8];
    v24 = v10[8];
    v25 = (char *)v5 + v24;
    v26 = (char *)v6 + v24;
    v27 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  v28 = *(int *)(type metadata accessor for Proto_StateFeatureType(0) + 20);
  v29 = (char *)v5 + v28;
  v30 = (char *)v6 + v28;
  v31 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
  return a1;
}

_BYTE *_s15StateParametersVwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  int *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  int v24;
  int v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (uint64_t)&a1[v5];
  v7 = (uint64_t)&a2[v5];
  v8 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!EnumTagSinglePayload)
  {
    if (v10)
    {
      sub_240BE27A0(v6, type metadata accessor for Proto_StateFeatureType.OneOf_Type);
      goto LABEL_7;
    }
    *(_QWORD *)v6 = *(_QWORD *)v7;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v6 + 8) = *(_QWORD *)(v7 + 8);
    *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
    v19 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
    v20 = v19[6];
    v21 = (_QWORD *)(v6 + v20);
    v22 = (_QWORD *)(v7 + v20);
    v23 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v23);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23);
    if (v24)
    {
      if (!v25)
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *v21 = *v22;
        if (EnumCaseMultiPayload == 1)
          v27 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
        else
          v27 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
        v28 = (char *)v21 + v27;
        v29 = (char *)v22 + v27;
        v30 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
        goto LABEL_27;
      }
    }
    else
    {
      if (!v25)
      {
        if (a1 != a2)
        {
          sub_240BE27A0((uint64_t)v21, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
          v44 = swift_getEnumCaseMultiPayload();
          *v21 = *v22;
          if (v44 == 1)
            v45 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
          else
            v45 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
          v46 = (char *)v21 + v45;
          v47 = (char *)v22 + v45;
          v48 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 32))(v46, v47, v48);
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_27;
      }
      sub_240BE27A0((uint64_t)v21, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
LABEL_27:
    v49 = v19[7];
    v50 = v6 + v49;
    v51 = v7 + v49;
    *(_QWORD *)v50 = *(_QWORD *)v51;
    *(_BYTE *)(v50 + 8) = *(_BYTE *)(v51 + 8);
    v52 = v19[8];
    v53 = v6 + v52;
    v54 = v7 + v52;
    v55 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 - 8) + 40))(v53, v54, v55);
    goto LABEL_28;
  }
  if (v10)
  {
LABEL_7:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C548);
    memcpy((void *)v6, (const void *)v7, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_28;
  }
  v11 = *(_QWORD *)(v7 + 8);
  *(_QWORD *)v6 = *(_QWORD *)v7;
  *(_QWORD *)(v6 + 8) = v11;
  *(_BYTE *)(v6 + 16) = *(_BYTE *)(v7 + 16);
  v12 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v13 = v12[6];
  v14 = (_QWORD *)(v6 + v13);
  v15 = (_QWORD *)(v7 + v13);
  v16 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
  {
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
  }
  else
  {
    v31 = swift_getEnumCaseMultiPayload();
    *v14 = *v15;
    if (v31 == 1)
      v32 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v32 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v33 = (char *)v14 + v32;
    v34 = (char *)v15 + v32;
    v35 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  }
  v37 = v12[7];
  v38 = v6 + v37;
  v39 = v7 + v37;
  *(_QWORD *)v38 = *(_QWORD *)v39;
  *(_BYTE *)(v38 + 8) = *(_BYTE *)(v39 + 8);
  v40 = v12[8];
  v41 = v6 + v40;
  v42 = v7 + v40;
  v43 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
  __swift_storeEnumTagSinglePayload(v6, 0, 1, v8);
LABEL_28:
  v56 = *(int *)(type metadata accessor for Proto_StateFeatureType(0) + 20);
  v57 = v6 + v56;
  v58 = v7 + v56;
  v59 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 40))(v57, v58, v59);
  return a1;
}

uint64_t _s15StateParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD37E8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Proto_StateFeatureType);
}

uint64_t _s15StateParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_240CD3800(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, type metadata accessor for Proto_StateFeatureType);
}

uint64_t sub_240CD380C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_StateFeatureType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *_s15StateParametersV11ElementTypeOwCP(_BYTE *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  int *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  char *v31;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *(_BYTE *)a2;
    v6 = *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
    v7 = (char *)v4 + v6;
    v8 = (char *)a2 + v6;
    v7[16] = *((_BYTE *)a2 + v6 + 16);
    v10 = *(_QWORD *)((char *)a2 + v6);
    v9 = *(_QWORD *)((char *)a2 + v6 + 8);
    *(_QWORD *)v7 = v10;
    *((_QWORD *)v7 + 1) = v9;
    v11 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
    v12 = v11[6];
    v13 = &v7[v12];
    v14 = &v8[v12];
    v15 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v13 = *(_QWORD *)v14;
      if (EnumCaseMultiPayload == 1)
        v19 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v19 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v20 = &v13[v19];
      v31 = &v14[v19];
      v21 = sub_240F1C930();
      v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
      swift_bridgeObjectRetain();
      v22(v20, v31, v21);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
    v23 = v11[7];
    v24 = &v7[v23];
    v25 = &v8[v23];
    *(_QWORD *)v24 = *(_QWORD *)v25;
    v24[8] = v25[8];
    v26 = v11[8];
    v27 = &v7[v26];
    v28 = &v8[v26];
    v29 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
  }
  return v4;
}

uint64_t _s15StateParametersV11ElementTypeOwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = a1 + *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_ArrayFeatureType(0);
  v3 = v1 + *(int *)(v2 + 24);
  v4 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
    else
      v6 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
    v7 = v3 + *(int *)(v6 + 20);
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = v1 + *(int *)(v2 + 32);
  v10 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_BYTE *_s15StateParametersV11ElementTypeOwcp(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  int *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  _BYTE *v21;
  _BYTE *v22;
  uint64_t v23;
  _BYTE *v24;
  _BYTE *v25;
  uint64_t v26;
  char *v28;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v5[16] = a2[v4 + 16];
  v8 = *(_QWORD *)&a2[v4];
  v7 = *(_QWORD *)&a2[v4 + 8];
  *(_QWORD *)v5 = v8;
  *((_QWORD *)v5 + 1) = v7;
  v9 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v10 = v9[6];
  v11 = &v5[v10];
  v12 = &v6[v10];
  v13 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v11 = *v12;
    if (EnumCaseMultiPayload == 1)
      v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v17 = (char *)v11 + v16;
    v28 = (char *)v12 + v16;
    v18 = sub_240F1C930();
    v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
    swift_bridgeObjectRetain();
    v19(v17, v28, v18);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v20 = v9[7];
  v21 = &v5[v20];
  v22 = &v6[v20];
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = v9[8];
  v24 = &v5[v23];
  v25 = &v6[v23];
  v26 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  return a1;
}

_BYTE *_s15StateParametersV11ElementTypeOwca(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  int EnumCaseMultiPayload;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  uint64_t v30;
  _BYTE *v31;
  _BYTE *v32;
  uint64_t v33;
  char *v35;
  char *v36;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_QWORD *)&a1[v4] = *(_QWORD *)&a2[v4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v7 = *((_QWORD *)v6 + 1);
  v5[16] = v6[16];
  *((_QWORD *)v5 + 1) = v7;
  v8 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v9 = v8[6];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v10 = *v11;
      if (EnumCaseMultiPayload == 1)
        v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v16 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v17 = (char *)v10 + v16;
      v35 = (char *)v11 + v16;
      v18 = sub_240F1C930();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      v19(v17, v35, v18);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_15;
    }
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_15;
  }
  if (v14)
  {
    sub_240BE27A0((uint64_t)v10, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)v10, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    v21 = swift_getEnumCaseMultiPayload();
    *v10 = *v11;
    if (v21 == 1)
      v22 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v22 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v23 = (char *)v10 + v22;
    v36 = (char *)v11 + v22;
    v24 = sub_240F1C930();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v23, v36, v24);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v26 = v8[7];
  v27 = &v5[v26];
  v28 = &v6[v26];
  v29 = *(_QWORD *)v28;
  v27[8] = v28[8];
  *(_QWORD *)v27 = v29;
  v30 = v8[8];
  v31 = &v5[v30];
  v32 = &v6[v30];
  v33 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

_BYTE *_s15StateParametersV11ElementTypeOwtk(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  _BYTE *v23;
  _BYTE *v24;
  uint64_t v25;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v5[16] = a2[v4 + 16];
  v7 = *(_QWORD *)&a2[v4 + 8];
  *(_QWORD *)v5 = *(_QWORD *)&a2[v4];
  *((_QWORD *)v5 + 1) = v7;
  v8 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v9 = v8[6];
  v10 = &v5[v9];
  v11 = &v6[v9];
  v12 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v10 = *v11;
    if (EnumCaseMultiPayload == 1)
      v15 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v15 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v16 = (char *)v10 + v15;
    v17 = (char *)v11 + v15;
    v18 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
  }
  v19 = v8[7];
  v20 = &v5[v19];
  v21 = &v6[v19];
  *(_QWORD *)v20 = *(_QWORD *)v21;
  v20[8] = v21[8];
  v22 = v8[8];
  v23 = &v5[v22];
  v24 = &v6[v22];
  v25 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
  return a1;
}

_BYTE *_s15StateParametersV11ElementTypeOwta(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  int EnumCaseMultiPayload;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  _BYTE *v26;
  _BYTE *v27;
  uint64_t v28;
  _BYTE *v29;
  _BYTE *v30;
  uint64_t v31;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for FeatureType.ShapedArrayParameters() + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_QWORD *)&a1[v4] = *(_QWORD *)&a2[v4];
  swift_bridgeObjectRelease();
  *((_QWORD *)v5 + 1) = *((_QWORD *)v6 + 1);
  v5[16] = v6[16];
  v7 = (int *)type metadata accessor for Proto_ArrayFeatureType(0);
  v8 = v7[6];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11);
  if (EnumTagSinglePayload)
  {
    if (!v13)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v9 = *v10;
      if (EnumCaseMultiPayload == 1)
        v15 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
      else
        v15 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
      v16 = (char *)v9 + v15;
      v17 = (char *)v10 + v15;
      v18 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
      goto LABEL_15;
    }
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FDE8);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_15;
  }
  if (v13)
  {
    sub_240BE27A0((uint64_t)v9, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE27A0((uint64_t)v9, type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility);
    v20 = swift_getEnumCaseMultiPayload();
    *v9 = *v10;
    if (v20 == 1)
      v21 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0) + 20);
    else
      v21 = *(int *)(type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0) + 20);
    v22 = (char *)v9 + v21;
    v23 = (char *)v10 + v21;
    v24 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v25 = v7[7];
  v26 = &v5[v25];
  v27 = &v6[v25];
  *(_QWORD *)v26 = *(_QWORD *)v27;
  v26[8] = v27[8];
  v28 = v7[8];
  v29 = &v5[v28];
  v30 = &v6[v28];
  v31 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v31 - 8) + 40))(v29, v30, v31);
  return a1;
}

uint64_t _s15StateParametersV11ElementTypeOwet()
{
  type metadata accessor for FeatureType.ShapedArrayParameters();
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD4544(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  return __swift_get_extra_inhabitant_indexTm(a1, a2, a3, type metadata accessor for Proto_ArrayFeatureType);
}

uint64_t _s15StateParametersV11ElementTypeOwst()
{
  type metadata accessor for FeatureType.ShapedArrayParameters();
  return swift_storeEnumTagSinglePayloadGeneric();
}

_BYTE *sub_240CD459C(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  return __swift_store_extra_inhabitant_indexTm_0(a1, a2, a3, a4, type metadata accessor for Proto_ArrayFeatureType);
}

_BYTE *__swift_store_extra_inhabitant_indexTm_0(_BYTE *result, uint64_t a2, int a3, uint64_t a4, uint64_t (*a5)(_QWORD))
{
  _BYTE *v6;
  uint64_t v8;

  v6 = result;
  if (a3 == 254)
  {
    *result = a2 + 1;
  }
  else
  {
    v8 = a5(0);
    return (_BYTE *)__swift_storeEnumTagSinglePayload((uint64_t)&v6[*(int *)(a4 + 20)], a2, a2, v8);
  }
  return result;
}

uint64_t sub_240CD4610(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for FeatureType.ShapedArrayParameters();
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_5_33()
{
  return type metadata accessor for FeatureType.StateParameters.ElementType(0);
}

uint64_t OUTLINED_FUNCTION_10_29()
{
  return type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
}

void OUTLINED_FUNCTION_15_26(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE27A0(a1, v1);
}

BOOL static NeuralNetwork.Layer.RankPreservingReshapeParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE0(*a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v11 = OUTLINED_FUNCTION_1_27();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.rankPreservingReshape(name:inputName:outputName:targetShape:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v14 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  *v7 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_27();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.setter(a7);
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.rankPreservingReshape(targetShape:)@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_27();
  OUTLINED_FUNCTION_315();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_6_24();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.RankPreservingReshapeParameters.init(targetShape:)(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_27();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_6_24();
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v4 = 0;
    v3 = v8;
    v5 = *(_QWORD *)(v8 + 16);
    do
    {
      v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_240BF080C();
      ++v4;
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5++ + 32) = v6;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_240CD4A58()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.setter(v0);
}

uint64_t NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_240BF0790();
    v5 = 0;
    v6 = v10;
    v7 = *(_QWORD *)(v10 + 16);
    do
    {
      v8 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_240BF0790();
      ++v5;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      *(_QWORD *)(v10 + 8 * v7++ + 32) = v8;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  *v2 = v6;
  return result;
}

void (*NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.getter();
  return sub_240CD4BAC;
}

void sub_240CD4BAC(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_6_24();
    OUTLINED_FUNCTION_44();
  }
}

void NeuralNetwork.Layer.RankPreservingReshapeParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.RankPreservingReshapeParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  sub_240CD4D98(v0, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = 0x6853746567726174;
  *(_QWORD *)(v9 + 40) = 0xEB00000000657061;
  v10 = NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.getter();
  *(_QWORD *)(v9 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v9 + 48) = v10;
  v11 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.RankPreservingReshapeParameters()
{
  uint64_t result;

  result = qword_25708D9F8;
  if (!qword_25708D9F8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CD4D98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.RankPreservingReshapeParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CD4DDC()
{
  return sub_240C30D44(&qword_25708D9F0, type metadata accessor for Proto_RankPreservingReshapeLayerParams, (uint64_t)&unk_240F4C6C4);
}

void sub_240CD4E08(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *_s31RankPreservingReshapeParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_RankPreservingReshapeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s31RankPreservingReshapeParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s31RankPreservingReshapeParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s31RankPreservingReshapeParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s31RankPreservingReshapeParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s31RankPreservingReshapeParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s31RankPreservingReshapeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD50F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_27();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s31RankPreservingReshapeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD5134(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_27();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CD5168()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_RankPreservingReshapeLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_27()
{
  return type metadata accessor for Proto_RankPreservingReshapeLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_6_24()
{
  uint64_t v0;

  return NeuralNetwork.Layer.RankPreservingReshapeParameters.targetShape.setter(v0);
}

uint64_t sub_240CD51E0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  unint64_t v13;
  _QWORD v14[2];
  uint64_t v15;

  v3 = type metadata accessor for Proto_ImageFeatureType.ImageSize(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (_QWORD *)((char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (!v7)
    return v8;
  v14[1] = v1;
  v15 = MEMORY[0x24BEE4AF8];
  sub_240BF0E34();
  v8 = v15;
  v9 = (uint64_t *)(a1 + 40);
  while (1)
  {
    v11 = *(v9 - 1);
    v10 = *v9;
    result = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    if (v11 < 0)
      break;
    *v6 = v11;
    if (v10 < 0)
      goto LABEL_10;
    v6[1] = v10;
    v15 = v8;
    v13 = *(_QWORD *)(v8 + 16);
    if (v13 >= *(_QWORD *)(v8 + 24) >> 1)
    {
      sub_240BF0E34();
      v8 = v15;
    }
    v9 += 2;
    *(_QWORD *)(v8 + 16) = v13 + 1;
    sub_240C35540((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v13, type metadata accessor for Proto_ImageFeatureType.ImageSize);
    if (!--v7)
      return v8;
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

void FeatureType.ImageParameters.init(width:height:colorSpace:optional:)()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  unsigned __int8 *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v9 = *v8;
  OUTLINED_FUNCTION_1_28();
  v11 = &v7[v10];
  v12 = OUTLINED_FUNCTION_6_25();
  v13 = (uint64_t)v11 + *(int *)(v12 + 24);
  v14 = OUTLINED_FUNCTION_8_24();
  OUTLINED_FUNCTION_17_11(v13, 1, v15, v14);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v11 = v5;
  v11[1] = v3;
  v16 = (char *)v11 + *(int *)(v12 + 28);
  *(_QWORD *)v16 = v9 + 1;
  v16[8] = 1;
  *v7 = v1;
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for FeatureType.ImageParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F8C0);
}

void static FeatureType.ImageParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2)
  {
    OUTLINED_FUNCTION_1_28();
    sub_240DF6744();
  }
}

void FeatureType.ImageParameters.colorSpace.getter(char *a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char v4;

  v3 = v1 + *(int *)(type metadata accessor for FeatureType.ImageParameters(0) + 20);
  if (*(_BYTE *)(v3 + *(int *)(OUTLINED_FUNCTION_6_25() + 28) + 8) == 1)
    OUTLINED_FUNCTION_18_17();
  else
    v4 = 4;
  *a1 = v4;
  OUTLINED_FUNCTION_44();
}

uint64_t FeatureType.ImageParameters.width.getter()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_1_28();
  return *(_QWORD *)(v0 + v1);
}

uint64_t FeatureType.ImageParameters.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for FeatureType.ImageParameters(0) + 20) + 8);
}

uint64_t FeatureType.ImageParameters.Size.init(width:height:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

void FeatureType.ImageParameters.sizeFlexibility.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = OUTLINED_FUNCTION_8_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_3();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = v1 + *(int *)(OUTLINED_FUNCTION_10_30() + 20);
  v14 = OUTLINED_FUNCTION_6_25();
  sub_240C02F94(v13 + *(int *)(v14 + 24), v2, &qword_25708C538);
  v15 = 1;
  if (__swift_getEnumTagSinglePayload(v2, 1, v4) != 1)
  {
    sub_240C35540(v2, (uint64_t)v11, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    sub_240C355AC((uint64_t)v11, v8, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    sub_240CD5898();
    OUTLINED_FUNCTION_3_2((uint64_t)v11);
    v15 = 0;
  }
  v16 = type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(0);
  OUTLINED_FUNCTION_17_11(a1, v15, v17, v16);
  OUTLINED_FUNCTION_13();
}

uint64_t FeatureType.ImageParameters.isOptional.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t FeatureType.ImageParameters.isOptional.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeatureType.ImageParameters.isOptional.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void FeatureType.ImageParameters.width.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  OUTLINED_FUNCTION_1_28();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*FeatureType.ImageParameters.width.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_1_28();
  v4 = *(_QWORD *)(v1 + v3);
  *(_DWORD *)(a1 + 16) = v3;
  *(_QWORD *)a1 = v4;
  return sub_240CD5654;
}

uint64_t sub_240CD5654(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(result + 8) + *(int *)(result + 16)) = *(_QWORD *)result;
  return result;
}

void FeatureType.ImageParameters.height.setter(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(int *)(type metadata accessor for FeatureType.ImageParameters(0) + 20) + 8) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*FeatureType.ImageParameters.height.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  uint64_t v3;

  *(_QWORD *)(a1 + 8) = v1;
  OUTLINED_FUNCTION_1_28();
  *(_DWORD *)(a1 + 16) = v3;
  *(_QWORD *)a1 = *(_QWORD *)(v1 + v3 + 8);
  return sub_240CD56D0;
}

uint64_t sub_240CD56D0(uint64_t result)
{
  *(_QWORD *)(*(_QWORD *)(result + 8) + *(int *)(result + 16) + 8) = *(_QWORD *)result;
  return result;
}

uint64_t sub_240CD56E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D560);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C02F94(a1, (uint64_t)v4, &qword_25708D560);
  return FeatureType.ImageParameters.sizeFlexibility.setter((uint64_t)v4);
}

uint64_t FeatureType.ImageParameters.sizeFlexibility.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D560);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (uint64_t *)((char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_240C02F94(a1, v1, &qword_25708D560);
  v8 = type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(0);
  if (__swift_getEnumTagSinglePayload(v1, 1, v8) == 1)
  {
    sub_240BE0B68(a1, &qword_25708D560);
    sub_240BE0B68(v1, &qword_25708D560);
    v9 = 1;
  }
  else
  {
    sub_240CD5D60(v7);
    sub_240BE0B68(a1, &qword_25708D560);
    sub_240BE10B8(v1, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
    v9 = 0;
  }
  v10 = OUTLINED_FUNCTION_8_24();
  OUTLINED_FUNCTION_17_11((uint64_t)v7, v9, v11, v10);
  OUTLINED_FUNCTION_1_28();
  v13 = v2 + v12;
  v14 = OUTLINED_FUNCTION_6_25();
  return sub_240CD63C0((uint64_t)v7, v13 + *(int *)(v14 + 24));
}

void sub_240CD5898()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(_QWORD);
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v57 = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85();
  v54 = v8;
  MEMORY[0x24BDAC7A8](v9);
  v53 = (uint64_t)&v50 - v10;
  v52 = OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_85();
  v58 = v12;
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v50 - v14;
  v16 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_313();
  v18 = type metadata accessor for Proto_ImageFeatureType.ImageSize(0);
  v50 = *(_QWORD *)(v18 - 8);
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_11_3();
  v21 = (uint64_t *)(v19 - v20);
  MEMORY[0x24BDAC7A8](v22);
  v24 = (char *)&v50 - v23;
  v55 = OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8](v26);
  v51 = (char *)&v50 - v27;
  type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_8_24();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_18();
  v56 = v5;
  sub_240C355AC(v5, v0, v30);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240C35540(v0, v1, type metadata accessor for Proto_ImageFeatureType.ImageSizeRange);
    v31 = v53;
    sub_240C02F94(v1 + *(int *)(v16 + 20), v53, &qword_25708C530);
    v32 = v52;
    if (__swift_getEnumTagSinglePayload(v31, 1, v52) == 1)
    {
      v33 = OUTLINED_FUNCTION_22_14();
      OUTLINED_FUNCTION_62_3(v33, &qword_25708C530);
    }
    else
    {
      sub_240C35540(v31, (uint64_t)v15, type metadata accessor for Proto_SizeRange);
    }
    v46 = v54;
    sub_240C35540((uint64_t)v15, (uint64_t)v2, type metadata accessor for Proto_SizeRange);
    sub_240C02F94(v1 + *(int *)(v16 + 24), v46, &qword_25708C530);
    if (__swift_getEnumTagSinglePayload(v46, 1, v32) == 1)
    {
      v47 = v58;
      v48 = OUTLINED_FUNCTION_22_14();
      OUTLINED_FUNCTION_62_3(v48, &qword_25708C530);
    }
    else
    {
      v47 = v58;
      sub_240C35540(v46, v58, type metadata accessor for Proto_SizeRange);
    }
    v49 = (uint64_t)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
    sub_240BE10B8(v56, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    sub_240BE10B8(v1, type metadata accessor for Proto_ImageFeatureType.ImageSizeRange);
    sub_240C35540(v47, v49, type metadata accessor for Proto_SizeRange);
    swift_storeEnumTagMultiPayload();
    v45 = v57;
LABEL_21:
    sub_240C35540((uint64_t)v2, v45, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
    OUTLINED_FUNCTION_1();
    return;
  }
  sub_240C35540(v0, v3, type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes);
  v34 = *(_QWORD *)v3;
  v35 = *(_QWORD *)(*(_QWORD *)v3 + 16);
  if (!v35)
  {
    swift_bridgeObjectRetain();
    v40 = MEMORY[0x24BEE4AF8];
    v44 = v56;
    v45 = v57;
    v2 = v51;
LABEL_20:
    sub_240BE10B8(v44, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    swift_bridgeObjectRelease();
    sub_240BE10B8(v3, type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes);
    *v2 = v40;
    swift_storeEnumTagMultiPayload();
    goto LABEL_21;
  }
  v54 = v3;
  v59 = MEMORY[0x24BEE4AF8];
  swift_bridgeObjectRetain();
  sub_240BF0E60(0, v35, 0);
  v36 = *(unsigned __int8 *)(v50 + 80);
  v53 = v34;
  v37 = v34 + ((v36 + 32) & ~v36);
  v58 = *(_QWORD *)(v50 + 72);
  while (1)
  {
    sub_240C355AC(v37, (uint64_t)v24, type metadata accessor for Proto_ImageFeatureType.ImageSize);
    sub_240C355AC((uint64_t)v24, (uint64_t)v21, type metadata accessor for Proto_ImageFeatureType.ImageSize);
    v38 = *v21;
    if (*v21 < 0)
      break;
    v39 = v21[1];
    if (v39 < 0)
      goto LABEL_23;
    sub_240BE10B8((uint64_t)v21, type metadata accessor for Proto_ImageFeatureType.ImageSize);
    sub_240BE10B8((uint64_t)v24, type metadata accessor for Proto_ImageFeatureType.ImageSize);
    v40 = v59;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_240BF0E60(0, *(_QWORD *)(v40 + 16) + 1, 1);
      v40 = v59;
    }
    v42 = *(_QWORD *)(v40 + 16);
    v41 = *(_QWORD *)(v40 + 24);
    if (v42 >= v41 >> 1)
    {
      sub_240BF0E60((char *)(v41 > 1), v42 + 1, 1);
      v40 = v59;
    }
    *(_QWORD *)(v40 + 16) = v42 + 1;
    v43 = v40 + 16 * v42;
    *(_QWORD *)(v43 + 32) = v38;
    *(_QWORD *)(v43 + 40) = v39;
    v37 += v58;
    if (!--v35)
    {
      v44 = v56;
      v45 = v57;
      v3 = v54;
      v2 = v51;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
}

void sub_240CD5D60(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[16];

  v3 = v1;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_3();
  v8 = v6 - v7;
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = &v23[-v11];
  v13 = MEMORY[0x24BDAC7A8](v10);
  v15 = &v23[-v14];
  MEMORY[0x24BDAC7A8](v13);
  v17 = &v23[-v16];
  OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_48();
  sub_240C355AC(v3, (uint64_t)v2, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v20 = (uint64_t)v2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
    sub_240C35540((uint64_t)v2, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240C35540(v20, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240C355AC((uint64_t)v17, (uint64_t)v12, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240C355AC((uint64_t)v15, v8, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240CD6620((uint64_t)v12, v8, (uint64_t)a1);
    sub_240BE10B8((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240BE10B8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  }
  else
  {
    v21 = *v2;
    type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v22 = sub_240CD51E0(v21);
    swift_bridgeObjectRelease();
    *a1 = v22;
  }
  OUTLINED_FUNCTION_8_24();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_13();
}

void (*FeatureType.ImageParameters.sizeFlexibility.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = malloc(0x50uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_8_24();
  v3[1] = v4;
  v5 = OUTLINED_FUNCTION_152();
  v3[2] = v5;
  v6 = OUTLINED_FUNCTION_152();
  v3[3] = v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
  v3[4] = OUTLINED_FUNCTION_152();
  v7 = OUTLINED_FUNCTION_152();
  v3[5] = v7;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708D560);
  v3[6] = OUTLINED_FUNCTION_152();
  v3[7] = OUTLINED_FUNCTION_152();
  v8 = OUTLINED_FUNCTION_152();
  v3[8] = v8;
  OUTLINED_FUNCTION_1_28();
  *((_DWORD *)v3 + 18) = v9;
  v10 = v1 + v9;
  v11 = *(int *)(OUTLINED_FUNCTION_6_25() + 24);
  *((_DWORD *)v3 + 19) = v11;
  sub_240C02F94(v10 + v11, (uint64_t)v7, &qword_25708C538);
  v12 = 1;
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v4) != 1)
  {
    sub_240C35540((uint64_t)v7, (uint64_t)v6, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    sub_240C355AC((uint64_t)v6, (uint64_t)v5, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    sub_240CD5898();
    OUTLINED_FUNCTION_3_2((uint64_t)v6);
    v12 = 0;
  }
  v13 = type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(0);
  OUTLINED_FUNCTION_17_11((uint64_t)v8, v12, v14, v13);
  return sub_240CD60A4;
}

void sub_240CD60A4()
{
  int **v0;
  int *v1;
  void *v2;
  void *v3;
  char v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22();
  v1 = *v0;
  v2 = (void *)*((_QWORD *)*v0 + 7);
  v3 = (void *)*((_QWORD *)*v0 + 8);
  if ((v4 & 1) != 0)
  {
    v6 = (void *)*((_QWORD *)v1 + 5);
    v5 = (void *)*((_QWORD *)v1 + 6);
    v8 = (void *)*((_QWORD *)v1 + 3);
    v7 = (void *)*((_QWORD *)v1 + 4);
    v9 = (void *)*((_QWORD *)v1 + 2);
    sub_240C02F94(*((_QWORD *)*v0 + 8), (uint64_t)v5, &qword_25708D560);
    FeatureType.ImageParameters.sizeFlexibility.setter((uint64_t)v5);
    sub_240BE0B68((uint64_t)v3, &qword_25708D560);
  }
  else
  {
    sub_240C02F94(*((_QWORD *)*v0 + 8), (uint64_t)v2, &qword_25708D560);
    v10 = type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v2, 1, v10);
    v12 = *((_QWORD *)v1 + 7);
    v13 = *((_QWORD *)v1 + 8);
    if (EnumTagSinglePayload == 1)
    {
      sub_240BE0B68(*((_QWORD *)v1 + 8), &qword_25708D560);
      sub_240BE0B68(v12, &qword_25708D560);
      v15 = 1;
    }
    else
    {
      sub_240CD5D60(*((uint64_t **)v1 + 4));
      sub_240BE0B68(v13, &qword_25708D560);
      sub_240BE10B8(v12, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
      v15 = 0;
    }
    v2 = (void *)*((_QWORD *)v1 + 7);
    v3 = (void *)*((_QWORD *)v1 + 8);
    v6 = (void *)*((_QWORD *)v1 + 5);
    v5 = (void *)*((_QWORD *)v1 + 6);
    v8 = (void *)*((_QWORD *)v1 + 3);
    v7 = (void *)*((_QWORD *)v1 + 4);
    v9 = (void *)*((_QWORD *)v1 + 2);
    v16 = *(_QWORD *)v1 + v1[18] + v1[19];
    OUTLINED_FUNCTION_17_11((uint64_t)v7, v15, v14, *((_QWORD *)v1 + 1));
    sub_240CD63C0((uint64_t)v7, v16);
  }
  free(v3);
  free(v2);
  free(v5);
  free(v6);
  free(v7);
  free(v8);
  free(v9);
  free(v1);
}

void sub_240CD621C(char *a1)
{
  char v1;

  v1 = *a1;
  FeatureType.ImageParameters.colorSpace.setter(&v1);
}

void FeatureType.ImageParameters.colorSpace.setter(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = qword_240F28228[*a1];
  v3 = v1 + *(int *)(type metadata accessor for FeatureType.ImageParameters(0) + 20);
  v4 = v3 + *(int *)(OUTLINED_FUNCTION_6_25() + 28);
  *(_QWORD *)v4 = v2;
  *(_BYTE *)(v4 + 8) = 1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*FeatureType.ImageParameters.colorSpace.modify(uint64_t a1))(uint64_t result)
{
  uint64_t v1;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v3 = (char *)(a1 + 16);
  *(_QWORD *)a1 = v1;
  OUTLINED_FUNCTION_1_28();
  *(_DWORD *)(a1 + 8) = v4;
  v5 = v1 + v4;
  v6 = *(int *)(OUTLINED_FUNCTION_6_25() + 28);
  *(_DWORD *)(a1 + 12) = v6;
  if (*(_BYTE *)(v5 + v6 + 8) == 1)
    OUTLINED_FUNCTION_18_17();
  else
    v7 = 4;
  *v3 = v7;
  return sub_240CD630C;
}

uint64_t sub_240CD630C(uint64_t result)
{
  uint64_t v1;

  v1 = *(_QWORD *)result + *(int *)(result + 8) + *(int *)(result + 12);
  *(_QWORD *)v1 = qword_240F28228[*(char *)(result + 16)];
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

void FeatureType.ImageParameters.init()(_BYTE *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;

  *a1 = 0;
  OUTLINED_FUNCTION_1_28();
  v3 = &a1[v2];
  v4 = OUTLINED_FUNCTION_6_25();
  *v3 = 0;
  v3[1] = 0;
  v5 = (uint64_t)v3 + *(int *)(v4 + 24);
  v6 = OUTLINED_FUNCTION_8_24();
  OUTLINED_FUNCTION_17_11(v5, 1, v7, v6);
  v8 = (char *)v3 + *(int *)(v4 + 28);
  *(_QWORD *)v8 = 0;
  v8[8] = 1;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_156();
}

uint64_t type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DA40);
}

uint64_t sub_240CD63C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void FeatureType.ImageParameters.customMirror.getter()
{
  char *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *boxed_opaque_existential_0;
  char v16;
  uint64_t v17;
  uint64_t v18;

  OUTLINED_FUNCTION_22();
  v4 = sub_240F1CF90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_10_30();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_48();
  sub_240C355AC((uint64_t)v0, v3, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240F1D380;
  *(_QWORD *)(v10 + 32) = 0x6874646977;
  *(_QWORD *)(v10 + 40) = 0xE500000000000000;
  v11 = (uint64_t *)&v0[*(int *)(v7 + 20)];
  v12 = MEMORY[0x24BEE1768];
  v14 = *v11;
  v13 = v11[1];
  *(_QWORD *)(v10 + 48) = v14;
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v10 + 80) = 0x746867696568;
  *(_QWORD *)(v10 + 88) = 0xE600000000000000;
  *(_QWORD *)(v10 + 96) = v13;
  *(_QWORD *)(v10 + 120) = v12;
  *(_QWORD *)(v10 + 128) = 0x78656C46657A6973;
  *(_QWORD *)(v10 + 136) = 0xEF7974696C696269;
  *(_QWORD *)(v10 + 168) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708D560);
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 144));
  FeatureType.ImageParameters.sizeFlexibility.getter((uint64_t)boxed_opaque_existential_0);
  *(_QWORD *)(v10 + 176) = 0x617053726F6C6F63;
  *(_QWORD *)(v10 + 184) = 0xEA00000000006563;
  *(_QWORD *)(v10 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708DA08);
  FeatureType.ImageParameters.colorSpace.getter((char *)(v10 + 192));
  *(_QWORD *)(v10 + 224) = 0x6E6F6974704F7369;
  *(_QWORD *)(v10 + 232) = 0xEA00000000006C61;
  v16 = *v0;
  *(_QWORD *)(v10 + 264) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v10 + 240) = v16;
  v17 = sub_240F1CF84();
  OUTLINED_FUNCTION_17_11(v2, 1, v18, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void sub_240CD6620(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_27_18();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v9 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
  v10 = a3 + *(int *)(v9 + 20);
  OUTLINED_FUNCTION_71(v10, 1);
  v11 = a3 + *(int *)(v9 + 24);
  OUTLINED_FUNCTION_71(v11, 1);
  OUTLINED_FUNCTION_120_1(a1, (uint64_t)v8);
  sub_240BE0B68(v10, &qword_25708C530);
  OUTLINED_FUNCTION_6_6((uint64_t)v8, v10);
  OUTLINED_FUNCTION_71(v10, 0);
  OUTLINED_FUNCTION_120_1(a2, (uint64_t)v8);
  sub_240BE0B68(v11, &qword_25708C530);
  OUTLINED_FUNCTION_6_6((uint64_t)v8, v11);
  OUTLINED_FUNCTION_71(v11, 0);
  sub_240BE10B8(a2, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  sub_240BE10B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  OUTLINED_FUNCTION_13();
}

void FeatureType.ImageParameters.SizeFlexibility.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v9 - v4;
  OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_59();
  sub_240C355AC(v0, v0, v7);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v8 = v0 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
    sub_240C35540(v0, (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240C35540(v8, v1, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    OUTLINED_FUNCTION_40_14();
    OUTLINED_FUNCTION_27_18();
    sub_240BE18B8(&qword_25708DA10, type metadata accessor for Proto_SizeRange, (uint64_t)&unk_240F39200);
    OUTLINED_FUNCTION_31_14();
    OUTLINED_FUNCTION_31_14();
    sub_240BE10B8(v1, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
    sub_240BE10B8((uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  }
  else
  {
    OUTLINED_FUNCTION_40_14();
    sub_240C7E0D0();
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_13();
}

uint64_t static FeatureType.ImageParameters.SizeFlexibility.== infix(_:_:)()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int64x2_t **v18;
  uint64_t v19;
  uint64_t v20;
  int64x2_t **v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char v27;
  int64x2_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_22();
  v35 = v3;
  v36 = v4;
  v34 = v5;
  v7 = v6;
  OUTLINED_FUNCTION_46_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_86();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (uint64_t *)((char *)&v33 - v11);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (uint64_t *)((char *)&v33 - v13);
  OUTLINED_FUNCTION_28_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8](v16);
  v18 = (int64x2_t **)((char *)&v33 - v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708DA18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_18();
  v21 = (int64x2_t **)(v0 + *(int *)(v20 + 48));
  OUTLINED_FUNCTION_120_1(v7, v0);
  OUTLINED_FUNCTION_120_1(v34, (uint64_t)v21);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    sub_240C355AC(v0, (uint64_t)v18, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
    v28 = *v18;
    if (OUTLINED_FUNCTION_32_17() != 1)
    {
      v27 = sub_240BEFED8(v28, *v21);
      swift_bridgeObjectRelease();
      v30 = OUTLINED_FUNCTION_165();
      OUTLINED_FUNCTION_31(v30, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
      return v27 & 1;
    }
    v29 = OUTLINED_FUNCTION_165();
    goto LABEL_13;
  }
  sub_240C355AC(v0, (uint64_t)v2, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
  v22 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
  if (OUTLINED_FUNCTION_32_17() != 1)
  {
    OUTLINED_FUNCTION_3_2((uint64_t)v2 + v22);
    OUTLINED_FUNCTION_3_2((uint64_t)v2);
LABEL_13:
    OUTLINED_FUNCTION_62_3(v29, &qword_25708DA18);
LABEL_17:
    v27 = 0;
    return v27 & 1;
  }
  v23 = (uint64_t)v21 + v22;
  v24 = (uint64_t)v21;
  v25 = (uint64_t)v14;
  OUTLINED_FUNCTION_6_6(v24, (uint64_t)v14);
  OUTLINED_FUNCTION_6_6((uint64_t)v2 + v22, (uint64_t)v12);
  OUTLINED_FUNCTION_6_6(v23, (uint64_t)v1);
  if (*v2 != *v14
    || v2[1] != v14[1]
    || (OUTLINED_FUNCTION_27_18(),
        sub_240F1C930(),
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]),
        v25 = (uint64_t)v14,
        (OUTLINED_FUNCTION_39_11() & 1) == 0))
  {
    OUTLINED_FUNCTION_3_2((uint64_t)v2);
LABEL_16:
    OUTLINED_FUNCTION_3_2((uint64_t)v1);
    OUTLINED_FUNCTION_3_2((uint64_t)v12);
    OUTLINED_FUNCTION_3_2(v25);
    OUTLINED_FUNCTION_31(v31, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
    goto LABEL_17;
  }
  sub_240BE10B8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for SizeRange);
  if (*v12 != *v1 || v12[1] != v1[1] || (OUTLINED_FUNCTION_39_11() & 1) == 0)
    goto LABEL_16;
  OUTLINED_FUNCTION_3_2((uint64_t)v1);
  OUTLINED_FUNCTION_3_2((uint64_t)v12);
  OUTLINED_FUNCTION_3_2((uint64_t)v14);
  OUTLINED_FUNCTION_31(v26, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
  v27 = 1;
  return v27 & 1;
}

uint64_t FeatureType.ImageParameters.SizeFlexibility.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  FeatureType.ImageParameters.SizeFlexibility.hash(into:)();
  return sub_240F1CF78();
}

uint64_t sub_240CD6C1C()
{
  sub_240F1CF3C();
  FeatureType.ImageParameters.SizeFlexibility.hash(into:)();
  return sub_240F1CF78();
}

uint64_t FeatureType.ImageParameters.Size.width.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FeatureType.ImageParameters.Size.width.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FeatureType.ImageParameters.Size.width.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t FeatureType.ImageParameters.Size.height.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t FeatureType.ImageParameters.Size.height.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*FeatureType.ImageParameters.Size.height.modify())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void FeatureType.ImageParameters.Size.hash(into:)()
{
  OUTLINED_FUNCTION_40_14();
  sub_240F1CF48();
  OUTLINED_FUNCTION_156();
}

BOOL static FeatureType.ImageParameters.Size.== infix(_:_:)(const void *a1, const void *a2)
{
  return memcmp(a1, a2, 0x10uLL) == 0;
}

uint64_t FeatureType.ImageParameters.Size.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  sub_240F1CF48();
  sub_240F1CF48();
  return sub_240F1CF78();
}

uint64_t sub_240CD6D3C()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  sub_240F1CF48();
  return sub_240F1CF78();
}

uint64_t FeatureType.ImageParameters.ColorSpace.init(rawValue:)@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;
  char v4;

  if (result == 30)
    v2 = 2;
  else
    v2 = 4;
  if (result == 40)
    v3 = 3;
  else
    v3 = v2;
  if (result == 20)
    v4 = 1;
  else
    v4 = v3;
  if (result == 10)
    v4 = 0;
  *a2 = v4;
  return result;
}

uint64_t FeatureType.ImageParameters.ColorSpace.rawValue.getter()
{
  unsigned __int8 *v0;

  return 10 * *v0 + 10;
}

uint64_t sub_240CD6DE0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return FeatureType.ImageParameters.ColorSpace.init(rawValue:)(*a1, a2);
}

void sub_240CD6DE8(uint64_t *a1@<X8>)
{
  *a1 = FeatureType.ImageParameters.ColorSpace.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CD6E08()
{
  sub_240E18D90();
}

void sub_240CD6E10()
{
  sub_240E190E4();
}

void sub_240CD6E18()
{
  sub_240E19110();
}

void sub_240CD6E20()
{
  sub_240BE18B8(&qword_25708DA20, type metadata accessor for Proto_ImageFeatureType, (uint64_t)&unk_240F38EB8);
}

void sub_240CD6E4C()
{
  sub_240BE18B8(&qword_25708DA28, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility, (uint64_t)&protocol conformance descriptor for FeatureType.ImageParameters.SizeFlexibility);
}

unint64_t sub_240CD6E7C()
{
  unint64_t result;

  result = qword_25708DA30;
  if (!qword_25708DA30)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for FeatureType.ImageParameters.Size, &type metadata for FeatureType.ImageParameters.Size);
    atomic_store(result, (unint64_t *)&qword_25708DA30);
  }
  return result;
}

unint64_t sub_240CD6EBC()
{
  unint64_t result;

  result = qword_25708DA38;
  if (!qword_25708DA38)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for FeatureType.ImageParameters.ColorSpace, &type metadata for FeatureType.ImageParameters.ColorSpace);
    atomic_store(result, (unint64_t *)&qword_25708DA38);
  }
  return result;
}

void sub_240CD6EF8(uint64_t *a1@<X8>)
{
  *a1 = FeatureType.ImageParameters.width.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CD6F1C(uint64_t *a1)
{
  FeatureType.ImageParameters.width.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CD6F3C(uint64_t *a1@<X8>)
{
  *a1 = FeatureType.ImageParameters.height.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CD6F60(uint64_t *a1)
{
  FeatureType.ImageParameters.height.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CD6F80(uint64_t a1@<X8>)
{
  FeatureType.ImageParameters.sizeFlexibility.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CD6FA0(char *a1@<X8>)
{
  FeatureType.ImageParameters.colorSpace.getter(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s15ImageParametersVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  _BYTE *v6;
  char *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  _OWORD *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  char *v35;
  uint64_t v36;
  _BYTE *v37;
  char *v38;
  uint64_t v39;
  void (*v41)(char *, char *, uint64_t);
  uint64_t v42;
  uint64_t v43;
  _OWORD *__dst;
  char *__dsta;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v14 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v14 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v5 = *(int *)(a3 + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    *(_OWORD *)((char *)a1 + v5) = *(_OWORD *)((char *)a2 + v5);
    v8 = (int *)type metadata accessor for Proto_ImageFeatureType(0);
    v9 = v8[6];
    v10 = &v6[v9];
    v11 = &v7[v9];
    v12 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_240F1C930();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        v43 = v15;
        ((void (*)(_QWORD *, char *))v16)(v10, v11);
        v42 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
        v17 = *(int *)(v42 + 20);
        __dst = (_OWORD *)((char *)v10 + v17);
        v18 = &v11[v17];
        v19 = type metadata accessor for Proto_SizeRange(0);
        v41 = v16;
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
          memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          v21 = v43;
        }
        else
        {
          *__dst = *(_OWORD *)v18;
          v26 = *(int *)(v19 + 24);
          v27 = &v18[v26];
          v21 = v43;
          v16((char *)__dst + v26, v27, v43);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v19);
        }
        v28 = v19;
        v29 = *(int *)(v42 + 24);
        v30 = (_OWORD *)((char *)v10 + v29);
        v31 = &v11[v29];
        if (__swift_getEnumTagSinglePayload((uint64_t)v31, 1, v28))
        {
          v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
          memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v32 - 8) + 64));
        }
        else
        {
          *v30 = *(_OWORD *)v31;
          v41((char *)v30 + *(int *)(v28 + 24), &v31[*(int *)(v28 + 24)], v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v28);
        }
      }
      else
      {
        *v10 = *(_QWORD *)v11;
        v22 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v23 = (char *)v10 + v22;
        __dsta = &v11[v22];
        v24 = sub_240F1C930();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v23, __dsta, v24);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v33 = v8[7];
    v34 = &v6[v33];
    v35 = &v7[v33];
    *(_QWORD *)v34 = *(_QWORD *)v35;
    v34[8] = v35[8];
    v36 = v8[8];
    v37 = &v6[v36];
    v38 = &v7[v36];
    v39 = sub_240F1C930();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16))(v37, v38, v39);
  }
  return v3;
}

uint64_t _s15ImageParametersVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = type metadata accessor for Proto_ImageFeatureType(0);
  v4 = v2 + *(int *)(v3 + 24);
  v5 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_240F1C930();
      v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8);
      v7(v4, v6);
      v8 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
      v9 = v4 + *(int *)(v8 + 20);
      v10 = type metadata accessor for Proto_SizeRange(0);
      if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
        v7(v9 + *(int *)(v10 + 24), v6);
      v11 = v4 + *(int *)(v8 + 24);
      if (!__swift_getEnumTagSinglePayload(v11, 1, v10))
        v7(v11 + *(int *)(v10 + 24), v6);
    }
    else
    {
      swift_bridgeObjectRelease();
      v12 = v4 + *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v13 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    }
  }
  v14 = v2 + *(int *)(v3 + 32);
  v15 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
}

_BYTE *_s15ImageParametersVwcp(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _OWORD *__dst;
  char *__dsta;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_OWORD *)&a1[v4] = *(_OWORD *)&a2[v4];
  v7 = (int *)type metadata accessor for Proto_ImageFeatureType(0);
  v8 = v7[6];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_240F1C930();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      v41 = v13;
      ((void (*)(_QWORD *, _QWORD *))v14)(v9, v10);
      v15 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
      v16 = *(int *)(v15 + 20);
      v42 = v15;
      __dst = (_OWORD *)((char *)v9 + v16);
      v17 = (_OWORD *)((char *)v10 + v16);
      v18 = type metadata accessor for Proto_SizeRange(0);
      v40 = v14;
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        v20 = v41;
      }
      else
      {
        *__dst = *v17;
        v25 = *(int *)(v18 + 24);
        v26 = (char *)v17 + v25;
        v20 = v41;
        v14((char *)__dst + v25, v26, v41);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v18);
      }
      v27 = v18;
      v28 = *(int *)(v42 + 24);
      v29 = (_OWORD *)((char *)v9 + v28);
      v30 = (_OWORD *)((char *)v10 + v28);
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v27))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        *v29 = *v30;
        v40((char *)v29 + *(int *)(v27 + 24), (char *)v30 + *(int *)(v27 + 24), v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v27);
      }
    }
    else
    {
      *v9 = *v10;
      v21 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v22 = (char *)v9 + v21;
      __dsta = (char *)v10 + v21;
      v23 = sub_240F1C930();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
      swift_bridgeObjectRetain();
      v24(v22, __dsta, v23);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v32 = v7[7];
  v33 = &v5[v32];
  v34 = &v6[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  v35 = v7[8];
  v36 = &v5[v35];
  v37 = &v6[v35];
  v38 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

_BYTE *_s15ImageParametersVwca(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD *v6;
  _BYTE *v7;
  int *v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  char *v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  _BYTE *v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  _BYTE *v52;
  uint64_t v53;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  void (*v59)(char *, char *, uint64_t);
  void (*v60)(char *, char *, uint64_t);
  char *__dst;
  char *__dsta;
  char *__dstb;
  char *__dstc;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  *v6 = *(_QWORD *)&a2[v5];
  v6[1] = *(_QWORD *)&a2[v5 + 8];
  v8 = (int *)type metadata accessor for Proto_ImageFeatureType(0);
  v9 = v8[6];
  v10 = (char *)v6 + v9;
  v11 = &v7[v9];
  v12 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_240F1C930();
        v59 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        v59(v10, v11, v15);
        v57 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
        v16 = *(int *)(v57 + 20);
        __dst = &v10[v16];
        v17 = &v11[v16];
        v18 = type metadata accessor for Proto_SizeRange(0);
        v55 = v15;
        if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
        {
          v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
          memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
          v20 = v59;
        }
        else
        {
          *(_QWORD *)__dst = *(_QWORD *)v17;
          *((_QWORD *)__dst + 1) = *((_QWORD *)v17 + 1);
          v32 = v15;
          v20 = v59;
          v59(&__dst[*(int *)(v18 + 24)], &v17[*(int *)(v18 + 24)], v32);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v18);
        }
        v33 = *(int *)(v57 + 24);
        v34 = &v10[v33];
        v35 = &v11[v33];
        if (__swift_getEnumTagSinglePayload((uint64_t)v35, 1, v18))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
          memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v34 = *(_QWORD *)v35;
          *((_QWORD *)v34 + 1) = *((_QWORD *)v35 + 1);
          v20(&v34[*(int *)(v18 + 24)], &v35[*(int *)(v18 + 24)], v55);
          __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, v18);
        }
      }
      else
      {
        *(_QWORD *)v10 = *(_QWORD *)v11;
        v28 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v29 = &v10[v28];
        __dstb = &v11[v28];
        v30 = sub_240F1C930();
        v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
        swift_bridgeObjectRetain();
        v31(v29, __dstb, v30);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_25;
    }
LABEL_8:
    v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    goto LABEL_25;
  }
  if (v14)
  {
    sub_240BE10B8((uint64_t)v10, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v10, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v22 = sub_240F1C930();
      v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      v60(v10, v11, v22);
      v58 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
      v23 = *(int *)(v58 + 20);
      __dsta = &v10[v23];
      v24 = &v11[v23];
      v25 = type metadata accessor for Proto_SizeRange(0);
      v56 = v22;
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(__dsta, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v27 = v60;
      }
      else
      {
        *(_QWORD *)__dsta = *(_QWORD *)v24;
        *((_QWORD *)__dsta + 1) = *((_QWORD *)v24 + 1);
        v41 = v22;
        v27 = v60;
        v60(&__dsta[*(int *)(v25 + 24)], &v24[*(int *)(v25 + 24)], v41);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v25);
      }
      v42 = *(int *)(v58 + 24);
      v43 = &v10[v42];
      v44 = &v11[v42];
      if (__swift_getEnumTagSinglePayload((uint64_t)v44, 1, v25))
      {
        v45 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(v43, v44, *(_QWORD *)(*(_QWORD *)(v45 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v43 = *(_QWORD *)v44;
        *((_QWORD *)v43 + 1) = *((_QWORD *)v44 + 1);
        v27(&v43[*(int *)(v25 + 24)], &v44[*(int *)(v25 + 24)], v56);
        __swift_storeEnumTagSinglePayload((uint64_t)v43, 0, 1, v25);
      }
    }
    else
    {
      *(_QWORD *)v10 = *(_QWORD *)v11;
      v37 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v38 = &v10[v37];
      __dstc = &v11[v37];
      v39 = sub_240F1C930();
      v40 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 16);
      swift_bridgeObjectRetain();
      v40(v38, __dstc, v39);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_25:
  v46 = v8[7];
  v47 = (char *)v6 + v46;
  v48 = &v7[v46];
  v49 = *(_QWORD *)v48;
  v47[8] = v48[8];
  *(_QWORD *)v47 = v49;
  v50 = v8[8];
  v51 = (char *)v6 + v50;
  v52 = &v7[v50];
  v53 = sub_240F1C930();
  (*(void (**)(char *, _BYTE *, uint64_t))(*(_QWORD *)(v53 - 8) + 24))(v51, v52, v53);
  return a1;
}

_BYTE *_s15ImageParametersVwtk(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  _OWORD *v29;
  _OWORD *v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  _BYTE *v37;
  uint64_t v38;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;
  uint64_t v42;
  _OWORD *__dst;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  *(_OWORD *)&a1[v4] = *(_OWORD *)&a2[v4];
  v7 = (int *)type metadata accessor for Proto_ImageFeatureType(0);
  v8 = v7[6];
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
  {
    v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
    memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v13 = sub_240F1C930();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32);
      v41 = v13;
      ((void (*)(_QWORD *, _QWORD *))v14)(v9, v10);
      v15 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
      v16 = *(int *)(v15 + 20);
      v42 = v15;
      __dst = (_OWORD *)((char *)v9 + v16);
      v17 = (_OWORD *)((char *)v10 + v16);
      v18 = type metadata accessor for Proto_SizeRange(0);
      v40 = v14;
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
        v20 = v41;
      }
      else
      {
        *__dst = *v17;
        v25 = *(int *)(v18 + 24);
        v26 = (char *)v17 + v25;
        v20 = v41;
        v14((char *)__dst + v25, v26, v41);
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v18);
      }
      v27 = v18;
      v28 = *(int *)(v42 + 24);
      v29 = (_OWORD *)((char *)v9 + v28);
      v30 = (_OWORD *)((char *)v10 + v28);
      if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v27))
      {
        v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
      }
      else
      {
        *v29 = *v30;
        v40((char *)v29 + *(int *)(v27 + 24), (char *)v30 + *(int *)(v27 + 24), v20);
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, v27);
      }
    }
    else
    {
      *v9 = *v10;
      v21 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v22 = (char *)v9 + v21;
      v23 = (char *)v10 + v21;
      v24 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
  }
  v32 = v7[7];
  v33 = &v5[v32];
  v34 = &v6[v32];
  *(_QWORD *)v33 = *(_QWORD *)v34;
  v33[8] = v34[8];
  v35 = v7[8];
  v36 = &v5[v35];
  v37 = &v6[v35];
  v38 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
  return a1;
}

_BYTE *_s15ImageParametersVwta(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  int *v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  int EnumTagSinglePayload;
  int v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  _OWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  _OWORD *v38;
  _OWORD *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  _OWORD *v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  _BYTE *v53;
  _BYTE *v54;
  uint64_t v55;
  _BYTE *v56;
  _BYTE *v57;
  uint64_t v58;
  void (*v60)(char *, char *, uint64_t);
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *__dst;
  _OWORD *__dsta;

  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = &a1[v5];
  v7 = &a2[v5];
  *(_OWORD *)&a1[v5] = *(_OWORD *)&a2[v5];
  v8 = (int *)type metadata accessor for Proto_ImageFeatureType(0);
  v9 = v8[6];
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v10, 1, v12);
  v14 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12);
  if (EnumTagSinglePayload)
  {
    if (!v14)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v15 = sub_240F1C930();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32);
        v64 = v15;
        ((void (*)(_QWORD *, _QWORD *))v16)(v10, v11);
        v62 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
        v17 = *(int *)(v62 + 20);
        __dst = (_OWORD *)((char *)v10 + v17);
        v18 = (_OWORD *)((char *)v11 + v17);
        v19 = type metadata accessor for Proto_SizeRange(0);
        v60 = v16;
        if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
        {
          v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
          memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
          v21 = v64;
        }
        else
        {
          *__dst = *v18;
          v34 = *(int *)(v19 + 24);
          v35 = (char *)v18 + v34;
          v21 = v64;
          v16((char *)__dst + v34, v35, v64);
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v19);
        }
        v36 = v19;
        v37 = *(int *)(v62 + 24);
        v38 = (_OWORD *)((char *)v10 + v37);
        v39 = (_OWORD *)((char *)v11 + v37);
        if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v36))
        {
          v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
          memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
        }
        else
        {
          *v38 = *v39;
          v60((char *)v38 + *(int *)(v36 + 24), (char *)v39 + *(int *)(v36 + 24), v21);
          __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v36);
        }
      }
      else
      {
        *v10 = *v11;
        v30 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
        v31 = (char *)v10 + v30;
        v32 = (char *)v11 + v30;
        v33 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
      goto LABEL_25;
    }
LABEL_8:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C538);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_25;
  }
  if (v14)
  {
    sub_240BE10B8((uint64_t)v10, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v10, type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v23 = sub_240F1C930();
      v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32);
      v65 = v23;
      ((void (*)(_QWORD *, _QWORD *))v24)(v10, v11);
      v63 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
      v25 = *(int *)(v63 + 20);
      __dsta = (_OWORD *)((char *)v10 + v25);
      v26 = (_OWORD *)((char *)v11 + v25);
      v27 = type metadata accessor for Proto_SizeRange(0);
      v61 = v24;
      if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
      {
        v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(__dsta, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
        v29 = v65;
      }
      else
      {
        *__dsta = *v26;
        v45 = *(int *)(v27 + 24);
        v46 = (char *)v26 + v45;
        v29 = v65;
        v24((char *)__dsta + v45, v46, v65);
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v27);
      }
      v47 = v27;
      v48 = *(int *)(v63 + 24);
      v49 = (_OWORD *)((char *)v10 + v48);
      v50 = (_OWORD *)((char *)v11 + v48);
      if (__swift_getEnumTagSinglePayload((uint64_t)v50, 1, v47))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C530);
        memcpy(v49, v50, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        *v49 = *v50;
        v61((char *)v49 + *(int *)(v47 + 24), (char *)v50 + *(int *)(v47 + 24), v29);
        __swift_storeEnumTagSinglePayload((uint64_t)v49, 0, 1, v47);
      }
    }
    else
    {
      *v10 = *v11;
      v41 = *(int *)(type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0) + 20);
      v42 = (char *)v10 + v41;
      v43 = (char *)v11 + v41;
      v44 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 32))(v42, v43, v44);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_25:
  v52 = v8[7];
  v53 = &v6[v52];
  v54 = &v7[v52];
  *(_QWORD *)v53 = *(_QWORD *)v54;
  v53[8] = v54[8];
  v55 = v8[8];
  v56 = &v6[v55];
  v57 = &v7[v55];
  v58 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v58 - 8) + 40))(v56, v57, v58);
  return a1;
}

uint64_t _s15ImageParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD83C8(unsigned __int8 *a1, uint64_t a2, uint64_t a3)
{
  unsigned int v4;
  BOOL v5;
  int v6;
  uint64_t v10;

  if ((_DWORD)a2 == 254)
  {
    v4 = *a1;
    v5 = v4 >= 2;
    v6 = (v4 + 2147483646) & 0x7FFFFFFF;
    if (v5)
      return (v6 + 1);
    else
      return 0;
  }
  else
  {
    v10 = OUTLINED_FUNCTION_6_25();
    return __swift_getEnumTagSinglePayload((uint64_t)&a1[*(int *)(a3 + 20)], a2, v10);
  }
}

uint64_t _s15ImageParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240CD8444(_BYTE *a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v7;

  if (a3 == 254)
  {
    *a1 = a2 + 1;
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_6_25();
    __swift_storeEnumTagSinglePayload((uint64_t)&a1[*(int *)(a4 + 20)], a2, a2, v7);
  }
}

uint64_t sub_240CD84A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ImageFeatureType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *_s15ImageParametersV15SizeFlexibilityOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v6 = type metadata accessor for Proto_SizeRange(0);
      v7 = *(int *)(v6 + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      v11(v8, v9, v10);
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v11(&v13[*(int *)(v6 + 24)], &v14[*(int *)(v6 + 24)], v10);
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s15ImageParametersV15SizeFlexibilityOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v7)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() != 1)
    return swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_SizeRange(0);
  v3 = a1 + *(int *)(v2 + 24);
  v4 = sub_240F1C930();
  v7 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v7(v3, v4);
  v5 = a1 + *(int *)(v2 + 24) + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
  return ((uint64_t (*)(uint64_t, uint64_t))v7)(v5, v4);
}

_OWORD *_s15ImageParametersV15SizeFlexibilityOwcp(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v4 = type metadata accessor for Proto_SizeRange(0);
    v5 = *(int *)(v4 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    v9(v6, v7, v8);
    v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    *(_OWORD *)v11 = *(_OWORD *)v12;
    v9(&v11[*(int *)(v4 + 24)], &v12[*(int *)(v4 + 24)], v8);
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_bridgeObjectRetain();
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s15ImageParametersV15SizeFlexibilityOwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      v4 = type metadata accessor for Proto_SizeRange(0);
      v5 = *(int *)(v4 + 24);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_240F1C930();
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      v9(v6, v7, v8);
      v10 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      *(_QWORD *)v11 = *(_QWORD *)v12;
      *((_QWORD *)v11 + 1) = *((_QWORD *)v12 + 1);
      v9(&v11[*(int *)(v4 + 24)], &v12[*(int *)(v4 + 24)], v8);
    }
    else
    {
      *a1 = *a2;
      swift_bridgeObjectRetain();
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *_s15ImageParametersV15SizeFlexibilityOwtk(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *a1 = *a2;
    v6 = type metadata accessor for Proto_SizeRange(0);
    v7 = *(int *)(v6 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
    v11(v8, v9, v10);
    v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    *(_OWORD *)v13 = *(_OWORD *)v14;
    v11(&v13[*(int *)(v6 + 24)], &v14[*(int *)(v6 + 24)], v10);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  return a1;
}

_OWORD *_s15ImageParametersV15SizeFlexibilityOwta(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for FeatureType.ImageParameters.SizeFlexibility);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *a1 = *a2;
      v6 = type metadata accessor for Proto_SizeRange(0);
      v7 = *(int *)(v6 + 24);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v12 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708D568) + 48);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      *(_OWORD *)v13 = *(_OWORD *)v14;
      v11(&v13[*(int *)(v6 + 24)], &v14[*(int *)(v6 + 24)], v10);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_240CD8AF0()
{
  uint64_t result;
  unint64_t v1;
  _QWORD v2[6];

  v2[4] = MEMORY[0x24BEE0158] + 64;
  result = type metadata accessor for Proto_SizeRange(319);
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v2[5] = v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s15ImageParametersV4SizeVwet(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t _s15ImageParametersV4SizeVwst(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    *(_QWORD *)(result + 8) = 0;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for FeatureType.ImageParameters.Size()
{
  return &type metadata for FeatureType.ImageParameters.Size;
}

uint64_t _s15ImageParametersV10ColorSpaceOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_240CD8C24 + 4 * byte_240F27FC5[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_240CD8C58 + 4 * asc_240F27FC0[v4]))();
}

uint64_t sub_240CD8C58(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CD8C60(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240CD8C68);
  return result;
}

uint64_t sub_240CD8C74(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240CD8C7CLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_240CD8C80(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CD8C88(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FeatureType.ImageParameters.ColorSpace()
{
  return &type metadata for FeatureType.ImageParameters.ColorSpace;
}

uint64_t OUTLINED_FUNCTION_1_28()
{
  return type metadata accessor for FeatureType.ImageParameters(0);
}

uint64_t OUTLINED_FUNCTION_6_25()
{
  return type metadata accessor for Proto_ImageFeatureType(0);
}

uint64_t OUTLINED_FUNCTION_8_24()
{
  return type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
}

uint64_t OUTLINED_FUNCTION_10_30()
{
  return type metadata accessor for FeatureType.ImageParameters(0);
}

uint64_t OUTLINED_FUNCTION_22_14()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_27_18()
{
  return type metadata accessor for Proto_SizeRange(0);
}

uint64_t OUTLINED_FUNCTION_28_12()
{
  return type metadata accessor for FeatureType.ImageParameters.SizeFlexibility(0);
}

uint64_t OUTLINED_FUNCTION_31_14()
{
  return sub_240F1CC54();
}

uint64_t OUTLINED_FUNCTION_32_17()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_39_11()
{
  return sub_240F1CC90();
}

uint64_t OUTLINED_FUNCTION_40_14()
{
  return sub_240F1CF48();
}

uint64_t *sub_240CD8D50(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = a2[2];
    v4[1] = a2[1];
    v4[2] = v7;
    v8 = a2[3];
    v9 = a2[4];
    swift_bridgeObjectRetain();
    sub_240BF5610(v8, v9);
    v4[3] = v8;
    v4[4] = v9;
    v10 = *(int *)(a3 + 28);
    v11 = (char *)v4 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return v4;
}

uint64_t sub_240CD8E08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  sub_240BF6AE0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_240CD8E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  v7 = *(_QWORD *)(a2 + 24);
  v8 = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  sub_240BF5610(v7, v8);
  *(_QWORD *)(a1 + 24) = v7;
  *(_QWORD *)(a1 + 32) = v8;
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t sub_240CD8EE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 32);
  sub_240BF5610(v6, v7);
  v8 = *(_QWORD *)(a1 + 24);
  v9 = *(_QWORD *)(a1 + 32);
  *(_QWORD *)(a1 + 24) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  sub_240BF6AE0(v8, v9);
  v10 = *(int *)(a3 + 28);
  v11 = a1 + v10;
  v12 = a2 + v10;
  v13 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  return a1;
}

uint64_t sub_240CD8F8C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_240CD8FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  v6 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  sub_240BF6AE0(v7, v8);
  v9 = *(int *)(a3 + 28);
  v10 = a1 + v9;
  v11 = a2 + v9;
  v12 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_240CD907C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD9088(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 16);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_20_0();
    return __swift_getEnumTagSinglePayload(a1 + *(int *)(a3 + 28), a2, v8);
  }
}

uint64_t sub_240CD90F8()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CD9104(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 16) = (a2 - 1);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    return __swift_storeEnumTagSinglePayload(v5 + *(int *)(a4 + 28), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for Proto_CoreMLModels_WordEmbedding()
{
  uint64_t result;

  result = qword_254360388;
  if (!qword_254360388)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CD91A4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240CD9230@<X0>(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0xE000000000000000;
  *(_OWORD *)(a1 + 24) = xmmword_240F1FDE0;
  OUTLINED_FUNCTION_2_29();
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240CD9274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9338);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9338);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "revision";
  *(_QWORD *)(v7 + 8) = 8;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 10;
  *(_QWORD *)v11 = "language";
  *((_QWORD *)v11 + 1) = 8;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 100;
  *(_QWORD *)v13 = "modelParameterData";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240CD9404()
{
  uint64_t v0;

  if (qword_25708AF48 != -1)
    swift_once();
  v0 = sub_240F1CC30();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2570F9338);
}

uint64_t sub_240CD944C()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = sub_240F1C990();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 100:
          OUTLINED_FUNCTION_0_23();
          sub_240F1CA08();
          break;
        case 10:
          OUTLINED_FUNCTION_0_23();
          sub_240F1CA98();
          break;
        case 1:
          OUTLINED_FUNCTION_0_23();
          sub_240F1CAA4();
          break;
      }
      result = sub_240F1C990();
    }
  }
  return result;
}

uint64_t sub_240CD9504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  if (!*(_DWORD *)v0 || (result = sub_240F1CBDC(), !v1))
  {
    v3 = *(_QWORD *)(v0 + 16);
    v4 = HIBYTE(v3) & 0xF;
    if ((v3 & 0x2000000000000000) == 0)
      v4 = *(_QWORD *)(v0 + 8) & 0xFFFFFFFFFFFFLL;
    if (!v4 || (OUTLINED_FUNCTION_3_30(), result = sub_240F1CBD0(), !v1))
    {
      if ((sub_240D7016C(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32)) & 1) != 0
        || (OUTLINED_FUNCTION_3_30(), result = sub_240F1CB88(), !v1))
      {
        type metadata accessor for Proto_CoreMLModels_WordEmbedding();
        OUTLINED_FUNCTION_0_23();
        return sub_240F1C918();
      }
    }
  }
  return result;
}

uint64_t sub_240CD95F4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  if (*(_DWORD *)a1 != *(_DWORD *)a2)
    goto LABEL_9;
  v11 = *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8) && *(_QWORD *)(a1 + 16) == *(_QWORD *)(a2 + 16);
  if (v11 || (v12 = 0, (sub_240F1CEDC() & 1) != 0))
  {
    if ((MEMORY[0x24268B91C](*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 24), *(_QWORD *)(a2 + 32)) & 1) != 0)
    {
      v13 = OUTLINED_FUNCTION_2_29();
      v14 = a1 + *(int *)(v13 + 28);
      v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
      v15(v10, v14, v4);
      v15(v8, a2 + *(int *)(v13 + 28), v4);
      sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v12 = sub_240F1CC90();
      v16 = *(void (**)(char *, uint64_t))(v5 + 8);
      v16(v8, v4);
      v16(v10, v4);
      return v12 & 1;
    }
LABEL_9:
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_240CD9754()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_2_29();
  sub_240C30D44(&qword_25708DA60, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F282D0);
  sub_240F1CC54();
  return sub_240F1CF78();
}

unint64_t sub_240CD97C0()
{
  return 0xD000000000000020;
}

uint64_t sub_240CD97DC()
{
  return sub_240CD944C();
}

uint64_t sub_240CD97F0()
{
  return sub_240CD9504();
}

uint64_t sub_240CD9804()
{
  sub_240C30D44(&qword_25708DA70, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F28360);
  return sub_240F1C960();
}

uint64_t sub_240CD9854@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240CD9404();
  v3 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_240CD9894()
{
  sub_240C30D44(&qword_25708DA58, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F28398);
  return sub_240F1CAF8();
}

uint64_t sub_240CD98D8()
{
  sub_240C30D44(&qword_25708DA58, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F28398);
  return sub_240F1CB04();
}

uint64_t sub_240CD992C()
{
  return sub_240C30D44(&qword_25708DA50, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F282A8);
}

uint64_t sub_240CD9958()
{
  return sub_240C30D44(&qword_25708DA58, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F28398);
}

uint64_t sub_240CD9984()
{
  return sub_240C30D44(&qword_25708DA60, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F282D0);
}

uint64_t sub_240CD99B0()
{
  return sub_240C30D44(&qword_25708DA68, (uint64_t (*)(uint64_t))type metadata accessor for Proto_CoreMLModels_WordEmbedding, (uint64_t)&unk_240F28310);
}

uint64_t OUTLINED_FUNCTION_2_29()
{
  return type metadata accessor for Proto_CoreMLModels_WordEmbedding();
}

void sub_240CD9A04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C630);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C190);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_11_3();
  v35 = v33 - v34;
  MEMORY[0x24BDAC7A8](v36);
  v38 = (char *)&a9 - v37;
  sub_240C02F94(v25, (uint64_t)v30, &qword_25708C190);
  if (__swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31) == 1)
  {
    v39 = &qword_25708C190;
    v40 = (uint64_t)v30;
LABEL_6:
    sub_240BE0B68(v40, v39);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240BE10B8(v25, type metadata accessor for Proto_ActivationParams);
    OUTLINED_FUNCTION_289();
    swift_storeEnumTagMultiPayload();
    v21 = v20;
    goto LABEL_7;
  }
  sub_240C35540((uint64_t)v30, (uint64_t)v38, type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType);
  sub_240C35540((uint64_t)v38, v35, type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType);
  sub_240CDB64C(v35, v21);
  OUTLINED_FUNCTION_111_5(v21);
  if (v41)
  {
    v39 = &qword_25708C630;
    v40 = v21;
    goto LABEL_6;
  }
  sub_240BE10B8(v25, type metadata accessor for Proto_ActivationParams);
LABEL_7:
  OUTLINED_FUNCTION_47_8(v21, v42, type metadata accessor for NeuralNetwork.Layer.Activation);
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.Activation.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v42 = v3;
  type metadata accessor for NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SoftplusConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SoftsignConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.ELUConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidHardConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  v10 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.ScaledTanhConfiguration(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v12 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.TanhConfiguration(v12);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  v14 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  v16 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration(v16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_0();
  v18 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.LeakyReluConfiguration(v18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_2_0();
  v20 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.ReluConfiguration(v20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_0();
  v22 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration(v22);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_2_0();
  v24 = OUTLINED_FUNCTION_101();
  type metadata accessor for NeuralNetwork.Layer.Activation(v24);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  v31 = MEMORY[0x24BDAC7A8](v30);
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  v33 = MEMORY[0x24BDAC7A8](v32);
  v34 = MEMORY[0x24BDAC7A8](v33);
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_23_0();
  v37 = MEMORY[0x24BDAC7A8](v36);
  MEMORY[0x24BDAC7A8](v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708DA78);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_80();
  v40 = v0 + *(int *)(v39 + 48);
  OUTLINED_FUNCTION_28_10(v42, v0);
  OUTLINED_FUNCTION_28_10(v2, v40);
  v41 = (char *)sub_240CD9F64 + 4 * word_240F28410[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240CD9F64()
{
  float *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  float *v7;
  uint64_t v8;

  sub_240C355AC(v1, (uint64_t)v0, type metadata accessor for NeuralNetwork.Layer.Activation);
  if (OUTLINED_FUNCTION_32_17())
  {
    sub_240BE10B8((uint64_t)v0, type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration);
    OUTLINED_FUNCTION_212(v6, &qword_25708DA78);
LABEL_7:
    v5 = 0;
    return v5 & 1;
  }
  v7 = *(float **)(v3 - 264);
  sub_240C35540(v2, (uint64_t)v7, type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration);
  if (*v0 != *v7
    || v0[1] != v7[1]
    || (type metadata accessor for Proto_ActivationLinear(0),
        OUTLINED_FUNCTION_20_0(),
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]),
        (sub_240F1CC90() & 1) == 0))
  {
    OUTLINED_FUNCTION_3_2((uint64_t)v7);
    sub_240BE10B8((uint64_t)v0, type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration);
    OUTLINED_FUNCTION_135_3(v8, type metadata accessor for NeuralNetwork.Layer.Activation);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_3_2((uint64_t)v7);
  sub_240BE10B8((uint64_t)v0, type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration);
  OUTLINED_FUNCTION_135_3(v4, type metadata accessor for NeuralNetwork.Layer.Activation);
  v5 = 1;
  return v5 & 1;
}

void static NeuralNetwork.Layer.ClampedReluParameters.== infix(_:_:)()
{
  sub_240CDB72C();
}

void static NeuralNetwork.Layer.linearActivation(name:inputName:outputName:scale:offset:)(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_240CDAC7C(a1, a2, a3, a4, a5, a6);
}

uint64_t static NeuralNetwork.Layer.Kind.linearActivation(scale:offset:)@<X0>(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  return sub_240CDAD68(a1, a2, a3);
}

void static NeuralNetwork.Layer.relu(name:inputName:outputName:)()
{
  sub_240CDAB4C();
}

uint64_t static NeuralNetwork.Layer.Kind.relu()()
{
  return sub_240CDAC3C();
}

void static NeuralNetwork.Layer.leakyRelu(name:inputName:outputName:negativeSlope:)(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240CDA724(a1, a2, a3, a4, a5);
}

uint64_t static NeuralNetwork.Layer.Kind.leakyRelu(negativeSlope:)@<X0>(float *a1@<X8>, float a2@<S0>)
{
  return sub_240CDA80C(a1, a2);
}

void static NeuralNetwork.Layer.thresholdedRelu(name:inputName:outputName:threshold:)(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240CDA724(a1, a2, a3, a4, a5);
}

void sub_240CDA724(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  float *v5;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v10 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v10 + 32) = a4;
  *(_QWORD *)(v10 + 40) = a5;
  v11 = OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_69_7(v11);
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_54_9();
  *v5 = a1;
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  OUTLINED_FUNCTION_109_4();
  OUTLINED_FUNCTION_46_12();
  OUTLINED_FUNCTION_63_6();
  OUTLINED_FUNCTION_47_14();
}

uint64_t static NeuralNetwork.Layer.Kind.thresholdedRelu(threshold:)@<X0>(float *a1@<X8>, float a2@<S0>)
{
  return sub_240CDA80C(a1, a2);
}

uint64_t sub_240CDA80C@<X0>(float *a1@<X8>, float a2@<S0>)
{
  OUTLINED_FUNCTION_122_3();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a1 = a2;
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_110_5();
  return OUTLINED_FUNCTION_60_7();
}

void static NeuralNetwork.Layer.parameterizedRelu(name:inputName:outputName:scale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_22();
  v27 = v1;
  v28 = v2;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v30 = v10;
  v31 = v9;
  v11 = OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (char *)&v26 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v19 = OUTLINED_FUNCTION_3_8();
  v26 = xmmword_240F1DA30;
  *(_OWORD *)(v19 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v19 + 32) = v8;
  *(_QWORD *)(v19 + 40) = v6;
  v20 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v20 + 16) = v26;
  *(_QWORD *)(v20 + 32) = v27;
  *(_QWORD *)(v20 + 40) = v4;
  sub_240C355AC(v28, (uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  OUTLINED_FUNCTION_16_11();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_87_2();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v21 = v0 + *(int *)(OUTLINED_FUNCTION_84_6() + 20);
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v11);
  sub_240C355AC((uint64_t)v17, (uint64_t)v14, type metadata accessor for Proto_WeightParams);
  OUTLINED_FUNCTION_62_3(v22, &qword_25708C1F0);
  sub_240C35540((uint64_t)v14, v21, type metadata accessor for Proto_WeightParams);
  OUTLINED_FUNCTION_110_1();
  __swift_storeEnumTagSinglePayload(v23, v24, v25, v11);
  sub_240BE10B8((uint64_t)v17, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_64_3();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.Kind.parameterizedRelu(scale:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_66();
  a17 = v19;
  a18 = v20;
  v22 = v21;
  v24 = v23;
  v25 = OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_48();
  sub_240C355AC(v22, v18, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v30 = v24 + *(int *)(OUTLINED_FUNCTION_84_6() + 20);
  __swift_storeEnumTagSinglePayload(v30, 1, 1, v25);
  sub_240C355AC(v18, (uint64_t)v28, type metadata accessor for Proto_WeightParams);
  OUTLINED_FUNCTION_212(v31, &qword_25708C1F0);
  sub_240C35540((uint64_t)v28, v30, type metadata accessor for Proto_WeightParams);
  OUTLINED_FUNCTION_110_1();
  __swift_storeEnumTagSinglePayload(v32, v33, v34, v25);
  sub_240BE10B8(v18, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  OUTLINED_FUNCTION_13_14();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.tanh(name:inputName:outputName:)()
{
  sub_240CDAB4C();
}

void sub_240CDAB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v9 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = v7;
  *(_QWORD *)(v9 + 40) = v5;
  v10 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v10 + 32) = v3;
  *(_QWORD *)(v10 + 40) = v1;
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_11();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_46_12();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.tanh()()
{
  return sub_240CDAC3C();
}

uint64_t sub_240CDAC3C()
{
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_110_5();
  return swift_storeEnumTagMultiPayload();
}

void static NeuralNetwork.Layer.scaledTanh(name:inputName:outputName:outputScale:inputScale:)(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_240CDAC7C(a1, a2, a3, a4, a5, a6);
}

void sub_240CDAC7C(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  float *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v12 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = a5;
  *(_QWORD *)(v12 + 40) = a6;
  v13 = OUTLINED_FUNCTION_3_8();
  OUTLINED_FUNCTION_69_7(v13);
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_87_2();
  OUTLINED_FUNCTION_16_11();
  OUTLINED_FUNCTION_54_9();
  *v6 = a1;
  v6[1] = a2;
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  OUTLINED_FUNCTION_109_4();
  OUTLINED_FUNCTION_46_12();
  OUTLINED_FUNCTION_63_6();
  OUTLINED_FUNCTION_47_14();
}

uint64_t static NeuralNetwork.Layer.Kind.scaledTanh(outputScale:inputScale:)@<X0>(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  return sub_240CDAD68(a1, a2, a3);
}

uint64_t sub_240CDAD68@<X0>(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  OUTLINED_FUNCTION_122_3();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a1 = a2;
  a1[1] = a3;
  OUTLINED_FUNCTION_38_15();
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_110_5();
  return OUTLINED_FUNCTION_60_7();
}

void static NeuralNetwork.Layer.sigmoid(name:inputName:outputName:)()
{
  sub_240CDAB4C();
}

uint64_t static NeuralNetwork.Layer.Kind.sigmoid()()
{
  return sub_240CDAC3C();
}

void static NeuralNetwork.Layer.sigmoidHard(name:inputName:outputName:scale:offset:)(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  sub_240CDAC7C(a1, a2, a3, a4, a5, a6);
}

uint64_t static NeuralNetwork.Layer.Kind.sigmoidHard(scale:offset:)@<X0>(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  return sub_240CDAD68(a1, a2, a3);
}

void static NeuralNetwork.Layer.elu(name:inputName:outputName:scale:)(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  sub_240CDA724(a1, a2, a3, a4, a5);
}

uint64_t static NeuralNetwork.Layer.Kind.elu(scale:)@<X0>(float *a1@<X8>, float a2@<S0>)
{
  return sub_240CDA80C(a1, a2);
}

void static NeuralNetwork.Layer.softsign(name:inputName:outputName:)()
{
  sub_240CDAB4C();
}

uint64_t static NeuralNetwork.Layer.Kind.softsign()()
{
  return sub_240CDAC3C();
}

void static NeuralNetwork.Layer.softplus(name:inputName:outputName:)()
{
  sub_240CDAB4C();
}

uint64_t static NeuralNetwork.Layer.Kind.softplus()()
{
  return sub_240CDAC3C();
}

void static NeuralNetwork.Layer.parametricSoftplus(name:inputName:outputName:outputScale:inputScale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22();
  v14 = v0;
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v8 = v7;
  v10 = v9;
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_10_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v12 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = v10;
  *(_QWORD *)(v12 + 40) = v8;
  v13 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = v6;
  *(_QWORD *)(v13 + 40) = v4;
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_16_11();
  swift_bridgeObjectRetain();
  static NeuralNetwork.Layer.Kind.parametricSoftplus(outputScale:inputScale:)(v2, v14);
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.Kind.parametricSoftplus(outputScale:inputScale:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_3();
  MEMORY[0x24BDAC7A8](v5);
  sub_240C355AC(a1, (uint64_t)&v7 - v6, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  OUTLINED_FUNCTION_54_15(a2);
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.init(outputScale:inputScale:)();
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  OUTLINED_FUNCTION_13_14();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_64_3();
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.Activation.LinearConfiguration.init(scale:offset:)(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  sub_240CDB098(a1, a2, a3);
}

void NeuralNetwork.Layer.Activation.LeakyReluConfiguration.init(negativeSlope:)(float *a1@<X8>, float a2@<S0>)
{
  sub_240CDB0D8(a1, a2);
}

void NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration.init(threshold:)(float *a1@<X8>, float a2@<S0>)
{
  sub_240CDB0D8(a1, a2);
}

void NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.init(scale:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4 = OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_54_9();
  v6 = a2 + *(int *)(OUTLINED_FUNCTION_84_6() + 20);
  __swift_storeEnumTagSinglePayload(v6, 1, 1, v4);
  OUTLINED_FUNCTION_54_15(a1);
  OUTLINED_FUNCTION_37(v7, &qword_25708C1F0);
  OUTLINED_FUNCTION_107_3();
  OUTLINED_FUNCTION_15_27(v6);
  sub_240BE10B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.init(outputScale:inputScale:)(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  sub_240CDB098(a1, a2, a3);
}

void NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.init(scale:offset:)(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  sub_240CDB098(a1, a2, a3);
}

void sub_240CDB098(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  OUTLINED_FUNCTION_122_3();
  OUTLINED_FUNCTION_6_12();
  *a1 = a2;
  a1[1] = a3;
  OUTLINED_FUNCTION_128_3();
}

void NeuralNetwork.Layer.Activation.ELUConfiguration.init(scale:)(float *a1@<X8>, float a2@<S0>)
{
  sub_240CDB0D8(a1, a2);
}

void sub_240CDB0D8(float *a1@<X8>, float a2@<S0>)
{
  OUTLINED_FUNCTION_122_3();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a1 = a2;
  OUTLINED_FUNCTION_128_3();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.init(outputScale:inputScale:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_66();
  v2 = v1;
  v4 = v3;
  v6 = v5;
  v7 = OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_81();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v9 = OUTLINED_FUNCTION_43_13();
  v10 = v6 + *(int *)(v9 + 20);
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v7);
  v11 = v6 + *(int *)(v9 + 24);
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v7);
  OUTLINED_FUNCTION_54_15(v4);
  sub_240BE0B68(v10, &qword_25708C1F0);
  sub_240C35540(v0, v10, type metadata accessor for Proto_WeightParams);
  OUTLINED_FUNCTION_15_27(v10);
  OUTLINED_FUNCTION_54_15(v2);
  sub_240BE0B68(v11, &qword_25708C1F0);
  sub_240C35540(v0, v11, type metadata accessor for Proto_WeightParams);
  OUTLINED_FUNCTION_15_27(v11);
  sub_240BE10B8(v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  sub_240BE10B8(v4, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  OUTLINED_FUNCTION_13();
}

void sub_240CDB23C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  char *v20;

  OUTLINED_FUNCTION_22();
  type metadata accessor for NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SoftplusConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SoftsignConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.ELUConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidHardConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_10_3();
  type metadata accessor for NeuralNetwork.Layer.Activation.ScaledTanhConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  type metadata accessor for NeuralNetwork.Layer.Activation.TanhConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  type metadata accessor for NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  type metadata accessor for NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_59();
  type metadata accessor for NeuralNetwork.Layer.Activation.LeakyReluConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_90();
  type metadata accessor for NeuralNetwork.Layer.Activation.ReluConfiguration(v13);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  v15 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration(v15);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  v17 = OUTLINED_FUNCTION_89();
  type metadata accessor for NeuralNetwork.Layer.Activation(v17);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_11_5();
  sub_240C355AC(v0, v1, v19);
  v20 = (char *)sub_240CDB470 + 4 * byte_240F2842A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240CDB470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C35540(v0, v1, type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration);
  OUTLINED_FUNCTION_47_8(v1, v2, type metadata accessor for Proto_ActivationLinear);
  type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(0);
  OUTLINED_FUNCTION_13_14();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_1();
}

void sub_240CDB64C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;

  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(v6);
  OUTLINED_FUNCTION_13_14();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_240C35540(a1, v2, (uint64_t (*)(_QWORD))off_251117C38[EnumCaseMultiPayload]);
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_107_3();
  OUTLINED_FUNCTION_15_27(a2);
  OUTLINED_FUNCTION_42();
}

void static NeuralNetwork.Layer.Activation.LinearConfiguration.== infix(_:_:)()
{
  sub_240CDB72C();
}

void static NeuralNetwork.Layer.Activation.LeakyReluConfiguration.== infix(_:_:)()
{
  sub_240CDB7F4();
}

void static NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration.== infix(_:_:)()
{
  sub_240CDB7F4();
}

void static NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.== infix(_:_:)()
{
  sub_240CDB72C();
}

void static NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.== infix(_:_:)()
{
  sub_240CDB72C();
}

void sub_240CDB72C()
{
  uint64_t (*v0)(_QWORD);
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_66();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_21_5();
  if (v8 && *(float *)(v5 + 4) == *(float *)(v3 + 4))
  {
    v9 = v1(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v9 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v9 + 24));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.Activation.ELUConfiguration.== infix(_:_:)()
{
  sub_240CDB7F4();
}

void sub_240CDB7F4()
{
  uint64_t (*v0)(_QWORD, float);
  uint64_t (*v1)(_QWORD, float);
  uint64_t v2;
  uint64_t v3;
  float v4;
  char v5;
  uint64_t v6;

  OUTLINED_FUNCTION_66();
  v1 = v0;
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_21_5();
  if (v5)
  {
    v6 = v1(0, v4);
    OUTLINED_FUNCTION_11_6(*(int *)(v6 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v6 + 20));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.ClampedReluParameters.init()(_QWORD *a1@<X8>)
{
  *a1 = 0;
  type metadata accessor for Proto_ClampedReLULayerParams(0);
  OUTLINED_FUNCTION_6_12();
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.Activation.ReluConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationReLU);
}

void NeuralNetwork.Layer.Activation.ReluConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDB91C()
{
  sub_240CDCB00();
}

float (*NeuralNetwork.Layer.Activation.LeakyReluConfiguration.negativeSlope.modify(uint64_t a1))(uint64_t)
{
  OUTLINED_FUNCTION_138_2(a1);
  return sub_240CE645C;
}

uint64_t NeuralNetwork.Layer.Activation.LeakyReluConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationLeakyReLU);
}

void NeuralNetwork.Layer.Activation.LeakyReluConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDB994()
{
  sub_240CDCB00();
}

uint64_t NeuralNetwork.Layer.Activation.TanhConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationTanh);
}

void NeuralNetwork.Layer.Activation.TanhConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDB9F4()
{
  sub_240CDCB00();
}

float (*NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.outputScale.modify(uint64_t a1))(uint64_t)
{
  OUTLINED_FUNCTION_138_2(a1);
  return sub_240CE645C;
}

float (*NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.inputScale.modify(uint64_t a1))(float *)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_240CE6458;
}

uint64_t NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationScaledTanh);
}

void NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBA88()
{
  sub_240CDCB00();
}

uint64_t NeuralNetwork.Layer.Activation.SigmoidConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationSigmoid);
}

void NeuralNetwork.Layer.Activation.SigmoidConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBAE8()
{
  sub_240CDCB00();
}

float (*NeuralNetwork.Layer.Activation.LinearConfiguration.scale.modify(uint64_t a1))(uint64_t)
{
  OUTLINED_FUNCTION_138_2(a1);
  return sub_240CE645C;
}

float NeuralNetwork.Layer.Activation.LinearConfiguration.offset.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void NeuralNetwork.Layer.Activation.LinearConfiguration.offset.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

float (*NeuralNetwork.Layer.Activation.LinearConfiguration.offset.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_240C2D178;
}

uint64_t NeuralNetwork.Layer.Activation.LinearConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationLinear);
}

void NeuralNetwork.Layer.Activation.LinearConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBB8C()
{
  sub_240CDCB00();
}

float (*NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.scale.modify(uint64_t a1))(uint64_t)
{
  OUTLINED_FUNCTION_138_2(a1);
  return sub_240CE645C;
}

float (*NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.offset.modify(uint64_t a1))(float *)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_240CE6458;
}

uint64_t NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationSigmoidHard);
}

void NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBC20()
{
  sub_240CDCB00();
}

void NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.getter()
{
  sub_240CDC034();
}

void NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.setter()
{
  sub_240CDC1C8();
}

void NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = OUTLINED_FUNCTION_27_3();
  *v0 = v2;
  *v2 = v1;
  v3 = OUTLINED_FUNCTION_27_19();
  v2[1] = v3;
  v2[2] = OUTLINED_FUNCTION_17_5(v3);
  v4 = OUTLINED_FUNCTION_34_11();
  v2[3] = v4;
  v2[4] = OUTLINED_FUNCTION_17_5(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  v2[5] = OUTLINED_FUNCTION_29_3();
  v2[6] = OUTLINED_FUNCTION_29_3();
  v5 = OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_89_3((uint64_t)v5);
  NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240CDBCDC()
{
  sub_240CDC3C4();
}

uint64_t NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationPReLU);
}

void NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBD30()
{
  sub_240CDCB00();
}

float NeuralNetwork.Layer.Activation.ELUConfiguration.scale.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void NeuralNetwork.Layer.Activation.ELUConfiguration.scale.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

float (*NeuralNetwork.Layer.Activation.ELUConfiguration.scale.modify(uint64_t a1))(uint64_t a1)
{
  OUTLINED_FUNCTION_138_2(a1);
  return sub_240C2D0C4;
}

uint64_t NeuralNetwork.Layer.Activation.ELUConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationELU);
}

void NeuralNetwork.Layer.Activation.ELUConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBDB8()
{
  sub_240CDCB00();
}

float (*NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration.threshold.modify(uint64_t a1))(uint64_t)
{
  OUTLINED_FUNCTION_138_2(a1);
  return sub_240CE645C;
}

uint64_t NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationThresholdedReLU);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DCA8);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.SoftplusConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC98);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.SoftsignConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC88);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.ELUConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC68);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidHardConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC48);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC28);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.ScaledTanhConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC18);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.TanhConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC08);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC58);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC78);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.LeakyReluConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DBF8);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.ReluConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DBE8);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DC38);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Activation(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DBC8);
}

void NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBF48()
{
  sub_240CDCB00();
}

uint64_t NeuralNetwork.Layer.Activation.SoftsignConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationSoftsign);
}

void NeuralNetwork.Layer.Activation.SoftsignConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDBFA8()
{
  sub_240CDCB00();
}

uint64_t NeuralNetwork.Layer.Activation.SoftplusConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationSoftplus);
}

void NeuralNetwork.Layer.Activation.SoftplusConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDC008()
{
  sub_240CDCB00();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.getter()
{
  sub_240CDC034();
}

void sub_240CDC034()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v10);
  v11 = v5(0);
  OUTLINED_FUNCTION_76_5(*(int *)(v11 + 20));
  OUTLINED_FUNCTION_49_12();
  if ((_DWORD)v0 != 1)
  {
    OUTLINED_FUNCTION_52_6(v12, v13, &qword_25708C1F0);
    v14 = OUTLINED_FUNCTION_111_5(v1);
    if (v16)
    {
      *v3 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_48_12((__n128)xmmword_240F1FDE0);
      v17 = OUTLINED_FUNCTION_106_4();
      v20 = OUTLINED_FUNCTION_18_0(v0, v18, v19, v17);
      OUTLINED_FUNCTION_39(v20, &qword_25708C1F0);
    }
    else
    {
      OUTLINED_FUNCTION_68_4(v14, v15, type metadata accessor for Proto_WeightParams);
    }
    OUTLINED_FUNCTION_47_8((uint64_t)v3, v21, type metadata accessor for Proto_WeightParams);
    v2 = 0;
  }
  v22 = OUTLINED_FUNCTION_34_11();
  __swift_storeEnumTagSinglePayload(v7, v2, 1, v22);
  OUTLINED_FUNCTION_1();
}

void sub_240CDC154(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_81();
  sub_240C02F94(a1, v5, &qword_25708CFB0);
  a5(v5);
  OUTLINED_FUNCTION_42();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.setter()
{
  sub_240CDC1C8();
}

void sub_240CDC1C8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_89();
  v9 = type metadata accessor for NeuralNetwork.WeightParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11_5();
  sub_240C02F94(v5, v3, &qword_25708CFB0);
  if (__swift_getEnumTagSinglePayload(v3, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_70_0(v3);
    v11 = OUTLINED_FUNCTION_62_2();
    v12 = v0 + *(int *)(v11 + 20);
    OUTLINED_FUNCTION_37(v11, &qword_25708C1F0);
    __swift_storeEnumTagSinglePayload(v12, 1, 1, v6);
    OUTLINED_FUNCTION_70_0(v5);
  }
  else
  {
    sub_240C35540(v3, v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
    sub_240C355AC(v2, v1, type metadata accessor for Proto_WeightParams);
    v13 = OUTLINED_FUNCTION_62_2();
    v14 = v0 + *(int *)(v13 + 20);
    OUTLINED_FUNCTION_37(v13, &qword_25708C1F0);
    OUTLINED_FUNCTION_91_2(v1, v14);
    v15 = OUTLINED_FUNCTION_15_27(v14);
    OUTLINED_FUNCTION_62_3(v15, &qword_25708CFB0);
    sub_240BE10B8(v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  }
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = OUTLINED_FUNCTION_27_3();
  *v0 = v2;
  *v2 = v1;
  v3 = OUTLINED_FUNCTION_27_19();
  v2[1] = v3;
  v2[2] = OUTLINED_FUNCTION_17_5(v3);
  v4 = OUTLINED_FUNCTION_34_11();
  v2[3] = v4;
  v2[4] = OUTLINED_FUNCTION_17_5(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  v2[5] = OUTLINED_FUNCTION_29_3();
  v2[6] = OUTLINED_FUNCTION_29_3();
  v5 = OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_89_3((uint64_t)v5);
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240CDC3B0()
{
  sub_240CDC3C4();
}

void sub_240CDC3C4()
{
  uint64_t **v0;
  void (*v1)(void *);
  uint64_t *v2;
  void *v3;
  void *v4;
  char v5;
  void (*v6)(void *);
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v2 = *v0;
  v3 = (void *)(*v0)[6];
  v4 = (void *)(*v0)[7];
  if ((v5 & 1) != 0)
  {
    v6 = v1;
    v8 = (void *)v2[4];
    v7 = (void *)v2[5];
    v9 = (void *)v2[2];
    v10 = OUTLINED_FUNCTION_55_8();
    sub_240C02F94(v10, v11, &qword_25708CFB0);
    v6(v7);
    sub_240BE0B68((uint64_t)v4, &qword_25708CFB0);
  }
  else
  {
    v12 = v2[3];
    sub_240C02F94((*v0)[7], (uint64_t)v3, &qword_25708CFB0);
    v13 = OUTLINED_FUNCTION_116_3();
    if (v14)
    {
      v16 = *v2;
      v15 = v2[1];
      OUTLINED_FUNCTION_70_0(v13);
      v17 = OUTLINED_FUNCTION_62_2();
      v18 = v16 + *(int *)(v17 + 20);
      OUTLINED_FUNCTION_39(v17, &qword_25708C1F0);
      __swift_storeEnumTagSinglePayload(v18, 1, 1, v15);
      OUTLINED_FUNCTION_70_0(v12);
    }
    else
    {
      v19 = v2[4];
      v21 = v2[1];
      v20 = v2[2];
      OUTLINED_FUNCTION_91_2(v13, v19);
      sub_240C355AC(v19, v20, type metadata accessor for Proto_WeightParams);
      v22 = OUTLINED_FUNCTION_62_2();
      OUTLINED_FUNCTION_39(v22, &qword_25708C1F0);
      v23 = OUTLINED_FUNCTION_55_8();
      sub_240C35540(v23, v24, type metadata accessor for Proto_WeightParams);
      OUTLINED_FUNCTION_110_1();
      v28 = __swift_storeEnumTagSinglePayload(v25, v26, v27, v21);
      OUTLINED_FUNCTION_37(v28, &qword_25708CFB0);
      sub_240BE10B8(v19, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
    }
    v3 = (void *)v2[6];
    v4 = (void *)v2[7];
    v8 = (void *)v2[4];
    v7 = (void *)v2[5];
    v9 = (void *)v2[2];
  }
  free(v4);
  free(v3);
  free(v7);
  free(v8);
  free(v9);
  free(v2);
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_43_13();
  OUTLINED_FUNCTION_76_5(*(int *)(v9 + 24));
  OUTLINED_FUNCTION_49_12();
  if ((_DWORD)v0 != 1)
  {
    OUTLINED_FUNCTION_52_6(v10, v11, &qword_25708C1F0);
    v12 = OUTLINED_FUNCTION_111_5(v1);
    if (v14)
    {
      *v3 = MEMORY[0x24BEE4AF8];
      OUTLINED_FUNCTION_48_12((__n128)xmmword_240F1FDE0);
      v15 = OUTLINED_FUNCTION_106_4();
      v18 = OUTLINED_FUNCTION_18_0(v0, v16, v17, v15);
      OUTLINED_FUNCTION_39(v18, &qword_25708C1F0);
    }
    else
    {
      OUTLINED_FUNCTION_68_4(v12, v13, type metadata accessor for Proto_WeightParams);
    }
    OUTLINED_FUNCTION_47_8((uint64_t)v3, v19, type metadata accessor for Proto_WeightParams);
    v2 = 0;
  }
  v20 = OUTLINED_FUNCTION_34_11();
  __swift_storeEnumTagSinglePayload(v5, v2, 1, v20);
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_66();
  a17 = v21;
  a18 = v22;
  v24 = v23;
  v25 = OUTLINED_FUNCTION_27_19();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  v29 = (char *)&a9 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = OUTLINED_FUNCTION_34_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_81();
  sub_240C02F94(v24, (uint64_t)v29, &qword_25708CFB0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30) == 1)
  {
    OUTLINED_FUNCTION_13_5((uint64_t)v29);
    v32 = OUTLINED_FUNCTION_43_13();
    v33 = v18 + *(int *)(v32 + 24);
    OUTLINED_FUNCTION_37(v32, &qword_25708C1F0);
    __swift_storeEnumTagSinglePayload(v33, 1, 1, v25);
    OUTLINED_FUNCTION_13_5(v24);
  }
  else
  {
    OUTLINED_FUNCTION_91_2((uint64_t)v29, v20);
    v34 = OUTLINED_FUNCTION_55_8();
    OUTLINED_FUNCTION_28_10(v34, v35);
    v36 = OUTLINED_FUNCTION_43_13();
    v37 = v18 + *(int *)(v36 + 24);
    OUTLINED_FUNCTION_37(v36, &qword_25708C1F0);
    sub_240C35540(v19, v37, type metadata accessor for Proto_WeightParams);
    v38 = OUTLINED_FUNCTION_15_27(v37);
    OUTLINED_FUNCTION_62_3(v38, &qword_25708CFB0);
    sub_240BE10B8(v20, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.modify()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void *v5;

  v2 = OUTLINED_FUNCTION_27_3();
  *v0 = v2;
  *v2 = v1;
  v3 = OUTLINED_FUNCTION_27_19();
  v2[1] = v3;
  v2[2] = OUTLINED_FUNCTION_17_5(v3);
  v4 = OUTLINED_FUNCTION_34_11();
  v2[3] = v4;
  v2[4] = OUTLINED_FUNCTION_17_5(v4);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  v2[5] = OUTLINED_FUNCTION_29_3();
  v2[6] = OUTLINED_FUNCTION_29_3();
  v5 = OUTLINED_FUNCTION_29_3();
  OUTLINED_FUNCTION_89_3((uint64_t)v5);
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240CDC868()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t v2;
  uint64_t *v3;
  void *v4;
  void *v5;
  char v6;
  void *v7;
  void *v8;
  void *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_66();
  v44 = v2;
  v3 = *v1;
  v4 = (void *)(*v1)[6];
  v5 = (void *)(*v1)[7];
  if ((v6 & 1) != 0)
  {
    v8 = (void *)v3[4];
    v7 = (void *)v3[5];
    v9 = (void *)v3[2];
    sub_240C02F94((*v1)[7], (uint64_t)v7, &qword_25708CFB0);
    NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.setter((uint64_t)v7, v10, v11, v12, v13, v14, v15, v16, v36, v37, v38, v39, v40, v41, v42, v43, v0, v44);
    sub_240BE0B68((uint64_t)v5, &qword_25708CFB0);
  }
  else
  {
    v17 = v3[3];
    v18 = OUTLINED_FUNCTION_289();
    sub_240C02F94(v18, v19, v20);
    v21 = OUTLINED_FUNCTION_116_3();
    if (v22)
    {
      v24 = *v3;
      v23 = v3[1];
      OUTLINED_FUNCTION_13_5(v21);
      v25 = OUTLINED_FUNCTION_43_13();
      v26 = v24 + *(int *)(v25 + 24);
      OUTLINED_FUNCTION_212(v25, &qword_25708C1F0);
      __swift_storeEnumTagSinglePayload(v26, 1, 1, v23);
      OUTLINED_FUNCTION_13_5(v17);
    }
    else
    {
      v27 = v3[4];
      v29 = v3[1];
      v28 = v3[2];
      v30 = *v3;
      sub_240C35540(v21, v27, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
      sub_240C355AC(v27, v28, type metadata accessor for Proto_WeightParams);
      v31 = v30 + *(int *)(OUTLINED_FUNCTION_43_13() + 24);
      sub_240BE0B68(v31, &qword_25708C1F0);
      OUTLINED_FUNCTION_91_2(v28, v31);
      OUTLINED_FUNCTION_110_1();
      v35 = __swift_storeEnumTagSinglePayload(v32, v33, v34, v29);
      OUTLINED_FUNCTION_37(v35, &qword_25708CFB0);
      sub_240BE10B8(v27, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
    }
    v4 = (void *)v3[6];
    v5 = (void *)v3[7];
    v8 = (void *)v3[4];
    v7 = (void *)v3[5];
    v9 = (void *)v3[2];
  }
  free(v5);
  free(v4);
  free(v7);
  free(v8);
  free(v9);
  free(v3);
}

uint64_t NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240CDCA1C(a1, (void (*)(_QWORD))type metadata accessor for Proto_ActivationParametricSoftplus);
}

uint64_t sub_240CDCA1C(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  OUTLINED_FUNCTION_60_4();
  return sub_240F1CC54();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.hashValue.getter()
{
  sub_240CDCA8C();
}

void sub_240CDCA8C()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_12_5();
  sub_240F1CF78();
  OUTLINED_FUNCTION_8_6();
}

void sub_240CDCAE4()
{
  sub_240CDCB00();
}

void sub_240CDCB00()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_60_4();
  OUTLINED_FUNCTION_12_5();
  sub_240F1CF78();
  OUTLINED_FUNCTION_8_6();
}

void NeuralNetwork.Layer.Activation.ReluConfiguration.customMirror.getter()
{
  sub_240CDD0A0();
}

void NeuralNetwork.Layer.Activation.LeakyReluConfiguration.customMirror.getter()
{
  sub_240CDCF58();
}

void NeuralNetwork.Layer.Activation.TanhConfiguration.customMirror.getter()
{
  sub_240CDD0A0();
}

void NeuralNetwork.Layer.Activation.ScaledTanhConfiguration.customMirror.getter()
{
  _DWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.Activation.ScaledTanhConfiguration(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_40_15((uint64_t)v0, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1D370;
  *(_DWORD *)(v9 + 48) = *v0;
  v10 = OUTLINED_FUNCTION_50_13(v9);
  v11 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v10 + 72) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v10 + 80) = 0x6163537475706E69;
  *(_QWORD *)(v10 + 88) = 0xEA0000000000656CLL;
  *(_QWORD *)(v10 + 120) = v11;
  *(_DWORD *)(v10 + 96) = v12;
  v13 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v14, v15, v13);
  OUTLINED_FUNCTION_79_4(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  OUTLINED_FUNCTION_57_9();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.SigmoidConfiguration.customMirror.getter()
{
  sub_240CDD0A0();
}

void NeuralNetwork.Layer.Activation.LinearConfiguration.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240CDCCD4((uint64_t)type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240CDCCD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  _DWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t);
  void (*v26)(uint64_t);
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_22();
  a19 = v23;
  a20 = v24;
  v26 = v25;
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  v29 = OUTLINED_FUNCTION_60();
  v26(v29);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x24BDAC7A8](v30);
  sub_240C355AC((uint64_t)v20, (uint64_t)&a9 - v31, (uint64_t (*)(_QWORD))v26);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v32 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v32 + 16) = xmmword_240F1D370;
  *(_DWORD *)(v32 + 48) = *v20;
  v33 = OUTLINED_FUNCTION_90_4(v32);
  v34 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v33 + 72) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v33 + 80) = 0x74657366666FLL;
  *(_QWORD *)(v33 + 88) = 0xE600000000000000;
  *(_QWORD *)(v33 + 120) = v34;
  *(_DWORD *)(v33 + 96) = v35;
  v36 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v21, v37, v38, v36);
  OUTLINED_FUNCTION_79_4(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v22 + 104));
  OUTLINED_FUNCTION_57_9();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.SigmoidHardConfiguration.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240CDCCD4((uint64_t)type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidHardConfiguration, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_15_6();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_40_15(v0, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  OUTLINED_FUNCTION_90_4(v9);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_127_4(v10);
  NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.getter();
  v11 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v12, v13, v11);
  OUTLINED_FUNCTION_25_9(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.ELUConfiguration.customMirror.getter()
{
  sub_240CDCF58();
}

void NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration.customMirror.getter()
{
  sub_240CDCF58();
}

void sub_240CDCF58()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t);
  void (*v7)(uint64_t);
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v8 = v0;
  v10 = OUTLINED_FUNCTION_125_4(v9);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_89();
  v7(v13);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x24BDAC7A8](v14);
  sub_240C355AC((uint64_t)v8, (uint64_t)&v21 - v15, (uint64_t (*)(_QWORD))v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v16 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v16 + 32) = v5;
  *(_QWORD *)(v16 + 40) = v3;
  v17 = *v8;
  *(_QWORD *)(v16 + 72) = MEMORY[0x24BEE14E8];
  *(_DWORD *)(v16 + 48) = v17;
  v18 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v19, v20, v18);
  OUTLINED_FUNCTION_79_4(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 104));
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.SoftsignConfiguration.customMirror.getter()
{
  sub_240CDD0A0();
}

void NeuralNetwork.Layer.Activation.SoftplusConfiguration.customMirror.getter()
{
  sub_240CDD0A0();
}

void sub_240CDD0A0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  void (*v4)(uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v5 = OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_90();
  v4(v8);
  OUTLINED_FUNCTION_59_3();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_28_10(v0, (uint64_t)v14 - v10);
  v14[1] = MEMORY[0x24BEE4AF8];
  v11 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v12, v13, v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v0, *MEMORY[0x24BEE43C0], v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  sub_240F1CF9C();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22();
  v3 = OUTLINED_FUNCTION_125_4(v2);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_40_15(v0, v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1D370;
  OUTLINED_FUNCTION_50_13(v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CFB0);
  OUTLINED_FUNCTION_127_4(v11);
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.getter();
  *(_QWORD *)(v10 + 80) = 0x6163537475706E69;
  *(_QWORD *)(v10 + 88) = 0xEA0000000000656CLL;
  *(_QWORD *)(v10 + 120) = v11;
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v10 + 96));
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.getter();
  v12 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v13, v14, v12);
  OUTLINED_FUNCTION_25_9(*MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 104));
  OUTLINED_FUNCTION_61_9();
  OUTLINED_FUNCTION_1();
}

void sub_240CDD2F8()
{
  sub_240BE18B8(&qword_25708DAE8, type metadata accessor for Proto_ActivationParams, (uint64_t)&unk_240F4C64C);
}

void sub_240CDD324()
{
  sub_240BE18B8(&qword_25708DAF0, type metadata accessor for Proto_ClampedReLULayerParams, (uint64_t)&unk_240F4C5D4);
}

void sub_240CDD350()
{
  sub_240BE18B8(&qword_25708DAF8, type metadata accessor for NeuralNetwork.Layer.Activation.ReluConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.ReluConfiguration);
}

void sub_240CDD37C()
{
  sub_240BE18B8(&qword_25708DB00, type metadata accessor for Proto_ActivationReLU, (uint64_t)&unk_240F4C55C);
}

void sub_240CDD3A8()
{
  sub_240BE18B8(&qword_25708DB08, type metadata accessor for NeuralNetwork.Layer.Activation.LeakyReluConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.LeakyReluConfiguration);
}

void sub_240CDD3D4()
{
  sub_240BE18B8(&qword_25708DB10, type metadata accessor for Proto_ActivationLeakyReLU, (uint64_t)&unk_240F4C4E4);
}

void sub_240CDD400()
{
  sub_240BE18B8(&qword_25708DB18, type metadata accessor for NeuralNetwork.Layer.Activation.TanhConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.TanhConfiguration);
}

void sub_240CDD42C()
{
  sub_240BE18B8(&qword_25708DB20, type metadata accessor for Proto_ActivationTanh, (uint64_t)&unk_240F4C46C);
}

void sub_240CDD458()
{
  sub_240BE18B8(&qword_25708DB28, type metadata accessor for NeuralNetwork.Layer.Activation.ScaledTanhConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.ScaledTanhConfiguration);
}

void sub_240CDD484()
{
  sub_240BE18B8(&qword_25708DB30, type metadata accessor for Proto_ActivationScaledTanh, (uint64_t)&unk_240F4C3F4);
}

void sub_240CDD4B0()
{
  sub_240BE18B8(&qword_25708DB38, type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.SigmoidConfiguration);
}

void sub_240CDD4DC()
{
  sub_240BE18B8(&qword_25708DB40, type metadata accessor for Proto_ActivationSigmoid, (uint64_t)&unk_240F4C37C);
}

void sub_240CDD508()
{
  sub_240BE18B8(&qword_25708DB48, type metadata accessor for NeuralNetwork.Layer.Activation.LinearConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.LinearConfiguration);
}

void sub_240CDD534()
{
  sub_240BE18B8(&qword_25708DB50, type metadata accessor for Proto_ActivationLinear, (uint64_t)&unk_240F4C304);
}

void sub_240CDD560()
{
  sub_240BE18B8(&qword_25708DB58, type metadata accessor for NeuralNetwork.Layer.Activation.SigmoidHardConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.SigmoidHardConfiguration);
}

void sub_240CDD58C()
{
  sub_240BE18B8(&qword_25708DB60, type metadata accessor for Proto_ActivationSigmoidHard, (uint64_t)&unk_240F4C28C);
}

void sub_240CDD5B8()
{
  sub_240BE18B8(&qword_25708DB68, type metadata accessor for NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration);
}

void sub_240CDD5E4()
{
  sub_240BE18B8(&qword_25708DB70, type metadata accessor for Proto_ActivationPReLU, (uint64_t)&unk_240F4C214);
}

void sub_240CDD610()
{
  sub_240BE18B8(&qword_25708DB78, type metadata accessor for NeuralNetwork.Layer.Activation.ELUConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.ELUConfiguration);
}

void sub_240CDD63C()
{
  sub_240BE18B8(&qword_25708DB80, type metadata accessor for Proto_ActivationELU, (uint64_t)&unk_240F4C19C);
}

void sub_240CDD668()
{
  sub_240BE18B8(&qword_25708DB88, type metadata accessor for NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.ThresholdedReluConfiguration);
}

void sub_240CDD694()
{
  sub_240BE18B8(&qword_25708DB90, type metadata accessor for Proto_ActivationThresholdedReLU, (uint64_t)&unk_240F4C124);
}

void sub_240CDD6C0()
{
  sub_240BE18B8(&qword_25708DB98, type metadata accessor for NeuralNetwork.Layer.Activation.SoftsignConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.SoftsignConfiguration);
}

void sub_240CDD6EC()
{
  sub_240BE18B8(&qword_25708DBA0, type metadata accessor for Proto_ActivationSoftsign, (uint64_t)&unk_240F4C0AC);
}

void sub_240CDD718()
{
  sub_240BE18B8(&qword_25708DBA8, type metadata accessor for NeuralNetwork.Layer.Activation.SoftplusConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.SoftplusConfiguration);
}

void sub_240CDD744()
{
  sub_240BE18B8(&qword_25708DBB0, type metadata accessor for Proto_ActivationSoftplus, (uint64_t)&unk_240F4C034);
}

void sub_240CDD770()
{
  sub_240BE18B8(&qword_25708DBB8, type metadata accessor for NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration);
}

void sub_240CDD79C()
{
  sub_240BE18B8(&qword_25708DBC0, type metadata accessor for Proto_ActivationParametricSoftplus, (uint64_t)&unk_240F4BFBC);
}

void sub_240CDD7C8(float *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.Activation.ELUConfiguration.scale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CDD7EC(float *a1)
{
  NeuralNetwork.Layer.Activation.ELUConfiguration.scale.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CDD80C(float *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.Activation.LinearConfiguration.offset.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CDD830(float *a1)
{
  NeuralNetwork.Layer.Activation.LinearConfiguration.offset.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240CDD850()
{
  NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CDD86C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240CDC154(a1, a2, a3, a4, (void (*)(uint64_t))NeuralNetwork.Layer.Activation.ParameterizedReluConfiguration.scale.setter);
}

void sub_240CDD888()
{
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CDD8A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240CDC154(a1, a2, a3, a4, (void (*)(uint64_t))NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.outputScale.setter);
}

void sub_240CDD8C0()
{
  NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CDD8DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240CDC154(a1, a2, a3, a4, (void (*)(uint64_t))NeuralNetwork.Layer.Activation.ParametricSoftplusConfiguration.inputScale.setter);
}

uint64_t _s10ActivationOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_240CDD958 + 4 * byte_240F28437[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t _s10ActivationOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int EnumCaseMultiPayload;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  void (*v29)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v6 = type metadata accessor for Proto_ActivationLinear(0);
      goto LABEL_9;
    case 1:
    case 5:
    case 7:
    case 10:
    case 11:
      v3 = sub_240F1C930();
      v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v5 = a1;
      return v4(v5, v3);
    case 2:
      v7 = type metadata accessor for Proto_ActivationLeakyReLU(0);
      goto LABEL_11;
    case 3:
      v7 = type metadata accessor for Proto_ActivationThresholdedReLU(0);
      goto LABEL_11;
    case 4:
      v8 = sub_240F1C930();
      v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v29(a1, v8);
      v9 = a1 + *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
      v10 = type metadata accessor for Proto_WeightParams(0);
      goto LABEL_23;
    case 6:
      v6 = type metadata accessor for Proto_ActivationScaledTanh(0);
      goto LABEL_9;
    case 8:
      v6 = type metadata accessor for Proto_ActivationSigmoidHard(0);
LABEL_9:
      v11 = *(int *)(v6 + 24);
      goto LABEL_12;
    case 9:
      v7 = type metadata accessor for Proto_ActivationELU(0);
LABEL_11:
      v11 = *(int *)(v7 + 20);
LABEL_12:
      v12 = a1 + v11;
      v3 = sub_240F1C930();
      v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v5 = v12;
      return v4(v5, v3);
    case 12:
      v8 = sub_240F1C930();
      v29 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8);
      v29(a1, v8);
      v13 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
      v14 = a1 + *(int *)(v13 + 20);
      v10 = type metadata accessor for Proto_WeightParams(0);
      if (!__swift_getEnumTagSinglePayload(v14, 1, v10))
      {
        swift_bridgeObjectRelease();
        sub_240BF6AE0(*(_QWORD *)(v14 + 8), *(_QWORD *)(v14 + 16));
        sub_240BF6AE0(*(_QWORD *)(v14 + 24), *(_QWORD *)(v14 + 32));
        sub_240BF6AE0(*(_QWORD *)(v14 + 40), *(_QWORD *)(v14 + 48));
        v29(v14 + *(int *)(v10 + 36), v8);
        v15 = v14 + *(int *)(v10 + 40);
        v16 = type metadata accessor for Proto_QuantizationParams(0);
        if (!__swift_getEnumTagSinglePayload(v15, 1, v16))
        {
          v17 = v15 + *(int *)(v16 + 20);
          v18 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
          if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
          {
            EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
            swift_bridgeObjectRelease();
            if (EnumCaseMultiPayload == 1)
            {
              v20 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
              v21 = 5;
            }
            else
            {
              swift_bridgeObjectRelease();
              v20 = type metadata accessor for Proto_LinearQuantizationParams(0);
              v21 = 6;
            }
            v29(v17 + *(int *)(v20 + 4 * v21), v8);
          }
          v29(v15 + *(int *)(v16 + 24), v8);
        }
      }
      v9 = a1 + *(int *)(v13 + 24);
LABEL_23:
      result = __swift_getEnumTagSinglePayload(v9, 1, v10);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(v9 + 8), *(_QWORD *)(v9 + 16));
      sub_240BF6AE0(*(_QWORD *)(v9 + 24), *(_QWORD *)(v9 + 32));
      sub_240BF6AE0(*(_QWORD *)(v9 + 40), *(_QWORD *)(v9 + 48));
      v29(v9 + *(int *)(v10 + 36), v8);
      v22 = v9 + *(int *)(v10 + 40);
      v23 = type metadata accessor for Proto_QuantizationParams(0);
      result = __swift_getEnumTagSinglePayload(v22, 1, v23);
      if ((_DWORD)result)
        return result;
      v24 = v22 + *(int *)(v23 + 20);
      v25 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (!__swift_getEnumTagSinglePayload(v24, 1, v25))
      {
        v26 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v26 == 1)
        {
          v27 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v28 = 5;
        }
        else
        {
          swift_bridgeObjectRelease();
          v27 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v28 = 6;
        }
        v29(v24 + *(int *)(v27 + 4 * v28), v8);
      }
      v5 = v22 + *(int *)(v23 + 24);
      v3 = v8;
      v4 = (uint64_t (*)(uint64_t, uint64_t))v29;
      return v4(v5, v3);
    default:
      return result;
  }
}

void _s10ActivationOwcp()
{
  char *v0;

  v0 = (char *)sub_240CDE858 + 4 * byte_240F28451[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_240CDE858(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *a17, void *__dst, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30)
{
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;

  *v30 = *v31;
  v32 = *(int *)(type metadata accessor for Proto_ActivationLinear(0) + 24);
  v33 = (char *)v30 + v32;
  v34 = (char *)v31 + v32;
  v35 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(v33, v34, v35);
  swift_storeEnumTagMultiPayload();
  return v30;
}

uint64_t _s10ActivationOwca(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240BE10B8(result, type metadata accessor for NeuralNetwork.Layer.Activation);
    v2 = (char *)&loc_240CDF3B4 + 4 * byte_240F2845E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void _s10ActivationOwtk()
{
  char *v0;

  v0 = (char *)sub_240CDFF10 + 4 * byte_240F2846B[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

_QWORD *sub_240CDFF10(int a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, int a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, void *__dst, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27)
{
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;

  *v27 = *v28;
  v29 = *(int *)(type metadata accessor for Proto_ActivationLinear(0) + 24);
  v30 = (char *)v27 + v29;
  v31 = (char *)v28 + v29;
  v32 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
  swift_storeEnumTagMultiPayload();
  return v27;
}

uint64_t _s10ActivationOwta(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240BE10B8(result, type metadata accessor for NeuralNetwork.Layer.Activation);
    v2 = (char *)&loc_240CE0900 + 4 * byte_240F28478[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_240CE1284()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;

  result = type metadata accessor for Proto_ActivationLinear(319);
  if (v1 <= 0x3F)
  {
    result = sub_240F1C930();
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Proto_ActivationLeakyReLU(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Proto_ActivationThresholdedReLU(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for Proto_ActivationPReLU(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for Proto_ActivationScaledTanh(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for Proto_ActivationSigmoidHard(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for Proto_ActivationELU(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for Proto_ActivationParametricSoftplus(319);
                  if (v9 <= 0x3F)
                  {
                    swift_initEnumMetadataMultiPayload();
                    return 0;
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void _s21ClampedReluParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1774(a1, a2, a3, type metadata accessor for Proto_ClampedReLULayerParams);
}

uint64_t _s21ClampedReluParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ClampedReLULayerParams);
}

void _s21ClampedReluParametersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE17E4(a1, a2, a3, type metadata accessor for Proto_ClampedReLULayerParams);
}

void _s21ClampedReluParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE1830(a1, a2, a3, type metadata accessor for Proto_ClampedReLULayerParams);
}

void _s21ClampedReluParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1894(a1, a2, a3, type metadata accessor for Proto_ClampedReLULayerParams);
}

void _s21ClampedReluParametersVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE18E0(a1, a2, a3, type metadata accessor for Proto_ClampedReLULayerParams);
}

uint64_t _s21ClampedReluParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_98_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21ClampedReluParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1448()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_98_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ClampedReluParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DBD8);
}

uint64_t sub_240CE1478(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ClampedReLULayerParams);
}

uint64_t _s10ActivationO17ReluConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1498()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_96_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO17ReluConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE14C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_96_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

void _s10ActivationO22LeakyReluConfigurationVwCP(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE3310(a1, a2, a3, type metadata accessor for Proto_ActivationLeakyReLU);
}

uint64_t _s10ActivationO22LeakyReluConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C34218(a1, a2, type metadata accessor for Proto_ActivationLeakyReLU);
}

void _s10ActivationO22LeakyReluConfigurationVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C3424C(a1, a2, a3, type metadata accessor for Proto_ActivationLeakyReLU);
}

void _s10ActivationO22LeakyReluConfigurationVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C342A8(a1, a2, a3, type metadata accessor for Proto_ActivationLeakyReLU);
}

void _s10ActivationO22LeakyReluConfigurationVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34304(a1, a2, a3, type metadata accessor for Proto_ActivationLeakyReLU);
}

void _s10ActivationO22LeakyReluConfigurationVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34360(a1, a2, a3, type metadata accessor for Proto_ActivationLeakyReLU);
}

uint64_t _s10ActivationO22LeakyReluConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1530()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_102_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO22LeakyReluConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1558()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_102_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE1574(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationLeakyReLU);
}

uint64_t _s10ActivationO17TanhConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE158C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_101_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO17TanhConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE15B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_101_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

void _s10ActivationO23ScaledTanhConfigurationVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1774(a1, a2, a3, type metadata accessor for Proto_ActivationScaledTanh);
}

uint64_t _s10ActivationO23ScaledTanhConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ActivationScaledTanh);
}

void _s10ActivationO23ScaledTanhConfigurationVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE17E4(a1, a2, a3, type metadata accessor for Proto_ActivationScaledTanh);
}

void _s10ActivationO23ScaledTanhConfigurationVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE1830(a1, a2, a3, type metadata accessor for Proto_ActivationScaledTanh);
}

void _s10ActivationO23ScaledTanhConfigurationVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1894(a1, a2, a3, type metadata accessor for Proto_ActivationScaledTanh);
}

void _s10ActivationO23ScaledTanhConfigurationVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE18E0(a1, a2, a3, type metadata accessor for Proto_ActivationScaledTanh);
}

uint64_t _s10ActivationO23ScaledTanhConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_100_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO23ScaledTanhConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE164C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_100_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE1668(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationScaledTanh);
}

uint64_t _s10ActivationO20SigmoidConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_93_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO20SigmoidConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE16A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_93_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

void _s10ActivationO19LinearConfigurationVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1774(a1, a2, a3, type metadata accessor for Proto_ActivationLinear);
}

uint64_t _s10ActivationO19LinearConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ActivationLinear);
}

void _s10ActivationO19LinearConfigurationVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE17E4(a1, a2, a3, type metadata accessor for Proto_ActivationLinear);
}

void _s10ActivationO19LinearConfigurationVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE1830(a1, a2, a3, type metadata accessor for Proto_ActivationLinear);
}

void _s10ActivationO19LinearConfigurationVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1894(a1, a2, a3, type metadata accessor for Proto_ActivationLinear);
}

void _s10ActivationO19LinearConfigurationVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE18E0(a1, a2, a3, type metadata accessor for Proto_ActivationLinear);
}

uint64_t _s10ActivationO19LinearConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1718()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_97_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO19LinearConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1740()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_97_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE175C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationLinear);
}

void _s10ActivationO24SigmoidHardConfigurationVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1774(a1, a2, a3, type metadata accessor for Proto_ActivationSigmoidHard);
}

void sub_240CE1774(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  if ((*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4) - 8) + 80) & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_52_11();
  }
  else
  {
    *a1 = *a2;
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_58_7(v6);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s10ActivationO24SigmoidHardConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ActivationSigmoidHard);
}

void _s10ActivationO24SigmoidHardConfigurationVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE17E4(a1, a2, a3, type metadata accessor for Proto_ActivationSigmoidHard);
}

void sub_240CE17E4(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_25_19(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s10ActivationO24SigmoidHardConfigurationVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE1830(a1, a2, a3, type metadata accessor for Proto_ActivationSigmoidHard);
}

void sub_240CE1830(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *a1 = *a2;
  a1[1] = a2[1];
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s10ActivationO24SigmoidHardConfigurationVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE1894(a1, a2, a3, type metadata accessor for Proto_ActivationSigmoidHard);
}

void sub_240CE1894(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_25_19(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s10ActivationO24SigmoidHardConfigurationVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CE18E0(a1, a2, a3, type metadata accessor for Proto_ActivationSigmoidHard);
}

void sub_240CE18E0(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_25_19(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t _s10ActivationO24SigmoidHardConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE192C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO24SigmoidHardConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE1954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_103_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE1970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationSigmoidHard);
}

char *_s10ActivationO30ParameterizedReluConfigurationVwCP(char *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  char *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  char *v34;
  char *v36;
  char *v37;
  char *__dst;

  v4 = type metadata accessor for Proto_ActivationPReLU(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(v6 + 20);
    v10 = &a1[v9];
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for Proto_WeightParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *(_QWORD *)v10 = *v11;
      v16 = v11[2];
      swift_bridgeObjectRetain();
      sub_240BF5610(v15, v16);
      *((_QWORD *)v10 + 1) = v15;
      *((_QWORD *)v10 + 2) = v16;
      v17 = v11[3];
      v18 = v11[4];
      sub_240BF5610(v17, v18);
      *((_QWORD *)v10 + 3) = v17;
      *((_QWORD *)v10 + 4) = v18;
      v19 = v11[5];
      v20 = v11[6];
      sub_240BF5610(v19, v20);
      *((_QWORD *)v10 + 5) = v19;
      *((_QWORD *)v10 + 6) = v20;
      v10[56] = *((_BYTE *)v11 + 56);
      v8(&v10[*(int *)(v12 + 36)], (char *)v11 + *(int *)(v12 + 36), v7);
      v21 = *(int *)(v12 + 40);
      v22 = &v10[v21];
      v23 = (_QWORD *)((char *)v11 + v21);
      v24 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v22 = *v23;
        v26 = *(int *)(v24 + 20);
        __dst = &v22[v26];
        v27 = (_QWORD *)((char *)v23 + v26);
        v28 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)__dst = *v27;
          if (EnumCaseMultiPayload == 1)
          {
            v31 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v37 = &__dst[v31];
            v32 = (char *)v27 + v31;
            swift_bridgeObjectRetain();
            v8(v37, v32, v7);
          }
          else
          {
            *((_QWORD *)__dst + 1) = v27[1];
            v33 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v36 = &__dst[v33];
            v34 = (char *)v27 + v33;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v8(v36, v34, v7);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        v8(&v22[*(int *)(v24 + 24)], (char *)v23 + *(int *)(v24 + 24), v7);
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t _s10ActivationO30ParameterizedReluConfigurationVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t);

  v2 = sub_240F1C930();
  v13 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v13(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
  v4 = type metadata accessor for Proto_WeightParams(0);
  result = __swift_getEnumTagSinglePayload(v3, 1, v4);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    sub_240BF6AE0(*(_QWORD *)(v3 + 8), *(_QWORD *)(v3 + 16));
    sub_240BF6AE0(*(_QWORD *)(v3 + 24), *(_QWORD *)(v3 + 32));
    sub_240BF6AE0(*(_QWORD *)(v3 + 40), *(_QWORD *)(v3 + 48));
    v13(v3 + *(int *)(v4 + 36), v2);
    v6 = v3 + *(int *)(v4 + 40);
    v7 = type metadata accessor for Proto_QuantizationParams(0);
    result = __swift_getEnumTagSinglePayload(v6, 1, v7);
    if (!(_DWORD)result)
    {
      v8 = v6 + *(int *)(v7 + 20);
      v9 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
        {
          v11 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v12 = 5;
        }
        else
        {
          swift_bridgeObjectRelease();
          v11 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v12 = 6;
        }
        v13(v8 + *(int *)(v11 + 4 * v12), v2);
      }
      return ((uint64_t (*)(uint64_t, uint64_t))v13)(v6 + *(int *)(v7 + 24), v2);
    }
  }
  return result;
}

uint64_t _s10ActivationO30ParameterizedReluConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  int EnumCaseMultiPayload;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  char *v30;
  char *v32;
  char *v33;
  _QWORD *__dst;

  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Proto_WeightParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    v11 = v8[1];
    *v7 = *v8;
    v12 = v8[2];
    swift_bridgeObjectRetain();
    sub_240BF5610(v11, v12);
    v7[1] = v11;
    v7[2] = v12;
    v13 = v8[3];
    v14 = v8[4];
    sub_240BF5610(v13, v14);
    v7[3] = v13;
    v7[4] = v14;
    v15 = v8[5];
    v16 = v8[6];
    sub_240BF5610(v15, v16);
    v7[5] = v15;
    v7[6] = v16;
    *((_BYTE *)v7 + 56) = *((_BYTE *)v8 + 56);
    v5((uint64_t)v7 + *(int *)(v9 + 36), (uint64_t)v8 + *(int *)(v9 + 36), v4);
    v17 = *(int *)(v9 + 40);
    v18 = (_QWORD *)((char *)v7 + v17);
    v19 = (_QWORD *)((char *)v8 + v17);
    v20 = type metadata accessor for Proto_QuantizationParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v20))
    {
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      *v18 = *v19;
      v22 = *(int *)(v20 + 20);
      __dst = (_QWORD *)((char *)v18 + v22);
      v23 = (_QWORD *)((char *)v19 + v22);
      v24 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
        memcpy(__dst, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *__dst = *v23;
        if (EnumCaseMultiPayload == 1)
        {
          v27 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          v33 = (char *)__dst + v27;
          v28 = (char *)v23 + v27;
          swift_bridgeObjectRetain();
          v5((uint64_t)v33, (uint64_t)v28, v4);
        }
        else
        {
          __dst[1] = v23[1];
          v29 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          v32 = (char *)__dst + v29;
          v30 = (char *)v23 + v29;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v5((uint64_t)v32, (uint64_t)v30, v4);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v24);
      }
      v5((uint64_t)v18 + *(int *)(v20 + 24), (uint64_t)v19 + *(int *)(v20 + 24), v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v20);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

uint64_t _s10ActivationO30ParameterizedReluConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  size_t v25;
  void *v26;
  const void *v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int EnumCaseMultiPayload;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  uint64_t v60;
  int v61;
  size_t v62;
  void *v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v69;
  uint64_t v70;
  char *v71;
  void (*v72)(char *, char *, uint64_t);
  char *v73;
  uint64_t v74;
  char *v75;
  int v76;
  uint64_t v77;
  char *v78;
  void (*v79)(char *, char *, uint64_t);
  int v80;
  uint64_t v81;
  char *v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  char *v89;
  char *v90;
  char *v91;
  uint64_t v92;
  char *v93;
  char *__srca;
  _QWORD *__src;
  char *__srcb;
  char *__srcc;
  _QWORD *v98;
  char *v99;
  _QWORD *__dst;
  char *__dsta;
  char *__dstb;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  v7 = *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Proto_WeightParams(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload(v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      v13 = *(_QWORD *)(v9 + 8);
      v14 = *(_QWORD *)(v9 + 16);
      swift_bridgeObjectRetain();
      sub_240BF5610(v13, v14);
      *(_QWORD *)(v8 + 8) = v13;
      *(_QWORD *)(v8 + 16) = v14;
      v15 = *(_QWORD *)(v9 + 24);
      v16 = *(_QWORD *)(v9 + 32);
      sub_240BF5610(v15, v16);
      *(_QWORD *)(v8 + 24) = v15;
      *(_QWORD *)(v8 + 32) = v16;
      v17 = *(_QWORD *)(v9 + 40);
      v18 = *(_QWORD *)(v9 + 48);
      sub_240BF5610(v17, v18);
      *(_QWORD *)(v8 + 40) = v17;
      *(_QWORD *)(v8 + 48) = v18;
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      v19(v8 + *(int *)(v10 + 36), v9 + *(int *)(v10 + 36), v4);
      v20 = *(int *)(v10 + 40);
      v21 = (_QWORD *)(v8 + v20);
      v22 = (_QWORD *)(v9 + v20);
      v23 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
      {
        v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
      }
      else
      {
        *v21 = *v22;
        v50 = *(int *)(v23 + 20);
        __dst = (_QWORD *)((char *)v21 + v50);
        v51 = (_QWORD *)((char *)v22 + v50);
        v52 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
        {
          v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(__dst, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *__dst = *v51;
          if (EnumCaseMultiPayload == 1)
          {
            v55 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            __srca = (char *)__dst + v55;
            v56 = (char *)v51 + v55;
            swift_bridgeObjectRetain();
            v19((uint64_t)__srca, (uint64_t)v56, v4);
          }
          else
          {
            __dst[1] = v51[1];
            v64 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v93 = (char *)__dst + v64;
            v65 = (char *)v51 + v64;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v19((uint64_t)v93, (uint64_t)v65, v4);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v52);
        }
        v19((uint64_t)v21 + *(int *)(v23 + 24), (uint64_t)v22 + *(int *)(v23 + 24), v4);
        __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
      }
      v66 = v8;
      v67 = v10;
      goto LABEL_27;
    }
    goto LABEL_7;
  }
  if (!v12)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v9 + 8);
    v29 = *(_QWORD *)(v9 + 16);
    sub_240BF5610(v28, v29);
    v30 = *(_QWORD *)(v8 + 8);
    v31 = *(_QWORD *)(v8 + 16);
    *(_QWORD *)(v8 + 8) = v28;
    *(_QWORD *)(v8 + 16) = v29;
    sub_240BF6AE0(v30, v31);
    v32 = *(_QWORD *)(v9 + 24);
    v33 = *(_QWORD *)(v9 + 32);
    sub_240BF5610(v32, v33);
    v34 = *(_QWORD *)(v8 + 24);
    v35 = *(_QWORD *)(v8 + 32);
    *(_QWORD *)(v8 + 24) = v32;
    *(_QWORD *)(v8 + 32) = v33;
    sub_240BF6AE0(v34, v35);
    v36 = *(_QWORD *)(v9 + 40);
    v37 = *(_QWORD *)(v9 + 48);
    sub_240BF5610(v36, v37);
    v38 = *(_QWORD *)(v8 + 40);
    v39 = *(_QWORD *)(v8 + 48);
    *(_QWORD *)(v8 + 40) = v36;
    *(_QWORD *)(v8 + 48) = v37;
    sub_240BF6AE0(v38, v39);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    v6(v8 + *(int *)(v10 + 36), v9 + *(int *)(v10 + 36), v4);
    v40 = *(int *)(v10 + 40);
    v41 = (char *)(v8 + v40);
    v42 = (char *)(v9 + v40);
    v43 = type metadata accessor for Proto_QuantizationParams(0);
    LODWORD(v36) = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v43);
    v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43);
    if ((_DWORD)v36)
    {
      if (!v44)
      {
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v45 = *(int *)(v43 + 20);
        v46 = &v41[v45];
        v47 = &v42[v45];
        v48 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48))
        {
          v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v49 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v41[*(int *)(v43 + 24)], &v42[*(int *)(v43 + 24)], v4);
        }
        else
        {
          v69 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v46 = *(_QWORD *)v47;
          if (v69 == 1)
          {
            v70 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            __dstb = &v46[v70];
            v71 = &v47[v70];
            v72 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
            swift_bridgeObjectRetain();
            v72(__dstb, v71, v4);
          }
          else
          {
            *((_QWORD *)v46 + 1) = *((_QWORD *)v47 + 1);
            v74 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v99 = &v46[v74];
            v75 = &v47[v74];
            v72 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v72(v99, v75, v4);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
          v72(&v41[*(int *)(v43 + 24)], &v42[*(int *)(v43 + 24)], v4);
        }
        v66 = (uint64_t)v41;
        v67 = v43;
LABEL_27:
        __swift_storeEnumTagSinglePayload(v66, 0, 1, v67);
        return a1;
      }
      goto LABEL_17;
    }
    if (v44)
    {
      sub_240BE10B8((uint64_t)v41, type metadata accessor for Proto_QuantizationParams);
LABEL_17:
      v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8) - 8) + 64);
      v26 = v41;
      v27 = v42;
      goto LABEL_8;
    }
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v57 = *(int *)(v43 + 20);
    v58 = (uint64_t)&v41[v57];
    __dsta = v42;
    v59 = &v42[v57];
    v60 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    v98 = (_QWORD *)v58;
    LODWORD(v58) = __swift_getEnumTagSinglePayload(v58, 1, v60);
    v92 = v60;
    __src = v59;
    v61 = __swift_getEnumTagSinglePayload((uint64_t)v59, 1, v60);
    if ((_DWORD)v58)
    {
      if (!v61)
      {
        v76 = swift_getEnumCaseMultiPayload();
        v73 = __dsta;
        *v98 = *__src;
        if (v76 == 1)
        {
          v77 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          v89 = (char *)v98 + v77;
          v78 = (char *)__src + v77;
          v79 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
          swift_bridgeObjectRetain();
          v79(v89, v78, v4);
        }
        else
        {
          v98[1] = __src[1];
          v84 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          v90 = (char *)v98 + v84;
          v85 = (char *)__src + v84;
          v86 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v86(v90, v85, v4);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v98, 0, 1, v92);
        goto LABEL_46;
      }
      v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
      v63 = v98;
    }
    else
    {
      if (!v61)
      {
        v73 = __dsta;
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v98, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
          v80 = swift_getEnumCaseMultiPayload();
          *v98 = *__src;
          if (v80 == 1)
          {
            v81 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v82 = (char *)v98 + v81;
            __srcb = (char *)__src + v81;
            v83 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
            swift_bridgeObjectRetain();
            v83(v82, __srcb, v4);
          }
          else
          {
            v98[1] = __src[1];
            v87 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v91 = (char *)v98 + v87;
            __srcc = (char *)__src + v87;
            v73 = __dsta;
            v88 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v88(v91, __srcc, v4);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_46;
      }
      sub_240BE10B8((uint64_t)v98, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
      v62 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
      v63 = v98;
    }
    memcpy(v63, v59, v62);
    v73 = __dsta;
LABEL_46:
    v6((uint64_t)&v41[*(int *)(v43 + 24)], (uint64_t)&v73[*(int *)(v43 + 24)], v4);
    return a1;
  }
  sub_240BE10B8(v8, type metadata accessor for Proto_WeightParams);
LABEL_7:
  v25 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0) - 8) + 64);
  v26 = (void *)v8;
  v27 = (const void *)v9;
LABEL_8:
  memcpy(v26, v27, v25);
  return a1;
}

char *_s10ActivationO30ParameterizedReluConfigurationVwtk(char *a1, char *a2)
{
  uint64_t v4;
  void (*v5)(char *, char *, uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  int EnumCaseMultiPayload;
  uint64_t v21;
  uint64_t v22;
  char *__dst;

  v4 = sub_240F1C930();
  v5 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Proto_WeightParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)v8;
    *(_OWORD *)(v7 + 8) = *(_OWORD *)(v8 + 8);
    *(_OWORD *)(v7 + 24) = *(_OWORD *)(v8 + 24);
    *(_OWORD *)(v7 + 40) = *(_OWORD *)(v8 + 40);
    v7[56] = v8[56];
    v5(&v7[*(int *)(v9 + 36)], &v8[*(int *)(v9 + 36)], v4);
    v11 = *(int *)(v9 + 40);
    v12 = &v7[v11];
    v13 = &v8[v11];
    v14 = type metadata accessor for Proto_QuantizationParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v16 = *(int *)(v14 + 20);
      __dst = &v12[v16];
      v17 = &v13[v16];
      v18 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
      {
        v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
        memcpy(__dst, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *(_QWORD *)__dst = *(_QWORD *)v17;
        if (EnumCaseMultiPayload == 1)
        {
          v21 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v22 = 5;
        }
        else
        {
          *((_QWORD *)__dst + 1) = *((_QWORD *)v17 + 1);
          v21 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v22 = 6;
        }
        v5(&__dst[*(int *)(v21 + 4 * v22)], &v17[*(int *)(v21 + 4 * v22)], v4);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v18);
      }
      v5(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

uint64_t _s10ActivationO30ParameterizedReluConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  size_t v19;
  void *v20;
  const void *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  int EnumCaseMultiPayload;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  int v50;
  size_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  int v56;
  uint64_t v57;
  char *v58;
  void (*v59)(char *, char *, uint64_t);
  char *v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  char *__src;
  char *v68;
  _QWORD *__dst;
  char *__dsta;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  v7 = *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = type metadata accessor for Proto_WeightParams(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload(v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
      *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
      *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
      *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
      v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
      v13(v8 + *(int *)(v10 + 36), v9 + *(int *)(v10 + 36), v4);
      v14 = *(int *)(v10 + 40);
      v15 = (_QWORD *)(v8 + v14);
      v16 = (_QWORD *)(v9 + v14);
      v17 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
      {
        v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
      }
      else
      {
        *v15 = *v16;
        v39 = *(int *)(v17 + 20);
        __dst = (_QWORD *)((char *)v15 + v39);
        v40 = (_QWORD *)((char *)v16 + v39);
        v41 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
        {
          v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(__dst, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *__dst = *v40;
          if (EnumCaseMultiPayload == 1)
          {
            v44 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
            v45 = 5;
          }
          else
          {
            __dst[1] = v40[1];
            v44 = type metadata accessor for Proto_LinearQuantizationParams(0);
            v45 = 6;
          }
          v13((uint64_t)__dst + *(int *)(v44 + 4 * v45), (uint64_t)v40 + *(int *)(v44 + 4 * v45), v4);
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v41);
        }
        v13((uint64_t)v15 + *(int *)(v17 + 24), (uint64_t)v16 + *(int *)(v17 + 24), v4);
        __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
      }
      v53 = v8;
      v54 = v10;
      goto LABEL_27;
    }
    goto LABEL_7;
  }
  if (!v12)
  {
    *(_QWORD *)v8 = *(_QWORD *)v9;
    swift_bridgeObjectRelease();
    v22 = *(_QWORD *)(v8 + 8);
    v23 = *(_QWORD *)(v8 + 16);
    *(_OWORD *)(v8 + 8) = *(_OWORD *)(v9 + 8);
    sub_240BF6AE0(v22, v23);
    v24 = *(_QWORD *)(v8 + 24);
    v25 = *(_QWORD *)(v8 + 32);
    *(_OWORD *)(v8 + 24) = *(_OWORD *)(v9 + 24);
    sub_240BF6AE0(v24, v25);
    v26 = *(_QWORD *)(v8 + 40);
    v27 = *(_QWORD *)(v8 + 48);
    *(_OWORD *)(v8 + 40) = *(_OWORD *)(v9 + 40);
    sub_240BF6AE0(v26, v27);
    *(_BYTE *)(v8 + 56) = *(_BYTE *)(v9 + 56);
    v6(v8 + *(int *)(v10 + 36), v9 + *(int *)(v10 + 36), v4);
    v28 = *(int *)(v10 + 40);
    v29 = (char *)(v8 + v28);
    v30 = (char *)(v9 + v28);
    v31 = type metadata accessor for Proto_QuantizationParams(0);
    v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v31);
    v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v31);
    if (v32)
    {
      if (!v33)
      {
        *(_QWORD *)v29 = *(_QWORD *)v30;
        v34 = *(int *)(v31 + 20);
        v35 = &v29[v34];
        v36 = &v30[v34];
        v37 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
        {
          v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v29[*(int *)(v31 + 24)], &v30[*(int *)(v31 + 24)], v4);
        }
        else
        {
          v56 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v35 = *(_QWORD *)v36;
          if (v56 == 1)
          {
            v57 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          }
          else
          {
            *((_QWORD *)v35 + 1) = *((_QWORD *)v36 + 1);
            v57 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          }
          v58 = &v36[v57];
          v59 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
          v59(&v35[v57], v58, v4);
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
          v59(&v29[*(int *)(v31 + 24)], &v30[*(int *)(v31 + 24)], v4);
        }
        v53 = (uint64_t)v29;
        v54 = v31;
LABEL_27:
        __swift_storeEnumTagSinglePayload(v53, 0, 1, v54);
        return a1;
      }
      goto LABEL_17;
    }
    if (v33)
    {
      sub_240BE10B8((uint64_t)v29, type metadata accessor for Proto_QuantizationParams);
LABEL_17:
      v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8) - 8) + 64);
      v20 = v29;
      v21 = v30;
      goto LABEL_8;
    }
    *(_QWORD *)v29 = *(_QWORD *)v30;
    v46 = *(int *)(v31 + 20);
    v47 = (uint64_t)&v29[v46];
    __dsta = v30;
    v48 = &v30[v46];
    v49 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    v68 = (char *)v47;
    LODWORD(v47) = __swift_getEnumTagSinglePayload(v47, 1, v49);
    __src = v48;
    v50 = __swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49);
    if ((_DWORD)v47)
    {
      if (!v50)
      {
        v61 = swift_getEnumCaseMultiPayload();
        v60 = __dsta;
        *(_QWORD *)v68 = *(_QWORD *)__src;
        if (v61 == 1)
        {
          v62 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v63 = 5;
        }
        else
        {
          *((_QWORD *)v68 + 1) = *((_QWORD *)__src + 1);
          v62 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v63 = 6;
        }
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v68[*(int *)(v62 + 4 * v63)], &__src[*(int *)(v62 + 4 * v63)], v4);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v68, 0, 1, v49);
        goto LABEL_46;
      }
      v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
      v52 = v68;
    }
    else
    {
      if (!v50)
      {
        v60 = __dsta;
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v68, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
          v64 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v68 = *(_QWORD *)__src;
          if (v64 == 1)
          {
            v65 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
            (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v68[*(int *)(v65 + 20)], &__src[*(int *)(v65 + 20)], v4);
          }
          else
          {
            *((_QWORD *)v68 + 1) = *((_QWORD *)__src + 1);
            v66 = type metadata accessor for Proto_LinearQuantizationParams(0);
            (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v68[*(int *)(v66 + 24)], &__src[*(int *)(v66 + 24)], v4);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_46;
      }
      sub_240BE10B8((uint64_t)v68, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
      v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
      v52 = v68;
    }
    memcpy(v52, v48, v51);
    v60 = __dsta;
LABEL_46:
    v6((uint64_t)&v29[*(int *)(v31 + 24)], (uint64_t)&v60[*(int *)(v31 + 24)], v4);
    return a1;
  }
  sub_240BE10B8(v8, type metadata accessor for Proto_WeightParams);
LABEL_7:
  v19 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0) - 8) + 64);
  v20 = (void *)v8;
  v21 = (const void *)v9;
LABEL_8:
  memcpy(v20, v21, v19);
  return a1;
}

uint64_t _s10ActivationO30ParameterizedReluConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE3200()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_84_6();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO30ParameterizedReluConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE3230()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_84_6();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE3254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationPReLU);
}

void _s10ActivationO16ELUConfigurationVwCP(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE3310(a1, a2, a3, type metadata accessor for Proto_ActivationELU);
}

uint64_t _s10ActivationO16ELUConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C34218(a1, a2, type metadata accessor for Proto_ActivationELU);
}

void _s10ActivationO16ELUConfigurationVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C3424C(a1, a2, a3, type metadata accessor for Proto_ActivationELU);
}

void _s10ActivationO16ELUConfigurationVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C342A8(a1, a2, a3, type metadata accessor for Proto_ActivationELU);
}

void _s10ActivationO16ELUConfigurationVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34304(a1, a2, a3, type metadata accessor for Proto_ActivationELU);
}

void _s10ActivationO16ELUConfigurationVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34360(a1, a2, a3, type metadata accessor for Proto_ActivationELU);
}

uint64_t _s10ActivationO16ELUConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE32B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_99_1();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO16ELUConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE32DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_99_1();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE32F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationELU);
}

void _s10ActivationO28ThresholdedReluConfigurationVwCP(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240CE3310(a1, a2, a3, type metadata accessor for Proto_ActivationThresholdedReLU);
}

void sub_240CE3310(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;

  if ((*(_DWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4) - 8) + 80) & 0x20000) != 0)
  {
    OUTLINED_FUNCTION_52_11();
  }
  else
  {
    *a1 = *a2;
    v6 = OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_58_7(v6);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s10ActivationO28ThresholdedReluConfigurationVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C34218(a1, a2, type metadata accessor for Proto_ActivationThresholdedReLU);
}

void _s10ActivationO28ThresholdedReluConfigurationVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C3424C(a1, a2, a3, type metadata accessor for Proto_ActivationThresholdedReLU);
}

void _s10ActivationO28ThresholdedReluConfigurationVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C342A8(a1, a2, a3, type metadata accessor for Proto_ActivationThresholdedReLU);
}

void _s10ActivationO28ThresholdedReluConfigurationVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34304(a1, a2, a3, type metadata accessor for Proto_ActivationThresholdedReLU);
}

void _s10ActivationO28ThresholdedReluConfigurationVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34360(a1, a2, a3, type metadata accessor for Proto_ActivationThresholdedReLU);
}

uint64_t _s10ActivationO28ThresholdedReluConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE33B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_95_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO28ThresholdedReluConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE33D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_95_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE33F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationThresholdedReLU);
}

uint64_t _s10ActivationO21SoftsignConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE340C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_92_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO21SoftsignConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE3434()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_92_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

void _s10ActivationO17ReluConfigurationVwca_0(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_10(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  OUTLINED_FUNCTION_44();
}

void _s10ActivationO17ReluConfigurationVwta_0(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_10(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_44();
}

uint64_t _s10ActivationO21SoftplusConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE34CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_94_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO21SoftplusConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE34F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_94_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t *_s10ActivationO31ParametricSoftplusConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  int EnumCaseMultiPayload;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  _QWORD *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  char *v59;
  char *v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  char *v66;
  char *v67;
  char *v68;
  uint64_t v69;
  char *v70;
  _QWORD *__dst;
  void (*v72)(uint64_t *, uint64_t *, uint64_t);
  void (*v73)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(v6 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for Proto_WeightParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v16 = v11[2];
      swift_bridgeObjectRetain();
      sub_240BF5610(v15, v16);
      v10[1] = v15;
      v10[2] = v16;
      v17 = v11[3];
      v18 = v11[4];
      sub_240BF5610(v17, v18);
      v10[3] = v17;
      v10[4] = v18;
      v19 = v11[5];
      v20 = v11[6];
      sub_240BF5610(v19, v20);
      v10[5] = v19;
      v10[6] = v20;
      *((_BYTE *)v10 + 56) = *((_BYTE *)v11 + 56);
      v8((_QWORD *)((char *)v10 + *(int *)(v12 + 36)), (_QWORD *)((char *)v11 + *(int *)(v12 + 36)), v7);
      v21 = *(int *)(v12 + 40);
      v22 = (_QWORD *)((char *)v10 + v21);
      v23 = (_QWORD *)((char *)v11 + v21);
      v24 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
      {
        v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
      }
      else
      {
        *v22 = *v23;
        v26 = *(int *)(v24 + 20);
        v69 = (uint64_t)v22;
        __dst = (_QWORD *)((char *)v22 + v26);
        v72 = v8;
        v27 = (_QWORD *)((char *)v23 + v26);
        v28 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
        {
          v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(__dst, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
          v8 = v72;
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *__dst = *v27;
          if (EnumCaseMultiPayload == 1)
          {
            v31 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v67 = (char *)__dst + v31;
            v32 = (char *)v27 + v31;
            swift_bridgeObjectRetain();
            v33 = v32;
            v8 = v72;
            v72((uint64_t *)v67, (uint64_t *)v33, v7);
          }
          else
          {
            __dst[1] = v27[1];
            v34 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v66 = (char *)__dst + v34;
            v35 = (char *)v27 + v34;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v36 = v35;
            v8 = v72;
            v72((uint64_t *)v66, (uint64_t *)v36, v7);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v28);
        }
        v8((uint64_t *)(v69 + *(int *)(v24 + 24)), (_QWORD *)((char *)v23 + *(int *)(v24 + 24)), v7);
        __swift_storeEnumTagSinglePayload(v69, 0, 1, v24);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
    v37 = *(int *)(v6 + 24);
    v38 = (uint64_t *)((char *)a1 + v37);
    v39 = (uint64_t *)((char *)a2 + v37);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2 + v37, 1, v12))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
      memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    }
    else
    {
      v41 = v39[1];
      *v38 = *v39;
      v42 = v39[2];
      swift_bridgeObjectRetain();
      sub_240BF5610(v41, v42);
      v38[1] = v41;
      v38[2] = v42;
      v43 = v39[3];
      v44 = v39[4];
      sub_240BF5610(v43, v44);
      v38[3] = v43;
      v38[4] = v44;
      v45 = v39[5];
      v46 = v39[6];
      sub_240BF5610(v45, v46);
      v38[5] = v45;
      v38[6] = v46;
      *((_BYTE *)v38 + 56) = *((_BYTE *)v39 + 56);
      v8((_QWORD *)((char *)v38 + *(int *)(v12 + 36)), (_QWORD *)((char *)v39 + *(int *)(v12 + 36)), v7);
      v47 = *(int *)(v12 + 40);
      v48 = (_QWORD *)((char *)v38 + v47);
      v49 = (_QWORD *)((char *)v39 + v47);
      v50 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v49, 1, v50))
      {
        v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v48, v49, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
      }
      else
      {
        v73 = (void (*)(char *, char *, uint64_t))v8;
        *v48 = *v49;
        v52 = *(int *)(v50 + 20);
        v53 = (_QWORD *)((char *)v48 + v52);
        v54 = (_QWORD *)((char *)v49 + v52);
        v55 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v54, 1, v55))
        {
          v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
          v73((char *)v48 + *(int *)(v50 + 24), (char *)v49 + *(int *)(v50 + 24), v7);
        }
        else
        {
          v57 = swift_getEnumCaseMultiPayload();
          *v53 = *v54;
          if (v57 == 1)
          {
            v58 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v70 = (char *)v53 + v58;
            v59 = (char *)v54 + v58;
            swift_bridgeObjectRetain();
            v60 = v59;
            v61 = v73;
            v73(v70, v60, v7);
          }
          else
          {
            v53[1] = v54[1];
            v62 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v68 = (char *)v53 + v62;
            v63 = (char *)v54 + v62;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v64 = v63;
            v61 = v73;
            v73(v68, v64, v7);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v53, 0, 1, v55);
          v61((char *)v48 + *(int *)(v50 + 24), (char *)v49 + *(int *)(v50 + 24), v7);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v48, 0, 1, v50);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);

  v2 = sub_240F1C930();
  v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v22(a1, v2);
  v3 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = type metadata accessor for Proto_WeightParams(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    swift_bridgeObjectRelease();
    sub_240BF6AE0(*(_QWORD *)(v4 + 8), *(_QWORD *)(v4 + 16));
    sub_240BF6AE0(*(_QWORD *)(v4 + 24), *(_QWORD *)(v4 + 32));
    sub_240BF6AE0(*(_QWORD *)(v4 + 40), *(_QWORD *)(v4 + 48));
    v22(v4 + *(int *)(v5 + 36), v2);
    v6 = v4 + *(int *)(v5 + 40);
    v7 = type metadata accessor for Proto_QuantizationParams(0);
    if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
    {
      v8 = v6 + *(int *)(v7 + 20);
      v9 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (!__swift_getEnumTagSinglePayload(v8, 1, v9))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
        {
          v11 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v12 = 5;
        }
        else
        {
          swift_bridgeObjectRelease();
          v11 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v12 = 6;
        }
        v22(v8 + *(int *)(v11 + 4 * v12), v2);
      }
      v22(v6 + *(int *)(v7 + 24), v2);
    }
  }
  v13 = a1 + *(int *)(v3 + 24);
  result = __swift_getEnumTagSinglePayload(v13, 1, v5);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    sub_240BF6AE0(*(_QWORD *)(v13 + 8), *(_QWORD *)(v13 + 16));
    sub_240BF6AE0(*(_QWORD *)(v13 + 24), *(_QWORD *)(v13 + 32));
    sub_240BF6AE0(*(_QWORD *)(v13 + 40), *(_QWORD *)(v13 + 48));
    v22(v13 + *(int *)(v5 + 36), v2);
    v15 = v13 + *(int *)(v5 + 40);
    v16 = type metadata accessor for Proto_QuantizationParams(0);
    result = __swift_getEnumTagSinglePayload(v15, 1, v16);
    if (!(_DWORD)result)
    {
      v17 = v15 + *(int *)(v16 + 20);
      v18 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (!__swift_getEnumTagSinglePayload(v17, 1, v18))
      {
        v19 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v19 == 1)
        {
          v20 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v21 = 5;
        }
        else
        {
          swift_bridgeObjectRelease();
          v20 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v21 = 6;
        }
        v22(v17 + *(int *)(v20 + 4 * v21), v2);
      }
      return ((uint64_t (*)(uint64_t, uint64_t))v22)(v15 + *(int *)(v16 + 24), v2);
    }
  }
  return result;
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  int EnumCaseMultiPayload;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  _QWORD *v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _QWORD *v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  char *v56;
  char *v57;
  void (*v58)(char *, char *, uint64_t);
  uint64_t v59;
  char *v60;
  char *v61;
  char *v63;
  char *v64;
  char *v65;
  uint64_t v66;
  char *v67;
  _QWORD *__dst;
  void (*v69)(uint64_t, uint64_t, uint64_t);
  void (*v70)(char *, char *, uint64_t);

  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
  v7 = *(int *)(v6 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_WeightParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v12 = v9[1];
    *v8 = *v9;
    v13 = v9[2];
    swift_bridgeObjectRetain();
    sub_240BF5610(v12, v13);
    v8[1] = v12;
    v8[2] = v13;
    v14 = v9[3];
    v15 = v9[4];
    sub_240BF5610(v14, v15);
    v8[3] = v14;
    v8[4] = v15;
    v16 = v9[5];
    v17 = v9[6];
    sub_240BF5610(v16, v17);
    v8[5] = v16;
    v8[6] = v17;
    *((_BYTE *)v8 + 56) = *((_BYTE *)v9 + 56);
    v5((uint64_t)v8 + *(int *)(v10 + 36), (uint64_t)v9 + *(int *)(v10 + 36), v4);
    v18 = *(int *)(v10 + 40);
    v19 = (_QWORD *)((char *)v8 + v18);
    v20 = (_QWORD *)((char *)v9 + v18);
    v21 = type metadata accessor for Proto_QuantizationParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *v19 = *v20;
      v23 = *(int *)(v21 + 20);
      v66 = (uint64_t)v19;
      __dst = (_QWORD *)((char *)v19 + v23);
      v69 = v5;
      v24 = (_QWORD *)((char *)v20 + v23);
      v25 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
        memcpy(__dst, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
        v5 = v69;
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *__dst = *v24;
        if (EnumCaseMultiPayload == 1)
        {
          v28 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          v64 = (char *)__dst + v28;
          v29 = (char *)v24 + v28;
          swift_bridgeObjectRetain();
          v30 = v29;
          v5 = v69;
          v69((uint64_t)v64, (uint64_t)v30, v4);
        }
        else
        {
          __dst[1] = v24[1];
          v31 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          v63 = (char *)__dst + v31;
          v32 = (char *)v24 + v31;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v33 = v32;
          v5 = v69;
          v69((uint64_t)v63, (uint64_t)v33, v4);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v25);
      }
      v5(v66 + *(int *)(v21 + 24), (uint64_t)v20 + *(int *)(v21 + 24), v4);
      __swift_storeEnumTagSinglePayload(v66, 0, 1, v21);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v34 = *(int *)(v6 + 24);
  v35 = (_QWORD *)(a1 + v34);
  v36 = (_QWORD *)(a2 + v34);
  if (__swift_getEnumTagSinglePayload(a2 + v34, 1, v10))
  {
    v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v37 - 8) + 64));
  }
  else
  {
    v38 = v36[1];
    *v35 = *v36;
    v39 = v36[2];
    swift_bridgeObjectRetain();
    sub_240BF5610(v38, v39);
    v35[1] = v38;
    v35[2] = v39;
    v40 = v36[3];
    v41 = v36[4];
    sub_240BF5610(v40, v41);
    v35[3] = v40;
    v35[4] = v41;
    v42 = v36[5];
    v43 = v36[6];
    sub_240BF5610(v42, v43);
    v35[5] = v42;
    v35[6] = v43;
    *((_BYTE *)v35 + 56) = *((_BYTE *)v36 + 56);
    v5((uint64_t)v35 + *(int *)(v10 + 36), (uint64_t)v36 + *(int *)(v10 + 36), v4);
    v44 = *(int *)(v10 + 40);
    v45 = (_QWORD *)((char *)v35 + v44);
    v46 = (_QWORD *)((char *)v36 + v44);
    v47 = type metadata accessor for Proto_QuantizationParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
    {
      v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
    }
    else
    {
      v70 = (void (*)(char *, char *, uint64_t))v5;
      *v45 = *v46;
      v49 = *(int *)(v47 + 20);
      v50 = (_QWORD *)((char *)v45 + v49);
      v51 = (_QWORD *)((char *)v46 + v49);
      v52 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
      {
        v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
        memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
        v70((char *)v45 + *(int *)(v47 + 24), (char *)v46 + *(int *)(v47 + 24), v4);
      }
      else
      {
        v54 = swift_getEnumCaseMultiPayload();
        *v50 = *v51;
        if (v54 == 1)
        {
          v55 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          v67 = (char *)v50 + v55;
          v56 = (char *)v51 + v55;
          swift_bridgeObjectRetain();
          v57 = v56;
          v58 = v70;
          v70(v67, v57, v4);
        }
        else
        {
          v50[1] = v51[1];
          v59 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          v65 = (char *)v50 + v59;
          v60 = (char *)v51 + v59;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v61 = v60;
          v58 = v70;
          v70(v65, v61, v4);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
        v58((char *)v45 + *(int *)(v47 + 24), (char *)v46 + *(int *)(v47 + 24), v4);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v45, 0, 1, v47);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v10);
  }
  return a1;
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  unint64_t v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  uint64_t v62;
  int v63;
  size_t v64;
  void *v65;
  uint64_t v66;
  char *v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  int v73;
  int v74;
  uint64_t v75;
  unint64_t v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void (*v81)(uint64_t, uint64_t, uint64_t);
  uint64_t v82;
  _QWORD *v83;
  _QWORD *v84;
  uint64_t v85;
  uint64_t v86;
  size_t v87;
  void *v88;
  const void *v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  unint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  unint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  int v106;
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  _QWORD *v113;
  _QWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  int v118;
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  uint64_t v123;
  char *v124;
  char *v125;
  uint64_t v126;
  int v127;
  int v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  int EnumCaseMultiPayload;
  uint64_t v137;
  int v138;
  uint64_t v139;
  char *v140;
  char *v141;
  void (*v142)(char *, char *, uint64_t);
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  int v150;
  uint64_t v151;
  char *v152;
  char *v153;
  int v154;
  uint64_t v155;
  char *v156;
  char *v157;
  void (*v158)(char *, char *, uint64_t);
  char *v159;
  int v160;
  uint64_t v161;
  char *v162;
  char *v163;
  char *v164;
  int v165;
  uint64_t v166;
  char *v167;
  char *v168;
  void (*v169)(char *, char *, uint64_t);
  char *v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  char *v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  char *v177;
  uint64_t v178;
  char *v179;
  void (*v180)(char *, char *, uint64_t);
  char *v181;
  char *v182;
  char *v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;
  char *__dst;
  _QWORD *__dsta;
  char *__dstb;
  void (*__dstc)(char *, char *, uint64_t);
  void (*__dstd)(char *, char *, uint64_t);
  void (*__dste)(char *, char *, uint64_t);
  char *__dstf;
  void (*__dstg)(char *, char *, uint64_t);
  char *__dsth;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  void (*v204)(uint64_t, uint64_t, uint64_t);
  void (*v205)(uint64_t, uint64_t, uint64_t);
  void (*v206)(uint64_t, uint64_t, uint64_t);
  void (*v207)(char *, char *, uint64_t);
  char *v208;
  uint64_t v209;
  uint64_t v210;
  char *v211;
  uint64_t v212;
  uint64_t v213;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  v7 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
  v8 = *(int *)(v7 + 20);
  v213 = a1;
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Proto_WeightParams(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload(v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      sub_240BE10B8(v9, type metadata accessor for Proto_WeightParams);
      goto LABEL_7;
    }
    v210 = v5;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v28 = *(_QWORD *)(v10 + 8);
    v29 = *(_QWORD *)(v10 + 16);
    sub_240BF5610(v28, v29);
    v30 = *(_QWORD *)(v9 + 8);
    v31 = *(_QWORD *)(v9 + 16);
    *(_QWORD *)(v9 + 8) = v28;
    *(_QWORD *)(v9 + 16) = v29;
    sub_240BF6AE0(v30, v31);
    v32 = *(_QWORD *)(v10 + 24);
    v33 = *(_QWORD *)(v10 + 32);
    sub_240BF5610(v32, v33);
    v34 = *(_QWORD *)(v9 + 24);
    v35 = *(_QWORD *)(v9 + 32);
    *(_QWORD *)(v9 + 24) = v32;
    *(_QWORD *)(v9 + 32) = v33;
    sub_240BF6AE0(v34, v35);
    v36 = *(_QWORD *)(v10 + 40);
    v37 = *(_QWORD *)(v10 + 48);
    sub_240BF5610(v36, v37);
    v38 = *(_QWORD *)(v9 + 40);
    v39 = *(_QWORD *)(v9 + 48);
    *(_QWORD *)(v9 + 40) = v36;
    *(_QWORD *)(v9 + 48) = v37;
    sub_240BF6AE0(v38, v39);
    *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
    v6(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v4);
    v40 = *(int *)(v11 + 40);
    v41 = (char *)(v9 + v40);
    v42 = (char *)(v10 + v40);
    v43 = type metadata accessor for Proto_QuantizationParams(0);
    LODWORD(v37) = __swift_getEnumTagSinglePayload((uint64_t)v41, 1, v43);
    v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v43);
    if ((_DWORD)v37)
    {
      if (!v44)
      {
        *(_QWORD *)v41 = *(_QWORD *)v42;
        v45 = *(int *)(v43 + 20);
        __dst = &v41[v45];
        v199 = v4;
        v46 = &v42[v45];
        v47 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        v205 = v6;
        if (__swift_getEnumTagSinglePayload((uint64_t)v46, 1, v47))
        {
          v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(__dst, v46, *(_QWORD *)(*(_QWORD *)(v48 - 8) + 64));
          v5 = v210;
          v49 = *(void (**)(char *, char *, uint64_t))(v210 + 16);
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)__dst = *(_QWORD *)v46;
          if (EnumCaseMultiPayload == 1)
          {
            v137 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v185 = &v46[v137];
            v189 = &__dst[v137];
            v5 = v210;
            v49 = *(void (**)(char *, char *, uint64_t))(v210 + 16);
            swift_bridgeObjectRetain();
            v49(v189, v185, v199);
          }
          else
          {
            *((_QWORD *)__dst + 1) = *((_QWORD *)v46 + 1);
            v145 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v146 = &__dst[v145];
            v186 = &v46[v145];
            v5 = v210;
            v49 = *(void (**)(char *, char *, uint64_t))(v210 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v49(v146, v186, v199);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v47);
        }
        v4 = v199;
        v49(&v41[*(int *)(v43 + 24)], &v42[*(int *)(v43 + 24)], v199);
        __swift_storeEnumTagSinglePayload((uint64_t)v41, 0, 1, v43);
        v6 = v205;
        goto LABEL_27;
      }
      goto LABEL_16;
    }
    if (v44)
    {
      sub_240BE10B8((uint64_t)v41, type metadata accessor for Proto_QuantizationParams);
LABEL_16:
      v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v41, v42, *(_QWORD *)(*(_QWORD *)(v54 - 8) + 64));
LABEL_17:
      v5 = v210;
      goto LABEL_27;
    }
    v201 = v4;
    v206 = v6;
    *(_QWORD *)v41 = *(_QWORD *)v42;
    v59 = *(int *)(v43 + 20);
    v60 = (uint64_t)&v41[v59];
    v61 = &v42[v59];
    v62 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    v188 = (_QWORD *)v60;
    LODWORD(v60) = __swift_getEnumTagSinglePayload(v60, 1, v62);
    __dstb = v61;
    v184 = v62;
    v63 = __swift_getEnumTagSinglePayload((uint64_t)v61, 1, v62);
    if ((_DWORD)v60)
    {
      v4 = v201;
      if (!v63)
      {
        v150 = swift_getEnumCaseMultiPayload();
        *v188 = *(_QWORD *)v61;
        if (v150 == 1)
        {
          v151 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          v152 = (char *)v188 + v151;
          v153 = &__dstb[v151];
          __dstc = *(void (**)(char *, char *, uint64_t))(v210 + 16);
          swift_bridgeObjectRetain();
          v4 = v201;
          __dstc(v152, v153, v201);
        }
        else
        {
          v188[1] = *((_QWORD *)v61 + 1);
          v171 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          v181 = (char *)v188 + v171;
          v172 = &v61[v171];
          __dste = *(void (**)(char *, char *, uint64_t))(v210 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v4 = v201;
          __dste(v181, v172, v201);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v188, 0, 1, v184);
        goto LABEL_87;
      }
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
      v65 = v188;
    }
    else
    {
      v4 = v201;
      if (!v63)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v188, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
          v160 = swift_getEnumCaseMultiPayload();
          *v188 = *(_QWORD *)v61;
          if (v160 == 1)
          {
            v161 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v162 = (char *)v188 + v161;
            v163 = &v61[v161];
            __dstd = *(void (**)(char *, char *, uint64_t))(v210 + 16);
            swift_bridgeObjectRetain();
            v164 = v162;
            v4 = v201;
            __dstd(v164, v163, v201);
          }
          else
          {
            v188[1] = *((_QWORD *)v61 + 1);
            v176 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v182 = (char *)v188 + v176;
            v177 = &v61[v176];
            __dstg = *(void (**)(char *, char *, uint64_t))(v210 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v4 = v201;
            __dstg(v182, v177, v201);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_87;
      }
      sub_240BE10B8((uint64_t)v188, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
      v64 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
      v65 = v188;
    }
    memcpy(v65, v61, v64);
LABEL_87:
    v6 = v206;
    v206((uint64_t)&v41[*(int *)(v43 + 24)], (uint64_t)&v42[*(int *)(v43 + 24)], v4);
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_7:
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy((void *)v9, (const void *)v10, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_27;
  }
  v204 = v6;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  v14 = v5;
  v15 = *(_QWORD *)(v10 + 8);
  v16 = *(_QWORD *)(v10 + 16);
  swift_bridgeObjectRetain();
  sub_240BF5610(v15, v16);
  *(_QWORD *)(v9 + 8) = v15;
  *(_QWORD *)(v9 + 16) = v16;
  v17 = *(_QWORD *)(v10 + 24);
  v18 = *(_QWORD *)(v10 + 32);
  sub_240BF5610(v17, v18);
  *(_QWORD *)(v9 + 24) = v17;
  *(_QWORD *)(v9 + 32) = v18;
  v19 = *(_QWORD *)(v10 + 40);
  v20 = *(_QWORD *)(v10 + 48);
  sub_240BF5610(v19, v20);
  *(_QWORD *)(v9 + 40) = v19;
  *(_QWORD *)(v9 + 48) = v20;
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  v209 = v14;
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16);
  v21(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v4);
  v22 = *(int *)(v11 + 40);
  v23 = (_QWORD *)(v9 + v22);
  v24 = (_QWORD *)(v10 + v22);
  v25 = type metadata accessor for Proto_QuantizationParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    *v23 = *v24;
    v50 = *(int *)(v25 + 20);
    __dsta = (_QWORD *)((char *)v23 + v50);
    v200 = v4;
    v51 = (_QWORD *)((char *)v24 + v50);
    v52 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52))
    {
      v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
      memcpy(__dsta, v51, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
      v4 = v200;
    }
    else
    {
      v187 = v52;
      v55 = swift_getEnumCaseMultiPayload();
      *__dsta = *v51;
      if (v55 == 1)
      {
        v56 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
        v183 = (char *)__dsta + v56;
        v57 = (char *)v51 + v56;
        swift_bridgeObjectRetain();
        v58 = v57;
        v4 = v200;
        v21((uint64_t)v183, (uint64_t)v58, v200);
      }
      else
      {
        __dsta[1] = v51[1];
        v66 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
        v67 = (char *)__dsta + v66;
        v68 = (char *)v51 + v66;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v69 = v68;
        v4 = v200;
        v21((uint64_t)v67, (uint64_t)v69, v200);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v187);
    }
    v21((uint64_t)v23 + *(int *)(v25 + 24), (uint64_t)v24 + *(int *)(v25 + 24), v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v11);
  v6 = v204;
  v5 = v209;
LABEL_27:
  v70 = *(int *)(v7 + 24);
  v71 = v213 + v70;
  v72 = a2 + v70;
  v73 = __swift_getEnumTagSinglePayload(v213 + v70, 1, v11);
  v74 = __swift_getEnumTagSinglePayload(v72, 1, v11);
  if (v73)
  {
    if (!v74)
    {
      *(_QWORD *)v71 = *(_QWORD *)v72;
      v75 = *(_QWORD *)(v72 + 8);
      v76 = *(_QWORD *)(v72 + 16);
      swift_bridgeObjectRetain();
      sub_240BF5610(v75, v76);
      *(_QWORD *)(v71 + 8) = v75;
      *(_QWORD *)(v71 + 16) = v76;
      v77 = *(_QWORD *)(v72 + 24);
      v78 = *(_QWORD *)(v72 + 32);
      sub_240BF5610(v77, v78);
      *(_QWORD *)(v71 + 24) = v77;
      *(_QWORD *)(v71 + 32) = v78;
      v79 = *(_QWORD *)(v72 + 40);
      v80 = *(_QWORD *)(v72 + 48);
      sub_240BF5610(v79, v80);
      *(_QWORD *)(v71 + 40) = v79;
      *(_QWORD *)(v71 + 48) = v80;
      *(_BYTE *)(v71 + 56) = *(_BYTE *)(v72 + 56);
      v81 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
      v81(v71 + *(int *)(v11 + 36), v72 + *(int *)(v11 + 36), v4);
      v82 = *(int *)(v11 + 40);
      v83 = (_QWORD *)(v71 + v82);
      v84 = (_QWORD *)(v72 + v82);
      v85 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v84, 1, v85))
      {
        v86 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v83, v84, *(_QWORD *)(*(_QWORD *)(v86 - 8) + 64));
      }
      else
      {
        v202 = v4;
        *v83 = *v84;
        v112 = *(int *)(v85 + 20);
        v113 = (_QWORD *)((char *)v83 + v112);
        v114 = (_QWORD *)((char *)v84 + v112);
        v115 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v114, 1, v115))
        {
          v116 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v113, v114, *(_QWORD *)(*(_QWORD *)(v116 - 8) + 64));
          v117 = v202;
        }
        else
        {
          v118 = swift_getEnumCaseMultiPayload();
          *v113 = *v114;
          if (v118 == 1)
          {
            v119 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v211 = (char *)v113 + v119;
            v120 = (char *)v114 + v119;
            swift_bridgeObjectRetain();
            v121 = v120;
            v117 = v202;
            v81((uint64_t)v211, (uint64_t)v121, v202);
          }
          else
          {
            v113[1] = v114[1];
            v130 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v208 = (char *)v113 + v130;
            v131 = (char *)v114 + v130;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v132 = v131;
            v117 = v202;
            v81((uint64_t)v208, (uint64_t)v132, v202);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v113, 0, 1, v115);
        }
        v81((uint64_t)v83 + *(int *)(v85 + 24), (uint64_t)v84 + *(int *)(v85 + 24), v117);
        __swift_storeEnumTagSinglePayload((uint64_t)v83, 0, 1, v85);
      }
      v133 = v71;
      v134 = v11;
      goto LABEL_53;
    }
    goto LABEL_33;
  }
  if (!v74)
  {
    *(_QWORD *)v71 = *(_QWORD *)v72;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v90 = *(_QWORD *)(v72 + 8);
    v91 = *(_QWORD *)(v72 + 16);
    sub_240BF5610(v90, v91);
    v92 = *(_QWORD *)(v71 + 8);
    v93 = *(_QWORD *)(v71 + 16);
    *(_QWORD *)(v71 + 8) = v90;
    *(_QWORD *)(v71 + 16) = v91;
    sub_240BF6AE0(v92, v93);
    v94 = *(_QWORD *)(v72 + 24);
    v95 = *(_QWORD *)(v72 + 32);
    sub_240BF5610(v94, v95);
    v96 = *(_QWORD *)(v71 + 24);
    v97 = *(_QWORD *)(v71 + 32);
    *(_QWORD *)(v71 + 24) = v94;
    *(_QWORD *)(v71 + 32) = v95;
    sub_240BF6AE0(v96, v97);
    v98 = *(_QWORD *)(v72 + 40);
    v99 = *(_QWORD *)(v72 + 48);
    sub_240BF5610(v98, v99);
    v100 = *(_QWORD *)(v71 + 40);
    v101 = *(_QWORD *)(v71 + 48);
    *(_QWORD *)(v71 + 40) = v98;
    *(_QWORD *)(v71 + 48) = v99;
    sub_240BF6AE0(v100, v101);
    *(_BYTE *)(v71 + 56) = *(_BYTE *)(v72 + 56);
    v6(v71 + *(int *)(v11 + 36), v72 + *(int *)(v11 + 36), v4);
    v102 = *(int *)(v11 + 40);
    v103 = (char *)(v71 + v102);
    v104 = (char *)(v72 + v102);
    v105 = type metadata accessor for Proto_QuantizationParams(0);
    LODWORD(v98) = __swift_getEnumTagSinglePayload((uint64_t)v103, 1, v105);
    v106 = __swift_getEnumTagSinglePayload((uint64_t)v104, 1, v105);
    if ((_DWORD)v98)
    {
      if (!v106)
      {
        *(_QWORD *)v103 = *(_QWORD *)v104;
        v107 = *(int *)(v105 + 20);
        v108 = &v103[v107];
        v109 = &v104[v107];
        v110 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v109, 1, v110))
        {
          v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v108, v109, *(_QWORD *)(*(_QWORD *)(v111 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v5 + 16))(&v103[*(int *)(v105 + 24)], &v104[*(int *)(v105 + 24)], v4);
        }
        else
        {
          v138 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v108 = *(_QWORD *)v109;
          v203 = v4;
          if (v138 == 1)
          {
            v139 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v140 = &v108[v139];
            v141 = &v109[v139];
            v142 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
            swift_bridgeObjectRetain();
            v143 = v140;
            v4 = v203;
            v142(v143, v141, v203);
          }
          else
          {
            *((_QWORD *)v108 + 1) = *((_QWORD *)v109 + 1);
            v147 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            v148 = &v108[v147];
            v149 = &v109[v147];
            v142 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v142(v148, v149, v4);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v108, 0, 1, v110);
          v142(&v103[*(int *)(v105 + 24)], &v104[*(int *)(v105 + 24)], v4);
        }
        v133 = (uint64_t)v103;
        v134 = v105;
LABEL_53:
        __swift_storeEnumTagSinglePayload(v133, 0, 1, v134);
        return v213;
      }
      goto LABEL_43;
    }
    if (v106)
    {
      sub_240BE10B8((uint64_t)v103, type metadata accessor for Proto_QuantizationParams);
LABEL_43:
      v87 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8) - 8) + 64);
      v88 = v103;
      v89 = v104;
      goto LABEL_34;
    }
    v207 = (void (*)(char *, char *, uint64_t))v6;
    v212 = v5;
    v122 = v4;
    *(_QWORD *)v103 = *(_QWORD *)v104;
    v123 = *(int *)(v105 + 20);
    v124 = &v103[v123];
    v125 = &v104[v123];
    v126 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    v127 = __swift_getEnumTagSinglePayload((uint64_t)v124, 1, v126);
    v128 = __swift_getEnumTagSinglePayload((uint64_t)v125, 1, v126);
    if (v127)
    {
      if (!v128)
      {
        v154 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v124 = *(_QWORD *)v125;
        if (v154 == 1)
        {
          v155 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          v156 = &v124[v155];
          v157 = &v125[v155];
          v158 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
          swift_bridgeObjectRetain();
          v159 = v156;
          v129 = v122;
          v158(v159, v157, v122);
        }
        else
        {
          *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
          v173 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          __dstf = &v124[v173];
          v174 = &v125[v173];
          v175 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v129 = v122;
          v175(__dstf, v174, v122);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v124, 0, 1, v126);
        goto LABEL_90;
      }
      v129 = v122;
    }
    else
    {
      v129 = v122;
      if (!v128)
      {
        if (v213 != a2)
        {
          sub_240BE10B8((uint64_t)v124, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
          v165 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v124 = *(_QWORD *)v125;
          if (v165 == 1)
          {
            v166 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
            v167 = &v124[v166];
            v168 = &v125[v166];
            v169 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
            swift_bridgeObjectRetain();
            v170 = v167;
            v129 = v122;
            v169(v170, v168, v122);
          }
          else
          {
            *((_QWORD *)v124 + 1) = *((_QWORD *)v125 + 1);
            v178 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
            __dsth = &v124[v178];
            v179 = &v125[v178];
            v180 = *(void (**)(char *, char *, uint64_t))(v212 + 16);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v129 = v122;
            v180(__dsth, v179, v122);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_90;
      }
      sub_240BE10B8((uint64_t)v124, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    }
    v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
    memcpy(v124, v125, *(_QWORD *)(*(_QWORD *)(v144 - 8) + 64));
LABEL_90:
    v207(&v103[*(int *)(v105 + 24)], &v104[*(int *)(v105 + 24)], v129);
    return v213;
  }
  sub_240BE10B8(v71, type metadata accessor for Proto_WeightParams);
LABEL_33:
  v87 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0) - 8) + 64);
  v88 = (void *)v71;
  v89 = (const void *)v72;
LABEL_34:
  memcpy(v88, v89, v87);
  return v213;
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  void (*v44)(uint64_t, uint64_t, uint64_t);
  _QWORD *v45;
  _QWORD *__dst;
  _QWORD *__dsta;

  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
  v7 = *(int *)(v6 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_WeightParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *(_OWORD *)(v8 + 1) = *(_OWORD *)(v9 + 1);
    *(_OWORD *)(v8 + 3) = *(_OWORD *)(v9 + 3);
    *(_OWORD *)(v8 + 5) = *(_OWORD *)(v9 + 5);
    *((_BYTE *)v8 + 56) = *((_BYTE *)v9 + 56);
    v5((uint64_t)v8 + *(int *)(v10 + 36), (uint64_t)v9 + *(int *)(v10 + 36), v4);
    v12 = *(int *)(v10 + 40);
    v13 = (_QWORD *)((char *)v8 + v12);
    v14 = (_QWORD *)((char *)v9 + v12);
    v15 = type metadata accessor for Proto_QuantizationParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v44 = v5;
      v45 = v13;
      *v13 = *v14;
      v17 = *(int *)(v15 + 20);
      __dst = (_QWORD *)((char *)v13 + v17);
      v18 = (_QWORD *)((char *)v14 + v17);
      v19 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
      {
        v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
        memcpy(__dst, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
        v5 = v44;
        v21 = (uint64_t)v45;
        v44((uint64_t)v45 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v4);
      }
      else
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *__dst = *v18;
        if (EnumCaseMultiPayload == 1)
        {
          v23 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v24 = 5;
        }
        else
        {
          __dst[1] = v18[1];
          v23 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v24 = 6;
        }
        v25 = *(int *)(v23 + 4 * v24);
        v26 = (char *)v18 + v25;
        v5 = v44;
        v44((uint64_t)__dst + v25, (uint64_t)v26, v4);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v19);
        v21 = (uint64_t)v45;
        v44((uint64_t)v45 + *(int *)(v15 + 24), (uint64_t)v14 + *(int *)(v15 + 24), v4);
      }
      __swift_storeEnumTagSinglePayload(v21, 0, 1, v15);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v27 = *(int *)(v6 + 24);
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  if (__swift_getEnumTagSinglePayload(a2 + v27, 1, v10))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    *v28 = *v29;
    *(_OWORD *)(v28 + 1) = *(_OWORD *)(v29 + 1);
    *(_OWORD *)(v28 + 3) = *(_OWORD *)(v29 + 3);
    *(_OWORD *)(v28 + 5) = *(_OWORD *)(v29 + 5);
    *((_BYTE *)v28 + 56) = *((_BYTE *)v29 + 56);
    v5((uint64_t)v28 + *(int *)(v10 + 36), (uint64_t)v29 + *(int *)(v10 + 36), v4);
    v31 = *(int *)(v10 + 40);
    v32 = (_QWORD *)((char *)v28 + v31);
    v33 = (_QWORD *)((char *)v29 + v31);
    v34 = type metadata accessor for Proto_QuantizationParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      *v32 = *v33;
      v36 = *(int *)(v34 + 20);
      __dsta = (_QWORD *)((char *)v32 + v36);
      v37 = (_QWORD *)((char *)v33 + v36);
      v38 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
        memcpy(__dsta, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v40 = swift_getEnumCaseMultiPayload();
        *__dsta = *v37;
        if (v40 == 1)
        {
          v41 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v42 = 5;
        }
        else
        {
          __dsta[1] = v37[1];
          v41 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v42 = 6;
        }
        v5((uint64_t)__dsta + *(int *)(v41 + 4 * v42), (uint64_t)v37 + *(int *)(v41 + 4 * v42), v4);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v38);
      }
      v5((uint64_t)v32 + *(int *)(v34 + 24), (uint64_t)v33 + *(int *)(v34 + 24), v4);
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v10);
  }
  return a1;
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  _QWORD *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  int v49;
  size_t v50;
  void *v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  int v58;
  void (*v59)(uint64_t, uint64_t, uint64_t);
  uint64_t v60;
  _QWORD *v61;
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  size_t v65;
  void *v66;
  const void *v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  int v78;
  int v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  _QWORD *v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  int v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  int EnumCaseMultiPayload;
  uint64_t v110;
  char *v111;
  int v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  uint64_t v116;
  int v117;
  uint64_t v118;
  uint64_t v119;
  int v120;
  uint64_t v121;
  int v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  void (*v127)(char *, char *, uint64_t);
  uint64_t v128;
  _QWORD *v129;
  char *__dst;
  _QWORD *__dsta;
  char *__dstb;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  void (*v137)(uint64_t, uint64_t, uint64_t);
  void (*v138)(uint64_t, uint64_t, uint64_t);
  void (*v139)(char *, char *, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  v7 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Proto_WeightParams(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload(v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      sub_240BE10B8(v9, type metadata accessor for Proto_WeightParams);
      goto LABEL_7;
    }
    v141 = v5;
    *(_QWORD *)v9 = *(_QWORD *)v10;
    swift_bridgeObjectRelease();
    v21 = *(_QWORD *)(v9 + 8);
    v22 = *(_QWORD *)(v9 + 16);
    *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
    sub_240BF6AE0(v21, v22);
    v23 = *(_QWORD *)(v9 + 24);
    v24 = *(_QWORD *)(v9 + 32);
    *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
    sub_240BF6AE0(v23, v24);
    v25 = *(_QWORD *)(v9 + 40);
    v26 = *(_QWORD *)(v9 + 48);
    *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
    sub_240BF6AE0(v25, v26);
    *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
    v6(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v4);
    v27 = *(int *)(v11 + 40);
    v28 = (char *)(v9 + v27);
    v29 = (char *)(v10 + v27);
    v30 = type metadata accessor for Proto_QuantizationParams(0);
    v31 = __swift_getEnumTagSinglePayload((uint64_t)v28, 1, v30);
    v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, v30);
    if (v31)
    {
      if (!v32)
      {
        *(_QWORD *)v28 = *(_QWORD *)v29;
        v33 = *(int *)(v30 + 20);
        __dst = &v28[v33];
        v133 = v4;
        v34 = &v29[v33];
        v35 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
        {
          v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(__dst, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
          v5 = v141;
          v4 = v133;
          (*(void (**)(char *, char *, uint64_t))(v141 + 32))(&v28[*(int *)(v30 + 24)], &v29[*(int *)(v30 + 24)], v133);
        }
        else
        {
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          *(_QWORD *)__dst = *(_QWORD *)v34;
          if (EnumCaseMultiPayload == 1)
          {
            v110 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
          }
          else
          {
            *((_QWORD *)__dst + 1) = *((_QWORD *)v34 + 1);
            v110 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
          }
          v111 = &v34[v110];
          v5 = v141;
          v127 = *(void (**)(char *, char *, uint64_t))(v141 + 32);
          v127(&__dst[v110], v111, v133);
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, v35);
          v4 = v133;
          v127(&v28[*(int *)(v30 + 24)], &v29[*(int *)(v30 + 24)], v133);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v30);
        goto LABEL_27;
      }
      goto LABEL_16;
    }
    if (v32)
    {
      sub_240BE10B8((uint64_t)v28, type metadata accessor for Proto_QuantizationParams);
LABEL_16:
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
LABEL_17:
      v5 = v141;
      goto LABEL_27;
    }
    v135 = v4;
    v138 = v6;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    v45 = *(int *)(v30 + 20);
    v46 = (uint64_t)&v28[v45];
    v47 = &v29[v45];
    v48 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    v129 = (_QWORD *)v46;
    LODWORD(v46) = __swift_getEnumTagSinglePayload(v46, 1, v48);
    __dstb = v47;
    v49 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
    if ((_DWORD)v46)
    {
      v4 = v135;
      if (v49)
      {
        v50 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
        v51 = v129;
LABEL_62:
        memcpy(v51, v47, v50);
        v6 = v138;
        v138((uint64_t)&v28[*(int *)(v30 + 24)], (uint64_t)&v29[*(int *)(v30 + 24)], v4);
        goto LABEL_17;
      }
      v117 = swift_getEnumCaseMultiPayload();
      *v129 = *(_QWORD *)v47;
      v6 = v138;
      if (v117 == 1)
      {
        v118 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
        v119 = 5;
      }
      else
      {
        v129[1] = *((_QWORD *)__dstb + 1);
        v118 = type metadata accessor for Proto_LinearQuantizationParams(0);
        v119 = 6;
      }
      (*(void (**)(char *, char *, uint64_t))(v141 + 32))((char *)v129 + *(int *)(v118 + 4 * v119), &__dstb[*(int *)(v118 + 4 * v119)], v135);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v129, 0, 1, v48);
    }
    else
    {
      v4 = v135;
      if (v49)
      {
        sub_240BE10B8((uint64_t)v129, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
        v50 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0) - 8) + 64);
        v51 = v129;
        goto LABEL_62;
      }
      v6 = v138;
      if (a1 != a2)
      {
        sub_240BE10B8((uint64_t)v129, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
        v120 = swift_getEnumCaseMultiPayload();
        *v129 = *(_QWORD *)__dstb;
        if (v120 == 1)
        {
          v121 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          (*(void (**)(char *, char *, uint64_t))(v141 + 32))((char *)v129 + *(int *)(v121 + 20), &__dstb[*(int *)(v121 + 20)], v135);
        }
        else
        {
          v129[1] = *((_QWORD *)__dstb + 1);
          v124 = type metadata accessor for Proto_LinearQuantizationParams(0);
          (*(void (**)(char *, char *, uint64_t))(v141 + 32))((char *)v129 + *(int *)(v124 + 24), &__dstb[*(int *)(v124 + 24)], v135);
        }
        swift_storeEnumTagMultiPayload();
      }
    }
    v6((uint64_t)&v28[*(int *)(v30 + 24)], (uint64_t)&v29[*(int *)(v30 + 24)], v4);
    goto LABEL_17;
  }
  if (v13)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
    memcpy((void *)v9, (const void *)v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_27;
  }
  v137 = v6;
  v140 = v5;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_OWORD *)(v9 + 8) = *(_OWORD *)(v10 + 8);
  *(_OWORD *)(v9 + 24) = *(_OWORD *)(v10 + 24);
  *(_OWORD *)(v9 + 40) = *(_OWORD *)(v10 + 40);
  *(_BYTE *)(v9 + 56) = *(_BYTE *)(v10 + 56);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v14(v9 + *(int *)(v11 + 36), v10 + *(int *)(v11 + 36), v4);
  v15 = *(int *)(v11 + 40);
  v16 = (_QWORD *)(v9 + v15);
  v17 = (_QWORD *)(v10 + v15);
  v18 = type metadata accessor for Proto_QuantizationParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v134 = v4;
    *v16 = *v17;
    v37 = *(int *)(v18 + 20);
    v128 = a1;
    __dsta = (_QWORD *)((char *)v16 + v37);
    v38 = (_QWORD *)((char *)v17 + v37);
    v39 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v38, 1, v39))
    {
      v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
      memcpy(__dsta, v38, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
      v4 = v134;
      a1 = v128;
    }
    else
    {
      v126 = v39;
      v42 = swift_getEnumCaseMultiPayload();
      *__dsta = *v38;
      if (v42 == 1)
      {
        v43 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
        v44 = 5;
      }
      else
      {
        __dsta[1] = v38[1];
        v43 = type metadata accessor for Proto_LinearQuantizationParams(0);
        v44 = 6;
      }
      a1 = v128;
      v52 = *(int *)(v43 + 4 * v44);
      v53 = (char *)v38 + v52;
      v4 = v134;
      v14((uint64_t)__dsta + v52, (uint64_t)v53, v134);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v126);
    }
    v14((uint64_t)v16 + *(int *)(v18 + 24), (uint64_t)v17 + *(int *)(v18 + 24), v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v11);
  v6 = v137;
  v5 = v140;
LABEL_27:
  v54 = *(int *)(v7 + 24);
  v55 = a1 + v54;
  v56 = a2 + v54;
  v57 = __swift_getEnumTagSinglePayload(a1 + v54, 1, v11);
  v58 = __swift_getEnumTagSinglePayload(v56, 1, v11);
  if (v57)
  {
    if (!v58)
    {
      *(_QWORD *)v55 = *(_QWORD *)v56;
      *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
      *(_OWORD *)(v55 + 24) = *(_OWORD *)(v56 + 24);
      *(_OWORD *)(v55 + 40) = *(_OWORD *)(v56 + 40);
      *(_BYTE *)(v55 + 56) = *(_BYTE *)(v56 + 56);
      v59 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
      v59(v55 + *(int *)(v11 + 36), v56 + *(int *)(v11 + 36), v4);
      v60 = *(int *)(v11 + 40);
      v61 = (_QWORD *)(v55 + v60);
      v62 = (_QWORD *)(v56 + v60);
      v63 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v62, 1, v63))
      {
        v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
        memcpy(v61, v62, *(_QWORD *)(*(_QWORD *)(v64 - 8) + 64));
      }
      else
      {
        v136 = v4;
        *v61 = *v62;
        v85 = *(int *)(v63 + 20);
        v86 = (_QWORD *)((char *)v61 + v85);
        v87 = (_QWORD *)((char *)v62 + v85);
        v88 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v87, 1, v88))
        {
          v89 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v86, v87, *(_QWORD *)(*(_QWORD *)(v89 - 8) + 64));
          v90 = v136;
        }
        else
        {
          v91 = swift_getEnumCaseMultiPayload();
          *v86 = *v87;
          if (v91 == 1)
          {
            v92 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
            v93 = 5;
          }
          else
          {
            v86[1] = v87[1];
            v92 = type metadata accessor for Proto_LinearQuantizationParams(0);
            v93 = 6;
          }
          v104 = *(int *)(v92 + 4 * v93);
          v105 = (char *)v87 + v104;
          v90 = v136;
          v59((uint64_t)v86 + v104, (uint64_t)v105, v136);
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v86, 0, 1, v88);
        }
        v59((uint64_t)v61 + *(int *)(v63 + 24), (uint64_t)v62 + *(int *)(v63 + 24), v90);
        __swift_storeEnumTagSinglePayload((uint64_t)v61, 0, 1, v63);
      }
      v106 = v55;
      v107 = v11;
      goto LABEL_54;
    }
    goto LABEL_33;
  }
  if (!v58)
  {
    *(_QWORD *)v55 = *(_QWORD *)v56;
    swift_bridgeObjectRelease();
    v68 = *(_QWORD *)(v55 + 8);
    v69 = *(_QWORD *)(v55 + 16);
    *(_OWORD *)(v55 + 8) = *(_OWORD *)(v56 + 8);
    sub_240BF6AE0(v68, v69);
    v70 = *(_QWORD *)(v55 + 24);
    v71 = *(_QWORD *)(v55 + 32);
    *(_OWORD *)(v55 + 24) = *(_OWORD *)(v56 + 24);
    sub_240BF6AE0(v70, v71);
    v72 = *(_QWORD *)(v55 + 40);
    v73 = *(_QWORD *)(v55 + 48);
    *(_OWORD *)(v55 + 40) = *(_OWORD *)(v56 + 40);
    sub_240BF6AE0(v72, v73);
    *(_BYTE *)(v55 + 56) = *(_BYTE *)(v56 + 56);
    v6(v55 + *(int *)(v11 + 36), v56 + *(int *)(v11 + 36), v4);
    v74 = *(int *)(v11 + 40);
    v75 = (char *)(v55 + v74);
    v76 = (char *)(v56 + v74);
    v77 = type metadata accessor for Proto_QuantizationParams(0);
    v78 = __swift_getEnumTagSinglePayload((uint64_t)v75, 1, v77);
    v79 = __swift_getEnumTagSinglePayload((uint64_t)v76, 1, v77);
    if (v78)
    {
      if (!v79)
      {
        *(_QWORD *)v75 = *(_QWORD *)v76;
        v80 = *(int *)(v77 + 20);
        v81 = &v75[v80];
        v82 = &v76[v80];
        v83 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v82, 1, v83))
        {
          v84 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
          memcpy(v81, v82, *(_QWORD *)(*(_QWORD *)(v84 - 8) + 64));
          (*(void (**)(char *, char *, uint64_t))(v5 + 32))(&v75[*(int *)(v77 + 24)], &v76[*(int *)(v77 + 24)], v4);
        }
        else
        {
          v112 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v81 = *(_QWORD *)v82;
          if (v112 == 1)
          {
            v113 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
            v114 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
            v114(&v81[*(int *)(v113 + 20)], &v82[*(int *)(v113 + 20)], v4);
          }
          else
          {
            *((_QWORD *)v81 + 1) = *((_QWORD *)v82 + 1);
            v116 = type metadata accessor for Proto_LinearQuantizationParams(0);
            v114 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
            v114(&v81[*(int *)(v116 + 24)], &v82[*(int *)(v116 + 24)], v4);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v81, 0, 1, v83);
          v114(&v75[*(int *)(v77 + 24)], &v76[*(int *)(v77 + 24)], v4);
        }
        v106 = (uint64_t)v75;
        v107 = v77;
LABEL_54:
        __swift_storeEnumTagSinglePayload(v106, 0, 1, v107);
        return a1;
      }
      goto LABEL_43;
    }
    if (v79)
    {
      sub_240BE10B8((uint64_t)v75, type metadata accessor for Proto_QuantizationParams);
LABEL_43:
      v65 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8) - 8) + 64);
      v66 = v75;
      v67 = v76;
      goto LABEL_34;
    }
    v139 = (void (*)(char *, char *, uint64_t))v6;
    v142 = v5;
    v94 = v4;
    *(_QWORD *)v75 = *(_QWORD *)v76;
    v95 = *(int *)(v77 + 20);
    v96 = &v75[v95];
    v97 = &v76[v95];
    v98 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    v99 = __swift_getEnumTagSinglePayload((uint64_t)v96, 1, v98);
    v100 = __swift_getEnumTagSinglePayload((uint64_t)v97, 1, v98);
    if (v99)
    {
      if (!v100)
      {
        v101 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v96 = *(_QWORD *)v97;
        if (v101 == 1)
        {
          v102 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v103 = 5;
        }
        else
        {
          *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
          v102 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v103 = 6;
        }
        (*(void (**)(char *, char *, uint64_t))(v142 + 32))(&v96[*(int *)(v102 + 4 * v103)], &v97[*(int *)(v102 + 4 * v103)], v94);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v96, 0, 1, v98);
        goto LABEL_89;
      }
    }
    else
    {
      if (!v100)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v96, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
          v122 = swift_getEnumCaseMultiPayload();
          *(_QWORD *)v96 = *(_QWORD *)v97;
          if (v122 == 1)
          {
            v123 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
            (*(void (**)(char *, char *, uint64_t))(v142 + 32))(&v96[*(int *)(v123 + 20)], &v97[*(int *)(v123 + 20)], v94);
          }
          else
          {
            *((_QWORD *)v96 + 1) = *((_QWORD *)v97 + 1);
            v125 = type metadata accessor for Proto_LinearQuantizationParams(0);
            (*(void (**)(char *, char *, uint64_t))(v142 + 32))(&v96[*(int *)(v125 + 24)], &v97[*(int *)(v125 + 24)], v94);
          }
          swift_storeEnumTagMultiPayload();
        }
        goto LABEL_89;
      }
      sub_240BE10B8((uint64_t)v96, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    }
    v115 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
    memcpy(v96, v97, *(_QWORD *)(*(_QWORD *)(v115 - 8) + 64));
LABEL_89:
    v139(&v75[*(int *)(v77 + 24)], &v76[*(int *)(v77 + 24)], v94);
    return a1;
  }
  sub_240BE10B8(v55, type metadata accessor for Proto_WeightParams);
LABEL_33:
  v65 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0) - 8) + 64);
  v66 = (void *)v55;
  v67 = (const void *)v56;
LABEL_34:
  memcpy(v66, v67, v65);
  return a1;
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE63F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_43_13();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s10ActivationO31ParametricSoftplusConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE6420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_43_13();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE6444(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ActivationParametricSoftplus);
}

uint64_t OUTLINED_FUNCTION_15_27(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

void OUTLINED_FUNCTION_19_17(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240C35540(a1, v2, v1);
}

void OUTLINED_FUNCTION_20_17()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_25_19(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  *a1 = *a2;
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_27_19()
{
  return type metadata accessor for Proto_WeightParams(0);
}

uint64_t OUTLINED_FUNCTION_34_11()
{
  return type metadata accessor for NeuralNetwork.WeightParameters();
}

uint64_t OUTLINED_FUNCTION_38_15()
{
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_40_15(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240C355AC(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_43_13()
{
  return type metadata accessor for Proto_ActivationParametricSoftplus(0);
}

void OUTLINED_FUNCTION_45_13()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_46_12()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_48_12(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 + 8) = a1;
  *(__n128 *)(v1 + 24) = a1;
  *(__n128 *)(v1 + 40) = a1;
  *(_BYTE *)(v1 + 56) = 0;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_49_12()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v2, 1, v0);
  sub_240BE0B68(v2, v1);
}

uint64_t OUTLINED_FUNCTION_50_13(uint64_t result)
{
  *(_QWORD *)(result + 32) = 0x635374757074756FLL;
  *(_QWORD *)(result + 40) = 0xEB00000000656C61;
  return result;
}

uint64_t OUTLINED_FUNCTION_52_11()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
  return swift_retain();
}

void OUTLINED_FUNCTION_54_15(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240C355AC(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_57_9()
{
  return sub_240F1CFA8();
}

uint64_t OUTLINED_FUNCTION_58_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v2, v1, a1);
}

uint64_t OUTLINED_FUNCTION_60_7()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_61_9()
{
  return sub_240F1CFA8();
}

float OUTLINED_FUNCTION_62_6()
{
  uint64_t v0;

  return *(float *)v0;
}

void OUTLINED_FUNCTION_63_6()
{
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t OUTLINED_FUNCTION_64_3()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_66_7(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240C35540(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_69_7(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;

  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v4 - 144);
  *(_QWORD *)(a1 + 32) = v1;
  *(_QWORD *)(a1 + 40) = v2;
  return v3(0);
}

void OUTLINED_FUNCTION_76_5(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;

  sub_240C02F94(v1 + a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_79_4@<X0>(uint64_t a1@<X1>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(v3, a1, v2);
}

uint64_t OUTLINED_FUNCTION_84_6()
{
  return type metadata accessor for Proto_ActivationPReLU(0);
}

uint64_t OUTLINED_FUNCTION_89_3(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_90_4(uint64_t result)
{
  *(_QWORD *)(result + 32) = 0x656C616373;
  *(_QWORD *)(result + 40) = 0xE500000000000000;
  return result;
}

void OUTLINED_FUNCTION_91_2(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C35540(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_92_2()
{
  return type metadata accessor for Proto_ActivationSoftsign(0);
}

uint64_t OUTLINED_FUNCTION_93_2()
{
  return type metadata accessor for Proto_ActivationSigmoid(0);
}

uint64_t OUTLINED_FUNCTION_94_4()
{
  return type metadata accessor for Proto_ActivationSoftplus(0);
}

uint64_t OUTLINED_FUNCTION_95_4()
{
  return type metadata accessor for Proto_ActivationThresholdedReLU(0);
}

uint64_t OUTLINED_FUNCTION_96_2()
{
  return type metadata accessor for Proto_ActivationReLU(0);
}

uint64_t OUTLINED_FUNCTION_97_3()
{
  return type metadata accessor for Proto_ActivationLinear(0);
}

uint64_t OUTLINED_FUNCTION_98_2()
{
  return type metadata accessor for Proto_ClampedReLULayerParams(0);
}

uint64_t OUTLINED_FUNCTION_99_1()
{
  return type metadata accessor for Proto_ActivationELU(0);
}

uint64_t OUTLINED_FUNCTION_100_4()
{
  return type metadata accessor for Proto_ActivationScaledTanh(0);
}

uint64_t OUTLINED_FUNCTION_101_4()
{
  return type metadata accessor for Proto_ActivationTanh(0);
}

uint64_t OUTLINED_FUNCTION_102_3()
{
  return type metadata accessor for Proto_ActivationLeakyReLU(0);
}

uint64_t OUTLINED_FUNCTION_103_3()
{
  return type metadata accessor for Proto_ActivationSigmoidHard(0);
}

uint64_t OUTLINED_FUNCTION_106_4()
{
  return type metadata accessor for Proto_QuantizationParams(0);
}

void OUTLINED_FUNCTION_107_3()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240C35540(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_109_4()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_110_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_111_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_116_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_getEnumTagSinglePayload(v2, 1, v1);
  return *(_QWORD *)(v0 + 48);
}

uint64_t OUTLINED_FUNCTION_122_3()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_125_4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_240F1CF90();
}

uint64_t *OUTLINED_FUNCTION_127_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;

  *(_QWORD *)(v1 + 72) = a1;
  return __swift_allocate_boxed_opaque_existential_0(v2);
}

void OUTLINED_FUNCTION_135_3(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240BE10B8(v2, a2);
}

float OUTLINED_FUNCTION_138_2(uint64_t a1)
{
  float *v1;
  float result;

  *(_QWORD *)a1 = v1;
  result = *v1;
  *(float *)(a1 + 8) = *v1;
  return result;
}

BOOL static ScalerConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE4(*a1, *a2) & 1) == 0)
    return 0;
  if ((sub_240BEACE4(a1[1], a2[1]) & 1) == 0)
    return 0;
  v11 = OUTLINED_FUNCTION_2_16();
  v12 = (char *)a1 + *(int *)(v11 + 24);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, (char *)a2 + *(int *)(v11 + 24), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

uint64_t ScalerConfiguration.offset.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240CE69F0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ScalerConfiguration.offset.setter(v0);
}

void ScalerConfiguration.offset.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_44();
}

void (*ScalerConfiguration.offset.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_240C2D47C;
}

uint64_t ScalerConfiguration.scale.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240CE6A7C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  ScalerConfiguration.scale.setter(v0);
}

void ScalerConfiguration.scale.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_44();
}

void (*ScalerConfiguration.scale.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_240CB2284;
}

void ScalerConfiguration.init(offset:scale:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  OUTLINED_FUNCTION_2_16();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  a3[1] = a2;
  OUTLINED_FUNCTION_156();
}

uint64_t ScalerConfiguration.customMirror.getter()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  v11 = type metadata accessor for ScalerConfiguration();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240CE6D28((uint64_t)v1, v13 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v14 + 32) = 0x74657366666FLL;
  *(_QWORD *)(v14 + 40) = 0xE600000000000000;
  v15 = *v1;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEC8);
  *(_QWORD *)(v14 + 48) = v15;
  *(_QWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 80) = 0x656C616373;
  v17 = v1[1];
  *(_QWORD *)(v14 + 120) = v16;
  *(_QWORD *)(v14 + 88) = 0xE500000000000000;
  *(_QWORD *)(v14 + 96) = v17;
  v18 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v18);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for ScalerConfiguration()
{
  uint64_t result;

  result = qword_25435FC98;
  if (!qword_25435FC98)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CE6D28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ScalerConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CE6D70()
{
  return sub_240C30D44(&qword_25708D0C0, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Scaler, (uint64_t)&unk_240F23C14);
}

void sub_240CE6D9C(uint64_t *a1@<X8>)
{
  *a1 = ScalerConfiguration.offset.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CE6DC4(uint64_t *a1@<X8>)
{
  *a1 = ScalerConfiguration.scale.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for ScalerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_Scaler();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v7 = *(int *)(v4 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for ScalerConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_Scaler() + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for ScalerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for Proto_Scaler() + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for ScalerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_Scaler() + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *initializeWithTake for ScalerConfiguration(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_Scaler() + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for ScalerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_Scaler() + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScalerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE710C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_16();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for ScalerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE7148(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_16();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CE717C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_Scaler();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240CE71E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  *a4 = MEMORY[0x24BEE4AF8];
  type metadata accessor for Proto_Int64Vector(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240C7B208((uint64_t)sub_240CE7370, 0, a2, MEMORY[0x24BEE4008], MEMORY[0x24BEE4078], a3, MEMORY[0x24BEE40A8], v8);
  v10 = v9;
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 8))(a1, a2);
  result = swift_bridgeObjectRelease();
  *a4 = v10;
  return result;
}

uint64_t sub_240CE729C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;

  v6 = *(_QWORD *)(a2 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  *a3 = MEMORY[0x24BEE4AF8];
  type metadata accessor for Proto_StringVector(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a1, a2);
  v9 = sub_240F1CD68();
  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, a2);
  result = swift_bridgeObjectRelease();
  *a3 = v9;
  return result;
}

_QWORD *sub_240CE7370@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

BOOL static NeuralNetwork.Layer.ReshapeStaticParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE0(*a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v11 = OUTLINED_FUNCTION_1_29();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.reshapeStatic(name:inputName:outputName:targetShape:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v14 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  *v7 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_29();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.setter(a7);
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.reshapeStatic(targetShape:)@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_29();
  OUTLINED_FUNCTION_315();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_6_26();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.ReshapeStaticParameters.init(targetShape:)(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_29();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_6_26();
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v4 = 0;
    v3 = v8;
    v5 = *(_QWORD *)(v8 + 16);
    do
    {
      v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_240BF080C();
      ++v4;
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5++ + 32) = v6;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  return v3;
}

uint64_t sub_240CE7750()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.setter(v0);
}

uint64_t NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_240BF0790();
    v5 = 0;
    v6 = v10;
    v7 = *(_QWORD *)(v10 + 16);
    do
    {
      v8 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_240BF0790();
      ++v5;
      *(_QWORD *)(v10 + 16) = v7 + 1;
      *(_QWORD *)(v10 + 8 * v7++ + 32) = v8;
    }
    while (v4 != v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
  }
  result = swift_bridgeObjectRelease();
  *v2 = v6;
  return result;
}

void (*NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.modify(uint64_t *a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.getter();
  return sub_240CE78A4;
}

void sub_240CE78A4(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_6_26();
    OUTLINED_FUNCTION_44();
  }
}

void NeuralNetwork.Layer.ReshapeStaticParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.ReshapeStaticParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  sub_240CE7A90(v0, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = 0x6853746567726174;
  *(_QWORD *)(v9 + 40) = 0xEB00000000657061;
  v10 = NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.getter();
  *(_QWORD *)(v9 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v9 + 48) = v10;
  v11 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReshapeStaticParameters()
{
  uint64_t result;

  result = qword_25708DCC0;
  if (!qword_25708DCC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CE7A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.ReshapeStaticParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CE7AD4()
{
  return sub_240C30D44(&qword_25708DCB8, type metadata accessor for Proto_ReshapeStaticLayerParams, (uint64_t)&unk_240F4BF44);
}

void sub_240CE7B00(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *_s23ReshapeStaticParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_ReshapeStaticLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s23ReshapeStaticParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s23ReshapeStaticParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s23ReshapeStaticParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s23ReshapeStaticParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s23ReshapeStaticParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s23ReshapeStaticParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE7DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_29();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s23ReshapeStaticParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE7E2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_29();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240CE7E60()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ReshapeStaticLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_29()
{
  return type metadata accessor for Proto_ReshapeStaticLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_6_26()
{
  uint64_t v0;

  return NeuralNetwork.Layer.ReshapeStaticParameters.targetShape.setter(v0);
}

void static FeatureVectorizerConfiguration.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v1);
  sub_240BEB958();
  if ((v2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_8_25();
    OUTLINED_FUNCTION_11_6(*(int *)(v3 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v3 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

uint64_t FeatureVectorizerConfiguration.inputs.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;

  v1 = type metadata accessor for FeatureVectorizerConfiguration.Input(0);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = *v0;
  v7 = *(_QWORD *)(*v0 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v14 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF0DDC();
    v8 = v14;
    v9 = *(_QWORD *)(OUTLINED_FUNCTION_7_25() - 8);
    v10 = v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240C3E408(v10, v5, type metadata accessor for Proto_FeatureVectorizer.InputColumn);
      v12 = *(_QWORD *)(v14 + 16);
      if (v12 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_240BF0DDC();
      *(_QWORD *)(v14 + 16) = v12 + 1;
      sub_240CE8870(v5, v14+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v12);
      v10 += v11;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  return v8;
}

void FeatureVectorizerConfiguration.Input.name.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void FeatureVectorizerConfiguration.Input.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

void FeatureVectorizerConfiguration.inputs.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_29_17(a1, (uint64_t)&v3);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void sub_240CE8164()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  FeatureVectorizerConfiguration.inputs.setter(v0);
}

void FeatureVectorizerConfiguration.inputs.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = FeatureVectorizerConfiguration.inputs.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CE81BC(uint64_t *a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v3 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v4 = swift_bridgeObjectRetain();
    v5 = sub_240CC5E8C(v4, (uint64_t)(a1 + 1));
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *v3 = v5;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v7 = OUTLINED_FUNCTION_29_17(*a1, (uint64_t)(a1 + 2));
    OUTLINED_FUNCTION_42_2();
    result = swift_bridgeObjectRelease();
    *v3 = v7;
  }
  return result;
}

void FeatureVectorizerConfiguration.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_8_25();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_44();
}

void FeatureVectorizerConfiguration.init(inputs:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;

  *a2 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_8_25();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_29_17(a1, (uint64_t)&v5);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *a2 = v2;
  OUTLINED_FUNCTION_12_1();
}

uint64_t FeatureVectorizerConfiguration.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_FeatureVectorizer);
}

void FeatureVectorizerConfiguration.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_FeatureVectorizer);
}

void sub_240CE8334(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_FeatureVectorizer);
}

void FeatureVectorizerConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(_QWORD);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v3 = OUTLINED_FUNCTION_15_6();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  type metadata accessor for FeatureVectorizerConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_48();
  sub_240C3E408(v0, v2, v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v11 + 32) = 0x737475706E69;
  *(_QWORD *)(v11 + 40) = 0xE600000000000000;
  v12 = FeatureVectorizerConfiguration.inputs.getter();
  *(_QWORD *)(v11 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708DCD0);
  *(_QWORD *)(v11 + 48) = v12;
  v13 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v8, v14, v15, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void sub_240CE84A4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  FeatureVectorizerConfiguration.Input.name.setter(v1, v2);
}

void FeatureVectorizerConfiguration.Input.name.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

uint64_t FeatureVectorizerConfiguration.Input.size.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 16);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t FeatureVectorizerConfiguration.Input.size.setter(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
    __break(1u);
  else
    *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t *(*FeatureVectorizerConfiguration.Input.size.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v2;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 16);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v2;
    return sub_240C7A59C;
  }
  return result;
}

void FeatureVectorizerConfiguration.Input.init(name:size:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = 0;
  a4[1] = 0xE000000000000000;
  a4[2] = 0;
  OUTLINED_FUNCTION_7_25();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a4 = a1;
  a4[1] = a2;
  if (a3 < 0)
  {
    __break(1u);
  }
  else
  {
    a4[2] = a3;
    OUTLINED_FUNCTION_156();
  }
}

uint64_t FeatureVectorizerConfiguration.Input.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_FeatureVectorizer.InputColumn);
}

void static FeatureVectorizerConfiguration.Input.== infix(_:_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  uint64_t v5;

  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v3);
  v4 = *v1 == *v0 && v1[1] == v0[1];
  if ((v4 || (sub_240F1CEDC() & 1) != 0) && v1[2] == v0[2])
  {
    v5 = OUTLINED_FUNCTION_7_25();
    OUTLINED_FUNCTION_11_6(*(int *)(v5 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v5 + 24));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

void FeatureVectorizerConfiguration.Input.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_FeatureVectorizer.InputColumn);
}

void sub_240CE86C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_FeatureVectorizer.InputColumn);
}

void FeatureVectorizerConfiguration.Input.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v0;
  v4 = OUTLINED_FUNCTION_15_6();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_313();
  type metadata accessor for FeatureVectorizerConfiguration.Input(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  sub_240C3E408((uint64_t)v3, v2, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v12 + 32) = 1701667182;
  *(_QWORD *)(v12 + 40) = 0xE400000000000000;
  v13 = v3[1];
  v14 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 48) = *v3;
  *(_QWORD *)(v12 + 56) = v13;
  *(_QWORD *)(v12 + 72) = v14;
  *(_QWORD *)(v12 + 80) = 1702521203;
  *(_QWORD *)(v12 + 88) = 0xE400000000000000;
  v15 = v3[2];
  if (v15 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v12 + 120) = MEMORY[0x24BEE1768];
    *(_QWORD *)(v12 + 96) = v15;
    v16 = sub_240F1CF84();
    OUTLINED_FUNCTION_18_0(v1, v17, v18, v16);
    (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE43C0], v4);
    swift_bridgeObjectRetain();
    sub_240F1CFA8();
    OUTLINED_FUNCTION_1();
  }
}

uint64_t type metadata accessor for FeatureVectorizerConfiguration.Input(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DCE8);
}

uint64_t sub_240CE8870(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for FeatureVectorizerConfiguration.Input(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeatureVectorizerConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360338);
}

uint64_t sub_240CE88C8()
{
  return sub_240C30D44(&qword_25708DCD8, type metadata accessor for FeatureVectorizerConfiguration, (uint64_t)&protocol conformance descriptor for FeatureVectorizerConfiguration);
}

uint64_t sub_240CE88F4()
{
  return sub_240C30D44(&qword_25708CFF0, type metadata accessor for Proto_FeatureVectorizer, (uint64_t)&unk_240F23790);
}

uint64_t sub_240CE8920()
{
  return sub_240C30D44(&qword_25708DCE0, type metadata accessor for FeatureVectorizerConfiguration.Input, (uint64_t)&protocol conformance descriptor for FeatureVectorizerConfiguration.Input);
}

uint64_t sub_240CE894C()
{
  return sub_240C30D44(&qword_25708CFE0, type metadata accessor for Proto_FeatureVectorizer.InputColumn, (uint64_t)&unk_240F23718);
}

void sub_240CE8978(uint64_t *a1@<X8>)
{
  *a1 = FeatureVectorizerConfiguration.inputs.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CE89A0(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FeatureVectorizerConfiguration.Input.name.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240CE89C8(uint64_t *a1@<X8>)
{
  *a1 = FeatureVectorizerConfiguration.Input.size.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CE89EC(uint64_t *a1)
{
  FeatureVectorizerConfiguration.Input.size.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for FeatureVectorizerConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_FeatureVectorizer(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for FeatureVectorizerConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_FeatureVectorizer(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for FeatureVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_FeatureVectorizer(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *assignWithCopy for FeatureVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_FeatureVectorizer(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *initializeWithTake for FeatureVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_FeatureVectorizer(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for FeatureVectorizerConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_FeatureVectorizer(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureVectorizerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE8CD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_8_25();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeatureVectorizerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE8D0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_8_25();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE8D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_FeatureVectorizer);
}

uint64_t *initializeBufferWithCopyOfBuffer for FeatureVectorizerConfiguration.Input(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v4 = type metadata accessor for Proto_FeatureVectorizer.InputColumn(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    a1[2] = a2[2];
    v7 = *(int *)(v4 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t destroy for FeatureVectorizerConfiguration.Input(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_FeatureVectorizer.InputColumn(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for FeatureVectorizerConfiguration.Input(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_FeatureVectorizer.InputColumn(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *assignWithCopy for FeatureVectorizerConfiguration.Input(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v4 = *(int *)(type metadata accessor for Proto_FeatureVectorizer.InputColumn(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t initializeWithTake for FeatureVectorizerConfiguration.Input(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_FeatureVectorizer.InputColumn(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *assignWithTake for FeatureVectorizerConfiguration.Input(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_FeatureVectorizer.InputColumn(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureVectorizerConfiguration.Input()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE9038(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_7_25();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeatureVectorizerConfiguration.Input()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE9070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_7_25();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CE9094(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_FeatureVectorizer.InputColumn);
}

uint64_t OUTLINED_FUNCTION_7_25()
{
  return type metadata accessor for Proto_FeatureVectorizer.InputColumn(0);
}

uint64_t OUTLINED_FUNCTION_8_25()
{
  return type metadata accessor for Proto_FeatureVectorizer(0);
}

uint64_t OUTLINED_FUNCTION_29_17(uint64_t a1, uint64_t a2)
{
  return sub_240CC5E8C(a1, a2);
}

void NeuralNetwork.SamePaddingParameters.asymmetryMode.getter(BOOL *a1@<X8>)
{
  uint64_t v1;
  BOOL v2;

  v2 = *(_BYTE *)(v1 + 8) == 1 && *(_QWORD *)v1 != 0;
  *a1 = v2;
}

void sub_240CE90E0(_BYTE *a1@<X8>)
{
  BOOL v2;

  NeuralNetwork.SamePaddingParameters.asymmetryMode.getter(&v2);
  *a1 = v2;
}

unsigned __int8 *sub_240CE9118(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.SamePaddingParameters.asymmetryMode.setter(&v2);
}

unsigned __int8 *NeuralNetwork.SamePaddingParameters.asymmetryMode.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t *(*NeuralNetwork.SamePaddingParameters.asymmetryMode.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  BOOL v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_BYTE *)(v1 + 8) == 1 && *(_QWORD *)v1 != 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240CE9198;
}

uint64_t *sub_240CE9198(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)v1 = *((unsigned __int8 *)result + 8);
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t NeuralNetwork.SamePaddingParameters.init(asymmetryMode:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 1;
  type metadata accessor for Proto_SamePadding(0);
  result = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = 1;
  return result;
}

BOOL static NeuralNetwork.SamePaddingParameters.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1;
  v12 = *a2;
  if (*((_BYTE *)a1 + 8))
    v11 = *a1 != 0;
  if (*((_BYTE *)a2 + 8) == 1)
  {
    if (v12)
    {
      if (v11 != 1)
        return 0;
    }
    else if (v11)
    {
      return 0;
    }
  }
  else if (v11 != v12)
  {
    return 0;
  }
  v13 = type metadata accessor for Proto_SamePadding(0);
  v14 = (uint64_t)a1 + *(int *)(v13 + 20);
  v15 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v15(v10, v14, v4);
  v15(v8, (uint64_t)a2 + *(int *)(v13 + 20), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_240F1CC90();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return (v16 & 1) != 0;
}

uint64_t NeuralNetwork.SamePaddingParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  v11 = type metadata accessor for NeuralNetwork.SamePaddingParameters();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240CE964C(v1, v13 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  strcpy((char *)(v14 + 32), "asymmetryMode");
  *(_WORD *)(v14 + 46) = -4864;
  *(_QWORD *)(v14 + 72) = &type metadata for NeuralNetwork.SamePaddingParameters.AsymmetryMode;
  v15 = *(_BYTE *)(v1 + 8) == 1 && *(_QWORD *)v1 != 0;
  *(_BYTE *)(v14 + 48) = v15;
  v16 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v16);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  return sub_240F1CFA8();
}

uint64_t NeuralNetwork.SamePaddingParameters.AsymmetryMode.hash(into:)()
{
  return sub_240F1CF48();
}

BOOL static NeuralNetwork.SamePaddingParameters.AsymmetryMode.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

void *static NeuralNetwork.SamePaddingParameters.AsymmetryMode.allCases.getter()
{
  return &unk_251110360;
}

uint64_t NeuralNetwork.SamePaddingParameters.AsymmetryMode.hashValue.getter()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  return sub_240F1CF78();
}

uint64_t sub_240CE95C0()
{
  sub_240F1CF3C();
  sub_240F1CF48();
  return sub_240F1CF78();
}

void sub_240CE9600(_QWORD *a1@<X8>)
{
  *a1 = &unk_251110360;
}

uint64_t type metadata accessor for NeuralNetwork.SamePaddingParameters()
{
  uint64_t result;

  result = qword_25708DD18;
  if (!qword_25708DD18)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240CE964C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.SamePaddingParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240CE9690()
{
  return sub_240C30D44(&qword_25708DCF8, type metadata accessor for Proto_SamePadding, (uint64_t)&unk_240F4BECC);
}

unint64_t sub_240CE96C0()
{
  unint64_t result;

  result = qword_25708DD00;
  if (!qword_25708DD00)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.SamePaddingParameters.AsymmetryMode, &type metadata for NeuralNetwork.SamePaddingParameters.AsymmetryMode);
    atomic_store(result, (unint64_t *)&qword_25708DD00);
  }
  return result;
}

unint64_t sub_240CE9700()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708DD08;
  if (!qword_25708DD08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708DD10);
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25708DD08);
  }
  return result;
}

uint64_t _s21SamePaddingParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_SamePadding(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(v4 + 20);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s21SamePaddingParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s21SamePaddingParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s21SamePaddingParametersVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s21SamePaddingParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s21SamePaddingParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s21SamePaddingParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE99F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_24();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s21SamePaddingParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CE9A2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_24();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240CE9A58()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_SamePadding(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t _s21SamePaddingParametersV13AsymmetryModeOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_240CE9B0C + 4 * byte_240F29285[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_240CE9B40 + 4 * asc_240F29280[v4]))();
}

uint64_t sub_240CE9B40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CE9B48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240CE9B50);
  return result;
}

uint64_t sub_240CE9B5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240CE9B64);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_240CE9B68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240CE9B70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.SamePaddingParameters.AsymmetryMode()
{
  return &type metadata for NeuralNetwork.SamePaddingParameters.AsymmetryMode;
}

uint64_t OUTLINED_FUNCTION_0_24()
{
  return type metadata accessor for Proto_SamePadding(0);
}

uint64_t sub_240CE9B9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;

  v3 = type metadata accessor for Proto_DenseVector(0);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  v4 = *(_QWORD *)(a1 + 16);
  v5 = MEMORY[0x24BEE4AF8];
  if (v4)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_240BF0A0C();
    v5 = v14;
    type metadata accessor for DenseSupportVector(0);
    OUTLINED_FUNCTION_51_2();
    v7 = a1 + v6;
    v9 = *(_QWORD *)(v8 + 72);
    do
    {
      sub_240BE0BF4(v7, v1, type metadata accessor for Proto_DenseVector);
      v10 = *(_QWORD *)(v14 + 16);
      if (v10 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_240BF0A0C();
      OUTLINED_FUNCTION_78_3();
      sub_240BE0B90(v1, v11 + v12 * v10, type metadata accessor for Proto_DenseVector);
      v7 += v9;
      --v4;
    }
    while (v4);
  }
  return v5;
}

BOOL static DenseSupportVectorCollection.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_240CEA8DC(a1, a2, (uint64_t (*)(_QWORD, _QWORD))sub_240BEC2E0, type metadata accessor for Proto_DenseSupportVectors);
}

uint64_t DenseSupportVectorCollection.vectors.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;
  uint64_t v16;

  v1 = OUTLINED_FUNCTION_20_18();
  MEMORY[0x24BDAC7A8](v1);
  v3 = (char *)&v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = *v0;
  v5 = *(_QWORD *)(*v0 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v16 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_55_0();
    sub_240BF047C();
    v6 = v16;
    OUTLINED_FUNCTION_5_34();
    OUTLINED_FUNCTION_51_2();
    v15 = v4;
    v8 = v4 + v7;
    v10 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240BE0BF4(v8, (uint64_t)v3, type metadata accessor for Proto_DenseVector);
      v16 = v6;
      v11 = *(_QWORD *)(v6 + 16);
      if (v11 >= *(_QWORD *)(v6 + 24) >> 1)
      {
        sub_240BF047C();
        v6 = v16;
      }
      OUTLINED_FUNCTION_78_3();
      sub_240BE0B90((uint64_t)v3, v12 + v13 * v11, type metadata accessor for DenseSupportVector);
      v8 += v10;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v6;
}

void sub_240CE9E18()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  DenseSupportVectorCollection.vectors.setter(v0);
}

void DenseSupportVectorCollection.vectors.setter(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_26_16(a1);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_152_0();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void (*DenseSupportVectorCollection.vectors.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = DenseSupportVectorCollection.vectors.getter();
  return sub_240CE9EAC;
}

void sub_240CE9EAC(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t *)a1[3];
  if ((a2 & 1) != 0)
  {
    v3 = swift_bridgeObjectRetain();
    v4 = sub_240CE9B9C(v3);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *v2 = v4;
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_26_16(*a1);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *v2 = v5;
    OUTLINED_FUNCTION_6_2();
  }
}

void DenseSupportVectorCollection.init(vectors:)(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;

  *a2 = MEMORY[0x24BEE4AF8];
  type metadata accessor for Proto_DenseSupportVectors(0);
  OUTLINED_FUNCTION_17_7();
  v4 = OUTLINED_FUNCTION_26_16(a1);
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_152_0();
  *a2 = v4;
  OUTLINED_FUNCTION_12_1();
}

uint64_t type metadata accessor for DenseSupportVector(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DE30);
}

uint64_t DenseSupportVectorCollection.startIndex.getter()
{
  DenseSupportVectorCollection.vectors.getter();
  swift_bridgeObjectRelease();
  return 0;
}

void DenseSupportVectorCollection.count.getter()
{
  DenseSupportVectorCollection.vectors.getter();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_44();
}

Swift::Int __swiftcall DenseSupportVectorCollection.index(after:)(Swift::Int after)
{
  uint64_t v1;
  Swift::Int result;

  OUTLINED_FUNCTION_38_16();
  swift_bridgeObjectRelease();
  result = v1 + 1;
  if (__OFADD__(v1, 1))
    __break(1u);
  else
    OUTLINED_FUNCTION_44();
  return result;
}

Swift::Int __swiftcall DenseSupportVectorCollection.index(before:)(Swift::Int before)
{
  uint64_t v1;
  Swift::Int result;

  OUTLINED_FUNCTION_38_16();
  swift_bridgeObjectRelease();
  result = v1 - 1;
  if (__OFSUB__(v1, 1))
    __break(1u);
  else
    OUTLINED_FUNCTION_44();
  return result;
}

uint64_t DenseSupportVectorCollection.subscript.getter@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);

  result = DenseSupportVectorCollection.vectors.getter();
  if ((a1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v5 = result;
    if (*(_QWORD *)(result + 16) > a1)
    {
      OUTLINED_FUNCTION_20_18();
      OUTLINED_FUNCTION_51_2();
      sub_240BE0BF4(v5 + v6 + *(_QWORD *)(v7 + 72) * a1, a2, v8);
      return OUTLINED_FUNCTION_223();
    }
  }
  __break(1u);
  return result;
}

void sub_240CEA0AC(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;

  v5 = type metadata accessor for DenseSupportVector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *a3;
  sub_240BE0BF4(a1, (uint64_t)v7, v9);
  DenseSupportVectorCollection.subscript.setter((uint64_t)v7, v8);
}

void DenseSupportVectorCollection.subscript.setter(uint64_t a1, unint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = OUTLINED_FUNCTION_38_16();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((a2 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_240C954E4();
  v5 = v9;
  if ((a2 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v5 + 16) > a2)
  {
    OUTLINED_FUNCTION_20_18();
    OUTLINED_FUNCTION_51_2();
    sub_240CEAECC(v2, v5 + v6 + *(_QWORD *)(v7 + 72) * a2);
    v8 = OUTLINED_FUNCTION_26_16(v5);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_152_0();
    *v3 = v8;
    sub_240BE27A0(v2, type metadata accessor for DenseSupportVector);
    OUTLINED_FUNCTION_6_2();
    return;
  }
LABEL_7:
  __break(1u);
}

void DenseSupportVectorCollection.subscript.modify(unint64_t *a1, unint64_t a2)
{
  unint64_t v2;
  size_t v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = a2;
  a1[1] = v2;
  v5 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for DenseSupportVector(0) - 8) + 64);
  a1[2] = (unint64_t)malloc(v5);
  v6 = malloc(v5);
  a1[3] = (unint64_t)v6;
  v7 = DenseSupportVectorCollection.vectors.getter();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v7 + 16) > a2)
  {
    OUTLINED_FUNCTION_17_24();
    sub_240BE0BF4(v8 + v9 * a2, (uint64_t)v6, type metadata accessor for DenseSupportVector);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_42();
    return;
  }
  __break(1u);
}

void sub_240CEA27C(unint64_t *a1, char a2)
{
  void *v2;
  void *v3;
  unint64_t v4;

  v2 = (void *)a1[2];
  v3 = (void *)a1[3];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_240BE0BF4(a1[3], (uint64_t)v2, type metadata accessor for DenseSupportVector);
    DenseSupportVectorCollection.subscript.setter((uint64_t)v2, v4);
    sub_240BE27A0((uint64_t)v3, type metadata accessor for DenseSupportVector);
  }
  else
  {
    DenseSupportVectorCollection.subscript.setter(a1[3], v4);
  }
  free(v3);
  free(v2);
}

void sub_240CEA2FC(uint64_t a1, unint64_t *a2)
{
  DenseSupportVectorCollection.subscript.setter(a1, *a2);
}

uint64_t (*sub_240CEA304(unint64_t **a1, unint64_t *a2))()
{
  unint64_t *v4;
  unint64_t v5;

  v4 = (unint64_t *)malloc(0x28uLL);
  *a1 = v4;
  DenseSupportVectorCollection.subscript.modify(v4, *a2);
  v4[4] = v5;
  return sub_240C94F54;
}

void sub_240CEA350(int64_t *a1, uint64_t a2)
{
  sub_240DD85FC(a1, *(_QWORD *)a2, *(_QWORD *)(a2 + 8));
}

uint64_t (*sub_240CEA35C(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_240DD87B0();
  v2[4] = v3;
  return sub_240C94F54;
}

void sub_240CEA3A8(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_240DD8B70(a1, a2);
  if (!v3)
    *a3 = v5;
}

uint64_t sub_240CEA3D0(unint64_t *a1, unint64_t *a2)
{
  return sub_240DD8D38(*a1, *a2);
}

void sub_240CEA3DC(uint64_t a1)
{
  sub_240CEAE48(a1);
}

void sub_240CEA3E8(_QWORD *a1@<X8>)
{
  DenseSupportVectorCollection.startIndex.getter();
  *a1 = 0;
  OUTLINED_FUNCTION_44();
}

void sub_240CEA408(_QWORD *a1@<X8>)
{
  uint64_t v2;

  DenseSupportVectorCollection.count.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t (*sub_240CEA428(_QWORD *a1, unint64_t *a2))()
{
  _QWORD *v4;
  uint64_t v5;

  v4 = malloc(0x28uLL);
  *a1 = v4;
  sub_240CEA474(v4, *a2);
  v4[4] = v5;
  return sub_240C94F54;
}

void sub_240CEA474(_QWORD *a1, unint64_t a2)
{
  uint64_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for DenseSupportVector(0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  *a1 = v5;
  v6 = DenseSupportVectorCollection.vectors.getter();
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(v6 + 16) > a2)
  {
    OUTLINED_FUNCTION_17_24();
    sub_240BE0BF4(v7 + v8 * a2, (uint64_t)v5, type metadata accessor for DenseSupportVector);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_42();
    return;
  }
  __break(1u);
}

void sub_240CEA4FC(uint64_t *a1)
{
  void *v1;

  v1 = (void *)*a1;
  sub_240BE27A0(*a1, type metadata accessor for DenseSupportVector);
  OUTLINED_FUNCTION_8_16(v1);
}

void sub_240CEA528()
{
  sub_240DD90D0();
}

uint64_t sub_240CEA534@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_240DD9414();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_240CEA560(_QWORD *a1, _QWORD *a2)
{
  return sub_240DDD2EC(*a1, *a2, a2[1]);
}

uint64_t sub_240CEA570(_QWORD *a1, _QWORD *a2)
{
  return sub_240DDD2F0(*a1, *a2, a2[1]);
}

uint64_t sub_240CEA580(_QWORD *a1, _QWORD *a2)
{
  return sub_240DDD2E0(*a1, a1[1], *a2, a2[1]);
}

void sub_240CEA594(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int v2;

  v2 = OUTLINED_FUNCTION_27_20(a1);
  *v1 = DenseSupportVectorCollection.index(after:)(v2);
  OUTLINED_FUNCTION_44();
}

void sub_240CEA5B4(_QWORD *a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  BOOL v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;

  v4 = OUTLINED_FUNCTION_20_18();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  v6 = *a1;
  v7 = *v1;
  v8 = *(_QWORD *)(*v1 + 16);
  if (v8)
  {
    v16 = *a1;
    v17 = a1;
    v18 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_55_0();
    sub_240BF047C();
    OUTLINED_FUNCTION_5_34();
    OUTLINED_FUNCTION_51_2();
    v10 = v7 + v9;
    v12 = *(_QWORD *)(v11 + 72);
    do
    {
      sub_240BE0BF4(v10, v2, type metadata accessor for Proto_DenseVector);
      v13 = *(_QWORD *)(v18 + 16);
      if (v13 >= *(_QWORD *)(v18 + 24) >> 1)
        sub_240BF047C();
      *(_QWORD *)(v18 + 16) = v13 + 1;
      sub_240BE0B90(v2, v18+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v13, type metadata accessor for DenseSupportVector);
      v10 += v12;
      --v8;
    }
    while (v8);
    swift_release();
    swift_bridgeObjectRelease();
    v6 = v16;
    a1 = v17;
  }
  v14 = __OFADD__(v6, 1);
  v15 = v6 + 1;
  if (v14)
    __break(1u);
  else
    *a1 = v15;
}

void sub_240CEA718(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int v2;

  v2 = OUTLINED_FUNCTION_27_20(a1);
  *v1 = DenseSupportVectorCollection.index(before:)(v2);
  OUTLINED_FUNCTION_44();
}

void sub_240CEA738(uint64_t *a1)
{
  uint64_t v2;

  v2 = *a1;
  DenseSupportVectorCollection.vectors.getter();
  swift_bridgeObjectRelease();
  if (__OFSUB__(v2, 1))
  {
    __break(1u);
  }
  else
  {
    *a1 = v2 - 1;
    OUTLINED_FUNCTION_156();
  }
}

void sub_240CEA770(uint64_t *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  sub_240DD9488(*a1, a2);
  *a3 = v4;
}

uint64_t sub_240CEA798(unint64_t *a1, unint64_t *a2)
{
  return sub_240DD9614(*a1, *a2);
}

void sub_240CEA7A4(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_240BE0BF4(v1, a1, type metadata accessor for DenseSupportVectorCollection);
  DenseSupportVectorCollection.vectors.getter();
  swift_bridgeObjectRelease();
  sub_240BE27A0(v1, type metadata accessor for DenseSupportVectorCollection);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708DDB0) + 36)) = 0;
  OUTLINED_FUNCTION_156();
}

uint64_t DenseSupportVector.values.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240CEA814()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  DenseSupportVector.values.setter(v0);
}

void DenseSupportVector.values.setter(uint64_t a1)
{
  _QWORD *v1;

  OUTLINED_FUNCTION_152_0();
  *v1 = a1;
  OUTLINED_FUNCTION_44();
}

void (*DenseSupportVector.values.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_240C69C50;
}

void DenseSupportVector.init(values:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_5_34();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

BOOL static DenseSupportVector.== infix(_:_:)(_QWORD *a1, char *a2)
{
  return sub_240CEA8DC(a1, a2, sub_240BEACE4, type metadata accessor for Proto_DenseVector);
}

BOOL sub_240CEA8DC(_QWORD *a1, char *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, char *, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  uint64_t v21;

  v8 = OUTLINED_FUNCTION_20_0();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x24BDAC7A8](v8);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v21 - v13;
  if ((a3(*a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v15 = a4(0);
  v16 = (char *)a1 + *(int *)(v15 + 20);
  v17 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v17(v14, v16, v8);
  v17(v12, &a2[*(int *)(v15 + 20)], v8);
  sub_240CEAF3C((uint64_t)&qword_25708BD88);
  v18 = sub_240F1CC90();
  v19 = *(void (**)(char *, uint64_t))(v9 + 8);
  v19(v12, v8);
  v19(v14, v8);
  return (v18 & 1) != 0;
}

void DenseSupportVector.init(arrayLiteral:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_5_34();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t DenseSupportVector.startIndex.getter()
{
  return 0;
}

uint64_t DenseSupportVector.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

Swift::Int __swiftcall DenseSupportVector.index(after:)(Swift::Int after)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFADD__(after, 1);
  result = after + 1;
  if (v1)
    __break(1u);
  return result;
}

Swift::Int __swiftcall DenseSupportVector.index(before:)(Swift::Int before)
{
  BOOL v1;
  Swift::Int result;

  v1 = __OFSUB__(before, 1);
  result = before - 1;
  if (v1)
    __break(1u);
  return result;
}

unint64_t DenseSupportVector.subscript.getter(unint64_t result)
{
  uint64_t v1;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_5;
  }
  if (*(_QWORD *)(*(_QWORD *)v1 + 16) <= result)
LABEL_5:
    __break(1u);
  return result;
}

void sub_240CEAAB0(double *a1, uint64_t a2, unint64_t *a3)
{
  DenseSupportVector.subscript.setter(*a3, *a1);
}

void DenseSupportVector.subscript.setter(unint64_t a1, double a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v5 = *v2;
  OUTLINED_FUNCTION_315();
  v6 = v5;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
  {
    if ((a1 & 0x8000000000000000) == 0)
      goto LABEL_3;
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  OUTLINED_FUNCTION_30_18();
  v6 = v7;
  if ((a1 & 0x8000000000000000) != 0)
    goto LABEL_6;
LABEL_3:
  if (*(_QWORD *)(v6 + 16) > a1)
  {
    *(double *)(v6 + 8 * a1 + 32) = a2;
    OUTLINED_FUNCTION_173();
    *v2 = v6;
    OUTLINED_FUNCTION_66_6();
    return;
  }
LABEL_7:
  __break(1u);
}

void (*DenseSupportVector.subscript.modify(void (*result)(uint64_t *a1, char a2), unint64_t a2))(uint64_t *a1, char a2)
{
  uint64_t v2;

  *((_QWORD *)result + 1) = a2;
  *((_QWORD *)result + 2) = v2;
  if ((a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (*(_QWORD *)(*(_QWORD *)v2 + 16) > a2)
  {
    *(_QWORD *)result = *(_QWORD *)(*(_QWORD *)v2 + 8 * a2 + 32);
    return sub_240CEAB88;
  }
  __break(1u);
  return result;
}

void sub_240CEAB88(uint64_t *a1, char a2)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;

  v4 = (uint64_t *)a1[2];
  v5 = *a1;
  v6 = *v4;
  OUTLINED_FUNCTION_315();
  LOBYTE(v7) = swift_isUniquelyReferenced_nonNull_native();
  if ((a2 & 1) != 0)
  {
    v8 = v6;
    if ((v7 & 1) == 0)
    {
      OUTLINED_FUNCTION_30_18();
      v8 = v7;
    }
    v9 = a1[1];
    if (*(_QWORD *)(v8 + 16) > v9)
      goto LABEL_9;
    __break(1u);
  }
  v8 = v6;
  if ((v7 & 1) == 0)
  {
    OUTLINED_FUNCTION_30_18();
    v8 = v10;
  }
  v9 = a1[1];
  if (*(_QWORD *)(v8 + 16) > v9)
  {
LABEL_9:
    *(_QWORD *)(v8 + 8 * v9 + 32) = v5;
    OUTLINED_FUNCTION_173();
    *v4 = v8;
    OUTLINED_FUNCTION_66_6();
    return;
  }
  __break(1u);
}

void sub_240CEAC24(double *a1, unint64_t *a2)
{
  DenseSupportVector.subscript.setter(*a2, *a1);
}

uint64_t (*sub_240CEAC30(void (**a1)(uint64_t *a1, char a2), unint64_t *a2))()
{
  void (*v4)(uint64_t *, char);

  v4 = (void (*)(uint64_t *, char))malloc(0x28uLL);
  *a1 = v4;
  *((_QWORD *)v4 + 4) = DenseSupportVector.subscript.modify(v4, *a2);
  return sub_240C94F54;
}

void sub_240CEAC7C(uint64_t *a1, uint64_t *a2)
{
  sub_240DD8630(a1, *a2, a2[1]);
}

uint64_t (*sub_240CEAC88(_QWORD *a1))()
{
  _QWORD *v2;
  uint64_t v3;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  sub_240DD8850();
  v2[4] = v3;
  return sub_240C94F54;
}

void sub_240CEACD4(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v5;

  sub_240DD8BB4(a1, a2);
  if (!v3)
    *a3 = v5;
}

uint64_t sub_240CEACFC(_QWORD *a1, _QWORD *a2)
{
  return sub_240DD8C30(*a1, *a2);
}

void sub_240CEAD08(uint64_t a1)
{
  sub_240CEAE48(a1);
}

void sub_240CEAD14(uint64_t *a1@<X8>)
{
  *a1 = DenseSupportVector.count.getter();
  OUTLINED_FUNCTION_44();
}

_QWORD *sub_240CEAD34(_QWORD *result, unint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;

  v3 = *a2;
  if ((*a2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else if (v3 < *(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    *result = *(_QWORD *)(*(_QWORD *)v2 + 8 * v3 + 32);
    return nullsub_1;
  }
  __break(1u);
  return result;
}

void sub_240CEAD74(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  sub_240DD90EC(*a1, a1[1], a2);
}

uint64_t sub_240CEAD80@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_240DD9404();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_240CEADAC(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD9204(*a1, *a2, a2[1]);
}

uint64_t sub_240CEADBC(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD9218(*a1, *a2, a2[1]);
}

uint64_t sub_240CEADCC(uint64_t *a1, uint64_t *a2)
{
  return sub_240DD922C(*a1, a1[1], *a2, a2[1]);
}

void sub_240CEADE0(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int v2;

  v2 = OUTLINED_FUNCTION_27_20(a1);
  *v1 = DenseSupportVector.index(after:)(v2);
  OUTLINED_FUNCTION_44();
}

void sub_240CEAE00(uint64_t a1)
{
  Swift::Int *v1;
  Swift::Int v2;

  v2 = OUTLINED_FUNCTION_27_20(a1);
  *v1 = DenseSupportVector.index(before:)(v2);
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CEAE20@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_240DD9460(*a1);
  *a2 = result;
  return result;
}

void sub_240CEAE48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  char v4;

  v2 = OUTLINED_FUNCTION_27_20(a1);
  *(_QWORD *)v1 = v3(v2);
  *(_BYTE *)(v1 + 8) = v4 & 1;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CEAE74(_QWORD *a1, _QWORD *a2)
{
  return sub_240DD95F0(*a1, *a2);
}

void sub_240CEAE80(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_240BE0B90(v1, a1, type metadata accessor for DenseSupportVector);
  *(_QWORD *)(a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708DE18) + 36)) = 0;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240CEAECC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for DenseSupportVector(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_240CEAF10()
{
  sub_240CEAF3C((uint64_t)&unk_25708DD28);
}

void sub_240CEAF3C(uint64_t a1)
{
  void (*v1)(uint64_t);

  if (!OUTLINED_FUNCTION_37_12(a1))
  {
    v1(255);
    OUTLINED_FUNCTION_31_15();
  }
  OUTLINED_FUNCTION_44();
}

void sub_240CEAF6C()
{
  sub_240CEAF3C((uint64_t)&unk_25708DD30);
}

uint64_t type metadata accessor for DenseSupportVectorCollection(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708DE20);
}

unint64_t sub_240CEAFAC()
{
  return sub_240CEB1DC((uint64_t)&unk_25708DD38);
}

void sub_240CEAFE0()
{
  sub_240CEAF3C((uint64_t)&unk_25708DD50);
}

unint64_t sub_240CEB00C()
{
  return sub_240CEB140((uint64_t)&unk_25708DD58);
}

unint64_t sub_240CEB030()
{
  unint64_t result;

  result = qword_25708DD68;
  if (!qword_25708DD68)
  {
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE1790], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25708DD68);
  }
  return result;
}

unint64_t sub_240CEB06C()
{
  return sub_240CEB1DC((uint64_t)&unk_25708DD70);
}

void sub_240CEB0A0()
{
  sub_240CEAF3C((uint64_t)&unk_25708DD80);
}

unint64_t sub_240CEB0CC()
{
  return sub_240CEB140((uint64_t)&unk_25708DD88);
}

void sub_240CEB0F0()
{
  sub_240CEB510((uint64_t)&unk_25708DD90);
}

unint64_t sub_240CEB11C()
{
  return sub_240CEB140((uint64_t)&unk_25708DD98);
}

unint64_t sub_240CEB140(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  _QWORD v7[2];

  result = OUTLINED_FUNCTION_37_12(a1);
  if (!result)
  {
    v4 = v3;
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708DD60);
    v6 = sub_240CEB030();
    v7[0] = MEMORY[0x24BEE17A8];
    v7[1] = v6;
    result = MEMORY[0x24268C2AC](v4, v5, v7);
    atomic_store(result, v1);
  }
  return result;
}

unint64_t sub_240CEB1A8()
{
  return sub_240CEB1DC((uint64_t)&unk_25708DDA0);
}

unint64_t sub_240CEB1DC(uint64_t a1)
{
  unint64_t *v1;
  unint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = OUTLINED_FUNCTION_37_12(a1);
  if (!result)
  {
    v5 = v4;
    v6 = v3;
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708DD40);
    sub_240CEAF3C(v6);
    v9 = v8;
    result = MEMORY[0x24268C2AC](v5, v7, &v9);
    atomic_store(result, v1);
  }
  return result;
}

void sub_240CEB25C()
{
  sub_240CEB510((uint64_t)&unk_25708DDA8);
}

void sub_240CEB288()
{
  sub_240CEAF3C((uint64_t)&unk_25708DDB8);
}

void sub_240CEB2B4()
{
  sub_240CEAF3C((uint64_t)&unk_25708DDC0);
}

unint64_t sub_240CEB2E4()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25708DDC8;
  if (!qword_25708DDC8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708DDD0);
    sub_240CEAF3C((uint64_t)&unk_25708DDD8);
    v3 = v2;
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE4220], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_25708DDC8);
  }
  return result;
}

void sub_240CEB360()
{
  sub_240CEAF3C((uint64_t)&unk_25708DDE0);
}

unint64_t sub_240CEB390()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25708DDE8;
  if (!qword_25708DDE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708DDD0);
    sub_240CEAF3C((uint64_t)&unk_25708DDF0);
    v3 = v2;
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE4230], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_25708DDE8);
  }
  return result;
}

void sub_240CEB40C()
{
  sub_240CEAF3C((uint64_t)&unk_25708DDF8);
}

void sub_240CEB438()
{
  sub_240CEB510((uint64_t)&unk_25708DE00);
}

unint64_t sub_240CEB468()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  result = qword_25708DE08;
  if (!qword_25708DE08)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708DDD0);
    sub_240CEAF3C((uint64_t)&unk_25708DDE0);
    v3 = v2;
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE4218], v1, &v3);
    atomic_store(result, (unint64_t *)&qword_25708DE08);
  }
  return result;
}

void sub_240CEB4E4()
{
  sub_240CEB510((uint64_t)&unk_25708DE10);
}

void sub_240CEB510(uint64_t a1)
{
  uint64_t *v1;

  if (!OUTLINED_FUNCTION_37_12(a1))
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(v1);
    OUTLINED_FUNCTION_31_15();
  }
  OUTLINED_FUNCTION_44();
}

void sub_240CEB540(uint64_t *a1@<X8>)
{
  *a1 = DenseSupportVectorCollection.vectors.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CEB568(unint64_t *a1@<X1>, uint64_t a2@<X8>)
{
  DenseSupportVectorCollection.subscript.getter(*a1, a2);
  OUTLINED_FUNCTION_44();
}

void sub_240CEB594(uint64_t *a1@<X8>)
{
  *a1 = DenseSupportVector.values.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240CEB5BC(unint64_t *a1@<X1>, _QWORD *a2@<X8>)
{
  uint64_t v3;

  DenseSupportVector.subscript.getter(*a1);
  *a2 = v3;
  OUTLINED_FUNCTION_44();
}

void initializeBufferWithCopyOfBuffer for DenseSupportVectorCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33780(a1, a2, a3, type metadata accessor for Proto_DenseSupportVectors);
}

uint64_t destroy for DenseSupportVectorCollection(uint64_t a1)
{
  return sub_240C7DE44(a1);
}

void initializeWithCopy for DenseSupportVectorCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DE98(a1, a2, a3, type metadata accessor for Proto_DenseSupportVectors);
}

void assignWithCopy for DenseSupportVectorCollection(_QWORD *a1, _QWORD *a2)
{
  sub_240C338D4(a1, a2);
}

void initializeWithTake for DenseSupportVectorCollection(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CEB6D8(a1, a2, a3, type metadata accessor for Proto_DenseSupportVectors);
}

void assignWithTake for DenseSupportVectorCollection(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

uint64_t getEnumTagSinglePayload for DenseSupportVectorCollection()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CEB644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_28_13();
  return OUTLINED_FUNCTION_1_0(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for DenseSupportVectorCollection()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CEB674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_28_13();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CEB690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_DenseSupportVectors);
}

void initializeBufferWithCopyOfBuffer for DenseSupportVector(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33780(a1, a2, a3, type metadata accessor for Proto_DenseVector);
}

uint64_t destroy for DenseSupportVector(uint64_t a1)
{
  return sub_240C7DE44(a1);
}

void initializeWithCopy for DenseSupportVector(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C7DE98(a1, a2, a3, type metadata accessor for Proto_DenseVector);
}

void assignWithCopy for DenseSupportVector(_QWORD *a1, _QWORD *a2)
{
  sub_240C338D4(a1, a2);
}

void initializeWithTake for DenseSupportVector(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240CEB6D8(a1, a2, a3, type metadata accessor for Proto_DenseVector);
}

void sub_240CEB6D8(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = OUTLINED_FUNCTION_20_0();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  OUTLINED_FUNCTION_156();
}

void assignWithTake for DenseSupportVector(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

uint64_t getEnumTagSinglePayload for DenseSupportVector()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CEB748(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_34();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DenseSupportVector()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CEB780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_34();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240CEB7A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_DenseVector);
}

uint64_t OUTLINED_FUNCTION_5_34()
{
  return type metadata accessor for Proto_DenseVector(0);
}

uint64_t OUTLINED_FUNCTION_20_18()
{
  return type metadata accessor for DenseSupportVector(0);
}

uint64_t OUTLINED_FUNCTION_26_16(uint64_t a1)
{
  return sub_240CE9B9C(a1);
}

uint64_t OUTLINED_FUNCTION_27_20(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_28_13()
{
  return type metadata accessor for Proto_DenseSupportVectors(0);
}

void OUTLINED_FUNCTION_30_18()
{
  sub_240C954D4();
}

void OUTLINED_FUNCTION_31_15()
{
  JUMPOUT(0x24268C2ACLL);
}

uint64_t OUTLINED_FUNCTION_35_15()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_37_12(uint64_t a1)
{
  return *(_QWORD *)a1;
}

uint64_t OUTLINED_FUNCTION_38_16()
{
  return DenseSupportVectorCollection.vectors.getter();
}

uint64_t *sub_240CEB848(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v16 = a3[6];
    *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    *(_QWORD *)v17 = *(_QWORD *)v18;
    v17[8] = v18[8];
    v19 = a3[7];
    v20 = (char *)a1 + v19;
    v21 = (char *)a2 + v19;
    v22 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
  }
  return a1;
}

uint64_t type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FC60);
}

uint64_t sub_240CEBA2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Proto_Int64Vector(0);
    else
      v6 = type metadata accessor for Proto_StringVector(0);
    v7 = a1 + *(int *)(v6 + 20);
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 28);
  v10 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_240CEBAEC(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;

  v6 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v9 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v9 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v14 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  *(_QWORD *)v15 = *(_QWORD *)v16;
  v15[8] = v16[8];
  v17 = a3[7];
  v18 = (char *)a1 + v17;
  v19 = (char *)a2 + v17;
  v20 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16))(v18, v19, v20);
  return a1;
}

_QWORD *sub_240CEBC90(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;

  v6 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v10 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    v16 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v16 == 1)
      v17 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v17 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_240F1C930();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v22 = a3[6];
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = *(_QWORD *)v24;
  v23[8] = v24[8];
  *(_QWORD *)v23 = v25;
  v26 = a3[7];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 24))(v27, v28, v29);
  return a1;
}

_QWORD *sub_240CEBF3C(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v6 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v9 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v9 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  *(_QWORD *)v14 = *(_QWORD *)v15;
  v14[8] = v15[8];
  v16 = a3[7];
  v17 = (char *)a1 + v16;
  v18 = (char *)a2 + v16;
  v19 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
  return a1;
}

_QWORD *sub_240CEC0B8(_QWORD *a1, _QWORD *a2, int *a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v6 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v10 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType);
    v15 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v15 == 1)
      v16 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v16 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = a3[6];
  *((_BYTE *)a1 + a3[5]) = *((_BYTE *)a2 + a3[5]);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  *(_QWORD *)v21 = *(_QWORD *)v22;
  v21[8] = v22[8];
  v23 = a3[7];
  v24 = (char *)a1 + v23;
  v25 = (char *)a2 + v23;
  v26 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 40))(v24, v25, v26);
  return a1;
}

uint64_t sub_240CEC320()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240CEC32C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDC8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 254)
  {
    v7 = OUTLINED_FUNCTION_20_0();
    v8 = a1 + *(int *)(a3 + 28);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20));
  if (v9 >= 2)
    return ((v9 + 2147483646) & 0x7FFFFFFF) + 1;
  else
    return 0;
}

