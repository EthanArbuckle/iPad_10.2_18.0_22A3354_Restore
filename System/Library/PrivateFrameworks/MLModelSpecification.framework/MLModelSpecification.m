void NeuralNetwork.ValidPaddingParameters.amount.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = (char *)&v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v7 = (uint64_t *)((char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = OUTLINED_FUNCTION_17();
  sub_240BE0B08(v1 + *(int *)(v8 + 20), (uint64_t)v4);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    *v7 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_53();
    sub_240BE0B68((uint64_t)v4, &qword_25708BCA0);
  }
  else
  {
    sub_240BE0B90((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_BorderAmounts);
  }
  sub_240BE0B90((uint64_t)v7, a1, type metadata accessor for Proto_BorderAmounts);
  OUTLINED_FUNCTION_42();
}

void sub_240BDF504(uint64_t a1@<X8>)
{
  NeuralNetwork.ValidPaddingParameters.amount.getter(a1);
}

void sub_240BDF524(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t (*v4)(_QWORD);
  uint64_t v5;

  type metadata accessor for NeuralNetwork.Border(0);
  MEMORY[0x24BDAC7A8]();
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BE0BF4(a1, (uint64_t)v3, v4);
  NeuralNetwork.ValidPaddingParameters.amount.setter((uint64_t)v3);
}

void NeuralNetwork.ValidPaddingParameters.amount.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BE0BF4(a1, (uint64_t)v5, type metadata accessor for Proto_BorderAmounts);
  v6 = OUTLINED_FUNCTION_17();
  v7 = v1 + *(int *)(v6 + 20);
  OUTLINED_FUNCTION_37(v6, &qword_25708BCA0);
  sub_240BE0B90((uint64_t)v5, v7, type metadata accessor for Proto_BorderAmounts);
  v8 = __swift_storeEnumTagSinglePayload(v7, 0, 1, v3);
  OUTLINED_FUNCTION_31(v8, type metadata accessor for NeuralNetwork.Border);
  OUTLINED_FUNCTION_42();
}

void (*NeuralNetwork.ValidPaddingParameters.amount.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  size_t v7;
  _QWORD *v8;
  size_t v9;
  void *v10;
  uint64_t v11;

  v3 = malloc(0x40uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
  v5 = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v3[1] = v5;
  v6 = OUTLINED_FUNCTION_23();
  v3[2] = v6;
  v7 = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  v3[3] = malloc(v7);
  v8 = malloc(v7);
  v3[4] = v8;
  v9 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_16() - 8) + 64);
  v3[5] = malloc(v9);
  v10 = malloc(v9);
  v3[6] = v10;
  v11 = *(int *)(OUTLINED_FUNCTION_17() + 20);
  *((_DWORD *)v3 + 14) = v11;
  sub_240BE0B08(v1 + v11, (uint64_t)v5);
  if (__swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6) == 1)
  {
    *v8 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_53();
    sub_240BE0B68((uint64_t)v5, &qword_25708BCA0);
  }
  else
  {
    sub_240BE0B90((uint64_t)v5, (uint64_t)v8, type metadata accessor for Proto_BorderAmounts);
  }
  sub_240BE0B90((uint64_t)v8, (uint64_t)v10, type metadata accessor for Proto_BorderAmounts);
  return sub_240BDF794;
}

void sub_240BDF794()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;

  OUTLINED_FUNCTION_22();
  v1 = *(void **)v0;
  v2 = *(void **)(*(_QWORD *)v0 + 40);
  v3 = *(void **)(*(_QWORD *)v0 + 48);
  v4 = *(void **)(*(_QWORD *)v0 + 24);
  v5 = *(void **)(*(_QWORD *)v0 + 32);
  v6 = *(void **)(*(_QWORD *)v0 + 8);
  v7 = **(_QWORD **)v0 + *(int *)(*(_QWORD *)v0 + 56);
  if ((v8 & 1) != 0)
  {
    sub_240BE0BF4(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v2, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_52((uint64_t)v2, (uint64_t)v4);
    sub_240BE0B68(v7, &qword_25708BCA0);
    sub_240BE0B90((uint64_t)v4, v7, type metadata accessor for Proto_BorderAmounts);
    OUTLINED_FUNCTION_32();
    sub_240BE10B8((uint64_t)v2, type metadata accessor for NeuralNetwork.Border);
  }
  else
  {
    sub_240BE0BF4(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v4, type metadata accessor for Proto_BorderAmounts);
    sub_240BE0B68(v7, &qword_25708BCA0);
    sub_240BE0B90((uint64_t)v4, v7, type metadata accessor for Proto_BorderAmounts);
    OUTLINED_FUNCTION_32();
  }
  sub_240BE10B8((uint64_t)v3, type metadata accessor for NeuralNetwork.Border);
  free(v3);
  free(v2);
  free(v5);
  free(v4);
  free(v6);
  free(v1);
}

void NeuralNetwork.ValidPaddingParameters.leadingHeight.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_7(v3, v12);
  OUTLINED_FUNCTION_56();
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_3(v4, v5, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v2 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_55();
  sub_240BE0BF4(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_43(v1, v8, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_39(v9, &qword_25708BCA8);
  if ((*v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_31(v10, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
    OUTLINED_FUNCTION_34(v11, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_58();
    OUTLINED_FUNCTION_13();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_240BDF9B0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.ValidPaddingParameters.leadingHeight.getter();
  *a1 = v2;
}

void sub_240BDF9D8()
{
  NeuralNetwork.ValidPaddingParameters.leadingHeight.setter();
}

void NeuralNetwork.ValidPaddingParameters.leadingHeight.setter()
{
  __n128 **v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v15 = v4;
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_27();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_6(v5, v14);
  OUTLINED_FUNCTION_51();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_4(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_40(v8, v9, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if ((v15 & 0x8000000000000000) == 0)
  {
    *v2 = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
    v10 = (__n128 *)OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_57(v10, (__n128)xmmword_240F1D370);
    OUTLINED_FUNCTION_14((uint64_t)v2, v3);
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_36(v11, &qword_25708BCA8);
    OUTLINED_FUNCTION_47();
    *v0 = v10;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_37(v12, &qword_25708BCA0);
    OUTLINED_FUNCTION_20();
    v13 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_38(v13, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_1();
    return;
  }
LABEL_7:
  __break(1u);
}

void NeuralNetwork.ValidPaddingParameters.leadingHeight.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.ValidPaddingParameters.leadingHeight.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BDFBA0()
{
  NeuralNetwork.ValidPaddingParameters.leadingHeight.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.ValidPaddingParameters.trailingHeight.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_7(v3, v12);
  OUTLINED_FUNCTION_56();
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v4 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_3(v4, v5, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v2 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = OUTLINED_FUNCTION_55();
  sub_240BE0BF4(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_43(v1, v8, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_39(v9, &qword_25708BCA8);
  if ((*(_QWORD *)(v0 + 8) & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_31(v10, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
    OUTLINED_FUNCTION_34(v11, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_58();
    OUTLINED_FUNCTION_13();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_240BDFCB0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.ValidPaddingParameters.trailingHeight.getter();
  *a1 = v2;
}

void sub_240BDFCD8()
{
  NeuralNetwork.ValidPaddingParameters.trailingHeight.setter();
}

void NeuralNetwork.ValidPaddingParameters.trailingHeight.setter()
{
  __n128 **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v15 = v4;
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_27();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_6(v5, v14);
  OUTLINED_FUNCTION_51();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v6 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_4(v6, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v8 = OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_40(v8, v9, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if ((v15 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)(v2 + 8) = v15;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
    v10 = (__n128 *)OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_57(v10, (__n128)xmmword_240F1D370);
    OUTLINED_FUNCTION_14(v2, v3);
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_36(v11, &qword_25708BCA8);
    OUTLINED_FUNCTION_47();
    *v0 = v10;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_37(v12, &qword_25708BCA0);
    OUTLINED_FUNCTION_20();
    v13 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_38(v13, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_1();
    return;
  }
LABEL_7:
  __break(1u);
}

void NeuralNetwork.ValidPaddingParameters.trailingHeight.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.ValidPaddingParameters.trailingHeight.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BDFEA0()
{
  NeuralNetwork.ValidPaddingParameters.trailingHeight.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.ValidPaddingParameters.leadingWidth.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_7(v4, v13);
  OUTLINED_FUNCTION_56();
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_3(v5, v6, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v2 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = v1 + *(int *)(v3 + 36);
  v8 = OUTLINED_FUNCTION_55();
  sub_240BE0BF4(v8, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_43(v7, v9, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_39(v10, &qword_25708BCA8);
  if ((*v0 & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_31(v11, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
    OUTLINED_FUNCTION_34(v12, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_58();
    OUTLINED_FUNCTION_13();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_240BDFFB4(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.ValidPaddingParameters.leadingWidth.getter();
  *a1 = v2;
}

void sub_240BDFFDC()
{
  NeuralNetwork.ValidPaddingParameters.leadingWidth.setter();
}

void NeuralNetwork.ValidPaddingParameters.leadingWidth.setter()
{
  __n128 **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22();
  v16 = v4;
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_27();
  v5 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_6(v6, v15);
  OUTLINED_FUNCTION_51();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_4(v7, v8, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_40(v9, v10, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if ((v16 & 0x8000000000000000) == 0)
  {
    *v5 = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
    v11 = (__n128 *)OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_57(v11, (__n128)xmmword_240F1D370);
    OUTLINED_FUNCTION_14(v2, v3);
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_36(v12, &qword_25708BCA8);
    OUTLINED_FUNCTION_47();
    *v0 = v11;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_37(v13, &qword_25708BCA0);
    OUTLINED_FUNCTION_20();
    v14 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_38(v14, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_1();
    return;
  }
LABEL_7:
  __break(1u);
}

void NeuralNetwork.ValidPaddingParameters.leadingWidth.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.ValidPaddingParameters.leadingWidth.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE01A4()
{
  NeuralNetwork.ValidPaddingParameters.leadingWidth.setter();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.ValidPaddingParameters.trailingWidth.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_7(v4, v13);
  OUTLINED_FUNCTION_56();
  if (!v2)
  {
    __break(1u);
    goto LABEL_6;
  }
  v5 = OUTLINED_FUNCTION_24();
  OUTLINED_FUNCTION_3(v5, v6, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v2 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v7 = v1 + *(int *)(v3 + 36);
  v8 = OUTLINED_FUNCTION_55();
  sub_240BE0BF4(v8, v7, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  OUTLINED_FUNCTION_43(v7, v9, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
  OUTLINED_FUNCTION_39(v10, &qword_25708BCA8);
  if ((*(_QWORD *)(v0 + 8) & 0x8000000000000000) == 0)
  {
    OUTLINED_FUNCTION_31(v11, type metadata accessor for NeuralNetwork.Border.EdgeSizes);
    OUTLINED_FUNCTION_34(v12, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_58();
    OUTLINED_FUNCTION_13();
    return;
  }
LABEL_7:
  __break(1u);
}

void sub_240BE02B8(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.ValidPaddingParameters.trailingWidth.getter();
  *a1 = v2;
}

void sub_240BE02E0()
{
  NeuralNetwork.ValidPaddingParameters.trailingWidth.setter();
}

void NeuralNetwork.ValidPaddingParameters.trailingWidth.setter()
{
  __n128 **v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  __n128 *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22();
  v16 = v4;
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_27();
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_6(v6, v15);
  OUTLINED_FUNCTION_51();
  if (!v1)
  {
    __break(1u);
    goto LABEL_6;
  }
  v7 = OUTLINED_FUNCTION_12();
  OUTLINED_FUNCTION_4(v7, v8, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if (v1 == 1)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v9 = OUTLINED_FUNCTION_26();
  OUTLINED_FUNCTION_40(v9, v10, type metadata accessor for Proto_BorderAmounts.EdgeSizes);
  if ((v16 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)(v5 + 8) = v16;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
    v11 = (__n128 *)OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_57(v11, (__n128)xmmword_240F1D370);
    OUTLINED_FUNCTION_14(v2, v3);
    OUTLINED_FUNCTION_19();
    OUTLINED_FUNCTION_9();
    OUTLINED_FUNCTION_21();
    OUTLINED_FUNCTION_36(v12, &qword_25708BCA8);
    OUTLINED_FUNCTION_47();
    *v0 = v11;
    OUTLINED_FUNCTION_11();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_37(v13, &qword_25708BCA0);
    OUTLINED_FUNCTION_20();
    v14 = OUTLINED_FUNCTION_15();
    OUTLINED_FUNCTION_38(v14, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_1();
    return;
  }
LABEL_7:
  __break(1u);
}

void NeuralNetwork.ValidPaddingParameters.trailingWidth.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  NeuralNetwork.ValidPaddingParameters.trailingWidth.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE04A8()
{
  NeuralNetwork.ValidPaddingParameters.trailingWidth.setter();
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.ValidPaddingParameters.init()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_54();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

void NeuralNetwork.ValidPaddingParameters.init(amount:)(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_48();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v8 = a2 + *(int *)(OUTLINED_FUNCTION_17() + 20);
  OUTLINED_FUNCTION_54();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v5);
  sub_240BE0BF4(a1, v2, type metadata accessor for NeuralNetwork.Border);
  sub_240BE0BF4(v2, (uint64_t)v7, type metadata accessor for Proto_BorderAmounts);
  sub_240BE0B68(v8, &qword_25708BCA0);
  sub_240BE0B90((uint64_t)v7, v8, type metadata accessor for Proto_BorderAmounts);
  __swift_storeEnumTagSinglePayload(v8, 0, 1, v5);
  sub_240BE10B8(v2, type metadata accessor for NeuralNetwork.Border);
  sub_240BE10B8(a1, type metadata accessor for NeuralNetwork.Border);
}

void NeuralNetwork.ValidPaddingParameters.init(leadingHeight:trailingHeight:leadingWidth:trailingWidth:)()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  v39 = v3;
  v40 = v2;
  v5 = v4;
  v7 = v6;
  v9 = v8;
  v10 = OUTLINED_FUNCTION_23();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_0();
  v15 = MEMORY[0x24BDAC7A8](v14);
  v38 = (uint64_t)&v37 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_27();
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  v21 = (uint64_t *)((char *)&v37 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0));
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v22 = v9 + *(int *)(OUTLINED_FUNCTION_17() + 20);
  OUTLINED_FUNCTION_54();
  __swift_storeEnumTagSinglePayload(v23, v24, v25, v10);
  *v21 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_53();
  v26 = OUTLINED_FUNCTION_24();
  *v0 = 0;
  v0[1] = 0;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  if (v7 < 0)
  {
    __break(1u);
    goto LABEL_7;
  }
  *v0 = v7;
  if (v5 < 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  v0[1] = v5;
  v27 = (_QWORD *)((char *)v0 + *(int *)(v17 + 36));
  *v27 = 0;
  v27[1] = 0;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  if (v40 < 0)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  *v27 = v40;
  if ((v39 & 0x8000000000000000) == 0)
  {
    v27[1] = v39;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB0);
    v28 = *(_QWORD *)(v26 - 8);
    v39 = (uint64_t)v13;
    v40 = v10;
    v29 = *(_QWORD *)(v28 + 72);
    v30 = (*(unsigned __int8 *)(v28 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v28 + 80);
    v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_240F1D370;
    OUTLINED_FUNCTION_52((uint64_t)v0, v1);
    OUTLINED_FUNCTION_28(v1, v31 + v30);
    v32 = (uint64_t)v27;
    v33 = v38;
    OUTLINED_FUNCTION_52(v32, v38);
    OUTLINED_FUNCTION_28(v33, v31 + v30 + v29);
    OUTLINED_FUNCTION_36(v34, &qword_25708BCA8);
    swift_bridgeObjectRelease();
    *v21 = v31;
    v35 = v39;
    OUTLINED_FUNCTION_14((uint64_t)v21, v39);
    sub_240BE0B68(v22, &qword_25708BCA0);
    OUTLINED_FUNCTION_28(v35, v22);
    v36 = __swift_storeEnumTagSinglePayload(v22, 0, 1, v40);
    OUTLINED_FUNCTION_34(v36, type metadata accessor for NeuralNetwork.Border);
    OUTLINED_FUNCTION_1();
    return;
  }
LABEL_9:
  __break(1u);
}

void NeuralNetwork.ValidPaddingParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v19[2];

  OUTLINED_FUNCTION_22();
  v19[1] = v2;
  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  type metadata accessor for NeuralNetwork.ValidPaddingParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4(v0, v1, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_240F1D380;
  *(_QWORD *)(v8 + 32) = 0x746E756F6D61;
  *(_QWORD *)(v8 + 40) = 0xE600000000000000;
  *(_QWORD *)(v8 + 72) = OUTLINED_FUNCTION_16();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v8 + 48));
  NeuralNetwork.ValidPaddingParameters.amount.getter((uint64_t)boxed_opaque_existential_0);
  strcpy((char *)(v8 + 80), "leadingHeight");
  *(_WORD *)(v8 + 94) = -4864;
  NeuralNetwork.ValidPaddingParameters.leadingHeight.getter();
  v10 = MEMORY[0x24BEE1768];
  *(_QWORD *)(v8 + 96) = v11;
  *(_QWORD *)(v8 + 120) = v10;
  strcpy((char *)(v8 + 128), "trailingHeight");
  *(_BYTE *)(v8 + 143) = -18;
  NeuralNetwork.ValidPaddingParameters.trailingHeight.getter();
  *(_QWORD *)(v8 + 144) = v12;
  *(_QWORD *)(v8 + 168) = v10;
  strcpy((char *)(v8 + 176), "leadingWidth");
  *(_BYTE *)(v8 + 189) = 0;
  *(_WORD *)(v8 + 190) = -5120;
  NeuralNetwork.ValidPaddingParameters.leadingWidth.getter();
  *(_QWORD *)(v8 + 192) = v13;
  *(_QWORD *)(v8 + 216) = v10;
  strcpy((char *)(v8 + 224), "trailingWidth");
  *(_WORD *)(v8 + 238) = -4864;
  NeuralNetwork.ValidPaddingParameters.trailingWidth.getter();
  *(_QWORD *)(v8 + 264) = v10;
  *(_QWORD *)(v8 + 240) = v14;
  sub_240F1CF84();
  OUTLINED_FUNCTION_54();
  __swift_storeEnumTagSinglePayload(v15, v16, v17, v18);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t __swift_instantiateConcreteTypeFromMangledName(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24268C294]((char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

uint64_t sub_240BE0B08(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

void sub_240BE0B68(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(a2);
  OUTLINED_FUNCTION_33(v2);
  OUTLINED_FUNCTION_44();
}

void sub_240BE0B90(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_41(a1, a2, a3);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_44();
}

uint64_t type metadata accessor for NeuralNetwork.ValidPaddingParameters()
{
  uint64_t result;

  result = qword_25708BCD0;
  if (!qword_25708BCD0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240BE0BF4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_41(a1, a2, a3);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_44();
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

unint64_t sub_240BE0C60()
{
  unint64_t result;
  uint64_t valid;

  result = qword_25708BCC8;
  if (!qword_25708BCC8)
  {
    valid = type metadata accessor for Proto_ValidPadding(255);
    result = MEMORY[0x24268C2AC](&unk_240F4F5A4, valid);
    atomic_store(result, (unint64_t *)&qword_25708BCC8);
  }
  return result;
}

char *_s22ValidPaddingParametersVwCP(char *a1, uint64_t *a2)
{
  uint64_t valid;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);
  uint64_t v9;
  char *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  valid = type metadata accessor for Proto_ValidPadding(0);
  v5 = *(_DWORD *)(*(_QWORD *)(valid - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = (char *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = valid;
    v7 = sub_240F1C930();
    v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, (char *)a2, v7);
    v9 = *(int *)(v6 + 20);
    v10 = &a1[v9];
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for Proto_BorderAmounts(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v10 = *v11;
      v15 = *(int *)(v12 + 20);
      v16 = &v10[v15];
      v17 = (char *)v11 + v15;
      swift_bridgeObjectRetain();
      v8(v16, v17, v7);
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t _s22ValidPaddingParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = sub_240F1C930();
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v6(a1, v2);
  v3 = a1 + *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
  v4 = type metadata accessor for Proto_BorderAmounts(0);
  result = __swift_getEnumTagSinglePayload(v3, 1, v4);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return v6(v3 + *(int *)(v4 + 20), v2);
  }
  return result;
}

uint64_t _s22ValidPaddingParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;

  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Proto_BorderAmounts(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *v7 = *v8;
    v11 = *(int *)(v9 + 20);
    v12 = (char *)v7 + v11;
    v13 = (char *)v8 + v11;
    swift_bridgeObjectRetain();
    v5((uint64_t)v12, (uint64_t)v13, v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

uint64_t _s22ValidPaddingParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  v7 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_BorderAmounts(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      *v8 = *v9;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v6((uint64_t)v8 + *(int *)(v10 + 20), (uint64_t)v9 + *(int *)(v10 + 20), v4);
      return a1;
    }
    sub_240BE10B8((uint64_t)v8, type metadata accessor for Proto_BorderAmounts);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  *v8 = *v9;
  v13 = *(int *)(v10 + 20);
  v14 = (char *)v8 + v13;
  v15 = (char *)v9 + v13;
  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v16(v14, v15, v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

void sub_240BE10B8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_33(v2);
  OUTLINED_FUNCTION_44();
}

char *_s22ValidPaddingParametersVwtk(char *a1, char *a2)
{
  uint64_t v4;
  void (*v5)(char *, char *, uint64_t);
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = sub_240F1C930();
  v5 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = type metadata accessor for Proto_BorderAmounts(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v7 = *(_QWORD *)v8;
    v5(&v7[*(int *)(v9 + 20)], &v8[*(int *)(v9 + 20)], v4);
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  return a1;
}

uint64_t _s22ValidPaddingParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  uint64_t v13;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  v7 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_BorderAmounts(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (!EnumTagSinglePayload)
  {
    if (!v12)
    {
      *v8 = *v9;
      swift_bridgeObjectRelease();
      v6((uint64_t)v8 + *(int *)(v10 + 20), (uint64_t)v9 + *(int *)(v10 + 20), v4);
      return a1;
    }
    sub_240BE10B8((uint64_t)v8, type metadata accessor for Proto_BorderAmounts);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    return a1;
  }
  *v8 = *v9;
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))((char *)v8 + *(int *)(v10 + 20), (char *)v9 + *(int *)(v10 + 20), v4);
  __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  return a1;
}

uint64_t _s22ValidPaddingParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE130C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_17();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s22ValidPaddingParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE1348(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_17();
  return OUTLINED_FUNCTION_35(a1, a2, a2, v4);
}

uint64_t sub_240BE1378()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ValidPadding(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2()
{
  return type metadata accessor for NeuralNetwork.Border(0);
}

void OUTLINED_FUNCTION_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0BF4(v3+ ((*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80)), v4, a3);
}

void OUTLINED_FUNCTION_4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = *(unsigned __int8 *)(*(_QWORD *)(a1 - 8) + 80);
  sub_240BE0BF4(v4 + ((v5 + 32) & ~v5), v3, a3);
}

uint64_t OUTLINED_FUNCTION_5()
{
  return type metadata accessor for NeuralNetwork.Border(0);
}

void OUTLINED_FUNCTION_6(uint64_t a1@<X8>, uint64_t a2)
{
  NeuralNetwork.ValidPaddingParameters.amount.getter((uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

void OUTLINED_FUNCTION_7(uint64_t a1@<X8>, uint64_t a2)
{
  NeuralNetwork.ValidPaddingParameters.amount.getter((uint64_t)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0));
}

uint64_t OUTLINED_FUNCTION_8()
{
  return type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
}

void OUTLINED_FUNCTION_9()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240BE0BF4(v1, *(_QWORD *)(v2 - 112), v0);
}

void OUTLINED_FUNCTION_11()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240BE0BF4(v2, v1, v0);
}

uint64_t OUTLINED_FUNCTION_12()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v1;
  *(_QWORD *)(v3 - 96) = v0;
  return type metadata accessor for Proto_BorderAmounts.EdgeSizes(0);
}

void OUTLINED_FUNCTION_14(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_15()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, *(_QWORD *)(v1 - 96));
}

uint64_t OUTLINED_FUNCTION_16()
{
  return type metadata accessor for NeuralNetwork.Border(0);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return type metadata accessor for Proto_ValidPadding(0);
}

void OUTLINED_FUNCTION_19()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240BE0B90(v1, v2, v0);
}

void OUTLINED_FUNCTION_20()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240BE0B90(v2, v1, v0);
}

void OUTLINED_FUNCTION_21()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  sub_240BE0B90(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_23()
{
  return type metadata accessor for Proto_BorderAmounts(0);
}

uint64_t OUTLINED_FUNCTION_24()
{
  return type metadata accessor for Proto_BorderAmounts.EdgeSizes(0);
}

uint64_t OUTLINED_FUNCTION_25()
{
  return type metadata accessor for NeuralNetwork.Border.EdgeSizes(0);
}

uint64_t OUTLINED_FUNCTION_26()
{
  uint64_t v0;
  uint64_t v1;

  return v1 + *(_QWORD *)(v0 + 72);
}

void OUTLINED_FUNCTION_28(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_29()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_31(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240BE10B8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_32()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
}

uint64_t OUTLINED_FUNCTION_33(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

void OUTLINED_FUNCTION_34(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240BE10B8(v2, a2);
}

uint64_t OUTLINED_FUNCTION_35(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

void OUTLINED_FUNCTION_36(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

void OUTLINED_FUNCTION_37(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

void OUTLINED_FUNCTION_38(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  sub_240BE10B8(v2, a2);
}

void OUTLINED_FUNCTION_39(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

void OUTLINED_FUNCTION_40(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0BF4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_41(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

void OUTLINED_FUNCTION_43(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0BF4(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_47()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_49@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_50(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 8) = v1;
  return result;
}

void OUTLINED_FUNCTION_52(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_53()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_55()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(_QWORD *)(v1 + 72);
}

__n128 *OUTLINED_FUNCTION_57(__n128 *result, __n128 a2)
{
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_58()
{
  uint64_t v0;

  return v0;
}

uint64_t NeuralNetwork.Layer.LoopParameters.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = 0;
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  v2 = type metadata accessor for Proto_LoopLayerParams(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v3 = (uint64_t)a1 + *(int *)(v2 + 28);
  v4 = type metadata accessor for Proto_NeuralNetwork(0);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  return __swift_storeEnumTagSinglePayload((uint64_t)a1 + *(int *)(v2 + 32), 1, 1, v4);
}

void sub_240BE1804()
{
  sub_240BE18B8(&qword_25708BCE0, type metadata accessor for Proto_CopyLayerParams, (uint64_t)&unk_240F4F52C);
}

void sub_240BE1830()
{
  sub_240BE18B8(&qword_25708BCE8, type metadata accessor for Proto_LoopLayerParams, (uint64_t)&unk_240F4F4B4);
}

void sub_240BE185C()
{
  sub_240BE18B8(&qword_25708BCF0, type metadata accessor for Proto_LoopBreakLayerParams, (uint64_t)&unk_240F4F43C);
}

void sub_240BE188C()
{
  sub_240BE18B8(&qword_25708BCF8, type metadata accessor for Proto_LoopContinueLayerParams, (uint64_t)&unk_240F4F3C4);
}

void sub_240BE18B8(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x24268C2AC](a3, v5), a1);
  }
  OUTLINED_FUNCTION_44();
}

uint64_t _s14CopyParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE1918()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_11_0();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s14CopyParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE1940()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_0();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.CopyParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708BD00);
}

uint64_t sub_240BE1970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10]);
}

uint64_t *_s14LoopParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t updated;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  _QWORD *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;

  v4 = type metadata accessor for Proto_LoopLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    a1[2] = a2[2];
    v7 = *(int *)(v4 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    v12 = *(int *)(v6 + 28);
    v13 = (uint64_t *)((char *)a1 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for Proto_NeuralNetwork(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      *v13 = *v14;
      v13[1] = v18;
      v13[2] = v14[2];
      *((_BYTE *)v13 + 24) = *((_BYTE *)v14 + 24);
      v13[4] = v14[4];
      *((_BYTE *)v13 + 40) = *((_BYTE *)v14 + 40);
      v19 = *(int *)(v15 + 32);
      v20 = (char *)v13 + v19;
      v44 = v15;
      v21 = v10;
      v22 = v11;
      v23 = (char *)v14 + v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v24 = v23;
      v11 = v22;
      v10 = v21;
      v15 = v44;
      v11(v20, v24, v10);
      v25 = *(int *)(v44 + 36);
      v26 = (char *)v13 + v25;
      v27 = (char *)v14 + v25;
      updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, updated))
      {
        v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
      }
      else
      {
        v11(v26, v27, v10);
        *(_QWORD *)&v26[*(int *)(updated + 20)] = *(_QWORD *)&v27[*(int *)(updated + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, updated);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v44);
    }
    v30 = *(int *)(v6 + 32);
    v31 = (uint64_t *)((char *)a1 + v30);
    v32 = (uint64_t *)((char *)a2 + v30);
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v15))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
      memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      v34 = v32[1];
      *v31 = *v32;
      v31[1] = v34;
      v31[2] = v32[2];
      *((_BYTE *)v31 + 24) = *((_BYTE *)v32 + 24);
      v31[4] = v32[4];
      *((_BYTE *)v31 + 40) = *((_BYTE *)v32 + 40);
      v35 = *(int *)(v15 + 32);
      v36 = (char *)v31 + v35;
      v37 = (char *)v32 + v35;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11(v36, v37, v10);
      v38 = *(int *)(v15 + 36);
      v39 = (char *)v31 + v38;
      v40 = (char *)v32 + v38;
      v41 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v40, 1, v41))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v39, v40, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        v11(v39, v40, v10);
        *(_QWORD *)&v39[*(int *)(v41 + 20)] = *(_QWORD *)&v40[*(int *)(v41 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v39, 0, 1, v41);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v15);
    }
  }
  return a1;
}

uint64_t _s14LoopParametersVwxx(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t result;
  uint64_t v12;
  uint64_t v13;

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
  v3 = a1 + v2[6];
  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = a1 + v2[7];
  v7 = type metadata accessor for Proto_NeuralNetwork(0);
  if (!__swift_getEnumTagSinglePayload(v6, 1, v7))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v6 + *(int *)(v7 + 32), v4);
    v8 = v6 + *(int *)(v7 + 36);
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (!__swift_getEnumTagSinglePayload(v8, 1, updated))
    {
      v5(v8, v4);
      swift_release();
    }
  }
  v10 = a1 + v2[8];
  result = __swift_getEnumTagSinglePayload(v10, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5(v10 + *(int *)(v7 + 32), v4);
    v12 = v10 + *(int *)(v7 + 36);
    v13 = type metadata accessor for Proto_NetworkUpdateParameters(0);
    result = __swift_getEnumTagSinglePayload(v12, 1, v13);
    if (!(_DWORD)result)
    {
      v5(v12, v4);
      return swift_release();
    }
  }
  return result;
}

uint64_t _s14LoopParametersVwcp(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t updated;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
  v5 = v4[6];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = v4[7];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  v13 = type metadata accessor for Proto_NeuralNetwork(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v15 = v12[1];
    *v11 = *v12;
    v11[1] = v15;
    v11[2] = v12[2];
    *((_BYTE *)v11 + 24) = *((_BYTE *)v12 + 24);
    v11[4] = v12[4];
    *((_BYTE *)v11 + 40) = *((_BYTE *)v12 + 40);
    v16 = *(int *)(v13 + 32);
    v17 = (char *)v11 + v16;
    v41 = v13;
    v18 = v8;
    v19 = v9;
    v20 = (char *)v12 + v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21 = v20;
    v9 = v19;
    v8 = v18;
    v13 = v41;
    v9((uint64_t)v17, (uint64_t)v21, v8);
    v22 = *(int *)(v41 + 36);
    v23 = (char *)v11 + v22;
    v24 = (char *)v12 + v22;
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, updated))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v9((uint64_t)v23, (uint64_t)v24, v8);
      *(_QWORD *)&v23[*(int *)(updated + 20)] = *(_QWORD *)&v24[*(int *)(updated + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, updated);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v41);
  }
  v27 = v4[8];
  v28 = (_QWORD *)(a1 + v27);
  v29 = (_QWORD *)(a2 + v27);
  if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v13))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    v31 = v29[1];
    *v28 = *v29;
    v28[1] = v31;
    v28[2] = v29[2];
    *((_BYTE *)v28 + 24) = *((_BYTE *)v29 + 24);
    v28[4] = v29[4];
    *((_BYTE *)v28 + 40) = *((_BYTE *)v29 + 40);
    v32 = *(int *)(v13 + 32);
    v33 = (char *)v28 + v32;
    v34 = (char *)v29 + v32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v9((uint64_t)v33, (uint64_t)v34, v8);
    v35 = *(int *)(v13 + 36);
    v36 = (char *)v28 + v35;
    v37 = (char *)v29 + v35;
    v38 = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v9((uint64_t)v36, (uint64_t)v37, v8);
      *(_QWORD *)&v36[*(int *)(v38 + 20)] = *(_QWORD *)&v37[*(int *)(v38 + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v13);
  }
  return a1;
}

_QWORD *_s14LoopParametersVwca(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t updated;
  int v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(uint64_t, char *, uint64_t);
  uint64_t v51;
  char *v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  size_t v56;
  void *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  int v64;
  uint64_t v65;
  uint64_t v66;
  int *v68;
  uint64_t v69;
  void (*v70)(char *, char *, uint64_t);
  void (*v71)(char *, char *, uint64_t);

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
  v5 = v4[6];
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = v4[7];
  v12 = (uint64_t)a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = type metadata accessor for Proto_NeuralNetwork(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    if (v16)
    {
      sub_240BE27A0(v12, type metadata accessor for Proto_NeuralNetwork);
      goto LABEL_7;
    }
    *(_QWORD *)v12 = *(_QWORD *)v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v13 + 16);
    *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
    *(_QWORD *)(v12 + 16) = v31;
    v32 = *(_QWORD *)(v13 + 32);
    *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
    *(_QWORD *)(v12 + 32) = v32;
    v71 = v10;
    v10((char *)(v12 + *(int *)(v14 + 32)), (char *)(v13 + *(int *)(v14 + 32)), v8);
    v33 = *(int *)(v14 + 36);
    v34 = (char *)(v12 + v33);
    v35 = (char *)(v13 + v33);
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    v37 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, updated);
    v38 = __swift_getEnumTagSinglePayload((uint64_t)v35, 1, updated);
    if (v37)
    {
      if (!v38)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v34, v35, v8);
        *(_QWORD *)&v34[*(int *)(updated + 20)] = *(_QWORD *)&v35[*(int *)(updated + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v34, 0, 1, updated);
LABEL_16:
        v10 = v71;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v38)
      {
        v10 = v71;
        v71(v34, v35, v8);
        *(_QWORD *)&v34[*(int *)(updated + 20)] = *(_QWORD *)&v35[*(int *)(updated + 20)];
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_240BE27A0((uint64_t)v34, type metadata accessor for Proto_NetworkUpdateParameters);
    }
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_7:
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_17;
  }
  v68 = v4;
  v69 = v9;
  v70 = v10;
  *(_QWORD *)v12 = *(_QWORD *)v13;
  *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
  v17 = *(_QWORD *)(v13 + 16);
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_QWORD *)(v12 + 16) = v17;
  v18 = *(_QWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
  *(_QWORD *)(v12 + 32) = v18;
  v19 = *(int *)(v14 + 32);
  v20 = v12 + v19;
  v21 = v8;
  v22 = v13 + v19;
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v24 = v22;
  v8 = v21;
  v23(v20, v24, v21);
  v25 = *(int *)(v14 + 36);
  v26 = (char *)(v12 + v25);
  v27 = (char *)(v13 + v25);
  v28 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v27, 1, v28))
  {
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v29 - 8) + 64));
  }
  else
  {
    v23((uint64_t)v26, (uint64_t)v27, v21);
    *(_QWORD *)&v26[*(int *)(v28 + 20)] = *(_QWORD *)&v27[*(int *)(v28 + 20)];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v28);
  }
  v10 = v70;
  v4 = v68;
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
  v9 = v69;
LABEL_17:
  v40 = v4[8];
  v41 = (uint64_t)a1 + v40;
  v42 = (char *)a2 + v40;
  v43 = __swift_getEnumTagSinglePayload((uint64_t)a1 + v40, 1, v14);
  v44 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v14);
  if (v43)
  {
    if (!v44)
    {
      *(_QWORD *)v41 = *(_QWORD *)v42;
      *(_QWORD *)(v41 + 8) = *((_QWORD *)v42 + 1);
      v45 = *((_QWORD *)v42 + 2);
      *(_BYTE *)(v41 + 24) = v42[24];
      *(_QWORD *)(v41 + 16) = v45;
      v46 = *((_QWORD *)v42 + 4);
      *(_BYTE *)(v41 + 40) = v42[40];
      *(_QWORD *)(v41 + 32) = v46;
      v47 = *(int *)(v14 + 32);
      v48 = v41 + v47;
      v49 = &v42[v47];
      v50 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v50(v48, v49, v8);
      v51 = *(int *)(v14 + 36);
      v52 = (char *)(v41 + v51);
      v53 = &v42[v51];
      v54 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v53, 1, v54))
      {
        v55 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v52, v53, *(_QWORD *)(*(_QWORD *)(v55 - 8) + 64));
      }
      else
      {
        v50((uint64_t)v52, v53, v8);
        *(_QWORD *)&v52[*(int *)(v54 + 20)] = *(_QWORD *)&v53[*(int *)(v54 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v52, 0, 1, v54);
      }
      v65 = v41;
      v66 = v14;
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  if (v44)
  {
    sub_240BE27A0(v41, type metadata accessor for Proto_NeuralNetwork);
LABEL_23:
    v56 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18) - 8) + 64);
    v57 = (void *)v41;
    goto LABEL_24;
  }
  *(_QWORD *)v41 = *(_QWORD *)v42;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v41 + 8) = *((_QWORD *)v42 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v58 = *((_QWORD *)v42 + 2);
  *(_BYTE *)(v41 + 24) = v42[24];
  *(_QWORD *)(v41 + 16) = v58;
  v59 = *((_QWORD *)v42 + 4);
  *(_BYTE *)(v41 + 40) = v42[40];
  *(_QWORD *)(v41 + 32) = v59;
  v10((char *)(v41 + *(int *)(v14 + 32)), &v42[*(int *)(v14 + 32)], v8);
  v60 = *(int *)(v14 + 36);
  v61 = v41 + v60;
  v42 += v60;
  v62 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  v63 = __swift_getEnumTagSinglePayload(v61, 1, v62);
  v64 = __swift_getEnumTagSinglePayload((uint64_t)v42, 1, v62);
  if (v63)
  {
    if (!v64)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 16))(v61, v42, v8);
      *(_QWORD *)(v61 + *(int *)(v62 + 20)) = *(_QWORD *)&v42[*(int *)(v62 + 20)];
      swift_retain();
      v65 = v61;
      v66 = v62;
LABEL_30:
      __swift_storeEnumTagSinglePayload(v65, 0, 1, v66);
      return a1;
    }
  }
  else
  {
    if (!v64)
    {
      v10((char *)v61, v42, v8);
      *(_QWORD *)(v61 + *(int *)(v62 + 20)) = *(_QWORD *)&v42[*(int *)(v62 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_240BE27A0(v61, type metadata accessor for Proto_NetworkUpdateParameters);
  }
  v56 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10) - 8) + 64);
  v57 = (void *)v61;
LABEL_24:
  memcpy(v57, v42, v56);
  return a1;
}

void sub_240BE27A0(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  OUTLINED_FUNCTION_44();
}

uint64_t _s14LoopParametersVwtk(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  _OWORD *v11;
  _OWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t updated;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  _OWORD *v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v4 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
  v5 = v4[6];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = v4[7];
  v11 = (_OWORD *)(a1 + v10);
  v12 = (_OWORD *)(a2 + v10);
  v13 = type metadata accessor for Proto_NeuralNetwork(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    *((_QWORD *)v11 + 2) = *((_QWORD *)v12 + 2);
    *((_BYTE *)v11 + 24) = *((_BYTE *)v12 + 24);
    *((_QWORD *)v11 + 4) = *((_QWORD *)v12 + 4);
    *((_BYTE *)v11 + 40) = *((_BYTE *)v12 + 40);
    v9((uint64_t)v11 + *(int *)(v13 + 32), (uint64_t)v12 + *(int *)(v13 + 32), v8);
    v15 = *(int *)(v13 + 36);
    v16 = (char *)v11 + v15;
    v17 = (char *)v12 + v15;
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, updated))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      v9((uint64_t)v16, (uint64_t)v17, v8);
      *(_QWORD *)&v16[*(int *)(updated + 20)] = *(_QWORD *)&v17[*(int *)(updated + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, updated);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v20 = v4[8];
  v21 = (_OWORD *)(a1 + v20);
  v22 = (_OWORD *)(a2 + v20);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v13))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    *v21 = *v22;
    *((_QWORD *)v21 + 2) = *((_QWORD *)v22 + 2);
    *((_BYTE *)v21 + 24) = *((_BYTE *)v22 + 24);
    *((_QWORD *)v21 + 4) = *((_QWORD *)v22 + 4);
    *((_BYTE *)v21 + 40) = *((_BYTE *)v22 + 40);
    v9((uint64_t)v21 + *(int *)(v13 + 32), (uint64_t)v22 + *(int *)(v13 + 32), v8);
    v24 = *(int *)(v13 + 36);
    v25 = (char *)v21 + v24;
    v26 = (char *)v22 + v24;
    v27 = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v9((uint64_t)v25, (uint64_t)v26, v8);
      *(_QWORD *)&v25[*(int *)(v27 + 20)] = *(_QWORD *)&v26[*(int *)(v27 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v13);
  }
  return a1;
}

uint64_t _s14LoopParametersVwta(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  void (*v17)(uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t updated;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  int v34;
  int v35;
  void (*v36)(uint64_t, char *, uint64_t);
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  size_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v52;
  void (*v53)(uint64_t, uint64_t, uint64_t);
  void (*v54)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
  v5 = v4[6];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = v4[7];
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Proto_NeuralNetwork(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    if (v16)
    {
      sub_240BE27A0(v12, type metadata accessor for Proto_NeuralNetwork);
      goto LABEL_7;
    }
    *(_QWORD *)v12 = *(_QWORD *)v13;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 8) = *(_QWORD *)(v13 + 8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
    *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
    *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
    *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
    v54 = v10;
    v10(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v8);
    v24 = *(int *)(v14 + 36);
    v25 = (char *)(v12 + v24);
    v26 = (char *)(v13 + v24);
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, updated);
    v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, updated);
    if (v28)
    {
      if (!v29)
      {
        (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v25, v26, v8);
        *(_QWORD *)&v25[*(int *)(updated + 20)] = *(_QWORD *)&v26[*(int *)(updated + 20)];
        __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, updated);
LABEL_16:
        v10 = v54;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v29)
      {
        v10 = v54;
        v54((uint64_t)v25, (uint64_t)v26, v8);
        *(_QWORD *)&v25[*(int *)(updated + 20)] = *(_QWORD *)&v26[*(int *)(updated + 20)];
        swift_release();
        goto LABEL_17;
      }
      sub_240BE27A0((uint64_t)v25, type metadata accessor for Proto_NetworkUpdateParameters);
    }
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    goto LABEL_16;
  }
  if (v16)
  {
LABEL_7:
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    goto LABEL_17;
  }
  v52 = v9;
  v53 = v10;
  *(_OWORD *)v12 = *(_OWORD *)v13;
  *(_QWORD *)(v12 + 16) = *(_QWORD *)(v13 + 16);
  *(_BYTE *)(v12 + 24) = *(_BYTE *)(v13 + 24);
  *(_QWORD *)(v12 + 32) = *(_QWORD *)(v13 + 32);
  *(_BYTE *)(v12 + 40) = *(_BYTE *)(v13 + 40);
  v17 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32);
  v17(v12 + *(int *)(v14 + 32), v13 + *(int *)(v14 + 32), v8);
  v18 = *(int *)(v14 + 36);
  v19 = (char *)(v12 + v18);
  v20 = (char *)(v13 + v18);
  v21 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
  {
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
  }
  else
  {
    v17((uint64_t)v19, (uint64_t)v20, v8);
    *(_QWORD *)&v19[*(int *)(v21 + 20)] = *(_QWORD *)&v20[*(int *)(v21 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  }
  v10 = v53;
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
  v9 = v52;
LABEL_17:
  v31 = v4[8];
  v32 = a1 + v31;
  v33 = (char *)(a2 + v31);
  v34 = __swift_getEnumTagSinglePayload(a1 + v31, 1, v14);
  v35 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v14);
  if (v34)
  {
    if (!v35)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
      *(_BYTE *)(v32 + 24) = v33[24];
      *(_QWORD *)(v32 + 32) = *((_QWORD *)v33 + 4);
      *(_BYTE *)(v32 + 40) = v33[40];
      v36 = *(void (**)(uint64_t, char *, uint64_t))(v9 + 32);
      v36(v32 + *(int *)(v14 + 32), &v33[*(int *)(v14 + 32)], v8);
      v37 = *(int *)(v14 + 36);
      v38 = (char *)(v32 + v37);
      v39 = &v33[v37];
      v40 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v39, 1, v40))
      {
        v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v38, v39, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      }
      else
      {
        v36((uint64_t)v38, v39, v8);
        *(_QWORD *)&v38[*(int *)(v40 + 20)] = *(_QWORD *)&v39[*(int *)(v40 + 20)];
        __swift_storeEnumTagSinglePayload((uint64_t)v38, 0, 1, v40);
      }
      v49 = v32;
      v50 = v14;
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  if (v35)
  {
    sub_240BE27A0(v32, type metadata accessor for Proto_NeuralNetwork);
LABEL_23:
    v42 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18) - 8) + 64);
    v43 = (void *)v32;
    goto LABEL_24;
  }
  *(_QWORD *)v32 = *(_QWORD *)v33;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 8) = *((_QWORD *)v33 + 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v32 + 16) = *((_QWORD *)v33 + 2);
  *(_BYTE *)(v32 + 24) = v33[24];
  *(_QWORD *)(v32 + 32) = *((_QWORD *)v33 + 4);
  *(_BYTE *)(v32 + 40) = v33[40];
  v10(v32 + *(int *)(v14 + 32), (uint64_t)&v33[*(int *)(v14 + 32)], v8);
  v44 = *(int *)(v14 + 36);
  v45 = v32 + v44;
  v33 += v44;
  v46 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  v47 = __swift_getEnumTagSinglePayload(v45, 1, v46);
  v48 = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v46);
  if (v47)
  {
    if (!v48)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v9 + 32))(v45, v33, v8);
      *(_QWORD *)(v45 + *(int *)(v46 + 20)) = *(_QWORD *)&v33[*(int *)(v46 + 20)];
      v49 = v45;
      v50 = v46;
LABEL_30:
      __swift_storeEnumTagSinglePayload(v49, 0, 1, v50);
      return a1;
    }
  }
  else
  {
    if (!v48)
    {
      v10(v45, (uint64_t)v33, v8);
      *(_QWORD *)(v45 + *(int *)(v46 + 20)) = *(_QWORD *)&v33[*(int *)(v46 + 20)];
      swift_release();
      return a1;
    }
    sub_240BE27A0(v45, type metadata accessor for Proto_NetworkUpdateParameters);
  }
  v42 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10) - 8) + 64);
  v43 = (void *)v45;
LABEL_24:
  memcpy(v43, v33, v42);
  return a1;
}

uint64_t _s14LoopParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE3048()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_10_0();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s14LoopParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE3070()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_10_0();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LoopParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708BD20);
}

uint64_t sub_240BE30A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LoopLayerParams);
}

uint64_t _s19LoopBreakParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE30B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_0();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s19LoopBreakParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE30E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_0();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LoopBreakParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708BD30);
}

uint64_t _s14CopyParametersVwCP_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (**v2)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_7_0();
  return (*v2)(v1, v0);
}

uint64_t destroy for IdentityModelConfiguration(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

void _s14CopyParametersVwcp_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 16));
  OUTLINED_FUNCTION_44();
}

void _s14CopyParametersVwca_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 24));
  OUTLINED_FUNCTION_44();
}

void _s14CopyParametersVwtk_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 32));
  OUTLINED_FUNCTION_44();
}

void _s14CopyParametersVwta_0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_4_0(*(uint64_t (**)(uint64_t, uint64_t))(v0 + 40));
  OUTLINED_FUNCTION_44();
}

uint64_t _s22LoopContinueParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE321C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_8_0();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s22LoopContinueParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BE3244()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_8_0();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LoopContinueParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708BD40);
}

uint64_t sub_240BE3274(uint64_t a1, uint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240BE32A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  return sub_240F1C930();
}

uint64_t OUTLINED_FUNCTION_1_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_4_0@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return type metadata accessor for Proto_LoopContinueLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_9_0()
{
  return type metadata accessor for Proto_LoopBreakLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return type metadata accessor for Proto_LoopLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_11_0()
{
  return type metadata accessor for Proto_CopyLayerParams(0);
}

uint64_t Model.specificationVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(OUTLINED_FUNCTION_28_0() + 20));
  OUTLINED_FUNCTION_4_1();
  return *(int *)(v1 + 16);
}

void Model.specificationVersion.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  if (a1 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_7;
  }
  v3 = a1;
  if (a1 > 0x7FFFFFFF)
  {
LABEL_7:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_28_0();
  if ((OUTLINED_FUNCTION_389() & 1) == 0)
  {
    OUTLINED_FUNCTION_334();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_176();
    v4 = OUTLINED_FUNCTION_323();
    OUTLINED_FUNCTION_322(v4);
  }
  v5 = *(_QWORD *)(v1 + v2);
  OUTLINED_FUNCTION_16_0();
  *(_DWORD *)(v5 + 16) = v3;
  OUTLINED_FUNCTION_258();
}

void Model.specificationVersion.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = malloc(0x60uLL);
  *a1 = v3;
  v3[10] = v1;
  v4 = *(int *)(OUTLINED_FUNCTION_28_0() + 20);
  *((_DWORD *)v3 + 22) = v4;
  v5 = *(_QWORD *)(v1 + v4);
  OUTLINED_FUNCTION_4_1();
  v3[9] = *(int *)(v5 + 16);
  OUTLINED_FUNCTION_156();
}

void sub_240BE34C4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_66();
  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 72);
  if ((v3 & 1) != 0)
  {
    if (v2 < (uint64_t)0xFFFFFFFF80000000)
    {
      __break(1u);
    }
    else if (v2 <= 0x7FFFFFFF)
    {
      goto LABEL_7;
    }
    __break(1u);
    goto LABEL_12;
  }
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_13:
    __break(1u);
    return;
  }
LABEL_7:
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    OUTLINED_FUNCTION_334();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_176();
    v4 = OUTLINED_FUNCTION_323();
    OUTLINED_FUNCTION_317(v4);
  }
  v5 = *(_QWORD *)(*(_QWORD *)(v1 + 80) + *(int *)(v1 + 88));
  OUTLINED_FUNCTION_16_0();
  *(_DWORD *)(v5 + 16) = v2;
  OUTLINED_FUNCTION_172((void *)v1);
}

void Model.versionString.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];

  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v1 = &v16[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_93(v7, (uint64_t)v4);
  OUTLINED_FUNCTION_7_1((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v10 = OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_131(v10, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v4, v8, type metadata accessor for Proto_ModelDescription);
  }
  v11 = OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_245(v11, v12, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v1, 1, v2);
  if (v9)
  {
    OUTLINED_FUNCTION_79();
    v14 = OUTLINED_FUNCTION_127();
    v15 = OUTLINED_FUNCTION_100(v14);
    OUTLINED_FUNCTION_36(v15, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_12_0((uint64_t)v1, v13, type metadata accessor for Proto_Metadata);
  }
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_13();
}

void sub_240BE3740()
{
  swift_bridgeObjectRetain();
  Model.versionString.setter();
}

void Model.versionString.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_356(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v11 = v10
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_117(v11, (uint64_t)v8);
  v12 = OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v9);
  if (v14)
  {
    OUTLINED_FUNCTION_43_0(MEMORY[0x24BEE4AF8]);
    v15 = OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_163(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_186(v12, v13, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_352();
  OUTLINED_FUNCTION_188(v16, v17, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_108();
    v19 = OUTLINED_FUNCTION_127();
    v20 = OUTLINED_FUNCTION_125(v19);
    OUTLINED_FUNCTION_131(v20, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v5, v18, type metadata accessor for Proto_Metadata);
  }
  v21 = swift_bridgeObjectRelease();
  v22 = v25[0];
  *(_QWORD *)(v1 + 16) = v0;
  *(_QWORD *)(v1 + 24) = v22;
  OUTLINED_FUNCTION_219(v21, &qword_25435FA60);
  OUTLINED_FUNCTION_183(v23, v24, type metadata accessor for Proto_Metadata);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_1();
}

void Model.versionString.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  Model.versionString.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240BE3978(uint64_t a1, char a2)
{
  sub_240BE4560(a1, a2);
}

void Model.modelDescription.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];

  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v1 = &v16[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_93(v7, (uint64_t)v4);
  OUTLINED_FUNCTION_7_1((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v10 = OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_131(v10, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v4, v8, type metadata accessor for Proto_ModelDescription);
  }
  v11 = OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_245(v11, v12, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v1, 1, v2);
  if (v9)
  {
    OUTLINED_FUNCTION_79();
    v14 = OUTLINED_FUNCTION_127();
    v15 = OUTLINED_FUNCTION_100(v14);
    OUTLINED_FUNCTION_36(v15, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_12_0((uint64_t)v1, v13, type metadata accessor for Proto_Metadata);
  }
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_13();
}

void sub_240BE3B34()
{
  swift_bridgeObjectRetain();
  Model.modelDescription.setter();
}

void Model.modelDescription.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_356(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v11 = v10
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_117(v11, (uint64_t)v8);
  v12 = OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v9);
  if (v14)
  {
    OUTLINED_FUNCTION_43_0(MEMORY[0x24BEE4AF8]);
    v15 = OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_163(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_186(v12, v13, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_352();
  OUTLINED_FUNCTION_188(v16, v17, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_108();
    v19 = OUTLINED_FUNCTION_127();
    v20 = OUTLINED_FUNCTION_125(v19);
    OUTLINED_FUNCTION_131(v20, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v5, v18, type metadata accessor for Proto_Metadata);
  }
  v21 = swift_bridgeObjectRelease();
  v22 = v25[0];
  *v1 = v0;
  v1[1] = v22;
  OUTLINED_FUNCTION_219(v21, &qword_25435FA60);
  OUTLINED_FUNCTION_183(v23, v24, type metadata accessor for Proto_Metadata);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_1();
}

void Model.modelDescription.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  Model.modelDescription.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240BE3D6C(uint64_t a1, char a2)
{
  sub_240BE4560(a1, a2);
}

void Model.author.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];

  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v1 = &v16[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_93(v7, (uint64_t)v4);
  OUTLINED_FUNCTION_7_1((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v10 = OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_131(v10, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v4, v8, type metadata accessor for Proto_ModelDescription);
  }
  v11 = OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_245(v11, v12, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v1, 1, v2);
  if (v9)
  {
    OUTLINED_FUNCTION_79();
    v14 = OUTLINED_FUNCTION_127();
    v15 = OUTLINED_FUNCTION_100(v14);
    OUTLINED_FUNCTION_36(v15, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_12_0((uint64_t)v1, v13, type metadata accessor for Proto_Metadata);
  }
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_13();
}

void sub_240BE3F28()
{
  swift_bridgeObjectRetain();
  Model.author.setter();
}

void Model.author.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_356(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v11 = v10
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_117(v11, (uint64_t)v8);
  v12 = OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v9);
  if (v14)
  {
    OUTLINED_FUNCTION_43_0(MEMORY[0x24BEE4AF8]);
    v15 = OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_163(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_186(v12, v13, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_352();
  OUTLINED_FUNCTION_188(v16, v17, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_108();
    v19 = OUTLINED_FUNCTION_127();
    v20 = OUTLINED_FUNCTION_125(v19);
    OUTLINED_FUNCTION_131(v20, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v5, v18, type metadata accessor for Proto_Metadata);
  }
  v21 = swift_bridgeObjectRelease();
  v22 = v25[0];
  *(_QWORD *)(v1 + 32) = v0;
  *(_QWORD *)(v1 + 40) = v22;
  OUTLINED_FUNCTION_219(v21, &qword_25435FA60);
  OUTLINED_FUNCTION_183(v23, v24, type metadata accessor for Proto_Metadata);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_1();
}

void Model.author.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  Model.author.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240BE4160(uint64_t a1, char a2)
{
  sub_240BE4560(a1, a2);
}

void Model.license.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];

  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v1 = &v16[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_93(v7, (uint64_t)v4);
  OUTLINED_FUNCTION_7_1((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v10 = OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_131(v10, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v4, v8, type metadata accessor for Proto_ModelDescription);
  }
  v11 = OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_245(v11, v12, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v1, 1, v2);
  if (v9)
  {
    OUTLINED_FUNCTION_79();
    v14 = OUTLINED_FUNCTION_127();
    v15 = OUTLINED_FUNCTION_100(v14);
    OUTLINED_FUNCTION_36(v15, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_12_0((uint64_t)v1, v13, type metadata accessor for Proto_Metadata);
  }
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_13();
}

void sub_240BE431C()
{
  swift_bridgeObjectRetain();
  Model.license.setter();
}

void Model.license.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[4];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_356(v2, v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_284();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v11 = v10
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_117(v11, (uint64_t)v8);
  v12 = OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v9);
  if (v14)
  {
    OUTLINED_FUNCTION_43_0(MEMORY[0x24BEE4AF8]);
    v15 = OUTLINED_FUNCTION_78();
    OUTLINED_FUNCTION_163(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_186(v12, v13, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_352();
  OUTLINED_FUNCTION_188(v16, v17, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v14)
  {
    OUTLINED_FUNCTION_108();
    v19 = OUTLINED_FUNCTION_127();
    v20 = OUTLINED_FUNCTION_125(v19);
    OUTLINED_FUNCTION_131(v20, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v5, v18, type metadata accessor for Proto_Metadata);
  }
  v21 = swift_bridgeObjectRelease();
  v22 = v25[0];
  *(_QWORD *)(v1 + 48) = v0;
  *(_QWORD *)(v1 + 56) = v22;
  OUTLINED_FUNCTION_219(v21, &qword_25435FA60);
  OUTLINED_FUNCTION_183(v23, v24, type metadata accessor for Proto_Metadata);
  OUTLINED_FUNCTION_73();
  OUTLINED_FUNCTION_1();
}

void Model.license.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_390(a1);
  Model.license.getter();
  *v1 = v2;
  v1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240BE4554(uint64_t a1, char a2)
{
  sub_240BE4560(a1, a2);
}

void sub_240BE4560(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_358();
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_358();
    OUTLINED_FUNCTION_156();
  }
}

void Model.metadata.getter()
{
  uint64_t v0;
  _BYTE *v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE v16[32];

  OUTLINED_FUNCTION_66();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v1 = &v16[-((v0 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v2 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_93(v7, (uint64_t)v4);
  OUTLINED_FUNCTION_7_1((uint64_t)v4, 1, v5);
  if (v9)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v10 = OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_131(v10, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v4, v8, type metadata accessor for Proto_ModelDescription);
  }
  v11 = OUTLINED_FUNCTION_307();
  OUTLINED_FUNCTION_245(v11, v12, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v1, 1, v2);
  if (v9)
  {
    OUTLINED_FUNCTION_79();
    v14 = OUTLINED_FUNCTION_127();
    v15 = OUTLINED_FUNCTION_100(v14);
    OUTLINED_FUNCTION_36(v15, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_12_0((uint64_t)v1, v13, type metadata accessor for Proto_Metadata);
  }
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_13();
}

void sub_240BE4754()
{
  swift_bridgeObjectRetain();
  Model.metadata.setter();
}

void Model.metadata.setter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  uint64_t v6;
  _BYTE *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _BYTE v21[32];

  OUTLINED_FUNCTION_22();
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FA60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = &v21[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v5 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FEC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v7 = &v21[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v8 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v12 = v11
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_207(v12, (uint64_t)v7);
  OUTLINED_FUNCTION_7_1((uint64_t)v7, 1, v8);
  if (v13)
  {
    v14 = MEMORY[0x24BEE4AF8];
    *v10 = MEMORY[0x24BEE4AF8];
    v10[1] = 0;
    v10[2] = 0xE000000000000000;
    v10[3] = v14;
    v10[4] = v14;
    v10[5] = 0;
    v10[6] = 0xE000000000000000;
    v10[7] = 0;
    v10[8] = 0xE000000000000000;
    v10[9] = v14;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v15 = OUTLINED_FUNCTION_65((uint64_t)v10 + *(int *)(v8 + 48));
    OUTLINED_FUNCTION_219(v15, &qword_25435FEC0);
  }
  else
  {
    sub_240BF0410((uint64_t)v7, (uint64_t)v10, type metadata accessor for Proto_ModelDescription);
  }
  v17 = (uint64_t)v10 + *(int *)(v8 + 48);
  OUTLINED_FUNCTION_242(v17, v16, &qword_25435FA60);
  OUTLINED_FUNCTION_7_1((uint64_t)v4, 1, v5);
  if (v13)
  {
    *v0 = 0;
    v0[1] = 0xE000000000000000;
    v0[2] = 0;
    v0[3] = 0xE000000000000000;
    v0[4] = 0;
    v0[5] = 0xE000000000000000;
    v0[6] = 0;
    v0[7] = 0xE000000000000000;
    v0[8] = OUTLINED_FUNCTION_127();
    v19 = _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_212(v19, &qword_25435FA60);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v4, v18, type metadata accessor for Proto_Metadata);
  }
  v20 = OUTLINED_FUNCTION_346();
  v0[8] = v2;
  OUTLINED_FUNCTION_36(v20, &qword_25435FA60);
  sub_240BF0410((uint64_t)v0, v17, type metadata accessor for Proto_Metadata);
  OUTLINED_FUNCTION_71(v17, 0);
  sub_240D73150();
  OUTLINED_FUNCTION_1();
}

void Model.metadata.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  Model.metadata.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE49E0(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))Model.metadata.setter);
}

void Model.inputs.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  _BYTE v17[48];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v7, (uint64_t)v2);
  if (OUTLINED_FUNCTION_98() == 1)
  {
    OUTLINED_FUNCTION_42_0();
    v9 = (uint64_t)&v5[*(int *)(v3 + 48)];
    v10 = OUTLINED_FUNCTION_31_0();
    v13 = OUTLINED_FUNCTION_18_0(v9, v11, v12, v10);
    OUTLINED_FUNCTION_126(v13, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v2, v8, type metadata accessor for Proto_ModelDescription);
  }
  v14 = *((_QWORD *)v5 + 3);
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_210();
  if (*(_QWORD *)(v14 + 16))
  {
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_237();
    OUTLINED_FUNCTION_67();
    do
    {
      OUTLINED_FUNCTION_54_0((uint64_t)v5, v0);
      OUTLINED_FUNCTION_146();
      if (v15)
        OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_344();
    }
    while (!v16);
    OUTLINED_FUNCTION_275();
  }
  else
  {
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_382();
  OUTLINED_FUNCTION_1();
}

void sub_240BE4B7C()
{
  swift_bridgeObjectRetain();
  Model.inputs.setter();
}

void Model.inputs.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v3 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_122(v4, v5, type metadata accessor for Proto_FeatureDescription, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0510, (uint64_t (*)(_QWORD))type metadata accessor for FeatureDescription);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v7, v2);
  OUTLINED_FUNCTION_7_1(v2, 1, v3);
  if (v9)
  {
    OUTLINED_FUNCTION_41_0(MEMORY[0x24BEE4AF8]);
    v10 = v0 + *(int *)(v3 + 48);
    v11 = OUTLINED_FUNCTION_31_0();
    v14 = OUTLINED_FUNCTION_18_0(v10, v12, v13, v11);
    OUTLINED_FUNCTION_39(v14, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v2, v8, type metadata accessor for Proto_ModelDescription);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 24) = v1;
  OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240BE4CB8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  _QWORD v21[2];
  uint64_t v22;

  v10 = *(_QWORD *)(a3(0) - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)v21 - v11;
  v13 = *(_QWORD *)(a1 + 16);
  v14 = MEMORY[0x24BEE4AF8];
  if (v13)
  {
    v21[0] = a4;
    v21[1] = v5;
    v22 = MEMORY[0x24BEE4AF8];
    a4(0, v13, 0);
    v14 = v22;
    v15 = *(_QWORD *)(a5(0) - 8);
    v16 = a1 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
    v17 = *(_QWORD *)(v15 + 72);
    do
    {
      sub_240BF04E8(v16, (uint64_t)v12, a3);
      v22 = v14;
      v19 = *(_QWORD *)(v14 + 16);
      v18 = *(_QWORD *)(v14 + 24);
      if (v19 >= v18 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v21[0])(v18 > 1, v19 + 1, 1);
        v14 = v22;
      }
      *(_QWORD *)(v14 + 16) = v19 + 1;
      sub_240BF0410((uint64_t)v12, v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v19, a3);
      v16 += v17;
      --v13;
    }
    while (v13);
  }
  return v14;
}

void Model.inputs.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  Model.inputs.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE4E44(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))Model.inputs.setter);
}

void Model.outputs.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  _BYTE v17[48];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v7, (uint64_t)v2);
  if (OUTLINED_FUNCTION_98() == 1)
  {
    OUTLINED_FUNCTION_42_0();
    v9 = (uint64_t)&v5[*(int *)(v3 + 48)];
    v10 = OUTLINED_FUNCTION_31_0();
    v13 = OUTLINED_FUNCTION_18_0(v9, v11, v12, v10);
    OUTLINED_FUNCTION_126(v13, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v2, v8, type metadata accessor for Proto_ModelDescription);
  }
  v14 = *((_QWORD *)v5 + 4);
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_210();
  if (*(_QWORD *)(v14 + 16))
  {
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_237();
    OUTLINED_FUNCTION_67();
    do
    {
      OUTLINED_FUNCTION_54_0((uint64_t)v5, v0);
      OUTLINED_FUNCTION_146();
      if (v15)
        OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_344();
    }
    while (!v16);
    OUTLINED_FUNCTION_275();
  }
  else
  {
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_382();
  OUTLINED_FUNCTION_1();
}

void sub_240BE4FE0()
{
  swift_bridgeObjectRetain();
  Model.outputs.setter();
}

void Model.outputs.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v3 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_122(v4, v5, type metadata accessor for Proto_FeatureDescription, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0510, (uint64_t (*)(_QWORD))type metadata accessor for FeatureDescription);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v7, v2);
  OUTLINED_FUNCTION_7_1(v2, 1, v3);
  if (v9)
  {
    OUTLINED_FUNCTION_41_0(MEMORY[0x24BEE4AF8]);
    v10 = v0 + *(int *)(v3 + 48);
    v11 = OUTLINED_FUNCTION_31_0();
    v14 = OUTLINED_FUNCTION_18_0(v10, v12, v13, v11);
    OUTLINED_FUNCTION_39(v14, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v2, v8, type metadata accessor for Proto_ModelDescription);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 32) = v1;
  OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_13();
}

void Model.outputs.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  Model.outputs.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE5148(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))Model.outputs.setter);
}

void Model.predictedFeatureName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_7_1(v0, 1, v2);
  if (v7)
  {
    OUTLINED_FUNCTION_69(MEMORY[0x24BEE4AF8]);
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = OUTLINED_FUNCTION_31_0();
    v12 = OUTLINED_FUNCTION_18_0(v8, v10, v11, v9);
    OUTLINED_FUNCTION_39(v12, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v0, v6, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_328();
  OUTLINED_FUNCTION_42();
}

void sub_240BE5250()
{
  swift_bridgeObjectRetain();
  Model.predictedFeatureName.setter();
}

void Model.predictedFeatureName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_66();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v9 = v8
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_149(v9, (uint64_t)v6);
  OUTLINED_FUNCTION_7_1((uint64_t)v6, 1, v7);
  if (v11)
  {
    OUTLINED_FUNCTION_72(MEMORY[0x24BEE4AF8]);
    v12 = v0 + *(int *)(v7 + 48);
    v13 = OUTLINED_FUNCTION_31_0();
    v16 = OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
    OUTLINED_FUNCTION_212(v16, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v6, v10, type metadata accessor for Proto_ModelDescription);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = v4;
  *(_QWORD *)(v0 + 48) = v2;
  OUTLINED_FUNCTION_215();
  OUTLINED_FUNCTION_13();
}

void Model.predictedFeatureName.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_66();
  v2 = OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_230((uint64_t)v2);
  OUTLINED_FUNCTION_216();
  v0[12] = OUTLINED_FUNCTION_119();
  v0[13] = OUTLINED_FUNCTION_119();
  v3 = OUTLINED_FUNCTION_119();
  v0[14] = v3;
  v4 = OUTLINED_FUNCTION_39_0();
  v0[16] = OUTLINED_FUNCTION_120(v4);
  v0[17] = OUTLINED_FUNCTION_152();
  v5 = OUTLINED_FUNCTION_152();
  v0[18] = v5;
  v6 = OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_333(v6);
  v8 = v7
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_149(v8, (uint64_t)v3);
  OUTLINED_FUNCTION_7_1((uint64_t)v3, 1, v1);
  if (v10)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v11 = (uint64_t)v5 + *(int *)(v1 + 48);
    v12 = OUTLINED_FUNCTION_31_0();
    v15 = OUTLINED_FUNCTION_18_0(v11, v13, v14, v12);
    OUTLINED_FUNCTION_126(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v3, v9, type metadata accessor for Proto_ModelDescription);
  }
  v17 = v5[5];
  v16 = v5[6];
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_21_0();
  v0[9] = v17;
  v0[10] = v16;
  OUTLINED_FUNCTION_13();
}

void sub_240BE54B0()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_141();
  v5 = v4
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  v6 = v0[15];
  if ((v7 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_244(v8, v9, &qword_25435FEC0);
    OUTLINED_FUNCTION_175();
    if (v11)
    {
      v1 = v0[15];
      OUTLINED_FUNCTION_62(MEMORY[0x24BEE4AF8]);
      OUTLINED_FUNCTION_337();
      v12 = v6 + *(int *)(v1 + 48);
      v13 = OUTLINED_FUNCTION_31_0();
      v16 = OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
      OUTLINED_FUNCTION_37(v16, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_25_0(v0[12], v10, type metadata accessor for Proto_ModelDescription);
      OUTLINED_FUNCTION_213();
    }
    OUTLINED_FUNCTION_83();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 40) = v3;
    *(_QWORD *)(v1 + 48) = v2;
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_393();
  }
  else
  {
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_242(v5, v17, &qword_25435FEC0);
    OUTLINED_FUNCTION_162();
    if (v11)
    {
      v19 = v0[15];
      v5 = v0[13];
      OUTLINED_FUNCTION_68(MEMORY[0x24BEE4AF8]);
      v20 = v6 + *(int *)(v19 + 48);
      v21 = OUTLINED_FUNCTION_31_0();
      v24 = OUTLINED_FUNCTION_18_0(v20, v22, v23, v21);
      OUTLINED_FUNCTION_39(v24, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_25_0(v0[13], v18, type metadata accessor for Proto_ModelDescription);
    }
    OUTLINED_FUNCTION_83();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 + 40) = v3;
    *(_QWORD *)(v5 + 48) = v2;
    OUTLINED_FUNCTION_215();
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_371();
  OUTLINED_FUNCTION_75(v0);
}

void Model.predictedProbabilitiesName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_7_1(v0, 1, v2);
  if (v7)
  {
    OUTLINED_FUNCTION_69(MEMORY[0x24BEE4AF8]);
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = OUTLINED_FUNCTION_31_0();
    v12 = OUTLINED_FUNCTION_18_0(v8, v10, v11, v9);
    OUTLINED_FUNCTION_39(v12, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v0, v6, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_328();
  OUTLINED_FUNCTION_42();
}

void sub_240BE5718()
{
  swift_bridgeObjectRetain();
  Model.predictedProbabilitiesName.setter();
}

void Model.predictedProbabilitiesName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_66();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v9 = v8
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_149(v9, (uint64_t)v6);
  OUTLINED_FUNCTION_7_1((uint64_t)v6, 1, v7);
  if (v11)
  {
    OUTLINED_FUNCTION_72(MEMORY[0x24BEE4AF8]);
    v12 = v0 + *(int *)(v7 + 48);
    v13 = OUTLINED_FUNCTION_31_0();
    v16 = OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
    OUTLINED_FUNCTION_212(v16, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v6, v10, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_346();
  *(_QWORD *)(v0 + 56) = v4;
  *(_QWORD *)(v0 + 64) = v2;
  OUTLINED_FUNCTION_215();
  OUTLINED_FUNCTION_13();
}

void Model.predictedProbabilitiesName.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_66();
  v2 = OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_230((uint64_t)v2);
  OUTLINED_FUNCTION_216();
  v0[12] = OUTLINED_FUNCTION_119();
  v0[13] = OUTLINED_FUNCTION_119();
  v3 = OUTLINED_FUNCTION_119();
  v0[14] = v3;
  v4 = OUTLINED_FUNCTION_39_0();
  v0[16] = OUTLINED_FUNCTION_120(v4);
  v0[17] = OUTLINED_FUNCTION_152();
  v5 = OUTLINED_FUNCTION_152();
  v0[18] = v5;
  v6 = OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_333(v6);
  v8 = v7
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_149(v8, (uint64_t)v3);
  OUTLINED_FUNCTION_7_1((uint64_t)v3, 1, v1);
  if (v10)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v11 = (uint64_t)v5 + *(int *)(v1 + 48);
    v12 = OUTLINED_FUNCTION_31_0();
    v15 = OUTLINED_FUNCTION_18_0(v11, v13, v14, v12);
    OUTLINED_FUNCTION_126(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v3, v9, type metadata accessor for Proto_ModelDescription);
  }
  v17 = v5[7];
  v16 = v5[8];
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_21_0();
  v0[9] = v17;
  v0[10] = v16;
  OUTLINED_FUNCTION_13();
}

void sub_240BE5974()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_141();
  v5 = v4
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  v6 = v0[15];
  if ((v7 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_244(v8, v9, &qword_25435FEC0);
    OUTLINED_FUNCTION_175();
    if (v11)
    {
      v1 = v0[15];
      OUTLINED_FUNCTION_62(MEMORY[0x24BEE4AF8]);
      OUTLINED_FUNCTION_337();
      v12 = v6 + *(int *)(v1 + 48);
      v13 = OUTLINED_FUNCTION_31_0();
      v16 = OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
      OUTLINED_FUNCTION_37(v16, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_25_0(v0[12], v10, type metadata accessor for Proto_ModelDescription);
      OUTLINED_FUNCTION_213();
    }
    OUTLINED_FUNCTION_83();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 56) = v3;
    *(_QWORD *)(v1 + 64) = v2;
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_393();
  }
  else
  {
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_242(v5, v17, &qword_25435FEC0);
    OUTLINED_FUNCTION_162();
    if (v11)
    {
      v19 = v0[15];
      v5 = v0[13];
      OUTLINED_FUNCTION_68(MEMORY[0x24BEE4AF8]);
      v20 = v6 + *(int *)(v19 + 48);
      v21 = OUTLINED_FUNCTION_31_0();
      v24 = OUTLINED_FUNCTION_18_0(v20, v22, v23, v21);
      OUTLINED_FUNCTION_39(v24, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_25_0(v0[13], v18, type metadata accessor for Proto_ModelDescription);
    }
    OUTLINED_FUNCTION_83();
    OUTLINED_FUNCTION_346();
    *(_QWORD *)(v5 + 56) = v3;
    *(_QWORD *)(v5 + 64) = v2;
    OUTLINED_FUNCTION_215();
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_371();
  OUTLINED_FUNCTION_75(v0);
}

void Model.trainingInput.getter()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE *v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  _BYTE v17[48];

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_392();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v2 = &v17[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v3 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = &v17[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v7, (uint64_t)v2);
  if (OUTLINED_FUNCTION_98() == 1)
  {
    OUTLINED_FUNCTION_42_0();
    v9 = (uint64_t)&v5[*(int *)(v3 + 48)];
    v10 = OUTLINED_FUNCTION_31_0();
    v13 = OUTLINED_FUNCTION_18_0(v9, v11, v12, v10);
    OUTLINED_FUNCTION_126(v13, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v2, v8, type metadata accessor for Proto_ModelDescription);
  }
  v14 = *((_QWORD *)v5 + 9);
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_210();
  if (*(_QWORD *)(v14 + 16))
  {
    OUTLINED_FUNCTION_115();
    OUTLINED_FUNCTION_237();
    OUTLINED_FUNCTION_67();
    do
    {
      OUTLINED_FUNCTION_54_0((uint64_t)v5, v0);
      OUTLINED_FUNCTION_146();
      if (v15)
        OUTLINED_FUNCTION_114();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_344();
    }
    while (!v16);
    OUTLINED_FUNCTION_275();
  }
  else
  {
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_382();
  OUTLINED_FUNCTION_1();
}

void sub_240BE5C6C()
{
  swift_bridgeObjectRetain();
  Model.trainingInput.setter();
}

void Model.trainingInput.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v3 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_122(v4, v5, type metadata accessor for Proto_FeatureDescription, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0510, (uint64_t (*)(_QWORD))type metadata accessor for FeatureDescription);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v7 = v6
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v7, v2);
  OUTLINED_FUNCTION_7_1(v2, 1, v3);
  if (v9)
  {
    OUTLINED_FUNCTION_41_0(MEMORY[0x24BEE4AF8]);
    v10 = v0 + *(int *)(v3 + 48);
    v11 = OUTLINED_FUNCTION_31_0();
    v14 = OUTLINED_FUNCTION_18_0(v10, v12, v13, v11);
    OUTLINED_FUNCTION_39(v14, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v2, v8, type metadata accessor for Proto_ModelDescription);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 72) = v1;
  OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_13();
}

void Model.trainingInput.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  Model.trainingInput.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE5DD4(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))Model.trainingInput.setter);
}

uint64_t Model.isUpdatable.getter()
{
  uint64_t v0;
  unsigned __int8 *v1;

  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__isUpdatable);
  OUTLINED_FUNCTION_4_1();
  return *v1;
}

void Model.isUpdatable.setter(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  _BYTE *v5;

  OUTLINED_FUNCTION_28_0();
  if ((OUTLINED_FUNCTION_389() & 1) == 0)
  {
    OUTLINED_FUNCTION_334();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_176();
    v4 = OUTLINED_FUNCTION_323();
    OUTLINED_FUNCTION_322(v4);
  }
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v2)
               + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__isUpdatable);
  OUTLINED_FUNCTION_16_0();
  *v5 = a1 & 1;
  OUTLINED_FUNCTION_258();
}

void Model.isUpdatable.modify(_QWORD *a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(int *)(OUTLINED_FUNCTION_28_0() + 20);
  *((_DWORD *)v3 + 20) = v4;
  v5 = (_BYTE *)(*(_QWORD *)(v1 + v4)
               + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__isUpdatable);
  OUTLINED_FUNCTION_4_1();
  *((_BYTE *)v3 + 84) = *v5;
  OUTLINED_FUNCTION_156();
}

void sub_240BE5F08()
{
  char v0;
  char v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  _BYTE *v7;

  OUTLINED_FUNCTION_66();
  v1 = v0;
  v3 = *v2;
  v4 = *(_BYTE *)(*v2 + 84);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  if ((v1 & 1) == 0)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) != 0)
      goto LABEL_4;
    goto LABEL_3;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
LABEL_3:
    OUTLINED_FUNCTION_334();
    OUTLINED_FUNCTION_192();
    OUTLINED_FUNCTION_176();
    v6 = OUTLINED_FUNCTION_323();
    OUTLINED_FUNCTION_317(v6);
  }
LABEL_4:
  v7 = (_BYTE *)(*(_QWORD *)(*(_QWORD *)(v3 + 72) + *(int *)(v3 + 80))
               + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__isUpdatable);
  OUTLINED_FUNCTION_383();
  OUTLINED_FUNCTION_16_0();
  *v7 = v4;
  OUTLINED_FUNCTION_172((void *)v3);
}

void Model.kind.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[32];

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v4);
  v6 = &v25[-v5];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435F950);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v8);
  v10 = &v25[-v9];
  __swift_instantiateConcreteTypeFromMangledName(&qword_254360548);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = &v25[-((v12 + 15) & 0xFFFFFFFFFFFFFFF0)];
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_1();
  v14 = OUTLINED_FUNCTION_383();
  OUTLINED_FUNCTION_207(v14, v15);
  OUTLINED_FUNCTION_207((uint64_t)v10, v1);
  v16 = OUTLINED_FUNCTION_359();
  OUTLINED_FUNCTION_7_1(v16, v17, v2);
  if (v18)
  {
    v19 = type metadata accessor for ModelKind(0);
    v20 = (uint64_t)v13;
    v21 = 1;
  }
  else
  {
    OUTLINED_FUNCTION_379(v1, (uint64_t)v6);
    OUTLINED_FUNCTION_110((uint64_t)v6, v0);
    sub_240BE6270();
    OUTLINED_FUNCTION_35_0();
    v19 = type metadata accessor for ModelKind(0);
    v20 = (uint64_t)v13;
    v21 = 0;
  }
  v22 = OUTLINED_FUNCTION_365(v20, v21);
  OUTLINED_FUNCTION_126(v22, &qword_25435F950);
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_7_1((uint64_t)v13, 1, v19);
  if (v18)
  {
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v24 = swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_219(v24, &qword_254360548);
  }
  else
  {
    OUTLINED_FUNCTION_12_0((uint64_t)v13, v23, type metadata accessor for ModelKind);
  }
  OUTLINED_FUNCTION_1();
}

void sub_240BE6174(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;

  type metadata accessor for ModelKind(0);
  MEMORY[0x24BDAC7A8]();
  sub_240BF04E8(a1, (uint64_t)&v4 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0), v3);
  Model.kind.setter();
}

void Model.kind.setter()
{
  uint64_t v0;
  uint64_t v1;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25435F950);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_313();
  sub_240BE6998();
  v1 = OUTLINED_FUNCTION_232();
  __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
  sub_240D7327C(v0);
  OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_156();
}

void sub_240BE6270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(_QWORD);
  char *v13;

  OUTLINED_FUNCTION_22();
  v1 = v0;
  type metadata accessor for Proto_CoreMLModels_SoundAnalysisPreprocessing(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v3);
  type metadata accessor for Proto_CoreMLModels_VisionFeaturePrint(0);
  OUTLINED_FUNCTION_0();
  v5 = MEMORY[0x24BDAC7A8](v4);
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint(v7);
  OUTLINED_FUNCTION_0();
  v9 = MEMORY[0x24BDAC7A8](v8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_232();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_80();
  OUTLINED_FUNCTION_46(v1, v11, v12);
  OUTLINED_FUNCTION_50_0();
  v13 = (char *)sub_240BE63BC + 4 * word_240F1D590[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240BE63BC()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_5_1(v0, v1, type metadata accessor for Proto_PipelineClassifier);
  OUTLINED_FUNCTION_33_0();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_1();
}

void sub_240BE6998()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(_QWORD);
  char *v35;
  uint64_t v36[34];

  OUTLINED_FUNCTION_22();
  v36[31] = v1;
  type metadata accessor for NearestNeighborsConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_252(v2, v36[0]);
  type metadata accessor for BayesianProbitRegressorConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v36[29] = (uint64_t)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for SupportVectorRegressorConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[28] = v4;
  type metadata accessor for SupportVectorClassifierConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[27] = v5;
  type metadata accessor for ClassConfidenceThresholding();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[26] = v6;
  type metadata accessor for MLProgram();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_109(v7, v36[0]);
  type metadata accessor for NeuralNetworkRegressor();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[24] = v8;
  type metadata accessor for NeuralNetworkClassifier();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_220(v9, v36[0]);
  type metadata accessor for NeuralNetwork();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[22] = v10;
  type metadata accessor for ItemSimilarityRecommenderConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[21] = v11;
  type metadata accessor for GazetteerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_251(v12, v36[0]);
  type metadata accessor for TextClassifierConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_254(v13, v36[0]);
  type metadata accessor for WordEmbeddingConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_255(v14, v36[0]);
  type metadata accessor for WordTaggerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_136(v15, v36[0]);
  type metadata accessor for SoundAnalysisPreprocessorKind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v36[14] = (uint64_t)v36 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = OUTLINED_FUNCTION_101();
  v36[13] = type metadata accessor for Proto_CoreMLModels_VisionFeaturePrint(v17);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[17] = v18;
  type metadata accessor for VisionFeaturePrintKind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[15] = v19;
  type metadata accessor for AudioFeaturePrintKind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  v36[12] = v20;
  type metadata accessor for ArrayFeatureExtractorConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_300(v21);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_298(v22);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_296(v23);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_294(v24);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_292(v25);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_302(v26);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_301(v27);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_299(v28);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_297(v29);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_295(v30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_293(v31);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_303(v32);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_90();
  type metadata accessor for SerializedModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_60();
  type metadata accessor for LinkedModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_312();
  type metadata accessor for CustomModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_137();
  type metadata accessor for IdentityModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v33 = OUTLINED_FUNCTION_250();
  type metadata accessor for PipelineConfiguration(v33);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  type metadata accessor for PipelineRegressorConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_59();
  type metadata accessor for PipelineClassifierConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_194();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_48();
  sub_240BF04E8(v36[32], v0, v34);
  OUTLINED_FUNCTION_305();
  v35 = (char *)sub_240BE6EA8 + 4 * word_240F1D5DA[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240BE6EA8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_25_0(v3, a2, type metadata accessor for PipelineClassifierConfiguration);
  OUTLINED_FUNCTION_13_0(v2, v4, type metadata accessor for Proto_PipelineClassifier);
  OUTLINED_FUNCTION_232();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_1();
}

void Model.kind.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  *a1 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435F950);
  a1[1] = malloc(*(_QWORD *)(*(_QWORD *)(v3 - 8) + 64));
  OUTLINED_FUNCTION_194();
  a1[2] = OUTLINED_FUNCTION_119();
  a1[3] = OUTLINED_FUNCTION_119();
  Model.kind.getter();
  OUTLINED_FUNCTION_156();
}

void sub_240BE7598(uint64_t a1, char a2)
{
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(void **)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_289();
    OUTLINED_FUNCTION_54_0(v3, v4);
    sub_240BE6998();
    v5 = OUTLINED_FUNCTION_232();
    OUTLINED_FUNCTION_203(v5);
    OUTLINED_FUNCTION_58_0();
  }
  else
  {
    sub_240BE6998();
    v6 = OUTLINED_FUNCTION_232();
    OUTLINED_FUNCTION_203(v6);
  }
  OUTLINED_FUNCTION_21_0();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_288();
  free(v2);
}

void Model.functions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  _QWORD v22[6];

  OUTLINED_FUNCTION_22();
  type metadata accessor for FunctionDescription();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (_QWORD *)((char *)v22 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v10 = v9
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v10, (uint64_t)v4);
  v11 = OUTLINED_FUNCTION_98();
  v13 = MEMORY[0x24BEE4AF8];
  if (v11 == 1)
  {
    OUTLINED_FUNCTION_42_0();
    v14 = (uint64_t)v8 + *(int *)(v5 + 48);
    v15 = OUTLINED_FUNCTION_31_0();
    v18 = OUTLINED_FUNCTION_18_0(v14, v16, v17, v15);
    OUTLINED_FUNCTION_126(v18, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_124((uint64_t)v4, v12, type metadata accessor for Proto_ModelDescription);
  }
  v19 = *v8;
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_210();
  if (*(_QWORD *)(v19 + 16))
  {
    v22[2] = v13;
    sub_240BF053C();
    type metadata accessor for Proto_FunctionDescription(0);
    OUTLINED_FUNCTION_67();
    do
    {
      OUTLINED_FUNCTION_54_0((uint64_t)v8, v0);
      OUTLINED_FUNCTION_146();
      if (v20)
        sub_240BF053C();
      OUTLINED_FUNCTION_37_0();
      OUTLINED_FUNCTION_344();
    }
    while (!v21);
    OUTLINED_FUNCTION_275();
  }
  else
  {
    OUTLINED_FUNCTION_165();
  }
  OUTLINED_FUNCTION_382();
  OUTLINED_FUNCTION_1();
}

void sub_240BE77EC()
{
  swift_bridgeObjectRetain();
  Model.functions.setter();
}

void Model.functions.setter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_170();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_122(v6, v7, type metadata accessor for Proto_FunctionDescription, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0614, (uint64_t (*)(_QWORD))type metadata accessor for FunctionDescription);
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  v9 = v8
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_96(v9, v2);
  OUTLINED_FUNCTION_7_1(v2, 1, v4);
  if (v11)
  {
    OUTLINED_FUNCTION_41_0(MEMORY[0x24BEE4AF8]);
    v12 = (uint64_t)v0 + *(int *)(v4 + 48);
    v13 = OUTLINED_FUNCTION_31_0();
    v16 = OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
    OUTLINED_FUNCTION_39(v16, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v2, v10, type metadata accessor for Proto_ModelDescription);
  }
  swift_bridgeObjectRelease();
  *v0 = v1;
  OUTLINED_FUNCTION_316();
  OUTLINED_FUNCTION_13();
}

void Model.functions.modify(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_50(a1);
  Model.functions.getter();
  *v1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BE7954(uint64_t *a1, char a2)
{
  sub_240BE7960(a1, a2, (void (*)(uint64_t))Model.functions.setter);
}

void sub_240BE7960(uint64_t *a1, char a2, void (*a3)(uint64_t))
{
  uint64_t v4;

  if ((a2 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_55_0();
    a3(v4);
    OUTLINED_FUNCTION_223();
  }
  else
  {
    a3(*a1);
    OUTLINED_FUNCTION_156();
  }
}

void Model.defaultFunctionName.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  v2 = OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_191();
  OUTLINED_FUNCTION_7_1(v0, 1, v2);
  if (v7)
  {
    OUTLINED_FUNCTION_69(MEMORY[0x24BEE4AF8]);
    v8 = (uint64_t)&v5[*(int *)(v2 + 48)];
    v9 = OUTLINED_FUNCTION_31_0();
    v12 = OUTLINED_FUNCTION_18_0(v8, v10, v11, v9);
    OUTLINED_FUNCTION_39(v12, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_12_0(v0, v6, type metadata accessor for Proto_ModelDescription);
  }
  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_155();
  OUTLINED_FUNCTION_328();
  OUTLINED_FUNCTION_42();
}

void sub_240BE7A9C()
{
  swift_bridgeObjectRetain();
  Model.defaultFunctionName.setter();
}

void Model.defaultFunctionName.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_66();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_24_0();
  OUTLINED_FUNCTION_47_0();
  v11 = v10
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_149(v11, (uint64_t)v7);
  OUTLINED_FUNCTION_7_1((uint64_t)v7, 1, v8);
  if (v13)
  {
    OUTLINED_FUNCTION_72(MEMORY[0x24BEE4AF8]);
    v14 = v0 + *(int *)(v8 + 48);
    v15 = OUTLINED_FUNCTION_31_0();
    v18 = OUTLINED_FUNCTION_18_0(v14, v16, v17, v15);
    OUTLINED_FUNCTION_212(v18, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v7, v12, type metadata accessor for Proto_ModelDescription);
  }
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 8) = v4;
  *(_QWORD *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_215();
  OUTLINED_FUNCTION_13();
}

void Model.defaultFunctionName.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_66();
  v2 = OUTLINED_FUNCTION_257();
  OUTLINED_FUNCTION_230((uint64_t)v2);
  OUTLINED_FUNCTION_216();
  v0[12] = OUTLINED_FUNCTION_119();
  v0[13] = OUTLINED_FUNCTION_119();
  v3 = OUTLINED_FUNCTION_119();
  v0[14] = v3;
  v4 = OUTLINED_FUNCTION_39_0();
  v0[16] = OUTLINED_FUNCTION_120(v4);
  v0[17] = OUTLINED_FUNCTION_152();
  v5 = OUTLINED_FUNCTION_152();
  v0[18] = v5;
  v6 = OUTLINED_FUNCTION_28_0();
  OUTLINED_FUNCTION_333(v6);
  v8 = v7
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  OUTLINED_FUNCTION_149(v8, (uint64_t)v3);
  OUTLINED_FUNCTION_7_1((uint64_t)v3, 1, v1);
  if (v10)
  {
    OUTLINED_FUNCTION_15_0(MEMORY[0x24BEE4AF8]);
    v11 = (uint64_t)v5 + *(int *)(v1 + 48);
    v12 = OUTLINED_FUNCTION_31_0();
    v15 = OUTLINED_FUNCTION_18_0(v11, v13, v14, v12);
    OUTLINED_FUNCTION_126(v15, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_63((uint64_t)v3, v9, type metadata accessor for Proto_ModelDescription);
  }
  v17 = v5[1];
  v16 = v5[2];
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_21_0();
  v0[9] = v17;
  v0[10] = v16;
  OUTLINED_FUNCTION_13();
}

void sub_240BE7CFC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_141();
  v5 = v4
     + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  v6 = v0[15];
  if ((v7 & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_244(v8, v9, &qword_25435FEC0);
    OUTLINED_FUNCTION_175();
    if (v11)
    {
      v1 = v0[15];
      OUTLINED_FUNCTION_62(MEMORY[0x24BEE4AF8]);
      OUTLINED_FUNCTION_337();
      v12 = v6 + *(int *)(v1 + 48);
      v13 = OUTLINED_FUNCTION_31_0();
      v16 = OUTLINED_FUNCTION_18_0(v12, v14, v15, v13);
      OUTLINED_FUNCTION_37(v16, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_25_0(v0[12], v10, type metadata accessor for Proto_ModelDescription);
      OUTLINED_FUNCTION_213();
    }
    OUTLINED_FUNCTION_83();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 8) = v3;
    *(_QWORD *)(v1 + 16) = v2;
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_393();
  }
  else
  {
    OUTLINED_FUNCTION_4_1();
    OUTLINED_FUNCTION_242(v5, v17, &qword_25435FEC0);
    OUTLINED_FUNCTION_162();
    if (v11)
    {
      v19 = v0[15];
      v5 = v0[13];
      OUTLINED_FUNCTION_68(MEMORY[0x24BEE4AF8]);
      v20 = v6 + *(int *)(v19 + 48);
      v21 = OUTLINED_FUNCTION_31_0();
      v24 = OUTLINED_FUNCTION_18_0(v20, v22, v23, v21);
      OUTLINED_FUNCTION_39(v24, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_25_0(v0[13], v18, type metadata accessor for Proto_ModelDescription);
    }
    OUTLINED_FUNCTION_83();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v5 + 8) = v3;
    *(_QWORD *)(v5 + 16) = v2;
    OUTLINED_FUNCTION_215();
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_371();
  OUTLINED_FUNCTION_75(v0);
}

void Model.nestedModels.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for PipelineRegressorConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_250();
  type metadata accessor for PipelineClassifierConfiguration(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_90();
  type metadata accessor for PipelineConfiguration(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_60();
  type metadata accessor for ModelKind(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_80();
  Model.kind.getter();
  v12 = OUTLINED_FUNCTION_27_0();
  if (v12)
  {
    if (v12 == 1)
    {
      sub_240BF0410(v2, v0, type metadata accessor for PipelineRegressorConfiguration);
      PipelineRegressorConfiguration.models.getter();
    }
    else if (v12 == 2)
    {
      OUTLINED_FUNCTION_30_0(v2, v4);
      PipelineConfiguration.models.getter();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD50);
      v13 = OUTLINED_FUNCTION_391();
      v14 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for Model(v13) - 8) + 80);
      v15 = (v14 + 32) & ~v14;
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
      sub_240BF04E8(v1, v16 + v15, type metadata accessor for Model);
    }
  }
  else
  {
    OUTLINED_FUNCTION_30_0(v2, v3);
    PipelineClassifierConfiguration.models.getter();
  }
  sub_240BF03EC();
  OUTLINED_FUNCTION_42();
}

uint64_t Model.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v2 = *(int *)(OUTLINED_FUNCTION_28_0() + 20);
  if (qword_25435F978 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_25435F970;
  return swift_retain();
}

void Model.customMirror.getter()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _OWORD *v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  _OWORD *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  _OWORD *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  _OWORD *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  _OWORD *v66;
  uint64_t v67;
  int EnumTagSinglePayload;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  _OWORD *v89;
  unint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  _OWORD *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _OWORD *v118;
  unint64_t v119;
  char *v120;
  char v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  __int128 v149;
  __int128 v150;
  uint64_t v151;

  OUTLINED_FUNCTION_22();
  v146 = v4;
  v144 = sub_240F1CF90();
  v143 = *(_QWORD *)(v144 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v5);
  v145 = (char *)&v136 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = OUTLINED_FUNCTION_19_0((uint64_t)&v136 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v141 = type metadata accessor for Model(v9);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v140 = (char *)&v136 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FEC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_85();
  v138 = v13;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_38_0();
  v139 = v15;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_38_0();
  v136 = v17;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v18);
  v20 = (char *)&v136 - v19;
  v21 = OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_132();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_373();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)&v136 - v25);
  OUTLINED_FUNCTION_118();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_331();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD58);
  v28 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v28 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v28 + 32) = 0xD000000000000014;
  *(_QWORD *)(v28 + 40) = 0x8000000240F52000;
  v148 = *(int *)(OUTLINED_FUNCTION_28_0() + 20);
  v29 = *(_QWORD *)(v0 + v148);
  OUTLINED_FUNCTION_4_1();
  v147 = v29;
  v30 = *(int *)(v29 + 16);
  *(_QWORD *)(v28 + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v28 + 48) = v30;
  *(_OWORD *)(v28 + 80) = xmmword_240F1DA50;
  Model.inputs.getter();
  v32 = v31;
  v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD60);
  *(_QWORD *)(v28 + 120) = v33;
  *(_QWORD *)(v28 + 96) = v32;
  *(_OWORD *)(v28 + 128) = xmmword_240F1DA60;
  Model.outputs.getter();
  v137 = v33;
  *(_QWORD *)(v28 + 168) = v33;
  *(_QWORD *)(v28 + 144) = v34;
  Model.modelDescription.getter();
  v36 = v35;
  v38 = v37;
  swift_bridgeObjectRelease();
  v39 = HIBYTE(v38) & 0xF;
  if ((v38 & 0x2000000000000000) == 0)
    v39 = v36 & 0xFFFFFFFFFFFFLL;
  v40 = MEMORY[0x24BEE0D00];
  if (v39)
  {
    Model.modelDescription.getter();
    v151 = v40;
    *(_QWORD *)&v150 = v41;
    *((_QWORD *)&v150 + 1) = v42;
    OUTLINED_FUNCTION_180();
    *(_QWORD *)&v149 = 0xD000000000000010;
    *((_QWORD *)&v149 + 1) = 0x8000000240F52020;
    OUTLINED_FUNCTION_91(v43, v44);
    if (v45)
    {
      OUTLINED_FUNCTION_53_0();
      v28 = v128;
    }
    OUTLINED_FUNCTION_36_0();
  }
  Model.versionString.getter();
  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_200();
  if (v46)
  {
    Model.versionString.getter();
    v151 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v150 = v47;
    *((_QWORD *)&v150 + 1) = v48;
    OUTLINED_FUNCTION_180();
    v149 = xmmword_240F1DA70;
    OUTLINED_FUNCTION_91(v49, v50);
    if (v45)
    {
      OUTLINED_FUNCTION_53_0();
      v28 = v129;
    }
    OUTLINED_FUNCTION_36_0();
  }
  Model.author.getter();
  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_200();
  if (v51)
  {
    Model.author.getter();
    v151 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v150 = v52;
    *((_QWORD *)&v150 + 1) = v53;
    OUTLINED_FUNCTION_180();
    v149 = xmmword_240F1DA80;
    OUTLINED_FUNCTION_91(v54, v55);
    if (v45)
    {
      OUTLINED_FUNCTION_53_0();
      v28 = v130;
    }
    OUTLINED_FUNCTION_36_0();
  }
  Model.license.getter();
  OUTLINED_FUNCTION_179();
  OUTLINED_FUNCTION_200();
  if (v56)
  {
    Model.license.getter();
    v151 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v150 = v57;
    *((_QWORD *)&v150 + 1) = v58;
    OUTLINED_FUNCTION_180();
    v149 = xmmword_240F1DA90;
    OUTLINED_FUNCTION_91(v59, v60);
    if (v45)
    {
      OUTLINED_FUNCTION_53_0();
      v28 = v131;
    }
    OUTLINED_FUNCTION_36_0();
  }
  Model.metadata.getter();
  v62 = *(_QWORD *)(v61 + 16);
  swift_bridgeObjectRelease();
  if (v62)
  {
    Model.metadata.getter();
    v64 = v63;
    v151 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD68);
    *(_QWORD *)&v150 = v64;
    OUTLINED_FUNCTION_180();
    v149 = xmmword_240F1DAA0;
    OUTLINED_FUNCTION_91(v65, v66);
    if (v45)
    {
      OUTLINED_FUNCTION_53_0();
      v28 = v132;
    }
    OUTLINED_FUNCTION_36_0();
  }
  v67 = v147
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  sub_240C02F94(v67, (uint64_t)v20, &qword_25435FEC0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  v69 = MEMORY[0x24BEE4AF8];
  if (EnumTagSinglePayload == 1)
  {
    *v2 = MEMORY[0x24BEE4AF8];
    v2[1] = 0;
    v2[2] = 0xE000000000000000;
    v2[3] = v69;
    v2[4] = v69;
    v2[5] = 0;
    v2[6] = 0xE000000000000000;
    v2[7] = 0;
    v2[8] = 0xE000000000000000;
    v2[9] = v69;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v70 = (uint64_t)v2 + *(int *)(v21 + 48);
    v71 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_18_0(v70, v72, v73, v71);
    sub_240BE0B68((uint64_t)v20, &qword_25435FEC0);
  }
  else
  {
    sub_240BF0410((uint64_t)v20, (uint64_t)v2, type metadata accessor for Proto_ModelDescription);
  }
  v75 = v2[5];
  v74 = v2[6];
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_281();
  OUTLINED_FUNCTION_173();
  v76 = HIBYTE(v74) & 0xF;
  if ((v74 & 0x2000000000000000) == 0)
    v76 = v75 & 0xFFFFFFFFFFFFLL;
  if (v76)
  {
    OUTLINED_FUNCTION_280();
    v78 = v77
        + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
    OUTLINED_FUNCTION_4_1();
    v79 = v136;
    sub_240C02F94(v78, v136, &qword_25435FEC0);
    OUTLINED_FUNCTION_7_1(v79, 1, v21);
    if (v81)
    {
      *v26 = v69;
      v26[1] = 0;
      v26[2] = 0xE000000000000000;
      v26[3] = v69;
      v26[4] = v69;
      v26[5] = 0;
      v26[6] = 0xE000000000000000;
      v26[7] = 0;
      v26[8] = 0xE000000000000000;
      v26[9] = v69;
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v82 = (uint64_t)v26 + *(int *)(v21 + 48);
      v83 = OUTLINED_FUNCTION_31_0();
      v86 = OUTLINED_FUNCTION_18_0(v82, v84, v85, v83);
      OUTLINED_FUNCTION_131(v86, &qword_25435FEC0);
    }
    else
    {
      OUTLINED_FUNCTION_124(v79, v80, type metadata accessor for Proto_ModelDescription);
    }
    v88 = v26[5];
    v87 = v26[6];
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_210();
    v151 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v150 = v88;
    *((_QWORD *)&v150 + 1) = v87;
    OUTLINED_FUNCTION_180();
    *(_QWORD *)&v149 = 0xD000000000000014;
    *((_QWORD *)&v149 + 1) = 0x8000000240F52040;
    sub_240BF057C(&v150, v89);
    v90 = *(_QWORD *)(v28 + 16);
    if (v90 >= *(_QWORD *)(v28 + 24) >> 1)
    {
      OUTLINED_FUNCTION_64();
      v28 = v133;
    }
    *(_QWORD *)(v28 + 16) = v90 + 1;
    OUTLINED_FUNCTION_106(v28 + 48 * v90);
  }
  OUTLINED_FUNCTION_280();
  v92 = v91
      + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
  OUTLINED_FUNCTION_4_1();
  v93 = v139;
  OUTLINED_FUNCTION_242(v92, v94, &qword_25435FEC0);
  OUTLINED_FUNCTION_7_1(v93, 1, v21);
  if (v81)
  {
    *v1 = v69;
    v1[1] = 0;
    v1[2] = 0xE000000000000000;
    v1[3] = v69;
    v1[4] = v69;
    v1[5] = 0;
    v1[6] = 0xE000000000000000;
    v1[7] = 0;
    v1[8] = 0xE000000000000000;
    v1[9] = v69;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v96 = (uint64_t)v1 + *(int *)(v21 + 48);
    v97 = OUTLINED_FUNCTION_31_0();
    v100 = OUTLINED_FUNCTION_18_0(v96, v98, v99, v97);
    OUTLINED_FUNCTION_212(v100, &qword_25435FEC0);
  }
  else
  {
    OUTLINED_FUNCTION_25_0(v93, v95, type metadata accessor for Proto_ModelDescription);
  }
  v102 = v1[7];
  v101 = v1[8];
  OUTLINED_FUNCTION_315();
  OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_173();
  v103 = HIBYTE(v101) & 0xF;
  if ((v101 & 0x2000000000000000) == 0)
    v103 = v102 & 0xFFFFFFFFFFFFLL;
  if (v103)
  {
    OUTLINED_FUNCTION_280();
    v105 = v104
         + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__description_p;
    OUTLINED_FUNCTION_4_1();
    v106 = v138;
    sub_240C02F94(v105, v138, &qword_25435FEC0);
    OUTLINED_FUNCTION_7_1(v106, 1, v21);
    if (v81)
    {
      *v3 = v69;
      v3[1] = 0;
      v3[2] = 0xE000000000000000;
      v3[3] = v69;
      v3[4] = v69;
      v3[5] = 0;
      v3[6] = 0xE000000000000000;
      v3[7] = 0;
      v3[8] = 0xE000000000000000;
      v3[9] = v69;
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v107 = (uint64_t)v3 + *(int *)(v21 + 48);
      v108 = OUTLINED_FUNCTION_31_0();
      v111 = OUTLINED_FUNCTION_18_0(v107, v109, v110, v108);
      OUTLINED_FUNCTION_126(v111, &qword_25435FEC0);
    }
    else
    {
      sub_240BF0410(v106, (uint64_t)v3, type metadata accessor for Proto_ModelDescription);
    }
    v113 = v3[7];
    v112 = v3[8];
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_285();
    v151 = MEMORY[0x24BEE0D00];
    *(_QWORD *)&v150 = v113;
    *((_QWORD *)&v150 + 1) = v112;
    OUTLINED_FUNCTION_180();
    *(_QWORD *)&v149 = 0xD00000000000001ALL;
    *((_QWORD *)&v149 + 1) = 0x8000000240F52060;
    sub_240BF057C(&v150, v114);
    OUTLINED_FUNCTION_336();
    if (v45)
    {
      OUTLINED_FUNCTION_64();
      v28 = v134;
    }
    OUTLINED_FUNCTION_105();
  }
  Model.trainingInput.getter();
  v116 = *(_QWORD *)(v115 + 16);
  swift_bridgeObjectRelease();
  if (v116)
  {
    Model.trainingInput.getter();
    v151 = v137;
    *(_QWORD *)&v150 = v117;
    OUTLINED_FUNCTION_180();
    v149 = xmmword_240F1DAB0;
    sub_240BF057C(&v150, v118);
    OUTLINED_FUNCTION_336();
    if (v45)
    {
      OUTLINED_FUNCTION_64();
      v28 = v135;
    }
    OUTLINED_FUNCTION_105();
  }
  v151 = OUTLINED_FUNCTION_194();
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)&v150);
  Model.kind.getter();
  OUTLINED_FUNCTION_262((__n128)xmmword_240F1DAC0);
  v119 = *(_QWORD *)(v28 + 16);
  if (v119 >= *(_QWORD *)(v28 + 24) >> 1)
  {
    OUTLINED_FUNCTION_64();
    v28 = v126;
  }
  *(_QWORD *)(v28 + 16) = v119 + 1;
  OUTLINED_FUNCTION_106(v28 + 48 * v119);
  v120 = (char *)(v147
                + OBJC_IVAR____TtCV20MLModelSpecification11Proto_ModelP33_4FEECBA670118D43FC092AB089C2CE4C13_StorageClass__isUpdatable);
  OUTLINED_FUNCTION_4_1();
  v121 = *v120;
  v151 = MEMORY[0x24BEE1328];
  LOBYTE(v150) = v121;
  OUTLINED_FUNCTION_262((__n128)xmmword_240F1DAD0);
  OUTLINED_FUNCTION_336();
  if (v45)
  {
    OUTLINED_FUNCTION_64();
    v28 = v127;
  }
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_364(v0, v122, type metadata accessor for Model);
  *(_QWORD *)&v149 = v28;
  v123 = *MEMORY[0x24BEE4388];
  v124 = sub_240F1CF84();
  v125 = v142;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 104))(v142, v123, v124);
  OUTLINED_FUNCTION_365(v125, 0);
  (*(void (**)(char *, _QWORD, uint64_t))(v143 + 104))(v145, *MEMORY[0x24BEE43C0], v144);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  sub_240F1CF9C();
  OUTLINED_FUNCTION_1();
}

void static ModelKind.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  _QWORD v159[69];
  uint64_t v160;
  char *v161;

  OUTLINED_FUNCTION_22();
  v160 = v1;
  v161 = (char *)v0;
  type metadata accessor for NearestNeighborsConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v4 = OUTLINED_FUNCTION_19_0((uint64_t)v159 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for BayesianProbitRegressorConfiguration(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v7 = OUTLINED_FUNCTION_19_0(v6);
  type metadata accessor for SupportVectorRegressorConfiguration(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  v10 = OUTLINED_FUNCTION_19_0(v9);
  type metadata accessor for SupportVectorClassifierConfiguration(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_19_0((uint64_t)v159 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for ClassConfidenceThresholding();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v14);
  type metadata accessor for MLProgram();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v16);
  type metadata accessor for NeuralNetworkRegressor();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v18);
  type metadata accessor for NeuralNetworkClassifier();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v20);
  type metadata accessor for NeuralNetwork();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_0();
  v23 = OUTLINED_FUNCTION_19_0(v22);
  type metadata accessor for ItemSimilarityRecommenderConfiguration(v23);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_19_0((uint64_t)v159 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for GazetteerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v27);
  type metadata accessor for TextClassifierConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v29);
  type metadata accessor for WordEmbeddingConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v31);
  type metadata accessor for WordTaggerConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_2_0();
  v34 = OUTLINED_FUNCTION_19_0(v33);
  type metadata accessor for SoundAnalysisPreprocessorKind(v34);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_2_0();
  v37 = OUTLINED_FUNCTION_19_0(v36);
  type metadata accessor for VisionFeaturePrintKind(v37);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_2_0();
  v40 = OUTLINED_FUNCTION_19_0(v39);
  type metadata accessor for AudioFeaturePrintKind(v40);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v42);
  type metadata accessor for ArrayFeatureExtractorConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_300(v44);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_298(v46);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_296(v48);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_294(v50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_292(v52);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_302(v54);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_301(v56);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_299(v58);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_297(v60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_295(v62);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_293(v64);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_303(v66);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v68);
  type metadata accessor for SerializedModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v70);
  type metadata accessor for LinkedModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v72);
  type metadata accessor for CustomModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v74);
  type metadata accessor for IdentityModelConfiguration();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_2_0();
  v77 = OUTLINED_FUNCTION_19_0(v76);
  type metadata accessor for PipelineConfiguration(v77);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_2_0();
  v80 = OUTLINED_FUNCTION_19_0(v79);
  type metadata accessor for PipelineRegressorConfiguration(v80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v81);
  OUTLINED_FUNCTION_2_0();
  v83 = OUTLINED_FUNCTION_19_0(v82);
  type metadata accessor for PipelineClassifierConfiguration(v83);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v84);
  OUTLINED_FUNCTION_2_0();
  v86 = OUTLINED_FUNCTION_19_0(v85);
  v159[68] = type metadata accessor for ModelKind(v86);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_85();
  v159[67] = v88;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v89);
  OUTLINED_FUNCTION_38_0();
  v159[66] = v90;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v91);
  OUTLINED_FUNCTION_38_0();
  v159[65] = v92;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v93);
  v159[64] = (char *)v159 - v94;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v95);
  OUTLINED_FUNCTION_38_0();
  v159[49] = v96;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v97);
  OUTLINED_FUNCTION_38_0();
  v159[63] = v98;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v99);
  OUTLINED_FUNCTION_38_0();
  v159[48] = v100;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v101);
  OUTLINED_FUNCTION_38_0();
  v159[47] = v102;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v103);
  OUTLINED_FUNCTION_38_0();
  v159[46] = v104;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v105);
  v159[62] = (char *)v159 - v106;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v107);
  OUTLINED_FUNCTION_38_0();
  v159[45] = v108;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v109);
  OUTLINED_FUNCTION_38_0();
  v159[61] = v110;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v111);
  OUTLINED_FUNCTION_38_0();
  v159[60] = v112;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v113);
  OUTLINED_FUNCTION_38_0();
  v159[43] = v114;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v115);
  OUTLINED_FUNCTION_38_0();
  v159[42] = v116;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v117);
  v159[59] = (char *)v159 - v118;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v119);
  OUTLINED_FUNCTION_38_0();
  v159[58] = v120;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v121);
  OUTLINED_FUNCTION_38_0();
  v159[44] = v122;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v123);
  OUTLINED_FUNCTION_38_0();
  v159[40] = v124;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v125);
  OUTLINED_FUNCTION_38_0();
  v159[57] = v126;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v127);
  OUTLINED_FUNCTION_38_0();
  v159[56] = v128;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v129);
  OUTLINED_FUNCTION_38_0();
  v159[55] = v130;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v131);
  OUTLINED_FUNCTION_38_0();
  v159[54] = v132;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v133);
  OUTLINED_FUNCTION_38_0();
  v159[41] = v134;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v135);
  OUTLINED_FUNCTION_38_0();
  v159[52] = v136;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v137);
  OUTLINED_FUNCTION_38_0();
  v159[51] = v138;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v139);
  OUTLINED_FUNCTION_38_0();
  v159[38] = v140;
  OUTLINED_FUNCTION_23_0();
  v142 = MEMORY[0x24BDAC7A8](v141);
  MEMORY[0x24BDAC7A8](v142);
  OUTLINED_FUNCTION_373();
  MEMORY[0x24BDAC7A8](v143);
  OUTLINED_FUNCTION_38_0();
  v159[53] = v144;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v145);
  OUTLINED_FUNCTION_38_0();
  v159[39] = v146;
  OUTLINED_FUNCTION_23_0();
  v148 = MEMORY[0x24BDAC7A8](v147);
  v149 = MEMORY[0x24BDAC7A8](v148);
  MEMORY[0x24BDAC7A8](v149);
  OUTLINED_FUNCTION_118();
  MEMORY[0x24BDAC7A8](v150);
  OUTLINED_FUNCTION_38_0();
  v159[50] = v151;
  OUTLINED_FUNCTION_23_0();
  v153 = MEMORY[0x24BDAC7A8](v152);
  MEMORY[0x24BDAC7A8](v153);
  OUTLINED_FUNCTION_331();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD80);
  OUTLINED_FUNCTION_0();
  v155 = MEMORY[0x24BDAC7A8](v154);
  v157 = (char *)v159 + *(int *)(v155 + 48) - ((v156 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_153((uint64_t)v161, (uint64_t)v159 - ((v156 + 15) & 0xFFFFFFFFFFFFFFF0));
  v161 = v157;
  OUTLINED_FUNCTION_153(v160, (uint64_t)v157);
  v158 = (char *)sub_240BE9394 + 4 * word_240F1D624[OUTLINED_FUNCTION_27_0()];
  __asm { BR              X10 }
}

void sub_240BE9394()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_240BF04E8(v2, v1, type metadata accessor for ModelKind);
  if (OUTLINED_FUNCTION_10_1())
  {
    sub_240BF03EC();
    sub_240BE0B68(v2, &qword_25708BD80);
  }
  else
  {
    OUTLINED_FUNCTION_9_1(v0, v3 - 392);
    _s20MLModelSpecification31PipelineClassifierConfigurationV2eeoiySbAC_ACtFZ_0();
    OUTLINED_FUNCTION_6_0();
    sub_240BF03EC();
    OUTLINED_FUNCTION_285();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240BEA2AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  v8 = v7;
  v39 = OUTLINED_FUNCTION_234();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_59();
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v12);
  v13 = OUTLINED_FUNCTION_388();
  v40 = type metadata accessor for Proto_MILSpec_ValueType(v13);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_88();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_228();
  v16 = *(_QWORD *)(v3 + 16);
  if (v16 != *(_QWORD *)(v8 + 16) || !v16 || v3 == v8)
    goto LABEL_21;
  v33 = v1;
  v31 = v0;
  OUTLINED_FUNCTION_345();
  v19 = v18 & ~v17;
  v36 = v2;
  v37 = *(_QWORD *)(v20 + 72);
  v34 = v3;
  v35 = v8;
  v32 = v5;
  while (1)
  {
    OUTLINED_FUNCTION_110(v3 + v19, v2);
    OUTLINED_FUNCTION_110(v8 + v19, v5);
    v21 = *(int *)(v40 + 20);
    v22 = *(_QWORD *)(v2 + v21);
    v23 = *(_QWORD *)(v5 + v21);
    if (v22 == v23)
      goto LABEL_14;
    v24 = v22
        + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
    OUTLINED_FUNCTION_4_1();
    sub_240C02F94(v24, v4, &qword_25708BF68);
    v25 = v23
        + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
    OUTLINED_FUNCTION_4_1();
    v26 = v6 + *(int *)(v38 + 48);
    OUTLINED_FUNCTION_149(v4, v6);
    OUTLINED_FUNCTION_149(v25, v26);
    OUTLINED_FUNCTION_7_1(v6, 1, v39);
    if (v28)
    {
      OUTLINED_FUNCTION_176();
      OUTLINED_FUNCTION_243();
      sub_240BE0B68(v4, &qword_25708BF68);
      v27 = OUTLINED_FUNCTION_7_1(v26, 1, v39);
      if (!v28)
        goto LABEL_18;
      sub_240BE0B68(v6, &qword_25708BF68);
      v2 = v36;
      goto LABEL_13;
    }
    sub_240C02F94(v6, v33, &qword_25708BF68);
    OUTLINED_FUNCTION_7_1(v26, 1, v39);
    if (v28)
      break;
    sub_240BF0410(v26, v31, type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type);
    OUTLINED_FUNCTION_176();
    OUTLINED_FUNCTION_243();
    v29 = sub_240D3B32C(v33, v31);
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_187(v4);
    OUTLINED_FUNCTION_164();
    OUTLINED_FUNCTION_187(v6);
    v5 = v32;
    v2 = v36;
    if ((v29 & 1) == 0)
      goto LABEL_19;
LABEL_13:
    OUTLINED_FUNCTION_287();
    OUTLINED_FUNCTION_380();
    v3 = v34;
    v8 = v35;
LABEL_14:
    OUTLINED_FUNCTION_20_0();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    if ((OUTLINED_FUNCTION_52_0() & 1) == 0)
      goto LABEL_20;
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_35_0();
    v19 += v37;
    if (!--v16)
      goto LABEL_21;
  }
  OUTLINED_FUNCTION_176();
  v30 = OUTLINED_FUNCTION_243();
  OUTLINED_FUNCTION_212(v30, &qword_25708BF68);
  OUTLINED_FUNCTION_217();
LABEL_18:
  OUTLINED_FUNCTION_163(v27, &qword_25708BF60);
LABEL_19:
  OUTLINED_FUNCTION_287();
  OUTLINED_FUNCTION_380();
LABEL_20:
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_6_0();
LABEL_21:
  OUTLINED_FUNCTION_1();
}

void sub_240BEA624()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t *v40;
  char v41;
  char v42;
  uint64_t *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v49;
  int v50;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;

  OUTLINED_FUNCTION_22();
  v7 = v6;
  v9 = v8;
  type metadata accessor for Proto_MILSpec_Value(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_80();
  v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0F0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v59 = (char *)&v54 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = OUTLINED_FUNCTION_101();
  v14 = type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding(v13);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_248();
  MEMORY[0x24BDAC7A8](v16);
  v58 = (uint64_t *)((char *)&v54 - v17);
  OUTLINED_FUNCTION_23_0();
  v19 = MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_387(v19, v20, v21, v22, v23, v24, v25, v26, v54);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0F8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_48();
  v65 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C100);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  v29 = OUTLINED_FUNCTION_137();
  v63 = type metadata accessor for Proto_MILSpec_Argument.Binding(v29);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_135();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_228();
  v66 = v9;
  v67 = v7;
  v33 = *(_QWORD *)(v9 + 16);
  if (v33 != *(_QWORD *)(v7 + 16) || !v33 || v66 == v67)
    goto LABEL_38;
  v55 = v0;
  v34 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
  v61 = *(_QWORD *)(v32 + 72);
  v35 = v33 - 1;
  v62 = v3;
  v56 = v1;
  v57 = v5;
  v36 = (uint64_t)v59;
  while (1)
  {
    OUTLINED_FUNCTION_54_0(v66 + v34, v2);
    OUTLINED_FUNCTION_54_0(v67 + v34, v5);
    v37 = v4 + *(int *)(v65 + 48);
    OUTLINED_FUNCTION_96(v2, v4);
    OUTLINED_FUNCTION_96(v5, v37);
    OUTLINED_FUNCTION_7_1(v4, 1, v14);
    if (!v38)
      break;
    OUTLINED_FUNCTION_7_1(v37, 1, v14);
    if (!v38)
      goto LABEL_37;
LABEL_23:
    OUTLINED_FUNCTION_187(v4);
    v50 = v2 + *(_DWORD *)(v63 + 20);
    OUTLINED_FUNCTION_20_0();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_342();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_58_0();
    v52 = v35-- != 0;
    if ((v50 & 1) != 0)
    {
      v3 = v62;
      v34 += v61;
      if (v52)
        continue;
    }
    goto LABEL_38;
  }
  OUTLINED_FUNCTION_96(v4, v3);
  OUTLINED_FUNCTION_7_1(v37, 1, v14);
  if (v38)
    goto LABEL_36;
  v39 = v64;
  sub_240BF0410(v37, v64, type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding);
  v40 = (uint64_t *)(v36 + *(int *)(v60 + 48));
  OUTLINED_FUNCTION_153(v3, v36);
  OUTLINED_FUNCTION_54_0(v39, (uint64_t)v40);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240BF04E8(v36, v56, type metadata accessor for Proto_MILSpec_Argument.Binding.OneOf_Binding);
    if (OUTLINED_FUNCTION_381() != 1)
    {
      sub_240BF03EC();
      goto LABEL_34;
    }
    OUTLINED_FUNCTION_282((uint64_t)v40, v55);
    _s20MLModelSpecification9MLProgramV5ValueV2eeoiySbAE_AEtFZ_0();
    v42 = v41;
    OUTLINED_FUNCTION_138();
    v36 = (uint64_t)v59;
    OUTLINED_FUNCTION_138();
    v5 = v57;
    if ((v42 & 1) == 0)
      goto LABEL_31;
    goto LABEL_22;
  }
  v43 = v58;
  OUTLINED_FUNCTION_54_0(v36, (uint64_t)v58);
  v44 = *v43;
  v45 = v43[1];
  if (OUTLINED_FUNCTION_381() != 1)
  {
    v46 = *v40;
    v47 = v40[1];
    if (v44 == v46 && v45 == v47)
    {
      swift_bridgeObjectRelease_n();
      v5 = v57;
    }
    else
    {
      v49 = OUTLINED_FUNCTION_51_0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 = v57;
      if ((v49 & 1) == 0)
      {
LABEL_31:
        OUTLINED_FUNCTION_21_0();
        goto LABEL_35;
      }
    }
LABEL_22:
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_35_0();
    OUTLINED_FUNCTION_35_0();
    goto LABEL_23;
  }
  v53 = swift_bridgeObjectRelease();
LABEL_34:
  OUTLINED_FUNCTION_39(v53, &qword_25708C0F0);
LABEL_35:
  sub_240BF03EC();
LABEL_36:
  OUTLINED_FUNCTION_217();
LABEL_37:
  OUTLINED_FUNCTION_166(v4);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_6_0();
LABEL_38:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEAAD0()
{
  sub_240BEF494();
}

void sub_240BEAAE4()
{
  sub_240BEF494();
}

void sub_240BEAAF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    goto LABEL_9;
  if (!v2 || a1 == a2)
  {
    OUTLINED_FUNCTION_236();
    return;
  }
  if (*(float *)(a1 + 32) != *(float *)(a2 + 32))
  {
LABEL_9:
    OUTLINED_FUNCTION_202();
    return;
  }
  v3 = a1 + 36;
  v4 = v2 - 1;
  do
  {
    if (!v4)
      break;
    OUTLINED_FUNCTION_264(v3);
  }
  while (v5);
}

uint64_t sub_240BEAB58(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int *v3;
  int *v4;
  uint64_t v5;
  uint64_t result;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_202();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_236();
  if (*(_DWORD *)(a1 + 32) != *(_DWORD *)(a2 + 32))
    return OUTLINED_FUNCTION_202();
  v3 = (int *)(a1 + 36);
  v4 = (int *)(a2 + 36);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v8 = *v3++;
    v7 = v8;
    v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

uint64_t sub_240BEABBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  unsigned __int8 *v4;
  unsigned __int8 *v5;
  uint64_t v6;
  int v7;
  int v8;
  int v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_202();
  if (!v2 || a1 == a2)
    return 1;
  if (*(unsigned __int8 *)(a1 + 32) != *(unsigned __int8 *)(a2 + 32))
    return OUTLINED_FUNCTION_202();
  v4 = (unsigned __int8 *)(a1 + 33);
  v5 = (unsigned __int8 *)(a2 + 33);
  v6 = v2 - 1;
  do
  {
    result = v6 == 0;
    if (!v6)
      break;
    v8 = *v4++;
    v7 = v8;
    v9 = *v5++;
    --v6;
  }
  while (v7 == v9);
  return result;
}

void sub_240BEAC24(_QWORD *a1, _QWORD *a2)
{
  unint64_t v2;
  BOOL v5;
  _QWORD *v6;
  _QWORD *v7;
  unint64_t v8;
  BOOL v9;

  v2 = a1[2];
  if (v2 == a2[2]
    && v2
    && a1 != a2
    && (a1[4] == a2[4] ? (v5 = a1[5] == a2[5]) : (v5 = 0), (v5 || (OUTLINED_FUNCTION_51_0() & 1) != 0) && v2 != 1))
  {
    v6 = a2 + 7;
    v7 = a1 + 7;
    v8 = 1;
    while (v8 < v2)
    {
      v9 = *(v7 - 1) == *(v6 - 1) && *v7 == *v6;
      if (v9 || (OUTLINED_FUNCTION_51_0() & 1) != 0)
      {
        ++v8;
        v6 += 2;
        v7 += 2;
        if (v2 != v8)
          continue;
      }
      goto LABEL_18;
    }
    __break(1u);
  }
  else
  {
LABEL_18:
    OUTLINED_FUNCTION_156();
  }
}

uint64_t sub_240BEACE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  double *v3;
  double *v4;
  uint64_t v5;
  uint64_t result;
  double v7;
  double v8;
  double v9;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_202();
  if (!v2 || a1 == a2)
    return OUTLINED_FUNCTION_236();
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32))
    return OUTLINED_FUNCTION_202();
  v3 = (double *)(a1 + 40);
  v4 = (double *)(a2 + 40);
  v5 = v2 - 1;
  do
  {
    result = v5 == 0;
    if (!v5)
      break;
    v7 = *v3++;
    v8 = v7;
    v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_240BEAD48(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
      return 1;
    if (*(unsigned __int8 *)(a1 + 32) == *(unsigned __int8 *)(a2 + 32))
      __asm { BR              X8 }
  }
  return 0;
}

void sub_240BEB1A8()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _DWORD *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t (*v22)(uint64_t);
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  double *v32;
  char v33;
  double *v34;
  char v35;
  char v36;
  char v37;
  BOOL v39;
  uint64_t v40;
  double *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  double *v47;
  uint64_t v48;
  uint64_t v49;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v6 = v5;
  v7 = type metadata accessor for Proto_BayesianProbitRegressor.Gaussian(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_253(v10, v40);
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BFF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v12 = OUTLINED_FUNCTION_90();
  v49 = type metadata accessor for Proto_BayesianProbitRegressor.FeatureValueWeight(v12);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_88();
  MEMORY[0x24BDAC7A8](v14);
  v17 = (_DWORD *)((char *)&v40 - v16);
  v18 = *(_QWORD *)(v6 + 16);
  if (v18 == *(_QWORD *)(v4 + 16) && v18 && v6 != v4)
  {
    v45 = v1;
    v46 = v7;
    v41 = (double *)v0;
    v19 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
    v43 = *(_QWORD *)(v15 + 72);
    v20 = v18 - 1;
    v21 = type metadata accessor for Proto_BayesianProbitRegressor.FeatureValueWeight;
    v44 = v6;
    v42 = v4;
    while (1)
    {
      OUTLINED_FUNCTION_283(v6 + v19, (uint64_t)v17);
      v22 = v21;
      OUTLINED_FUNCTION_283(v4 + v19, (uint64_t)v2);
      if (*v17 != *v2)
        break;
      v23 = *(int *)(v49 + 24);
      v24 = (char *)v2 + v23;
      v25 = v45;
      v26 = v45 + *(int *)(v48 + 48);
      OUTLINED_FUNCTION_94((uint64_t)v17 + v23, v45);
      v27 = (uint64_t)v24;
      v28 = v25;
      OUTLINED_FUNCTION_94(v27, v26);
      v29 = OUTLINED_FUNCTION_357();
      v30 = v46;
      OUTLINED_FUNCTION_7_1(v29, v31, v46);
      if (v33)
      {
        OUTLINED_FUNCTION_7_1(v26, 1, v30);
        if (!v33)
          goto LABEL_24;
        sub_240BE0B68(v28, &qword_25708BE50);
      }
      else
      {
        v32 = v47;
        OUTLINED_FUNCTION_94(v28, (uint64_t)v47);
        OUTLINED_FUNCTION_7_1(v26, 1, v30);
        if (v33)
          goto LABEL_23;
        v34 = v41;
        sub_240BF0410(v26, (uint64_t)v41, type metadata accessor for Proto_BayesianProbitRegressor.Gaussian);
        if (*v32 != *v34 || v32[1] != v34[1])
        {
          OUTLINED_FUNCTION_155();
LABEL_23:
          sub_240BF03EC();
LABEL_24:
          OUTLINED_FUNCTION_157(v28);
          break;
        }
        v35 = OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_52_0();
        OUTLINED_FUNCTION_340();
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        sub_240BE0B68(v28, &qword_25708BE50);
        if ((v35 & 1) == 0)
          break;
      }
      OUTLINED_FUNCTION_343();
      v37 = (_BYTE)v17 + v36;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_383();
      OUTLINED_FUNCTION_102();
      OUTLINED_FUNCTION_341();
      v21 = v22;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_128();
      v39 = v20-- != 0;
      if ((v37 & 1) != 0)
      {
        v4 = v42;
        v19 += v43;
        v6 = v44;
        if (v39)
          continue;
      }
      goto LABEL_26;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_26:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEB508(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    goto LABEL_9;
  if (!v2 || a1 == a2)
  {
    OUTLINED_FUNCTION_236();
    return;
  }
  if (*(_QWORD *)(a1 + 32) != *(_QWORD *)(a2 + 32))
  {
LABEL_9:
    OUTLINED_FUNCTION_202();
    return;
  }
  v3 = v2 - 1;
  do
  {
    if (!v3)
      break;
    OUTLINED_FUNCTION_318();
  }
  while (v4);
}

void sub_240BEB568()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  double *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  double *v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  char v26;
  _QWORD v27[2];
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  double *v37;

  OUTLINED_FUNCTION_22();
  v5 = OUTLINED_FUNCTION_197();
  v6 = type metadata accessor for Proto_ItemSimilarityRecommender.ConnectedItem(v5);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_111();
  type metadata accessor for Proto_ItemSimilarityRecommender.SimilarItems(v9);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_249();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (double *)((char *)v27 - v12);
  OUTLINED_FUNCTION_181();
  if (v16 && v15 && v4 != v0)
  {
    v32 = v14;
    v27[1] = v7;
    v35 = v6;
    OUTLINED_FUNCTION_221();
    v36 = v13;
    v37 = v3;
    v30 = v18;
    v31 = v19;
    v28 = v17;
    v29 = v0;
    while (1)
    {
      v33 = v6;
      v20 = v17 * v6;
      OUTLINED_FUNCTION_130(v18 + v20, (uint64_t)v13);
      OUTLINED_FUNCTION_130(v0 + v20, (uint64_t)v3);
      if (*(_QWORD *)v13 != *(_QWORD *)v3
        || (v21 = *((_QWORD *)v36 + 1),
            v22 = *((_QWORD *)v37 + 1),
            v23 = *(_QWORD *)(v21 + 16),
            v23 != *(_QWORD *)(v22 + 16)))
      {
LABEL_23:
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        goto LABEL_24;
      }
      if (v23 && v21 != v22)
        break;
LABEL_17:
      if (v36[2] != v37[2])
        goto LABEL_23;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_277();
      if ((OUTLINED_FUNCTION_102() & 1) == 0)
        goto LABEL_23;
      v6 = v33 + 1;
      v3 = v37;
      OUTLINED_FUNCTION_77();
      v13 = v36;
      OUTLINED_FUNCTION_77();
      v18 = v30;
      v17 = v28;
      v0 = v29;
      if (v6 == v31)
        goto LABEL_24;
    }
    v24 = 0;
    OUTLINED_FUNCTION_374();
    v34 = v25;
    while (1)
    {
      OUTLINED_FUNCTION_153((uint64_t)v3 + v21, (uint64_t)v2);
      if (v24 >= *(_QWORD *)(v22 + 16))
        break;
      OUTLINED_FUNCTION_153((uint64_t)v3 + v22, (uint64_t)v1);
      if (*v2 != *v1 || (OUTLINED_FUNCTION_310(), !v16))
      {
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        goto LABEL_23;
      }
      v26 = OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_276();
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_339();
      OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_97();
      if ((v26 & 1) == 0)
        goto LABEL_23;
      ++v24;
      v3 = (double *)((char *)v3 + v34);
      if (v23 == v24)
        goto LABEL_17;
    }
    __break(1u);
  }
  else
  {
LABEL_24:
    OUTLINED_FUNCTION_1();
  }
}

void sub_240BEB838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  OUTLINED_FUNCTION_22();
  v6 = OUTLINED_FUNCTION_198();
  type metadata accessor for Proto_ItemSimilarityRecommender.ConnectedItem(v6);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_144();
  if (v9 && v5 && v1 != v0)
  {
    OUTLINED_FUNCTION_159();
    while (1)
    {
      OUTLINED_FUNCTION_161(v1 + v2, v4);
      OUTLINED_FUNCTION_161(v0 + v2, v3);
      OUTLINED_FUNCTION_306();
      if (!v9)
        break;
      OUTLINED_FUNCTION_320();
      if (!v9)
        break;
      OUTLINED_FUNCTION_20_0();
      OUTLINED_FUNCTION_129();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_142();
      if ((v10 & 1) == 0)
        break;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_265();
      if (v9)
        goto LABEL_15;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_15:
  OUTLINED_FUNCTION_1();
}

void sub_240BEB958()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  char v10;

  OUTLINED_FUNCTION_22();
  v6 = OUTLINED_FUNCTION_198();
  type metadata accessor for Proto_FeatureVectorizer.InputColumn(v6);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_144();
  if (v9 && v5 && v1 != v0)
  {
    OUTLINED_FUNCTION_159();
    while (1)
    {
      OUTLINED_FUNCTION_161(v1 + v2, (uint64_t)v4);
      OUTLINED_FUNCTION_161(v0 + v2, (uint64_t)v3);
      v9 = *v4 == *v3 && v4[1] == v3[1];
      if (!v9 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        break;
      if (v4[2] != v3[2])
        break;
      OUTLINED_FUNCTION_20_0();
      OUTLINED_FUNCTION_129();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_142();
      if ((v10 & 1) == 0)
        break;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_265();
      if (v9)
        goto LABEL_17;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_17:
  OUTLINED_FUNCTION_1();
}

void sub_240BEBA94()
{
  uint64_t v0;
  uint64_t v1;
  _DWORD *v2;
  _DWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_22();
  v7 = OUTLINED_FUNCTION_197();
  v8 = type metadata accessor for Proto_SparseNode(v7);
  v9 = OUTLINED_FUNCTION_229(v8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_111();
  v12 = type metadata accessor for Proto_SparseVector(v11);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_330();
  OUTLINED_FUNCTION_181();
  if (v16 && v15 && v6 != v1)
  {
    v32 = v0;
    OUTLINED_FUNCTION_291();
    v20 = v1 + v19;
    v22 = *(_QWORD *)(v21 + 72);
    v38 = v5;
    v39 = v4;
    v36 = v23;
    v37 = v12;
    v34 = v20;
    v35 = v17;
    v33 = v22;
    while (1)
    {
      v40 = v18;
      v24 = v22 * v18;
      OUTLINED_FUNCTION_208(v17 + v22 * v18, v5);
      OUTLINED_FUNCTION_208(v20 + v24, (uint64_t)v4);
      v25 = *(_QWORD *)v5;
      v26 = *v4;
      v27 = *(_QWORD *)(*(_QWORD *)v5 + 16);
      if (v27 != *(_QWORD *)(v26 + 16))
      {
LABEL_21:
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        goto LABEL_22;
      }
      if (v27 && v25 != v26)
        break;
LABEL_16:
      v5 = v38;
      v31 = v38 + *(_DWORD *)(v37 + 20);
      v4 = v39;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_277();
      OUTLINED_FUNCTION_102();
      OUTLINED_FUNCTION_272();
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_164();
      if ((v31 & 1) != 0)
      {
        v18 = v40 + 1;
        v17 = v35;
        v22 = v33;
        v20 = v34;
        if (v40 + 1 != v36)
          continue;
      }
      goto LABEL_22;
    }
    v28 = 0;
    v29 = (*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80);
    v41 = *(_QWORD *)(v32 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_283(v25 + v29, (uint64_t)v3);
      if (v28 >= *(_QWORD *)(v26 + 16))
        break;
      OUTLINED_FUNCTION_283(v26 + v29, (uint64_t)v2);
      if (*v3 != *v2 || (OUTLINED_FUNCTION_310(), !v16))
      {
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        goto LABEL_21;
      }
      v30 = OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_276();
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_339();
      OUTLINED_FUNCTION_138();
      OUTLINED_FUNCTION_138();
      if ((v30 & 1) == 0)
        goto LABEL_21;
      ++v28;
      v29 += v41;
      if (v27 == v28)
        goto LABEL_16;
    }
    __break(1u);
  }
  else
  {
LABEL_22:
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_1();
  }
}

void sub_240BEBD24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _DWORD *v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;

  OUTLINED_FUNCTION_22();
  v6 = OUTLINED_FUNCTION_198();
  type metadata accessor for Proto_SparseNode(v6);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_144();
  if (v9 && v5 && v1 != v0)
  {
    OUTLINED_FUNCTION_159();
    while (1)
    {
      OUTLINED_FUNCTION_161(v1 + v2, (uint64_t)v4);
      OUTLINED_FUNCTION_161(v0 + v2, (uint64_t)v3);
      if (*v4 != *v3)
        break;
      OUTLINED_FUNCTION_320();
      if (!v9)
        break;
      OUTLINED_FUNCTION_20_0();
      OUTLINED_FUNCTION_129();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_142();
      if ((v10 & 1) == 0)
        break;
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_128();
      OUTLINED_FUNCTION_265();
      if (v9)
        goto LABEL_14;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_14:
  OUTLINED_FUNCTION_1();
}

void sub_240BEBE4C()
{
  sub_240BEED94();
}

void sub_240BEBE58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _DWORD *v4;
  _DWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  double *v36;
  char v37;
  uint64_t v38;
  double *v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  double *v56;
  double *v57;
  uint64_t v58;
  uint64_t v59;

  OUTLINED_FUNCTION_22();
  v7 = OUTLINED_FUNCTION_197();
  v8 = type metadata accessor for Proto_BayesianProbitRegressor.Gaussian(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_252(v10, v42);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_253(v12, v42);
  v58 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BFF0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_60();
  v15 = type metadata accessor for Proto_BayesianProbitRegressor.FeatureValueWeight(v14);
  v16 = OUTLINED_FUNCTION_229(v15);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8](v17);
  v18 = OUTLINED_FUNCTION_388();
  type metadata accessor for Proto_BayesianProbitRegressor.FeatureWeight(v18);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v20);
  v22 = (char *)&v42 - v21;
  OUTLINED_FUNCTION_181();
  if (v37 && v24 && v6 != v1)
  {
    v48 = v23;
    v43 = v0;
    OUTLINED_FUNCTION_221();
    v54 = v8;
    v49 = v22;
    v50 = v2;
    v46 = v26;
    v47 = v27;
    v44 = v25;
    v45 = v1;
    while (1)
    {
      v51 = v0;
      v28 = v25 * v0;
      OUTLINED_FUNCTION_168(v26 + v28, (uint64_t)v22);
      OUTLINED_FUNCTION_168(v1 + v28, v2);
      if (*(_DWORD *)v22 != *(_DWORD *)v2
        || (v29 = *(_QWORD *)(v2 + 8),
            v55 = *((_QWORD *)v22 + 1),
            v30 = *(_QWORD *)(v55 + 16),
            v30 != *(_QWORD *)(v29 + 16)))
      {
LABEL_32:
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        goto LABEL_33;
      }
      if (v30 && v55 != v29)
        break;
LABEL_24:
      v22 = v49;
      v2 = v50;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_277();
      v8 = v54;
      if ((sub_240F1CC90() & 1) == 0)
        goto LABEL_32;
      v0 = v51 + 1;
      OUTLINED_FUNCTION_319();
      OUTLINED_FUNCTION_319();
      v26 = v46;
      v25 = v44;
      v1 = v45;
      if (v0 == v47)
        goto LABEL_33;
    }
    v31 = 0;
    v32 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    v52 = *(_QWORD *)(v43 + 72);
    v53 = v30;
    while (1)
    {
      OUTLINED_FUNCTION_153(v55 + v32, (uint64_t)v5);
      if (v31 >= *(_QWORD *)(v29 + 16))
        break;
      OUTLINED_FUNCTION_153(v29 + v32, (uint64_t)v4);
      if (*v5 != *v4)
        goto LABEL_31;
      v33 = *(int *)(v59 + 24);
      v34 = (uint64_t)v4 + v33;
      v35 = v3 + *(int *)(v58 + 48);
      OUTLINED_FUNCTION_94((uint64_t)v5 + v33, v3);
      OUTLINED_FUNCTION_94(v34, v35);
      OUTLINED_FUNCTION_7_1(v3, 1, v8);
      if (v37)
      {
        OUTLINED_FUNCTION_7_1(v35, 1, v8);
        if (!v37)
          goto LABEL_30;
      }
      else
      {
        v36 = v57;
        OUTLINED_FUNCTION_94(v3, (uint64_t)v57);
        OUTLINED_FUNCTION_7_1(v35, 1, v8);
        if (v37)
          goto LABEL_29;
        v38 = v35;
        v39 = v56;
        sub_240BF0410(v38, (uint64_t)v56, type metadata accessor for Proto_BayesianProbitRegressor.Gaussian);
        if (*v36 != *v39
          || v36[1] != v39[1]
          || (OUTLINED_FUNCTION_20_0(),
              sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]),
              (OUTLINED_FUNCTION_52_0() & 1) == 0))
        {
          OUTLINED_FUNCTION_327();
LABEL_29:
          sub_240BF03EC();
LABEL_30:
          OUTLINED_FUNCTION_166(v3);
LABEL_31:
          OUTLINED_FUNCTION_6_0();
          OUTLINED_FUNCTION_6_0();
          goto LABEL_32;
        }
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
      }
      OUTLINED_FUNCTION_166(v3);
      OUTLINED_FUNCTION_343();
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_278();
      v8 = v54;
      v40 = sub_240F1CC90();
      v41 = v53;
      if ((v40 & 1) == 0)
        goto LABEL_31;
      ++v31;
      OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_97();
      v32 += v52;
      if (v41 == v31)
        goto LABEL_24;
    }
    __break(1u);
  }
  else
  {
LABEL_33:
    OUTLINED_FUNCTION_1();
  }
}

void sub_240BEC2E0()
{
  sub_240BEED94();
}

void sub_240BEC2EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22();
  v4 = OUTLINED_FUNCTION_196();
  type metadata accessor for Proto_FloatVector(v4);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_145();
  if (v10 && v2 && v1 != v0)
  {
    OUTLINED_FUNCTION_92();
    while (1)
    {
      OUTLINED_FUNCTION_116();
      OUTLINED_FUNCTION_123(v14);
      OUTLINED_FUNCTION_160();
      if (!v10)
        break;
      if (v9)
        v10 = v7 == v8;
      else
        v10 = 1;
      if (!v10)
      {
        if (*(float *)(v7 + 32) != *(float *)(v8 + 32))
          break;
        v12 = v7 + 36;
        v13 = v9 - 1;
        while (v13)
        {
          OUTLINED_FUNCTION_264(v12);
          if (!v10)
            goto LABEL_20;
        }
      }
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v11 = OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_77();
      if ((v11 & 1) != 0 && ++v3 != v2)
        continue;
      goto LABEL_21;
    }
LABEL_20:
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_21:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEC42C()
{
  sub_240BEF494();
}

void sub_240BEC440()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_391();
  v7 = type metadata accessor for Proto_MILSpec_Dimension.OneOf_Dimension(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF58);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_89();
  type metadata accessor for Proto_MILSpec_Dimension(v11);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_88();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_260();
  if (!v24)
    goto LABEL_20;
  if (!v15)
    goto LABEL_20;
  v16 = v0;
  v17 = v5;
  if (v16 == v5)
    goto LABEL_20;
  OUTLINED_FUNCTION_206(v14);
  while (1)
  {
    v30 = v18;
    OUTLINED_FUNCTION_110(v16 + v5, v1);
    OUTLINED_FUNCTION_110(v17 + v5, v3);
    v19 = OUTLINED_FUNCTION_273();
    OUTLINED_FUNCTION_117(v19, v20);
    OUTLINED_FUNCTION_117(v3, (uint64_t)type metadata accessor for Proto_MILSpec_Dimension);
    OUTLINED_FUNCTION_7_1(v2, 1, v7);
    if (!v24)
      break;
    v21 = OUTLINED_FUNCTION_7_1((uint64_t)type metadata accessor for Proto_MILSpec_Dimension, 1, v7);
    if (!v24)
      goto LABEL_18;
    sub_240BE0B68(v2, &qword_25708BF50);
LABEL_13:
    v27 = OUTLINED_FUNCTION_20_0();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_341();
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_77();
    v18 = v30 - 1;
    if ((v27 & 1) != 0)
    {
      v5 += v29;
      if (v30)
        continue;
    }
    goto LABEL_20;
  }
  v22 = OUTLINED_FUNCTION_362();
  sub_240C02F94(v22, v23, &qword_25708BF50);
  OUTLINED_FUNCTION_7_1((uint64_t)type metadata accessor for Proto_MILSpec_Dimension, 1, v7);
  if (!v24)
  {
    OUTLINED_FUNCTION_282((uint64_t)type metadata accessor for Proto_MILSpec_Dimension, v28);
    sub_240D3B7C8();
    v26 = v25;
    OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_138();
    sub_240BE0B68(v2, &qword_25708BF50);
    if ((v26 & 1) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_281();
LABEL_18:
  OUTLINED_FUNCTION_36(v21, &qword_25708BF58);
LABEL_19:
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_6_0();
LABEL_20:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEC6BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  char *v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  int v56;
  char v57;
  char v58;
  BOOL v60;
  uint64_t v61;
  int v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  uint64_t v79;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  v70 = type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v67 = (uint64_t)&v61 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v69 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_255(v8, v61);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_10();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v61 - v11;
  v13 = type metadata accessor for Proto_MILSpec_ValueType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_312();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (char *)&v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  v20 = OUTLINED_FUNCTION_89();
  type metadata accessor for Proto_MILSpec_NamedValueType(v20);
  OUTLINED_FUNCTION_17_0();
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (uint64_t *)((char *)&v61 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25 = MEMORY[0x24BDAC7A8](v22);
  v29 = (uint64_t *)((char *)&v61 - v28);
  v30 = *(_QWORD *)(v4 + 16);
  if (v30 == *(_QWORD *)(v27 + 16))
  {
    v79 = v25;
    v76 = v18;
    v77 = v13;
    v68 = v12;
    v66 = v17;
    v63 = v0;
    if (v30)
    {
      if (v4 != v27)
      {
        v31 = v27;
        v74 = v27;
        v75 = v2;
        v32 = (*(unsigned __int8 *)(v26 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v26 + 80);
        v72 = *(_QWORD *)(v26 + 72);
        v73 = v4;
        v33 = v30 - 1;
        v34 = v66;
        v78 = v24;
        while (1)
        {
          OUTLINED_FUNCTION_140(v4 + v32, (uint64_t)v29);
          OUTLINED_FUNCTION_140(v31 + v32, (uint64_t)v24);
          v35 = *v29 == *v24 && v29[1] == v24[1];
          v36 = v79;
          if (!v35 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
            break;
          v37 = *(int *)(v36 + 24);
          v38 = (uint64_t)v24 + v37;
          v39 = v1 + *(int *)(v76 + 48);
          OUTLINED_FUNCTION_149((uint64_t)v29 + v37, v1);
          sub_240C02F94(v38, v39, &qword_25708C098);
          v40 = v77;
          OUTLINED_FUNCTION_7_1(v1, 1, v77);
          if (v35)
          {
            OUTLINED_FUNCTION_7_1(v39, 1, v40);
            if (!v35)
              goto LABEL_38;
            OUTLINED_FUNCTION_157(v1);
            v24 = v78;
          }
          else
          {
            v41 = OUTLINED_FUNCTION_305();
            sub_240C02F94(v41, v42, &qword_25708C098);
            OUTLINED_FUNCTION_7_1(v39, 1, v40);
            if (v43)
              goto LABEL_37;
            v44 = v39;
            v45 = v75;
            sub_240BF0410(v44, v75, type metadata accessor for Proto_MILSpec_ValueType);
            v46 = *(int *)(v40 + 20);
            v47 = *(_QWORD *)&v34[v46];
            v48 = *(_QWORD *)(v45 + v46);
            if (v47 != v48)
            {
              v49 = v47
                  + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
              v64 = *(_QWORD *)&v34[v46];
              OUTLINED_FUNCTION_4_1();
              v50 = (uint64_t)v68;
              OUTLINED_FUNCTION_207(v49, (uint64_t)v68);
              v51 = v48
                  + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
              OUTLINED_FUNCTION_4_1();
              v52 = v71;
              v53 = v71 + *(int *)(v69 + 48);
              OUTLINED_FUNCTION_207(v50, v71);
              OUTLINED_FUNCTION_207(v51, v53);
              v54 = v70;
              OUTLINED_FUNCTION_7_1(v52, 1, v70);
              v65 = v48;
              if (v35)
              {
                swift_retain();
                swift_retain();
                OUTLINED_FUNCTION_157(v50);
                OUTLINED_FUNCTION_7_1(v53, 1, v54);
                if (!v35)
                  goto LABEL_35;
                OUTLINED_FUNCTION_157(v71);
                v34 = v66;
              }
              else
              {
                sub_240C02F94(v52, v63, &qword_25708BF68);
                OUTLINED_FUNCTION_7_1(v53, 1, v54);
                if (v55)
                {
                  swift_retain();
                  swift_retain();
                  sub_240BE0B68((uint64_t)v68, &qword_25708BF68);
                  OUTLINED_FUNCTION_327();
LABEL_35:
                  sub_240BE0B68(v71, &qword_25708BF60);
LABEL_36:
                  OUTLINED_FUNCTION_211();
                  OUTLINED_FUNCTION_154();
                  sub_240BF03EC();
LABEL_37:
                  sub_240BF03EC();
LABEL_38:
                  OUTLINED_FUNCTION_166(v1);
                  break;
                }
                sub_240BF0410(v53, v67, type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type);
                swift_retain();
                OUTLINED_FUNCTION_184();
                OUTLINED_FUNCTION_259();
                v62 = v56;
                sub_240BF03EC();
                OUTLINED_FUNCTION_279((uint64_t)v68);
                sub_240BF03EC();
                OUTLINED_FUNCTION_279(v52);
                v34 = v66;
                if ((v62 & 1) == 0)
                  goto LABEL_36;
              }
              OUTLINED_FUNCTION_211();
              OUTLINED_FUNCTION_154();
            }
            OUTLINED_FUNCTION_20_0();
            sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
            OUTLINED_FUNCTION_276();
            v57 = OUTLINED_FUNCTION_52_0();
            OUTLINED_FUNCTION_35_0();
            OUTLINED_FUNCTION_35_0();
            sub_240BE0B68(v1, &qword_25708C098);
            v24 = v78;
            if ((v57 & 1) == 0)
              break;
          }
          OUTLINED_FUNCTION_20_0();
          sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          v58 = sub_240F1CC90();
          OUTLINED_FUNCTION_35_0();
          OUTLINED_FUNCTION_35_0();
          v60 = v33-- != 0;
          if ((v58 & 1) != 0)
          {
            v4 = v73;
            v32 += v72;
            v31 = v74;
            if (v60)
              continue;
          }
          goto LABEL_40;
        }
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
      }
    }
  }
LABEL_40:
  OUTLINED_FUNCTION_1();
}

void sub_240BECCF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  uint64_t v51;
  BOOL v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  char v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  char v79;
  char v80;
  char v81;
  int v82;
  _QWORD *v83;
  _QWORD *v84;
  unint64_t v85;
  BOOL v86;
  BOOL v87;
  _QWORD *v88;
  _QWORD *v89;
  unint64_t v90;
  BOOL v91;
  char v92;
  uint64_t v93[3];
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  _QWORD *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  uint64_t *v113;
  uint64_t v114;
  uint64_t v115;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  OUTLINED_FUNCTION_234();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_136(v7, v93[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_132();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v111 = OUTLINED_FUNCTION_227(v10, v11, v12, v13, v14, v15, v16, v17, v93[0]);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_251(v20, v93[0]);
  v110 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = OUTLINED_FUNCTION_109(v22, v93[0]);
  v115 = type metadata accessor for Proto_MILSpec_NamedValueType(v23);
  v103 = *(_QWORD *)(v115 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)v93 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_118();
  MEMORY[0x24BDAC7A8](v27);
  v28 = OUTLINED_FUNCTION_111();
  type metadata accessor for Proto_MILSpec_Block(v28);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_372();
  v113 = v30;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v31);
  v112 = (char *)v93 - v32;
  OUTLINED_FUNCTION_181();
  if (v52 && v34 && v1 != v4)
  {
    OUTLINED_FUNCTION_151(v33);
    v35 = 0;
    OUTLINED_FUNCTION_148();
    v38 = v4 + v37;
    v40 = *(_QWORD *)(v39 + 72);
    v42 = (uint64_t *)v112;
    v41 = v113;
    v97 = v43;
    v96 = v36;
    v95 = v38;
    v94 = v40;
    while (1)
    {
      v101 = v35;
      v44 = v40 * v35;
      OUTLINED_FUNCTION_161(v36 + v44, (uint64_t)v42);
      OUTLINED_FUNCTION_161(v38 + v44, (uint64_t)v41);
      v45 = *v42;
      v46 = *v41;
      v107 = v45;
      v47 = *(_QWORD *)(v45 + 16);
      v48 = *(_QWORD *)(v46 + 16);
      v108 = v47;
      if (v47 != v48)
      {
LABEL_66:
        OUTLINED_FUNCTION_35_0();
        OUTLINED_FUNCTION_35_0();
        goto LABEL_67;
      }
      if (v108 && v107 != v46)
        break;
LABEL_34:
      v83 = (_QWORD *)*((_QWORD *)v112 + 1);
      v84 = (_QWORD *)v113[1];
      v85 = v83[2];
      if (v85 != v84[2])
        goto LABEL_66;
      if (v85)
        v86 = v83 == v84;
      else
        v86 = 1;
      if (!v86)
      {
        v87 = v83[4] == v84[4] && v83[5] == v84[5];
        if (!v87 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
          goto LABEL_66;
        if (v85 != 1)
        {
          v88 = v84 + 7;
          v89 = v83 + 7;
          v90 = 1;
          while (v90 < v85)
          {
            v91 = *(v89 - 1) == *(v88 - 1) && *v89 == *v88;
            if (!v91 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
              goto LABEL_66;
            ++v90;
            v88 += 2;
            v89 += 2;
            if (v85 == v90)
              goto LABEL_53;
          }
          goto LABEL_69;
        }
      }
LABEL_53:
      if ((sub_240BED46C(*((_QWORD *)v112 + 2), v113[2]) & 1) == 0)
        goto LABEL_66;
      sub_240DB05DC();
      if ((v92 & 1) == 0)
        goto LABEL_66;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((OUTLINED_FUNCTION_34_0() & 1) == 0)
        goto LABEL_66;
      v35 = v101 + 1;
      v41 = v113;
      OUTLINED_FUNCTION_128();
      v42 = (uint64_t *)v112;
      OUTLINED_FUNCTION_128();
      v36 = v96;
      v38 = v95;
      v40 = v94;
      if (v35 == v97)
        goto LABEL_67;
    }
    v49 = 0;
    v50 = (*(unsigned __int8 *)(v103 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v103 + 80);
    OUTLINED_FUNCTION_314();
    *(_QWORD *)(v51 - 256) = v46;
    v102 = v26;
    while (1)
    {
      OUTLINED_FUNCTION_54_0(v107 + v50, (uint64_t)v0);
      if (v49 >= *(_QWORD *)(v46 + 16))
        break;
      OUTLINED_FUNCTION_54_0(v46 + v50, (uint64_t)v26);
      v52 = *v0 == *v26 && v0[1] == v26[1];
      if (!v52 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        goto LABEL_65;
      v53 = v114;
      v54 = OUTLINED_FUNCTION_321(v115);
      v56 = v53 + v55;
      OUTLINED_FUNCTION_93(v54, v53);
      OUTLINED_FUNCTION_93((uint64_t)type metadata accessor for Proto_MILSpec_NamedValueType, v56);
      v57 = OUTLINED_FUNCTION_359();
      v58 = v111;
      OUTLINED_FUNCTION_7_1(v57, v59, v111);
      if (v52)
      {
        OUTLINED_FUNCTION_7_1(v56, 1, v58);
        if (!v52)
          goto LABEL_64;
        sub_240BE0B68(v53, &qword_25708C098);
      }
      else
      {
        v60 = v53;
        v61 = v109;
        OUTLINED_FUNCTION_93(v60, v109);
        OUTLINED_FUNCTION_7_1(v56, 1, v58);
        if (v62)
          goto LABEL_63;
        sub_240BF0410(v56, v2, type metadata accessor for Proto_MILSpec_ValueType);
        v63 = *(int *)(v58 + 20);
        v64 = *(_QWORD *)(v61 + v63);
        if (v64 != *(_QWORD *)(v2 + v63))
        {
          v65 = v105;
          v66 = v64
              + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
          OUTLINED_FUNCTION_4_1();
          v67 = v106;
          OUTLINED_FUNCTION_167(v66, v106);
          OUTLINED_FUNCTION_4_1();
          v68 = OUTLINED_FUNCTION_241();
          OUTLINED_FUNCTION_167(v68, v69);
          v70 = OUTLINED_FUNCTION_305();
          OUTLINED_FUNCTION_167(v70, v71);
          v72 = v100;
          OUTLINED_FUNCTION_7_1(v65, 1, v100);
          if (v52)
          {
            swift_retain();
            OUTLINED_FUNCTION_184();
            OUTLINED_FUNCTION_157(v67);
            v73 = OUTLINED_FUNCTION_7_1(v66, 1, v72);
            if (!v52)
              goto LABEL_61;
            OUTLINED_FUNCTION_157(v65);
          }
          else
          {
            v74 = OUTLINED_FUNCTION_353();
            OUTLINED_FUNCTION_96(v74, v75);
            OUTLINED_FUNCTION_7_1(v66, 1, v72);
            if (v76)
            {
              OUTLINED_FUNCTION_243();
              OUTLINED_FUNCTION_184();
              sub_240BE0B68(v106, &qword_25708BF68);
              OUTLINED_FUNCTION_327();
LABEL_61:
              OUTLINED_FUNCTION_163(v73, &qword_25708BF60);
LABEL_62:
              OUTLINED_FUNCTION_211();
              OUTLINED_FUNCTION_287();
              OUTLINED_FUNCTION_347();
LABEL_63:
              OUTLINED_FUNCTION_217();
              v53 = v114;
LABEL_64:
              OUTLINED_FUNCTION_166(v53);
LABEL_65:
              OUTLINED_FUNCTION_35_0();
              OUTLINED_FUNCTION_35_0();
              goto LABEL_66;
            }
            v77 = OUTLINED_FUNCTION_370();
            sub_240BF0410(v77, v78, type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type);
            OUTLINED_FUNCTION_243();
            OUTLINED_FUNCTION_184();
            OUTLINED_FUNCTION_259();
            v80 = v79;
            OUTLINED_FUNCTION_97();
            OUTLINED_FUNCTION_187(v106);
            OUTLINED_FUNCTION_97();
            OUTLINED_FUNCTION_187(v65);
            if ((v80 & 1) == 0)
              goto LABEL_62;
          }
          OUTLINED_FUNCTION_211();
          OUTLINED_FUNCTION_287();
          v2 = v99;
          v46 = v98;
        }
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_362();
        v81 = OUTLINED_FUNCTION_52_0();
        OUTLINED_FUNCTION_58_0();
        OUTLINED_FUNCTION_58_0();
        sub_240BE0B68(v114, &qword_25708C098);
        v26 = v102;
        if ((v81 & 1) == 0)
          goto LABEL_65;
      }
      v82 = (_DWORD)v0 + *(_DWORD *)(v115 + 20);
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_272();
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_58_0();
      if ((v82 & 1) == 0)
        goto LABEL_66;
      ++v49;
      v50 += v104;
      if (v108 == v49)
        goto LABEL_34;
    }
    __break(1u);
LABEL_69:
    __break(1u);
  }
  else
  {
LABEL_67:
    OUTLINED_FUNCTION_1();
  }
}

void sub_240BED46C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  _QWORD *v46;
  BOOL v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  unint64_t v51;
  unint64_t v52;
  uint64_t v53;
  BOOL v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  char v78;
  uint64_t v79;
  uint64_t v80;
  char v81;
  char v82;
  char v83;
  int v84;
  char v85;
  char v86;
  char v87;
  uint64_t v88[3];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  _QWORD *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  _QWORD *v109;
  _QWORD *v110;
  uint64_t v111;

  OUTLINED_FUNCTION_22();
  v4 = v3;
  OUTLINED_FUNCTION_234();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_136(v7, v88[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_132();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v107 = OUTLINED_FUNCTION_227(v10, v11, v12, v13, v14, v15, v16, v17, v88[0]);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_254(v20, v88[0]);
  v106 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  v23 = OUTLINED_FUNCTION_220(v22, v88[0]);
  v111 = type metadata accessor for Proto_MILSpec_NamedValueType(v23);
  v99 = *(_QWORD *)(v111 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v24);
  v26 = (uint64_t *)((char *)v88 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_118();
  MEMORY[0x24BDAC7A8](v27);
  v28 = OUTLINED_FUNCTION_111();
  type metadata accessor for Proto_MILSpec_Operation(v28);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_372();
  v110 = (_QWORD *)v30;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v31);
  v109 = (uint64_t *)((char *)v88 - v32);
  OUTLINED_FUNCTION_181();
  if (v47 && v34 && v1 != v4)
  {
    OUTLINED_FUNCTION_151(v33);
    OUTLINED_FUNCTION_148();
    v38 = v4 + v37;
    v39 = (uint64_t)type metadata accessor for Proto_MILSpec_Operation;
    v41 = *(_QWORD *)(v40 + 72);
    v92 = v42;
    v91 = v35;
    v90 = v38;
    v89 = v41;
    while (1)
    {
      v97 = v36;
      v43 = v41 * v36;
      v44 = v109;
      OUTLINED_FUNCTION_54_0(v35 + v41 * v36, (uint64_t)v109);
      v45 = v38 + v43;
      v46 = v110;
      OUTLINED_FUNCTION_54_0(v45, (uint64_t)v110);
      v47 = *v44 == *v46 && v44[1] == v46[1];
      if (!v47 && (OUTLINED_FUNCTION_51_0() & 1) == 0
        || (sub_240DB0934(), (v48 & 1) == 0)
        || (v49 = v110[3], v103 = v109[3], v50 = *(_QWORD *)(v49 + 16), v105 = *(_QWORD *)(v103 + 16), v105 != v50))
      {
LABEL_53:
        OUTLINED_FUNCTION_35_0();
        OUTLINED_FUNCTION_35_0();
        goto LABEL_54;
      }
      if (v105 && v103 != v49)
        break;
LABEL_40:
      sub_240BECCF0();
      if ((v85 & 1) == 0)
        goto LABEL_53;
      sub_240DB05DC();
      if ((v86 & 1) == 0)
        goto LABEL_53;
      v87 = (_BYTE)v109 + *(_DWORD *)(v93 + 36);
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_204();
      OUTLINED_FUNCTION_340();
      v39 = (uint64_t)type metadata accessor for Proto_MILSpec_Operation;
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_58_0();
      if ((v87 & 1) != 0)
      {
        v36 = v97 + 1;
        v35 = v91;
        v38 = v90;
        v41 = v89;
        if (v97 + 1 != v92)
          continue;
      }
      goto LABEL_54;
    }
    v51 = 0;
    v52 = (*(unsigned __int8 *)(v99 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v99 + 80);
    OUTLINED_FUNCTION_314();
    *(_QWORD *)(v53 - 256) = v49;
    v98 = v26;
    while (1)
    {
      OUTLINED_FUNCTION_168(v103 + v52, (uint64_t)v0);
      if (v51 >= *(_QWORD *)(v49 + 16))
        break;
      OUTLINED_FUNCTION_168(v49 + v52, (uint64_t)v26);
      v54 = *v0 == *v26 && v0[1] == v26[1];
      if (!v54 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        goto LABEL_52;
      v55 = OUTLINED_FUNCTION_321(v111);
      v56 = v108;
      v58 = v108 + v57;
      OUTLINED_FUNCTION_93(v55, v108);
      OUTLINED_FUNCTION_93(v39, v58);
      v59 = OUTLINED_FUNCTION_357();
      v60 = v107;
      OUTLINED_FUNCTION_7_1(v59, v61, v107);
      if (v47)
      {
        OUTLINED_FUNCTION_7_1(v58, 1, v60);
        if (!v47)
          goto LABEL_51;
        sub_240BE0B68(v56, &qword_25708C098);
      }
      else
      {
        v62 = v56;
        v63 = v104;
        OUTLINED_FUNCTION_93(v62, v104);
        OUTLINED_FUNCTION_7_1(v58, 1, v60);
        if (v64)
          goto LABEL_50;
        sub_240BF0410(v58, v2, type metadata accessor for Proto_MILSpec_ValueType);
        v65 = *(int *)(v60 + 20);
        v66 = *(_QWORD *)(v63 + v65);
        v67 = *(_QWORD *)(v2 + v65);
        if (v66 != v67)
        {
          v68 = v101;
          v69 = v66
              + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
          OUTLINED_FUNCTION_4_1();
          v70 = v102;
          OUTLINED_FUNCTION_117(v69, v102);
          v71 = v67
              + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
          OUTLINED_FUNCTION_4_1();
          v72 = OUTLINED_FUNCTION_241();
          OUTLINED_FUNCTION_117(v72, v73);
          OUTLINED_FUNCTION_117(v71, v69);
          v74 = v96;
          OUTLINED_FUNCTION_7_1(v68, 1, v96);
          if (v47)
          {
            swift_retain();
            OUTLINED_FUNCTION_184();
            OUTLINED_FUNCTION_157(v70);
            v75 = OUTLINED_FUNCTION_7_1(v69, 1, v74);
            if (!v47)
              goto LABEL_48;
            OUTLINED_FUNCTION_157(v68);
          }
          else
          {
            v76 = OUTLINED_FUNCTION_353();
            OUTLINED_FUNCTION_96(v76, v77);
            OUTLINED_FUNCTION_7_1(v69, 1, v74);
            if (v78)
            {
              OUTLINED_FUNCTION_355();
              OUTLINED_FUNCTION_184();
              sub_240BE0B68(v102, &qword_25708BF68);
              OUTLINED_FUNCTION_327();
LABEL_48:
              OUTLINED_FUNCTION_163(v75, &qword_25708BF60);
LABEL_49:
              OUTLINED_FUNCTION_211();
              OUTLINED_FUNCTION_354();
              OUTLINED_FUNCTION_347();
LABEL_50:
              OUTLINED_FUNCTION_286();
              v56 = v108;
LABEL_51:
              OUTLINED_FUNCTION_166(v56);
LABEL_52:
              OUTLINED_FUNCTION_35_0();
              OUTLINED_FUNCTION_35_0();
              goto LABEL_53;
            }
            v79 = OUTLINED_FUNCTION_370();
            sub_240BF0410(v79, v80, type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type);
            OUTLINED_FUNCTION_355();
            OUTLINED_FUNCTION_184();
            OUTLINED_FUNCTION_259();
            v82 = v81;
            OUTLINED_FUNCTION_97();
            OUTLINED_FUNCTION_187(v102);
            OUTLINED_FUNCTION_97();
            OUTLINED_FUNCTION_187(v68);
            if ((v82 & 1) == 0)
              goto LABEL_49;
          }
          OUTLINED_FUNCTION_211();
          OUTLINED_FUNCTION_354();
          v2 = v95;
          v49 = v94;
        }
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        v83 = OUTLINED_FUNCTION_52_0();
        OUTLINED_FUNCTION_58_0();
        OUTLINED_FUNCTION_58_0();
        sub_240BE0B68(v108, &qword_25708C098);
        v26 = v98;
        if ((v83 & 1) == 0)
          goto LABEL_52;
      }
      v84 = (_DWORD)v0 + *(_DWORD *)(v111 + 20);
      v39 = OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_204();
      OUTLINED_FUNCTION_272();
      OUTLINED_FUNCTION_319();
      OUTLINED_FUNCTION_289();
      sub_240BF03EC();
      if ((v84 & 1) == 0)
        goto LABEL_53;
      ++v51;
      v52 += v100;
      if (v105 == v51)
        goto LABEL_40;
    }
    __break(1u);
  }
  else
  {
LABEL_54:
    OUTLINED_FUNCTION_84();
    OUTLINED_FUNCTION_1();
  }
}

void sub_240BEDB8C()
{
  sub_240BEF314();
}

void sub_240BEDBA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  BOOL v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  float *v56;
  uint64_t v57;
  float *v58;
  char v59;
  uint64_t v60;
  uint64_t v61[2];
  _QWORD *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  float *v69;
  float *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_22();
  v6 = OUTLINED_FUNCTION_196();
  v7 = type metadata accessor for Proto_NeuralNetworkMeanImage(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v73 = (uint64_t)v61 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_101();
  v64 = type metadata accessor for Proto_NeuralNetworkImageScaler(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v69 = (float *)((char *)v61 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v72 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_90();
  v75 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  v68 = (uint64_t)v61 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v17);
  v70 = (float *)((char *)v61 - v18);
  OUTLINED_FUNCTION_23_0();
  v20 = MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_387(v20, v21, v22, v23, v24, v25, v26, v27, v61[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_61();
  v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  v30 = OUTLINED_FUNCTION_89();
  v77 = type metadata accessor for Proto_NeuralNetworkPreprocessing(v30);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_135();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (uint64_t *)((char *)v61 - v33);
  OUTLINED_FUNCTION_181();
  if (v40 && v35 && v2 != v0)
  {
    v61[1] = v7;
    v37 = 0;
    v38 = (*(unsigned __int8 *)(v36 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
    v66 = v0 + v38;
    v67 = v2 + v38;
    v65 = *(_QWORD *)(v36 + 72);
    v71 = v4;
    v62 = v5;
    v63 = v35;
    while (1)
    {
      v39 = v65 * v37;
      OUTLINED_FUNCTION_123(v67);
      OUTLINED_FUNCTION_130(v66 + v39, (uint64_t)v5);
      v40 = *v34 == *v5 && v34[1] == v5[1];
      if (!v40 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        break;
      OUTLINED_FUNCTION_343();
      v42 = (uint64_t)v5 + v41;
      v43 = v3 + *(int *)(v76 + 48);
      OUTLINED_FUNCTION_94((uint64_t)v34 + v41, v3);
      OUTLINED_FUNCTION_94(v42, v43);
      v44 = OUTLINED_FUNCTION_359();
      v45 = v3;
      v46 = v75;
      OUTLINED_FUNCTION_7_1(v44, v47, v75);
      if (v40)
      {
        OUTLINED_FUNCTION_7_1(v43, 1, v46);
        v3 = v45;
        if (!v40)
          goto LABEL_48;
      }
      else
      {
        sub_240C02F94(v45, v4, &qword_25708C1A8);
        OUTLINED_FUNCTION_7_1(v43, 1, v46);
        if (v48)
        {
          v3 = v45;
          goto LABEL_47;
        }
        v49 = v74;
        sub_240BF0410(v43, v74, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
        v50 = v1 + *(int *)(v72 + 48);
        OUTLINED_FUNCTION_54_0(v4, v1);
        OUTLINED_FUNCTION_54_0(v49, v50);
        if (OUTLINED_FUNCTION_363() == 1)
        {
          OUTLINED_FUNCTION_54_0(v1, v68);
          if (OUTLINED_FUNCTION_363() != 1)
            goto LABEL_45;
          sub_240BF0410(v50, v73, type metadata accessor for Proto_NeuralNetworkMeanImage);
          OUTLINED_FUNCTION_160();
          v3 = v45;
          v5 = v62;
          if (!v40)
            goto LABEL_42;
          if (v53 && v51 != v52)
          {
            if (*(float *)(v51 + 32) != *(float *)(v52 + 32))
              goto LABEL_42;
            v54 = v51 + 36;
            v55 = v53 - 1;
            while (v55)
            {
              OUTLINED_FUNCTION_264(v54);
              if (!v40)
                goto LABEL_42;
            }
          }
          OUTLINED_FUNCTION_20_0();
          sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          if ((sub_240F1CC90() & 1) == 0)
          {
LABEL_42:
            OUTLINED_FUNCTION_35_0();
            OUTLINED_FUNCTION_35_0();
            OUTLINED_FUNCTION_21_0();
            goto LABEL_46;
          }
          OUTLINED_FUNCTION_6_0();
          OUTLINED_FUNCTION_6_0();
        }
        else
        {
          v56 = v70;
          OUTLINED_FUNCTION_54_0(v1, (uint64_t)v70);
          if (OUTLINED_FUNCTION_363() == 1)
          {
LABEL_45:
            OUTLINED_FUNCTION_210();
            v3 = v45;
            OUTLINED_FUNCTION_39(v60, &qword_25708C1A0);
LABEL_46:
            sub_240BF03EC();
LABEL_47:
            OUTLINED_FUNCTION_281();
LABEL_48:
            OUTLINED_FUNCTION_166(v3);
            break;
          }
          v57 = v50;
          v58 = v69;
          sub_240BF0410(v57, (uint64_t)v69, type metadata accessor for Proto_NeuralNetworkImageScaler);
          v3 = v45;
          if (*v56 != *v58)
            goto LABEL_42;
          if (v56[1] != v58[1])
            goto LABEL_42;
          if (v56[2] != v58[2])
            goto LABEL_42;
          if (v56[3] != v58[3])
            goto LABEL_42;
          if (v56[4] != v58[4])
            goto LABEL_42;
          OUTLINED_FUNCTION_20_0();
          sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          if ((OUTLINED_FUNCTION_52_0() & 1) == 0)
            goto LABEL_42;
          OUTLINED_FUNCTION_6_0();
          OUTLINED_FUNCTION_6_0();
          v5 = v62;
        }
        OUTLINED_FUNCTION_58_0();
        OUTLINED_FUNCTION_58_0();
        OUTLINED_FUNCTION_58_0();
      }
      sub_240BE0B68(v3, &qword_25708C1A8);
      v59 = OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_240F1CC90();
      OUTLINED_FUNCTION_342();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_77();
      if ((v59 & 1) != 0)
      {
        ++v37;
        v4 = v71;
        if (v37 != v63)
          continue;
      }
      goto LABEL_50;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_50:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEE22C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  BOOL v55;
  _QWORD *v56;
  BOOL v57;
  BOOL v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t (*v68)(uint64_t);
  uint64_t v69;
  char v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  char v81;
  char v82;
  char v83;
  _QWORD *v84;
  _QWORD *v85;
  BOOL v86;
  BOOL v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t (*v95)(uint64_t);
  uint64_t v96;
  char v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char v106;
  uint64_t v107;
  uint64_t v108;
  char v109;
  char v110;
  char v111;
  char v112;
  BOOL v113;
  BOOL v114;
  int v115;
  uint64_t *v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  _QWORD *v137;
  uint64_t *v138;
  uint64_t v139;
  _QWORD *v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  _QWORD *v145;
  uint64_t v146;
  uint64_t v147;
  _QWORD *v148;
  uint64_t v149;
  _QWORD *v150;
  uint64_t v151;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_331();
  v141 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE90);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_85();
  v134 = v13;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_386();
  v139 = v15;
  v16 = OUTLINED_FUNCTION_101();
  v149 = type metadata accessor for Proto_FeatureType(v16);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_85();
  v133 = v18;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_386();
  v144 = v20;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_85();
  v142 = v22;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_386();
  v146 = v24;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  v143 = (uint64_t)&v120 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_386();
  v147 = v29;
  v30 = OUTLINED_FUNCTION_101();
  v151 = type metadata accessor for Proto_FeatureDescription(v30);
  v132 = *(_QWORD *)(v151 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_85();
  v145 = (_QWORD *)v32;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v33);
  v140 = (uint64_t *)((char *)&v120 - v34);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_38_0();
  v148 = (_QWORD *)v36;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (uint64_t *)((char *)&v120 - v38);
  type metadata accessor for Proto_FunctionDescription(0);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v40);
  OUTLINED_FUNCTION_135();
  MEMORY[0x24BDAC7A8](v41);
  v150 = (uint64_t *)((char *)&v120 - v42);
  OUTLINED_FUNCTION_181();
  if (v55 && v44 && v7 != v5)
  {
    v126 = v43;
    v127 = v2;
    v121 = v1;
    v129 = v0;
    v130 = v8;
    OUTLINED_FUNCTION_148();
    v48 = v5 + v47;
    v50 = *(_QWORD *)(v49 + 72);
    v51 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF20];
    v131 = v25;
    v137 = v39;
    v138 = v3;
    v125 = v52;
    v124 = v45;
    v123 = v48;
    v122 = v50;
    while (1)
    {
      v128 = v46;
      v53 = v50 * v46;
      v54 = v150;
      OUTLINED_FUNCTION_54_0(v45 + v50 * v46, (uint64_t)v150);
      OUTLINED_FUNCTION_54_0(v48 + v53, (uint64_t)v3);
      v55 = *v54 == *v3 && v54[1] == v3[1];
      if (!v55 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        break;
      OUTLINED_FUNCTION_377(v138[2]);
      if (!v55)
        break;
      if (v2 && v136 != v135)
      {
        OUTLINED_FUNCTION_222();
        while (1)
        {
          OUTLINED_FUNCTION_168(v136 + v48, (uint64_t)v39);
          v56 = v148;
          OUTLINED_FUNCTION_168(v135 + v48, (uint64_t)v148);
          v57 = *v39 == *v56 && v39[1] == v56[1];
          if (!v57 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
            break;
          v58 = v39[2] == v56[2] && v39[3] == v56[3];
          if (!v58 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
            break;
          v59 = *(int *)(v151 + 28);
          v60 = (char *)v56 + v59;
          v61 = v147;
          v62 = v147 + *(int *)(v25 + 48);
          OUTLINED_FUNCTION_167((uint64_t)v39 + v59, v147);
          v63 = (uint64_t)v60;
          v64 = v61;
          OUTLINED_FUNCTION_167(v63, v62);
          v65 = OUTLINED_FUNCTION_359();
          v66 = v149;
          OUTLINED_FUNCTION_7_1(v65, v67, v149);
          if (v55)
          {
            OUTLINED_FUNCTION_7_1(v62, 1, v66);
            if (!v55)
              goto LABEL_92;
            sub_240BE0B68(v64, &qword_25435FB30);
            v68 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
          }
          else
          {
            v69 = v146;
            sub_240C02F94(v64, v146, &qword_25435FB30);
            OUTLINED_FUNCTION_7_1(v62, 1, v66);
            if (v70)
            {
              OUTLINED_FUNCTION_286();
LABEL_92:
              v116 = &qword_25708BE98;
              v117 = v64;
              goto LABEL_98;
            }
            v71 = v144;
            sub_240BF0410(v62, v144, type metadata accessor for Proto_FeatureType);
            v72 = v139;
            v73 = v139 + *(int *)(v141 + 48);
            OUTLINED_FUNCTION_167(v69, v139);
            OUTLINED_FUNCTION_167(v71, v73);
            v74 = v130;
            OUTLINED_FUNCTION_7_1(v72, 1, v130);
            if (v55)
            {
              OUTLINED_FUNCTION_7_1(v73, 1, v74);
              if (!v55)
                goto LABEL_96;
              OUTLINED_FUNCTION_376();
              v75 = v144;
              v76 = v146;
            }
            else
            {
              OUTLINED_FUNCTION_167(v72, v127);
              OUTLINED_FUNCTION_7_1(v73, 1, v74);
              if (v77)
              {
                OUTLINED_FUNCTION_217();
LABEL_96:
                sub_240BE0B68(v72, &qword_25708BE90);
LABEL_97:
                OUTLINED_FUNCTION_6_0();
                OUTLINED_FUNCTION_6_0();
                v116 = &qword_25435FB30;
                v117 = v147;
LABEL_98:
                sub_240BE0B68(v117, v116);
                break;
              }
              v78 = OUTLINED_FUNCTION_384();
              OUTLINED_FUNCTION_282(v78, v79);
              OUTLINED_FUNCTION_360();
              v81 = v80;
              OUTLINED_FUNCTION_138();
              OUTLINED_FUNCTION_138();
              OUTLINED_FUNCTION_376();
              v75 = v144;
              v66 = v149;
              v76 = v146;
              if ((v81 & 1) == 0)
                goto LABEL_97;
            }
            if (*(unsigned __int8 *)(v76 + *(int *)(v66 + 20)) != *(unsigned __int8 *)(v75 + *(int *)(v66 + 20)))
              goto LABEL_97;
            v82 = OUTLINED_FUNCTION_20_0();
            v68 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
            OUTLINED_FUNCTION_304(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10]);
            OUTLINED_FUNCTION_52_0();
            OUTLINED_FUNCTION_340();
            OUTLINED_FUNCTION_6_0();
            OUTLINED_FUNCTION_6_0();
            sub_240BE0B68(v147, &qword_25435FB30);
            v25 = v131;
            if ((v82 & 1) == 0)
              break;
          }
          v83 = (_BYTE)v39 + *(_DWORD *)(v151 + 24);
          OUTLINED_FUNCTION_20_0();
          OUTLINED_FUNCTION_304(&qword_25708BD88, v68);
          OUTLINED_FUNCTION_34_0();
          OUTLINED_FUNCTION_341();
          v39 = v137;
          v51 = type metadata accessor for Proto_FeatureDescription;
          OUTLINED_FUNCTION_218();
          OUTLINED_FUNCTION_218();
          if ((v83 & 1) == 0)
            goto LABEL_105;
          OUTLINED_FUNCTION_311();
          if (v55)
            goto LABEL_44;
        }
LABEL_104:
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        break;
      }
LABEL_44:
      OUTLINED_FUNCTION_377(v138[3]);
      if (!v55)
        break;
      if (v2 && v136 != v135)
      {
        OUTLINED_FUNCTION_222();
        do
        {
          v84 = v140;
          OUTLINED_FUNCTION_168(v136 + v48, (uint64_t)v140);
          v85 = v145;
          OUTLINED_FUNCTION_168(v135 + v48, (uint64_t)v145);
          v86 = *v84 == *v85 && v84[1] == v85[1];
          if (!v86 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
            goto LABEL_104;
          v87 = v84[2] == v85[2] && v84[3] == v85[3];
          if (!v87 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
            goto LABEL_104;
          v88 = *(int *)(v151 + 28);
          v89 = (uint64_t)v85 + v88;
          v90 = v143;
          v91 = v143 + *(int *)(v25 + 48);
          OUTLINED_FUNCTION_94((uint64_t)v84 + v88, v143);
          OUTLINED_FUNCTION_94(v89, v91);
          v92 = OUTLINED_FUNCTION_357();
          v93 = v149;
          OUTLINED_FUNCTION_7_1(v92, v94, v149);
          if (v55)
          {
            OUTLINED_FUNCTION_7_1(v91, 1, v93);
            if (!v55)
              goto LABEL_94;
            OUTLINED_FUNCTION_166(v90);
            v95 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
          }
          else
          {
            v96 = v142;
            OUTLINED_FUNCTION_94(v90, v142);
            OUTLINED_FUNCTION_7_1(v91, 1, v93);
            if (v97)
            {
              sub_240BF03EC();
LABEL_94:
              v118 = &qword_25708BE98;
              v119 = v90;
              goto LABEL_103;
            }
            v98 = v133;
            sub_240BF0410(v91, v133, type metadata accessor for Proto_FeatureType);
            v99 = v134;
            v100 = v134 + *(int *)(v141 + 48);
            OUTLINED_FUNCTION_94(v96, v134);
            OUTLINED_FUNCTION_94(v98, v100);
            v101 = OUTLINED_FUNCTION_357();
            v102 = v130;
            OUTLINED_FUNCTION_7_1(v101, v103, v130);
            if (v55)
            {
              v104 = OUTLINED_FUNCTION_7_1(v100, 1, v102);
              if (!v55)
                goto LABEL_101;
              sub_240BE0B68(v99, &qword_25435FB00);
              v105 = v142;
            }
            else
            {
              OUTLINED_FUNCTION_94(v99, v121);
              OUTLINED_FUNCTION_7_1(v100, 1, v102);
              if (v106)
              {
                OUTLINED_FUNCTION_217();
LABEL_101:
                OUTLINED_FUNCTION_126(v104, &qword_25708BE90);
LABEL_102:
                OUTLINED_FUNCTION_35_0();
                OUTLINED_FUNCTION_35_0();
                v118 = &qword_25435FB30;
                v119 = v143;
LABEL_103:
                sub_240BE0B68(v119, v118);
                goto LABEL_104;
              }
              v107 = OUTLINED_FUNCTION_384();
              sub_240BF0410(v107, v108, type metadata accessor for Proto_FeatureType.OneOf_Type);
              OUTLINED_FUNCTION_360();
              v110 = v109;
              OUTLINED_FUNCTION_97();
              OUTLINED_FUNCTION_305();
              sub_240BF03EC();
              sub_240BE0B68(v99, &qword_25435FB00);
              v93 = v149;
              v105 = v142;
              if ((v110 & 1) == 0)
                goto LABEL_102;
            }
            if (*(unsigned __int8 *)(v105 + *(int *)(v93 + 20)) != *(unsigned __int8 *)(v98 + *(int *)(v93 + 20)))
              goto LABEL_102;
            v111 = v105 + *(_DWORD *)(v93 + 24);
            OUTLINED_FUNCTION_20_0();
            v95 = (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10];
            OUTLINED_FUNCTION_304(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10]);
            OUTLINED_FUNCTION_34_0();
            OUTLINED_FUNCTION_340();
            OUTLINED_FUNCTION_58_0();
            OUTLINED_FUNCTION_58_0();
            sub_240BE0B68(v143, &qword_25435FB30);
            if ((v111 & 1) == 0)
              goto LABEL_104;
          }
          v112 = (_BYTE)v84 + *(_DWORD *)(v151 + 24);
          OUTLINED_FUNCTION_20_0();
          OUTLINED_FUNCTION_304(&qword_25708BD88, v95);
          OUTLINED_FUNCTION_34_0();
          OUTLINED_FUNCTION_342();
          v51 = type metadata accessor for Proto_FeatureDescription;
          OUTLINED_FUNCTION_218();
          v25 = v131;
          OUTLINED_FUNCTION_218();
          v39 = v137;
          if ((v112 & 1) == 0)
            goto LABEL_105;
          OUTLINED_FUNCTION_311();
        }
        while (!v55);
      }
      v113 = v150[4] == v138[4] && v150[5] == v138[5];
      if (!v113 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        break;
      v114 = v150[6] == v138[6] && v150[7] == v138[7];
      if (!v114 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        break;
      v115 = (_DWORD)v150 + *(_DWORD *)(v126 + 36);
      v3 = v138;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], (uint64_t)v51);
      OUTLINED_FUNCTION_34_0();
      OUTLINED_FUNCTION_342();
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_58_0();
      if ((v115 & 1) != 0)
      {
        v46 = v128 + 1;
        v45 = v124;
        v48 = v123;
        v50 = v122;
        if (v128 + 1 != v125)
          continue;
      }
      goto LABEL_106;
    }
LABEL_105:
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_106:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEED48()
{
  sub_240BEF494();
}

void sub_240BEED5C()
{
  sub_240BEEF10();
}

void sub_240BEED68()
{
  sub_240BEF314();
}

void sub_240BEED7C()
{
  sub_240BEED94();
}

void sub_240BEED88()
{
  sub_240BEED94();
}

void sub_240BEED94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  char v19;
  double *v20;
  double *v21;
  uint64_t v22;
  double v23;
  double v24;
  double v25;
  uint64_t v26;
  uint64_t v27;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  OUTLINED_FUNCTION_231(v4, v2, v6);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_228();
  v9 = *(_QWORD *)(v5 + 16);
  if (v9 == *(_QWORD *)(v3 + 16) && v9 && v5 != v3)
  {
    v10 = 0;
    OUTLINED_FUNCTION_148();
    v26 = v3 + v11;
    v27 = v12;
    v14 = *(_QWORD *)(v13 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_140(v27 + v14 * v10, v1);
      OUTLINED_FUNCTION_140(v26 + v14 * v10, v0);
      OUTLINED_FUNCTION_160();
      if (!v18)
        break;
      if (v17)
        v18 = v15 == v16;
      else
        v18 = 1;
      if (!v18)
      {
        if (*(double *)(v15 + 32) != *(double *)(v16 + 32))
          break;
        OUTLINED_FUNCTION_308();
        while (v22)
        {
          v23 = *v20++;
          v24 = v23;
          v25 = *v21++;
          --v22;
          if (v24 != v25)
            goto LABEL_19;
        }
      }
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v19 = OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_6_0();
      if ((v19 & 1) != 0 && ++v10 != v9)
        continue;
      goto LABEL_20;
    }
LABEL_19:
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_20:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEEF04()
{
  sub_240BEEF10();
}

void sub_240BEEF10()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  _QWORD *v17;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v4 = v3;
  OUTLINED_FUNCTION_231(v3, v1, v5);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_249();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v16 - v8);
  v10 = *(_QWORD *)(v4 + 16);
  if (v10 == *(_QWORD *)(v2 + 16) && v10 && v4 != v2)
  {
    OUTLINED_FUNCTION_345();
    v13 = v12 & ~v11;
    v16 = *(_QWORD *)(v14 + 72);
    v17 = v9;
    while (1)
    {
      OUTLINED_FUNCTION_140(v4 + v13, (uint64_t)v9);
      OUTLINED_FUNCTION_140(v2 + v13, (uint64_t)v0);
      if (*v9 != *v0)
        break;
      if (v9[1] != v0[1])
        break;
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v15 = OUTLINED_FUNCTION_52_0();
      v9 = v17;
      if ((v15 & 1) == 0)
        break;
      OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_6_0();
      v13 += v16;
      if (!--v10)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_11:
  OUTLINED_FUNCTION_1();
}

void sub_240BEF084()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_391();
  v7 = type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C190);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_61();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C198);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_89();
  type metadata accessor for Proto_ActivationParams(v11);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_88();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_260();
  if (!v24)
    goto LABEL_20;
  if (!v15)
    goto LABEL_20;
  v16 = v0;
  v17 = v5;
  if (v16 == v5)
    goto LABEL_20;
  OUTLINED_FUNCTION_206(v14);
  while (1)
  {
    v30 = v18;
    OUTLINED_FUNCTION_110(v16 + v5, v1);
    OUTLINED_FUNCTION_110(v17 + v5, v3);
    v19 = OUTLINED_FUNCTION_273();
    OUTLINED_FUNCTION_117(v19, v20);
    OUTLINED_FUNCTION_117(v3, (uint64_t)type metadata accessor for Proto_ActivationParams);
    OUTLINED_FUNCTION_7_1(v2, 1, v7);
    if (!v24)
      break;
    v21 = OUTLINED_FUNCTION_7_1((uint64_t)type metadata accessor for Proto_ActivationParams, 1, v7);
    if (!v24)
      goto LABEL_18;
    sub_240BE0B68(v2, &qword_25708C190);
LABEL_13:
    v27 = OUTLINED_FUNCTION_20_0();
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_341();
    OUTLINED_FUNCTION_77();
    OUTLINED_FUNCTION_77();
    v18 = v30 - 1;
    if ((v27 & 1) != 0)
    {
      v5 += v29;
      if (v30)
        continue;
    }
    goto LABEL_20;
  }
  v22 = OUTLINED_FUNCTION_362();
  sub_240C02F94(v22, v23, &qword_25708C190);
  OUTLINED_FUNCTION_7_1((uint64_t)type metadata accessor for Proto_ActivationParams, 1, v7);
  if (!v24)
  {
    OUTLINED_FUNCTION_282((uint64_t)type metadata accessor for Proto_ActivationParams, v28);
    sub_240E20B8C();
    v26 = v25;
    OUTLINED_FUNCTION_138();
    OUTLINED_FUNCTION_138();
    sub_240BE0B68(v2, &qword_25708C190);
    if ((v26 & 1) == 0)
      goto LABEL_19;
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_281();
LABEL_18:
  OUTLINED_FUNCTION_36(v21, &qword_25708C198);
LABEL_19:
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_6_0();
LABEL_20:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEF300()
{
  sub_240BEF314();
}

void sub_240BEF314()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t, uint64_t);
  uint64_t v24;

  OUTLINED_FUNCTION_22();
  v23 = v0;
  v2 = v1;
  v4 = v3;
  v24 = OUTLINED_FUNCTION_231(v3, v1, v5);
  OUTLINED_FUNCTION_17_0();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v21 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v21 - v10;
  v12 = *(_QWORD *)(v4 + 16);
  if (v12 == *(_QWORD *)(v2 + 16) && v12 && v4 != v2)
  {
    OUTLINED_FUNCTION_345();
    v15 = v14 & ~v13;
    v22 = *(_QWORD *)(v16 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_140(v4 + v15, (uint64_t)v11);
      OUTLINED_FUNCTION_140(v2 + v15, (uint64_t)v9);
      OUTLINED_FUNCTION_343();
      v18 = *(_QWORD *)&v11[v17];
      v19 = *(_QWORD *)&v9[v17];
      if (v18 != v19)
      {
        OUTLINED_FUNCTION_176();
        OUTLINED_FUNCTION_355();
        v20 = v23(v18, v19);
        OUTLINED_FUNCTION_354();
        OUTLINED_FUNCTION_380();
        if ((v20 & 1) == 0)
          break;
      }
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_276();
      if ((OUTLINED_FUNCTION_52_0() & 1) == 0)
        break;
      OUTLINED_FUNCTION_6_0();
      OUTLINED_FUNCTION_6_0();
      v15 += v22;
      if (!--v12)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_11:
  OUTLINED_FUNCTION_1();
}

void sub_240BEF480()
{
  sub_240BEF494();
}

void sub_240BEF494()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  BOOL v18;

  OUTLINED_FUNCTION_22();
  v3 = v2;
  v5 = v4;
  v7 = v6;
  OUTLINED_FUNCTION_231(v6, v4, v8);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_330();
  v12 = *(_QWORD *)(v7 + 16);
  if (v12 == *(_QWORD *)(v5 + 16) && v12 && v7 != v5)
  {
    v13 = (*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    v14 = *(_QWORD *)(v11 + 72);
    v15 = v12 - 1;
    do
    {
      OUTLINED_FUNCTION_110(v7 + v13, v1);
      OUTLINED_FUNCTION_110(v5 + v13, v0);
      v16 = v3(v1, v0);
      OUTLINED_FUNCTION_35_0();
      OUTLINED_FUNCTION_35_0();
      v18 = v15-- != 0;
      if ((v16 & 1) == 0)
        break;
      v13 += v14;
    }
    while (v18);
  }
  OUTLINED_FUNCTION_1();
}

void sub_240BEF57C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;

  OUTLINED_FUNCTION_22();
  v6 = OUTLINED_FUNCTION_197();
  v7 = type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(v6);
  v8 = OUTLINED_FUNCTION_229(v7);
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_86();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_111();
  v11 = type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(v10);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v33 - v14;
  OUTLINED_FUNCTION_181();
  if (v17 && v16 && v5 != v1)
  {
    v33 = v0;
    OUTLINED_FUNCTION_291();
    v21 = v1 + v20;
    v23 = *(_QWORD *)(v22 + 72);
    v41 = v15;
    v37 = v24;
    v38 = v11;
    v35 = v21;
    v36 = v18;
    v34 = v23;
    while (1)
    {
      v39 = v19;
      v25 = v23 * v19;
      OUTLINED_FUNCTION_153(v18 + v23 * v19, (uint64_t)v15);
      OUTLINED_FUNCTION_153(v21 + v25, v4);
      if (*(_QWORD *)v15 != *(_QWORD *)v4 || *((_QWORD *)v15 + 1) != *(_QWORD *)(v4 + 8))
        break;
      v26 = *(_QWORD *)(v4 + 16);
      if (*(_BYTE *)(v4 + 24) == 1)
        __asm { BR              X10 }
      if (*((_QWORD *)v15 + 2) != v26)
        break;
      if (*((_QWORD *)v15 + 4) != *(_QWORD *)(v4 + 32))
        break;
      if (*((double *)v15 + 5) != *(double *)(v4 + 40))
        break;
      if (*((_QWORD *)v15 + 6) != *(_QWORD *)(v4 + 48))
        break;
      if (*((_QWORD *)v15 + 7) != *(_QWORD *)(v4 + 56))
        break;
      if (v15[64] != *(_BYTE *)(v4 + 64))
        break;
      v27 = *((_QWORD *)v15 + 9);
      v28 = *(_QWORD *)(v4 + 72);
      v29 = *(_QWORD *)(v27 + 16);
      if (v29 != *(_QWORD *)(v28 + 16))
        break;
      if (v29 && v27 != v28)
      {
        OUTLINED_FUNCTION_374();
        v40 = v30;
        while (1)
        {
          OUTLINED_FUNCTION_110(v27 + v11, (uint64_t)v3);
          OUTLINED_FUNCTION_110(v28 + v11, (uint64_t)v2);
          if (*v3 != *v2)
            break;
          OUTLINED_FUNCTION_310();
          if (!v17)
            break;
          v31 = OUTLINED_FUNCTION_20_0();
          sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          OUTLINED_FUNCTION_276();
          v15 = v41;
          OUTLINED_FUNCTION_52_0();
          OUTLINED_FUNCTION_339();
          OUTLINED_FUNCTION_97();
          OUTLINED_FUNCTION_97();
          if ((v31 & 1) == 0)
            goto LABEL_31;
          v11 += v40;
          if (!--v29)
            goto LABEL_25;
        }
        OUTLINED_FUNCTION_6_0();
        OUTLINED_FUNCTION_6_0();
        break;
      }
LABEL_25:
      if (*((double *)v15 + 10) != *(double *)(v4 + 80))
        break;
      v11 = v38;
      v32 = (_DWORD)v15 + *(_DWORD *)(v38 + 56);
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_278();
      v15 = v41;
      sub_240F1CC90();
      OUTLINED_FUNCTION_272();
      OUTLINED_FUNCTION_97();
      OUTLINED_FUNCTION_97();
      if ((v32 & 1) != 0)
      {
        v19 = v39 + 1;
        v18 = v36;
        v23 = v34;
        v21 = v35;
        if (v39 + 1 != v37)
          continue;
      }
      goto LABEL_32;
    }
LABEL_31:
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_32:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEF8F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(0);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_261();
  if (v12 && v11 && v7 != v5)
  {
    OUTLINED_FUNCTION_235();
    while (1)
    {
      OUTLINED_FUNCTION_208(v7 + v3, v2);
      OUTLINED_FUNCTION_208(v5 + v3, v1);
      OUTLINED_FUNCTION_306();
      if (!v12)
        break;
      OUTLINED_FUNCTION_320();
      if (!v12)
        break;
      v5 = v8;
      v8 = v1 + *(int *)(v8 + 24);
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v13 = OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_164();
      --v0;
      if ((v13 & 1) != 0)
      {
        OUTLINED_FUNCTION_368();
        if ((v14 & 1) != 0)
          continue;
      }
      goto LABEL_15;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_15:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEFA30(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  unint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 == *(_QWORD *)(a2 + 16)
    && v2
    && a1 != a2
    && (v3 = a1 + 32, v4 = a2 + 32, sub_240BEB508(*(_QWORD *)(a1 + 32), *(_QWORD *)(a2 + 32)), (v5 & 1) != 0)
    && v2 != 1)
  {
    v6 = 1;
    while (v6 < v2)
    {
      v7 = *(_QWORD **)(v3 + 8 * v6);
      v8 = *(_QWORD **)(v4 + 8 * v6);
      v9 = v7[2];
      if (v9 != v8[2])
        goto LABEL_21;
      if (v9)
        v10 = v7 == v8;
      else
        v10 = 1;
      if (!v10)
      {
        if (v7[4] != v8[4])
          goto LABEL_21;
        v11 = v7 + 5;
        v12 = v8 + 5;
        v13 = v9 - 1;
        while (v13)
        {
          v15 = *v11++;
          v14 = v15;
          v16 = *v12++;
          --v13;
          if (v14 != v16)
            goto LABEL_21;
        }
      }
      if (++v6 == v2)
        goto LABEL_21;
    }
    __break(1u);
  }
  else
  {
LABEL_21:
    OUTLINED_FUNCTION_156();
  }
}

void sub_240BEFB0C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_198();
  type metadata accessor for SizeRange();
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_134();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_228();
  v6 = *(_QWORD *)(v1 + 16);
  if (v6 == *(_QWORD *)(v0 + 16) && v6 && v1 != v0)
  {
    OUTLINED_FUNCTION_345();
    v9 = v8 & ~v7;
    v11 = *(_QWORD *)(v10 + 72);
    while (1)
    {
      OUTLINED_FUNCTION_54_0(v1 + v9, (uint64_t)v3);
      OUTLINED_FUNCTION_54_0(v0 + v9, (uint64_t)v2);
      if (*v3 != *v2)
        break;
      if (v3[1] != v2[1])
        break;
      type metadata accessor for Proto_SizeRange(0);
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      if ((OUTLINED_FUNCTION_52_0() & 1) == 0)
        break;
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_58_0();
      v9 += v11;
      if (!--v6)
        goto LABEL_11;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_11:
  OUTLINED_FUNCTION_1();
}

void sub_240BEFC58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v4 = OUTLINED_FUNCTION_196();
  type metadata accessor for Proto_ArrayFeatureType.Shape(v4);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_145();
  if (v10 && v2 && v1 != v0)
  {
    OUTLINED_FUNCTION_92();
    while (1)
    {
      OUTLINED_FUNCTION_116();
      OUTLINED_FUNCTION_123(v13);
      OUTLINED_FUNCTION_160();
      if (!v10)
        break;
      if (v9)
        v10 = v7 == v8;
      else
        v10 = 1;
      if (!v10)
      {
        if (*(_QWORD *)(v7 + 32) != *(_QWORD *)(v8 + 32))
          break;
        OUTLINED_FUNCTION_308();
        while (v12)
        {
          OUTLINED_FUNCTION_318();
          if (!v10)
            goto LABEL_20;
        }
      }
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v11 = OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_77();
      if ((v11 & 1) != 0 && ++v3 != v2)
        continue;
      goto LABEL_21;
    }
LABEL_20:
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_21:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BEFD90()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  char v13;
  char v14;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v7 = v6;
  v8 = type metadata accessor for Proto_ImageFeatureType.ImageSize(0);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_32_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_261();
  if (v12 && v11 && v7 != v5)
  {
    OUTLINED_FUNCTION_235();
    while (1)
    {
      OUTLINED_FUNCTION_208(v7 + v3, v2);
      OUTLINED_FUNCTION_208(v5 + v3, v1);
      OUTLINED_FUNCTION_306();
      if (!v12 || *(_QWORD *)(v2 + 8) != *(_QWORD *)(v1 + 8))
        break;
      v5 = v8;
      v8 = v1 + *(int *)(v8 + 24);
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v13 = OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_164();
      OUTLINED_FUNCTION_164();
      --v0;
      if ((v13 & 1) != 0)
      {
        OUTLINED_FUNCTION_368();
        if ((v14 & 1) != 0)
          continue;
      }
      goto LABEL_14;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_14:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240BEFED8(int64x2_t *a1, int64x2_t *a2)
{
  uint64_t v2;
  int64x2_t *v3;
  int64x2_t *v4;
  uint64_t v5;
  int64x2_t v6;
  int64x2_t v7;
  int64x2_t v8;
  int32x2_t v9;
  char v10;
  BOOL v12;

  v2 = a1[1].i64[0];
  if (v2 == a2[1].i64[0])
  {
    if (!v2 || a1 == a2)
    {
      v10 = 1;
    }
    else
    {
      v3 = a1 + 2;
      v4 = a2 + 2;
      v5 = v2 - 1;
      do
      {
        v6 = *v3++;
        v7 = v6;
        v8 = *v4++;
        v9 = vmovn_s64(vceqq_s64(v7, v8));
        v10 = v9.i8[0] & v9.i8[4];
        v12 = v5-- != 0;
      }
      while ((v9.i8[0] & v9.i8[4] & 1) != 0 && v12);
    }
  }
  else
  {
    v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_240BEFF44(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _BYTE *v3;
  unsigned __int8 *v4;
  uint64_t v5;
  int v6;

  v2 = *(_QWORD *)(a1 + 16);
  if (v2 != *(_QWORD *)(a2 + 16))
    return OUTLINED_FUNCTION_202();
  if (v2 && a1 != a2)
  {
    v3 = (_BYTE *)(a1 + 40);
    v4 = (unsigned __int8 *)(a2 + 40);
    do
    {
      v5 = *((_QWORD *)v4 - 1);
      v6 = *v4;
      if (*v3 == 1)
      {
        if ((v6 & (((*((_QWORD *)v3 - 1) & 1) == 0) ^ v5) & 1) == 0)
          return OUTLINED_FUNCTION_202();
      }
      else
      {
        if (*((_QWORD *)v3 - 1) != v5)
          LOBYTE(v6) = 1;
        if ((v6 & 1) != 0)
          return OUTLINED_FUNCTION_202();
      }
      v3 += 16;
      v4 += 16;
      --v2;
    }
    while (v2);
  }
  return OUTLINED_FUNCTION_236();
}

void sub_240BEFFBC()
{
  uint64_t v0;
  _DWORD *v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  char v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v6 = OUTLINED_FUNCTION_196();
  type metadata accessor for Proto_Tensor(v6);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_145();
  if (v12 && v4 && v3 != v0)
  {
    OUTLINED_FUNCTION_92();
    while (1)
    {
      OUTLINED_FUNCTION_116();
      OUTLINED_FUNCTION_123(v15);
      if (*v2 != *v1)
        break;
      OUTLINED_FUNCTION_160();
      if (!v12)
        break;
      if (v11)
        v12 = v9 == v10;
      else
        v12 = 1;
      if (!v12)
      {
        if (*(_QWORD *)(v9 + 32) != *(_QWORD *)(v10 + 32))
          break;
        OUTLINED_FUNCTION_308();
        while (v14)
        {
          OUTLINED_FUNCTION_318();
          if (!v12)
            goto LABEL_21;
        }
      }
      OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      v13 = OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_77();
      if ((v13 & 1) != 0 && ++v5 != v4)
        continue;
      goto LABEL_22;
    }
LABEL_21:
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_22:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BF0104()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_22();
  v6 = v5;
  v8 = v7;
  v9 = type metadata accessor for Proto_LossLayer.OneOf_LossLayerType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEA0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_48();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEA8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v14 = OUTLINED_FUNCTION_137();
  v15 = type metadata accessor for Proto_LossLayer(v14);
  OUTLINED_FUNCTION_17_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_87();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_330();
  v19 = *(_QWORD *)(v8 + 16);
  if (v19 == *(_QWORD *)(v6 + 16) && v19 && v8 != v6)
  {
    v20 = (*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80);
    v30 = v0;
    v31 = *(_QWORD *)(v18 + 72);
    v21 = v19 - 1;
    v34 = v15;
    while (1)
    {
      v33 = v21;
      v22 = v20;
      sub_240BF04E8(v8 + v20, (uint64_t)v2, type metadata accessor for Proto_LossLayer);
      v32 = v22;
      sub_240BF04E8(v6 + v22, (uint64_t)v1, type metadata accessor for Proto_LossLayer);
      v23 = *v2 == *v1 && v2[1] == v1[1];
      if (!v23 && (OUTLINED_FUNCTION_51_0() & 1) == 0)
        break;
      v24 = *(int *)(v15 + 20);
      v25 = (uint64_t)v1 + v24;
      v26 = v4 + *(int *)(v12 + 48);
      OUTLINED_FUNCTION_93((uint64_t)v2 + v24, v4);
      OUTLINED_FUNCTION_93(v25, v26);
      OUTLINED_FUNCTION_7_1(v4, 1, v9);
      if (v23)
      {
        v27 = OUTLINED_FUNCTION_7_1(v26, 1, v9);
        if (!v23)
          goto LABEL_22;
        OUTLINED_FUNCTION_279(v4);
      }
      else
      {
        OUTLINED_FUNCTION_93(v4, v3);
        OUTLINED_FUNCTION_7_1(v26, 1, v9);
        if (v28)
        {
          OUTLINED_FUNCTION_217();
LABEL_22:
          OUTLINED_FUNCTION_163(v27, &qword_25708BEA8);
          break;
        }
        sub_240BF0410(v26, v30, type metadata accessor for Proto_LossLayer.OneOf_LossLayerType);
        sub_240E28B08();
        OUTLINED_FUNCTION_272();
        OUTLINED_FUNCTION_218();
        OUTLINED_FUNCTION_218();
        OUTLINED_FUNCTION_279(v4);
        if ((v26 & 1) == 0)
          break;
      }
      v29 = OUTLINED_FUNCTION_20_0();
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_339();
      OUTLINED_FUNCTION_77();
      OUTLINED_FUNCTION_77();
      v21 = v33 - 1;
      if ((v29 & 1) != 0)
      {
        v20 = v32 + v31;
        v15 = v34;
        if (v33)
          continue;
      }
      goto LABEL_24;
    }
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_6_0();
  }
LABEL_24:
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_1();
}

void sub_240BF03EC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_391();
  v2 = v1(v0);
  OUTLINED_FUNCTION_33(v2);
  OUTLINED_FUNCTION_44();
}

void sub_240BF0410(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_231(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(a2, a1, v5);
  OUTLINED_FUNCTION_44();
}

void sub_240BF0450()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF047C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF04A8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

uint64_t type metadata accessor for ModelKind(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360538);
}

void sub_240BF04E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_231(a1, a2, a3);
  OUTLINED_FUNCTION_201(v3);
  OUTLINED_FUNCTION_44();
}

void sub_240BF0510()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF053C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

uint64_t type metadata accessor for Model(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360518);
}

_OWORD *sub_240BF057C(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

unint64_t sub_240BF058C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708BD78;
  if (!qword_25708BD78)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708BD70);
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25708BD78);
  }
  return result;
}

uint64_t __swift_instantiateConcreteTypeFromMangledNameAbstract(uint64_t *a1)
{
  uint64_t result;

  result = *a1;
  if (result < 0)
  {
    result = MEMORY[0x24268C2A0](255, (char *)a1 + (int)result, -(result >> 32), 0, 0);
    *a1 = result;
  }
  return result;
}

void sub_240BF0614()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0640()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF066C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0698()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF06C4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF06F0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF071C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

char *sub_240BF0748(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_240BF1244(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_240BF0764()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0790()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1334();
  *v0 = v1;
}

void sub_240BF07B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF07E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF080C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1334();
  *v0 = v1;
}

void sub_240BF0830()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1334();
  *v0 = v1;
}

void sub_240BF0854()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0880()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF08AC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF08D8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0904()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1B1C();
  *v0 = v1;
}

void sub_240BF0930()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF095C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0988()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF09B4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF09E0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0A0C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0A38()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0A64()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1614();
  *v0 = v1;
}

_QWORD *sub_240BF0A90(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_240BF13E0(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_240BF0AAC(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_240BF1518(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_240BF0AC8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1614();
  *v0 = v1;
}

void sub_240BF0AF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0B20()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF16C0();
  *v0 = v1;
}

void sub_240BF0B4C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0B78()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0BA4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

char *sub_240BF0BD0(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_240BF1778(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_240BF0BEC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0C18()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0C44()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0C70()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0C9C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0CC8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0CF4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

char *sub_240BF0D20(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_240BF186C(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_240BF0D3C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1978();
  *v0 = v1;
}

void sub_240BF0D60()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1978();
  *v0 = v1;
}

void sub_240BF0D84()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0DB0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1B1C();
  *v0 = v1;
}

void sub_240BF0DDC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0E08()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0E34()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

char *sub_240BF0E60(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_240BF1A28(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

void sub_240BF0E7C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0EA8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0ED4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0F00()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0F2C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0F58()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0F84()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0FB0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF0FDC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF1008()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1B1C();
  *v0 = v1;
}

void sub_240BF1034()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF1060()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF108C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF10B8()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1BC8();
  *v0 = v1;
}

void sub_240BF10E4()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1BC8();
  *v0 = v1;
}

void sub_240BF1110()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF113C()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF1168()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF1194()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF11C0()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF11EC()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

void sub_240BF1218()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240BF1C88();
  *v0 = v1;
}

char *sub_240BF1244(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  size_t v14;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0E0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  v14 = 16 * v8;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[v14] <= v12)
      memmove(v12, v13, v14);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, v14);
  }
  swift_release();
  return v10;
}

void sub_240BF1334()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_270();
  if (v2)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    v12 = (char *)OUTLINED_FUNCTION_112();
    v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_266(v13 - 32);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v12 + 32;
  v15 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v15[8 * v3] <= v14)
      OUTLINED_FUNCTION_338(v14, v15);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 8 * v3);
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_156();
}

_QWORD *sub_240BF13E0(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C088);
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &a4[3 * v8 + 4] <= v10 + 4)
      memmove(v10 + 4, a4 + 4, 24 * v8);
    a4[2] = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C090);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void sub_240BF1504()
{
  sub_240BF16C0();
}

char *sub_240BF1518(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void sub_240BF1614()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_121();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_271();
  if (v3)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    v12 = (char *)OUTLINED_FUNCTION_112();
    v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_267(v13);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v12 + 32;
  v15 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v15[8 * v2] <= v14)
      OUTLINED_FUNCTION_338(v14, v15);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_42();
}

void sub_240BF16C0()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  BOOL v14;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_121();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
        goto LABEL_19;
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_269();
  if (v3)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_326();
    v12 = (const void *)OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_369(v12);
    if (v2)
    {
      OUTLINED_FUNCTION_263();
      v14 = v14 && v2 == -1;
      if (!v14)
      {
        OUTLINED_FUNCTION_199(v13);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_13:
  OUTLINED_FUNCTION_326();
  OUTLINED_FUNCTION_139();
  if ((v1 & 1) != 0)
  {
    sub_240BF1DD0();
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_182();
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_13();
}

char *sub_240BF1778(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C148);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 4);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[4 * v8] <= v12)
      memmove(v12, v13, 4 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 4 * v8);
  }
  swift_release();
  return v10;
}

char *sub_240BF186C(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 48);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[48 * v8] <= v12)
      memmove(v12, v13, 48 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

void sub_240BF1978()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  size_t v13;
  char *v14;
  char *v15;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_270();
  if (v2)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    v12 = (char *)OUTLINED_FUNCTION_112();
    v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_266(v13 - 32);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  v14 = v12 + 32;
  v15 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v15[16 * v3] <= v14)
      memmove(v14, v15, 16 * v3);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    memcpy(v14, v15, 16 * v3);
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_156();
}

char *sub_240BF1A28(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C0B8);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_release();
  return v10;
}

void sub_240BF1B1C()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  size_t v13;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_121();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_271();
  if (v3)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    v12 = (char *)OUTLINED_FUNCTION_112();
    v13 = _swift_stdlib_malloc_size(v12);
    v7 = OUTLINED_FUNCTION_267(v13);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v0[8 * v2 + 32] <= v12 + 32)
      OUTLINED_FUNCTION_366(v7, v8, 8 * v2);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_326();
    OUTLINED_FUNCTION_239();
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_13();
}

void sub_240BF1BC8()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  char *v12;
  size_t v13;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_121();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_271();
  if (v3)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    v12 = (char *)OUTLINED_FUNCTION_113();
    v13 = _swift_stdlib_malloc_size(v12);
    OUTLINED_FUNCTION_199(v13 - 32);
  }
  else
  {
    v12 = (char *)MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    if (v12 != v0 || &v0[24 * v2 + 32] <= v12 + 32)
      OUTLINED_FUNCTION_366(v7, v8, 24 * v2);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_326();
    OUTLINED_FUNCTION_239();
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_13();
}

void sub_240BF1C88()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  BOOL v14;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_121();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
        goto LABEL_19;
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_269();
  if (v3)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_335();
    v12 = (const void *)OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_369(v12);
    if (v2)
    {
      OUTLINED_FUNCTION_263();
      v14 = v14 && v2 == -1;
      if (!v14)
      {
        OUTLINED_FUNCTION_199(v13);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_13:
  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_139();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_268();
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_182();
  }
  OUTLINED_FUNCTION_154();
  OUTLINED_FUNCTION_13();
}

void sub_240BF1D34()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(_QWORD);
  char v3;
  char v4;

  OUTLINED_FUNCTION_274();
  if (v3 && (v2(0), OUTLINED_FUNCTION_375(), !v4 & v3))
  {
    if (v1 == v0)
    {
      OUTLINED_FUNCTION_156();
    }
    else
    {
      OUTLINED_FUNCTION_147();
      OUTLINED_FUNCTION_224();
    }
  }
  else
  {
    v2(0);
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_225();
  }
}

void sub_240BF1D8C()
{
  sub_240BF1D34();
}

void sub_240BF1D98()
{
  sub_240BF1DD0();
}

char *sub_240BF1DA4(char *__src, uint64_t a2, char *__dst)
{
  if (__dst != __src || &__src[16 * a2] <= __dst)
    return (char *)memmove(__dst, __src, 16 * a2);
  return __src;
}

void sub_240BF1DD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;
  char v3;
  char v4;

  OUTLINED_FUNCTION_274();
  if (v3 && (__swift_instantiateConcreteTypeFromMangledName(v2), OUTLINED_FUNCTION_375(), !v4 & v3))
  {
    if (v1 == v0)
    {
      OUTLINED_FUNCTION_156();
    }
    else
    {
      OUTLINED_FUNCTION_147();
      OUTLINED_FUNCTION_224();
    }
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(v2);
    OUTLINED_FUNCTION_147();
    OUTLINED_FUNCTION_225();
  }
}

void sub_240BF1E28()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_195();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD58);
    v9 = (_QWORD *)OUTLINED_FUNCTION_113();
    v7 = OUTLINED_FUNCTION_177(v9);
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || v0 + 32 + 48 * v2 <= (unint64_t)(v3 + 32))
      OUTLINED_FUNCTION_349(v7, v8, 48 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1B8);
    OUTLINED_FUNCTION_238();
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_42();
}

void sub_240BF1EEC()
{
  sub_240BE18B8(&qword_25708BD90, type metadata accessor for Model, (uint64_t)&protocol conformance descriptor for Model);
}

void sub_240BF1F18()
{
  sub_240BE18B8((unint64_t *)&qword_25435F998, type metadata accessor for Proto_Model, (uint64_t)&unk_240F33EBC);
}

void sub_240BF1F44()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = Model.specificationVersion.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240BF1F64(uint64_t *a1)
{
  Model.specificationVersion.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240BF1F84()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.versionString.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BF1FA8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.modelDescription.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BF1FCC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.author.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BF1FF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.license.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BF2014()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  Model.metadata.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240BF2038()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  Model.inputs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240BF205C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  Model.outputs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240BF2080()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.predictedFeatureName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BF20A4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.predictedProbabilitiesName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240BF20C8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  Model.trainingInput.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240BF20EC()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_103();
  *v0 = Model.isUpdatable.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240BF2110(char *a1)
{
  Model.isUpdatable.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240BF2130()
{
  Model.kind.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240BF2150()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  Model.functions.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240BF2174()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  Model.defaultFunctionName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for Model(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Proto_Model(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t destroy for Model(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Proto_Model(0);
  return swift_release();
}

uint64_t initializeWithCopy for Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for Proto_Model(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for Proto_Model(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t initializeWithTake for Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for Proto_Model(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t assignWithTake for Model(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for Proto_Model(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for Model()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BF23F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_28_0();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for Model()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240BF2434(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_28_0();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240BF2468()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_Model(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for ModelKind(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) == 0)
  {
    v5 = (char *)&loc_240BF2530 + 4 * word_240F1D67E[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v6 = *a2;
  *a1 = *a2;
  v7 = v6 + ((v4 + 16) & ~(unint64_t)v4);
  swift_retain();
  return v7;
}

uint64_t sub_240BF5610(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

uint64_t sub_240BF5654(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t destroy for ModelKind(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  int *v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  int *v66;
  uint64_t v67;
  uint64_t v68;
  int v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  void (*v74)(uint64_t, uint64_t);
  uint64_t v75;
  uint64_t v76;
  int *v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  int v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  int v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t updated;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  int *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  int *v135;
  uint64_t v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  int *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  int v164;
  uint64_t v165;
  uint64_t (*v166)(uint64_t, uint64_t);
  uint64_t v167;
  uint64_t v168;
  void (*v169)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(a1, v3);
      v4 = type metadata accessor for Proto_PipelineClassifier(0);
      goto LABEL_4;
    case 1:
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(a1, v3);
      v4 = type metadata accessor for Proto_PipelineRegressor(0);
LABEL_4:
      v5 = a1 + *(int *)(v4 + 20);
      v6 = type metadata accessor for Proto_Pipeline(0);
      result = __swift_getEnumTagSinglePayload(v5, 1, v6);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      goto LABEL_147;
    case 2:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = type metadata accessor for Proto_Pipeline(0);
      goto LABEL_48;
    case 3:
    case 22:
      goto LABEL_157;
    case 4:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_CustomModel(0);
      goto LABEL_93;
    case 5:
      v9 = type metadata accessor for Proto_LinkedModel.OneOf_LinkType(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v9))
      {
        v10 = sub_240F1C930();
        v11 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8);
        v11(a1, v10);
        v12 = type metadata accessor for Proto_LinkedModelFile(0);
        v13 = a1 + *(int *)(v12 + 20);
        v14 = type metadata accessor for Proto_StringParameter(0);
        if (!__swift_getEnumTagSinglePayload(v13, 1, v14))
        {
          swift_bridgeObjectRelease();
          v11(v13 + *(int *)(v14 + 20), v10);
        }
        v15 = a1 + *(int *)(v12 + 24);
        if (!__swift_getEnumTagSinglePayload(v15, 1, v14))
        {
          swift_bridgeObjectRelease();
          v11(v15 + *(int *)(v14 + 20), v10);
        }
      }
      v16 = type metadata accessor for Proto_LinkedModel(0);
      goto LABEL_85;
    case 6:
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
      v7 = type metadata accessor for Proto_SerializedModel(0);
      goto LABEL_48;
    case 7:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for Proto_FeatureVectorizer(0);
      goto LABEL_85;
    case 8:
      v17 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v17))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (EnumCaseMultiPayload == 1)
          v19 = type metadata accessor for Proto_Int64Vector(0);
        else
          v19 = type metadata accessor for Proto_StringVector(0);
        v90 = a1 + *(int *)(v19 + 20);
        v91 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
      }
      v16 = type metadata accessor for Proto_DictVectorizer(0);
      goto LABEL_85;
    case 9:
      v20 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v20))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            swift_bridgeObjectRelease();
            break;
          case 3u:
            swift_bridgeObjectRelease();
            v160 = type metadata accessor for Proto_DoubleVector(0);
            goto LABEL_152;
          case 4u:
            swift_bridgeObjectRelease();
            v160 = type metadata accessor for Proto_Int64Vector(0);
            goto LABEL_152;
          case 5u:
            swift_bridgeObjectRelease();
            v160 = type metadata accessor for Proto_StringToDoubleMap(0);
            goto LABEL_152;
          case 6u:
            swift_bridgeObjectRelease();
            v160 = type metadata accessor for Proto_Int64ToDoubleMap(0);
LABEL_152:
            v161 = a1 + *(int *)(v160 + 20);
            v162 = sub_240F1C930();
            (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v162 - 8) + 8))(v161, v162);
            break;
          default:
            break;
        }
      }
      v94 = type metadata accessor for Proto_Imputer(0);
      v163 = a1 + *(int *)(v94 + 20);
      v164 = *(unsigned __int8 *)(v163 + 16);
      if (v164 != 255)
        sub_240C02F7C(*(_QWORD *)v163, *(_QWORD *)(v163 + 8), v164);
      goto LABEL_155;
    case 10:
      v21 = type metadata accessor for Proto_CategoricalMapping.OneOf_MappingType(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v21))
      {
        v22 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v22 == 1)
          v23 = type metadata accessor for Proto_Int64ToStringMap(0);
        else
          v23 = type metadata accessor for Proto_StringToInt64Map(0);
        v92 = a1 + *(int *)(v23 + 20);
        v93 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v93 - 8) + 8))(v92, v93);
      }
      v94 = type metadata accessor for Proto_CategoricalMapping(0);
      v95 = a1 + *(int *)(v94 + 20);
      v96 = *(unsigned __int8 *)(v95 + 16);
      if (v96 != 255)
        sub_240BF6B24(*(_QWORD *)v95, *(_QWORD *)(v95 + 8), v96 & 1);
LABEL_155:
      v49 = *(int *)(v94 + 24);
      goto LABEL_156;
    case 11:
      v24 = type metadata accessor for Proto_OneHotEncoder.OneOf_CategoryType(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v24))
      {
        v25 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v25 == 1)
          v26 = type metadata accessor for Proto_Int64Vector(0);
        else
          v26 = type metadata accessor for Proto_StringVector(0);
        v97 = a1 + *(int *)(v26 + 20);
        v98 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v98 - 8) + 8))(v97, v98);
      }
      v8 = type metadata accessor for Proto_OneHotEncoder(0);
      goto LABEL_93;
    case 12:
      v16 = type metadata accessor for Proto_Normalizer();
      goto LABEL_85;
    case 13:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v7 = type metadata accessor for Proto_Scaler();
      goto LABEL_48;
    case 14:
      v27 = type metadata accessor for Proto_NonMaximumSuppression.OneOf_SuppressionMethod(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v27))
      {
        v28 = a1 + *(int *)(type metadata accessor for Proto_NonMaximumSuppression.PickTop(0) + 20);
        v29 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 8))(v28, v29);
      }
      v30 = type metadata accessor for Proto_NonMaximumSuppression(0);
      v31 = a1 + *(int *)(v30 + 20);
      v32 = type metadata accessor for Proto_NonMaximumSuppression.OneOf_ClassLabels(0);
      if (!__swift_getEnumTagSinglePayload(v31, 1, v32))
      {
        v33 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v33 == 1)
          v34 = type metadata accessor for Proto_Int64Vector(0);
        else
          v34 = type metadata accessor for Proto_StringVector(0);
        v99 = v31 + *(int *)(v34 + 20);
        v100 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v100 - 8) + 8))(v99, v100);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = *(int *)(v30 + 56);
      goto LABEL_156;
    case 15:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v35 = type metadata accessor for Proto_GLMClassifier(0);
      v36 = a1 + *(int *)(v35 + 32);
      v37 = type metadata accessor for Proto_GLMClassifier.OneOf_ClassLabels(0);
      if (!__swift_getEnumTagSinglePayload(v36, 1, v37))
      {
        v38 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v38 == 1)
          v39 = type metadata accessor for Proto_Int64Vector(0);
        else
          v39 = type metadata accessor for Proto_StringVector(0);
        v101 = v36 + *(int *)(v39 + 20);
        v102 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v102 - 8) + 8))(v101, v102);
      }
      v49 = *(int *)(v35 + 36);
      goto LABEL_156;
    case 16:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_GLMRegressor(0);
      goto LABEL_93;
    case 17:
      v40 = (int *)type metadata accessor for Proto_TreeEnsembleClassifier(0);
      v41 = a1 + v40[5];
      v42 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
      if (!__swift_getEnumTagSinglePayload(v41, 1, v42))
      {
        v43 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v43 == 1)
          v44 = type metadata accessor for Proto_Int64Vector(0);
        else
          v44 = type metadata accessor for Proto_StringVector(0);
        v103 = v41 + *(int *)(v44 + 20);
        v104 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v104 - 8) + 8))(v103, v104);
      }
      v105 = a1 + v40[6];
      v106 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 8);
      v169(v105, v106);
      v107 = a1 + v40[7];
      v108 = type metadata accessor for Proto_TreeEnsembleParameters(0);
      result = __swift_getEnumTagSinglePayload(v107, 1, v108);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v109 = *(int *)(v108 + 28);
      goto LABEL_174;
    case 18:
      v45 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
      v46 = a1 + *(int *)(v45 + 20);
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(v46, v3);
      v5 = a1 + *(int *)(v45 + 24);
      v47 = type metadata accessor for Proto_TreeEnsembleParameters(0);
      result = __swift_getEnumTagSinglePayload(v5, 1, v47);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v48 = *(int *)(v47 + 28);
      goto LABEL_168;
    case 19:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for Proto_ArrayFeatureExtractor();
      goto LABEL_85;
    case 20:
      v16 = type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(0);
      goto LABEL_85;
    case 21:
      type metadata accessor for VisionFeaturePrintKind(0);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v7 = type metadata accessor for Proto_CoreMLModels_VisionFeaturePrint.Objects(0);
LABEL_48:
        v49 = *(int *)(v7 + 24);
      }
      else
      {
        v16 = type metadata accessor for Proto_CoreMLModels_VisionFeaturePrint.Scene(0);
LABEL_85:
        v49 = *(int *)(v16 + 20);
      }
LABEL_156:
      a1 += v49;
LABEL_157:
      v165 = sub_240F1C930();
      v166 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 8);
      v167 = a1;
      return v166(v167, v165);
    case 23:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(a1 + 88), *(_QWORD *)(a1 + 96));
      v50 = type metadata accessor for Proto_CoreMLModels_WordTagger(0);
      v51 = a1 + *(int *)(v50 + 44);
      v52 = type metadata accessor for Proto_CoreMLModels_WordTagger.OneOf_Tags(0);
      if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
      {
        swift_bridgeObjectRelease();
        v53 = v51 + *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
        v54 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8))(v53, v54);
      }
      v49 = *(int *)(v50 + 48);
      goto LABEL_156;
    case 24:
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
      v8 = type metadata accessor for Proto_CoreMLModels_WordEmbedding();
LABEL_93:
      v49 = *(int *)(v8 + 28);
      goto LABEL_156;
    case 25:
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
      v55 = type metadata accessor for Proto_CoreMLModels_TextClassifier(0);
      v56 = a1 + *(int *)(v55 + 28);
      v57 = type metadata accessor for Proto_CoreMLModels_TextClassifier.OneOf_ClassLabels(0);
      goto LABEL_55;
    case 26:
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(a1 + 24), *(_QWORD *)(a1 + 32));
      v55 = type metadata accessor for Proto_CoreMLModels_Gazetteer(0);
      v56 = a1 + *(int *)(v55 + 28);
      v57 = type metadata accessor for Proto_CoreMLModels_Gazetteer.OneOf_ClassLabels(0);
LABEL_55:
      if (!__swift_getEnumTagSinglePayload(v56, 1, v57))
      {
        swift_bridgeObjectRelease();
        v58 = v56 + *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
        v59 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v59 - 8) + 8))(v58, v59);
      }
      v49 = *(int *)(v55 + 32);
      goto LABEL_156;
    case 27:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v60 = (int *)type metadata accessor for Proto_ItemSimilarityRecommender(0);
      v61 = a1 + v60[11];
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(v61, v3);
      v62 = a1 + v60[12];
      v63 = type metadata accessor for Proto_StringVector(0);
      if (!__swift_getEnumTagSinglePayload(v62, 1, v63))
      {
        swift_bridgeObjectRelease();
        v169(v62 + *(int *)(v63 + 20), v3);
      }
      v5 = a1 + v60[13];
      v64 = type metadata accessor for Proto_Int64Vector(0);
      goto LABEL_165;
    case 28:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = type metadata accessor for Proto_NeuralNetwork(0);
      goto LABEL_66;
    case 29:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v66 = (int *)type metadata accessor for Proto_NeuralNetworkClassifier(0);
      v67 = a1 + v66[8];
      v68 = type metadata accessor for Proto_NeuralNetworkClassifier.OneOf_ClassLabels(0);
      if (!__swift_getEnumTagSinglePayload(v67, 1, v68))
      {
        v69 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v69 == 1)
          v70 = type metadata accessor for Proto_Int64Vector(0);
        else
          v70 = type metadata accessor for Proto_StringVector(0);
        v110 = v67 + *(int *)(v70 + 20);
        v111 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v111 - 8) + 8))(v110, v111);
      }
      swift_bridgeObjectRelease();
      v112 = a1 + v66[10];
      v113 = sub_240F1C930();
      v114 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v113 - 8) + 8);
      v114(v112, v113);
      v115 = a1 + v66[11];
      updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
      result = __swift_getEnumTagSinglePayload(v115, 1, updated);
      if ((_DWORD)result)
        return result;
      v114(v115, v113);
      return swift_release();
    case 30:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v65 = type metadata accessor for Proto_NeuralNetworkRegressor(0);
LABEL_66:
      v71 = v65;
      v72 = a1 + *(int *)(v65 + 32);
      v73 = sub_240F1C930();
      v74 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v73 - 8) + 8);
      v74(v72, v73);
      v75 = a1 + *(int *)(v71 + 36);
      v76 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      result = __swift_getEnumTagSinglePayload(v75, 1, v76);
      if ((_DWORD)result)
        return result;
      v74(v75, v73);
      return swift_release();
    case 31:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v49 = *(int *)(type metadata accessor for Proto_MILSpec_Program(0) + 32);
      goto LABEL_156;
    case 32:
      swift_bridgeObjectRelease();
      v16 = type metadata accessor for Proto_ClassConfidenceThresholding();
      goto LABEL_85;
    case 33:
      swift_bridgeObjectRelease();
      v77 = (int *)type metadata accessor for Proto_SupportVectorClassifier(0);
      v78 = a1 + v77[5];
      v79 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
      if (!__swift_getEnumTagSinglePayload(v78, 1, v79))
      {
        v80 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v80 == 1)
          v81 = type metadata accessor for Proto_DenseSupportVectors(0);
        else
          v81 = type metadata accessor for Proto_SparseSupportVectors(0);
        v117 = v78 + *(int *)(v81 + 20);
        v118 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v118 - 8) + 8))(v117, v118);
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v119 = a1 + v77[10];
      v120 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
      if (!__swift_getEnumTagSinglePayload(v119, 1, v120))
      {
        v121 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v121 == 1)
          v122 = type metadata accessor for Proto_Int64Vector(0);
        else
          v122 = type metadata accessor for Proto_StringVector(0);
        v147 = v119 + *(int *)(v122 + 20);
        v148 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v148 - 8) + 8))(v147, v148);
      }
      v149 = a1 + v77[11];
      v106 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v106 - 8) + 8);
      v169(v149, v106);
      v107 = a1 + v77[12];
      v150 = type metadata accessor for Proto_Kernel(0);
      result = __swift_getEnumTagSinglePayload(v107, 1, v150);
      if ((_DWORD)result)
        return result;
      v151 = v107;
      v152 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      if (!__swift_getEnumTagSinglePayload(v107, 1, v152))
      {
        switch(swift_getEnumCaseMultiPayload())
        {
          case 0u:
            goto LABEL_172;
          case 1u:
            v153 = type metadata accessor for Proto_RBFKernel(0);
            v154 = 5;
            goto LABEL_171;
          case 2u:
            v153 = type metadata accessor for Proto_PolyKernel(0);
            v154 = 7;
            goto LABEL_171;
          case 3u:
            v153 = type metadata accessor for Proto_SigmoidKernel(0);
            v154 = 6;
LABEL_171:
            v151 = v107 + *(int *)(v153 + 4 * v154);
LABEL_172:
            v169(v151, v106);
            break;
          default:
            break;
        }
      }
      v109 = *(int *)(v150 + 20);
LABEL_174:
      v167 = v107 + v109;
      v165 = v106;
      goto LABEL_175;
    case 34:
      v82 = type metadata accessor for Proto_SupportVectorRegressor.OneOf_SupportVectors(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v82))
      {
        v83 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v83 == 1)
          v84 = type metadata accessor for Proto_DenseSupportVectors(0);
        else
          v84 = type metadata accessor for Proto_SparseSupportVectors(0);
        v123 = a1 + *(int *)(v84 + 20);
        v124 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v124 - 8) + 8))(v123, v124);
      }
      v125 = (int *)type metadata accessor for Proto_SupportVectorRegressor(0);
      v126 = a1 + v125[6];
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(v126, v3);
      v127 = a1 + v125[7];
      v128 = type metadata accessor for Proto_Kernel(0);
      if (!__swift_getEnumTagSinglePayload(v127, 1, v128))
      {
        v129 = v127;
        v130 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
        if (!__swift_getEnumTagSinglePayload(v127, 1, v130))
        {
          switch(swift_getEnumCaseMultiPayload())
          {
            case 0u:
              goto LABEL_162;
            case 1u:
              v131 = type metadata accessor for Proto_RBFKernel(0);
              v132 = 5;
              goto LABEL_161;
            case 2u:
              v131 = type metadata accessor for Proto_PolyKernel(0);
              v132 = 7;
              goto LABEL_161;
            case 3u:
              v131 = type metadata accessor for Proto_SigmoidKernel(0);
              v132 = 6;
LABEL_161:
              v129 = v127 + *(int *)(v131 + 4 * v132);
LABEL_162:
              v169(v129, v3);
              break;
            default:
              break;
          }
        }
        v169(v127 + *(int *)(v128 + 20), v3);
      }
      v5 = a1 + v125[8];
      v64 = type metadata accessor for Proto_Coefficients(0);
LABEL_165:
      v168 = v64;
      result = __swift_getEnumTagSinglePayload(v5, 1, v64);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      v48 = *(int *)(v168 + 20);
      goto LABEL_168;
    case 35:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v85 = type metadata accessor for Proto_BayesianProbitRegressor(0);
      v86 = a1 + *(int *)(v85 + 56);
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(v86, v3);
      v5 = a1 + *(int *)(v85 + 60);
      v6 = type metadata accessor for Proto_BayesianProbitRegressor.Gaussian(0);
      result = __swift_getEnumTagSinglePayload(v5, 1, v6);
      if (!(_DWORD)result)
        goto LABEL_147;
      return result;
    case 36:
      v87 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_ClassLabels(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v87))
      {
        v88 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v88 == 1)
          v89 = type metadata accessor for Proto_Int64Vector(0);
        else
          v89 = type metadata accessor for Proto_StringVector(0);
        v133 = a1 + *(int *)(v89 + 20);
        v134 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v134 - 8) + 8))(v133, v134);
      }
      v135 = (int *)type metadata accessor for Proto_KNearestNeighborsClassifier(0);
      v136 = a1 + v135[5];
      v137 = *(unsigned __int8 *)(v136 + 16);
      if (v137 != 255)
        sub_240BF6B24(*(_QWORD *)v136, *(_QWORD *)(v136 + 8), v137 & 1);
      v138 = a1 + v135[6];
      v139 = type metadata accessor for Proto_KNearestNeighborsClassifier.OneOf_WeightingScheme(0);
      if (!__swift_getEnumTagSinglePayload(v138, 1, v139))
      {
        v140 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v140 - 8) + 8))(v138, v140);
      }
      v141 = a1 + v135[7];
      v3 = sub_240F1C930();
      v169 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8);
      v169(v141, v3);
      v142 = a1 + v135[8];
      v143 = (int *)type metadata accessor for Proto_NearestNeighborsIndex(0);
      if (!__swift_getEnumTagSinglePayload(v142, 1, (uint64_t)v143))
      {
        swift_bridgeObjectRelease();
        v144 = v142 + v143[6];
        v145 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_IndexType(0);
        if (!__swift_getEnumTagSinglePayload(v144, 1, v145))
        {
          if (swift_getEnumCaseMultiPayload() == 1)
            v146 = v144 + *(int *)(type metadata accessor for Proto_SingleKdTreeIndex(0) + 20);
          else
            v146 = v144;
          v169(v146, v3);
        }
        v155 = v142 + v143[7];
        v156 = type metadata accessor for Proto_NearestNeighborsIndex.OneOf_DistanceFunction(0);
        if (!__swift_getEnumTagSinglePayload(v155, 1, v156))
          v169(v155, v3);
        v169(v142 + v143[8], v3);
      }
      v5 = a1 + v135[9];
      v6 = type metadata accessor for Proto_Int64Parameter(0);
      result = __swift_getEnumTagSinglePayload(v5, 1, v6);
      if ((_DWORD)result)
        return result;
      v157 = v5 + *(int *)(v6 + 20);
      v158 = type metadata accessor for Proto_Int64Parameter.OneOf_AllowedValues(0);
      if (!__swift_getEnumTagSinglePayload(v157, 1, v158))
      {
        if (swift_getEnumCaseMultiPayload() == 1)
        {
          swift_bridgeObjectRelease();
          v159 = *(int *)(type metadata accessor for Proto_Int64Set(0) + 20);
        }
        else
        {
          v159 = *(int *)(type metadata accessor for Proto_Int64Range(0) + 24);
        }
        v169(v157 + v159, v3);
      }
LABEL_147:
      v48 = *(int *)(v6 + 24);
LABEL_168:
      v167 = v5 + v48;
      v165 = v3;
LABEL_175:
      v166 = (uint64_t (*)(uint64_t, uint64_t))v169;
      return v166(v167, v165);
    default:
      return result;
  }
}

uint64_t sub_240BF6AE0(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

uint64_t sub_240BF6B24(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_bridgeObjectRelease();
  return result;
}

void initializeWithCopy for ModelKind()
{
  char *v0;

  v0 = (char *)sub_240BF6B88 + 4 * word_240F1D742[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240BF6B88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;

  v2 = sub_240F1C930();
  v3 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16);
  v3(v0, v1, v2);
  v4 = *(int *)(type metadata accessor for Proto_PipelineClassifier(0) + 20);
  v5 = (_QWORD *)(v0 + v4);
  v6 = (_QWORD *)(v1 + v4);
  v7 = type metadata accessor for Proto_Pipeline(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    v9 = v6[1];
    *v5 = *v6;
    v5[1] = v9;
    v10 = *(int *)(v7 + 24);
    v11 = (char *)v5 + v10;
    v12 = (char *)v6 + v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v3((uint64_t)v11, (uint64_t)v12, v2);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithCopy for ModelKind(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240BF03EC();
    v2 = (char *)&loc_240BF9D0C + 4 * word_240F1D7A6[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

void initializeWithTake for ModelKind()
{
  char *v0;

  v0 = (char *)sub_240BFD03C + 4 * word_240F1D80A[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

char *sub_240BFD03C()
{
  char *v0;
  char *v1;
  uint64_t v2;
  void (*v3)(char *, char *, uint64_t);
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;

  v2 = sub_240F1C930();
  v3 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v2 - 8) + 32);
  v3(v0, v1, v2);
  v4 = *(int *)(type metadata accessor for Proto_PipelineClassifier(0) + 20);
  v5 = &v0[v4];
  v6 = &v1[v4];
  v7 = type metadata accessor for Proto_Pipeline(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7))
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD98);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v5 = *(_OWORD *)v6;
    v3(&v5[*(int *)(v7 + 24)], &v6[*(int *)(v7 + 24)], v2);
    __swift_storeEnumTagSinglePayload((uint64_t)v5, 0, 1, v7);
  }
  swift_storeEnumTagMultiPayload();
  return v0;
}

uint64_t assignWithTake for ModelKind(uint64_t result, uint64_t a2)
{
  char *v2;

  if (result != a2)
  {
    sub_240BF03EC();
    v2 = (char *)&loc_240BFFB90 + 4 * word_240F1D86C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  return result;
}

uint64_t sub_240C02684()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_240C02694()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;

  result = type metadata accessor for Proto_PipelineClassifier(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_PipelineRegressor(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Proto_Pipeline(319);
      if (v3 <= 0x3F)
      {
        result = sub_240F1C930();
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for Proto_CustomModel(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for Proto_LinkedModel(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for Proto_SerializedModel(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for Proto_FeatureVectorizer(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for Proto_DictVectorizer(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for Proto_Imputer(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for Proto_CategoricalMapping(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for Proto_OneHotEncoder(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for Proto_Normalizer();
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for Proto_Scaler();
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for Proto_NonMaximumSuppression(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for Proto_GLMClassifier(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for Proto_GLMRegressor(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = type metadata accessor for Proto_TreeEnsembleClassifier(319);
                                    if (v18 <= 0x3F)
                                    {
                                      result = type metadata accessor for Proto_TreeEnsembleRegressor(319);
                                      if (v19 <= 0x3F)
                                      {
                                        result = type metadata accessor for Proto_ArrayFeatureExtractor();
                                        if (v20 <= 0x3F)
                                        {
                                          result = type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(319);
                                          if (v21 <= 0x3F)
                                          {
                                            result = type metadata accessor for VisionFeaturePrintKind(319);
                                            if (v22 <= 0x3F)
                                            {
                                              result = type metadata accessor for Proto_CoreMLModels_WordTagger(319);
                                              if (v23 <= 0x3F)
                                              {
                                                result = type metadata accessor for Proto_CoreMLModels_WordEmbedding();
                                                if (v24 <= 0x3F)
                                                {
                                                  result = type metadata accessor for Proto_CoreMLModels_TextClassifier(319);
                                                  if (v25 <= 0x3F)
                                                  {
                                                    result = type metadata accessor for Proto_CoreMLModels_Gazetteer(319);
                                                    if (v26 <= 0x3F)
                                                    {
                                                      result = type metadata accessor for Proto_ItemSimilarityRecommender(319);
                                                      if (v27 <= 0x3F)
                                                      {
                                                        result = type metadata accessor for Proto_NeuralNetwork(319);
                                                        if (v28 <= 0x3F)
                                                        {
                                                          result = type metadata accessor for Proto_NeuralNetworkClassifier(319);
                                                          if (v29 <= 0x3F)
                                                          {
                                                            result = type metadata accessor for Proto_NeuralNetworkRegressor(319);
                                                            if (v30 <= 0x3F)
                                                            {
                                                              result = type metadata accessor for Proto_MILSpec_Program(319);
                                                              if (v31 <= 0x3F)
                                                              {
                                                                result = type metadata accessor for Proto_ClassConfidenceThresholding();
                                                                if (v32 <= 0x3F)
                                                                {
                                                                  result = type metadata accessor for Proto_SupportVectorClassifier(319);
                                                                  if (v33 <= 0x3F)
                                                                  {
                                                                    result = type metadata accessor for Proto_SupportVectorRegressor(319);
                                                                    if (v34 <= 0x3F)
                                                                    {
                                                                      result = type metadata accessor for Proto_BayesianProbitRegressor(319);
                                                                      if (v35 <= 0x3F)
                                                                      {
                                                                        result = type metadata accessor for Proto_KNearestNeighborsClassifier(319);
                                                                        if (v36 <= 0x3F)
                                                                        {
                                                                          swift_initEnumMetadataMultiPayload();
                                                                          return 0;
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void sub_240C02AD8()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_270();
  if (v2)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C018);
    v7 = (char *)OUTLINED_FUNCTION_112();
    v8 = _swift_stdlib_malloc_size(v7);
    OUTLINED_FUNCTION_266(v8 - 32);
  }
  else
  {
    v7 = (char *)MEMORY[0x24BEE4AF8];
  }
  v9 = v7 + 32;
  v10 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[8 * v3] <= v9)
      OUTLINED_FUNCTION_338(v9, v10);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    memcpy(v9, v10, 8 * v3);
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_156();
}

void sub_240C02B8C()
{
  sub_240C02EB8();
}

void sub_240C02BA0()
{
  sub_240C02EB8();
}

void sub_240C02BB4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  _QWORD *v7;
  char *v8;
  char *v9;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_195();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF0);
    v7 = (_QWORD *)OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_177(v7);
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  v8 = (char *)(v3 + 32);
  v9 = (char *)(v0 + 32);
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || &v9[48 * v2] <= v8)
      memmove(v8, v9, 48 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_42();
}

void sub_240C02C78()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  size_t v7;
  uint64_t v8;
  _QWORD *v9;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_195();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C088);
    v9 = (_QWORD *)OUTLINED_FUNCTION_113();
    v7 = OUTLINED_FUNCTION_177(v9);
  }
  else
  {
    v3 = MEMORY[0x24BEE4AF8];
  }
  if ((v1 & 1) != 0)
  {
    if (v3 != v0 || v0 + 32 + 24 * v2 <= (unint64_t)(v3 + 32))
      OUTLINED_FUNCTION_349(v7, v8, 24 * v2);
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708C090);
    OUTLINED_FUNCTION_238();
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_42();
}

void sub_240C02D3C()
{
  sub_240C02EB8();
}

void sub_240C02D50()
{
  sub_240C02EB8();
}

void sub_240C02D64()
{
  sub_240C02EB8();
}

void sub_240C02D78()
{
  char *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  char *v7;
  size_t v8;
  char *v9;
  char *v10;

  OUTLINED_FUNCTION_214();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
      {
        __break(1u);
        return;
      }
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_195();
  if (v3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
    v7 = (char *)OUTLINED_FUNCTION_112();
    v8 = _swift_stdlib_malloc_size(v7);
    *((_QWORD *)v7 + 2) = v2;
    *((_QWORD *)v7 + 3) = 2 * ((uint64_t)(v8 - 32) / 16);
  }
  else
  {
    v7 = (char *)MEMORY[0x24BEE4AF8];
  }
  v9 = v7 + 32;
  v10 = v0 + 32;
  if ((v1 & 1) != 0)
  {
    if (v7 != v0 || &v10[16 * v2] <= v9)
      memmove(v9, v10, 16 * v2);
    *((_QWORD *)v0 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_156();
}

void sub_240C02E40()
{
  sub_240C02EB8();
}

void sub_240C02E54()
{
  sub_240C02EB8();
}

void sub_240C02E68()
{
  sub_240C02EB8();
}

void sub_240C02E7C()
{
  sub_240C02EB8();
}

void sub_240C02E90()
{
  sub_240C02EB8();
}

void sub_240C02EA4()
{
  sub_240C02EB8();
}

void sub_240C02EB8()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  const void *v12;
  uint64_t v13;
  BOOL v14;

  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_121();
  if ((v4 & 1) != 0)
  {
    OUTLINED_FUNCTION_49_0();
    if (v5 != v6)
    {
      OUTLINED_FUNCTION_107();
      if (v5)
        goto LABEL_19;
      OUTLINED_FUNCTION_48_0();
    }
  }
  OUTLINED_FUNCTION_269();
  if (v3)
  {
    OUTLINED_FUNCTION_158(v7, v8, v9, v10, v11);
    OUTLINED_FUNCTION_335();
    v12 = (const void *)OUTLINED_FUNCTION_74();
    OUTLINED_FUNCTION_369(v12);
    if (v2)
    {
      OUTLINED_FUNCTION_263();
      v14 = v14 && v2 == -1;
      if (!v14)
      {
        OUTLINED_FUNCTION_199(v13);
        goto LABEL_13;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
LABEL_19:
    __break(1u);
    return;
  }
LABEL_13:
  OUTLINED_FUNCTION_335();
  OUTLINED_FUNCTION_139();
  if ((v1 & 1) != 0)
  {
    OUTLINED_FUNCTION_268();
    *(_QWORD *)(v0 + 16) = 0;
  }
  else
  {
    OUTLINED_FUNCTION_182();
  }
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C02F64(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_240C02F7C(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (a3 == 2)
    return swift_bridgeObjectRelease();
  return result;
}

void sub_240C02F94(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_201(v3);
  OUTLINED_FUNCTION_44();
}

uint64_t OUTLINED_FUNCTION_4_1()
{
  return swift_beginAccess();
}

void OUTLINED_FUNCTION_5_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BF0410(v3, *(_QWORD *)(v4 - 88), a3);
}

void OUTLINED_FUNCTION_6_0()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_7_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

void OUTLINED_FUNCTION_9_1(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF0410(a1, *(_QWORD *)(a2 - 256), v2);
}

uint64_t OUTLINED_FUNCTION_10_1()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_11_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BF0410(v3, *(_QWORD *)(v4 - 104), a3);
}

void OUTLINED_FUNCTION_12_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF0410(a1, v3, a3);
}

void OUTLINED_FUNCTION_13_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF0410(a1, *(_QWORD *)(v3 - 104), a3);
}

void OUTLINED_FUNCTION_14_0(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240BF0410(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_16_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_18_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, 1, 1, a4);
}

uint64_t OUTLINED_FUNCTION_19_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return sub_240F1C930();
}

void OUTLINED_FUNCTION_21_0()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return type metadata accessor for Proto_Model(0);
}

void OUTLINED_FUNCTION_25_0(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF0410(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_27_0()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return type metadata accessor for Proto_Model(0);
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return type metadata accessor for Proto_ModelDescription(0);
}

void OUTLINED_FUNCTION_30_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF0410(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return type metadata accessor for Proto_Metadata(0);
}

uint64_t OUTLINED_FUNCTION_33_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return sub_240F1CC90();
}

void OUTLINED_FUNCTION_35_0()
{
  sub_240BF03EC();
}

__n128 OUTLINED_FUNCTION_36_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  __n128 result;
  __int128 v6;

  *(_QWORD *)(v2 + 16) = v1;
  v4 = v2 + 48 * v0;
  result = *(__n128 *)(v3 - 208);
  v6 = *(_OWORD *)(v3 - 176);
  *(_OWORD *)(v4 + 48) = *(_OWORD *)(v3 - 192);
  *(_OWORD *)(v4 + 64) = v6;
  *(__n128 *)(v4 + 32) = result;
  return result;
}

void OUTLINED_FUNCTION_37_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v4;
  sub_240BF0410(v0, v1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v2, v3);
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return type metadata accessor for Proto_ModelDescription(0);
}

uint64_t OUTLINED_FUNCTION_40_0()
{
  return sub_240F1CC90();
}

uint64_t OUTLINED_FUNCTION_41_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_42_0()
{
  _QWORD *v0;
  uint64_t v1;

  *v0 = v1;
  v0[1] = 0;
  v0[2] = 0xE000000000000000;
  v0[3] = v1;
  v0[4] = v1;
  v0[5] = 0;
  v0[6] = 0xE000000000000000;
  v0[7] = 0;
  v0[8] = 0xE000000000000000;
  v0[9] = v1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_43_0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_46(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF04E8(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return sub_240F1CEDC();
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return sub_240F1CC90();
}

void OUTLINED_FUNCTION_53_0()
{
  sub_240BF1E28();
}

void OUTLINED_FUNCTION_54_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v1 + *(int *)(v2 + 48), 1, 1, v0);
}

void OUTLINED_FUNCTION_58_0()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_60()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_62@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_63(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF0410(a1, v3, a3);
}

void OUTLINED_FUNCTION_64()
{
  sub_240BF1E28();
}

uint64_t OUTLINED_FUNCTION_65(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 1, 1, v1);
}

void OUTLINED_FUNCTION_67()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = v0;
}

uint64_t OUTLINED_FUNCTION_68@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_69@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_71(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_72@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  *v1 = a1;
  v1[1] = 0;
  v1[2] = 0xE000000000000000;
  v1[3] = a1;
  v1[4] = a1;
  v1[5] = 0;
  v1[6] = 0xE000000000000000;
  v1[7] = 0;
  v1[8] = 0xE000000000000000;
  v1[9] = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_73()
{
  uint64_t v0;
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, v0);
  return sub_240D73150();
}

uint64_t OUTLINED_FUNCTION_74()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_75(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_76()
{
  return sub_240F1CC90();
}

void OUTLINED_FUNCTION_77()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(v1 + *(int *)(v2 + 48), 1, 1, v0);
}

void OUTLINED_FUNCTION_79()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_84()
{
  char v0;

  return v0 & 1;
}

uint64_t OUTLINED_FUNCTION_89()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_90()
{
  return 0;
}

_OWORD *OUTLINED_FUNCTION_91(uint64_t a1, _OWORD *a2)
{
  uint64_t v2;

  return sub_240BF057C((_OWORD *)(v2 - 152), a2);
}

void OUTLINED_FUNCTION_92()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = (*(unsigned __int8 *)(v0 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0 + 80);
  *(_QWORD *)(v3 - 96) = v1 + v4;
  *(_QWORD *)(v3 - 88) = v2 + v4;
}

void OUTLINED_FUNCTION_93(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

void OUTLINED_FUNCTION_94(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_95(uint64_t a1, uint64_t a2, char a3)
{
  sub_240C02F64(a1, a2, a3);
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_96(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

void OUTLINED_FUNCTION_97()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_98()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_100(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_101()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_102()
{
  return sub_240F1CC90();
}

__n128 OUTLINED_FUNCTION_105()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  __n128 result;
  __int128 v7;

  *(_QWORD *)(v3 + 16) = v0;
  v5 = v3 + 48 * v1;
  result = *(__n128 *)(v4 - 208);
  v7 = *(_OWORD *)(v2 + 32);
  *(_OWORD *)(v5 + 48) = *(_OWORD *)(v2 + 16);
  *(_OWORD *)(v5 + 64) = v7;
  *(__n128 *)(v5 + 32) = result;
  return result;
}

__n128 OUTLINED_FUNCTION_106@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  __n128 result;
  __int128 v4;

  result = *(__n128 *)(v2 - 208);
  v4 = *(_OWORD *)(v1 + 32);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(v1 + 16);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

void OUTLINED_FUNCTION_108()
{
  _QWORD *v0;

  *v0 = 0;
  v0[1] = 0xE000000000000000;
  v0[2] = 0;
  v0[3] = 0xE000000000000000;
  v0[4] = 0;
  v0[5] = 0xE000000000000000;
  v0[6] = 0;
  v0[7] = 0xE000000000000000;
}

uint64_t OUTLINED_FUNCTION_109@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void OUTLINED_FUNCTION_110(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_111()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_112()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_113()
{
  return swift_allocObject();
}

void OUTLINED_FUNCTION_114()
{
  sub_240BF04A8();
}

void OUTLINED_FUNCTION_115()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
  sub_240BF04A8();
}

void OUTLINED_FUNCTION_116()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  sub_240BF04E8(*(_QWORD *)(v4 - 88) + v3 * v2, v0, v1);
}

void OUTLINED_FUNCTION_117(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

void *OUTLINED_FUNCTION_119()
{
  size_t v0;

  return malloc(v0);
}

void *OUTLINED_FUNCTION_120(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_122(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;

  return sub_240BE4CB8(v5, v6 - 80, a3, a4, a5);
}

void OUTLINED_FUNCTION_123(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);

  sub_240BF04E8(a1 + v1, v2, v3);
}

void OUTLINED_FUNCTION_124(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF0410(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_125(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_126(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_127()
{
  return sub_240F1CC48();
}

void OUTLINED_FUNCTION_128()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_130(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

void OUTLINED_FUNCTION_131(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

void OUTLINED_FUNCTION_136(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_137()
{
  return 0;
}

void OUTLINED_FUNCTION_138()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_140(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_143()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C02F7C(v1, v0, 3);
}

void OUTLINED_FUNCTION_146()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 112) = v0;
}

uint64_t OUTLINED_FUNCTION_147()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_149(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_151(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v5 - 296) = result;
  *(_QWORD *)(v5 - 336) = v4;
  *(_QWORD *)(v5 - 272) = v3;
  *(_QWORD *)(v5 - 344) = v2;
  *(_QWORD *)(v5 - 264) = v1;
  return result;
}

void *OUTLINED_FUNCTION_152()
{
  size_t v0;

  return malloc(v0);
}

void OUTLINED_FUNCTION_153(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_154()
{
  return swift_release();
}

void OUTLINED_FUNCTION_155()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_157(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_158(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  return __swift_instantiateConcreteTypeFromMangledName(a5);
}

void OUTLINED_FUNCTION_159()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 72);
}

void OUTLINED_FUNCTION_161(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_162()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

void OUTLINED_FUNCTION_163(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

void OUTLINED_FUNCTION_164()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_165()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_166(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

void OUTLINED_FUNCTION_167(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

void OUTLINED_FUNCTION_168(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_170()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_172(void *a1)
{
  free(a1);
}

uint64_t OUTLINED_FUNCTION_173()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_174(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  sub_240C02F64(a1, a2, 2);
  sub_240C02F64(v3, v2, 2);
  return sub_240C02F7C(v3, v2, 2);
}

uint64_t OUTLINED_FUNCTION_175()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_176()
{
  return swift_retain();
}

size_t OUTLINED_FUNCTION_177(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  size_t result;

  result = _swift_stdlib_malloc_size(a1);
  a1[2] = v1;
  a1[3] = 2 * ((uint64_t)(result - 32) / v2);
  return result;
}

void OUTLINED_FUNCTION_178(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_240BF04E8(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_179()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_182()
{
  return swift_arrayInitWithCopy();
}

void OUTLINED_FUNCTION_183(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BF0410(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_184()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_185(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF04E8(a1, v3, a3);
}

void OUTLINED_FUNCTION_186(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BF0410(v4, v3, a3);
}

void OUTLINED_FUNCTION_187(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

void OUTLINED_FUNCTION_188(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_240C02F94(v4, v3, a3);
}

uint64_t OUTLINED_FUNCTION_190()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_191()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  sub_240C02F94(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_192()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_194()
{
  return type metadata accessor for ModelKind(0);
}

uint64_t OUTLINED_FUNCTION_196()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_197()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_198()
{
  return 0;
}

void OUTLINED_FUNCTION_199(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v3);
}

uint64_t OUTLINED_FUNCTION_201(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

uint64_t OUTLINED_FUNCTION_202()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_203(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 0, 1, a1);
  return sub_240D7327C(v1);
}

uint64_t OUTLINED_FUNCTION_204()
{
  return sub_240F1CC90();
}

uint64_t OUTLINED_FUNCTION_206(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 128) = v2;
  *(_QWORD *)(v3 - 120) = *(_QWORD *)(v1 + 72);
  *(_QWORD *)(v3 - 112) = result;
  return result;
}

void OUTLINED_FUNCTION_207(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C02F94(a1, a2, v2);
}

void OUTLINED_FUNCTION_208(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

void OUTLINED_FUNCTION_210()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_211()
{
  return swift_release();
}

void OUTLINED_FUNCTION_212(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_213()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_215()
{
  return sub_240D73150();
}

uint64_t OUTLINED_FUNCTION_216()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_217()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_218()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_219(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;

  sub_240BE0B68(v2, a2);
}

uint64_t OUTLINED_FUNCTION_220@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return 0;
}

void OUTLINED_FUNCTION_222()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 272) = *(_QWORD *)(*(_QWORD *)(v0 - 248) + 72);
}

uint64_t OUTLINED_FUNCTION_223()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_224()
{
  return swift_arrayInitWithTakeBackToFront();
}

uint64_t OUTLINED_FUNCTION_225()
{
  return swift_arrayInitWithTakeFrontToBack();
}

uint64_t OUTLINED_FUNCTION_226()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_227(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 216) = (char *)&a9 - v9;
  return type metadata accessor for Proto_MILSpec_ValueType(0);
}

uint64_t OUTLINED_FUNCTION_229(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_230(uint64_t result)
{
  uint64_t v1;
  _QWORD *v2;

  *v2 = result;
  *(_QWORD *)(result + 88) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_231(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_232()
{
  return type metadata accessor for Proto_Model.OneOf_Type(0);
}

uint64_t OUTLINED_FUNCTION_233(uint64_t a1, uint64_t a2, char a3)
{
  sub_240C02F7C(a1, a2, a3);
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_234()
{
  return type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type(0);
}

void OUTLINED_FUNCTION_235()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = *(_QWORD *)(v0 + 72);
}

uint64_t OUTLINED_FUNCTION_236()
{
  return 1;
}

uint64_t OUTLINED_FUNCTION_237()
{
  return type metadata accessor for Proto_FeatureDescription(0);
}

uint64_t OUTLINED_FUNCTION_238()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_239()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_241()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_242(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_240C02F94(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_243()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_244(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;
  uint64_t v4;

  sub_240C02F94(v4, v3, a3);
}

void OUTLINED_FUNCTION_245(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_240C02F94(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_246()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

uint64_t OUTLINED_FUNCTION_250()
{
  return 0;
}

void OUTLINED_FUNCTION_251(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 192) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_252(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_253(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 104) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_254(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 200) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_255(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 208) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void *OUTLINED_FUNCTION_257()
{
  return malloc(0xA0uLL);
}

void OUTLINED_FUNCTION_259()
{
  sub_240D3B32C();
}

_OWORD *OUTLINED_FUNCTION_262(__n128 a1)
{
  _OWORD *v1;
  uint64_t v2;

  *(__n128 *)(v2 - 208) = a1;
  return sub_240BF057C((_OWORD *)(v2 - 152), v1);
}

float OUTLINED_FUNCTION_264@<S0>(uint64_t a1@<X8>)
{
  return *(float *)a1;
}

void OUTLINED_FUNCTION_266(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = v3;
  *(_QWORD *)(v2 + 24) = 2 * (a1 / v1);
}

uint64_t OUTLINED_FUNCTION_267(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 16) = v1;
  *(_QWORD *)(v2 + 24) = 2 * ((result - 32) / 8);
  return result;
}

void OUTLINED_FUNCTION_268()
{
  sub_240BF1D34();
}

uint64_t OUTLINED_FUNCTION_272()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_273()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_275()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_276()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_277()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_278()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_279(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

void OUTLINED_FUNCTION_281()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_282(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF0410(a1, a2, v2);
}

void OUTLINED_FUNCTION_283(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF04E8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_284()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_285()
{
  sub_240BF03EC();
}

void OUTLINED_FUNCTION_286()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_287()
{
  return swift_release();
}

void OUTLINED_FUNCTION_288()
{
  void *v0;

  free(v0);
}

uint64_t OUTLINED_FUNCTION_289()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_290()
{
  void *v0;

  free(v0);
}

uint64_t OUTLINED_FUNCTION_292@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NonMaximumSuppressorConfiguration(0);
}

uint64_t OUTLINED_FUNCTION_293@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for DictionaryVectorizerConfiguration();
}

uint64_t OUTLINED_FUNCTION_294@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for LinearClassifierConfiguration();
}

uint64_t OUTLINED_FUNCTION_295@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for ImputerConfiguration();
}

uint64_t OUTLINED_FUNCTION_296@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for LinearRegressorConfiguration();
}

uint64_t OUTLINED_FUNCTION_297@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for CategoricalMappingConfiguration();
}

uint64_t OUTLINED_FUNCTION_298@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for TreeEnsembleClassifierConfiguration();
}

uint64_t OUTLINED_FUNCTION_299@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for OneHotEncoderConfiguration();
}

uint64_t OUTLINED_FUNCTION_300@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for TreeEnsembleRegressorConfiguration();
}

uint64_t OUTLINED_FUNCTION_301@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NormalizerConfiguration();
}

uint64_t OUTLINED_FUNCTION_302@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for ScalerConfiguration();
}

uint64_t OUTLINED_FUNCTION_303@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for FeatureVectorizerConfiguration(0);
}

void OUTLINED_FUNCTION_304(unint64_t *a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v2;

  sub_240BE18B8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_305()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_307()
{
  uint64_t v0;
  uint64_t v1;

  return v0 + *(int *)(v1 + 48);
}

uint64_t OUTLINED_FUNCTION_309()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

double OUTLINED_FUNCTION_310()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

void OUTLINED_FUNCTION_314()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = *(_QWORD *)(v0 + 72);
  *(_QWORD *)(v2 - 280) = v1;
}

uint64_t OUTLINED_FUNCTION_315()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_316()
{
  return sub_240D73150();
}

uint64_t OUTLINED_FUNCTION_317(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + v1) = a1;
  return swift_release();
}

void OUTLINED_FUNCTION_319()
{
  sub_240BF03EC();
}

double OUTLINED_FUNCTION_320()
{
  uint64_t v0;

  return *(double *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_321@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + *(int *)(a1 + 24);
}

uint64_t OUTLINED_FUNCTION_322(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + v2) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_323()
{
  return sub_240D791B8();
}

uint64_t OUTLINED_FUNCTION_324()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_325()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_326()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void OUTLINED_FUNCTION_327()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_328()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_329()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_333(uint64_t result)
{
  uint64_t v1;

  *(_DWORD *)(v1 + 152) = *(_DWORD *)(result + 20);
  return result;
}

uint64_t OUTLINED_FUNCTION_334()
{
  return type metadata accessor for Proto_Model._StorageClass(0);
}

uint64_t OUTLINED_FUNCTION_335()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

uint64_t OUTLINED_FUNCTION_337()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void *OUTLINED_FUNCTION_338(void *a1, const void *a2)
{
  uint64_t v2;

  return memmove(a1, a2, 8 * v2);
}

uint64_t OUTLINED_FUNCTION_339()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_340()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_341()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_342()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_346()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_347()
{
  sub_240BF03EC();
}

uint64_t OUTLINED_FUNCTION_348()
{
  uint64_t *v0;

  return __swift_instantiateConcreteTypeFromMangledName(v0);
}

void *OUTLINED_FUNCTION_349(uint64_t a1, uint64_t a2, size_t a3)
{
  void *v3;
  const void *v4;

  return memmove(v3, v4, a3);
}

uint64_t OUTLINED_FUNCTION_350()
{
  return sub_240D73150();
}

void OUTLINED_FUNCTION_351()
{
  void *v0;

  free(v0);
}

uint64_t OUTLINED_FUNCTION_353()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_354()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_355()
{
  return swift_retain();
}

void OUTLINED_FUNCTION_356(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 112) = a2;
}

uint64_t OUTLINED_FUNCTION_357()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_358()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_359()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_360()
{
  sub_240DF7780();
}

void OUTLINED_FUNCTION_361()
{
  void *v0;

  free(v0);
}

uint64_t OUTLINED_FUNCTION_362()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_363()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_364(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BF04E8(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_365(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void *OUTLINED_FUNCTION_366(uint64_t a1, uint64_t a2, size_t a3)
{
  void *v3;
  const void *v4;

  return memmove(v3, v4, a3);
}

void OUTLINED_FUNCTION_367()
{
  void *v0;

  free(v0);
}

size_t OUTLINED_FUNCTION_369(const void *ptr)
{
  return _swift_stdlib_malloc_size(ptr);
}

uint64_t OUTLINED_FUNCTION_370()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_371()
{
  void *v0;

  free(v0);
}

void OUTLINED_FUNCTION_376()
{
  uint64_t v0;
  uint64_t *v1;

  sub_240BE0B68(v0, v1);
}

void OUTLINED_FUNCTION_377(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 224) = a1;
  *(_QWORD *)(v2 - 216) = v1;
}

void OUTLINED_FUNCTION_379(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BF0410(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_380()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_381()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_382()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_383()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_384()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_387(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 112) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_388()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_389()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_390(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(result + 16) = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_391()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_392()
{
  return type metadata accessor for FeatureDescription();
}

uint64_t OUTLINED_FUNCTION_393()
{
  return swift_bridgeObjectRelease();
}

void sub_240C04754(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t (*v265)(_QWORD);
  char *v266;
  _QWORD v267[131];

  v267[129] = a1;
  type metadata accessor for NeuralNetwork.Layer.CustomParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_2_0();
  v267[128] = v2;
  type metadata accessor for NeuralNetwork.Layer.NonMaximumSuppressionParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_0();
  v267[127] = v4;
  type metadata accessor for NeuralNetwork.Layer.ArgSortParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v267[126] = v6;
  type metadata accessor for NeuralNetwork.Layer.TopKParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v267[125] = v8;
  type metadata accessor for NeuralNetwork.Layer.OneHotParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  v267[124] = v10;
  type metadata accessor for NeuralNetwork.Layer.CategoricalDistributionParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v267[123] = v12;
  type metadata accessor for NeuralNetwork.Layer.BiasParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  v267[122] = v14;
  type metadata accessor for NeuralNetwork.Layer.EmbeddingNDParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  v267[121] = v16;
  type metadata accessor for NeuralNetwork.Layer.EmbeddingParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_0();
  v267[120] = v18;
  type metadata accessor for NeuralNetwork.Layer.UpperTriangularParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_2_0();
  v267[119] = v20;
  type metadata accessor for NeuralNetwork.Layer.LowerTriangularParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_0();
  v267[118] = v22;
  type metadata accessor for NeuralNetwork.Layer.MatrixBandPartParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_2_0();
  v267[117] = v24;
  type metadata accessor for NeuralNetwork.Layer.RandomBernoulliDynamicParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_2_0();
  v267[116] = v26;
  type metadata accessor for NeuralNetwork.Layer.RandomBernoulliStaticParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_2_0();
  v267[115] = v28;
  type metadata accessor for NeuralNetwork.Layer.RandomBernoulliLikeParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_2_0();
  v267[114] = v30;
  type metadata accessor for NeuralNetwork.Layer.RandomUniformDynamicParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_2_0();
  v267[113] = v32;
  type metadata accessor for NeuralNetwork.Layer.RandomUniformStaticParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_2_0();
  v267[112] = v34;
  type metadata accessor for NeuralNetwork.Layer.RandomUniformLikeParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_2_0();
  v267[111] = v36;
  type metadata accessor for NeuralNetwork.Layer.RandomNormalDynamicParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_2_0();
  v267[110] = v38;
  type metadata accessor for NeuralNetwork.Layer.RandomNormalStaticParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_106_0(v40);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v41);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_75_0(v42);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_45(v44);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_120_0(v46);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v47);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_89_0(v48);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v49);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_59_0(v50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_28_1(v52);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v53);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_0(v54);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v55);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_72_0(v56);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_42_1(v58);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v59);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_117_0(v60);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v61);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_86_0(v62);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v63);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_56_1(v64);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v65);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_131_0(v66);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v67);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100_0(v68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v69);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_69_0(v70);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v71);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_39_1(v72);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v73);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_114_0(v74);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v75);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_83_0(v76);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v77);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_53_1(v78);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v79);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_128_0(v80);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v81);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_97_0(v82);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v83);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_66_0(v84);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v85);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_36_1(v86);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v87);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_111_0(v88);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v89);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_80_0(v90);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v91);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_50_1(v92);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v93);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_125_0(v94);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v95);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_94_0(v96);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v97);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_0(v98);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v99);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_1(v100);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v101);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_109_0(v102);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v103);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_78_0(v104);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v105);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_48_1(v106);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v107);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_123_0(v108);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v109);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_92_0(v110);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v111);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_0(v112);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v113);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_31_1(v114);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v115);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_107_0(v116);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v117);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_76_0(v118);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v119);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_46_0(v120);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v121);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_121_0(v122);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v123);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_90_0(v124);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v125);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_60_0(v126);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v127);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_1(v128);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v129);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_104(v130);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v131);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_73_0(v132);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v133);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_1(v134);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v135);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_118_0(v136);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v137);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_87_0(v138);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v139);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_57_0(v140);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v141);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_132_0(v142);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v143);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_101_0(v144);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v145);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_70(v146);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v147);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_40_1(v148);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v149);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_115_0(v150);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v151);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_84_0(v152);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v153);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_1(v154);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v155);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_129_0(v156);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v157);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_98_0(v158);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v159);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_67_0(v160);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v161);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_37_1(v162);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v163);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_112_0(v164);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v165);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_81_0(v166);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v167);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_51_1(v168);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v169);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_126_0(v170);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v171);
  OUTLINED_FUNCTION_2_0();
  v267[42] = OUTLINED_FUNCTION_95_0(v172);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v173);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_1(v174);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v175);
  OUTLINED_FUNCTION_2_0();
  v177 = OUTLINED_FUNCTION_19_0(v176);
  v267[38] = type metadata accessor for Proto_ActivationParams(v177);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v178);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_65_0(v179);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v180);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_34_1(v181);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v182);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_110_0(v183);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v184);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_79_0(v185);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v186);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_49_1(v187);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v188);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_124_0(v189);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v190);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_93_0(v191);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v192);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_63_0(v193);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v194);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32_1(v195);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v196);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_108_0(v197);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v198);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_77_0(v199);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v200);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_47_1(v201);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v202);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_122_0(v203);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v204);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91_0(v205);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v206);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_61_0(v207);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v208);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_30_1(v209);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v210);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_105_0(v211);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v212);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_74_0(v213);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v214);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_0(v215);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v216);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_119_0(v217);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v218);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_88_0(v219);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v220);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_58_1(v221);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v222);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_133_0(v223);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v224);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_102_0(v225);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v226);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_71_0(v227);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v228);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_41_1(v229);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v230);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_116_0(v231);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v232);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_85_0(v233);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v234);
  OUTLINED_FUNCTION_55_1((uint64_t)v267 - ((v235 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v236);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_130_0(v237);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v238);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_99(v239);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v240);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_68_0(v241);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v242);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_38_1(v243);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v244);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_113_0(v245);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v246);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_82(v247);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v248);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_52_1(v249);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v250);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_127_0(v251);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v252);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_96_0(v253);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v254);
  OUTLINED_FUNCTION_80();
  type metadata accessor for NeuralNetwork.Layer.SplitParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v255);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for NeuralNetwork.Layer.ConcatenateNDParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v256);
  OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Layer.ConcatenateParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v257);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for NeuralNetwork.Layer.ConstantPadParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v258);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for NeuralNetwork.Layer.PadParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v259);
  OUTLINED_FUNCTION_61();
  type metadata accessor for NeuralNetwork.Layer.ConstantNDParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v260);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for NeuralNetwork.Layer.ConstantParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v261);
  OUTLINED_FUNCTION_24_1();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v262);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v267[130], v264 - v263, v265);
  v266 = (char *)sub_240C05760 + 4 * word_240F1DAE0[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240C05760()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240BE0B90(v0, v1, type metadata accessor for NeuralNetwork.Layer.ConstantParameters);
  OUTLINED_FUNCTION_5_2(v1, v2, type metadata accessor for Proto_LoadConstantLayerParams);
  type metadata accessor for Proto_NeuralNetworkLayer.OneOf_Layer(0);
  return swift_storeEnumTagMultiPayload();
}

void sub_240C06E20(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  char *v9;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_60();
  type metadata accessor for Proto_ActivationParams(v4);
  OUTLINED_FUNCTION_0();
  v6 = MEMORY[0x24BDAC7A8](v5);
  MEMORY[0x24BDAC7A8](v6);
  type metadata accessor for Proto_NeuralNetworkLayer.OneOf_Layer(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_80();
  sub_240BE0BF4(a1, v1, v8);
  v9 = (char *)sub_240C06F00 + 4 * word_240F1DC1C[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

uint64_t sub_240C06F00(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_38(a1, type metadata accessor for Proto_NeuralNetworkLayer.OneOf_Layer);
  OUTLINED_FUNCTION_6_1(v1, v2, type metadata accessor for Proto_ConvolutionLayerParams);
  OUTLINED_FUNCTION_11_2();
  return swift_storeEnumTagMultiPayload();
}

void static NeuralNetwork.Layer.Kind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  uint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  uint64_t v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t v254;
  uint64_t v255;
  uint64_t v256;
  uint64_t v257;
  uint64_t v258;
  uint64_t v259;
  uint64_t v260;
  uint64_t v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  uint64_t v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  uint64_t v296;
  uint64_t v297;
  uint64_t v298;
  uint64_t v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  uint64_t v308;
  uint64_t v309;
  uint64_t v310;
  uint64_t v311;
  uint64_t v312;
  uint64_t v313;
  uint64_t v314;
  uint64_t v315;
  uint64_t v316;
  uint64_t v317;
  uint64_t v318;
  uint64_t v319;
  uint64_t v320;
  uint64_t v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  uint64_t v330;
  uint64_t v331;
  uint64_t v332;
  uint64_t v333;
  uint64_t v334;
  uint64_t v335;
  uint64_t v336;
  uint64_t v337;
  uint64_t v338;
  uint64_t v339;
  uint64_t v340;
  uint64_t v341;
  uint64_t v342;
  uint64_t v343;
  uint64_t v344;
  uint64_t v345;
  uint64_t v346;
  uint64_t v347;
  uint64_t v348;
  uint64_t v349;
  uint64_t v350;
  uint64_t v351;
  uint64_t v352;
  uint64_t v353;
  uint64_t v354;
  uint64_t v355;
  uint64_t v356;
  uint64_t v357;
  uint64_t v358;
  uint64_t v359;
  uint64_t v360;
  uint64_t v361;
  uint64_t v362;
  uint64_t v363;
  uint64_t v364;
  uint64_t v365;
  uint64_t v366;
  uint64_t v367;
  uint64_t v368;
  uint64_t v369;
  uint64_t v370;
  uint64_t v371;
  uint64_t v372;
  uint64_t v373;
  uint64_t v374;
  uint64_t v375;
  uint64_t v376;
  uint64_t v377;
  uint64_t v378;
  uint64_t v379;
  uint64_t v380;
  uint64_t v381;
  uint64_t v382;
  uint64_t v383;
  uint64_t v384;
  uint64_t v385;
  uint64_t v386;
  uint64_t v387;
  uint64_t v388;
  uint64_t v389;
  uint64_t v390;
  uint64_t v391;
  uint64_t v392;
  uint64_t v393;
  uint64_t v394;
  uint64_t v395;
  uint64_t v396;
  uint64_t v397;
  uint64_t v398;
  uint64_t v399;
  uint64_t v400;
  uint64_t v401;
  uint64_t v402;
  uint64_t v403;
  uint64_t v404;
  uint64_t v405;
  uint64_t v406;
  uint64_t v407;
  uint64_t v408;
  uint64_t v409;
  uint64_t v410;
  uint64_t v411;
  uint64_t v412;
  uint64_t v413;
  uint64_t v414;
  uint64_t v415;
  uint64_t v416;
  uint64_t v417;
  uint64_t v418;
  uint64_t v419;
  uint64_t v420;
  uint64_t v421;
  uint64_t v422;
  uint64_t v423;
  uint64_t v424;
  uint64_t v425;
  uint64_t v426;
  uint64_t v427;
  uint64_t v428;
  uint64_t v429;
  uint64_t v430;
  uint64_t v431;
  uint64_t v432;
  uint64_t v433;
  uint64_t v434;
  uint64_t v435;
  uint64_t v436;
  uint64_t v437;
  uint64_t v438;
  uint64_t v439;
  uint64_t v440;
  uint64_t v441;
  uint64_t v442;
  uint64_t v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  _QWORD v447[261];
  uint64_t v448;
  uint64_t v449;

  v448 = a1;
  v449 = a2;
  type metadata accessor for NeuralNetwork.Layer.CustomParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = OUTLINED_FUNCTION_19_0((uint64_t)v447 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for NeuralNetwork.Layer.NonMaximumSuppressionParameters(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_2_0();
  v8 = OUTLINED_FUNCTION_19_0(v7);
  type metadata accessor for NeuralNetwork.Layer.ArgSortParameters(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  v11 = OUTLINED_FUNCTION_19_0(v10);
  type metadata accessor for NeuralNetwork.Layer.TopKParameters(v11);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_0();
  v14 = OUTLINED_FUNCTION_19_0(v13);
  type metadata accessor for NeuralNetwork.Layer.OneHotParameters(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  v17 = OUTLINED_FUNCTION_19_0(v16);
  type metadata accessor for NeuralNetwork.Layer.CategoricalDistributionParameters(v17);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_2_0();
  v20 = OUTLINED_FUNCTION_19_0(v19);
  type metadata accessor for NeuralNetwork.Layer.BiasParameters(v20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_0();
  v23 = OUTLINED_FUNCTION_19_0(v22);
  type metadata accessor for NeuralNetwork.Layer.EmbeddingNDParameters(v23);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_0();
  v26 = OUTLINED_FUNCTION_19_0(v25);
  type metadata accessor for NeuralNetwork.Layer.EmbeddingParameters(v26);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_2_0();
  v29 = OUTLINED_FUNCTION_19_0(v28);
  type metadata accessor for NeuralNetwork.Layer.UpperTriangularParameters(v29);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_2_0();
  v32 = OUTLINED_FUNCTION_19_0(v31);
  type metadata accessor for NeuralNetwork.Layer.LowerTriangularParameters(v32);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v33);
  OUTLINED_FUNCTION_2_0();
  v35 = OUTLINED_FUNCTION_19_0(v34);
  type metadata accessor for NeuralNetwork.Layer.MatrixBandPartParameters(v35);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_2_0();
  v38 = OUTLINED_FUNCTION_19_0(v37);
  type metadata accessor for NeuralNetwork.Layer.RandomBernoulliDynamicParameters(v38);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_2_0();
  v41 = OUTLINED_FUNCTION_19_0(v40);
  type metadata accessor for NeuralNetwork.Layer.RandomBernoulliStaticParameters(v41);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v42);
  OUTLINED_FUNCTION_2_0();
  v44 = OUTLINED_FUNCTION_19_0(v43);
  type metadata accessor for NeuralNetwork.Layer.RandomBernoulliLikeParameters(v44);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v45);
  OUTLINED_FUNCTION_2_0();
  v47 = OUTLINED_FUNCTION_19_0(v46);
  type metadata accessor for NeuralNetwork.Layer.RandomUniformDynamicParameters(v47);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_2_0();
  v50 = OUTLINED_FUNCTION_19_0(v49);
  type metadata accessor for NeuralNetwork.Layer.RandomUniformStaticParameters(v50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v51);
  OUTLINED_FUNCTION_2_0();
  v53 = OUTLINED_FUNCTION_19_0(v52);
  type metadata accessor for NeuralNetwork.Layer.RandomUniformLikeParameters(v53);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v54);
  OUTLINED_FUNCTION_2_0();
  v56 = OUTLINED_FUNCTION_19_0(v55);
  type metadata accessor for NeuralNetwork.Layer.RandomNormalDynamicParameters(v56);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v57);
  OUTLINED_FUNCTION_2_0();
  v59 = OUTLINED_FUNCTION_19_0(v58);
  type metadata accessor for NeuralNetwork.Layer.RandomNormalStaticParameters(v59);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v60);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_106_0(v61);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v62);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_75_0(v63);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v64);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_45(v65);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v66);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_120_0(v67);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v68);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_89_0(v69);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v70);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_59_0(v71);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v72);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_28_1(v73);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v74);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_103_0(v75);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v76);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_72_0(v77);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v78);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_42_1(v79);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v80);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_117_0(v81);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v82);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_86_0(v83);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v84);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_56_1(v85);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v86);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_131_0(v87);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v88);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_100_0(v89);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v90);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_69_0(v91);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v92);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_39_1(v93);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v94);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_114_0(v95);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v96);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_83_0(v97);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v98);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_53_1(v99);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v100);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_128_0(v101);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v102);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_97_0(v103);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v104);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_66_0(v105);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v106);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_36_1(v107);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v108);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_111_0(v109);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v110);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_80_0(v111);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v112);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_50_1(v113);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v114);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_125_0(v115);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v116);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_94_0(v117);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v118);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_64_0(v119);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v120);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_33_1(v121);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v122);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_109_0(v123);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v124);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_78_0(v125);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v126);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_48_1(v127);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v128);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_123_0(v129);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v130);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_92_0(v131);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v132);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_62_0(v133);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v134);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_31_1(v135);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v136);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_107_0(v137);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v138);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_76_0(v139);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v140);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_46_0(v141);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v142);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_121_0(v143);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v144);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_90_0(v145);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v146);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_60_0(v147);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v148);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_29_1(v149);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v150);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_104(v151);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v152);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_73_0(v153);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v154);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_43_1(v155);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v156);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_118_0(v157);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v158);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_87_0(v159);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v160);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_57_0(v161);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v162);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_132_0(v163);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v164);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_101_0(v165);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v166);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_70(v167);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v168);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_40_1(v169);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v170);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_115_0(v171);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v172);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_84_0(v173);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v174);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_54_1(v175);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v176);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_129_0(v177);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v178);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_98_0(v179);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v180);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_67_0(v181);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v182);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_37_1(v183);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v184);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_112_0(v185);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v186);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_81_0(v187);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v188);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_51_1(v189);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v190);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_126_0(v191);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v192);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_95_0(v193);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v194);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_35_1(v195);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v196);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_65_0(v197);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v198);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_34_1(v199);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v200);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_110_0(v201);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v202);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_79_0(v203);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v204);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_49_1(v205);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v206);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_124_0(v207);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v208);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_93_0(v209);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v210);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_63_0(v211);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v212);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_32_1(v213);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v214);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_108_0(v215);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v216);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_77_0(v217);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v218);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_47_1(v219);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v220);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_122_0(v221);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v222);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_91_0(v223);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v224);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_61_0(v225);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v226);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_30_1(v227);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v228);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_105_0(v229);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v230);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_74_0(v231);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v232);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_44_0(v233);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v234);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_119_0(v235);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v236);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_88_0(v237);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v238);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_58_1(v239);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v240);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_133_0(v241);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v242);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_102_0(v243);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v244);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_71_0(v245);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v246);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_41_1(v247);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v248);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_116_0(v249);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v250);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_85_0(v251);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v252);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_130_0(v253);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v254);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_99(v255);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v256);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_68_0(v257);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v258);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_55_1(v259);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v260);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_38_1(v261);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v262);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_113_0(v263);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v264);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_82(v265);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v266);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_52_1(v267);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v268);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_127_0(v269);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v270);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_96_0(v271);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v272);
  OUTLINED_FUNCTION_2_0();
  v274 = OUTLINED_FUNCTION_19_0(v273);
  type metadata accessor for NeuralNetwork.Layer.SplitParameters(v274);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v275);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v276);
  type metadata accessor for NeuralNetwork.Layer.ConcatenateNDParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v277);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v278);
  type metadata accessor for NeuralNetwork.Layer.ConcatenateParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v279);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v280);
  type metadata accessor for NeuralNetwork.Layer.ConstantPadParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v281);
  OUTLINED_FUNCTION_2_0();
  v283 = OUTLINED_FUNCTION_19_0(v282);
  type metadata accessor for NeuralNetwork.Layer.PadParameters(v283);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v284);
  OUTLINED_FUNCTION_2_0();
  v286 = OUTLINED_FUNCTION_19_0(v285);
  type metadata accessor for NeuralNetwork.Layer.ConstantNDParameters(v286);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v287);
  OUTLINED_FUNCTION_2_0();
  v289 = OUTLINED_FUNCTION_19_0(v288);
  type metadata accessor for NeuralNetwork.Layer.ConstantParameters(v289);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v290);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_19_0(v291);
  v447[260] = type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v292);
  v447[259] = (char *)v447 - ((v293 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v294);
  OUTLINED_FUNCTION_38_0();
  v447[258] = v295;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v296);
  OUTLINED_FUNCTION_38_0();
  v447[257] = v297;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v298);
  OUTLINED_FUNCTION_38_0();
  v447[256] = v299;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v300);
  OUTLINED_FUNCTION_38_0();
  v447[255] = v301;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v302);
  OUTLINED_FUNCTION_38_0();
  v447[254] = v303;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v304);
  OUTLINED_FUNCTION_38_0();
  v447[253] = v305;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v306);
  OUTLINED_FUNCTION_38_0();
  v447[252] = v307;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v308);
  OUTLINED_FUNCTION_38_0();
  v447[251] = v309;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v310);
  OUTLINED_FUNCTION_38_0();
  v447[250] = v311;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v312);
  OUTLINED_FUNCTION_38_0();
  v447[249] = v313;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v314);
  OUTLINED_FUNCTION_38_0();
  v447[248] = v315;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v316);
  OUTLINED_FUNCTION_38_0();
  v447[247] = v317;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v318);
  OUTLINED_FUNCTION_38_0();
  v447[246] = v319;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v320);
  OUTLINED_FUNCTION_38_0();
  v447[245] = v321;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v322);
  OUTLINED_FUNCTION_38_0();
  v447[244] = v323;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v324);
  OUTLINED_FUNCTION_38_0();
  v447[243] = v325;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v326);
  OUTLINED_FUNCTION_38_0();
  v447[242] = v327;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v328);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v329);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v330);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v331);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v332);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v333);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v334);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v335);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v336);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v337);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v338);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v339);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v340);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v341);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v342);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v343);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v344);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v345);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v346);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v347);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v348);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v349);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v350);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v351);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v352);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v353);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v354);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v355);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v356);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v357);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v358);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v359);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v360);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v361);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v362);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v363);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v364);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v365);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v366);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v367);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v368);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v369);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v370);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v371);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v372);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v373);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v374);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v375);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v376);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v377);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v378);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v379);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v380);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v381);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v382);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v383);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v384);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v385);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v386);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v387);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v388);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v389);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v390);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v391);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v392);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v393);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v394);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v395);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v396);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v397);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v398);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v399);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v400);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v401);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v402);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v403);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v404);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v405);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v406);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v407);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v408);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v409);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v410);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v411);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v412);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v413);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v414);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v415);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v416);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v417);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v418);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v419);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v420);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v421);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v422);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v423);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v424);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v425);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v426);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v427);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v428);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v429);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v430);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v431);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v432);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v433);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v434);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v435);
  OUTLINED_FUNCTION_38_0();
  OUTLINED_FUNCTION_7_2();
  v437 = MEMORY[0x24BDAC7A8](v436);
  v438 = MEMORY[0x24BDAC7A8](v437);
  v439 = MEMORY[0x24BDAC7A8](v438);
  v440 = MEMORY[0x24BDAC7A8](v439);
  v441 = MEMORY[0x24BDAC7A8](v440);
  v442 = MEMORY[0x24BDAC7A8](v441);
  MEMORY[0x24BDAC7A8](v442);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1D8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v443);
  OUTLINED_FUNCTION_61();
  v445 = v2 + *(int *)(v444 + 48);
  sub_240BE0BF4(v448, v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.Kind);
  v448 = v445;
  sub_240BE0BF4(v449, v445, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.Kind);
  v449 = v2;
  v446 = (char *)sub_240C0A2FC + 4 * word_240F1DD58[OUTLINED_FUNCTION_10_2()];
  __asm { BR              X10 }
}

uint64_t sub_240C0A2FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v1 - 96);
  sub_240BE0BF4(v2, v0, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.Kind);
  v3 = *(_QWORD *)(v1 - 104);
  if (OUTLINED_FUNCTION_10_2())
  {
    sub_240BE10B8(v0, type metadata accessor for NeuralNetwork.Layer.ConstantParameters);
    sub_240BE0B68(v2, &qword_25708C1D8);
    v4 = 0;
  }
  else
  {
    v6 = v3;
    v7 = *(_QWORD *)(v1 - 2184);
    OUTLINED_FUNCTION_28(v6, v7);
    v4 = ((uint64_t (*)(uint64_t, uint64_t))static NeuralNetwork.Layer.ConstantParameters.== infix(_:_:))(v0, v7);
    OUTLINED_FUNCTION_25_1(v7);
    OUTLINED_FUNCTION_25_1(v0);
    sub_240BE10B8(v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.Kind);
  }
  return v4 & 1;
}

uint64_t type metadata accessor for NeuralNetwork.Layer.Kind()
{
  uint64_t result;

  result = qword_25708C228;
  if (!qword_25708C228)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t *_s4KindOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t ConstantLayerParams;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t ConstantNDLayerParams;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, char *, uint64_t);
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  void (*v53)(char *, char *, uint64_t);
  uint64_t v54;
  char *v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  char *v60;
  uint64_t v61;
  void (*v62)(char *, char *, uint64_t);
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  void (*v108)(char *, char *, uint64_t);
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  void (*v113)(char *, char *, uint64_t);
  uint64_t v114;
  char *v115;
  char *v116;
  uint64_t v117;
  void (*v118)(char *, char *, uint64_t);
  uint64_t v119;
  char *v120;
  char *v121;
  uint64_t v122;
  void (*v123)(char *, char *, uint64_t);
  uint64_t v124;
  char *v125;
  char *v126;
  uint64_t v127;
  void (*v128)(char *, char *, uint64_t);
  uint64_t v129;
  char *v130;
  char *v131;
  uint64_t v132;
  void (*v133)(char *, char *, uint64_t);
  uint64_t v134;
  char *v135;
  char *v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  char *v144;
  char *v145;
  uint64_t v146;
  uint64_t v147;
  char *v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  char *v154;
  uint64_t v155;
  uint64_t v156;
  char *v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  char *v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  char *v167;
  char *v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  void (*v175)(char *, char *, uint64_t);
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  void (*v181)(char *, char *, uint64_t);
  uint64_t v182;
  char *v183;
  char *v184;
  uint64_t v185;
  uint64_t v186;
  char *v187;
  char *v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  uint64_t v193;
  char *v194;
  char *v195;
  uint64_t v196;
  uint64_t v197;
  char *v198;
  char *v199;
  uint64_t v200;
  char *v201;
  char *v202;
  uint64_t v203;
  uint64_t v204;
  char *v205;
  char *v206;
  uint64_t v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  uint64_t v216;
  int *v217;
  uint64_t v218;
  _BYTE *v219;
  _BYTE *v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  char *v224;
  char *v225;
  uint64_t v226;
  uint64_t v227;
  char *v228;
  char *v229;
  uint64_t v230;
  uint64_t v231;
  char *v232;
  char *v233;
  uint64_t v234;
  uint64_t v235;
  char *v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  char *v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  char *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  uint64_t v260;
  uint64_t v261;
  char *v262;
  char *v263;
  uint64_t v264;
  uint64_t v265;
  uint64_t v266;
  int *v267;
  uint64_t v268;
  char *v269;
  char *v270;
  uint64_t v271;
  void (*v272)(char *, char *, uint64_t);
  uint64_t v273;
  _DWORD *v274;
  _DWORD *v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  char *v281;
  uint64_t v282;
  void (*v283)(char *, char *, uint64_t);
  uint64_t v284;
  _DWORD *v285;
  _DWORD *v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  char *v295;
  char *v296;
  uint64_t v297;
  void (*v298)(char *, char *, uint64_t);
  uint64_t v299;
  _QWORD *v300;
  _QWORD *v301;
  uint64_t v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  char *v306;
  char *v307;
  uint64_t v308;
  void (*v309)(char *, char *, uint64_t);
  uint64_t v310;
  _BYTE *v311;
  _BYTE *v312;
  uint64_t v313;
  uint64_t v314;
  int *v315;
  uint64_t v316;
  char *v317;
  char *v318;
  uint64_t v319;
  void (*v320)(char *, char *, uint64_t);
  uint64_t v321;
  _BYTE *v322;
  _BYTE *v323;
  uint64_t v324;
  uint64_t v325;
  uint64_t v326;
  char *v327;
  char *v328;
  uint64_t v329;
  uint64_t v330;
  char *v331;
  char *v332;
  uint64_t v333;
  void (*v334)(char *, char *, uint64_t);
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  void (*v339)(char *, char *, uint64_t);
  uint64_t v340;
  char *v341;
  char *v342;
  uint64_t v343;
  void (*v344)(char *, char *, uint64_t);
  uint64_t v345;
  char *v346;
  char *v347;
  uint64_t v348;
  void (*v349)(char *, char *, uint64_t);
  uint64_t v350;
  char *v351;
  char *v352;
  uint64_t v353;
  void (*v354)(char *, char *, uint64_t);
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  void (*v359)(char *, char *, uint64_t);
  uint64_t v360;
  char *v361;
  char *v362;
  uint64_t v363;
  void (*v364)(char *, char *, uint64_t);
  uint64_t v365;
  char *v366;
  char *v367;
  uint64_t v368;
  void (*v369)(char *, char *, uint64_t);
  uint64_t v370;
  char *v371;
  char *v372;
  uint64_t v373;
  void (*v374)(char *, char *, uint64_t);
  uint64_t v375;
  char *v376;
  char *v377;
  uint64_t v378;
  void (*v379)(char *, char *, uint64_t);
  uint64_t v380;
  char *v381;
  char *v382;
  uint64_t v383;
  uint64_t v384;
  char *v385;
  char *v386;
  uint64_t v387;
  uint64_t v388;
  char *v389;
  char *v390;
  uint64_t v391;
  uint64_t v392;
  void (*v393)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v394;
  uint64_t v395;
  _QWORD *v396;
  _QWORD *v397;
  uint64_t v398;
  uint64_t v399;
  int *v400;
  uint64_t v401;
  char *v402;
  char *v403;
  uint64_t v404;
  uint64_t v405;
  _QWORD *v406;
  _QWORD *v407;
  uint64_t v408;
  uint64_t v409;
  char *v410;
  char *v411;
  uint64_t v412;
  uint64_t v413;
  char *v414;
  char *v415;
  uint64_t v416;
  uint64_t v417;
  char *v418;
  char *v419;
  uint64_t v420;
  uint64_t v421;
  char *v422;
  char *v423;
  uint64_t v424;
  uint64_t v425;
  char *v426;
  char *v427;
  uint64_t v428;
  uint64_t v429;
  char *v430;
  char *v431;
  uint64_t v432;
  uint64_t v433;
  char *v434;
  char *v435;
  uint64_t v436;
  uint64_t v437;
  char *v438;
  char *v439;
  uint64_t v440;
  uint64_t v441;
  char *v442;
  char *v443;
  uint64_t v444;
  uint64_t v445;
  char *v446;
  char *v447;
  uint64_t v448;
  void (*v449)(char *, char *, uint64_t);
  uint64_t v450;
  char *v451;
  char *v452;
  uint64_t v453;
  uint64_t v454;
  char *v455;
  char *v456;
  uint64_t v457;
  uint64_t v458;
  char *v459;
  char *v460;
  uint64_t v461;
  void (*v462)(char *, char *, uint64_t);
  uint64_t v463;
  char *v464;
  char *v465;
  uint64_t v466;
  uint64_t v467;
  char *v468;
  char *v469;
  uint64_t v470;
  uint64_t v471;
  char *v472;
  char *v473;
  uint64_t v474;
  void (*v475)(char *, char *, uint64_t);
  uint64_t v476;
  char *v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  char *v481;
  char *v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  char *v486;
  uint64_t v487;
  uint64_t v488;
  char *v489;
  char *v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  char *v498;
  char *v499;
  uint64_t v500;
  uint64_t v501;
  char *v502;
  char *v503;
  uint64_t v504;
  uint64_t v505;
  char *v506;
  char *v507;
  uint64_t v508;
  uint64_t v509;
  char *v510;
  char *v511;
  uint64_t v512;
  uint64_t v513;
  char *v514;
  char *v515;
  uint64_t v516;
  uint64_t v517;
  char *v518;
  char *v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  uint64_t v523;
  uint64_t v524;
  char *v525;
  char *v526;
  uint64_t v527;
  void (*v528)(char *, char *, uint64_t);
  uint64_t v529;
  unint64_t v530;
  uint64_t v531;
  unint64_t v532;
  uint64_t v533;
  unint64_t v534;
  uint64_t v535;
  _QWORD *v536;
  _QWORD *v537;
  uint64_t v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  unint64_t v542;
  uint64_t v543;
  unint64_t v544;
  uint64_t v545;
  int v546;
  uint64_t v547;
  int v548;
  uint64_t v549;
  _BYTE *v550;
  _BYTE *v551;
  uint64_t v552;
  uint64_t v553;
  char *v554;
  char *v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  char *v560;
  uint64_t v561;
  _BYTE *v562;
  _BYTE *v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  uint64_t v567;
  char *v568;
  uint64_t v569;
  char *v570;
  char *v571;
  uint64_t v572;
  char *v573;
  char *v574;
  uint64_t updated;
  uint64_t v576;
  uint64_t v577;
  uint64_t v578;
  uint64_t v579;
  char *v580;
  char *v581;
  uint64_t *v582;
  uint64_t v583;
  char *v584;
  char *v585;
  uint64_t v586;
  uint64_t v587;
  uint64_t v588;
  unint64_t v589;
  uint64_t v590;
  unint64_t v591;
  uint64_t v592;
  unint64_t v593;
  uint64_t v594;
  uint64_t v595;
  uint64_t v596;
  _QWORD *v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t *v608;
  uint64_t *v609;
  uint64_t v610;
  char *v611;
  char *v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  uint64_t v616;
  uint64_t v617;
  uint64_t *v618;
  uint64_t *v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  char *v623;
  char *v624;
  uint64_t v625;
  uint64_t v626;
  uint64_t v627;
  char *v628;
  char *v629;
  uint64_t v630;
  void (*v631)(char *, char *, uint64_t);
  uint64_t v632;
  uint64_t v633;
  uint64_t v634;
  char *v635;
  char *v636;
  uint64_t v637;
  uint64_t v638;
  void (*v639)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v640;
  uint64_t v641;
  _QWORD *v642;
  uint64_t v643;
  uint64_t v644;
  int EnumCaseMultiPayload;
  int v646;
  uint64_t v647;
  char *v648;
  int v649;
  uint64_t v650;
  char *v651;
  uint64_t v652;
  char *v653;
  char *v654;
  uint64_t v655;
  uint64_t v656;
  char *v657;
  uint64_t *result;
  char *v659;
  char *v660;
  void (*v661)(char *, char *, uint64_t);
  char *v662;
  char *v663;
  uint64_t v664;
  uint64_t v665;
  _BYTE *v666;
  void (*v667)(char *, char *, uint64_t);
  char *__dstd;
  char *__dste;
  char *__dstf;
  void *__dst;
  char *__dstg;
  void (*__dsta)(char *, char *, uint64_t);
  _QWORD *__dstb;
  _BYTE *__dsth;
  _QWORD *__dstc;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        ConstantLayerParams = type metadata accessor for Proto_LoadConstantLayerParams(0);
        v8 = *(int *)(ConstantLayerParams + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_240F1C930();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v9, v10, v11);
        v13 = *(int *)(ConstantLayerParams + 24);
        v14 = (uint64_t)a1 + v13;
        v15 = (uint64_t)a2 + v13;
        v16 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v15, 1, v16))
          goto LABEL_8;
        v529 = *(_QWORD *)(v15 + 8);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        v530 = *(_QWORD *)(v15 + 16);
        swift_bridgeObjectRetain();
        sub_240BF5610(v529, v530);
        *(_QWORD *)(v14 + 8) = v529;
        *(_QWORD *)(v14 + 16) = v530;
        v531 = *(_QWORD *)(v15 + 24);
        v532 = *(_QWORD *)(v15 + 32);
        sub_240BF5610(v531, v532);
        *(_QWORD *)(v14 + 24) = v531;
        *(_QWORD *)(v14 + 32) = v532;
        v533 = *(_QWORD *)(v15 + 40);
        v534 = *(_QWORD *)(v15 + 48);
        sub_240BF5610(v533, v534);
        *(_QWORD *)(v14 + 40) = v533;
        *(_QWORD *)(v14 + 48) = v534;
        *(_BYTE *)(v14 + 56) = *(_BYTE *)(v15 + 56);
        v12((char *)(v14 + *(int *)(v16 + 36)), (char *)(v15 + *(int *)(v16 + 36)), v11);
        v535 = *(int *)(v16 + 40);
        v536 = (_QWORD *)(v14 + v535);
        v537 = (_QWORD *)(v15 + v535);
        v538 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v537, 1, v538))
          goto LABEL_154;
        *v536 = *v537;
        v596 = *(int *)(v538 + 20);
        v665 = (uint64_t)v536;
        __dstb = (_QWORD *)((char *)v536 + v596);
        v597 = (_QWORD *)((char *)v537 + v596);
        v598 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v597, 1, v598))
          goto LABEL_160;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *__dstb = *v597;
        if (EnumCaseMultiPayload == 1)
          goto LABEL_188;
        goto LABEL_194;
      case 1u:
        *a1 = *a2;
        ConstantNDLayerParams = type metadata accessor for Proto_LoadConstantNDLayerParams(0);
        v19 = *(int *)(ConstantNDLayerParams + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v11 = sub_240F1C930();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v20, v21, v11);
        v22 = *(int *)(ConstantNDLayerParams + 24);
        v14 = (uint64_t)a1 + v22;
        v15 = (uint64_t)a2 + v22;
        v16 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v15, 1, v16))
          goto LABEL_8;
        v539 = *(_QWORD *)(v15 + 8);
        *(_QWORD *)v14 = *(_QWORD *)v15;
        v540 = *(_QWORD *)(v15 + 16);
        swift_bridgeObjectRetain();
        sub_240BF5610(v539, v540);
        *(_QWORD *)(v14 + 8) = v539;
        *(_QWORD *)(v14 + 16) = v540;
        v541 = *(_QWORD *)(v15 + 24);
        v542 = *(_QWORD *)(v15 + 32);
        sub_240BF5610(v541, v542);
        *(_QWORD *)(v14 + 24) = v541;
        *(_QWORD *)(v14 + 32) = v542;
        v543 = *(_QWORD *)(v15 + 40);
        v544 = *(_QWORD *)(v15 + 48);
        sub_240BF5610(v543, v544);
        *(_QWORD *)(v14 + 40) = v543;
        *(_QWORD *)(v14 + 48) = v544;
        *(_BYTE *)(v14 + 56) = *(_BYTE *)(v15 + 56);
        v12((char *)(v14 + *(int *)(v16 + 36)), (char *)(v15 + *(int *)(v16 + 36)), v11);
        v545 = *(int *)(v16 + 40);
        v536 = (_QWORD *)(v14 + v545);
        v537 = (_QWORD *)(v15 + v545);
        v538 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v537, 1, v538))
          goto LABEL_154;
        *v536 = *v537;
        v599 = *(int *)(v538 + 20);
        v665 = (uint64_t)v536;
        __dstb = (_QWORD *)((char *)v536 + v599);
        v597 = (_QWORD *)((char *)v537 + v599);
        v598 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v597, 1, v598))
          goto LABEL_160;
        v646 = swift_getEnumCaseMultiPayload();
        *__dstb = *v597;
        if (v646 == 1)
          goto LABEL_188;
        goto LABEL_194;
      case 2u:
        v24 = type metadata accessor for Proto_PaddingLayerParams.OneOf_PaddingType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v24))
        {
          v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
        }
        else
        {
          v546 = swift_getEnumCaseMultiPayload();
          if (v546 == 2 || v546 == 1)
          {
            v547 = sub_240F1C930();
            (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v547 - 8) + 16))(a1, a2, v547);
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v622 = *(int *)(type metadata accessor for Proto_PaddingLayerParams.PaddingConstant(0) + 20);
            v623 = (char *)a1 + v622;
            v624 = (char *)a2 + v622;
            v625 = sub_240F1C930();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v625 - 8) + 16))(v623, v624, v625);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v24);
        }
        v626 = type metadata accessor for Proto_PaddingLayerParams(0);
        v627 = *(int *)(v626 + 20);
        v628 = (char *)a1 + v627;
        v629 = (char *)a2 + v627;
        v630 = sub_240F1C930();
        v631 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v630 - 8) + 16);
        v631(v628, v629, v630);
        v632 = *(int *)(v626 + 24);
        v300 = (uint64_t *)((char *)a1 + v632);
        v301 = (uint64_t *)((char *)a2 + v632);
        v633 = type metadata accessor for Proto_BorderAmounts(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v301, 1, v633))
          goto LABEL_77;
        *v300 = *v301;
        v634 = *(int *)(v633 + 20);
        v635 = (char *)v300 + v634;
        v636 = (char *)v301 + v634;
        swift_bridgeObjectRetain();
        v631(v635, v636, v630);
        __swift_storeEnumTagSinglePayload((uint64_t)v300, 0, 1, v633);
        goto LABEL_198;
      case 3u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v26 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
        v27 = (char *)a1 + v26;
        v28 = (char *)a2 + v26;
        v29 = sub_240F1C930();
        v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
        swift_bridgeObjectRetain();
        v30(v27, v28, v29);
        goto LABEL_198;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v31 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
        v32 = (char *)a1 + v31;
        v33 = (char *)a2 + v31;
        v34 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16))(v32, v33, v34);
        goto LABEL_198;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v35 = *(int *)(type metadata accessor for Proto_ConcatNDLayerParams(0) + 24);
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
        goto LABEL_198;
      case 6u:
        *a1 = *a2;
        v39 = *(int *)(type metadata accessor for Proto_SplitLayerParams(0) + 20);
        v40 = (char *)a1 + v39;
        v41 = (char *)a2 + v39;
        v42 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v42 - 8) + 16))(v40, v41, v42);
        goto LABEL_198;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v43 = *(int *)(type metadata accessor for Proto_SplitNDLayerParams(0) + 28);
        v44 = (char *)a1 + v43;
        v45 = (char *)a2 + v43;
        v46 = sub_240F1C930();
        v47 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v46 - 8) + 16);
        swift_bridgeObjectRetain();
        v47(v44, v45, v46);
        goto LABEL_198;
      case 8u:
        v48 = a2[1];
        *a1 = *a2;
        a1[1] = v48;
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[4] = a2[4];
        *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
        v49 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
        v50 = (char *)a1 + v49;
        v51 = (char *)a2 + v49;
        v52 = sub_240F1C930();
        v53 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v53(v50, v51, v52);
        goto LABEL_198;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v54 = *(int *)(type metadata accessor for Proto_FillLikeLayerParams(0) + 20);
        v55 = (char *)a1 + v54;
        v56 = (char *)a2 + v54;
        v57 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v57 - 8) + 16))(v55, v56, v57);
        goto LABEL_198;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        v58 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
        v59 = (char *)a1 + v58;
        v60 = (char *)a2 + v58;
        v61 = sub_240F1C930();
        v62 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v61 - 8) + 16);
        swift_bridgeObjectRetain();
        v62(v59, v60, v61);
        goto LABEL_198;
      case 0xBu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v63 = *(int *)(type metadata accessor for Proto_FillDynamicLayerParams(0) + 20);
        v64 = (char *)a1 + v63;
        v65 = (char *)a2 + v63;
        v66 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 16))(v64, v65, v66);
        goto LABEL_198;
      case 0xCu:
        *a1 = *a2;
        v67 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
        v68 = (char *)a1 + v67;
        v69 = (char *)a2 + v67;
        v70 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v70 - 8) + 16))(v68, v69, v70);
        goto LABEL_198;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v71 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
        v72 = (char *)a1 + v71;
        v73 = (char *)a2 + v71;
        v74 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v74 - 8) + 16))(v72, v73, v74);
        goto LABEL_198;
      case 0xEu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        a1[2] = a2[2];
        v75 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
        goto LABEL_198;
      case 0xFu:
        *a1 = *a2;
        v79 = *(int *)(type metadata accessor for Proto_TileLayerParams(0) + 20);
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        v82 = sub_240F1C930();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        goto LABEL_198;
      case 0x10u:
        *a1 = *a2;
        v84 = *(int *)(type metadata accessor for Proto_ReverseLayerParams(0) + 20);
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = sub_240F1C930();
        v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        v88(v85, v86, v87);
        goto LABEL_198;
      case 0x11u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v89 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = sub_240F1C930();
        v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        v93(v90, v91, v92);
        goto LABEL_198;
      case 0x12u:
        *a1 = *a2;
        v94 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
        v95 = (char *)a1 + v94;
        v96 = (char *)a2 + v94;
        v97 = sub_240F1C930();
        v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v95, v96, v97);
        goto LABEL_198;
      case 0x13u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v99 = *(int *)(type metadata accessor for Proto_FlattenLayerParams(0) + 20);
        v100 = (char *)a1 + v99;
        v101 = (char *)a2 + v99;
        v102 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v102 - 8) + 16))(v100, v101, v102);
        goto LABEL_198;
      case 0x14u:
        v103 = a2[1];
        *a1 = *a2;
        a1[1] = v103;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v104 = *(int *)(type metadata accessor for Proto_ReshapeLayerParams(0) + 24);
        v105 = (char *)a1 + v104;
        v106 = (char *)a2 + v104;
        v107 = sub_240F1C930();
        v108 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v107 - 8) + 16);
        swift_bridgeObjectRetain();
        v108(v105, v106, v107);
        goto LABEL_198;
      case 0x15u:
        *a1 = *a2;
        v109 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
        v110 = (char *)a1 + v109;
        v111 = (char *)a2 + v109;
        v112 = sub_240F1C930();
        v113 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 16);
        swift_bridgeObjectRetain();
        v113(v110, v111, v112);
        goto LABEL_198;
      case 0x16u:
        *a1 = *a2;
        v114 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
        v115 = (char *)a1 + v114;
        v116 = (char *)a2 + v114;
        v117 = sub_240F1C930();
        v118 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v117 - 8) + 16);
        swift_bridgeObjectRetain();
        v118(v115, v116, v117);
        goto LABEL_198;
      case 0x17u:
        *a1 = *a2;
        v119 = *(int *)(type metadata accessor for Proto_PermuteLayerParams(0) + 20);
        v120 = (char *)a1 + v119;
        v121 = (char *)a2 + v119;
        v122 = sub_240F1C930();
        v123 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v122 - 8) + 16);
        swift_bridgeObjectRetain();
        v123(v120, v121, v122);
        goto LABEL_198;
      case 0x18u:
        *a1 = *a2;
        v124 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
        v125 = (char *)a1 + v124;
        v126 = (char *)a2 + v124;
        v127 = sub_240F1C930();
        v128 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v127 - 8) + 16);
        swift_bridgeObjectRetain();
        v128(v125, v126, v127);
        goto LABEL_198;
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
      case 0x21u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x3Eu:
      case 0x3Fu:
      case 0x40u:
      case 0x43u:
      case 0x50u:
      case 0x5Cu:
      case 0x5Du:
      case 0x61u:
      case 0x62u:
      case 0x64u:
      case 0x66u:
      case 0x67u:
        v138 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(a1, a2, v138);
        goto LABEL_198;
      case 0x1Au:
        *a1 = *a2;
        v129 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
        v130 = (char *)a1 + v129;
        v131 = (char *)a2 + v129;
        v132 = sub_240F1C930();
        v133 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v132 - 8) + 16);
        swift_bridgeObjectRetain();
        v133(v130, v131, v132);
        goto LABEL_198;
      case 0x1Cu:
        *a1 = *a2;
        v134 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
        v135 = (char *)a1 + v134;
        v136 = (char *)a2 + v134;
        v137 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v137 - 8) + 16))(v135, v136, v137);
        goto LABEL_198;
      case 0x1Fu:
        *a1 = *a2;
        v139 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
        v140 = (char *)a1 + v139;
        v141 = (char *)a2 + v139;
        v142 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 16))(v140, v141, v142);
        goto LABEL_198;
      case 0x20u:
        *a1 = *a2;
        v143 = *(int *)(type metadata accessor for Proto_GatherLayerParams(0) + 20);
        v144 = (char *)a1 + v143;
        v145 = (char *)a2 + v143;
        v146 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v146 - 8) + 16))(v144, v145, v146);
        goto LABEL_198;
      case 0x22u:
        *a1 = *a2;
        v147 = *(int *)(type metadata accessor for Proto_GatherAlongAxisLayerParams(0) + 20);
        v148 = (char *)a1 + v147;
        v149 = (char *)a2 + v147;
        v150 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v150 - 8) + 16))(v148, v149, v150);
        goto LABEL_198;
      case 0x23u:
        v151 = a2[1];
        *a1 = *a2;
        a1[1] = v151;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v152 = *(int *)(type metadata accessor for Proto_ScatterLayerParams(0) + 24);
        v153 = (char *)a1 + v152;
        v154 = (char *)a2 + v152;
        v155 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v155 - 8) + 16))(v153, v154, v155);
        goto LABEL_198;
      case 0x24u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v156 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
        v157 = (char *)a1 + v156;
        v158 = (char *)a2 + v156;
        v159 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v159 - 8) + 16))(v157, v158, v159);
        goto LABEL_198;
      case 0x25u:
        v160 = a2[1];
        *a1 = *a2;
        a1[1] = v160;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v161 = *(int *)(type metadata accessor for Proto_ScatterAlongAxisLayerParams(0) + 24);
        v162 = (char *)a1 + v161;
        v163 = (char *)a2 + v161;
        v164 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v164 - 8) + 16))(v162, v163, v164);
        goto LABEL_198;
      case 0x26u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v165 = a2[3];
        a1[2] = a2[2];
        a1[3] = v165;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        v166 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
        v167 = (char *)a1 + v166;
        v168 = (char *)a2 + v166;
        v169 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v169 - 8) + 16))(v167, v168, v169);
        goto LABEL_198;
      case 0x27u:
        v170 = a2[1];
        *a1 = *a2;
        a1[1] = v170;
        v171 = a2[3];
        a1[2] = a2[2];
        a1[3] = v171;
        v172 = a2[5];
        a1[4] = a2[4];
        a1[5] = v172;
        v173 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
        v663 = (char *)a2 + v173;
        __dstd = (char *)a1 + v173;
        v174 = sub_240F1C930();
        v175 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v174 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v175(__dstd, v663, v174);
        goto LABEL_198;
      case 0x28u:
        v176 = a2[1];
        *a1 = *a2;
        a1[1] = v176;
        v177 = a2[3];
        a1[2] = a2[2];
        a1[3] = v177;
        a1[4] = a2[4];
        v178 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
        v179 = (char *)a1 + v178;
        __dste = (char *)a2 + v178;
        v180 = sub_240F1C930();
        v181 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v180 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v181(v179, __dste, v180);
        goto LABEL_198;
      case 0x29u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v182 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
        v183 = (char *)a1 + v182;
        v184 = (char *)a2 + v182;
        v185 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v185 - 8) + 16))(v183, v184, v185);
        goto LABEL_198;
      case 0x2Au:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v186 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
        v187 = (char *)a1 + v186;
        v188 = (char *)a2 + v186;
        v189 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v189 - 8) + 16))(v187, v188, v189);
        goto LABEL_198;
      case 0x2Bu:
        v190 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v190 - 8) + 16))(a1, a2, v190);
        v191 = type metadata accessor for Proto_InnerProductLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v191 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v191 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x2Cu:
        type metadata accessor for NeuralNetwork.Layer.Activation(0);
        v192 = (char *)&loc_240C0DD54 + 4 * word_240F1DF9E[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x2Du:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
        v193 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
        v194 = (char *)a1 + v193;
        v195 = (char *)a2 + v193;
        v196 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v196 - 8) + 16))(v194, v195, v196);
        goto LABEL_198;
      case 0x2Eu:
        *a1 = *a2;
        v197 = *(int *)(type metadata accessor for NeuralNetwork.Layer.ClipParameters() + 24);
        v198 = (char *)a1 + v197;
        v199 = (char *)a2 + v197;
        *(uint64_t *)((char *)a1 + v197) = *(uint64_t *)((char *)a2 + v197);
        v200 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
        v201 = &v198[v200];
        v202 = &v199[v200];
        v203 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v203 - 8) + 16))(v201, v202, v203);
        goto LABEL_198;
      case 0x2Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v204 = *(int *)(type metadata accessor for Proto_GeluLayerParams(0) + 20);
        v205 = (char *)a1 + v204;
        v206 = (char *)a2 + v204;
        v207 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v207 - 8) + 16))(v205, v206, v207);
        goto LABEL_198;
      case 0x30u:
        *a1 = *a2;
        v208 = *(int *)(type metadata accessor for Proto_ClampedReLULayerParams(0) + 24);
        v209 = (char *)a1 + v208;
        v210 = (char *)a2 + v208;
        v211 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v211 - 8) + 16))(v209, v210, v211);
        goto LABEL_198;
      case 0x31u:
        v212 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(a1, a2, v212);
        v213 = type metadata accessor for Proto_ConvolutionLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v213 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v213 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x32u:
        v214 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v214 - 8) + 16))(a1, a2, v214);
        v215 = type metadata accessor for Proto_Convolution3DLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v215 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v215 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x33u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v216 = a2[3];
        a1[2] = a2[2];
        a1[3] = v216;
        v217 = (int *)type metadata accessor for Proto_PoolingLayerParams(0);
        v218 = v217[7];
        v219 = (char *)a1 + v218;
        v220 = (char *)a2 + v218;
        v221 = type metadata accessor for Proto_PoolingLayerParams.OneOf_PoolingPaddingType(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v220, 1, v221))
        {
          v222 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C200);
          memcpy(v219, v220, *(_QWORD *)(*(_QWORD *)(v222 - 8) + 64));
        }
        else
        {
          v548 = swift_getEnumCaseMultiPayload();
          if (v548 == 2)
          {
            *(_QWORD *)v219 = *(_QWORD *)v220;
            v637 = *(int *)(type metadata accessor for Proto_PoolingLayerParams.ValidCompletePadding(0) + 20);
            v666 = &v220[v637];
            __dsth = &v219[v637];
            v638 = sub_240F1C930();
            v639 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v638 - 8) + 16);
            swift_bridgeObjectRetain();
            v639(__dsth, v666, v638);
          }
          else if (v548 == 1)
          {
            *(_QWORD *)v219 = *(_QWORD *)v220;
            v219[8] = v220[8];
            v549 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
            v550 = &v219[v549];
            v551 = &v220[v549];
            v552 = sub_240F1C930();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v552 - 8) + 16))(v550, v551, v552);
          }
          else
          {
            v640 = sub_240F1C930();
            v667 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v640 - 8) + 16);
            v667(v219, v220, v640);
            v641 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
            __dstc = &v219[v641];
            v642 = &v220[v641];
            v643 = type metadata accessor for Proto_BorderAmounts(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v642, 1, v643))
            {
              v644 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
              memcpy(__dstc, v642, *(_QWORD *)(*(_QWORD *)(v644 - 8) + 64));
            }
            else
            {
              *__dstc = *v642;
              v650 = *(int *)(v643 + 20);
              v662 = (char *)__dstc + v650;
              v651 = (char *)v642 + v650;
              swift_bridgeObjectRetain();
              v667(v662, v651, v640);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v643);
            }
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v219, 0, 1, v221);
        }
        *((_BYTE *)a1 + v217[8]) = *((_BYTE *)a2 + v217[8]);
        *((_BYTE *)a1 + v217[9]) = *((_BYTE *)a2 + v217[9]);
        v652 = v217[10];
        v653 = (char *)a1 + v652;
        v654 = (char *)a2 + v652;
        v655 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v655 - 8) + 16))(v653, v654, v655);
        goto LABEL_198;
      case 0x34u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
        *(uint64_t *)((char *)a1 + 28) = *(uint64_t *)((char *)a2 + 28);
        a1[5] = a2[5];
        *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
        *(_OWORD *)((char *)a1 + 52) = *(_OWORD *)((char *)a2 + 52);
        *(uint64_t *)((char *)a1 + 68) = *(uint64_t *)((char *)a2 + 68);
        *((_BYTE *)a1 + 76) = *((_BYTE *)a2 + 76);
        v223 = *(int *)(type metadata accessor for Proto_Pooling3DLayerParams(0) + 76);
        v224 = (char *)a1 + v223;
        v225 = (char *)a2 + v223;
        v226 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v226 - 8) + 16))(v224, v225, v226);
        goto LABEL_198;
      case 0x35u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v227 = *(int *)(type metadata accessor for Proto_GlobalPooling3DLayerParams(0) + 20);
        v228 = (char *)a1 + v227;
        v229 = (char *)a2 + v227;
        v230 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v230 - 8) + 16))(v228, v229, v230);
        goto LABEL_198;
      case 0x36u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v231 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
        v232 = (char *)a1 + v231;
        v233 = (char *)a2 + v231;
        v234 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v234 - 8) + 16))(v232, v233, v234);
        goto LABEL_198;
      case 0x37u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v235 = *(int *)(type metadata accessor for Proto_MultiplyLayerParams(0) + 20);
        v236 = (char *)a1 + v235;
        v237 = (char *)a2 + v235;
        v238 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v238 - 8) + 16))(v236, v237, v238);
        goto LABEL_198;
      case 0x3Cu:
        v239 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v239 - 8) + 16))(a1, a2, v239);
        v240 = type metadata accessor for Proto_BatchedMatMulLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v240 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v240 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x3Du:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v241 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
        v242 = (char *)a1 + v241;
        v243 = (char *)a2 + v241;
        v244 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 16))(v242, v243, v244);
        goto LABEL_198;
      case 0x41u:
        v245 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v245 - 8) + 16))(a1, a2, v245);
        v246 = type metadata accessor for Proto_ScaleLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v246 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v246 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x42u:
        v247 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(a1, a2, v247);
        v248 = type metadata accessor for Proto_BatchnormLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v248 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v248 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x44u:
        *a1 = *a2;
        v249 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
        v250 = (char *)a1 + v249;
        v251 = (char *)a2 + v249;
        v252 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v252 - 8) + 16))(v250, v251, v252);
        goto LABEL_198;
      case 0x45u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        v253 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
        v254 = (char *)a1 + v253;
        v255 = (char *)a2 + v253;
        v256 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v256 - 8) + 16))(v254, v255, v256);
        goto LABEL_198;
      case 0x46u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v257 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
        v258 = (char *)a1 + v257;
        v259 = (char *)a2 + v257;
        v260 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v260 - 8) + 16))(v258, v259, v260);
        goto LABEL_198;
      case 0x47u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        v261 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
        v262 = (char *)a1 + v261;
        v263 = (char *)a2 + v261;
        v264 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v264 - 8) + 16))(v262, v263, v264);
        goto LABEL_198;
      case 0x48u:
        v265 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v265 - 8) + 16))(a1, a2, v265);
        v266 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v266 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v266 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x49u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v267 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
        v268 = v267[8];
        v269 = (char *)a1 + v268;
        v270 = (char *)a2 + v268;
        v271 = sub_240F1C930();
        v272 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v271 - 8) + 16);
        swift_bridgeObjectRetain();
        v272(v269, v270, v271);
        v273 = v267[9];
        v274 = (_DWORD *)((char *)a1 + v273);
        v275 = (_DWORD *)((char *)a2 + v273);
        v276 = type metadata accessor for Proto_LSTMParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v275, 1, v276))
        {
          v277 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
          memcpy(v274, v275, *(_QWORD *)(*(_QWORD *)(v277 - 8) + 64));
        }
        else
        {
          *v274 = *v275;
          *((_BYTE *)v274 + 4) = *((_BYTE *)v275 + 4);
          v274[2] = v275[2];
          v272((char *)v274 + *(int *)(v276 + 40), (char *)v275 + *(int *)(v276 + 40), v271);
          __swift_storeEnumTagSinglePayload((uint64_t)v274, 0, 1, v276);
        }
        v553 = v267[10];
        v554 = (char *)a1 + v553;
        v555 = (char *)a2 + v553;
        v556 = type metadata accessor for Proto_LSTMWeightParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v555, 1, v556))
        {
          v557 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
          memcpy(v554, v555, *(_QWORD *)(*(_QWORD *)(v557 - 8) + 64));
        }
        else
        {
          v272(v554, v555, v271);
          *(_QWORD *)&v554[*(int *)(v556 + 20)] = *(_QWORD *)&v555[*(int *)(v556 + 20)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v554, 0, 1, v556);
        }
        goto LABEL_198;
      case 0x4Au:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v278 = a2[3];
        a1[2] = a2[2];
        a1[3] = v278;
        a1[4] = a2[4];
        v279 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
        v280 = *(int *)(v279 + 36);
        __dstf = (char *)a1 + v280;
        v281 = (char *)a2 + v280;
        v282 = sub_240F1C930();
        v283 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v282 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v283(__dstf, v281, v282);
        v284 = *(int *)(v279 + 40);
        v285 = (_DWORD *)((char *)a1 + v284);
        v286 = (_DWORD *)((char *)a2 + v284);
        v287 = type metadata accessor for Proto_LSTMParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v286, 1, v287))
        {
          v288 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
          memcpy(v285, v286, *(_QWORD *)(*(_QWORD *)(v288 - 8) + 64));
        }
        else
        {
          *v285 = *v286;
          *((_BYTE *)v285 + 4) = *((_BYTE *)v286 + 4);
          v285[2] = v286[2];
          v283((char *)v285 + *(int *)(v287 + 40), (char *)v286 + *(int *)(v287 + 40), v282);
          __swift_storeEnumTagSinglePayload((uint64_t)v285, 0, 1, v287);
        }
        goto LABEL_198;
      case 0x4Bu:
        v289 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
        v290 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v290 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v290 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x4Cu:
        v291 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v291 - 8) + 16))(a1, a2, v291);
        v292 = type metadata accessor for Proto_GRULayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v292 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v292 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x4Du:
        *a1 = *a2;
        v293 = type metadata accessor for Proto_CropLayerParams(0);
        v294 = *(int *)(v293 + 20);
        v295 = (char *)a1 + v294;
        v296 = (char *)a2 + v294;
        v297 = sub_240F1C930();
        v298 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v297 - 8) + 16);
        swift_bridgeObjectRetain();
        v298(v295, v296, v297);
        v299 = *(int *)(v293 + 24);
        v300 = (uint64_t *)((char *)a1 + v299);
        v301 = (uint64_t *)((char *)a2 + v299);
        v302 = type metadata accessor for Proto_BorderAmounts(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v301, 1, v302))
        {
LABEL_77:
          v303 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
          memcpy(v300, v301, *(_QWORD *)(*(_QWORD *)(v303 - 8) + 64));
        }
        else
        {
          *v300 = *v301;
          v558 = *(int *)(v302 + 20);
          v559 = (char *)v300 + v558;
          v560 = (char *)v301 + v558;
          swift_bridgeObjectRetain();
          v298(v559, v560, v297);
          __swift_storeEnumTagSinglePayload((uint64_t)v300, 0, 1, v302);
        }
        goto LABEL_198;
      case 0x4Eu:
        *a1 = *a2;
        v304 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
        v305 = *(int *)(v304 + 20);
        v306 = (char *)a1 + v305;
        v307 = (char *)a2 + v305;
        v308 = sub_240F1C930();
        v309 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v308 - 8) + 16);
        swift_bridgeObjectRetain();
        v309(v306, v307, v308);
        v310 = *(int *)(v304 + 24);
        v311 = (char *)a1 + v310;
        v312 = (char *)a2 + v310;
        v313 = type metadata accessor for Proto_SamplingMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v312, 1, v313))
        {
          v314 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
          memcpy(v311, v312, *(_QWORD *)(*(_QWORD *)(v314 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v311 = *(_QWORD *)v312;
          v311[8] = v312[8];
          v309(&v311[*(int *)(v313 + 20)], &v312[*(int *)(v313 + 20)], v308);
          __swift_storeEnumTagSinglePayload((uint64_t)v311, 0, 1, v313);
        }
        goto LABEL_198;
      case 0x4Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v315 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
        v316 = v315[7];
        v317 = (char *)a1 + v316;
        v318 = (char *)a2 + v316;
        v319 = sub_240F1C930();
        v320 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v319 - 8) + 16);
        swift_bridgeObjectRetain();
        v320(v317, v318, v319);
        v321 = v315[8];
        v322 = (char *)a1 + v321;
        v323 = (char *)a2 + v321;
        v324 = type metadata accessor for Proto_SamplingMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v323, 1, v324))
        {
          v325 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
          memcpy(v322, v323, *(_QWORD *)(*(_QWORD *)(v325 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v322 = *(_QWORD *)v323;
          v322[8] = v323[8];
          v320(&v322[*(int *)(v324 + 20)], &v323[*(int *)(v324 + 20)], v319);
          __swift_storeEnumTagSinglePayload((uint64_t)v322, 0, 1, v324);
        }
        v561 = v315[9];
        v562 = (char *)a1 + v561;
        v563 = (char *)a2 + v561;
        v564 = type metadata accessor for Proto_BoxCoordinatesMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v563, 1, v564))
        {
          v565 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
          memcpy(v562, v563, *(_QWORD *)(*(_QWORD *)(v565 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v562 = *(_QWORD *)v563;
          v562[8] = v563[8];
          v320(&v562[*(int *)(v564 + 20)], &v563[*(int *)(v564 + 20)], v319);
          __swift_storeEnumTagSinglePayload((uint64_t)v562, 0, 1, v564);
        }
        goto LABEL_198;
      case 0x51u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v326 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
        v327 = (char *)a1 + v326;
        v328 = (char *)a2 + v326;
        v329 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v329 - 8) + 16))(v327, v328, v329);
        goto LABEL_198;
      case 0x52u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v330 = *(int *)(type metadata accessor for Proto_ReduceL1LayerParams(0) + 28);
        v331 = (char *)a1 + v330;
        v332 = (char *)a2 + v330;
        v333 = sub_240F1C930();
        v334 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v333 - 8) + 16);
        swift_bridgeObjectRetain();
        v334(v331, v332, v333);
        goto LABEL_198;
      case 0x53u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v335 = *(int *)(type metadata accessor for Proto_ReduceL2LayerParams(0) + 28);
        v336 = (char *)a1 + v335;
        v337 = (char *)a2 + v335;
        v338 = sub_240F1C930();
        v339 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 16);
        swift_bridgeObjectRetain();
        v339(v336, v337, v338);
        goto LABEL_198;
      case 0x54u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v340 = *(int *)(type metadata accessor for Proto_ReduceMaxLayerParams(0) + 28);
        v341 = (char *)a1 + v340;
        v342 = (char *)a2 + v340;
        v343 = sub_240F1C930();
        v344 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v343 - 8) + 16);
        swift_bridgeObjectRetain();
        v344(v341, v342, v343);
        goto LABEL_198;
      case 0x55u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v345 = *(int *)(type metadata accessor for Proto_ReduceMinLayerParams(0) + 28);
        v346 = (char *)a1 + v345;
        v347 = (char *)a2 + v345;
        v348 = sub_240F1C930();
        v349 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v348 - 8) + 16);
        swift_bridgeObjectRetain();
        v349(v346, v347, v348);
        goto LABEL_198;
      case 0x56u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v350 = *(int *)(type metadata accessor for Proto_ReduceSumLayerParams(0) + 28);
        v351 = (char *)a1 + v350;
        v352 = (char *)a2 + v350;
        v353 = sub_240F1C930();
        v354 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v353 - 8) + 16);
        swift_bridgeObjectRetain();
        v354(v351, v352, v353);
        goto LABEL_198;
      case 0x57u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v355 = *(int *)(type metadata accessor for Proto_ReduceProdLayerParams(0) + 28);
        v356 = (char *)a1 + v355;
        v357 = (char *)a2 + v355;
        v358 = sub_240F1C930();
        v359 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v358 - 8) + 16);
        swift_bridgeObjectRetain();
        v359(v356, v357, v358);
        goto LABEL_198;
      case 0x58u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v360 = *(int *)(type metadata accessor for Proto_ReduceMeanLayerParams(0) + 28);
        v361 = (char *)a1 + v360;
        v362 = (char *)a2 + v360;
        v363 = sub_240F1C930();
        v364 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v363 - 8) + 16);
        swift_bridgeObjectRetain();
        v364(v361, v362, v363);
        goto LABEL_198;
      case 0x59u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v365 = *(int *)(type metadata accessor for Proto_ReduceLogSumLayerParams(0) + 28);
        v366 = (char *)a1 + v365;
        v367 = (char *)a2 + v365;
        v368 = sub_240F1C930();
        v369 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v368 - 8) + 16);
        swift_bridgeObjectRetain();
        v369(v366, v367, v368);
        goto LABEL_198;
      case 0x5Au:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v370 = *(int *)(type metadata accessor for Proto_ReduceSumSquareLayerParams(0) + 28);
        v371 = (char *)a1 + v370;
        v372 = (char *)a2 + v370;
        v373 = sub_240F1C930();
        v374 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v373 - 8) + 16);
        swift_bridgeObjectRetain();
        v374(v371, v372, v373);
        goto LABEL_198;
      case 0x5Bu:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v375 = *(int *)(type metadata accessor for Proto_ReduceLogSumExpLayerParams(0) + 28);
        v376 = (char *)a1 + v375;
        v377 = (char *)a2 + v375;
        v378 = sub_240F1C930();
        v379 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v378 - 8) + 16);
        swift_bridgeObjectRetain();
        v379(v376, v377, v378);
        goto LABEL_198;
      case 0x5Eu:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v380 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
        v381 = (char *)a1 + v380;
        v382 = (char *)a2 + v380;
        v383 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v383 - 8) + 16))(v381, v382, v383);
        goto LABEL_198;
      case 0x5Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v384 = *(int *)(type metadata accessor for Proto_ArgMinLayerParams(0) + 24);
        v385 = (char *)a1 + v384;
        v386 = (char *)a2 + v384;
        v387 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v387 - 8) + 16))(v385, v386, v387);
        goto LABEL_198;
      case 0x60u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v388 = *(int *)(type metadata accessor for Proto_ArgMaxLayerParams(0) + 24);
        v389 = (char *)a1 + v388;
        v390 = (char *)a2 + v388;
        v391 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v391 - 8) + 16))(v389, v390, v391);
        goto LABEL_198;
      case 0x63u:
        v392 = sub_240F1C930();
        v393 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v392 - 8) + 16);
        v393(a1, a2, v392);
        v394 = type metadata accessor for Proto_BranchLayerParams(0);
        v395 = *(int *)(v394 + 20);
        v396 = (uint64_t *)((char *)a1 + v395);
        v397 = (uint64_t *)((char *)a2 + v395);
        v398 = type metadata accessor for Proto_NeuralNetwork(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v397, 1, v398))
        {
          v399 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy(v396, v397, *(_QWORD *)(*(_QWORD *)(v399 - 8) + 64));
        }
        else
        {
          __dst = (void *)v394;
          v566 = v397[1];
          *v396 = *v397;
          v396[1] = v566;
          v396[2] = v397[2];
          *((_BYTE *)v396 + 24) = *((_BYTE *)v397 + 24);
          v396[4] = v397[4];
          *((_BYTE *)v396 + 40) = *((_BYTE *)v397 + 40);
          v567 = *(int *)(v398 + 32);
          v661 = (void (*)(char *, char *, uint64_t))v393;
          v568 = (char *)v396 + v567;
          v569 = v392;
          v570 = (char *)v397 + v567;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v571 = v570;
          v392 = v569;
          v661(v568, v571, v569);
          v572 = *(int *)(v398 + 36);
          v573 = (char *)v396 + v572;
          v574 = (char *)v397 + v572;
          updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v574, 1, updated))
          {
            v576 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v573, v574, *(_QWORD *)(*(_QWORD *)(v576 - 8) + 64));
          }
          else
          {
            v661(v573, v574, v569);
            *(_QWORD *)&v573[*(int *)(updated + 20)] = *(_QWORD *)&v574[*(int *)(updated + 20)];
            swift_retain();
            __swift_storeEnumTagSinglePayload((uint64_t)v573, 0, 1, updated);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v396, 0, 1, v398);
          v393 = (void (*)(uint64_t *, uint64_t *, uint64_t))v661;
          v394 = (uint64_t)__dst;
        }
        v601 = *(int *)(v394 + 24);
        v602 = (uint64_t)a1 + v601;
        v603 = (uint64_t)a2 + v601;
        if (__swift_getEnumTagSinglePayload(v603, 1, v398))
          goto LABEL_164;
        v605 = v392;
        v606 = *(_QWORD *)(v603 + 8);
        *(_QWORD *)v602 = *(_QWORD *)v603;
        *(_QWORD *)(v602 + 8) = v606;
        *(_QWORD *)(v602 + 16) = *(_QWORD *)(v603 + 16);
        *(_BYTE *)(v602 + 24) = *(_BYTE *)(v603 + 24);
        *(_QWORD *)(v602 + 32) = *(_QWORD *)(v603 + 32);
        *(_BYTE *)(v602 + 40) = *(_BYTE *)(v603 + 40);
        v607 = *(int *)(v398 + 32);
        v608 = (uint64_t *)(v602 + v607);
        v609 = (uint64_t *)(v603 + v607);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v393(v608, v609, v605);
        v610 = *(int *)(v398 + 36);
        v611 = (char *)(v602 + v610);
        v612 = (char *)(v603 + v610);
        v613 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v612, 1, v613))
          goto LABEL_166;
        goto LABEL_174;
      case 0x65u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v400 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
        v401 = v400[6];
        v402 = (char *)a1 + v401;
        v403 = (char *)a2 + v401;
        v404 = sub_240F1C930();
        v393 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v404 - 8) + 16);
        swift_bridgeObjectRetain();
        v393((uint64_t *)v402, (uint64_t *)v403, v404);
        v405 = v400[7];
        v406 = (uint64_t *)((char *)a1 + v405);
        v407 = (uint64_t *)((char *)a2 + v405);
        v398 = type metadata accessor for Proto_NeuralNetwork(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v407, 1, v398))
        {
          v408 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy(v406, v407, *(_QWORD *)(*(_QWORD *)(v408 - 8) + 64));
        }
        else
        {
          v577 = v407[1];
          *v406 = *v407;
          v406[1] = v577;
          v406[2] = v407[2];
          *((_BYTE *)v406 + 24) = *((_BYTE *)v407 + 24);
          v406[4] = v407[4];
          *((_BYTE *)v406 + 40) = *((_BYTE *)v407 + 40);
          v578 = *(int *)(v398 + 32);
          v664 = v398;
          __dstg = (char *)v406 + v578;
          v579 = v404;
          v580 = (char *)v407 + v578;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v581 = v580;
          v404 = v579;
          v398 = v664;
          v582 = (uint64_t *)__dstg;
          __dsta = (void (*)(char *, char *, uint64_t))v393;
          v393(v582, (uint64_t *)v581, v404);
          v583 = *(int *)(v664 + 36);
          v584 = (char *)v406 + v583;
          v585 = (char *)v407 + v583;
          v586 = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v585, 1, v586))
          {
            v587 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v584, v585, *(_QWORD *)(*(_QWORD *)(v587 - 8) + 64));
          }
          else
          {
            __dsta(v584, v585, v404);
            *(_QWORD *)&v584[*(int *)(v586 + 20)] = *(_QWORD *)&v585[*(int *)(v586 + 20)];
            swift_retain();
            __swift_storeEnumTagSinglePayload((uint64_t)v584, 0, 1, v586);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v406, 0, 1, v664);
          v393 = (void (*)(uint64_t *, uint64_t *, uint64_t))__dsta;
        }
        v615 = v400[8];
        v602 = (uint64_t)a1 + v615;
        v603 = (uint64_t)a2 + v615;
        if (__swift_getEnumTagSinglePayload(v603, 1, v398))
        {
LABEL_164:
          v604 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy((void *)v602, (const void *)v603, *(_QWORD *)(*(_QWORD *)(v604 - 8) + 64));
        }
        else
        {
          v605 = v404;
          v616 = *(_QWORD *)(v603 + 8);
          *(_QWORD *)v602 = *(_QWORD *)v603;
          *(_QWORD *)(v602 + 8) = v616;
          *(_QWORD *)(v602 + 16) = *(_QWORD *)(v603 + 16);
          *(_BYTE *)(v602 + 24) = *(_BYTE *)(v603 + 24);
          *(_QWORD *)(v602 + 32) = *(_QWORD *)(v603 + 32);
          *(_BYTE *)(v602 + 40) = *(_BYTE *)(v603 + 40);
          v617 = *(int *)(v398 + 32);
          v618 = (uint64_t *)(v602 + v617);
          v619 = (uint64_t *)(v603 + v617);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v393(v618, v619, v605);
          v620 = *(int *)(v398 + 36);
          v611 = (char *)(v602 + v620);
          v612 = (char *)(v603 + v620);
          v613 = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v612, 1, v613))
          {
LABEL_166:
            v614 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v611, v612, *(_QWORD *)(*(_QWORD *)(v614 - 8) + 64));
          }
          else
          {
LABEL_174:
            v393((uint64_t *)v611, (uint64_t *)v612, v605);
            *(_QWORD *)&v611[*(int *)(v613 + 20)] = *(_QWORD *)&v612[*(int *)(v613 + 20)];
            swift_retain();
            __swift_storeEnumTagSinglePayload((uint64_t)v611, 0, 1, v613);
          }
          __swift_storeEnumTagSinglePayload(v602, 0, 1, v398);
        }
        goto LABEL_198;
      case 0x68u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v409 = *(int *)(type metadata accessor for Proto_RangeStaticLayerParams(0) + 28);
        v410 = (char *)a1 + v409;
        v411 = (char *)a2 + v409;
        v412 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v412 - 8) + 16))(v410, v411, v412);
        goto LABEL_198;
      case 0x69u:
        *a1 = *a2;
        v413 = *(int *)(type metadata accessor for Proto_RangeDynamicLayerParams(0) + 24);
        v414 = (char *)a1 + v413;
        v415 = (char *)a2 + v413;
        v416 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v416 - 8) + 16))(v414, v415, v416);
        goto LABEL_198;
      case 0x6Au:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v417 = *(int *)(type metadata accessor for Proto_EqualLayerParams(0) + 20);
        v418 = (char *)a1 + v417;
        v419 = (char *)a2 + v417;
        v420 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v420 - 8) + 16))(v418, v419, v420);
        goto LABEL_198;
      case 0x6Bu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v421 = *(int *)(type metadata accessor for Proto_NotEqualLayerParams(0) + 20);
        v422 = (char *)a1 + v421;
        v423 = (char *)a2 + v421;
        v424 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v424 - 8) + 16))(v422, v423, v424);
        goto LABEL_198;
      case 0x6Cu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v425 = *(int *)(type metadata accessor for Proto_LessThanLayerParams(0) + 20);
        v426 = (char *)a1 + v425;
        v427 = (char *)a2 + v425;
        v428 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v428 - 8) + 16))(v426, v427, v428);
        goto LABEL_198;
      case 0x6Du:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v429 = *(int *)(type metadata accessor for Proto_LessEqualLayerParams(0) + 20);
        v430 = (char *)a1 + v429;
        v431 = (char *)a2 + v429;
        v432 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v432 - 8) + 16))(v430, v431, v432);
        goto LABEL_198;
      case 0x6Eu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v433 = *(int *)(type metadata accessor for Proto_GreaterThanLayerParams(0) + 20);
        v434 = (char *)a1 + v433;
        v435 = (char *)a2 + v433;
        v436 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v436 - 8) + 16))(v434, v435, v436);
        goto LABEL_198;
      case 0x6Fu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v437 = *(int *)(type metadata accessor for Proto_GreaterEqualLayerParams(0) + 20);
        v438 = (char *)a1 + v437;
        v439 = (char *)a2 + v437;
        v440 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v440 - 8) + 16))(v438, v439, v440);
        goto LABEL_198;
      case 0x70u:
        *a1 = *a2;
        a1[1] = a2[1];
        v441 = *(int *)(type metadata accessor for Proto_RandomNormalLikeLayerParams(0) + 28);
        v442 = (char *)a1 + v441;
        v443 = (char *)a2 + v441;
        v444 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v444 - 8) + 16))(v442, v443, v444);
        goto LABEL_198;
      case 0x71u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v445 = *(int *)(type metadata accessor for Proto_RandomNormalStaticLayerParams(0) + 32);
        v446 = (char *)a1 + v445;
        v447 = (char *)a2 + v445;
        v448 = sub_240F1C930();
        v449 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v448 - 8) + 16);
        swift_bridgeObjectRetain();
        v449(v446, v447, v448);
        goto LABEL_198;
      case 0x72u:
        *a1 = *a2;
        a1[1] = a2[1];
        v450 = *(int *)(type metadata accessor for Proto_RandomNormalDynamicLayerParams(0) + 28);
        v451 = (char *)a1 + v450;
        v452 = (char *)a2 + v450;
        v453 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v453 - 8) + 16))(v451, v452, v453);
        goto LABEL_198;
      case 0x73u:
        *a1 = *a2;
        a1[1] = a2[1];
        v454 = *(int *)(type metadata accessor for Proto_RandomUniformLikeLayerParams(0) + 28);
        v455 = (char *)a1 + v454;
        v456 = (char *)a2 + v454;
        v457 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v457 - 8) + 16))(v455, v456, v457);
        goto LABEL_198;
      case 0x74u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v458 = *(int *)(type metadata accessor for Proto_RandomUniformStaticLayerParams(0) + 32);
        v459 = (char *)a1 + v458;
        v460 = (char *)a2 + v458;
        v461 = sub_240F1C930();
        v462 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v461 - 8) + 16);
        swift_bridgeObjectRetain();
        v462(v459, v460, v461);
        goto LABEL_198;
      case 0x75u:
        *a1 = *a2;
        a1[1] = a2[1];
        v463 = *(int *)(type metadata accessor for Proto_RandomUniformDynamicLayerParams(0) + 28);
        v464 = (char *)a1 + v463;
        v465 = (char *)a2 + v463;
        v466 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v466 - 8) + 16))(v464, v465, v466);
        goto LABEL_198;
      case 0x76u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v467 = *(int *)(type metadata accessor for Proto_RandomBernoulliLikeLayerParams(0) + 24);
        v468 = (char *)a1 + v467;
        v469 = (char *)a2 + v467;
        v470 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v470 - 8) + 16))(v468, v469, v470);
        goto LABEL_198;
      case 0x77u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        v471 = *(int *)(type metadata accessor for Proto_RandomBernoulliStaticLayerParams(0) + 28);
        v472 = (char *)a1 + v471;
        v473 = (char *)a2 + v471;
        v474 = sub_240F1C930();
        v475 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v474 - 8) + 16);
        swift_bridgeObjectRetain();
        v475(v472, v473, v474);
        goto LABEL_198;
      case 0x78u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v476 = *(int *)(type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(0) + 24);
        v477 = (char *)a1 + v476;
        v478 = (char *)a2 + v476;
        v479 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v479 - 8) + 16))(v477, v478, v479);
        goto LABEL_198;
      case 0x79u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v480 = *(int *)(type metadata accessor for Proto_MatrixBandPartLayerParams(0) + 24);
        v481 = (char *)a1 + v480;
        v482 = (char *)a2 + v480;
        v483 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v483 - 8) + 16))(v481, v482, v483);
        goto LABEL_198;
      case 0x7Au:
        *a1 = *a2;
        v484 = *(int *)(type metadata accessor for Proto_LowerTriangularLayerParams(0) + 20);
        v485 = (char *)a1 + v484;
        v486 = (char *)a2 + v484;
        v487 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 16))(v485, v486, v487);
        goto LABEL_198;
      case 0x7Bu:
        *a1 = *a2;
        v488 = *(int *)(type metadata accessor for Proto_UpperTriangularLayerParams(0) + 20);
        v489 = (char *)a1 + v488;
        v490 = (char *)a2 + v488;
        v491 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v491 - 8) + 16))(v489, v490, v491);
        goto LABEL_198;
      case 0x7Cu:
        v492 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v492 - 8) + 16))(a1, a2, v492);
        v493 = type metadata accessor for Proto_EmbeddingLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v493 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v493 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x7Du:
        v494 = sub_240F1C930();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v494 - 8) + 16))(a1, a2, v494);
        v495 = type metadata accessor for Proto_EmbeddingNDLayerParams(0);
        *(uint64_t *)((char *)a1 + *(int *)(v495 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v495 + 20));
        swift_retain();
        goto LABEL_198;
      case 0x7Eu:
        *a1 = *a2;
        v496 = type metadata accessor for Proto_BiasLayerParams(0);
        v497 = *(int *)(v496 + 20);
        v498 = (char *)a1 + v497;
        v499 = (char *)a2 + v497;
        v11 = sub_240F1C930();
        v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
        swift_bridgeObjectRetain();
        v12(v498, v499, v11);
        v500 = *(int *)(v496 + 24);
        v14 = (uint64_t)a1 + v500;
        v15 = (uint64_t)a2 + v500;
        v16 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v15, 1, v16))
        {
LABEL_8:
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
          memcpy((void *)v14, (const void *)v15, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v588 = *(_QWORD *)(v15 + 8);
          *(_QWORD *)v14 = *(_QWORD *)v15;
          v589 = *(_QWORD *)(v15 + 16);
          swift_bridgeObjectRetain();
          sub_240BF5610(v588, v589);
          *(_QWORD *)(v14 + 8) = v588;
          *(_QWORD *)(v14 + 16) = v589;
          v590 = *(_QWORD *)(v15 + 24);
          v591 = *(_QWORD *)(v15 + 32);
          sub_240BF5610(v590, v591);
          *(_QWORD *)(v14 + 24) = v590;
          *(_QWORD *)(v14 + 32) = v591;
          v592 = *(_QWORD *)(v15 + 40);
          v593 = *(_QWORD *)(v15 + 48);
          sub_240BF5610(v592, v593);
          *(_QWORD *)(v14 + 40) = v592;
          *(_QWORD *)(v14 + 48) = v593;
          *(_BYTE *)(v14 + 56) = *(_BYTE *)(v15 + 56);
          v12((char *)(v14 + *(int *)(v16 + 36)), (char *)(v15 + *(int *)(v16 + 36)), v11);
          v594 = *(int *)(v16 + 40);
          v536 = (_QWORD *)(v14 + v594);
          v537 = (_QWORD *)(v15 + v594);
          v538 = type metadata accessor for Proto_QuantizationParams(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v537, 1, v538))
          {
LABEL_154:
            v595 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
            memcpy(v536, v537, *(_QWORD *)(*(_QWORD *)(v595 - 8) + 64));
          }
          else
          {
            *v536 = *v537;
            v621 = *(int *)(v538 + 20);
            v665 = (uint64_t)v536;
            __dstb = (_QWORD *)((char *)v536 + v621);
            v597 = (_QWORD *)((char *)v537 + v621);
            v598 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v597, 1, v598))
            {
LABEL_160:
              v600 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
              memcpy(__dstb, v597, *(_QWORD *)(*(_QWORD *)(v600 - 8) + 64));
            }
            else
            {
              v649 = swift_getEnumCaseMultiPayload();
              *__dstb = *v597;
              if (v649 == 1)
              {
LABEL_188:
                v647 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
                v660 = (char *)__dstb + v647;
                v648 = (char *)v597 + v647;
                swift_bridgeObjectRetain();
                v12(v660, v648, v11);
              }
              else
              {
LABEL_194:
                __dstb[1] = v597[1];
                v656 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
                v659 = (char *)__dstb + v656;
                v657 = (char *)v597 + v656;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v12(v659, v657, v11);
              }
              swift_storeEnumTagMultiPayload();
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v598);
            }
            v12((char *)(v665 + *(int *)(v538 + 24)), (char *)v537 + *(int *)(v538 + 24), v11);
            __swift_storeEnumTagSinglePayload(v665, 0, 1, v538);
          }
          __swift_storeEnumTagSinglePayload(v14, 0, 1, v16);
        }
LABEL_198:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x7Fu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(uint64_t *)((char *)a1 + 20) = *(uint64_t *)((char *)a2 + 20);
        v501 = *(int *)(type metadata accessor for Proto_CategoricalDistributionLayerParams(0) + 36);
        v502 = (char *)a1 + v501;
        v503 = (char *)a2 + v501;
        v504 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v504 - 8) + 16))(v502, v503, v504);
        goto LABEL_198;
      case 0x80u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v505 = *(int *)(type metadata accessor for Proto_OneHotLayerParams(0) + 32);
        v506 = (char *)a1 + v505;
        v507 = (char *)a2 + v505;
        v508 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v508 - 8) + 16))(v506, v507, v508);
        goto LABEL_198;
      case 0x81u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v509 = *(int *)(type metadata accessor for Proto_TopKLayerParams(0) + 28);
        v510 = (char *)a1 + v509;
        v511 = (char *)a2 + v509;
        v512 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v512 - 8) + 16))(v510, v511, v512);
        goto LABEL_198;
      case 0x82u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v513 = *(int *)(type metadata accessor for Proto_ArgSortLayerParams(0) + 24);
        v514 = (char *)a1 + v513;
        v515 = (char *)a2 + v513;
        v516 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v516 - 8) + 16))(v514, v515, v516);
        goto LABEL_198;
      case 0x83u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v517 = *(int *)(type metadata accessor for Proto_NonMaximumSuppressionLayerParams(0) + 32);
        v518 = (char *)a1 + v517;
        v519 = (char *)a2 + v517;
        v520 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v520 - 8) + 16))(v518, v519, v520);
        goto LABEL_198;
      case 0x84u:
        v521 = a2[1];
        *a1 = *a2;
        a1[1] = v521;
        v522 = a2[3];
        a1[2] = a2[2];
        a1[3] = v522;
        v523 = a2[5];
        a1[4] = a2[4];
        a1[5] = v523;
        v524 = *(int *)(type metadata accessor for Proto_CustomLayerParams(0) + 32);
        v525 = (char *)a1 + v524;
        v526 = (char *)a2 + v524;
        v527 = sub_240F1C930();
        v528 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v527 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v528(v525, v526, v527);
        goto LABEL_198;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t _s4KindOwxx(uint64_t a1)
{
  uint64_t result;
  uint64_t ConstantLayerParams;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void (*v22)(uint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int *v29;
  uint64_t v30;
  uint64_t v31;
  void (*v32)(uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  int *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t updated;
  uint64_t v61;
  int *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  int v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t (*v84)(uint64_t, uint64_t);
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t valid;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(uint64_t, uint64_t);

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
      swift_bridgeObjectRelease();
      ConstantLayerParams = type metadata accessor for Proto_LoadConstantLayerParams(0);
      goto LABEL_137;
    case 1:
      swift_bridgeObjectRelease();
      ConstantLayerParams = type metadata accessor for Proto_LoadConstantNDLayerParams(0);
      goto LABEL_137;
    case 2:
      v4 = type metadata accessor for Proto_PaddingLayerParams.OneOf_PaddingType(0);
      if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
      {
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 2 || EnumCaseMultiPayload == 1)
        {
          v86 = sub_240F1C930();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v86 - 8) + 8))(a1, v86);
        }
        else if (!EnumCaseMultiPayload)
        {
          v6 = a1 + *(int *)(type metadata accessor for Proto_PaddingLayerParams.PaddingConstant(0) + 20);
          v7 = sub_240F1C930();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        }
      }
      v45 = type metadata accessor for Proto_PaddingLayerParams(0);
      goto LABEL_159;
    case 3:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ConstantPaddingLayerParams(0);
      goto LABEL_148;
    case 4:
      v9 = type metadata accessor for Proto_ConcatLayerParams(0);
      goto LABEL_132;
    case 5:
      v10 = type metadata accessor for Proto_ConcatNDLayerParams(0);
      goto LABEL_150;
    case 6:
      v9 = type metadata accessor for Proto_SplitLayerParams(0);
      goto LABEL_132;
    case 7:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_SplitNDLayerParams(0);
      goto LABEL_148;
    case 8:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for Proto_UpsampleLayerParams(0);
      goto LABEL_153;
    case 9:
      v9 = type metadata accessor for Proto_FillLikeLayerParams(0);
      goto LABEL_132;
    case 10:
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for Proto_FillStaticLayerParams(0);
      goto LABEL_150;
    case 11:
      v9 = type metadata accessor for Proto_FillDynamicLayerParams(0);
      goto LABEL_132;
    case 12:
      v9 = type metadata accessor for Proto_SequenceRepeatLayerParams(0);
      goto LABEL_132;
    case 13:
      v10 = type metadata accessor for Proto_ReverseSeqLayerParams(0);
      goto LABEL_150;
    case 14:
      v10 = type metadata accessor for Proto_ReorganizeDataLayerParams(0);
      goto LABEL_150;
    case 15:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_TileLayerParams(0);
      goto LABEL_132;
    case 16:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_ReverseLayerParams(0);
      goto LABEL_132;
    case 17:
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for Proto_SqueezeLayerParams(0);
      goto LABEL_150;
    case 18:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_ExpandDimsLayerParams(0);
      goto LABEL_132;
    case 19:
      v9 = type metadata accessor for Proto_FlattenLayerParams(0);
      goto LABEL_132;
    case 20:
      swift_bridgeObjectRelease();
      v10 = type metadata accessor for Proto_ReshapeLayerParams(0);
      goto LABEL_150;
    case 21:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_ReshapeStaticLayerParams(0);
      goto LABEL_132;
    case 22:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_RankPreservingReshapeLayerParams(0);
      goto LABEL_132;
    case 23:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_PermuteLayerParams(0);
      goto LABEL_132;
    case 24:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_TransposeLayerParams(0);
      goto LABEL_132;
    case 25:
    case 27:
    case 29:
    case 30:
    case 33:
    case 56:
    case 57:
    case 58:
    case 59:
    case 62:
    case 63:
    case 64:
    case 67:
    case 80:
    case 92:
    case 93:
    case 97:
    case 98:
    case 100:
    case 102:
    case 103:
      goto LABEL_155;
    case 26:
      swift_bridgeObjectRelease();
      v9 = type metadata accessor for Proto_BroadcastToStaticLayerParams(0);
      goto LABEL_132;
    case 28:
      v9 = type metadata accessor for Proto_FlattenTo2DLayerParams(0);
      goto LABEL_132;
    case 31:
      v9 = type metadata accessor for Proto_StackLayerParams(0);
      goto LABEL_132;
    case 32:
      v9 = type metadata accessor for Proto_GatherLayerParams(0);
      goto LABEL_132;
    case 34:
      v9 = type metadata accessor for Proto_GatherAlongAxisLayerParams(0);
      goto LABEL_132;
    case 35:
      v10 = type metadata accessor for Proto_ScatterLayerParams(0);
      goto LABEL_150;
    case 36:
      v9 = type metadata accessor for Proto_ScatterNDLayerParams(0);
      goto LABEL_132;
    case 37:
      v10 = type metadata accessor for Proto_ScatterAlongAxisLayerParams(0);
      goto LABEL_150;
    case 38:
      v11 = type metadata accessor for Proto_SliceLayerParams(0);
      goto LABEL_153;
    case 39:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v12 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
      goto LABEL_154;
    case 40:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v13 = type metadata accessor for Proto_SliceDynamicLayerParams(0);
      goto LABEL_145;
    case 41:
      v10 = type metadata accessor for Proto_SliceBySizeLayerParams(0);
      goto LABEL_150;
    case 42:
      v8 = type metadata accessor for Proto_SlidingWindowsLayerParams(0);
      goto LABEL_148;
    case 43:
      v14 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(a1, v14);
      type metadata accessor for Proto_InnerProductLayerParams(0);
      return swift_release();
    case 44:
      type metadata accessor for NeuralNetwork.Layer.Activation(0);
      result = swift_getEnumCaseMultiPayload();
      switch((int)result)
      {
        case 0:
          v10 = type metadata accessor for Proto_ActivationLinear(0);
          goto LABEL_150;
        case 1:
        case 5:
        case 7:
        case 10:
        case 11:
          goto LABEL_155;
        case 2:
          v9 = type metadata accessor for Proto_ActivationLeakyReLU(0);
          goto LABEL_132;
        case 3:
          v9 = type metadata accessor for Proto_ActivationThresholdedReLU(0);
          goto LABEL_132;
        case 4:
          v39 = sub_240F1C930();
          v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
          v101(a1, v39);
          v74 = *(int *)(type metadata accessor for Proto_ActivationPReLU(0) + 20);
          goto LABEL_138;
        case 6:
          v10 = type metadata accessor for Proto_ActivationScaledTanh(0);
          goto LABEL_150;
        case 8:
          v10 = type metadata accessor for Proto_ActivationSigmoidHard(0);
          goto LABEL_150;
        case 9:
          v9 = type metadata accessor for Proto_ActivationELU(0);
          goto LABEL_132;
        case 12:
          v39 = sub_240F1C930();
          v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
          v101(a1, v39);
          v92 = type metadata accessor for Proto_ActivationParametricSoftplus(0);
          v93 = a1 + *(int *)(v92 + 20);
          v76 = type metadata accessor for Proto_WeightParams(0);
          if (!__swift_getEnumTagSinglePayload(v93, 1, v76))
          {
            swift_bridgeObjectRelease();
            sub_240BF6AE0(*(_QWORD *)(v93 + 8), *(_QWORD *)(v93 + 16));
            sub_240BF6AE0(*(_QWORD *)(v93 + 24), *(_QWORD *)(v93 + 32));
            sub_240BF6AE0(*(_QWORD *)(v93 + 40), *(_QWORD *)(v93 + 48));
            v101(v93 + *(int *)(v76 + 36), v39);
            v94 = v93 + *(int *)(v76 + 40);
            v95 = type metadata accessor for Proto_QuantizationParams(0);
            if (!__swift_getEnumTagSinglePayload(v94, 1, v95))
            {
              v96 = v94 + *(int *)(v95 + 20);
              v97 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
              if (!__swift_getEnumTagSinglePayload(v96, 1, v97))
              {
                v98 = swift_getEnumCaseMultiPayload();
                swift_bridgeObjectRelease();
                if (v98 == 1)
                {
                  v99 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
                  v100 = 5;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  v99 = type metadata accessor for Proto_LinearQuantizationParams(0);
                  v100 = 6;
                }
                v101(v96 + *(int *)(v99 + 4 * v100), v39);
              }
              v101(v94 + *(int *)(v95 + 24), v39);
            }
          }
          v75 = a1 + *(int *)(v92 + 24);
          goto LABEL_139;
        default:
          return result;
      }
      return result;
    case 45:
      v13 = type metadata accessor for Proto_UnaryFunctionLayerParams(0);
      goto LABEL_145;
    case 46:
      a1 += *(int *)(type metadata accessor for NeuralNetwork.Layer.ClipParameters() + 24);
      v10 = type metadata accessor for Proto_ClipLayerParams(0);
      goto LABEL_150;
    case 47:
      v9 = type metadata accessor for Proto_GeluLayerParams(0);
      goto LABEL_132;
    case 48:
      v10 = type metadata accessor for Proto_ClampedReLULayerParams(0);
      goto LABEL_150;
    case 49:
      v15 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(a1, v15);
      type metadata accessor for Proto_ConvolutionLayerParams(0);
      return swift_release();
    case 50:
      v16 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a1, v16);
      type metadata accessor for Proto_Convolution3DLayerParams(0);
      return swift_release();
    case 51:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v17 = type metadata accessor for Proto_PoolingLayerParams(0);
      v18 = a1 + *(int *)(v17 + 28);
      v19 = type metadata accessor for Proto_PoolingLayerParams.OneOf_PoolingPaddingType(0);
      if (__swift_getEnumTagSinglePayload(v18, 1, v19))
        goto LABEL_166;
      v20 = swift_getEnumCaseMultiPayload();
      switch(v20)
      {
        case 2:
          swift_bridgeObjectRelease();
          valid = type metadata accessor for Proto_PoolingLayerParams.ValidCompletePadding(0);
LABEL_165:
          v90 = v18 + *(int *)(valid + 20);
          v91 = sub_240F1C930();
          (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v91 - 8) + 8))(v90, v91);
          break;
        case 1:
          valid = type metadata accessor for Proto_SamePadding(0);
          goto LABEL_165;
        case 0:
          v21 = sub_240F1C930();
          v22 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 8);
          v22(v18, v21);
          v23 = v18 + *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
          v24 = type metadata accessor for Proto_BorderAmounts(0);
          if (!__swift_getEnumTagSinglePayload(v23, 1, v24))
          {
            swift_bridgeObjectRelease();
            v22(v23 + *(int *)(v24 + 20), v21);
          }
          break;
      }
LABEL_166:
      v12 = *(int *)(v17 + 40);
LABEL_154:
      a1 += v12;
LABEL_155:
      v83 = sub_240F1C930();
      v84 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 8);
      v85 = a1;
      return v84(v85, v83);
    case 52:
      v12 = *(int *)(type metadata accessor for Proto_Pooling3DLayerParams(0) + 76);
      goto LABEL_154;
    case 53:
      v9 = type metadata accessor for Proto_GlobalPooling3DLayerParams(0);
      goto LABEL_132;
    case 54:
      v9 = type metadata accessor for Proto_AddLayerParams(0);
      goto LABEL_132;
    case 55:
      v9 = type metadata accessor for Proto_MultiplyLayerParams(0);
      goto LABEL_132;
    case 60:
      v25 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 8))(a1, v25);
      type metadata accessor for Proto_BatchedMatMulLayerParams(0);
      return swift_release();
    case 61:
      v9 = type metadata accessor for Proto_DotProductLayerParams(0);
      goto LABEL_132;
    case 65:
      v26 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 8))(a1, v26);
      type metadata accessor for Proto_ScaleLayerParams(0);
      return swift_release();
    case 66:
      v27 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 8))(a1, v27);
      type metadata accessor for Proto_BatchnormLayerParams(0);
      return swift_release();
    case 68:
      v9 = type metadata accessor for Proto_SoftmaxNDLayerParams(0);
      goto LABEL_132;
    case 69:
      v8 = type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0);
      goto LABEL_148;
    case 70:
      v9 = type metadata accessor for Proto_L2NormalizeLayerParams(0);
      goto LABEL_132;
    case 71:
      v11 = type metadata accessor for Proto_LRNLayerParams(0);
      goto LABEL_153;
    case 72:
      v28 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 8))(a1, v28);
      type metadata accessor for Proto_LayerNormalizationLayerParams(0);
      return swift_release();
    case 73:
      swift_bridgeObjectRelease();
      v29 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
      v30 = a1 + v29[8];
      v31 = sub_240F1C930();
      v32 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v31 - 8) + 8);
      v32(v30, v31);
      v33 = a1 + v29[9];
      v34 = type metadata accessor for Proto_LSTMParams(0);
      if (!__swift_getEnumTagSinglePayload(v33, 1, v34))
        v32(v33 + *(int *)(v34 + 40), v31);
      v35 = a1 + v29[10];
      v36 = type metadata accessor for Proto_LSTMWeightParams(0);
      result = __swift_getEnumTagSinglePayload(v35, 1, v36);
      if ((_DWORD)result)
        return result;
      v32(v35, v31);
      return swift_release();
    case 74:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v37 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
      v38 = a1 + *(int *)(v37 + 36);
      v39 = sub_240F1C930();
      v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
      v101(v38, v39);
      v40 = a1 + *(int *)(v37 + 40);
      v41 = type metadata accessor for Proto_LSTMParams(0);
      result = __swift_getEnumTagSinglePayload(v40, 1, v41);
      if ((_DWORD)result)
        return result;
      v42 = *(int *)(v41 + 40);
      goto LABEL_170;
    case 75:
      v43 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v43 - 8) + 8))(a1, v43);
      type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
      return swift_release();
    case 76:
      v44 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v44 - 8) + 8))(a1, v44);
      type metadata accessor for Proto_GRULayerParams(0);
      return swift_release();
    case 77:
      swift_bridgeObjectRelease();
      v45 = type metadata accessor for Proto_CropLayerParams(0);
LABEL_159:
      v87 = v45;
      v88 = a1 + *(int *)(v45 + 20);
      v39 = sub_240F1C930();
      v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
      v101(v88, v39);
      v40 = a1 + *(int *)(v87 + 24);
      v53 = type metadata accessor for Proto_BorderAmounts(0);
      result = __swift_getEnumTagSinglePayload(v40, 1, v53);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      goto LABEL_162;
    case 78:
      swift_bridgeObjectRelease();
      v46 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
      v47 = a1 + *(int *)(v46 + 20);
      v39 = sub_240F1C930();
      v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
      v101(v47, v39);
      v40 = a1 + *(int *)(v46 + 24);
      v48 = type metadata accessor for Proto_SamplingMode(0);
      goto LABEL_85;
    case 79:
      swift_bridgeObjectRelease();
      v49 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
      v50 = a1 + v49[7];
      v39 = sub_240F1C930();
      v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
      v101(v50, v39);
      v51 = a1 + v49[8];
      v52 = type metadata accessor for Proto_SamplingMode(0);
      if (!__swift_getEnumTagSinglePayload(v51, 1, v52))
        v101(v51 + *(int *)(v52 + 20), v39);
      v40 = a1 + v49[9];
      v48 = type metadata accessor for Proto_BoxCoordinatesMode(0);
LABEL_85:
      v53 = v48;
      result = __swift_getEnumTagSinglePayload(v40, 1, v48);
      if ((_DWORD)result)
        return result;
LABEL_162:
      v42 = *(int *)(v53 + 20);
      goto LABEL_170;
    case 81:
      v8 = type metadata accessor for Proto_ReduceLayerParams(0);
      goto LABEL_148;
    case 82:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceL1LayerParams(0);
      goto LABEL_148;
    case 83:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceL2LayerParams(0);
      goto LABEL_148;
    case 84:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceMaxLayerParams(0);
      goto LABEL_148;
    case 85:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceMinLayerParams(0);
      goto LABEL_148;
    case 86:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceSumLayerParams(0);
      goto LABEL_148;
    case 87:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceProdLayerParams(0);
      goto LABEL_148;
    case 88:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceMeanLayerParams(0);
      goto LABEL_148;
    case 89:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceLogSumLayerParams(0);
      goto LABEL_148;
    case 90:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceSumSquareLayerParams(0);
      goto LABEL_148;
    case 91:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_ReduceLogSumExpLayerParams(0);
      goto LABEL_148;
    case 94:
      v8 = type metadata accessor for Proto_CumSumLayerParams(0);
      goto LABEL_148;
    case 95:
      v10 = type metadata accessor for Proto_ArgMinLayerParams(0);
      goto LABEL_150;
    case 96:
      v10 = type metadata accessor for Proto_ArgMaxLayerParams(0);
      goto LABEL_150;
    case 99:
      v54 = sub_240F1C930();
      v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8);
      v55(a1, v54);
      v56 = type metadata accessor for Proto_BranchLayerParams(0);
      v57 = a1 + *(int *)(v56 + 20);
      v58 = type metadata accessor for Proto_NeuralNetwork(0);
      if (!__swift_getEnumTagSinglePayload(v57, 1, v58))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v55(v57 + *(int *)(v58 + 32), v54);
        v59 = v57 + *(int *)(v58 + 36);
        updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (!__swift_getEnumTagSinglePayload(v59, 1, updated))
        {
          v55(v59, v54);
          swift_release();
        }
      }
      v61 = *(int *)(v56 + 24);
      goto LABEL_109;
    case 101:
      swift_bridgeObjectRelease();
      v62 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
      v63 = a1 + v62[6];
      v54 = sub_240F1C930();
      v55 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v54 - 8) + 8);
      v55(v63, v54);
      v64 = a1 + v62[7];
      v58 = type metadata accessor for Proto_NeuralNetwork(0);
      if (!__swift_getEnumTagSinglePayload(v64, 1, v58))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        v55(v64 + *(int *)(v58 + 32), v54);
        v65 = v64 + *(int *)(v58 + 36);
        v66 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (!__swift_getEnumTagSinglePayload(v65, 1, v66))
        {
          v55(v65, v54);
          swift_release();
        }
      }
      v61 = v62[8];
LABEL_109:
      v67 = a1 + v61;
      result = __swift_getEnumTagSinglePayload(v67, 1, v58);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v55(v67 + *(int *)(v58 + 32), v54);
      v68 = v67 + *(int *)(v58 + 36);
      v69 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      result = __swift_getEnumTagSinglePayload(v68, 1, v69);
      if ((_DWORD)result)
        return result;
      v55(v68, v54);
      return swift_release();
    case 104:
      v8 = type metadata accessor for Proto_RangeStaticLayerParams(0);
      goto LABEL_148;
    case 105:
      v10 = type metadata accessor for Proto_RangeDynamicLayerParams(0);
      goto LABEL_150;
    case 106:
      v9 = type metadata accessor for Proto_EqualLayerParams(0);
      goto LABEL_132;
    case 107:
      v9 = type metadata accessor for Proto_NotEqualLayerParams(0);
      goto LABEL_132;
    case 108:
      v9 = type metadata accessor for Proto_LessThanLayerParams(0);
      goto LABEL_132;
    case 109:
      v9 = type metadata accessor for Proto_LessEqualLayerParams(0);
      goto LABEL_132;
    case 110:
      v9 = type metadata accessor for Proto_GreaterThanLayerParams(0);
      goto LABEL_132;
    case 111:
      v9 = type metadata accessor for Proto_GreaterEqualLayerParams(0);
      goto LABEL_132;
    case 112:
      v8 = type metadata accessor for Proto_RandomNormalLikeLayerParams(0);
      goto LABEL_148;
    case 113:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for Proto_RandomNormalStaticLayerParams(0);
      goto LABEL_153;
    case 114:
      v8 = type metadata accessor for Proto_RandomNormalDynamicLayerParams(0);
      goto LABEL_148;
    case 115:
      v8 = type metadata accessor for Proto_RandomUniformLikeLayerParams(0);
      goto LABEL_148;
    case 116:
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for Proto_RandomUniformStaticLayerParams(0);
      goto LABEL_153;
    case 117:
      v8 = type metadata accessor for Proto_RandomUniformDynamicLayerParams(0);
      goto LABEL_148;
    case 118:
      v10 = type metadata accessor for Proto_RandomBernoulliLikeLayerParams(0);
      goto LABEL_150;
    case 119:
      swift_bridgeObjectRelease();
      v8 = type metadata accessor for Proto_RandomBernoulliStaticLayerParams(0);
      goto LABEL_148;
    case 120:
      v10 = type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(0);
      goto LABEL_150;
    case 121:
      v10 = type metadata accessor for Proto_MatrixBandPartLayerParams(0);
      goto LABEL_150;
    case 122:
      v9 = type metadata accessor for Proto_LowerTriangularLayerParams(0);
      goto LABEL_132;
    case 123:
      v9 = type metadata accessor for Proto_UpperTriangularLayerParams(0);
LABEL_132:
      v12 = *(int *)(v9 + 20);
      goto LABEL_154;
    case 124:
      v70 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v70 - 8) + 8))(a1, v70);
      type metadata accessor for Proto_EmbeddingLayerParams(0);
      return swift_release();
    case 125:
      v71 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v71 - 8) + 8))(a1, v71);
      type metadata accessor for Proto_EmbeddingNDLayerParams(0);
      return swift_release();
    case 126:
      swift_bridgeObjectRelease();
      ConstantLayerParams = type metadata accessor for Proto_BiasLayerParams(0);
LABEL_137:
      v72 = ConstantLayerParams;
      v73 = a1 + *(int *)(ConstantLayerParams + 20);
      v39 = sub_240F1C930();
      v101 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v39 - 8) + 8);
      v101(v73, v39);
      v74 = *(int *)(v72 + 24);
LABEL_138:
      v75 = a1 + v74;
      v76 = type metadata accessor for Proto_WeightParams(0);
LABEL_139:
      result = __swift_getEnumTagSinglePayload(v75, 1, v76);
      if ((_DWORD)result)
        return result;
      swift_bridgeObjectRelease();
      sub_240BF6AE0(*(_QWORD *)(v75 + 8), *(_QWORD *)(v75 + 16));
      sub_240BF6AE0(*(_QWORD *)(v75 + 24), *(_QWORD *)(v75 + 32));
      sub_240BF6AE0(*(_QWORD *)(v75 + 40), *(_QWORD *)(v75 + 48));
      v101(v75 + *(int *)(v76 + 36), v39);
      v40 = v75 + *(int *)(v76 + 40);
      v77 = type metadata accessor for Proto_QuantizationParams(0);
      result = __swift_getEnumTagSinglePayload(v40, 1, v77);
      if ((_DWORD)result)
        return result;
      v78 = v40 + *(int *)(v77 + 20);
      v79 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (!__swift_getEnumTagSinglePayload(v78, 1, v79))
      {
        v80 = swift_getEnumCaseMultiPayload();
        swift_bridgeObjectRelease();
        if (v80 == 1)
        {
          v81 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v82 = 5;
        }
        else
        {
          swift_bridgeObjectRelease();
          v81 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v82 = 6;
        }
        v101(v78 + *(int *)(v81 + 4 * v82), v39);
      }
      v42 = *(int *)(v77 + 24);
LABEL_170:
      v85 = v40 + v42;
      v83 = v39;
      v84 = (uint64_t (*)(uint64_t, uint64_t))v101;
      return v84(v85, v83);
    case 127:
      v13 = type metadata accessor for Proto_CategoricalDistributionLayerParams(0);
LABEL_145:
      v12 = *(int *)(v13 + 36);
      goto LABEL_154;
    case 128:
      v11 = type metadata accessor for Proto_OneHotLayerParams(0);
      goto LABEL_153;
    case 129:
      v8 = type metadata accessor for Proto_TopKLayerParams(0);
LABEL_148:
      v12 = *(int *)(v8 + 28);
      goto LABEL_154;
    case 130:
      v10 = type metadata accessor for Proto_ArgSortLayerParams(0);
LABEL_150:
      v12 = *(int *)(v10 + 24);
      goto LABEL_154;
    case 131:
      v11 = type metadata accessor for Proto_NonMaximumSuppressionLayerParams(0);
      goto LABEL_153;
    case 132:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v11 = type metadata accessor for Proto_CustomLayerParams(0);
LABEL_153:
      v12 = *(int *)(v11 + 32);
      goto LABEL_154;
    default:
      return result;
  }
}

_QWORD *_s4KindOwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t ConstantLayerParams;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ConstantNDLayerParams;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  char *v48;
  char *v49;
  uint64_t v50;
  void (*v51)(char *, char *, uint64_t);
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  void (*v60)(char *, char *, uint64_t);
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  char *v71;
  uint64_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  char *v78;
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  uint64_t v82;
  char *v83;
  char *v84;
  uint64_t v85;
  void (*v86)(char *, char *, uint64_t);
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  uint64_t v92;
  char *v93;
  char *v94;
  uint64_t v95;
  void (*v96)(char *, char *, uint64_t);
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  char *v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  char *v108;
  char *v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  uint64_t v112;
  char *v113;
  char *v114;
  uint64_t v115;
  void (*v116)(char *, char *, uint64_t);
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  void (*v126)(char *, char *, uint64_t);
  uint64_t v127;
  char *v128;
  char *v129;
  uint64_t v130;
  void (*v131)(char *, char *, uint64_t);
  uint64_t v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  char *v138;
  char *v139;
  uint64_t v140;
  uint64_t v141;
  char *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  void (*v173)(char *, char *, uint64_t);
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  void (*v179)(char *, char *, uint64_t);
  uint64_t v180;
  char *v181;
  char *v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  char *v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  char *v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  int *v215;
  uint64_t v216;
  _BYTE *v217;
  _BYTE *v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  char *v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  char *v241;
  uint64_t v242;
  uint64_t v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  uint64_t v247;
  char *v248;
  char *v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  uint64_t v264;
  int *v265;
  uint64_t v266;
  char *v267;
  char *v268;
  uint64_t v269;
  void (*v270)(char *, char *, uint64_t);
  uint64_t v271;
  _DWORD *v272;
  _DWORD *v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  uint64_t v278;
  char *v279;
  uint64_t v280;
  void (*v281)(char *, char *, uint64_t);
  uint64_t v282;
  _DWORD *v283;
  _DWORD *v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  char *v293;
  char *v294;
  uint64_t v295;
  void (*v296)(char *, char *, uint64_t);
  uint64_t v297;
  _QWORD *v298;
  _QWORD *v299;
  uint64_t v300;
  uint64_t v301;
  uint64_t v302;
  uint64_t v303;
  char *v304;
  char *v305;
  uint64_t v306;
  void (*v307)(char *, char *, uint64_t);
  uint64_t v308;
  _BYTE *v309;
  _BYTE *v310;
  uint64_t v311;
  uint64_t v312;
  int *v313;
  uint64_t v314;
  char *v315;
  char *v316;
  uint64_t v317;
  void (*v318)(char *, char *, uint64_t);
  uint64_t v319;
  _BYTE *v320;
  _BYTE *v321;
  uint64_t v322;
  uint64_t v323;
  uint64_t v324;
  char *v325;
  char *v326;
  uint64_t v327;
  uint64_t v328;
  char *v329;
  char *v330;
  uint64_t v331;
  void (*v332)(char *, char *, uint64_t);
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  void (*v337)(char *, char *, uint64_t);
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  void (*v342)(char *, char *, uint64_t);
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  void (*v347)(char *, char *, uint64_t);
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  void (*v352)(char *, char *, uint64_t);
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  void (*v357)(char *, char *, uint64_t);
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  void (*v362)(char *, char *, uint64_t);
  uint64_t v363;
  char *v364;
  char *v365;
  uint64_t v366;
  void (*v367)(char *, char *, uint64_t);
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  void (*v372)(char *, char *, uint64_t);
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  void (*v377)(char *, char *, uint64_t);
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  uint64_t v382;
  char *v383;
  char *v384;
  uint64_t v385;
  uint64_t v386;
  char *v387;
  char *v388;
  uint64_t v389;
  uint64_t v390;
  void (*v391)(char *, char *, uint64_t);
  uint64_t v392;
  uint64_t v393;
  _QWORD *v394;
  _QWORD *v395;
  uint64_t v396;
  uint64_t v397;
  int *v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  _QWORD *v404;
  _QWORD *v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  void (*v447)(char *, char *, uint64_t);
  uint64_t v448;
  char *v449;
  char *v450;
  uint64_t v451;
  uint64_t v452;
  char *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  char *v458;
  uint64_t v459;
  void (*v460)(char *, char *, uint64_t);
  uint64_t v461;
  char *v462;
  char *v463;
  uint64_t v464;
  uint64_t v465;
  char *v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  char *v471;
  uint64_t v472;
  void (*v473)(char *, char *, uint64_t);
  uint64_t v474;
  char *v475;
  char *v476;
  uint64_t v477;
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  uint64_t v482;
  char *v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  char *v487;
  char *v488;
  uint64_t v489;
  uint64_t v490;
  uint64_t v491;
  uint64_t v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  char *v496;
  char *v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  char *v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  char *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  char *v524;
  uint64_t v525;
  void (*v526)(char *, char *, uint64_t);
  uint64_t v527;
  unint64_t v528;
  uint64_t v529;
  unint64_t v530;
  uint64_t v531;
  unint64_t v532;
  uint64_t v533;
  _QWORD *v534;
  _QWORD *v535;
  uint64_t v536;
  uint64_t v537;
  unint64_t v538;
  uint64_t v539;
  unint64_t v540;
  uint64_t v541;
  unint64_t v542;
  uint64_t v543;
  int v544;
  uint64_t v545;
  int v546;
  uint64_t v547;
  _BYTE *v548;
  _BYTE *v549;
  uint64_t v550;
  uint64_t v551;
  char *v552;
  char *v553;
  uint64_t v554;
  uint64_t v555;
  uint64_t v556;
  char *v557;
  char *v558;
  uint64_t v559;
  _BYTE *v560;
  _BYTE *v561;
  uint64_t v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  char *v566;
  uint64_t v567;
  char *v568;
  char *v569;
  uint64_t v570;
  char *v571;
  char *v572;
  uint64_t updated;
  uint64_t v574;
  uint64_t v575;
  uint64_t v576;
  uint64_t v577;
  char *v578;
  char *v579;
  char *v580;
  uint64_t v581;
  char *v582;
  char *v583;
  uint64_t v584;
  uint64_t v585;
  uint64_t v586;
  unint64_t v587;
  uint64_t v588;
  unint64_t v589;
  uint64_t v590;
  unint64_t v591;
  uint64_t v592;
  uint64_t v593;
  uint64_t v594;
  _QWORD *v595;
  uint64_t v596;
  uint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  uint64_t v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  char *v606;
  char *v607;
  uint64_t v608;
  char *v609;
  char *v610;
  uint64_t v611;
  uint64_t v612;
  uint64_t v613;
  uint64_t v614;
  uint64_t v615;
  char *v616;
  char *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  char *v621;
  char *v622;
  uint64_t v623;
  uint64_t v624;
  uint64_t v625;
  char *v626;
  char *v627;
  uint64_t v628;
  void (*v629)(char *, char *, uint64_t);
  uint64_t v630;
  uint64_t v631;
  uint64_t v632;
  char *v633;
  char *v634;
  uint64_t v635;
  uint64_t v636;
  void (*v637)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v638;
  uint64_t v639;
  _QWORD *v640;
  uint64_t v641;
  uint64_t v642;
  int EnumCaseMultiPayload;
  int v644;
  uint64_t v645;
  char *v646;
  int v647;
  uint64_t v648;
  char *v649;
  uint64_t v650;
  char *v651;
  char *v652;
  uint64_t v653;
  uint64_t v654;
  char *v655;
  _QWORD *result;
  char *v657;
  char *v658;
  void (*v659)(char *, char *, uint64_t);
  char *v660;
  char *v661;
  uint64_t v662;
  uint64_t v663;
  _BYTE *v664;
  void (*v665)(char *, char *, uint64_t);
  char *__dstd;
  char *__dste;
  char *__dstf;
  void *__dst;
  char *__dstg;
  void (*__dsta)(char *, char *, uint64_t);
  _QWORD *__dstb;
  _BYTE *__dsth;
  _QWORD *__dstc;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      ConstantLayerParams = type metadata accessor for Proto_LoadConstantLayerParams(0);
      v7 = *(int *)(ConstantLayerParams + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      v12 = *(int *)(ConstantLayerParams + 24);
      v13 = (uint64_t)a1 + v12;
      v14 = (uint64_t)a2 + v12;
      v15 = type metadata accessor for Proto_WeightParams(0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15))
        goto LABEL_6;
      v527 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v528 = *(_QWORD *)(v14 + 16);
      swift_bridgeObjectRetain();
      sub_240BF5610(v527, v528);
      *(_QWORD *)(v13 + 8) = v527;
      *(_QWORD *)(v13 + 16) = v528;
      v529 = *(_QWORD *)(v14 + 24);
      v530 = *(_QWORD *)(v14 + 32);
      sub_240BF5610(v529, v530);
      *(_QWORD *)(v13 + 24) = v529;
      *(_QWORD *)(v13 + 32) = v530;
      v531 = *(_QWORD *)(v14 + 40);
      v532 = *(_QWORD *)(v14 + 48);
      sub_240BF5610(v531, v532);
      *(_QWORD *)(v13 + 40) = v531;
      *(_QWORD *)(v13 + 48) = v532;
      *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
      v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
      v533 = *(int *)(v15 + 40);
      v534 = (_QWORD *)(v13 + v533);
      v535 = (_QWORD *)(v14 + v533);
      v536 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v535, 1, v536))
        goto LABEL_152;
      *v534 = *v535;
      v594 = *(int *)(v536 + 20);
      v663 = (uint64_t)v534;
      __dstb = (_QWORD *)((char *)v534 + v594);
      v595 = (_QWORD *)((char *)v535 + v594);
      v596 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v595, 1, v596))
        goto LABEL_158;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *__dstb = *v595;
      if (EnumCaseMultiPayload == 1)
        goto LABEL_186;
      goto LABEL_192;
    case 1u:
      *a1 = *a2;
      ConstantNDLayerParams = type metadata accessor for Proto_LoadConstantNDLayerParams(0);
      v17 = *(int *)(ConstantNDLayerParams + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v18, v19, v10);
      v20 = *(int *)(ConstantNDLayerParams + 24);
      v13 = (uint64_t)a1 + v20;
      v14 = (uint64_t)a2 + v20;
      v15 = type metadata accessor for Proto_WeightParams(0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15))
        goto LABEL_6;
      v537 = *(_QWORD *)(v14 + 8);
      *(_QWORD *)v13 = *(_QWORD *)v14;
      v538 = *(_QWORD *)(v14 + 16);
      swift_bridgeObjectRetain();
      sub_240BF5610(v537, v538);
      *(_QWORD *)(v13 + 8) = v537;
      *(_QWORD *)(v13 + 16) = v538;
      v539 = *(_QWORD *)(v14 + 24);
      v540 = *(_QWORD *)(v14 + 32);
      sub_240BF5610(v539, v540);
      *(_QWORD *)(v13 + 24) = v539;
      *(_QWORD *)(v13 + 32) = v540;
      v541 = *(_QWORD *)(v14 + 40);
      v542 = *(_QWORD *)(v14 + 48);
      sub_240BF5610(v541, v542);
      *(_QWORD *)(v13 + 40) = v541;
      *(_QWORD *)(v13 + 48) = v542;
      *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
      v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
      v543 = *(int *)(v15 + 40);
      v534 = (_QWORD *)(v13 + v543);
      v535 = (_QWORD *)(v14 + v543);
      v536 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v535, 1, v536))
        goto LABEL_152;
      *v534 = *v535;
      v597 = *(int *)(v536 + 20);
      v663 = (uint64_t)v534;
      __dstb = (_QWORD *)((char *)v534 + v597);
      v595 = (_QWORD *)((char *)v535 + v597);
      v596 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v595, 1, v596))
        goto LABEL_158;
      v644 = swift_getEnumCaseMultiPayload();
      *__dstb = *v595;
      if (v644 == 1)
        goto LABEL_186;
      goto LABEL_192;
    case 2u:
      v22 = type metadata accessor for Proto_PaddingLayerParams.OneOf_PaddingType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v544 = swift_getEnumCaseMultiPayload();
        if (v544 == 2 || v544 == 1)
        {
          v545 = sub_240F1C930();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v545 - 8) + 16))(a1, a2, v545);
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v620 = *(int *)(type metadata accessor for Proto_PaddingLayerParams.PaddingConstant(0) + 20);
          v621 = (char *)a1 + v620;
          v622 = (char *)a2 + v620;
          v623 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v623 - 8) + 16))(v621, v622, v623);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v22);
      }
      v624 = type metadata accessor for Proto_PaddingLayerParams(0);
      v625 = *(int *)(v624 + 20);
      v626 = (char *)a1 + v625;
      v627 = (char *)a2 + v625;
      v628 = sub_240F1C930();
      v629 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v628 - 8) + 16);
      v629(v626, v627, v628);
      v630 = *(int *)(v624 + 24);
      v298 = (_QWORD *)((char *)a1 + v630);
      v299 = (_QWORD *)((char *)a2 + v630);
      v631 = type metadata accessor for Proto_BorderAmounts(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v299, 1, v631))
        goto LABEL_75;
      *v298 = *v299;
      v632 = *(int *)(v631 + 20);
      v633 = (char *)v298 + v632;
      v634 = (char *)v299 + v632;
      swift_bridgeObjectRetain();
      v629(v633, v634, v628);
      __swift_storeEnumTagSinglePayload((uint64_t)v298, 0, 1, v631);
      goto LABEL_196;
    case 3u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v24 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_240F1C930();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
      swift_bridgeObjectRetain();
      v28(v25, v26, v27);
      goto LABEL_196;
    case 4u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v29 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
      v30 = (char *)a1 + v29;
      v31 = (char *)a2 + v29;
      v32 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
      goto LABEL_196;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v33 = *(int *)(type metadata accessor for Proto_ConcatNDLayerParams(0) + 24);
      v34 = (char *)a1 + v33;
      v35 = (char *)a2 + v33;
      v36 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
      goto LABEL_196;
    case 6u:
      *a1 = *a2;
      v37 = *(int *)(type metadata accessor for Proto_SplitLayerParams(0) + 20);
      v38 = (char *)a1 + v37;
      v39 = (char *)a2 + v37;
      v40 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
      goto LABEL_196;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v41 = *(int *)(type metadata accessor for Proto_SplitNDLayerParams(0) + 28);
      v42 = (char *)a1 + v41;
      v43 = (char *)a2 + v41;
      v44 = sub_240F1C930();
      v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
      swift_bridgeObjectRetain();
      v45(v42, v43, v44);
      goto LABEL_196;
    case 8u:
      v46 = a2[1];
      *a1 = *a2;
      a1[1] = v46;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      a1[4] = a2[4];
      *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
      v47 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
      v48 = (char *)a1 + v47;
      v49 = (char *)a2 + v47;
      v50 = sub_240F1C930();
      v51 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v50 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v51(v48, v49, v50);
      goto LABEL_196;
    case 9u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v52 = *(int *)(type metadata accessor for Proto_FillLikeLayerParams(0) + 20);
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 16))(v53, v54, v55);
      goto LABEL_196;
    case 0xAu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      v56 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_240F1C930();
      v60 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 16);
      swift_bridgeObjectRetain();
      v60(v57, v58, v59);
      goto LABEL_196;
    case 0xBu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v61 = *(int *)(type metadata accessor for Proto_FillDynamicLayerParams(0) + 20);
      v62 = (char *)a1 + v61;
      v63 = (char *)a2 + v61;
      v64 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v64 - 8) + 16))(v62, v63, v64);
      goto LABEL_196;
    case 0xCu:
      *a1 = *a2;
      v65 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
      v66 = (char *)a1 + v65;
      v67 = (char *)a2 + v65;
      v68 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v68 - 8) + 16))(v66, v67, v68);
      goto LABEL_196;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v69 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
      v70 = (char *)a1 + v69;
      v71 = (char *)a2 + v69;
      v72 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v72 - 8) + 16))(v70, v71, v72);
      goto LABEL_196;
    case 0xEu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      a1[2] = a2[2];
      v73 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
      v74 = (char *)a1 + v73;
      v75 = (char *)a2 + v73;
      v76 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v76 - 8) + 16))(v74, v75, v76);
      goto LABEL_196;
    case 0xFu:
      *a1 = *a2;
      v77 = *(int *)(type metadata accessor for Proto_TileLayerParams(0) + 20);
      v78 = (char *)a1 + v77;
      v79 = (char *)a2 + v77;
      v80 = sub_240F1C930();
      v81 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v80 - 8) + 16);
      swift_bridgeObjectRetain();
      v81(v78, v79, v80);
      goto LABEL_196;
    case 0x10u:
      *a1 = *a2;
      v82 = *(int *)(type metadata accessor for Proto_ReverseLayerParams(0) + 20);
      v83 = (char *)a1 + v82;
      v84 = (char *)a2 + v82;
      v85 = sub_240F1C930();
      v86 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v85 - 8) + 16);
      swift_bridgeObjectRetain();
      v86(v83, v84, v85);
      goto LABEL_196;
    case 0x11u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v87 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
      v88 = (char *)a1 + v87;
      v89 = (char *)a2 + v87;
      v90 = sub_240F1C930();
      v91 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v90 - 8) + 16);
      swift_bridgeObjectRetain();
      v91(v88, v89, v90);
      goto LABEL_196;
    case 0x12u:
      *a1 = *a2;
      v92 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
      v93 = (char *)a1 + v92;
      v94 = (char *)a2 + v92;
      v95 = sub_240F1C930();
      v96 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v95 - 8) + 16);
      swift_bridgeObjectRetain();
      v96(v93, v94, v95);
      goto LABEL_196;
    case 0x13u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v97 = *(int *)(type metadata accessor for Proto_FlattenLayerParams(0) + 20);
      v98 = (char *)a1 + v97;
      v99 = (char *)a2 + v97;
      v100 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 16))(v98, v99, v100);
      goto LABEL_196;
    case 0x14u:
      v101 = a2[1];
      *a1 = *a2;
      a1[1] = v101;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v102 = *(int *)(type metadata accessor for Proto_ReshapeLayerParams(0) + 24);
      v103 = (char *)a1 + v102;
      v104 = (char *)a2 + v102;
      v105 = sub_240F1C930();
      v106 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v105 - 8) + 16);
      swift_bridgeObjectRetain();
      v106(v103, v104, v105);
      goto LABEL_196;
    case 0x15u:
      *a1 = *a2;
      v107 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
      v108 = (char *)a1 + v107;
      v109 = (char *)a2 + v107;
      v110 = sub_240F1C930();
      v111 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v110 - 8) + 16);
      swift_bridgeObjectRetain();
      v111(v108, v109, v110);
      goto LABEL_196;
    case 0x16u:
      *a1 = *a2;
      v112 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
      v113 = (char *)a1 + v112;
      v114 = (char *)a2 + v112;
      v115 = sub_240F1C930();
      v116 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v115 - 8) + 16);
      swift_bridgeObjectRetain();
      v116(v113, v114, v115);
      goto LABEL_196;
    case 0x17u:
      *a1 = *a2;
      v117 = *(int *)(type metadata accessor for Proto_PermuteLayerParams(0) + 20);
      v118 = (char *)a1 + v117;
      v119 = (char *)a2 + v117;
      v120 = sub_240F1C930();
      v121 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 16);
      swift_bridgeObjectRetain();
      v121(v118, v119, v120);
      goto LABEL_196;
    case 0x18u:
      *a1 = *a2;
      v122 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
      v123 = (char *)a1 + v122;
      v124 = (char *)a2 + v122;
      v125 = sub_240F1C930();
      v126 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 16);
      swift_bridgeObjectRetain();
      v126(v123, v124, v125);
      goto LABEL_196;
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
    case 0x21u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Bu:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x43u:
    case 0x50u:
    case 0x5Cu:
    case 0x5Du:
    case 0x61u:
    case 0x62u:
    case 0x64u:
    case 0x66u:
    case 0x67u:
      v136 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v136 - 8) + 16))(a1, a2, v136);
      goto LABEL_196;
    case 0x1Au:
      *a1 = *a2;
      v127 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
      v128 = (char *)a1 + v127;
      v129 = (char *)a2 + v127;
      v130 = sub_240F1C930();
      v131 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v130 - 8) + 16);
      swift_bridgeObjectRetain();
      v131(v128, v129, v130);
      goto LABEL_196;
    case 0x1Cu:
      *a1 = *a2;
      v132 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
      v133 = (char *)a1 + v132;
      v134 = (char *)a2 + v132;
      v135 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v135 - 8) + 16))(v133, v134, v135);
      goto LABEL_196;
    case 0x1Fu:
      *a1 = *a2;
      v137 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
      v138 = (char *)a1 + v137;
      v139 = (char *)a2 + v137;
      v140 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v140 - 8) + 16))(v138, v139, v140);
      goto LABEL_196;
    case 0x20u:
      *a1 = *a2;
      v141 = *(int *)(type metadata accessor for Proto_GatherLayerParams(0) + 20);
      v142 = (char *)a1 + v141;
      v143 = (char *)a2 + v141;
      v144 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v144 - 8) + 16))(v142, v143, v144);
      goto LABEL_196;
    case 0x22u:
      *a1 = *a2;
      v145 = *(int *)(type metadata accessor for Proto_GatherAlongAxisLayerParams(0) + 20);
      v146 = (char *)a1 + v145;
      v147 = (char *)a2 + v145;
      v148 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v148 - 8) + 16))(v146, v147, v148);
      goto LABEL_196;
    case 0x23u:
      v149 = a2[1];
      *a1 = *a2;
      a1[1] = v149;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v150 = *(int *)(type metadata accessor for Proto_ScatterLayerParams(0) + 24);
      v151 = (char *)a1 + v150;
      v152 = (char *)a2 + v150;
      v153 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v153 - 8) + 16))(v151, v152, v153);
      goto LABEL_196;
    case 0x24u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v154 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
      v155 = (char *)a1 + v154;
      v156 = (char *)a2 + v154;
      v157 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 16))(v155, v156, v157);
      goto LABEL_196;
    case 0x25u:
      v158 = a2[1];
      *a1 = *a2;
      a1[1] = v158;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v159 = *(int *)(type metadata accessor for Proto_ScatterAlongAxisLayerParams(0) + 24);
      v160 = (char *)a1 + v159;
      v161 = (char *)a2 + v159;
      v162 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 16))(v160, v161, v162);
      goto LABEL_196;
    case 0x26u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v163 = a2[3];
      a1[2] = a2[2];
      a1[3] = v163;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v164 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
      v165 = (char *)a1 + v164;
      v166 = (char *)a2 + v164;
      v167 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v167 - 8) + 16))(v165, v166, v167);
      goto LABEL_196;
    case 0x27u:
      v168 = a2[1];
      *a1 = *a2;
      a1[1] = v168;
      v169 = a2[3];
      a1[2] = a2[2];
      a1[3] = v169;
      v170 = a2[5];
      a1[4] = a2[4];
      a1[5] = v170;
      v171 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
      v661 = (char *)a2 + v171;
      __dstd = (char *)a1 + v171;
      v172 = sub_240F1C930();
      v173 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v172 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v173(__dstd, v661, v172);
      goto LABEL_196;
    case 0x28u:
      v174 = a2[1];
      *a1 = *a2;
      a1[1] = v174;
      v175 = a2[3];
      a1[2] = a2[2];
      a1[3] = v175;
      a1[4] = a2[4];
      v176 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
      v177 = (char *)a1 + v176;
      __dste = (char *)a2 + v176;
      v178 = sub_240F1C930();
      v179 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v178 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v179(v177, __dste, v178);
      goto LABEL_196;
    case 0x29u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v180 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
      v181 = (char *)a1 + v180;
      v182 = (char *)a2 + v180;
      v183 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v183 - 8) + 16))(v181, v182, v183);
      goto LABEL_196;
    case 0x2Au:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v184 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
      v185 = (char *)a1 + v184;
      v186 = (char *)a2 + v184;
      v187 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(v185, v186, v187);
      goto LABEL_196;
    case 0x2Bu:
      v188 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v188 - 8) + 16))(a1, a2, v188);
      v189 = type metadata accessor for Proto_InnerProductLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v189 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v189 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x2Cu:
      type metadata accessor for NeuralNetwork.Layer.Activation(0);
      v190 = (char *)&loc_240C1388C + 4 * word_240F1E1E6[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x2Du:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
      v191 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
      v192 = (char *)a1 + v191;
      v193 = (char *)a2 + v191;
      v194 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v192, v193, v194);
      goto LABEL_196;
    case 0x2Eu:
      *a1 = *a2;
      v195 = *(int *)(type metadata accessor for NeuralNetwork.Layer.ClipParameters() + 24);
      v196 = (char *)a1 + v195;
      v197 = (char *)a2 + v195;
      *(_QWORD *)((char *)a1 + v195) = *(_QWORD *)((char *)a2 + v195);
      v198 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
      v199 = &v196[v198];
      v200 = &v197[v198];
      v201 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v199, v200, v201);
      goto LABEL_196;
    case 0x2Fu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v202 = *(int *)(type metadata accessor for Proto_GeluLayerParams(0) + 20);
      v203 = (char *)a1 + v202;
      v204 = (char *)a2 + v202;
      v205 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v205 - 8) + 16))(v203, v204, v205);
      goto LABEL_196;
    case 0x30u:
      *a1 = *a2;
      v206 = *(int *)(type metadata accessor for Proto_ClampedReLULayerParams(0) + 24);
      v207 = (char *)a1 + v206;
      v208 = (char *)a2 + v206;
      v209 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v209 - 8) + 16))(v207, v208, v209);
      goto LABEL_196;
    case 0x31u:
      v210 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(a1, a2, v210);
      v211 = type metadata accessor for Proto_ConvolutionLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v211 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v211 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x32u:
      v212 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v212 - 8) + 16))(a1, a2, v212);
      v213 = type metadata accessor for Proto_Convolution3DLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v213 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v213 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x33u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v214 = a2[3];
      a1[2] = a2[2];
      a1[3] = v214;
      v215 = (int *)type metadata accessor for Proto_PoolingLayerParams(0);
      v216 = v215[7];
      v217 = (char *)a1 + v216;
      v218 = (char *)a2 + v216;
      v219 = type metadata accessor for Proto_PoolingLayerParams.OneOf_PoolingPaddingType(0);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (__swift_getEnumTagSinglePayload((uint64_t)v218, 1, v219))
      {
        v220 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C200);
        memcpy(v217, v218, *(_QWORD *)(*(_QWORD *)(v220 - 8) + 64));
      }
      else
      {
        v546 = swift_getEnumCaseMultiPayload();
        if (v546 == 2)
        {
          *(_QWORD *)v217 = *(_QWORD *)v218;
          v635 = *(int *)(type metadata accessor for Proto_PoolingLayerParams.ValidCompletePadding(0) + 20);
          v664 = &v218[v635];
          __dsth = &v217[v635];
          v636 = sub_240F1C930();
          v637 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v636 - 8) + 16);
          swift_bridgeObjectRetain();
          v637(__dsth, v664, v636);
        }
        else if (v546 == 1)
        {
          *(_QWORD *)v217 = *(_QWORD *)v218;
          v217[8] = v218[8];
          v547 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
          v548 = &v217[v547];
          v549 = &v218[v547];
          v550 = sub_240F1C930();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v550 - 8) + 16))(v548, v549, v550);
        }
        else
        {
          v638 = sub_240F1C930();
          v665 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v638 - 8) + 16);
          v665(v217, v218, v638);
          v639 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
          __dstc = &v217[v639];
          v640 = &v218[v639];
          v641 = type metadata accessor for Proto_BorderAmounts(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v640, 1, v641))
          {
            v642 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
            memcpy(__dstc, v640, *(_QWORD *)(*(_QWORD *)(v642 - 8) + 64));
          }
          else
          {
            *__dstc = *v640;
            v648 = *(int *)(v641 + 20);
            v660 = (char *)__dstc + v648;
            v649 = (char *)v640 + v648;
            swift_bridgeObjectRetain();
            v665(v660, v649, v638);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v641);
          }
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v217, 0, 1, v219);
      }
      *((_BYTE *)a1 + v215[8]) = *((_BYTE *)a2 + v215[8]);
      *((_BYTE *)a1 + v215[9]) = *((_BYTE *)a2 + v215[9]);
      v650 = v215[10];
      v651 = (char *)a1 + v650;
      v652 = (char *)a2 + v650;
      v653 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v653 - 8) + 16))(v651, v652, v653);
      goto LABEL_196;
    case 0x34u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
      *(_QWORD *)((char *)a1 + 28) = *(_QWORD *)((char *)a2 + 28);
      a1[5] = a2[5];
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      *(_OWORD *)((char *)a1 + 52) = *(_OWORD *)((char *)a2 + 52);
      *(_QWORD *)((char *)a1 + 68) = *(_QWORD *)((char *)a2 + 68);
      *((_BYTE *)a1 + 76) = *((_BYTE *)a2 + 76);
      v221 = *(int *)(type metadata accessor for Proto_Pooling3DLayerParams(0) + 76);
      v222 = (char *)a1 + v221;
      v223 = (char *)a2 + v221;
      v224 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 16))(v222, v223, v224);
      goto LABEL_196;
    case 0x35u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v225 = *(int *)(type metadata accessor for Proto_GlobalPooling3DLayerParams(0) + 20);
      v226 = (char *)a1 + v225;
      v227 = (char *)a2 + v225;
      v228 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v228 - 8) + 16))(v226, v227, v228);
      goto LABEL_196;
    case 0x36u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v229 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
      v230 = (char *)a1 + v229;
      v231 = (char *)a2 + v229;
      v232 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v230, v231, v232);
      goto LABEL_196;
    case 0x37u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v233 = *(int *)(type metadata accessor for Proto_MultiplyLayerParams(0) + 20);
      v234 = (char *)a1 + v233;
      v235 = (char *)a2 + v233;
      v236 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16))(v234, v235, v236);
      goto LABEL_196;
    case 0x3Cu:
      v237 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v237 - 8) + 16))(a1, a2, v237);
      v238 = type metadata accessor for Proto_BatchedMatMulLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v238 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v238 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x3Du:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v239 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
      v240 = (char *)a1 + v239;
      v241 = (char *)a2 + v239;
      v242 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v242 - 8) + 16))(v240, v241, v242);
      goto LABEL_196;
    case 0x41u:
      v243 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v243 - 8) + 16))(a1, a2, v243);
      v244 = type metadata accessor for Proto_ScaleLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v244 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v244 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x42u:
      v245 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v245 - 8) + 16))(a1, a2, v245);
      v246 = type metadata accessor for Proto_BatchnormLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v246 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v246 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x44u:
      *a1 = *a2;
      v247 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
      v248 = (char *)a1 + v247;
      v249 = (char *)a2 + v247;
      v250 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v250 - 8) + 16))(v248, v249, v250);
      goto LABEL_196;
    case 0x45u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
      v251 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
      v252 = (char *)a1 + v251;
      v253 = (char *)a2 + v251;
      v254 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v252, v253, v254);
      goto LABEL_196;
    case 0x46u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v255 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
      v256 = (char *)a1 + v255;
      v257 = (char *)a2 + v255;
      v258 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(v256, v257, v258);
      goto LABEL_196;
    case 0x47u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      v259 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
      v260 = (char *)a1 + v259;
      v261 = (char *)a2 + v259;
      v262 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(v260, v261, v262);
      goto LABEL_196;
    case 0x48u:
      v263 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v263 - 8) + 16))(a1, a2, v263);
      v264 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v264 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v264 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x49u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v265 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
      v266 = v265[8];
      v267 = (char *)a1 + v266;
      v268 = (char *)a2 + v266;
      v269 = sub_240F1C930();
      v270 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v269 - 8) + 16);
      swift_bridgeObjectRetain();
      v270(v267, v268, v269);
      v271 = v265[9];
      v272 = (_DWORD *)((char *)a1 + v271);
      v273 = (_DWORD *)((char *)a2 + v271);
      v274 = type metadata accessor for Proto_LSTMParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v273, 1, v274))
      {
        v275 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
        memcpy(v272, v273, *(_QWORD *)(*(_QWORD *)(v275 - 8) + 64));
      }
      else
      {
        *v272 = *v273;
        *((_BYTE *)v272 + 4) = *((_BYTE *)v273 + 4);
        v272[2] = v273[2];
        v270((char *)v272 + *(int *)(v274 + 40), (char *)v273 + *(int *)(v274 + 40), v269);
        __swift_storeEnumTagSinglePayload((uint64_t)v272, 0, 1, v274);
      }
      v551 = v265[10];
      v552 = (char *)a1 + v551;
      v553 = (char *)a2 + v551;
      v554 = type metadata accessor for Proto_LSTMWeightParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v553, 1, v554))
      {
        v555 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
        memcpy(v552, v553, *(_QWORD *)(*(_QWORD *)(v555 - 8) + 64));
      }
      else
      {
        v270(v552, v553, v269);
        *(_QWORD *)&v552[*(int *)(v554 + 20)] = *(_QWORD *)&v553[*(int *)(v554 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v552, 0, 1, v554);
      }
      goto LABEL_196;
    case 0x4Au:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v276 = a2[3];
      a1[2] = a2[2];
      a1[3] = v276;
      a1[4] = a2[4];
      v277 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
      v278 = *(int *)(v277 + 36);
      __dstf = (char *)a1 + v278;
      v279 = (char *)a2 + v278;
      v280 = sub_240F1C930();
      v281 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v280 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v281(__dstf, v279, v280);
      v282 = *(int *)(v277 + 40);
      v283 = (_DWORD *)((char *)a1 + v282);
      v284 = (_DWORD *)((char *)a2 + v282);
      v285 = type metadata accessor for Proto_LSTMParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v284, 1, v285))
      {
        v286 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
        memcpy(v283, v284, *(_QWORD *)(*(_QWORD *)(v286 - 8) + 64));
      }
      else
      {
        *v283 = *v284;
        *((_BYTE *)v283 + 4) = *((_BYTE *)v284 + 4);
        v283[2] = v284[2];
        v281((char *)v283 + *(int *)(v285 + 40), (char *)v284 + *(int *)(v285 + 40), v280);
        __swift_storeEnumTagSinglePayload((uint64_t)v283, 0, 1, v285);
      }
      goto LABEL_196;
    case 0x4Bu:
      v287 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v287 - 8) + 16))(a1, a2, v287);
      v288 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v288 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v288 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x4Cu:
      v289 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v289 - 8) + 16))(a1, a2, v289);
      v290 = type metadata accessor for Proto_GRULayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v290 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v290 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x4Du:
      *a1 = *a2;
      v291 = type metadata accessor for Proto_CropLayerParams(0);
      v292 = *(int *)(v291 + 20);
      v293 = (char *)a1 + v292;
      v294 = (char *)a2 + v292;
      v295 = sub_240F1C930();
      v296 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v295 - 8) + 16);
      swift_bridgeObjectRetain();
      v296(v293, v294, v295);
      v297 = *(int *)(v291 + 24);
      v298 = (_QWORD *)((char *)a1 + v297);
      v299 = (_QWORD *)((char *)a2 + v297);
      v300 = type metadata accessor for Proto_BorderAmounts(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v299, 1, v300))
      {
LABEL_75:
        v301 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
        memcpy(v298, v299, *(_QWORD *)(*(_QWORD *)(v301 - 8) + 64));
      }
      else
      {
        *v298 = *v299;
        v556 = *(int *)(v300 + 20);
        v557 = (char *)v298 + v556;
        v558 = (char *)v299 + v556;
        swift_bridgeObjectRetain();
        v296(v557, v558, v295);
        __swift_storeEnumTagSinglePayload((uint64_t)v298, 0, 1, v300);
      }
      goto LABEL_196;
    case 0x4Eu:
      *a1 = *a2;
      v302 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
      v303 = *(int *)(v302 + 20);
      v304 = (char *)a1 + v303;
      v305 = (char *)a2 + v303;
      v306 = sub_240F1C930();
      v307 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v306 - 8) + 16);
      swift_bridgeObjectRetain();
      v307(v304, v305, v306);
      v308 = *(int *)(v302 + 24);
      v309 = (char *)a1 + v308;
      v310 = (char *)a2 + v308;
      v311 = type metadata accessor for Proto_SamplingMode(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v310, 1, v311))
      {
        v312 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
        memcpy(v309, v310, *(_QWORD *)(*(_QWORD *)(v312 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v309 = *(_QWORD *)v310;
        v309[8] = v310[8];
        v307(&v309[*(int *)(v311 + 20)], &v310[*(int *)(v311 + 20)], v306);
        __swift_storeEnumTagSinglePayload((uint64_t)v309, 0, 1, v311);
      }
      goto LABEL_196;
    case 0x4Fu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
      v313 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
      v314 = v313[7];
      v315 = (char *)a1 + v314;
      v316 = (char *)a2 + v314;
      v317 = sub_240F1C930();
      v318 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v317 - 8) + 16);
      swift_bridgeObjectRetain();
      v318(v315, v316, v317);
      v319 = v313[8];
      v320 = (char *)a1 + v319;
      v321 = (char *)a2 + v319;
      v322 = type metadata accessor for Proto_SamplingMode(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v321, 1, v322))
      {
        v323 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
        memcpy(v320, v321, *(_QWORD *)(*(_QWORD *)(v323 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v320 = *(_QWORD *)v321;
        v320[8] = v321[8];
        v318(&v320[*(int *)(v322 + 20)], &v321[*(int *)(v322 + 20)], v317);
        __swift_storeEnumTagSinglePayload((uint64_t)v320, 0, 1, v322);
      }
      v559 = v313[9];
      v560 = (char *)a1 + v559;
      v561 = (char *)a2 + v559;
      v562 = type metadata accessor for Proto_BoxCoordinatesMode(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v561, 1, v562))
      {
        v563 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
        memcpy(v560, v561, *(_QWORD *)(*(_QWORD *)(v563 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v560 = *(_QWORD *)v561;
        v560[8] = v561[8];
        v318(&v560[*(int *)(v562 + 20)], &v561[*(int *)(v562 + 20)], v317);
        __swift_storeEnumTagSinglePayload((uint64_t)v560, 0, 1, v562);
      }
      goto LABEL_196;
    case 0x51u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v324 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
      v325 = (char *)a1 + v324;
      v326 = (char *)a2 + v324;
      v327 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v327 - 8) + 16))(v325, v326, v327);
      goto LABEL_196;
    case 0x52u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v328 = *(int *)(type metadata accessor for Proto_ReduceL1LayerParams(0) + 28);
      v329 = (char *)a1 + v328;
      v330 = (char *)a2 + v328;
      v331 = sub_240F1C930();
      v332 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v331 - 8) + 16);
      swift_bridgeObjectRetain();
      v332(v329, v330, v331);
      goto LABEL_196;
    case 0x53u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v333 = *(int *)(type metadata accessor for Proto_ReduceL2LayerParams(0) + 28);
      v334 = (char *)a1 + v333;
      v335 = (char *)a2 + v333;
      v336 = sub_240F1C930();
      v337 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v336 - 8) + 16);
      swift_bridgeObjectRetain();
      v337(v334, v335, v336);
      goto LABEL_196;
    case 0x54u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v338 = *(int *)(type metadata accessor for Proto_ReduceMaxLayerParams(0) + 28);
      v339 = (char *)a1 + v338;
      v340 = (char *)a2 + v338;
      v341 = sub_240F1C930();
      v342 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 16);
      swift_bridgeObjectRetain();
      v342(v339, v340, v341);
      goto LABEL_196;
    case 0x55u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v343 = *(int *)(type metadata accessor for Proto_ReduceMinLayerParams(0) + 28);
      v344 = (char *)a1 + v343;
      v345 = (char *)a2 + v343;
      v346 = sub_240F1C930();
      v347 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 16);
      swift_bridgeObjectRetain();
      v347(v344, v345, v346);
      goto LABEL_196;
    case 0x56u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v348 = *(int *)(type metadata accessor for Proto_ReduceSumLayerParams(0) + 28);
      v349 = (char *)a1 + v348;
      v350 = (char *)a2 + v348;
      v351 = sub_240F1C930();
      v352 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v351 - 8) + 16);
      swift_bridgeObjectRetain();
      v352(v349, v350, v351);
      goto LABEL_196;
    case 0x57u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v353 = *(int *)(type metadata accessor for Proto_ReduceProdLayerParams(0) + 28);
      v354 = (char *)a1 + v353;
      v355 = (char *)a2 + v353;
      v356 = sub_240F1C930();
      v357 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 16);
      swift_bridgeObjectRetain();
      v357(v354, v355, v356);
      goto LABEL_196;
    case 0x58u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v358 = *(int *)(type metadata accessor for Proto_ReduceMeanLayerParams(0) + 28);
      v359 = (char *)a1 + v358;
      v360 = (char *)a2 + v358;
      v361 = sub_240F1C930();
      v362 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 16);
      swift_bridgeObjectRetain();
      v362(v359, v360, v361);
      goto LABEL_196;
    case 0x59u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v363 = *(int *)(type metadata accessor for Proto_ReduceLogSumLayerParams(0) + 28);
      v364 = (char *)a1 + v363;
      v365 = (char *)a2 + v363;
      v366 = sub_240F1C930();
      v367 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v366 - 8) + 16);
      swift_bridgeObjectRetain();
      v367(v364, v365, v366);
      goto LABEL_196;
    case 0x5Au:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v368 = *(int *)(type metadata accessor for Proto_ReduceSumSquareLayerParams(0) + 28);
      v369 = (char *)a1 + v368;
      v370 = (char *)a2 + v368;
      v371 = sub_240F1C930();
      v372 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v371 - 8) + 16);
      swift_bridgeObjectRetain();
      v372(v369, v370, v371);
      goto LABEL_196;
    case 0x5Bu:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v373 = *(int *)(type metadata accessor for Proto_ReduceLogSumExpLayerParams(0) + 28);
      v374 = (char *)a1 + v373;
      v375 = (char *)a2 + v373;
      v376 = sub_240F1C930();
      v377 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 16);
      swift_bridgeObjectRetain();
      v377(v374, v375, v376);
      goto LABEL_196;
    case 0x5Eu:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v378 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
      v379 = (char *)a1 + v378;
      v380 = (char *)a2 + v378;
      v381 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 16))(v379, v380, v381);
      goto LABEL_196;
    case 0x5Fu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v382 = *(int *)(type metadata accessor for Proto_ArgMinLayerParams(0) + 24);
      v383 = (char *)a1 + v382;
      v384 = (char *)a2 + v382;
      v385 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v385 - 8) + 16))(v383, v384, v385);
      goto LABEL_196;
    case 0x60u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v386 = *(int *)(type metadata accessor for Proto_ArgMaxLayerParams(0) + 24);
      v387 = (char *)a1 + v386;
      v388 = (char *)a2 + v386;
      v389 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v389 - 8) + 16))(v387, v388, v389);
      goto LABEL_196;
    case 0x63u:
      v390 = sub_240F1C930();
      v391 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 16);
      v391((char *)a1, (char *)a2, v390);
      v392 = type metadata accessor for Proto_BranchLayerParams(0);
      v393 = *(int *)(v392 + 20);
      v394 = (_QWORD *)((char *)a1 + v393);
      v395 = (_QWORD *)((char *)a2 + v393);
      v396 = type metadata accessor for Proto_NeuralNetwork(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v395, 1, v396))
      {
        v397 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
        memcpy(v394, v395, *(_QWORD *)(*(_QWORD *)(v397 - 8) + 64));
      }
      else
      {
        __dst = (void *)v392;
        v564 = v395[1];
        *v394 = *v395;
        v394[1] = v564;
        v394[2] = v395[2];
        *((_BYTE *)v394 + 24) = *((_BYTE *)v395 + 24);
        v394[4] = v395[4];
        *((_BYTE *)v394 + 40) = *((_BYTE *)v395 + 40);
        v565 = *(int *)(v396 + 32);
        v659 = v391;
        v566 = (char *)v394 + v565;
        v567 = v390;
        v568 = (char *)v395 + v565;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v569 = v568;
        v390 = v567;
        v659(v566, v569, v567);
        v570 = *(int *)(v396 + 36);
        v571 = (char *)v394 + v570;
        v572 = (char *)v395 + v570;
        updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v572, 1, updated))
        {
          v574 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
          memcpy(v571, v572, *(_QWORD *)(*(_QWORD *)(v574 - 8) + 64));
        }
        else
        {
          v659(v571, v572, v567);
          *(_QWORD *)&v571[*(int *)(updated + 20)] = *(_QWORD *)&v572[*(int *)(updated + 20)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v571, 0, 1, updated);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v394, 0, 1, v396);
        v391 = v659;
        v392 = (uint64_t)__dst;
      }
      v599 = *(int *)(v392 + 24);
      v600 = (uint64_t)a1 + v599;
      v601 = (uint64_t)a2 + v599;
      if (__swift_getEnumTagSinglePayload(v601, 1, v396))
        goto LABEL_162;
      v603 = v390;
      v604 = *(_QWORD *)(v601 + 8);
      *(_QWORD *)v600 = *(_QWORD *)v601;
      *(_QWORD *)(v600 + 8) = v604;
      *(_QWORD *)(v600 + 16) = *(_QWORD *)(v601 + 16);
      *(_BYTE *)(v600 + 24) = *(_BYTE *)(v601 + 24);
      *(_QWORD *)(v600 + 32) = *(_QWORD *)(v601 + 32);
      *(_BYTE *)(v600 + 40) = *(_BYTE *)(v601 + 40);
      v605 = *(int *)(v396 + 32);
      v606 = (char *)(v600 + v605);
      v607 = (char *)(v601 + v605);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v391(v606, v607, v603);
      v608 = *(int *)(v396 + 36);
      v609 = (char *)(v600 + v608);
      v610 = (char *)(v601 + v608);
      v611 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v610, 1, v611))
        goto LABEL_164;
      goto LABEL_172;
    case 0x65u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v398 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
      v399 = v398[6];
      v400 = (char *)a1 + v399;
      v401 = (char *)a2 + v399;
      v402 = sub_240F1C930();
      v391 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v402 - 8) + 16);
      swift_bridgeObjectRetain();
      v391(v400, v401, v402);
      v403 = v398[7];
      v404 = (_QWORD *)((char *)a1 + v403);
      v405 = (_QWORD *)((char *)a2 + v403);
      v396 = type metadata accessor for Proto_NeuralNetwork(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v405, 1, v396))
      {
        v406 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
        memcpy(v404, v405, *(_QWORD *)(*(_QWORD *)(v406 - 8) + 64));
      }
      else
      {
        v575 = v405[1];
        *v404 = *v405;
        v404[1] = v575;
        v404[2] = v405[2];
        *((_BYTE *)v404 + 24) = *((_BYTE *)v405 + 24);
        v404[4] = v405[4];
        *((_BYTE *)v404 + 40) = *((_BYTE *)v405 + 40);
        v576 = *(int *)(v396 + 32);
        v662 = v396;
        __dstg = (char *)v404 + v576;
        v577 = v402;
        v578 = (char *)v405 + v576;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v579 = v578;
        v402 = v577;
        v396 = v662;
        v580 = __dstg;
        __dsta = v391;
        v391(v580, v579, v402);
        v581 = *(int *)(v662 + 36);
        v582 = (char *)v404 + v581;
        v583 = (char *)v405 + v581;
        v584 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v583, 1, v584))
        {
          v585 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
          memcpy(v582, v583, *(_QWORD *)(*(_QWORD *)(v585 - 8) + 64));
        }
        else
        {
          __dsta(v582, v583, v402);
          *(_QWORD *)&v582[*(int *)(v584 + 20)] = *(_QWORD *)&v583[*(int *)(v584 + 20)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v582, 0, 1, v584);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v404, 0, 1, v662);
        v391 = __dsta;
      }
      v613 = v398[8];
      v600 = (uint64_t)a1 + v613;
      v601 = (uint64_t)a2 + v613;
      if (__swift_getEnumTagSinglePayload(v601, 1, v396))
      {
LABEL_162:
        v602 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
        memcpy((void *)v600, (const void *)v601, *(_QWORD *)(*(_QWORD *)(v602 - 8) + 64));
      }
      else
      {
        v603 = v402;
        v614 = *(_QWORD *)(v601 + 8);
        *(_QWORD *)v600 = *(_QWORD *)v601;
        *(_QWORD *)(v600 + 8) = v614;
        *(_QWORD *)(v600 + 16) = *(_QWORD *)(v601 + 16);
        *(_BYTE *)(v600 + 24) = *(_BYTE *)(v601 + 24);
        *(_QWORD *)(v600 + 32) = *(_QWORD *)(v601 + 32);
        *(_BYTE *)(v600 + 40) = *(_BYTE *)(v601 + 40);
        v615 = *(int *)(v396 + 32);
        v616 = (char *)(v600 + v615);
        v617 = (char *)(v601 + v615);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v391(v616, v617, v603);
        v618 = *(int *)(v396 + 36);
        v609 = (char *)(v600 + v618);
        v610 = (char *)(v601 + v618);
        v611 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v610, 1, v611))
        {
LABEL_164:
          v612 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
          memcpy(v609, v610, *(_QWORD *)(*(_QWORD *)(v612 - 8) + 64));
        }
        else
        {
LABEL_172:
          v391(v609, v610, v603);
          *(_QWORD *)&v609[*(int *)(v611 + 20)] = *(_QWORD *)&v610[*(int *)(v611 + 20)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v609, 0, 1, v611);
        }
        __swift_storeEnumTagSinglePayload(v600, 0, 1, v396);
      }
      goto LABEL_196;
    case 0x68u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v407 = *(int *)(type metadata accessor for Proto_RangeStaticLayerParams(0) + 28);
      v408 = (char *)a1 + v407;
      v409 = (char *)a2 + v407;
      v410 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v410 - 8) + 16))(v408, v409, v410);
      goto LABEL_196;
    case 0x69u:
      *a1 = *a2;
      v411 = *(int *)(type metadata accessor for Proto_RangeDynamicLayerParams(0) + 24);
      v412 = (char *)a1 + v411;
      v413 = (char *)a2 + v411;
      v414 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 16))(v412, v413, v414);
      goto LABEL_196;
    case 0x6Au:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v415 = *(int *)(type metadata accessor for Proto_EqualLayerParams(0) + 20);
      v416 = (char *)a1 + v415;
      v417 = (char *)a2 + v415;
      v418 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v418 - 8) + 16))(v416, v417, v418);
      goto LABEL_196;
    case 0x6Bu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v419 = *(int *)(type metadata accessor for Proto_NotEqualLayerParams(0) + 20);
      v420 = (char *)a1 + v419;
      v421 = (char *)a2 + v419;
      v422 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 16))(v420, v421, v422);
      goto LABEL_196;
    case 0x6Cu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v423 = *(int *)(type metadata accessor for Proto_LessThanLayerParams(0) + 20);
      v424 = (char *)a1 + v423;
      v425 = (char *)a2 + v423;
      v426 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 16))(v424, v425, v426);
      goto LABEL_196;
    case 0x6Du:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v427 = *(int *)(type metadata accessor for Proto_LessEqualLayerParams(0) + 20);
      v428 = (char *)a1 + v427;
      v429 = (char *)a2 + v427;
      v430 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v430 - 8) + 16))(v428, v429, v430);
      goto LABEL_196;
    case 0x6Eu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v431 = *(int *)(type metadata accessor for Proto_GreaterThanLayerParams(0) + 20);
      v432 = (char *)a1 + v431;
      v433 = (char *)a2 + v431;
      v434 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 16))(v432, v433, v434);
      goto LABEL_196;
    case 0x6Fu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v435 = *(int *)(type metadata accessor for Proto_GreaterEqualLayerParams(0) + 20);
      v436 = (char *)a1 + v435;
      v437 = (char *)a2 + v435;
      v438 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v438 - 8) + 16))(v436, v437, v438);
      goto LABEL_196;
    case 0x70u:
      *a1 = *a2;
      a1[1] = a2[1];
      v439 = *(int *)(type metadata accessor for Proto_RandomNormalLikeLayerParams(0) + 28);
      v440 = (char *)a1 + v439;
      v441 = (char *)a2 + v439;
      v442 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v442 - 8) + 16))(v440, v441, v442);
      goto LABEL_196;
    case 0x71u:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v443 = *(int *)(type metadata accessor for Proto_RandomNormalStaticLayerParams(0) + 32);
      v444 = (char *)a1 + v443;
      v445 = (char *)a2 + v443;
      v446 = sub_240F1C930();
      v447 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 16);
      swift_bridgeObjectRetain();
      v447(v444, v445, v446);
      goto LABEL_196;
    case 0x72u:
      *a1 = *a2;
      a1[1] = a2[1];
      v448 = *(int *)(type metadata accessor for Proto_RandomNormalDynamicLayerParams(0) + 28);
      v449 = (char *)a1 + v448;
      v450 = (char *)a2 + v448;
      v451 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v451 - 8) + 16))(v449, v450, v451);
      goto LABEL_196;
    case 0x73u:
      *a1 = *a2;
      a1[1] = a2[1];
      v452 = *(int *)(type metadata accessor for Proto_RandomUniformLikeLayerParams(0) + 28);
      v453 = (char *)a1 + v452;
      v454 = (char *)a2 + v452;
      v455 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v455 - 8) + 16))(v453, v454, v455);
      goto LABEL_196;
    case 0x74u:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v456 = *(int *)(type metadata accessor for Proto_RandomUniformStaticLayerParams(0) + 32);
      v457 = (char *)a1 + v456;
      v458 = (char *)a2 + v456;
      v459 = sub_240F1C930();
      v460 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v459 - 8) + 16);
      swift_bridgeObjectRetain();
      v460(v457, v458, v459);
      goto LABEL_196;
    case 0x75u:
      *a1 = *a2;
      a1[1] = a2[1];
      v461 = *(int *)(type metadata accessor for Proto_RandomUniformDynamicLayerParams(0) + 28);
      v462 = (char *)a1 + v461;
      v463 = (char *)a2 + v461;
      v464 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v464 - 8) + 16))(v462, v463, v464);
      goto LABEL_196;
    case 0x76u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v465 = *(int *)(type metadata accessor for Proto_RandomBernoulliLikeLayerParams(0) + 24);
      v466 = (char *)a1 + v465;
      v467 = (char *)a2 + v465;
      v468 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v468 - 8) + 16))(v466, v467, v468);
      goto LABEL_196;
    case 0x77u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      a1[2] = a2[2];
      v469 = *(int *)(type metadata accessor for Proto_RandomBernoulliStaticLayerParams(0) + 28);
      v470 = (char *)a1 + v469;
      v471 = (char *)a2 + v469;
      v472 = sub_240F1C930();
      v473 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v472 - 8) + 16);
      swift_bridgeObjectRetain();
      v473(v470, v471, v472);
      goto LABEL_196;
    case 0x78u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v474 = *(int *)(type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(0) + 24);
      v475 = (char *)a1 + v474;
      v476 = (char *)a2 + v474;
      v477 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v477 - 8) + 16))(v475, v476, v477);
      goto LABEL_196;
    case 0x79u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v478 = *(int *)(type metadata accessor for Proto_MatrixBandPartLayerParams(0) + 24);
      v479 = (char *)a1 + v478;
      v480 = (char *)a2 + v478;
      v481 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v481 - 8) + 16))(v479, v480, v481);
      goto LABEL_196;
    case 0x7Au:
      *a1 = *a2;
      v482 = *(int *)(type metadata accessor for Proto_LowerTriangularLayerParams(0) + 20);
      v483 = (char *)a1 + v482;
      v484 = (char *)a2 + v482;
      v485 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v485 - 8) + 16))(v483, v484, v485);
      goto LABEL_196;
    case 0x7Bu:
      *a1 = *a2;
      v486 = *(int *)(type metadata accessor for Proto_UpperTriangularLayerParams(0) + 20);
      v487 = (char *)a1 + v486;
      v488 = (char *)a2 + v486;
      v489 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v489 - 8) + 16))(v487, v488, v489);
      goto LABEL_196;
    case 0x7Cu:
      v490 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v490 - 8) + 16))(a1, a2, v490);
      v491 = type metadata accessor for Proto_EmbeddingLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v491 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v491 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x7Du:
      v492 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v492 - 8) + 16))(a1, a2, v492);
      v493 = type metadata accessor for Proto_EmbeddingNDLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v493 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v493 + 20));
      swift_retain();
      goto LABEL_196;
    case 0x7Eu:
      *a1 = *a2;
      v494 = type metadata accessor for Proto_BiasLayerParams(0);
      v495 = *(int *)(v494 + 20);
      v496 = (char *)a1 + v495;
      v497 = (char *)a2 + v495;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v496, v497, v10);
      v498 = *(int *)(v494 + 24);
      v13 = (uint64_t)a1 + v498;
      v14 = (uint64_t)a2 + v498;
      v15 = type metadata accessor for Proto_WeightParams(0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15))
      {
LABEL_6:
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        v586 = *(_QWORD *)(v14 + 8);
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v587 = *(_QWORD *)(v14 + 16);
        swift_bridgeObjectRetain();
        sub_240BF5610(v586, v587);
        *(_QWORD *)(v13 + 8) = v586;
        *(_QWORD *)(v13 + 16) = v587;
        v588 = *(_QWORD *)(v14 + 24);
        v589 = *(_QWORD *)(v14 + 32);
        sub_240BF5610(v588, v589);
        *(_QWORD *)(v13 + 24) = v588;
        *(_QWORD *)(v13 + 32) = v589;
        v590 = *(_QWORD *)(v14 + 40);
        v591 = *(_QWORD *)(v14 + 48);
        sub_240BF5610(v590, v591);
        *(_QWORD *)(v13 + 40) = v590;
        *(_QWORD *)(v13 + 48) = v591;
        *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
        v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
        v592 = *(int *)(v15 + 40);
        v534 = (_QWORD *)(v13 + v592);
        v535 = (_QWORD *)(v14 + v592);
        v536 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v535, 1, v536))
        {
LABEL_152:
          v593 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
          memcpy(v534, v535, *(_QWORD *)(*(_QWORD *)(v593 - 8) + 64));
        }
        else
        {
          *v534 = *v535;
          v619 = *(int *)(v536 + 20);
          v663 = (uint64_t)v534;
          __dstb = (_QWORD *)((char *)v534 + v619);
          v595 = (_QWORD *)((char *)v535 + v619);
          v596 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v595, 1, v596))
          {
LABEL_158:
            v598 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
            memcpy(__dstb, v595, *(_QWORD *)(*(_QWORD *)(v598 - 8) + 64));
          }
          else
          {
            v647 = swift_getEnumCaseMultiPayload();
            *__dstb = *v595;
            if (v647 == 1)
            {
LABEL_186:
              v645 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
              v658 = (char *)__dstb + v645;
              v646 = (char *)v595 + v645;
              swift_bridgeObjectRetain();
              v11(v658, v646, v10);
            }
            else
            {
LABEL_192:
              __dstb[1] = v595[1];
              v654 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
              v657 = (char *)__dstb + v654;
              v655 = (char *)v595 + v654;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              v11(v657, v655, v10);
            }
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v596);
          }
          v11((char *)(v663 + *(int *)(v536 + 24)), (char *)v535 + *(int *)(v536 + 24), v10);
          __swift_storeEnumTagSinglePayload(v663, 0, 1, v536);
        }
        __swift_storeEnumTagSinglePayload(v13, 0, 1, v15);
      }
LABEL_196:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x7Fu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)((char *)a1 + 20) = *(_QWORD *)((char *)a2 + 20);
      v499 = *(int *)(type metadata accessor for Proto_CategoricalDistributionLayerParams(0) + 36);
      v500 = (char *)a1 + v499;
      v501 = (char *)a2 + v499;
      v502 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v502 - 8) + 16))(v500, v501, v502);
      goto LABEL_196;
    case 0x80u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v503 = *(int *)(type metadata accessor for Proto_OneHotLayerParams(0) + 32);
      v504 = (char *)a1 + v503;
      v505 = (char *)a2 + v503;
      v506 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v506 - 8) + 16))(v504, v505, v506);
      goto LABEL_196;
    case 0x81u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v507 = *(int *)(type metadata accessor for Proto_TopKLayerParams(0) + 28);
      v508 = (char *)a1 + v507;
      v509 = (char *)a2 + v507;
      v510 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v510 - 8) + 16))(v508, v509, v510);
      goto LABEL_196;
    case 0x82u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v511 = *(int *)(type metadata accessor for Proto_ArgSortLayerParams(0) + 24);
      v512 = (char *)a1 + v511;
      v513 = (char *)a2 + v511;
      v514 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 16))(v512, v513, v514);
      goto LABEL_196;
    case 0x83u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v515 = *(int *)(type metadata accessor for Proto_NonMaximumSuppressionLayerParams(0) + 32);
      v516 = (char *)a1 + v515;
      v517 = (char *)a2 + v515;
      v518 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v518 - 8) + 16))(v516, v517, v518);
      goto LABEL_196;
    case 0x84u:
      v519 = a2[1];
      *a1 = *a2;
      a1[1] = v519;
      v520 = a2[3];
      a1[2] = a2[2];
      a1[3] = v520;
      v521 = a2[5];
      a1[4] = a2[4];
      a1[5] = v521;
      v522 = *(int *)(type metadata accessor for Proto_CustomLayerParams(0) + 32);
      v523 = (char *)a1 + v522;
      v524 = (char *)a2 + v522;
      v525 = sub_240F1C930();
      v526 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v525 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v526(v523, v524, v525);
      goto LABEL_196;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *_s4KindOwca(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t ConstantLayerParams;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ConstantNDLayerParams;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  void (*v45)(char *, char *, uint64_t);
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  void (*v52)(char *, char *, uint64_t);
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  void (*v61)(char *, char *, uint64_t);
  uint64_t v62;
  char *v63;
  char *v64;
  uint64_t v65;
  uint64_t v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  void (*v83)(char *, char *, uint64_t);
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  void (*v88)(char *, char *, uint64_t);
  uint64_t v89;
  char *v90;
  char *v91;
  uint64_t v92;
  void (*v93)(char *, char *, uint64_t);
  uint64_t v94;
  char *v95;
  char *v96;
  uint64_t v97;
  void (*v98)(char *, char *, uint64_t);
  uint64_t v99;
  uint64_t v100;
  char *v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  void (*v109)(char *, char *, uint64_t);
  uint64_t v110;
  char *v111;
  char *v112;
  uint64_t v113;
  void (*v114)(char *, char *, uint64_t);
  uint64_t v115;
  char *v116;
  char *v117;
  uint64_t v118;
  void (*v119)(char *, char *, uint64_t);
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  void (*v124)(char *, char *, uint64_t);
  uint64_t v125;
  char *v126;
  char *v127;
  uint64_t v128;
  void (*v129)(char *, char *, uint64_t);
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  void (*v134)(char *, char *, uint64_t);
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  char *v141;
  char *v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  char *v154;
  char *v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  char *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  void (*v174)(char *, char *, uint64_t);
  uint64_t v175;
  char *v176;
  uint64_t v177;
  void (*v178)(char *, char *, uint64_t);
  uint64_t v179;
  char *v180;
  char *v181;
  uint64_t v182;
  uint64_t v183;
  char *v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  uint64_t v190;
  uint64_t v191;
  char *v192;
  char *v193;
  uint64_t v194;
  uint64_t v195;
  _DWORD *v196;
  char *v197;
  uint64_t v198;
  char *v199;
  char *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  int *v216;
  uint64_t v217;
  _BYTE *v218;
  _BYTE *v219;
  uint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  char *v225;
  char *v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  uint64_t v242;
  uint64_t v243;
  char *v244;
  char *v245;
  uint64_t v246;
  uint64_t v247;
  uint64_t v248;
  uint64_t v249;
  uint64_t v250;
  uint64_t v251;
  char *v252;
  char *v253;
  uint64_t v254;
  uint64_t v255;
  char *v256;
  char *v257;
  uint64_t v258;
  uint64_t v259;
  char *v260;
  char *v261;
  uint64_t v262;
  uint64_t v263;
  char *v264;
  char *v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  int *v269;
  uint64_t v270;
  char *v271;
  char *v272;
  uint64_t v273;
  void (*v274)(char *, char *, uint64_t);
  uint64_t v275;
  _BYTE *v276;
  _BYTE *v277;
  uint64_t v278;
  uint64_t v279;
  uint64_t v280;
  uint64_t v281;
  char *v282;
  uint64_t v283;
  void (*v284)(char *, char *, uint64_t);
  uint64_t v285;
  _BYTE *v286;
  _BYTE *v287;
  uint64_t v288;
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  uint64_t v292;
  uint64_t v293;
  uint64_t v294;
  uint64_t v295;
  char *v296;
  char *v297;
  uint64_t v298;
  void (*v299)(char *, char *, uint64_t);
  uint64_t v300;
  _QWORD *v301;
  _QWORD *v302;
  uint64_t v303;
  uint64_t v304;
  uint64_t v305;
  uint64_t v306;
  char *v307;
  char *v308;
  uint64_t v309;
  void (*v310)(char *, char *, uint64_t);
  uint64_t v311;
  _BYTE *v312;
  _BYTE *v313;
  uint64_t v314;
  uint64_t v315;
  int *v316;
  uint64_t v317;
  char *v318;
  char *v319;
  uint64_t v320;
  void (*v321)(char *, char *, uint64_t);
  uint64_t v322;
  _BYTE *v323;
  _BYTE *v324;
  uint64_t v325;
  uint64_t v326;
  uint64_t v327;
  uint64_t v328;
  uint64_t v329;
  char *v330;
  char *v331;
  uint64_t v332;
  uint64_t v333;
  char *v334;
  char *v335;
  uint64_t v336;
  void (*v337)(char *, char *, uint64_t);
  uint64_t v338;
  char *v339;
  char *v340;
  uint64_t v341;
  void (*v342)(char *, char *, uint64_t);
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  void (*v347)(char *, char *, uint64_t);
  uint64_t v348;
  char *v349;
  char *v350;
  uint64_t v351;
  void (*v352)(char *, char *, uint64_t);
  uint64_t v353;
  char *v354;
  char *v355;
  uint64_t v356;
  void (*v357)(char *, char *, uint64_t);
  uint64_t v358;
  char *v359;
  char *v360;
  uint64_t v361;
  void (*v362)(char *, char *, uint64_t);
  uint64_t v363;
  char *v364;
  char *v365;
  uint64_t v366;
  void (*v367)(char *, char *, uint64_t);
  uint64_t v368;
  char *v369;
  char *v370;
  uint64_t v371;
  void (*v372)(char *, char *, uint64_t);
  uint64_t v373;
  char *v374;
  char *v375;
  uint64_t v376;
  void (*v377)(char *, char *, uint64_t);
  uint64_t v378;
  char *v379;
  char *v380;
  uint64_t v381;
  void (*v382)(char *, char *, uint64_t);
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  void (*v396)(char *, char *, uint64_t);
  uint64_t v397;
  uint64_t v398;
  _QWORD *v399;
  _QWORD *v400;
  uint64_t v401;
  uint64_t v402;
  int *v403;
  uint64_t v404;
  char *v405;
  char *v406;
  uint64_t v407;
  _QWORD *v408;
  _QWORD *v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  void (*v451)(char *, char *, uint64_t);
  uint64_t v452;
  char *v453;
  char *v454;
  uint64_t v455;
  uint64_t v456;
  char *v457;
  char *v458;
  uint64_t v459;
  uint64_t v460;
  char *v461;
  char *v462;
  uint64_t v463;
  void (*v464)(char *, char *, uint64_t);
  uint64_t v465;
  char *v466;
  char *v467;
  uint64_t v468;
  uint64_t v469;
  char *v470;
  char *v471;
  uint64_t v472;
  uint64_t v473;
  char *v474;
  char *v475;
  uint64_t v476;
  void (*v477)(char *, char *, uint64_t);
  uint64_t v478;
  char *v479;
  char *v480;
  uint64_t v481;
  uint64_t v482;
  char *v483;
  char *v484;
  uint64_t v485;
  uint64_t v486;
  char *v487;
  char *v488;
  uint64_t v489;
  uint64_t v490;
  char *v491;
  char *v492;
  uint64_t v493;
  uint64_t v494;
  uint64_t v495;
  uint64_t v496;
  uint64_t v497;
  uint64_t v498;
  uint64_t v499;
  char *v500;
  char *v501;
  uint64_t v502;
  uint64_t v503;
  char *v504;
  char *v505;
  uint64_t v506;
  uint64_t v507;
  char *v508;
  char *v509;
  uint64_t v510;
  uint64_t v511;
  char *v512;
  char *v513;
  uint64_t v514;
  uint64_t v515;
  char *v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  char *v520;
  char *v521;
  uint64_t v522;
  uint64_t v523;
  char *v524;
  char *v525;
  uint64_t v526;
  void (*v527)(char *, char *, uint64_t);
  uint64_t v528;
  unint64_t v529;
  uint64_t v530;
  unint64_t v531;
  uint64_t v532;
  unint64_t v533;
  uint64_t v534;
  _QWORD *v535;
  _QWORD *v536;
  uint64_t v537;
  uint64_t v538;
  unint64_t v539;
  uint64_t v540;
  unint64_t v541;
  uint64_t v542;
  unint64_t v543;
  uint64_t v544;
  int v545;
  uint64_t v546;
  int v547;
  uint64_t v548;
  uint64_t v549;
  _BYTE *v550;
  _BYTE *v551;
  uint64_t v552;
  uint64_t v553;
  char *v554;
  char *v555;
  uint64_t v556;
  uint64_t v557;
  uint64_t v558;
  char *v559;
  char *v560;
  uint64_t v561;
  uint64_t v562;
  uint64_t v563;
  _BYTE *v564;
  _BYTE *v565;
  uint64_t v566;
  uint64_t v567;
  uint64_t v568;
  uint64_t v569;
  uint64_t v570;
  char *v571;
  uint64_t v572;
  char *v573;
  char *v574;
  uint64_t v575;
  char *v576;
  char *v577;
  uint64_t updated;
  uint64_t v579;
  uint64_t v580;
  uint64_t v581;
  uint64_t v582;
  uint64_t v583;
  char *v584;
  char *v585;
  char *v586;
  uint64_t v587;
  char *v588;
  char *v589;
  uint64_t v590;
  uint64_t v591;
  uint64_t v592;
  unint64_t v593;
  uint64_t v594;
  unint64_t v595;
  uint64_t v596;
  unint64_t v597;
  uint64_t v598;
  uint64_t v599;
  uint64_t v600;
  uint64_t v601;
  _QWORD *v602;
  uint64_t v603;
  uint64_t v604;
  uint64_t v605;
  uint64_t v606;
  uint64_t v607;
  uint64_t v608;
  uint64_t v609;
  uint64_t v610;
  uint64_t v611;
  uint64_t v612;
  char *v613;
  char *v614;
  uint64_t v615;
  char *v616;
  char *v617;
  uint64_t v618;
  uint64_t v619;
  uint64_t v620;
  uint64_t v621;
  uint64_t v622;
  uint64_t v623;
  char *v624;
  char *v625;
  uint64_t v626;
  uint64_t v627;
  uint64_t v628;
  char *v629;
  char *v630;
  uint64_t v631;
  uint64_t v632;
  uint64_t v633;
  char *v634;
  char *v635;
  uint64_t v636;
  void (*v637)(char *, char *, uint64_t);
  uint64_t v638;
  uint64_t v639;
  uint64_t v640;
  char *v641;
  char *v642;
  uint64_t v643;
  uint64_t v644;
  void (*v645)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v646;
  uint64_t v647;
  _QWORD *v648;
  uint64_t v649;
  uint64_t v650;
  int EnumCaseMultiPayload;
  int v652;
  uint64_t v653;
  char *v654;
  int v655;
  uint64_t v656;
  char *v657;
  uint64_t v658;
  char *v659;
  char *v660;
  uint64_t v661;
  uint64_t v662;
  char *v663;
  _QWORD *result;
  char *v665;
  char *v666;
  void (*v667)(char *, char *, uint64_t);
  char *v668;
  char *v669;
  uint64_t v670;
  uint64_t v671;
  _BYTE *v672;
  void (*v673)(char *, char *, uint64_t);
  char *__dstd;
  char *__dste;
  char *__dstf;
  void *__dst;
  char *__dstg;
  void (*__dsta)(char *, char *, uint64_t);
  _QWORD *__dstb;
  _BYTE *__dsth;
  _QWORD *__dstc;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        ConstantLayerParams = type metadata accessor for Proto_LoadConstantLayerParams(0);
        v7 = *(int *)(ConstantLayerParams + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v8, v9, v10);
        v12 = *(int *)(ConstantLayerParams + 24);
        v13 = (uint64_t)a1 + v12;
        v14 = (uint64_t)a2 + v12;
        v15 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v14, 1, v15))
          goto LABEL_7;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v528 = *(_QWORD *)(v14 + 8);
        v529 = *(_QWORD *)(v14 + 16);
        swift_bridgeObjectRetain();
        sub_240BF5610(v528, v529);
        *(_QWORD *)(v13 + 8) = v528;
        *(_QWORD *)(v13 + 16) = v529;
        v530 = *(_QWORD *)(v14 + 24);
        v531 = *(_QWORD *)(v14 + 32);
        sub_240BF5610(v530, v531);
        *(_QWORD *)(v13 + 24) = v530;
        *(_QWORD *)(v13 + 32) = v531;
        v532 = *(_QWORD *)(v14 + 40);
        v533 = *(_QWORD *)(v14 + 48);
        sub_240BF5610(v532, v533);
        *(_QWORD *)(v13 + 40) = v532;
        *(_QWORD *)(v13 + 48) = v533;
        *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
        v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
        v534 = *(int *)(v15 + 40);
        v535 = (_QWORD *)(v13 + v534);
        v536 = (_QWORD *)(v14 + v534);
        v537 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v536, 1, v537))
          goto LABEL_153;
        *v535 = *v536;
        v601 = *(int *)(v537 + 20);
        v671 = (uint64_t)v535;
        __dstb = (_QWORD *)((char *)v535 + v601);
        v602 = (_QWORD *)((char *)v536 + v601);
        v603 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v602, 1, v603))
          goto LABEL_159;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *__dstb = *v602;
        if (EnumCaseMultiPayload == 1)
          goto LABEL_187;
        goto LABEL_193;
      case 1u:
        *a1 = *a2;
        ConstantNDLayerParams = type metadata accessor for Proto_LoadConstantNDLayerParams(0);
        v17 = *(int *)(ConstantNDLayerParams + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v18, v19, v10);
        v20 = *(int *)(ConstantNDLayerParams + 24);
        v13 = (uint64_t)a1 + v20;
        v14 = (uint64_t)a2 + v20;
        v15 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v14, 1, v15))
          goto LABEL_7;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        v538 = *(_QWORD *)(v14 + 8);
        v539 = *(_QWORD *)(v14 + 16);
        swift_bridgeObjectRetain();
        sub_240BF5610(v538, v539);
        *(_QWORD *)(v13 + 8) = v538;
        *(_QWORD *)(v13 + 16) = v539;
        v540 = *(_QWORD *)(v14 + 24);
        v541 = *(_QWORD *)(v14 + 32);
        sub_240BF5610(v540, v541);
        *(_QWORD *)(v13 + 24) = v540;
        *(_QWORD *)(v13 + 32) = v541;
        v542 = *(_QWORD *)(v14 + 40);
        v543 = *(_QWORD *)(v14 + 48);
        sub_240BF5610(v542, v543);
        *(_QWORD *)(v13 + 40) = v542;
        *(_QWORD *)(v13 + 48) = v543;
        *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
        v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
        v544 = *(int *)(v15 + 40);
        v535 = (_QWORD *)(v13 + v544);
        v536 = (_QWORD *)(v14 + v544);
        v537 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v536, 1, v537))
          goto LABEL_153;
        *v535 = *v536;
        v604 = *(int *)(v537 + 20);
        v671 = (uint64_t)v535;
        __dstb = (_QWORD *)((char *)v535 + v604);
        v602 = (_QWORD *)((char *)v536 + v604);
        v603 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v602, 1, v603))
          goto LABEL_159;
        v652 = swift_getEnumCaseMultiPayload();
        *__dstb = *v602;
        if (v652 == 1)
          goto LABEL_187;
        goto LABEL_193;
      case 2u:
        v22 = type metadata accessor for Proto_PaddingLayerParams.OneOf_PaddingType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v545 = swift_getEnumCaseMultiPayload();
          if (v545 == 2 || v545 == 1)
          {
            v546 = sub_240F1C930();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v546 - 8) + 16))(a1, a2, v546);
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v628 = *(int *)(type metadata accessor for Proto_PaddingLayerParams.PaddingConstant(0) + 20);
            v629 = (char *)a1 + v628;
            v630 = (char *)a2 + v628;
            v631 = sub_240F1C930();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v631 - 8) + 16))(v629, v630, v631);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v22);
        }
        v632 = type metadata accessor for Proto_PaddingLayerParams(0);
        v633 = *(int *)(v632 + 20);
        v634 = (char *)a1 + v633;
        v635 = (char *)a2 + v633;
        v636 = sub_240F1C930();
        v637 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v636 - 8) + 16);
        v637(v634, v635, v636);
        v638 = *(int *)(v632 + 24);
        v301 = (_QWORD *)((char *)a1 + v638);
        v302 = (_QWORD *)((char *)a2 + v638);
        v639 = type metadata accessor for Proto_BorderAmounts(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v302, 1, v639))
          goto LABEL_76;
        *v301 = *v302;
        v640 = *(int *)(v639 + 20);
        v641 = (char *)v301 + v640;
        v642 = (char *)v302 + v640;
        swift_bridgeObjectRetain();
        v637(v641, v642, v636);
        __swift_storeEnumTagSinglePayload((uint64_t)v301, 0, 1, v639);
        goto LABEL_197;
      case 3u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v24 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_240F1C930();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
        goto LABEL_197;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v29 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
        v30 = (char *)a1 + v29;
        v31 = (char *)a2 + v29;
        v32 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v30, v31, v32);
        goto LABEL_197;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v33 = *(int *)(type metadata accessor for Proto_ConcatNDLayerParams(0) + 24);
        v34 = (char *)a1 + v33;
        v35 = (char *)a2 + v33;
        v36 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v36 - 8) + 16))(v34, v35, v36);
        goto LABEL_197;
      case 6u:
        *a1 = *a2;
        v37 = *(int *)(type metadata accessor for Proto_SplitLayerParams(0) + 20);
        v38 = (char *)a1 + v37;
        v39 = (char *)a2 + v37;
        v40 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
        goto LABEL_197;
      case 7u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v41 = *(int *)(type metadata accessor for Proto_SplitNDLayerParams(0) + 28);
        v42 = (char *)a1 + v41;
        v43 = (char *)a2 + v41;
        v44 = sub_240F1C930();
        v45 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v44 - 8) + 16);
        swift_bridgeObjectRetain();
        v45(v42, v43, v44);
        goto LABEL_197;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        v46 = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[2] = v46;
        v47 = a2[4];
        *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
        a1[4] = v47;
        v48 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_240F1C930();
        v52 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v52(v49, v50, v51);
        goto LABEL_197;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v53 = *(int *)(type metadata accessor for Proto_FillLikeLayerParams(0) + 20);
        v54 = (char *)a1 + v53;
        v55 = (char *)a2 + v53;
        v56 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v56 - 8) + 16))(v54, v55, v56);
        goto LABEL_197;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        v57 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
        v58 = (char *)a1 + v57;
        v59 = (char *)a2 + v57;
        v60 = sub_240F1C930();
        v61 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v60 - 8) + 16);
        swift_bridgeObjectRetain();
        v61(v58, v59, v60);
        goto LABEL_197;
      case 0xBu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v62 = *(int *)(type metadata accessor for Proto_FillDynamicLayerParams(0) + 20);
        v63 = (char *)a1 + v62;
        v64 = (char *)a2 + v62;
        v65 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v65 - 8) + 16))(v63, v64, v65);
        goto LABEL_197;
      case 0xCu:
        *a1 = *a2;
        v66 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
        v67 = (char *)a1 + v66;
        v68 = (char *)a2 + v66;
        v69 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v69 - 8) + 16))(v67, v68, v69);
        goto LABEL_197;
      case 0xDu:
        *a1 = *a2;
        a1[1] = a2[1];
        v70 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
        v71 = (char *)a1 + v70;
        v72 = (char *)a2 + v70;
        v73 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v73 - 8) + 16))(v71, v72, v73);
        goto LABEL_197;
      case 0xEu:
        v74 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v74;
        a1[2] = a2[2];
        v75 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
        v76 = (char *)a1 + v75;
        v77 = (char *)a2 + v75;
        v78 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v78 - 8) + 16))(v76, v77, v78);
        goto LABEL_197;
      case 0xFu:
        *a1 = *a2;
        v79 = *(int *)(type metadata accessor for Proto_TileLayerParams(0) + 20);
        v80 = (char *)a1 + v79;
        v81 = (char *)a2 + v79;
        v82 = sub_240F1C930();
        v83 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v82 - 8) + 16);
        swift_bridgeObjectRetain();
        v83(v80, v81, v82);
        goto LABEL_197;
      case 0x10u:
        *a1 = *a2;
        v84 = *(int *)(type metadata accessor for Proto_ReverseLayerParams(0) + 20);
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = sub_240F1C930();
        v88 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 16);
        swift_bridgeObjectRetain();
        v88(v85, v86, v87);
        goto LABEL_197;
      case 0x11u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v89 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
        v90 = (char *)a1 + v89;
        v91 = (char *)a2 + v89;
        v92 = sub_240F1C930();
        v93 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v92 - 8) + 16);
        swift_bridgeObjectRetain();
        v93(v90, v91, v92);
        goto LABEL_197;
      case 0x12u:
        *a1 = *a2;
        v94 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
        v95 = (char *)a1 + v94;
        v96 = (char *)a2 + v94;
        v97 = sub_240F1C930();
        v98 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v97 - 8) + 16);
        swift_bridgeObjectRetain();
        v98(v95, v96, v97);
        goto LABEL_197;
      case 0x13u:
        v99 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v99;
        v100 = *(int *)(type metadata accessor for Proto_FlattenLayerParams(0) + 20);
        v101 = (char *)a1 + v100;
        v102 = (char *)a2 + v100;
        v103 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v103 - 8) + 16))(v101, v102, v103);
        goto LABEL_197;
      case 0x14u:
        *a1 = *a2;
        v104 = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[1] = v104;
        v105 = *(int *)(type metadata accessor for Proto_ReshapeLayerParams(0) + 24);
        v106 = (char *)a1 + v105;
        v107 = (char *)a2 + v105;
        v108 = sub_240F1C930();
        v109 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 16);
        swift_bridgeObjectRetain();
        v109(v106, v107, v108);
        goto LABEL_197;
      case 0x15u:
        *a1 = *a2;
        v110 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
        v111 = (char *)a1 + v110;
        v112 = (char *)a2 + v110;
        v113 = sub_240F1C930();
        v114 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v113 - 8) + 16);
        swift_bridgeObjectRetain();
        v114(v111, v112, v113);
        goto LABEL_197;
      case 0x16u:
        *a1 = *a2;
        v115 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
        v116 = (char *)a1 + v115;
        v117 = (char *)a2 + v115;
        v118 = sub_240F1C930();
        v119 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v118 - 8) + 16);
        swift_bridgeObjectRetain();
        v119(v116, v117, v118);
        goto LABEL_197;
      case 0x17u:
        *a1 = *a2;
        v120 = *(int *)(type metadata accessor for Proto_PermuteLayerParams(0) + 20);
        v121 = (char *)a1 + v120;
        v122 = (char *)a2 + v120;
        v123 = sub_240F1C930();
        v124 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v123 - 8) + 16);
        swift_bridgeObjectRetain();
        v124(v121, v122, v123);
        goto LABEL_197;
      case 0x18u:
        *a1 = *a2;
        v125 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
        v126 = (char *)a1 + v125;
        v127 = (char *)a2 + v125;
        v128 = sub_240F1C930();
        v129 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v128 - 8) + 16);
        swift_bridgeObjectRetain();
        v129(v126, v127, v128);
        goto LABEL_197;
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
      case 0x21u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x3Eu:
      case 0x3Fu:
      case 0x40u:
      case 0x43u:
      case 0x50u:
      case 0x5Cu:
      case 0x5Du:
      case 0x61u:
      case 0x62u:
      case 0x64u:
      case 0x66u:
      case 0x67u:
        v139 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v139 - 8) + 16))(a1, a2, v139);
        goto LABEL_197;
      case 0x1Au:
        *a1 = *a2;
        v130 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
        v131 = (char *)a1 + v130;
        v132 = (char *)a2 + v130;
        v133 = sub_240F1C930();
        v134 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 16);
        swift_bridgeObjectRetain();
        v134(v131, v132, v133);
        goto LABEL_197;
      case 0x1Cu:
        *a1 = *a2;
        v135 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
        v136 = (char *)a1 + v135;
        v137 = (char *)a2 + v135;
        v138 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 16))(v136, v137, v138);
        goto LABEL_197;
      case 0x1Fu:
        *a1 = *a2;
        v140 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
        v141 = (char *)a1 + v140;
        v142 = (char *)a2 + v140;
        v143 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v143 - 8) + 16))(v141, v142, v143);
        goto LABEL_197;
      case 0x20u:
        *a1 = *a2;
        v144 = *(int *)(type metadata accessor for Proto_GatherLayerParams(0) + 20);
        v145 = (char *)a1 + v144;
        v146 = (char *)a2 + v144;
        v147 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 16))(v145, v146, v147);
        goto LABEL_197;
      case 0x22u:
        *a1 = *a2;
        v148 = *(int *)(type metadata accessor for Proto_GatherAlongAxisLayerParams(0) + 20);
        v149 = (char *)a1 + v148;
        v150 = (char *)a2 + v148;
        v151 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v151 - 8) + 16))(v149, v150, v151);
        goto LABEL_197;
      case 0x23u:
        *a1 = *a2;
        v152 = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[1] = v152;
        v153 = *(int *)(type metadata accessor for Proto_ScatterLayerParams(0) + 24);
        v154 = (char *)a1 + v153;
        v155 = (char *)a2 + v153;
        v156 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v156 - 8) + 16))(v154, v155, v156);
        goto LABEL_197;
      case 0x24u:
        v157 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v157;
        v158 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
        v159 = (char *)a1 + v158;
        v160 = (char *)a2 + v158;
        v161 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v161 - 8) + 16))(v159, v160, v161);
        goto LABEL_197;
      case 0x25u:
        *a1 = *a2;
        v162 = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        a1[1] = v162;
        v163 = *(int *)(type metadata accessor for Proto_ScatterAlongAxisLayerParams(0) + 24);
        v164 = (char *)a1 + v163;
        v165 = (char *)a2 + v163;
        v166 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 16))(v164, v165, v166);
        goto LABEL_197;
      case 0x26u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v167 = a2[3];
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        a1[3] = v167;
        v168 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
        v169 = (char *)a1 + v168;
        v170 = (char *)a2 + v168;
        v171 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v171 - 8) + 16))(v169, v170, v171);
        goto LABEL_197;
      case 0x27u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        v172 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
        v669 = (char *)a2 + v172;
        __dstd = (char *)a1 + v172;
        v173 = sub_240F1C930();
        v174 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v173 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v174(__dstd, v669, v173);
        goto LABEL_197;
      case 0x28u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        v175 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
        v176 = (char *)a1 + v175;
        __dste = (char *)a2 + v175;
        v177 = sub_240F1C930();
        v178 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v178(v176, __dste, v177);
        goto LABEL_197;
      case 0x29u:
        *a1 = *a2;
        a1[1] = a2[1];
        v179 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
        v180 = (char *)a1 + v179;
        v181 = (char *)a2 + v179;
        v182 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v182 - 8) + 16))(v180, v181, v182);
        goto LABEL_197;
      case 0x2Au:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v183 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
        v184 = (char *)a1 + v183;
        v185 = (char *)a2 + v183;
        v186 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v186 - 8) + 16))(v184, v185, v186);
        goto LABEL_197;
      case 0x2Bu:
        v187 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v187 - 8) + 16))(a1, a2, v187);
        v188 = type metadata accessor for Proto_InnerProductLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v188 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v188 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x2Cu:
        type metadata accessor for NeuralNetwork.Layer.Activation(0);
        v189 = (char *)&loc_240C182AC + 4 * word_240F1E30A[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x2Du:
        v190 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v190;
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        *((_DWORD *)a1 + 5) = *((_DWORD *)a2 + 5);
        *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
        v191 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
        v192 = (char *)a1 + v191;
        v193 = (char *)a2 + v191;
        v194 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v194 - 8) + 16))(v192, v193, v194);
        goto LABEL_197;
      case 0x2Eu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        v195 = *(int *)(type metadata accessor for NeuralNetwork.Layer.ClipParameters() + 24);
        v196 = (_DWORD *)((char *)a1 + v195);
        v197 = (char *)a2 + v195;
        *v196 = *(_DWORD *)((char *)a2 + v195);
        v196[1] = *(_DWORD *)((char *)a2 + v195 + 4);
        v198 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
        v199 = (char *)v196 + v198;
        v200 = &v197[v198];
        v201 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v201 - 8) + 16))(v199, v200, v201);
        goto LABEL_197;
      case 0x2Fu:
        v202 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v202;
        v203 = *(int *)(type metadata accessor for Proto_GeluLayerParams(0) + 20);
        v204 = (char *)a1 + v203;
        v205 = (char *)a2 + v203;
        v206 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 16))(v204, v205, v206);
        goto LABEL_197;
      case 0x30u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        v207 = *(int *)(type metadata accessor for Proto_ClampedReLULayerParams(0) + 24);
        v208 = (char *)a1 + v207;
        v209 = (char *)a2 + v207;
        v210 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 16))(v208, v209, v210);
        goto LABEL_197;
      case 0x31u:
        v211 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v211 - 8) + 16))(a1, a2, v211);
        v212 = type metadata accessor for Proto_ConvolutionLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v212 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v212 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x32u:
        v213 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v213 - 8) + 16))(a1, a2, v213);
        v214 = type metadata accessor for Proto_Convolution3DLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v214 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v214 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x33u:
        v215 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v215;
        a1[2] = a2[2];
        a1[3] = a2[3];
        v216 = (int *)type metadata accessor for Proto_PoolingLayerParams(0);
        v217 = v216[7];
        v218 = (char *)a1 + v217;
        v219 = (char *)a2 + v217;
        v220 = type metadata accessor for Proto_PoolingLayerParams.OneOf_PoolingPaddingType(0);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (__swift_getEnumTagSinglePayload((uint64_t)v219, 1, v220))
        {
          v221 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C200);
          memcpy(v218, v219, *(_QWORD *)(*(_QWORD *)(v221 - 8) + 64));
        }
        else
        {
          v547 = swift_getEnumCaseMultiPayload();
          if (v547 == 2)
          {
            *(_QWORD *)v218 = *(_QWORD *)v219;
            v643 = *(int *)(type metadata accessor for Proto_PoolingLayerParams.ValidCompletePadding(0) + 20);
            v672 = &v219[v643];
            __dsth = &v218[v643];
            v644 = sub_240F1C930();
            v645 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v644 - 8) + 16);
            swift_bridgeObjectRetain();
            v645(__dsth, v672, v644);
          }
          else if (v547 == 1)
          {
            v548 = *(_QWORD *)v219;
            v218[8] = v219[8];
            *(_QWORD *)v218 = v548;
            v549 = *(int *)(type metadata accessor for Proto_SamePadding(0) + 20);
            v550 = &v218[v549];
            v551 = &v219[v549];
            v552 = sub_240F1C930();
            (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v552 - 8) + 16))(v550, v551, v552);
          }
          else
          {
            v646 = sub_240F1C930();
            v673 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v646 - 8) + 16);
            v673(v218, v219, v646);
            v647 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
            __dstc = &v218[v647];
            v648 = &v219[v647];
            v649 = type metadata accessor for Proto_BorderAmounts(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v648, 1, v649))
            {
              v650 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
              memcpy(__dstc, v648, *(_QWORD *)(*(_QWORD *)(v650 - 8) + 64));
            }
            else
            {
              *__dstc = *v648;
              v656 = *(int *)(v649 + 20);
              v668 = (char *)__dstc + v656;
              v657 = (char *)v648 + v656;
              swift_bridgeObjectRetain();
              v673(v668, v657, v646);
              __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v649);
            }
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)v218, 0, 1, v220);
        }
        *((_BYTE *)a1 + v216[8]) = *((_BYTE *)a2 + v216[8]);
        *((_BYTE *)a1 + v216[9]) = *((_BYTE *)a2 + v216[9]);
        v658 = v216[10];
        v659 = (char *)a1 + v658;
        v660 = (char *)a2 + v658;
        v661 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v661 - 8) + 16))(v659, v660, v661);
        goto LABEL_197;
      case 0x34u:
        v222 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v222;
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        *((_DWORD *)a1 + 5) = *((_DWORD *)a2 + 5);
        *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
        *((_DWORD *)a1 + 7) = *((_DWORD *)a2 + 7);
        *((_DWORD *)a1 + 8) = *((_DWORD *)a2 + 8);
        v223 = a2[5];
        *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
        a1[5] = v223;
        *((_DWORD *)a1 + 13) = *((_DWORD *)a2 + 13);
        *((_DWORD *)a1 + 14) = *((_DWORD *)a2 + 14);
        *((_DWORD *)a1 + 15) = *((_DWORD *)a2 + 15);
        *((_DWORD *)a1 + 16) = *((_DWORD *)a2 + 16);
        *((_DWORD *)a1 + 17) = *((_DWORD *)a2 + 17);
        *((_DWORD *)a1 + 18) = *((_DWORD *)a2 + 18);
        *((_BYTE *)a1 + 76) = *((_BYTE *)a2 + 76);
        v224 = *(int *)(type metadata accessor for Proto_Pooling3DLayerParams(0) + 76);
        v225 = (char *)a1 + v224;
        v226 = (char *)a2 + v224;
        v227 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v227 - 8) + 16))(v225, v226, v227);
        goto LABEL_197;
      case 0x35u:
        v228 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v228;
        v229 = *(int *)(type metadata accessor for Proto_GlobalPooling3DLayerParams(0) + 20);
        v230 = (char *)a1 + v229;
        v231 = (char *)a2 + v229;
        v232 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 16))(v230, v231, v232);
        goto LABEL_197;
      case 0x36u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v233 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
        v234 = (char *)a1 + v233;
        v235 = (char *)a2 + v233;
        v236 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 16))(v234, v235, v236);
        goto LABEL_197;
      case 0x37u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v237 = *(int *)(type metadata accessor for Proto_MultiplyLayerParams(0) + 20);
        v238 = (char *)a1 + v237;
        v239 = (char *)a2 + v237;
        v240 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 16))(v238, v239, v240);
        goto LABEL_197;
      case 0x3Cu:
        v241 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v241 - 8) + 16))(a1, a2, v241);
        v242 = type metadata accessor for Proto_BatchedMatMulLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v242 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v242 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x3Du:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v243 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
        v244 = (char *)a1 + v243;
        v245 = (char *)a2 + v243;
        v246 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v246 - 8) + 16))(v244, v245, v246);
        goto LABEL_197;
      case 0x41u:
        v247 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v247 - 8) + 16))(a1, a2, v247);
        v248 = type metadata accessor for Proto_ScaleLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v248 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v248 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x42u:
        v249 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v249 - 8) + 16))(a1, a2, v249);
        v250 = type metadata accessor for Proto_BatchnormLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v250 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v250 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x44u:
        *a1 = *a2;
        v251 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
        v252 = (char *)a1 + v251;
        v253 = (char *)a2 + v251;
        v254 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v254 - 8) + 16))(v252, v253, v254);
        goto LABEL_197;
      case 0x45u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        *((_BYTE *)a1 + 1) = *((_BYTE *)a2 + 1);
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        v255 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
        v256 = (char *)a1 + v255;
        v257 = (char *)a2 + v255;
        v258 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v258 - 8) + 16))(v256, v257, v258);
        goto LABEL_197;
      case 0x46u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v259 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
        v260 = (char *)a1 + v259;
        v261 = (char *)a2 + v259;
        v262 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v262 - 8) + 16))(v260, v261, v262);
        goto LABEL_197;
      case 0x47u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        a1[1] = a2[1];
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        v263 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
        v264 = (char *)a1 + v263;
        v265 = (char *)a2 + v263;
        v266 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v266 - 8) + 16))(v264, v265, v266);
        goto LABEL_197;
      case 0x48u:
        v267 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v267 - 8) + 16))(a1, a2, v267);
        v268 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v268 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v268 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x49u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v269 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
        v270 = v269[8];
        v271 = (char *)a1 + v270;
        v272 = (char *)a2 + v270;
        v273 = sub_240F1C930();
        v274 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v273 - 8) + 16);
        swift_bridgeObjectRetain();
        v274(v271, v272, v273);
        v275 = v269[9];
        v276 = (char *)a1 + v275;
        v277 = (char *)a2 + v275;
        v278 = type metadata accessor for Proto_LSTMParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v277, 1, v278))
        {
          v279 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
          memcpy(v276, v277, *(_QWORD *)(*(_QWORD *)(v279 - 8) + 64));
        }
        else
        {
          *v276 = *v277;
          v276[1] = v277[1];
          v276[2] = v277[2];
          v276[3] = v277[3];
          v276[4] = v277[4];
          *((_DWORD *)v276 + 2) = *((_DWORD *)v277 + 2);
          v274(&v276[*(int *)(v278 + 40)], &v277[*(int *)(v278 + 40)], v273);
          __swift_storeEnumTagSinglePayload((uint64_t)v276, 0, 1, v278);
        }
        v553 = v269[10];
        v554 = (char *)a1 + v553;
        v555 = (char *)a2 + v553;
        v556 = type metadata accessor for Proto_LSTMWeightParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v555, 1, v556))
        {
          v557 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
          memcpy(v554, v555, *(_QWORD *)(*(_QWORD *)(v557 - 8) + 64));
        }
        else
        {
          v274(v554, v555, v273);
          *(_QWORD *)&v554[*(int *)(v556 + 20)] = *(_QWORD *)&v555[*(int *)(v556 + 20)];
          swift_retain();
          __swift_storeEnumTagSinglePayload((uint64_t)v554, 0, 1, v556);
        }
        goto LABEL_197;
      case 0x4Au:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        v280 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
        v281 = *(int *)(v280 + 36);
        __dstf = (char *)a1 + v281;
        v282 = (char *)a2 + v281;
        v283 = sub_240F1C930();
        v284 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v283 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v284(__dstf, v282, v283);
        v285 = *(int *)(v280 + 40);
        v286 = (char *)a1 + v285;
        v287 = (char *)a2 + v285;
        v288 = type metadata accessor for Proto_LSTMParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v287, 1, v288))
        {
          v289 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
          memcpy(v286, v287, *(_QWORD *)(*(_QWORD *)(v289 - 8) + 64));
        }
        else
        {
          *v286 = *v287;
          v286[1] = v287[1];
          v286[2] = v287[2];
          v286[3] = v287[3];
          v286[4] = v287[4];
          *((_DWORD *)v286 + 2) = *((_DWORD *)v287 + 2);
          v284(&v286[*(int *)(v288 + 40)], &v287[*(int *)(v288 + 40)], v283);
          __swift_storeEnumTagSinglePayload((uint64_t)v286, 0, 1, v288);
        }
        goto LABEL_197;
      case 0x4Bu:
        v290 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v290 - 8) + 16))(a1, a2, v290);
        v291 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v291 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v291 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x4Cu:
        v292 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v292 - 8) + 16))(a1, a2, v292);
        v293 = type metadata accessor for Proto_GRULayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v293 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v293 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x4Du:
        *a1 = *a2;
        v294 = type metadata accessor for Proto_CropLayerParams(0);
        v295 = *(int *)(v294 + 20);
        v296 = (char *)a1 + v295;
        v297 = (char *)a2 + v295;
        v298 = sub_240F1C930();
        v299 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v298 - 8) + 16);
        swift_bridgeObjectRetain();
        v299(v296, v297, v298);
        v300 = *(int *)(v294 + 24);
        v301 = (_QWORD *)((char *)a1 + v300);
        v302 = (_QWORD *)((char *)a2 + v300);
        v303 = type metadata accessor for Proto_BorderAmounts(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v302, 1, v303))
        {
LABEL_76:
          v304 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
          memcpy(v301, v302, *(_QWORD *)(*(_QWORD *)(v304 - 8) + 64));
        }
        else
        {
          *v301 = *v302;
          v558 = *(int *)(v303 + 20);
          v559 = (char *)v301 + v558;
          v560 = (char *)v302 + v558;
          swift_bridgeObjectRetain();
          v299(v559, v560, v298);
          __swift_storeEnumTagSinglePayload((uint64_t)v301, 0, 1, v303);
        }
        goto LABEL_197;
      case 0x4Eu:
        *a1 = *a2;
        v305 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
        v306 = *(int *)(v305 + 20);
        v307 = (char *)a1 + v306;
        v308 = (char *)a2 + v306;
        v309 = sub_240F1C930();
        v310 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v309 - 8) + 16);
        swift_bridgeObjectRetain();
        v310(v307, v308, v309);
        v311 = *(int *)(v305 + 24);
        v312 = (char *)a1 + v311;
        v313 = (char *)a2 + v311;
        v314 = type metadata accessor for Proto_SamplingMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v313, 1, v314))
        {
          v315 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
          memcpy(v312, v313, *(_QWORD *)(*(_QWORD *)(v315 - 8) + 64));
        }
        else
        {
          v561 = *(_QWORD *)v313;
          v312[8] = v313[8];
          *(_QWORD *)v312 = v561;
          v310(&v312[*(int *)(v314 + 20)], &v313[*(int *)(v314 + 20)], v309);
          __swift_storeEnumTagSinglePayload((uint64_t)v312, 0, 1, v314);
        }
        goto LABEL_197;
      case 0x4Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v316 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
        v317 = v316[7];
        v318 = (char *)a1 + v317;
        v319 = (char *)a2 + v317;
        v320 = sub_240F1C930();
        v321 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v320 - 8) + 16);
        swift_bridgeObjectRetain();
        v321(v318, v319, v320);
        v322 = v316[8];
        v323 = (char *)a1 + v322;
        v324 = (char *)a2 + v322;
        v325 = type metadata accessor for Proto_SamplingMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v324, 1, v325))
        {
          v326 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
          memcpy(v323, v324, *(_QWORD *)(*(_QWORD *)(v326 - 8) + 64));
        }
        else
        {
          v562 = *(_QWORD *)v324;
          v323[8] = v324[8];
          *(_QWORD *)v323 = v562;
          v321(&v323[*(int *)(v325 + 20)], &v324[*(int *)(v325 + 20)], v320);
          __swift_storeEnumTagSinglePayload((uint64_t)v323, 0, 1, v325);
        }
        v563 = v316[9];
        v564 = (char *)a1 + v563;
        v565 = (char *)a2 + v563;
        v566 = type metadata accessor for Proto_BoxCoordinatesMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v565, 1, v566))
        {
          v567 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
          memcpy(v564, v565, *(_QWORD *)(*(_QWORD *)(v567 - 8) + 64));
        }
        else
        {
          v600 = *(_QWORD *)v565;
          v564[8] = v565[8];
          *(_QWORD *)v564 = v600;
          v321(&v564[*(int *)(v566 + 20)], &v565[*(int *)(v566 + 20)], v320);
          __swift_storeEnumTagSinglePayload((uint64_t)v564, 0, 1, v566);
        }
        goto LABEL_197;
      case 0x51u:
        v327 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *a1 = v327;
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v328 = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[2] = v328;
        v329 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
        v330 = (char *)a1 + v329;
        v331 = (char *)a2 + v329;
        v332 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v332 - 8) + 16))(v330, v331, v332);
        goto LABEL_197;
      case 0x52u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v333 = *(int *)(type metadata accessor for Proto_ReduceL1LayerParams(0) + 28);
        v334 = (char *)a1 + v333;
        v335 = (char *)a2 + v333;
        v336 = sub_240F1C930();
        v337 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v336 - 8) + 16);
        swift_bridgeObjectRetain();
        v337(v334, v335, v336);
        goto LABEL_197;
      case 0x53u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v338 = *(int *)(type metadata accessor for Proto_ReduceL2LayerParams(0) + 28);
        v339 = (char *)a1 + v338;
        v340 = (char *)a2 + v338;
        v341 = sub_240F1C930();
        v342 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v341 - 8) + 16);
        swift_bridgeObjectRetain();
        v342(v339, v340, v341);
        goto LABEL_197;
      case 0x54u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v343 = *(int *)(type metadata accessor for Proto_ReduceMaxLayerParams(0) + 28);
        v344 = (char *)a1 + v343;
        v345 = (char *)a2 + v343;
        v346 = sub_240F1C930();
        v347 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 16);
        swift_bridgeObjectRetain();
        v347(v344, v345, v346);
        goto LABEL_197;
      case 0x55u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v348 = *(int *)(type metadata accessor for Proto_ReduceMinLayerParams(0) + 28);
        v349 = (char *)a1 + v348;
        v350 = (char *)a2 + v348;
        v351 = sub_240F1C930();
        v352 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v351 - 8) + 16);
        swift_bridgeObjectRetain();
        v352(v349, v350, v351);
        goto LABEL_197;
      case 0x56u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v353 = *(int *)(type metadata accessor for Proto_ReduceSumLayerParams(0) + 28);
        v354 = (char *)a1 + v353;
        v355 = (char *)a2 + v353;
        v356 = sub_240F1C930();
        v357 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v356 - 8) + 16);
        swift_bridgeObjectRetain();
        v357(v354, v355, v356);
        goto LABEL_197;
      case 0x57u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v358 = *(int *)(type metadata accessor for Proto_ReduceProdLayerParams(0) + 28);
        v359 = (char *)a1 + v358;
        v360 = (char *)a2 + v358;
        v361 = sub_240F1C930();
        v362 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v361 - 8) + 16);
        swift_bridgeObjectRetain();
        v362(v359, v360, v361);
        goto LABEL_197;
      case 0x58u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v363 = *(int *)(type metadata accessor for Proto_ReduceMeanLayerParams(0) + 28);
        v364 = (char *)a1 + v363;
        v365 = (char *)a2 + v363;
        v366 = sub_240F1C930();
        v367 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v366 - 8) + 16);
        swift_bridgeObjectRetain();
        v367(v364, v365, v366);
        goto LABEL_197;
      case 0x59u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v368 = *(int *)(type metadata accessor for Proto_ReduceLogSumLayerParams(0) + 28);
        v369 = (char *)a1 + v368;
        v370 = (char *)a2 + v368;
        v371 = sub_240F1C930();
        v372 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v371 - 8) + 16);
        swift_bridgeObjectRetain();
        v372(v369, v370, v371);
        goto LABEL_197;
      case 0x5Au:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v373 = *(int *)(type metadata accessor for Proto_ReduceSumSquareLayerParams(0) + 28);
        v374 = (char *)a1 + v373;
        v375 = (char *)a2 + v373;
        v376 = sub_240F1C930();
        v377 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v376 - 8) + 16);
        swift_bridgeObjectRetain();
        v377(v374, v375, v376);
        goto LABEL_197;
      case 0x5Bu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v378 = *(int *)(type metadata accessor for Proto_ReduceLogSumExpLayerParams(0) + 28);
        v379 = (char *)a1 + v378;
        v380 = (char *)a2 + v378;
        v381 = sub_240F1C930();
        v382 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v381 - 8) + 16);
        swift_bridgeObjectRetain();
        v382(v379, v380, v381);
        goto LABEL_197;
      case 0x5Eu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_BYTE *)a1 + 9) = *((_BYTE *)a2 + 9);
        v383 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
        v384 = (char *)a1 + v383;
        v385 = (char *)a2 + v383;
        v386 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v386 - 8) + 16))(v384, v385, v386);
        goto LABEL_197;
      case 0x5Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v387 = *(int *)(type metadata accessor for Proto_ArgMinLayerParams(0) + 24);
        v388 = (char *)a1 + v387;
        v389 = (char *)a2 + v387;
        v390 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 16))(v388, v389, v390);
        goto LABEL_197;
      case 0x60u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v391 = *(int *)(type metadata accessor for Proto_ArgMaxLayerParams(0) + 24);
        v392 = (char *)a1 + v391;
        v393 = (char *)a2 + v391;
        v394 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 16))(v392, v393, v394);
        goto LABEL_197;
      case 0x63u:
        v395 = sub_240F1C930();
        v396 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v395 - 8) + 16);
        v396((char *)a1, (char *)a2, v395);
        v397 = type metadata accessor for Proto_BranchLayerParams(0);
        v398 = *(int *)(v397 + 20);
        v399 = (_QWORD *)((char *)a1 + v398);
        v400 = (_QWORD *)((char *)a2 + v398);
        v401 = type metadata accessor for Proto_NeuralNetwork(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v400, 1, v401))
        {
          v402 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy(v399, v400, *(_QWORD *)(*(_QWORD *)(v402 - 8) + 64));
        }
        else
        {
          __dst = (void *)v397;
          *v399 = *v400;
          v399[1] = v400[1];
          v568 = v400[2];
          *((_BYTE *)v399 + 24) = *((_BYTE *)v400 + 24);
          v399[2] = v568;
          v569 = v400[4];
          *((_BYTE *)v399 + 40) = *((_BYTE *)v400 + 40);
          v399[4] = v569;
          v570 = *(int *)(v401 + 32);
          v667 = v396;
          v571 = (char *)v399 + v570;
          v572 = v395;
          v573 = (char *)v400 + v570;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v574 = v573;
          v395 = v572;
          v667(v571, v574, v572);
          v575 = *(int *)(v401 + 36);
          v576 = (char *)v399 + v575;
          v577 = (char *)v400 + v575;
          updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v577, 1, updated))
          {
            v579 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v576, v577, *(_QWORD *)(*(_QWORD *)(v579 - 8) + 64));
          }
          else
          {
            v667(v576, v577, v572);
            *(_QWORD *)&v576[*(int *)(updated + 20)] = *(_QWORD *)&v577[*(int *)(updated + 20)];
            swift_retain();
            __swift_storeEnumTagSinglePayload((uint64_t)v576, 0, 1, updated);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v399, 0, 1, v401);
          v396 = v667;
          v397 = (uint64_t)__dst;
        }
        v606 = *(int *)(v397 + 24);
        v607 = (uint64_t)a1 + v606;
        v608 = (uint64_t)a2 + v606;
        if (__swift_getEnumTagSinglePayload(v608, 1, v401))
          goto LABEL_163;
        *(_QWORD *)v607 = *(_QWORD *)v608;
        *(_QWORD *)(v607 + 8) = *(_QWORD *)(v608 + 8);
        v610 = *(_QWORD *)(v608 + 16);
        *(_BYTE *)(v607 + 24) = *(_BYTE *)(v608 + 24);
        *(_QWORD *)(v607 + 16) = v610;
        v611 = *(_QWORD *)(v608 + 32);
        *(_BYTE *)(v607 + 40) = *(_BYTE *)(v608 + 40);
        *(_QWORD *)(v607 + 32) = v611;
        v612 = *(int *)(v401 + 32);
        v613 = (char *)(v607 + v612);
        v614 = (char *)(v608 + v612);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v396(v613, v614, v395);
        v615 = *(int *)(v401 + 36);
        v616 = (char *)(v607 + v615);
        v617 = (char *)(v608 + v615);
        v618 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v617, 1, v618))
          goto LABEL_165;
        goto LABEL_173;
      case 0x65u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v403 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
        v404 = v403[6];
        v405 = (char *)a1 + v404;
        v406 = (char *)a2 + v404;
        v395 = sub_240F1C930();
        v396 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v395 - 8) + 16);
        swift_bridgeObjectRetain();
        v396(v405, v406, v395);
        v407 = v403[7];
        v408 = (_QWORD *)((char *)a1 + v407);
        v409 = (_QWORD *)((char *)a2 + v407);
        v401 = type metadata accessor for Proto_NeuralNetwork(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v409, 1, v401))
        {
          v410 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy(v408, v409, *(_QWORD *)(*(_QWORD *)(v410 - 8) + 64));
        }
        else
        {
          *v408 = *v409;
          v408[1] = v409[1];
          v580 = v409[2];
          *((_BYTE *)v408 + 24) = *((_BYTE *)v409 + 24);
          v408[2] = v580;
          v581 = v409[4];
          *((_BYTE *)v408 + 40) = *((_BYTE *)v409 + 40);
          v408[4] = v581;
          v582 = *(int *)(v401 + 32);
          v670 = v401;
          __dstg = (char *)v408 + v582;
          v583 = v395;
          v584 = (char *)v409 + v582;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v585 = v584;
          v395 = v583;
          v401 = v670;
          v586 = __dstg;
          __dsta = v396;
          v396(v586, v585, v395);
          v587 = *(int *)(v670 + 36);
          v588 = (char *)v408 + v587;
          v589 = (char *)v409 + v587;
          v590 = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v589, 1, v590))
          {
            v591 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v588, v589, *(_QWORD *)(*(_QWORD *)(v591 - 8) + 64));
          }
          else
          {
            __dsta(v588, v589, v395);
            *(_QWORD *)&v588[*(int *)(v590 + 20)] = *(_QWORD *)&v589[*(int *)(v590 + 20)];
            swift_retain();
            __swift_storeEnumTagSinglePayload((uint64_t)v588, 0, 1, v590);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v408, 0, 1, v670);
          v396 = __dsta;
        }
        v620 = v403[8];
        v607 = (uint64_t)a1 + v620;
        v608 = (uint64_t)a2 + v620;
        if (__swift_getEnumTagSinglePayload(v608, 1, v401))
        {
LABEL_163:
          v609 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy((void *)v607, (const void *)v608, *(_QWORD *)(*(_QWORD *)(v609 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v607 = *(_QWORD *)v608;
          *(_QWORD *)(v607 + 8) = *(_QWORD *)(v608 + 8);
          v621 = *(_QWORD *)(v608 + 16);
          *(_BYTE *)(v607 + 24) = *(_BYTE *)(v608 + 24);
          *(_QWORD *)(v607 + 16) = v621;
          v622 = *(_QWORD *)(v608 + 32);
          *(_BYTE *)(v607 + 40) = *(_BYTE *)(v608 + 40);
          *(_QWORD *)(v607 + 32) = v622;
          v623 = *(int *)(v401 + 32);
          v624 = (char *)(v607 + v623);
          v625 = (char *)(v608 + v623);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          v396(v624, v625, v395);
          v626 = *(int *)(v401 + 36);
          v616 = (char *)(v607 + v626);
          v617 = (char *)(v608 + v626);
          v618 = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v617, 1, v618))
          {
LABEL_165:
            v619 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v616, v617, *(_QWORD *)(*(_QWORD *)(v619 - 8) + 64));
          }
          else
          {
LABEL_173:
            v396(v616, v617, v395);
            *(_QWORD *)&v616[*(int *)(v618 + 20)] = *(_QWORD *)&v617[*(int *)(v618 + 20)];
            swift_retain();
            __swift_storeEnumTagSinglePayload((uint64_t)v616, 0, 1, v618);
          }
          __swift_storeEnumTagSinglePayload(v607, 0, 1, v401);
        }
        goto LABEL_197;
      case 0x68u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v411 = *(int *)(type metadata accessor for Proto_RangeStaticLayerParams(0) + 28);
        v412 = (char *)a1 + v411;
        v413 = (char *)a2 + v411;
        v414 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 16))(v412, v413, v414);
        goto LABEL_197;
      case 0x69u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        v415 = *(int *)(type metadata accessor for Proto_RangeDynamicLayerParams(0) + 24);
        v416 = (char *)a1 + v415;
        v417 = (char *)a2 + v415;
        v418 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v418 - 8) + 16))(v416, v417, v418);
        goto LABEL_197;
      case 0x6Au:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v419 = *(int *)(type metadata accessor for Proto_EqualLayerParams(0) + 20);
        v420 = (char *)a1 + v419;
        v421 = (char *)a2 + v419;
        v422 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 16))(v420, v421, v422);
        goto LABEL_197;
      case 0x6Bu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v423 = *(int *)(type metadata accessor for Proto_NotEqualLayerParams(0) + 20);
        v424 = (char *)a1 + v423;
        v425 = (char *)a2 + v423;
        v426 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 16))(v424, v425, v426);
        goto LABEL_197;
      case 0x6Cu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v427 = *(int *)(type metadata accessor for Proto_LessThanLayerParams(0) + 20);
        v428 = (char *)a1 + v427;
        v429 = (char *)a2 + v427;
        v430 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v430 - 8) + 16))(v428, v429, v430);
        goto LABEL_197;
      case 0x6Du:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v431 = *(int *)(type metadata accessor for Proto_LessEqualLayerParams(0) + 20);
        v432 = (char *)a1 + v431;
        v433 = (char *)a2 + v431;
        v434 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 16))(v432, v433, v434);
        goto LABEL_197;
      case 0x6Eu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v435 = *(int *)(type metadata accessor for Proto_GreaterThanLayerParams(0) + 20);
        v436 = (char *)a1 + v435;
        v437 = (char *)a2 + v435;
        v438 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v438 - 8) + 16))(v436, v437, v438);
        goto LABEL_197;
      case 0x6Fu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v439 = *(int *)(type metadata accessor for Proto_GreaterEqualLayerParams(0) + 20);
        v440 = (char *)a1 + v439;
        v441 = (char *)a2 + v439;
        v442 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v442 - 8) + 16))(v440, v441, v442);
        goto LABEL_197;
      case 0x70u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v443 = *(int *)(type metadata accessor for Proto_RandomNormalLikeLayerParams(0) + 28);
        v444 = (char *)a1 + v443;
        v445 = (char *)a2 + v443;
        v446 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 16))(v444, v445, v446);
        goto LABEL_197;
      case 0x71u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        a1[2] = a2[2];
        v447 = *(int *)(type metadata accessor for Proto_RandomNormalStaticLayerParams(0) + 32);
        v448 = (char *)a1 + v447;
        v449 = (char *)a2 + v447;
        v450 = sub_240F1C930();
        v451 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v450 - 8) + 16);
        swift_bridgeObjectRetain();
        v451(v448, v449, v450);
        goto LABEL_197;
      case 0x72u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v452 = *(int *)(type metadata accessor for Proto_RandomNormalDynamicLayerParams(0) + 28);
        v453 = (char *)a1 + v452;
        v454 = (char *)a2 + v452;
        v455 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v455 - 8) + 16))(v453, v454, v455);
        goto LABEL_197;
      case 0x73u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v456 = *(int *)(type metadata accessor for Proto_RandomUniformLikeLayerParams(0) + 28);
        v457 = (char *)a1 + v456;
        v458 = (char *)a2 + v456;
        v459 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v459 - 8) + 16))(v457, v458, v459);
        goto LABEL_197;
      case 0x74u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        a1[2] = a2[2];
        v460 = *(int *)(type metadata accessor for Proto_RandomUniformStaticLayerParams(0) + 32);
        v461 = (char *)a1 + v460;
        v462 = (char *)a2 + v460;
        v463 = sub_240F1C930();
        v464 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v463 - 8) + 16);
        swift_bridgeObjectRetain();
        v464(v461, v462, v463);
        goto LABEL_197;
      case 0x75u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v465 = *(int *)(type metadata accessor for Proto_RandomUniformDynamicLayerParams(0) + 28);
        v466 = (char *)a1 + v465;
        v467 = (char *)a2 + v465;
        v468 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v468 - 8) + 16))(v466, v467, v468);
        goto LABEL_197;
      case 0x76u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v469 = *(int *)(type metadata accessor for Proto_RandomBernoulliLikeLayerParams(0) + 24);
        v470 = (char *)a1 + v469;
        v471 = (char *)a2 + v469;
        v472 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v472 - 8) + 16))(v470, v471, v472);
        goto LABEL_197;
      case 0x77u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        v473 = *(int *)(type metadata accessor for Proto_RandomBernoulliStaticLayerParams(0) + 28);
        v474 = (char *)a1 + v473;
        v475 = (char *)a2 + v473;
        v476 = sub_240F1C930();
        v477 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v476 - 8) + 16);
        swift_bridgeObjectRetain();
        v477(v474, v475, v476);
        goto LABEL_197;
      case 0x78u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v478 = *(int *)(type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(0) + 24);
        v479 = (char *)a1 + v478;
        v480 = (char *)a2 + v478;
        v481 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v481 - 8) + 16))(v479, v480, v481);
        goto LABEL_197;
      case 0x79u:
        *a1 = *a2;
        a1[1] = a2[1];
        v482 = *(int *)(type metadata accessor for Proto_MatrixBandPartLayerParams(0) + 24);
        v483 = (char *)a1 + v482;
        v484 = (char *)a2 + v482;
        v485 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v485 - 8) + 16))(v483, v484, v485);
        goto LABEL_197;
      case 0x7Au:
        *a1 = *a2;
        v486 = *(int *)(type metadata accessor for Proto_LowerTriangularLayerParams(0) + 20);
        v487 = (char *)a1 + v486;
        v488 = (char *)a2 + v486;
        v489 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v489 - 8) + 16))(v487, v488, v489);
        goto LABEL_197;
      case 0x7Bu:
        *a1 = *a2;
        v490 = *(int *)(type metadata accessor for Proto_UpperTriangularLayerParams(0) + 20);
        v491 = (char *)a1 + v490;
        v492 = (char *)a2 + v490;
        v493 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v493 - 8) + 16))(v491, v492, v493);
        goto LABEL_197;
      case 0x7Cu:
        v494 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v494 - 8) + 16))(a1, a2, v494);
        v495 = type metadata accessor for Proto_EmbeddingLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v495 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v495 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x7Du:
        v496 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v496 - 8) + 16))(a1, a2, v496);
        v497 = type metadata accessor for Proto_EmbeddingNDLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v497 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v497 + 20));
        swift_retain();
        goto LABEL_197;
      case 0x7Eu:
        *a1 = *a2;
        v498 = type metadata accessor for Proto_BiasLayerParams(0);
        v499 = *(int *)(v498 + 20);
        v500 = (char *)a1 + v499;
        v501 = (char *)a2 + v499;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
        swift_bridgeObjectRetain();
        v11(v500, v501, v10);
        v502 = *(int *)(v498 + 24);
        v13 = (uint64_t)a1 + v502;
        v14 = (uint64_t)a2 + v502;
        v15 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v14, 1, v15))
        {
LABEL_7:
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
          memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          v592 = *(_QWORD *)(v14 + 8);
          v593 = *(_QWORD *)(v14 + 16);
          swift_bridgeObjectRetain();
          sub_240BF5610(v592, v593);
          *(_QWORD *)(v13 + 8) = v592;
          *(_QWORD *)(v13 + 16) = v593;
          v594 = *(_QWORD *)(v14 + 24);
          v595 = *(_QWORD *)(v14 + 32);
          sub_240BF5610(v594, v595);
          *(_QWORD *)(v13 + 24) = v594;
          *(_QWORD *)(v13 + 32) = v595;
          v596 = *(_QWORD *)(v14 + 40);
          v597 = *(_QWORD *)(v14 + 48);
          sub_240BF5610(v596, v597);
          *(_QWORD *)(v13 + 40) = v596;
          *(_QWORD *)(v13 + 48) = v597;
          *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
          v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
          v598 = *(int *)(v15 + 40);
          v535 = (_QWORD *)(v13 + v598);
          v536 = (_QWORD *)(v14 + v598);
          v537 = type metadata accessor for Proto_QuantizationParams(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v536, 1, v537))
          {
LABEL_153:
            v599 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
            memcpy(v535, v536, *(_QWORD *)(*(_QWORD *)(v599 - 8) + 64));
          }
          else
          {
            *v535 = *v536;
            v627 = *(int *)(v537 + 20);
            v671 = (uint64_t)v535;
            __dstb = (_QWORD *)((char *)v535 + v627);
            v602 = (_QWORD *)((char *)v536 + v627);
            v603 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v602, 1, v603))
            {
LABEL_159:
              v605 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
              memcpy(__dstb, v602, *(_QWORD *)(*(_QWORD *)(v605 - 8) + 64));
            }
            else
            {
              v655 = swift_getEnumCaseMultiPayload();
              *__dstb = *v602;
              if (v655 == 1)
              {
LABEL_187:
                v653 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
                v666 = (char *)__dstb + v653;
                v654 = (char *)v602 + v653;
                swift_bridgeObjectRetain();
                v11(v666, v654, v10);
              }
              else
              {
LABEL_193:
                __dstb[1] = v602[1];
                v662 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
                v665 = (char *)__dstb + v662;
                v663 = (char *)v602 + v662;
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                v11(v665, v663, v10);
              }
              swift_storeEnumTagMultiPayload();
              __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v603);
            }
            v11((char *)(v671 + *(int *)(v537 + 24)), (char *)v536 + *(int *)(v537 + 24), v10);
            __swift_storeEnumTagSinglePayload(v671, 0, 1, v537);
          }
          __swift_storeEnumTagSinglePayload(v13, 0, 1, v15);
        }
LABEL_197:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x7Fu:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *((_DWORD *)a1 + 5) = *((_DWORD *)a2 + 5);
        *((_DWORD *)a1 + 6) = *((_DWORD *)a2 + 6);
        v503 = *(int *)(type metadata accessor for Proto_CategoricalDistributionLayerParams(0) + 36);
        v504 = (char *)a1 + v503;
        v505 = (char *)a2 + v503;
        v506 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v506 - 8) + 16))(v504, v505, v506);
        goto LABEL_197;
      case 0x80u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        *((_DWORD *)a1 + 5) = *((_DWORD *)a2 + 5);
        v507 = *(int *)(type metadata accessor for Proto_OneHotLayerParams(0) + 32);
        v508 = (char *)a1 + v507;
        v509 = (char *)a2 + v507;
        v510 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v510 - 8) + 16))(v508, v509, v510);
        goto LABEL_197;
      case 0x81u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v511 = *(int *)(type metadata accessor for Proto_TopKLayerParams(0) + 28);
        v512 = (char *)a1 + v511;
        v513 = (char *)a2 + v511;
        v514 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v514 - 8) + 16))(v512, v513, v514);
        goto LABEL_197;
      case 0x82u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v515 = *(int *)(type metadata accessor for Proto_ArgSortLayerParams(0) + 24);
        v516 = (char *)a1 + v515;
        v517 = (char *)a2 + v515;
        v518 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v518 - 8) + 16))(v516, v517, v518);
        goto LABEL_197;
      case 0x83u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v519 = *(int *)(type metadata accessor for Proto_NonMaximumSuppressionLayerParams(0) + 32);
        v520 = (char *)a1 + v519;
        v521 = (char *)a2 + v519;
        v522 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v522 - 8) + 16))(v520, v521, v522);
        goto LABEL_197;
      case 0x84u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        a1[3] = a2[3];
        a1[4] = a2[4];
        a1[5] = a2[5];
        v523 = *(int *)(type metadata accessor for Proto_CustomLayerParams(0) + 32);
        v524 = (char *)a1 + v523;
        v525 = (char *)a2 + v523;
        v526 = sub_240F1C930();
        v527 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v526 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v527(v524, v525, v526);
        goto LABEL_197;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

_QWORD *_s4KindOwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t ConstantLayerParams;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ConstantNDLayerParams;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int *v197;
  uint64_t v198;
  _BYTE *v199;
  _BYTE *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  void (*v252)(char *, char *, uint64_t);
  uint64_t v253;
  _DWORD *v254;
  _DWORD *v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  void (*v264)(char *, char *, uint64_t);
  uint64_t v265;
  _DWORD *v266;
  _DWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  void (*v279)(char *, char *, uint64_t);
  uint64_t v280;
  _QWORD *v281;
  _QWORD *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  void (*v290)(char *, char *, uint64_t);
  uint64_t v291;
  _BYTE *v292;
  _BYTE *v293;
  uint64_t v294;
  uint64_t v295;
  int *v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  void (*v301)(char *, char *, uint64_t);
  uint64_t v302;
  _BYTE *v303;
  _BYTE *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  void (*v364)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v365;
  uint64_t v366;
  _OWORD *v367;
  _OWORD *v368;
  uint64_t v369;
  uint64_t v370;
  int *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  _OWORD *v376;
  _OWORD *v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  char *v469;
  char *v470;
  uint64_t v471;
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  uint64_t v476;
  char *v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  char *v481;
  char *v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  char *v486;
  uint64_t v487;
  __int128 v488;
  uint64_t v489;
  char *v490;
  char *v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  _QWORD *v495;
  uint64_t v496;
  uint64_t v497;
  int v498;
  uint64_t v499;
  int v500;
  uint64_t valid;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  _BYTE *v508;
  _BYTE *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  char *v513;
  uint64_t updated;
  uint64_t v515;
  uint64_t v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  char *v532;
  char *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  char *v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  char *v546;
  char *v547;
  uint64_t v548;
  uint64_t v549;
  _BYTE *v550;
  _BYTE *v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  _QWORD *v555;
  uint64_t v556;
  uint64_t v557;
  int EnumCaseMultiPayload;
  uint64_t v559;
  uint64_t v560;
  int v561;
  int v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  char *v567;
  char *v568;
  uint64_t v569;
  _QWORD *result;
  uint64_t v571;
  char *v572;
  void *v573;
  char *__dst;
  char *__dsta;
  char *__dstb;
  _QWORD *__dstc;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
      *a1 = *a2;
      ConstantLayerParams = type metadata accessor for Proto_LoadConstantLayerParams(0);
      v7 = *(int *)(ConstantLayerParams + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v8, v9, v10);
      v12 = *(int *)(ConstantLayerParams + 24);
      v13 = (uint64_t)a1 + v12;
      v14 = (uint64_t)a2 + v12;
      v15 = type metadata accessor for Proto_WeightParams(0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15))
        goto LABEL_6;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
      *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
      v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
      v493 = *(int *)(v15 + 40);
      v494 = (char *)(v13 + v493);
      v495 = (_QWORD *)(v14 + v493);
      v496 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
        goto LABEL_152;
      *(_QWORD *)v494 = *v495;
      v522 = *(int *)(v496 + 20);
      v572 = &v494[v522];
      __dstb = v494;
      v523 = (char *)v495 + v522;
      v524 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v524))
        goto LABEL_158;
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v572 = *(_QWORD *)v523;
      if (EnumCaseMultiPayload == 1)
        goto LABEL_185;
      goto LABEL_193;
    case 1u:
      *a1 = *a2;
      ConstantNDLayerParams = type metadata accessor for Proto_LoadConstantNDLayerParams(0);
      v17 = *(int *)(ConstantNDLayerParams + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v18, v19, v10);
      v20 = *(int *)(ConstantNDLayerParams + 24);
      v13 = (uint64_t)a1 + v20;
      v14 = (uint64_t)a2 + v20;
      v15 = type metadata accessor for Proto_WeightParams(0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15))
        goto LABEL_6;
      *(_QWORD *)v13 = *(_QWORD *)v14;
      *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
      *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
      *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
      *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
      v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
      v497 = *(int *)(v15 + 40);
      v494 = (char *)(v13 + v497);
      v495 = (_QWORD *)(v14 + v497);
      v496 = type metadata accessor for Proto_QuantizationParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
        goto LABEL_152;
      *(_QWORD *)v494 = *v495;
      v525 = *(int *)(v496 + 20);
      v572 = &v494[v525];
      __dstb = v494;
      v523 = (char *)v495 + v525;
      v524 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v524))
        goto LABEL_158;
      v561 = swift_getEnumCaseMultiPayload();
      *(_QWORD *)v572 = *(_QWORD *)v523;
      if (v561 == 1)
      {
LABEL_185:
        v559 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
        v560 = 5;
      }
      else
      {
LABEL_193:
        *((_QWORD *)v572 + 1) = *((_QWORD *)v523 + 1);
        v559 = type metadata accessor for Proto_LinearQuantizationParams(0);
        v560 = 6;
      }
      v11(&v572[*(int *)(v559 + 4 * v560)], &v523[*(int *)(v559 + 4 * v560)], v10);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v572, 0, 1, v524);
      goto LABEL_198;
    case 2u:
      v22 = type metadata accessor for Proto_PaddingLayerParams.OneOf_PaddingType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v22))
      {
        v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F8);
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
      }
      else
      {
        v498 = swift_getEnumCaseMultiPayload();
        if (v498 == 2 || v498 == 1)
        {
          v499 = sub_240F1C930();
          (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v499 - 8) + 32))(a1, a2, v499);
        }
        else
        {
          *(_DWORD *)a1 = *(_DWORD *)a2;
          v540 = *(int *)(type metadata accessor for Proto_PaddingLayerParams.PaddingConstant(0) + 20);
          v541 = (char *)a1 + v540;
          v542 = (char *)a2 + v540;
          v543 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v543 - 8) + 32))(v541, v542, v543);
        }
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v22);
      }
      v544 = type metadata accessor for Proto_PaddingLayerParams(0);
      v545 = *(int *)(v544 + 20);
      v546 = (char *)a1 + v545;
      v547 = (char *)a2 + v545;
      v278 = sub_240F1C930();
      v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 32);
      v279(v546, v547, v278);
      v548 = *(int *)(v544 + 24);
      v281 = (_QWORD *)((char *)a1 + v548);
      v282 = (_QWORD *)((char *)a2 + v548);
      v283 = type metadata accessor for Proto_BorderAmounts(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v282, 1, v283))
        goto LABEL_179;
      goto LABEL_75;
    case 3u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v24 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
      v25 = (char *)a1 + v24;
      v26 = (char *)a2 + v24;
      v27 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
      goto LABEL_200;
    case 4u:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v28 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
      v29 = (char *)a1 + v28;
      v30 = (char *)a2 + v28;
      v31 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
      goto LABEL_200;
    case 5u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v32 = *(int *)(type metadata accessor for Proto_ConcatNDLayerParams(0) + 24);
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
      goto LABEL_200;
    case 6u:
      *a1 = *a2;
      v36 = *(int *)(type metadata accessor for Proto_SplitLayerParams(0) + 20);
      v37 = (char *)a1 + v36;
      v38 = (char *)a2 + v36;
      v39 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
      goto LABEL_200;
    case 7u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v40 = *(int *)(type metadata accessor for Proto_SplitNDLayerParams(0) + 28);
      v41 = (char *)a1 + v40;
      v42 = (char *)a2 + v40;
      v43 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
      goto LABEL_200;
    case 8u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      a1[4] = a2[4];
      *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
      v44 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
      v45 = (char *)a1 + v44;
      v46 = (char *)a2 + v44;
      v47 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
      goto LABEL_200;
    case 9u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v48 = *(int *)(type metadata accessor for Proto_FillLikeLayerParams(0) + 20);
      v49 = (char *)a1 + v48;
      v50 = (char *)a2 + v48;
      v51 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
      goto LABEL_200;
    case 0xAu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      a1[1] = a2[1];
      v52 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
      v53 = (char *)a1 + v52;
      v54 = (char *)a2 + v52;
      v55 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
      goto LABEL_200;
    case 0xBu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v56 = *(int *)(type metadata accessor for Proto_FillDynamicLayerParams(0) + 20);
      v57 = (char *)a1 + v56;
      v58 = (char *)a2 + v56;
      v59 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
      goto LABEL_200;
    case 0xCu:
      *a1 = *a2;
      v60 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
      v61 = (char *)a1 + v60;
      v62 = (char *)a2 + v60;
      v63 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
      goto LABEL_200;
    case 0xDu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v64 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
      v65 = (char *)a1 + v64;
      v66 = (char *)a2 + v64;
      v67 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
      goto LABEL_200;
    case 0xEu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      a1[2] = a2[2];
      v68 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
      v69 = (char *)a1 + v68;
      v70 = (char *)a2 + v68;
      v71 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
      goto LABEL_200;
    case 0xFu:
      *a1 = *a2;
      v72 = *(int *)(type metadata accessor for Proto_TileLayerParams(0) + 20);
      v73 = (char *)a1 + v72;
      v74 = (char *)a2 + v72;
      v75 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
      goto LABEL_200;
    case 0x10u:
      *a1 = *a2;
      v76 = *(int *)(type metadata accessor for Proto_ReverseLayerParams(0) + 20);
      v77 = (char *)a1 + v76;
      v78 = (char *)a2 + v76;
      v79 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
      goto LABEL_200;
    case 0x11u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v80 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
      v81 = (char *)a1 + v80;
      v82 = (char *)a2 + v80;
      v83 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
      goto LABEL_200;
    case 0x12u:
      *a1 = *a2;
      v84 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
      v85 = (char *)a1 + v84;
      v86 = (char *)a2 + v84;
      v87 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
      goto LABEL_200;
    case 0x13u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v88 = *(int *)(type metadata accessor for Proto_FlattenLayerParams(0) + 20);
      v89 = (char *)a1 + v88;
      v90 = (char *)a2 + v88;
      v91 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
      goto LABEL_200;
    case 0x14u:
      v92 = a2[1];
      *a1 = *a2;
      a1[1] = v92;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v93 = *(int *)(type metadata accessor for Proto_ReshapeLayerParams(0) + 24);
      v94 = (char *)a1 + v93;
      v95 = (char *)a2 + v93;
      v96 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
      goto LABEL_200;
    case 0x15u:
      *a1 = *a2;
      v97 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
      v98 = (char *)a1 + v97;
      v99 = (char *)a2 + v97;
      v100 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
      goto LABEL_200;
    case 0x16u:
      *a1 = *a2;
      v101 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
      v102 = (char *)a1 + v101;
      v103 = (char *)a2 + v101;
      v104 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
      goto LABEL_200;
    case 0x17u:
      *a1 = *a2;
      v105 = *(int *)(type metadata accessor for Proto_PermuteLayerParams(0) + 20);
      v106 = (char *)a1 + v105;
      v107 = (char *)a2 + v105;
      v108 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
      goto LABEL_200;
    case 0x18u:
      *a1 = *a2;
      v109 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
      v110 = (char *)a1 + v109;
      v111 = (char *)a2 + v109;
      v112 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
      goto LABEL_200;
    case 0x19u:
    case 0x1Bu:
    case 0x1Du:
    case 0x1Eu:
    case 0x21u:
    case 0x38u:
    case 0x39u:
    case 0x3Au:
    case 0x3Bu:
    case 0x3Eu:
    case 0x3Fu:
    case 0x40u:
    case 0x43u:
    case 0x50u:
    case 0x5Cu:
    case 0x5Du:
    case 0x61u:
    case 0x62u:
    case 0x64u:
    case 0x66u:
    case 0x67u:
      v121 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(a1, a2, v121);
      goto LABEL_200;
    case 0x1Au:
      *a1 = *a2;
      v113 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
      v114 = (char *)a1 + v113;
      v115 = (char *)a2 + v113;
      v116 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
      goto LABEL_200;
    case 0x1Cu:
      *a1 = *a2;
      v117 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
      v118 = (char *)a1 + v117;
      v119 = (char *)a2 + v117;
      v120 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
      goto LABEL_200;
    case 0x1Fu:
      *a1 = *a2;
      v122 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
      v123 = (char *)a1 + v122;
      v124 = (char *)a2 + v122;
      v125 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
      goto LABEL_200;
    case 0x20u:
      *a1 = *a2;
      v126 = *(int *)(type metadata accessor for Proto_GatherLayerParams(0) + 20);
      v127 = (char *)a1 + v126;
      v128 = (char *)a2 + v126;
      v129 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
      goto LABEL_200;
    case 0x22u:
      *a1 = *a2;
      v130 = *(int *)(type metadata accessor for Proto_GatherAlongAxisLayerParams(0) + 20);
      v131 = (char *)a1 + v130;
      v132 = (char *)a2 + v130;
      v133 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v131, v132, v133);
      goto LABEL_200;
    case 0x23u:
      v134 = a2[1];
      *a1 = *a2;
      a1[1] = v134;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v135 = *(int *)(type metadata accessor for Proto_ScatterLayerParams(0) + 24);
      v136 = (char *)a1 + v135;
      v137 = (char *)a2 + v135;
      v138 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
      goto LABEL_200;
    case 0x24u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v139 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
      v140 = (char *)a1 + v139;
      v141 = (char *)a2 + v139;
      v142 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v140, v141, v142);
      goto LABEL_200;
    case 0x25u:
      v143 = a2[1];
      *a1 = *a2;
      a1[1] = v143;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v144 = *(int *)(type metadata accessor for Proto_ScatterAlongAxisLayerParams(0) + 24);
      v145 = (char *)a1 + v144;
      v146 = (char *)a2 + v144;
      v147 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v145, v146, v147);
      goto LABEL_200;
    case 0x26u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v148 = a2[3];
      a1[2] = a2[2];
      a1[3] = v148;
      *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
      v149 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
      v150 = (char *)a1 + v149;
      v151 = (char *)a2 + v149;
      v152 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v150, v151, v152);
      goto LABEL_200;
    case 0x27u:
      v153 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v153;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v154 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
      v155 = (char *)a1 + v154;
      v156 = (char *)a2 + v154;
      v157 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
      goto LABEL_200;
    case 0x28u:
      v158 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v158;
      a1[4] = a2[4];
      v159 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
      v160 = (char *)a1 + v159;
      v161 = (char *)a2 + v159;
      v162 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
      goto LABEL_200;
    case 0x29u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v163 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
      v164 = (char *)a1 + v163;
      v165 = (char *)a2 + v163;
      v166 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
      goto LABEL_200;
    case 0x2Au:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v167 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
      v168 = (char *)a1 + v167;
      v169 = (char *)a2 + v167;
      v170 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v168, v169, v170);
      goto LABEL_200;
    case 0x2Bu:
      v171 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
      v172 = type metadata accessor for Proto_InnerProductLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v172 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v172 + 20));
      goto LABEL_200;
    case 0x2Cu:
      type metadata accessor for NeuralNetwork.Layer.Activation(0);
      v173 = (char *)&loc_240C1CCC4 + 4 * word_240F1E42E[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
      return result;
    case 0x2Du:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
      v174 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
      v175 = (char *)a1 + v174;
      v176 = (char *)a2 + v174;
      v177 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
      goto LABEL_200;
    case 0x2Eu:
      *a1 = *a2;
      v178 = *(int *)(type metadata accessor for NeuralNetwork.Layer.ClipParameters() + 24);
      v179 = (char *)a1 + v178;
      v180 = (char *)a2 + v178;
      *(_QWORD *)((char *)a1 + v178) = *(_QWORD *)((char *)a2 + v178);
      v181 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
      v182 = &v179[v181];
      v183 = &v180[v181];
      v184 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
      goto LABEL_200;
    case 0x2Fu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v185 = *(int *)(type metadata accessor for Proto_GeluLayerParams(0) + 20);
      v186 = (char *)a1 + v185;
      v187 = (char *)a2 + v185;
      v188 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v186, v187, v188);
      goto LABEL_200;
    case 0x30u:
      *a1 = *a2;
      v189 = *(int *)(type metadata accessor for Proto_ClampedReLULayerParams(0) + 24);
      v190 = (char *)a1 + v189;
      v191 = (char *)a2 + v189;
      v192 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v190, v191, v192);
      goto LABEL_200;
    case 0x31u:
      v193 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(a1, a2, v193);
      v194 = type metadata accessor for Proto_ConvolutionLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v194 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v194 + 20));
      goto LABEL_200;
    case 0x32u:
      v195 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(a1, a2, v195);
      v196 = type metadata accessor for Proto_Convolution3DLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v196 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v196 + 20));
      goto LABEL_200;
    case 0x33u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
      v197 = (int *)type metadata accessor for Proto_PoolingLayerParams(0);
      v198 = v197[7];
      v199 = (char *)a1 + v198;
      v200 = (char *)a2 + v198;
      v201 = type metadata accessor for Proto_PoolingLayerParams.OneOf_PoolingPaddingType(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v201))
      {
        v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C200);
        memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
        goto LABEL_192;
      }
      v500 = swift_getEnumCaseMultiPayload();
      if (v500 == 2)
      {
        *(_QWORD *)v199 = *(_QWORD *)v200;
        valid = type metadata accessor for Proto_PoolingLayerParams.ValidCompletePadding(0);
        goto LABEL_181;
      }
      if (v500 == 1)
      {
        *(_QWORD *)v199 = *(_QWORD *)v200;
        v199[8] = v200[8];
        valid = type metadata accessor for Proto_SamePadding(0);
LABEL_181:
        v549 = *(int *)(valid + 20);
        v550 = &v199[v549];
        v551 = &v200[v549];
        v552 = sub_240F1C930();
        (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v552 - 8) + 32))(v550, v551, v552);
        goto LABEL_191;
      }
      v553 = sub_240F1C930();
      v573 = *(void **)(*(_QWORD *)(v553 - 8) + 32);
      ((void (*)(_BYTE *, _BYTE *, uint64_t))v573)(v199, v200, v553);
      v554 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
      __dstc = &v199[v554];
      v555 = &v200[v554];
      v556 = type metadata accessor for Proto_BorderAmounts(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v555, 1, v556))
      {
        v557 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
        memcpy(__dstc, v555, *(_QWORD *)(*(_QWORD *)(v557 - 8) + 64));
      }
      else
      {
        *__dstc = *v555;
        ((void (*)(char *, char *, uint64_t))v573)((char *)__dstc + *(int *)(v556 + 20), (char *)v555 + *(int *)(v556 + 20), v553);
        __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v556);
      }
LABEL_191:
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v201);
LABEL_192:
      *((_BYTE *)a1 + v197[8]) = *((_BYTE *)a2 + v197[8]);
      *((_BYTE *)a1 + v197[9]) = *((_BYTE *)a2 + v197[9]);
      v566 = v197[10];
      v567 = (char *)a1 + v566;
      v568 = (char *)a2 + v566;
      v569 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v569 - 8) + 32))(v567, v568, v569);
LABEL_200:
      swift_storeEnumTagMultiPayload();
      return a1;
    case 0x34u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
      *(_QWORD *)((char *)a1 + 28) = *(_QWORD *)((char *)a2 + 28);
      a1[5] = a2[5];
      *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
      *(_OWORD *)((char *)a1 + 52) = *(_OWORD *)((char *)a2 + 52);
      *(_QWORD *)((char *)a1 + 68) = *(_QWORD *)((char *)a2 + 68);
      *((_BYTE *)a1 + 76) = *((_BYTE *)a2 + 76);
      v203 = *(int *)(type metadata accessor for Proto_Pooling3DLayerParams(0) + 76);
      v204 = (char *)a1 + v203;
      v205 = (char *)a2 + v203;
      v206 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
      goto LABEL_200;
    case 0x35u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v207 = *(int *)(type metadata accessor for Proto_GlobalPooling3DLayerParams(0) + 20);
      v208 = (char *)a1 + v207;
      v209 = (char *)a2 + v207;
      v210 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v208, v209, v210);
      goto LABEL_200;
    case 0x36u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v211 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
      v212 = (char *)a1 + v211;
      v213 = (char *)a2 + v211;
      v214 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
      goto LABEL_200;
    case 0x37u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v215 = *(int *)(type metadata accessor for Proto_MultiplyLayerParams(0) + 20);
      v216 = (char *)a1 + v215;
      v217 = (char *)a2 + v215;
      v218 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v216, v217, v218);
      goto LABEL_200;
    case 0x3Cu:
      v219 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(a1, a2, v219);
      v220 = type metadata accessor for Proto_BatchedMatMulLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v220 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v220 + 20));
      goto LABEL_200;
    case 0x3Du:
      *(_BYTE *)a1 = *(_BYTE *)a2;
      v221 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
      v222 = (char *)a1 + v221;
      v223 = (char *)a2 + v221;
      v224 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 32))(v222, v223, v224);
      goto LABEL_200;
    case 0x41u:
      v225 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v225 - 8) + 32))(a1, a2, v225);
      v226 = type metadata accessor for Proto_ScaleLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v226 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v226 + 20));
      goto LABEL_200;
    case 0x42u:
      v227 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(a1, a2, v227);
      v228 = type metadata accessor for Proto_BatchnormLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v228 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v228 + 20));
      goto LABEL_200;
    case 0x44u:
      *a1 = *a2;
      v229 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
      v230 = (char *)a1 + v229;
      v231 = (char *)a2 + v229;
      v232 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v230, v231, v232);
      goto LABEL_200;
    case 0x45u:
      *(_WORD *)a1 = *(_WORD *)a2;
      *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
      v233 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
      v234 = (char *)a1 + v233;
      v235 = (char *)a2 + v233;
      v236 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v234, v235, v236);
      goto LABEL_200;
    case 0x46u:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v237 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
      v238 = (char *)a1 + v237;
      v239 = (char *)a2 + v237;
      v240 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v238, v239, v240);
      goto LABEL_200;
    case 0x47u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
      v241 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
      v242 = (char *)a1 + v241;
      v243 = (char *)a2 + v241;
      v244 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v242, v243, v244);
      goto LABEL_200;
    case 0x48u:
      v245 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(a1, a2, v245);
      v246 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v246 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v246 + 20));
      goto LABEL_200;
    case 0x49u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v247 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
      v248 = v247[8];
      v249 = (char *)a1 + v248;
      v250 = (char *)a2 + v248;
      v251 = sub_240F1C930();
      v252 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 32);
      v252(v249, v250, v251);
      v253 = v247[9];
      v254 = (_DWORD *)((char *)a1 + v253);
      v255 = (_DWORD *)((char *)a2 + v253);
      v256 = type metadata accessor for Proto_LSTMParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, v256))
      {
        v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
        memcpy(v254, v255, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
      }
      else
      {
        *v254 = *v255;
        *((_BYTE *)v254 + 4) = *((_BYTE *)v255 + 4);
        v254[2] = v255[2];
        v252((char *)v254 + *(int *)(v256 + 40), (char *)v255 + *(int *)(v256 + 40), v251);
        __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v256);
      }
      v502 = v247[10];
      v503 = (char *)a1 + v502;
      v504 = (char *)a2 + v502;
      v505 = type metadata accessor for Proto_LSTMWeightParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v504, 1, v505))
      {
        v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
        memcpy(v503, v504, *(_QWORD *)(*(_QWORD *)(v506 - 8) + 64));
      }
      else
      {
        v252(v503, v504, v251);
        *(_QWORD *)&v503[*(int *)(v505 + 20)] = *(_QWORD *)&v504[*(int *)(v505 + 20)];
        __swift_storeEnumTagSinglePayload((uint64_t)v503, 0, 1, v505);
      }
      goto LABEL_200;
    case 0x4Au:
      v258 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v258;
      a1[4] = a2[4];
      v259 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
      v260 = *(int *)(v259 + 36);
      v261 = (char *)a1 + v260;
      v262 = (char *)a2 + v260;
      v263 = sub_240F1C930();
      v264 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32);
      v264(v261, v262, v263);
      v265 = *(int *)(v259 + 40);
      v266 = (_DWORD *)((char *)a1 + v265);
      v267 = (_DWORD *)((char *)a2 + v265);
      v268 = type metadata accessor for Proto_LSTMParams(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v267, 1, v268))
      {
        v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
        memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
      }
      else
      {
        *v266 = *v267;
        *((_BYTE *)v266 + 4) = *((_BYTE *)v267 + 4);
        v266[2] = v267[2];
        v264((char *)v266 + *(int *)(v268 + 40), (char *)v267 + *(int *)(v268 + 40), v263);
        __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v268);
      }
      goto LABEL_200;
    case 0x4Bu:
      v270 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(a1, a2, v270);
      v271 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v271 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v271 + 20));
      goto LABEL_200;
    case 0x4Cu:
      v272 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(a1, a2, v272);
      v273 = type metadata accessor for Proto_GRULayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v273 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v273 + 20));
      goto LABEL_200;
    case 0x4Du:
      *a1 = *a2;
      v274 = type metadata accessor for Proto_CropLayerParams(0);
      v275 = *(int *)(v274 + 20);
      v276 = (char *)a1 + v275;
      v277 = (char *)a2 + v275;
      v278 = sub_240F1C930();
      v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 32);
      v279(v276, v277, v278);
      v280 = *(int *)(v274 + 24);
      v281 = (_QWORD *)((char *)a1 + v280);
      v282 = (_QWORD *)((char *)a2 + v280);
      v283 = type metadata accessor for Proto_BorderAmounts(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v282, 1, v283))
      {
LABEL_75:
        v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
        memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
      }
      else
      {
LABEL_179:
        *v281 = *v282;
        v279((char *)v281 + *(int *)(v283 + 20), (char *)v282 + *(int *)(v283 + 20), v278);
        __swift_storeEnumTagSinglePayload((uint64_t)v281, 0, 1, v283);
      }
      goto LABEL_200;
    case 0x4Eu:
      *a1 = *a2;
      v285 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
      v286 = *(int *)(v285 + 20);
      v287 = (char *)a1 + v286;
      v288 = (char *)a2 + v286;
      v289 = sub_240F1C930();
      v290 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 32);
      v290(v287, v288, v289);
      v291 = *(int *)(v285 + 24);
      v292 = (char *)a1 + v291;
      v293 = (char *)a2 + v291;
      v294 = type metadata accessor for Proto_SamplingMode(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
      {
        v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
        memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v292 = *(_QWORD *)v293;
        v292[8] = v293[8];
        v290(&v292[*(int *)(v294 + 20)], &v293[*(int *)(v294 + 20)], v289);
        __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v294);
      }
      goto LABEL_200;
    case 0x4Fu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
      v296 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
      v297 = v296[7];
      v298 = (char *)a1 + v297;
      v299 = (char *)a2 + v297;
      v300 = sub_240F1C930();
      v301 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32);
      v301(v298, v299, v300);
      v302 = v296[8];
      v303 = (char *)a1 + v302;
      v304 = (char *)a2 + v302;
      v305 = type metadata accessor for Proto_SamplingMode(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v304, 1, v305))
      {
        v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
        memcpy(v303, v304, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v303 = *(_QWORD *)v304;
        v303[8] = v304[8];
        v301(&v303[*(int *)(v305 + 20)], &v304[*(int *)(v305 + 20)], v300);
        __swift_storeEnumTagSinglePayload((uint64_t)v303, 0, 1, v305);
      }
      v507 = v296[9];
      v508 = (char *)a1 + v507;
      v509 = (char *)a2 + v507;
      v510 = type metadata accessor for Proto_BoxCoordinatesMode(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v509, 1, v510))
      {
        v511 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
        memcpy(v508, v509, *(_QWORD *)(*(_QWORD *)(v511 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v508 = *(_QWORD *)v509;
        v508[8] = v509[8];
        v301(&v508[*(int *)(v510 + 20)], &v509[*(int *)(v510 + 20)], v300);
        __swift_storeEnumTagSinglePayload((uint64_t)v508, 0, 1, v510);
      }
      goto LABEL_200;
    case 0x51u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
      a1[2] = a2[2];
      *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
      v307 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
      v308 = (char *)a1 + v307;
      v309 = (char *)a2 + v307;
      v310 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v308, v309, v310);
      goto LABEL_200;
    case 0x52u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v311 = *(int *)(type metadata accessor for Proto_ReduceL1LayerParams(0) + 28);
      v312 = (char *)a1 + v311;
      v313 = (char *)a2 + v311;
      v314 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 32))(v312, v313, v314);
      goto LABEL_200;
    case 0x53u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v315 = *(int *)(type metadata accessor for Proto_ReduceL2LayerParams(0) + 28);
      v316 = (char *)a1 + v315;
      v317 = (char *)a2 + v315;
      v318 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 32))(v316, v317, v318);
      goto LABEL_200;
    case 0x54u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v319 = *(int *)(type metadata accessor for Proto_ReduceMaxLayerParams(0) + 28);
      v320 = (char *)a1 + v319;
      v321 = (char *)a2 + v319;
      v322 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v322 - 8) + 32))(v320, v321, v322);
      goto LABEL_200;
    case 0x55u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v323 = *(int *)(type metadata accessor for Proto_ReduceMinLayerParams(0) + 28);
      v324 = (char *)a1 + v323;
      v325 = (char *)a2 + v323;
      v326 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v326 - 8) + 32))(v324, v325, v326);
      goto LABEL_200;
    case 0x56u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v327 = *(int *)(type metadata accessor for Proto_ReduceSumLayerParams(0) + 28);
      v328 = (char *)a1 + v327;
      v329 = (char *)a2 + v327;
      v330 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 32))(v328, v329, v330);
      goto LABEL_200;
    case 0x57u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v331 = *(int *)(type metadata accessor for Proto_ReduceProdLayerParams(0) + 28);
      v332 = (char *)a1 + v331;
      v333 = (char *)a2 + v331;
      v334 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 32))(v332, v333, v334);
      goto LABEL_200;
    case 0x58u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v335 = *(int *)(type metadata accessor for Proto_ReduceMeanLayerParams(0) + 28);
      v336 = (char *)a1 + v335;
      v337 = (char *)a2 + v335;
      v338 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 32))(v336, v337, v338);
      goto LABEL_200;
    case 0x59u:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v339 = *(int *)(type metadata accessor for Proto_ReduceLogSumLayerParams(0) + 28);
      v340 = (char *)a1 + v339;
      v341 = (char *)a2 + v339;
      v342 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 32))(v340, v341, v342);
      goto LABEL_200;
    case 0x5Au:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v343 = *(int *)(type metadata accessor for Proto_ReduceSumSquareLayerParams(0) + 28);
      v344 = (char *)a1 + v343;
      v345 = (char *)a2 + v343;
      v346 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 32))(v344, v345, v346);
      goto LABEL_200;
    case 0x5Bu:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v347 = *(int *)(type metadata accessor for Proto_ReduceLogSumExpLayerParams(0) + 28);
      v348 = (char *)a1 + v347;
      v349 = (char *)a2 + v347;
      v350 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 32))(v348, v349, v350);
      goto LABEL_200;
    case 0x5Eu:
      *a1 = *a2;
      *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
      v351 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
      v352 = (char *)a1 + v351;
      v353 = (char *)a2 + v351;
      v354 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 32))(v352, v353, v354);
      goto LABEL_200;
    case 0x5Fu:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v355 = *(int *)(type metadata accessor for Proto_ArgMinLayerParams(0) + 24);
      v356 = (char *)a1 + v355;
      v357 = (char *)a2 + v355;
      v358 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v358 - 8) + 32))(v356, v357, v358);
      goto LABEL_200;
    case 0x60u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v359 = *(int *)(type metadata accessor for Proto_ArgMaxLayerParams(0) + 24);
      v360 = (char *)a1 + v359;
      v361 = (char *)a2 + v359;
      v362 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 32))(v360, v361, v362);
      goto LABEL_200;
    case 0x63u:
      v363 = sub_240F1C930();
      v364 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v363 - 8) + 32);
      v364(a1, a2, v363);
      v365 = type metadata accessor for Proto_BranchLayerParams(0);
      v366 = *(int *)(v365 + 20);
      v367 = (_OWORD *)((char *)a1 + v366);
      v368 = (_OWORD *)((char *)a2 + v366);
      v369 = type metadata accessor for Proto_NeuralNetwork(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v368, 1, v369))
      {
        v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
        memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
      }
      else
      {
        *v367 = *v368;
        *((_QWORD *)v367 + 2) = *((_QWORD *)v368 + 2);
        *((_BYTE *)v367 + 24) = *((_BYTE *)v368 + 24);
        *((_QWORD *)v367 + 4) = *((_QWORD *)v368 + 4);
        *((_BYTE *)v367 + 40) = *((_BYTE *)v368 + 40);
        v364((_OWORD *)((char *)v367 + *(int *)(v369 + 32)), (_OWORD *)((char *)v368 + *(int *)(v369 + 32)), v363);
        v512 = *(int *)(v369 + 36);
        __dst = (char *)v367 + v512;
        v513 = (char *)v368 + v512;
        updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v513, 1, updated))
        {
          v515 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
          memcpy(__dst, v513, *(_QWORD *)(*(_QWORD *)(v515 - 8) + 64));
        }
        else
        {
          v364(__dst, v513, v363);
          *(_QWORD *)&__dst[*(int *)(updated + 20)] = *(_QWORD *)&v513[*(int *)(updated + 20)];
          __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, updated);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v367, 0, 1, v369);
      }
      v527 = *(int *)(v365 + 24);
      v528 = (uint64_t)a1 + v527;
      v529 = (uint64_t)a2 + v527;
      if (__swift_getEnumTagSinglePayload(v529, 1, v369))
        goto LABEL_162;
      *(_OWORD *)v528 = *(_OWORD *)v529;
      *(_QWORD *)(v528 + 16) = *(_QWORD *)(v529 + 16);
      *(_BYTE *)(v528 + 24) = *(_BYTE *)(v529 + 24);
      *(_QWORD *)(v528 + 32) = *(_QWORD *)(v529 + 32);
      *(_BYTE *)(v528 + 40) = *(_BYTE *)(v529 + 40);
      v364((_OWORD *)(v528 + *(int *)(v369 + 32)), (_OWORD *)(v529 + *(int *)(v369 + 32)), v363);
      v531 = *(int *)(v369 + 36);
      v532 = (char *)(v528 + v531);
      v533 = (char *)(v529 + v531);
      v534 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v533, 1, v534))
        goto LABEL_164;
      goto LABEL_172;
    case 0x65u:
      *a1 = *a2;
      *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
      v371 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
      v372 = v371[6];
      v373 = (char *)a1 + v372;
      v374 = (char *)a2 + v372;
      v363 = sub_240F1C930();
      v364 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v363 - 8) + 32);
      v364(v373, v374, v363);
      v375 = v371[7];
      v376 = (_OWORD *)((char *)a1 + v375);
      v377 = (_OWORD *)((char *)a2 + v375);
      v369 = type metadata accessor for Proto_NeuralNetwork(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v377, 1, v369))
      {
        v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
        memcpy(v376, v377, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
      }
      else
      {
        *v376 = *v377;
        *((_QWORD *)v376 + 2) = *((_QWORD *)v377 + 2);
        *((_BYTE *)v376 + 24) = *((_BYTE *)v377 + 24);
        *((_QWORD *)v376 + 4) = *((_QWORD *)v377 + 4);
        *((_BYTE *)v376 + 40) = *((_BYTE *)v377 + 40);
        v364((_OWORD *)((char *)v376 + *(int *)(v369 + 32)), (_OWORD *)((char *)v377 + *(int *)(v369 + 32)), v363);
        v516 = *(int *)(v369 + 36);
        __dsta = (char *)v376 + v516;
        v517 = (char *)v377 + v516;
        v518 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v517, 1, v518))
        {
          v519 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
          memcpy(__dsta, v517, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
        }
        else
        {
          v364(__dsta, v517, v363);
          *(_QWORD *)&__dsta[*(int *)(v518 + 20)] = *(_QWORD *)&v517[*(int *)(v518 + 20)];
          __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v518);
        }
        __swift_storeEnumTagSinglePayload((uint64_t)v376, 0, 1, v369);
      }
      v536 = v371[8];
      v528 = (uint64_t)a1 + v536;
      v529 = (uint64_t)a2 + v536;
      if (__swift_getEnumTagSinglePayload(v529, 1, v369))
      {
LABEL_162:
        v530 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
        memcpy((void *)v528, (const void *)v529, *(_QWORD *)(*(_QWORD *)(v530 - 8) + 64));
      }
      else
      {
        *(_OWORD *)v528 = *(_OWORD *)v529;
        *(_QWORD *)(v528 + 16) = *(_QWORD *)(v529 + 16);
        *(_BYTE *)(v528 + 24) = *(_BYTE *)(v529 + 24);
        *(_QWORD *)(v528 + 32) = *(_QWORD *)(v529 + 32);
        *(_BYTE *)(v528 + 40) = *(_BYTE *)(v529 + 40);
        v364((_OWORD *)(v528 + *(int *)(v369 + 32)), (_OWORD *)(v529 + *(int *)(v369 + 32)), v363);
        v537 = *(int *)(v369 + 36);
        v532 = (char *)(v528 + v537);
        v533 = (char *)(v529 + v537);
        v534 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v533, 1, v534))
        {
LABEL_164:
          v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
          memcpy(v532, v533, *(_QWORD *)(*(_QWORD *)(v535 - 8) + 64));
        }
        else
        {
LABEL_172:
          v364(v532, v533, v363);
          *(_QWORD *)&v532[*(int *)(v534 + 20)] = *(_QWORD *)&v533[*(int *)(v534 + 20)];
          __swift_storeEnumTagSinglePayload((uint64_t)v532, 0, 1, v534);
        }
        __swift_storeEnumTagSinglePayload(v528, 0, 1, v369);
      }
      goto LABEL_200;
    case 0x68u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v379 = *(int *)(type metadata accessor for Proto_RangeStaticLayerParams(0) + 28);
      v380 = (char *)a1 + v379;
      v381 = (char *)a2 + v379;
      v382 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v380, v381, v382);
      goto LABEL_200;
    case 0x69u:
      *a1 = *a2;
      v383 = *(int *)(type metadata accessor for Proto_RangeDynamicLayerParams(0) + 24);
      v384 = (char *)a1 + v383;
      v385 = (char *)a2 + v383;
      v386 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v386 - 8) + 32))(v384, v385, v386);
      goto LABEL_200;
    case 0x6Au:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v387 = *(int *)(type metadata accessor for Proto_EqualLayerParams(0) + 20);
      v388 = (char *)a1 + v387;
      v389 = (char *)a2 + v387;
      v390 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v388, v389, v390);
      goto LABEL_200;
    case 0x6Bu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v391 = *(int *)(type metadata accessor for Proto_NotEqualLayerParams(0) + 20);
      v392 = (char *)a1 + v391;
      v393 = (char *)a2 + v391;
      v394 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 32))(v392, v393, v394);
      goto LABEL_200;
    case 0x6Cu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v395 = *(int *)(type metadata accessor for Proto_LessThanLayerParams(0) + 20);
      v396 = (char *)a1 + v395;
      v397 = (char *)a2 + v395;
      v398 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v398 - 8) + 32))(v396, v397, v398);
      goto LABEL_200;
    case 0x6Du:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v399 = *(int *)(type metadata accessor for Proto_LessEqualLayerParams(0) + 20);
      v400 = (char *)a1 + v399;
      v401 = (char *)a2 + v399;
      v402 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v402 - 8) + 32))(v400, v401, v402);
      goto LABEL_200;
    case 0x6Eu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v403 = *(int *)(type metadata accessor for Proto_GreaterThanLayerParams(0) + 20);
      v404 = (char *)a1 + v403;
      v405 = (char *)a2 + v403;
      v406 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v406 - 8) + 32))(v404, v405, v406);
      goto LABEL_200;
    case 0x6Fu:
      *(_DWORD *)a1 = *(_DWORD *)a2;
      v407 = *(int *)(type metadata accessor for Proto_GreaterEqualLayerParams(0) + 20);
      v408 = (char *)a1 + v407;
      v409 = (char *)a2 + v407;
      v410 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v410 - 8) + 32))(v408, v409, v410);
      goto LABEL_200;
    case 0x70u:
      *a1 = *a2;
      a1[1] = a2[1];
      v411 = *(int *)(type metadata accessor for Proto_RandomNormalLikeLayerParams(0) + 28);
      v412 = (char *)a1 + v411;
      v413 = (char *)a2 + v411;
      v414 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 32))(v412, v413, v414);
      goto LABEL_200;
    case 0x71u:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v415 = *(int *)(type metadata accessor for Proto_RandomNormalStaticLayerParams(0) + 32);
      v416 = (char *)a1 + v415;
      v417 = (char *)a2 + v415;
      v418 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v418 - 8) + 32))(v416, v417, v418);
      goto LABEL_200;
    case 0x72u:
      *a1 = *a2;
      a1[1] = a2[1];
      v419 = *(int *)(type metadata accessor for Proto_RandomNormalDynamicLayerParams(0) + 28);
      v420 = (char *)a1 + v419;
      v421 = (char *)a2 + v419;
      v422 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 32))(v420, v421, v422);
      goto LABEL_200;
    case 0x73u:
      *a1 = *a2;
      a1[1] = a2[1];
      v423 = *(int *)(type metadata accessor for Proto_RandomUniformLikeLayerParams(0) + 28);
      v424 = (char *)a1 + v423;
      v425 = (char *)a2 + v423;
      v426 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 32))(v424, v425, v426);
      goto LABEL_200;
    case 0x74u:
      *a1 = *a2;
      a1[1] = a2[1];
      a1[2] = a2[2];
      v427 = *(int *)(type metadata accessor for Proto_RandomUniformStaticLayerParams(0) + 32);
      v428 = (char *)a1 + v427;
      v429 = (char *)a2 + v427;
      v430 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v430 - 8) + 32))(v428, v429, v430);
      goto LABEL_200;
    case 0x75u:
      *a1 = *a2;
      a1[1] = a2[1];
      v431 = *(int *)(type metadata accessor for Proto_RandomUniformDynamicLayerParams(0) + 28);
      v432 = (char *)a1 + v431;
      v433 = (char *)a2 + v431;
      v434 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 32))(v432, v433, v434);
      goto LABEL_200;
    case 0x76u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v435 = *(int *)(type metadata accessor for Proto_RandomBernoulliLikeLayerParams(0) + 24);
      v436 = (char *)a1 + v435;
      v437 = (char *)a2 + v435;
      v438 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v438 - 8) + 32))(v436, v437, v438);
      goto LABEL_200;
    case 0x77u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      a1[2] = a2[2];
      v439 = *(int *)(type metadata accessor for Proto_RandomBernoulliStaticLayerParams(0) + 28);
      v440 = (char *)a1 + v439;
      v441 = (char *)a2 + v439;
      v442 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v442 - 8) + 32))(v440, v441, v442);
      goto LABEL_200;
    case 0x78u:
      *a1 = *a2;
      *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
      v443 = *(int *)(type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(0) + 24);
      v444 = (char *)a1 + v443;
      v445 = (char *)a2 + v443;
      v446 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 32))(v444, v445, v446);
      goto LABEL_200;
    case 0x79u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      v447 = *(int *)(type metadata accessor for Proto_MatrixBandPartLayerParams(0) + 24);
      v448 = (char *)a1 + v447;
      v449 = (char *)a2 + v447;
      v450 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v450 - 8) + 32))(v448, v449, v450);
      goto LABEL_200;
    case 0x7Au:
      *a1 = *a2;
      v451 = *(int *)(type metadata accessor for Proto_LowerTriangularLayerParams(0) + 20);
      v452 = (char *)a1 + v451;
      v453 = (char *)a2 + v451;
      v454 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 32))(v452, v453, v454);
      goto LABEL_200;
    case 0x7Bu:
      *a1 = *a2;
      v455 = *(int *)(type metadata accessor for Proto_UpperTriangularLayerParams(0) + 20);
      v456 = (char *)a1 + v455;
      v457 = (char *)a2 + v455;
      v458 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v458 - 8) + 32))(v456, v457, v458);
      goto LABEL_200;
    case 0x7Cu:
      v459 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v459 - 8) + 32))(a1, a2, v459);
      v460 = type metadata accessor for Proto_EmbeddingLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v460 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v460 + 20));
      goto LABEL_200;
    case 0x7Du:
      v461 = sub_240F1C930();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v461 - 8) + 32))(a1, a2, v461);
      v462 = type metadata accessor for Proto_EmbeddingNDLayerParams(0);
      *(_QWORD *)((char *)a1 + *(int *)(v462 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v462 + 20));
      goto LABEL_200;
    case 0x7Eu:
      *a1 = *a2;
      v463 = type metadata accessor for Proto_BiasLayerParams(0);
      v464 = *(int *)(v463 + 20);
      v465 = (char *)a1 + v464;
      v466 = (char *)a2 + v464;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
      v11(v465, v466, v10);
      v467 = *(int *)(v463 + 24);
      v13 = (uint64_t)a1 + v467;
      v14 = (uint64_t)a2 + v467;
      v15 = type metadata accessor for Proto_WeightParams(0);
      if (__swift_getEnumTagSinglePayload(v14, 1, v15))
      {
LABEL_6:
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
        memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
        *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
        v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
        v520 = *(int *)(v15 + 40);
        v494 = (char *)(v13 + v520);
        v495 = (_QWORD *)(v14 + v520);
        v496 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
        {
LABEL_152:
          v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
          memcpy(v494, v495, *(_QWORD *)(*(_QWORD *)(v521 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v494 = *v495;
          v538 = *(int *)(v496 + 20);
          v572 = &v494[v538];
          __dstb = v494;
          v523 = (char *)v495 + v538;
          v539 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v539))
          {
LABEL_158:
            v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
            memcpy(v572, v523, *(_QWORD *)(*(_QWORD *)(v526 - 8) + 64));
          }
          else
          {
            v571 = v539;
            v562 = swift_getEnumCaseMultiPayload();
            *(_QWORD *)v572 = *(_QWORD *)v523;
            if (v562 == 1)
            {
              v563 = (uint64_t)v572;
              v564 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
              v565 = 5;
            }
            else
            {
              *((_QWORD *)v572 + 1) = *((_QWORD *)v523 + 1);
              v563 = (uint64_t)v572;
              v564 = type metadata accessor for Proto_LinearQuantizationParams(0);
              v565 = 6;
            }
            v11((char *)(v563 + *(int *)(v564 + 4 * v565)), &v523[*(int *)(v564 + 4 * v565)], v10);
            swift_storeEnumTagMultiPayload();
            __swift_storeEnumTagSinglePayload(v563, 0, 1, v571);
          }
LABEL_198:
          v11(&__dstb[*(int *)(v496 + 24)], (char *)v495 + *(int *)(v496 + 24), v10);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v496);
        }
        __swift_storeEnumTagSinglePayload(v13, 0, 1, v15);
      }
      goto LABEL_200;
    case 0x7Fu:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      *(_QWORD *)((char *)a1 + 20) = *(_QWORD *)((char *)a2 + 20);
      v468 = *(int *)(type metadata accessor for Proto_CategoricalDistributionLayerParams(0) + 36);
      v469 = (char *)a1 + v468;
      v470 = (char *)a2 + v468;
      v471 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 32))(v469, v470, v471);
      goto LABEL_200;
    case 0x80u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      a1[2] = a2[2];
      v472 = *(int *)(type metadata accessor for Proto_OneHotLayerParams(0) + 32);
      v473 = (char *)a1 + v472;
      v474 = (char *)a2 + v472;
      v475 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 32))(v473, v474, v475);
      goto LABEL_200;
    case 0x81u:
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v476 = *(int *)(type metadata accessor for Proto_TopKLayerParams(0) + 28);
      v477 = (char *)a1 + v476;
      v478 = (char *)a2 + v476;
      v479 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v479 - 8) + 32))(v477, v478, v479);
      goto LABEL_200;
    case 0x82u:
      *a1 = *a2;
      *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
      v480 = *(int *)(type metadata accessor for Proto_ArgSortLayerParams(0) + 24);
      v481 = (char *)a1 + v480;
      v482 = (char *)a2 + v480;
      v483 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v483 - 8) + 32))(v481, v482, v483);
      goto LABEL_200;
    case 0x83u:
      *a1 = *a2;
      a1[1] = a2[1];
      *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
      v484 = *(int *)(type metadata accessor for Proto_NonMaximumSuppressionLayerParams(0) + 32);
      v485 = (char *)a1 + v484;
      v486 = (char *)a2 + v484;
      v487 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 32))(v485, v486, v487);
      goto LABEL_200;
    case 0x84u:
      v488 = *((_OWORD *)a2 + 1);
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *((_OWORD *)a1 + 1) = v488;
      *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
      v489 = *(int *)(type metadata accessor for Proto_CustomLayerParams(0) + 32);
      v490 = (char *)a1 + v489;
      v491 = (char *)a2 + v489;
      v492 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v492 - 8) + 32))(v490, v491, v492);
      goto LABEL_200;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      return a1;
  }
}

_QWORD *_s4KindOwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t ConstantLayerParams;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t ConstantNDLayerParams;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  char *v58;
  uint64_t v59;
  uint64_t v60;
  char *v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  char *v78;
  uint64_t v79;
  uint64_t v80;
  char *v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  char *v85;
  char *v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  char *v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  uint64_t v116;
  uint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  char *v124;
  uint64_t v125;
  uint64_t v126;
  char *v127;
  char *v128;
  uint64_t v129;
  uint64_t v130;
  char *v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  char *v136;
  char *v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  char *v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  char *v151;
  uint64_t v152;
  __int128 v153;
  uint64_t v154;
  char *v155;
  char *v156;
  uint64_t v157;
  __int128 v158;
  uint64_t v159;
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  char *v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  uint64_t v174;
  char *v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  char *v180;
  uint64_t v181;
  char *v182;
  char *v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  uint64_t v188;
  uint64_t v189;
  char *v190;
  char *v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  int *v197;
  uint64_t v198;
  _BYTE *v199;
  _BYTE *v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  char *v205;
  uint64_t v206;
  uint64_t v207;
  char *v208;
  char *v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  char *v213;
  uint64_t v214;
  uint64_t v215;
  char *v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  uint64_t v220;
  uint64_t v221;
  char *v222;
  char *v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  uint64_t v227;
  uint64_t v228;
  uint64_t v229;
  char *v230;
  char *v231;
  uint64_t v232;
  uint64_t v233;
  char *v234;
  char *v235;
  uint64_t v236;
  uint64_t v237;
  char *v238;
  char *v239;
  uint64_t v240;
  uint64_t v241;
  char *v242;
  char *v243;
  uint64_t v244;
  uint64_t v245;
  uint64_t v246;
  int *v247;
  uint64_t v248;
  char *v249;
  char *v250;
  uint64_t v251;
  void (*v252)(char *, char *, uint64_t);
  uint64_t v253;
  _DWORD *v254;
  _DWORD *v255;
  uint64_t v256;
  uint64_t v257;
  __int128 v258;
  uint64_t v259;
  uint64_t v260;
  char *v261;
  char *v262;
  uint64_t v263;
  void (*v264)(char *, char *, uint64_t);
  uint64_t v265;
  _DWORD *v266;
  _DWORD *v267;
  uint64_t v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  uint64_t v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  char *v276;
  char *v277;
  uint64_t v278;
  void (*v279)(char *, char *, uint64_t);
  uint64_t v280;
  _QWORD *v281;
  _QWORD *v282;
  uint64_t v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  char *v287;
  char *v288;
  uint64_t v289;
  void (*v290)(char *, char *, uint64_t);
  uint64_t v291;
  _BYTE *v292;
  _BYTE *v293;
  uint64_t v294;
  uint64_t v295;
  int *v296;
  uint64_t v297;
  char *v298;
  char *v299;
  uint64_t v300;
  void (*v301)(char *, char *, uint64_t);
  uint64_t v302;
  _BYTE *v303;
  _BYTE *v304;
  uint64_t v305;
  uint64_t v306;
  uint64_t v307;
  char *v308;
  char *v309;
  uint64_t v310;
  uint64_t v311;
  char *v312;
  char *v313;
  uint64_t v314;
  uint64_t v315;
  char *v316;
  char *v317;
  uint64_t v318;
  uint64_t v319;
  char *v320;
  char *v321;
  uint64_t v322;
  uint64_t v323;
  char *v324;
  char *v325;
  uint64_t v326;
  uint64_t v327;
  char *v328;
  char *v329;
  uint64_t v330;
  uint64_t v331;
  char *v332;
  char *v333;
  uint64_t v334;
  uint64_t v335;
  char *v336;
  char *v337;
  uint64_t v338;
  uint64_t v339;
  char *v340;
  char *v341;
  uint64_t v342;
  uint64_t v343;
  char *v344;
  char *v345;
  uint64_t v346;
  uint64_t v347;
  char *v348;
  char *v349;
  uint64_t v350;
  uint64_t v351;
  char *v352;
  char *v353;
  uint64_t v354;
  uint64_t v355;
  char *v356;
  char *v357;
  uint64_t v358;
  uint64_t v359;
  char *v360;
  char *v361;
  uint64_t v362;
  uint64_t v363;
  void (*v364)(_OWORD *, _OWORD *, uint64_t);
  uint64_t v365;
  uint64_t v366;
  _OWORD *v367;
  _OWORD *v368;
  uint64_t v369;
  uint64_t v370;
  int *v371;
  uint64_t v372;
  char *v373;
  char *v374;
  uint64_t v375;
  _OWORD *v376;
  _OWORD *v377;
  uint64_t v378;
  uint64_t v379;
  char *v380;
  char *v381;
  uint64_t v382;
  uint64_t v383;
  char *v384;
  char *v385;
  uint64_t v386;
  uint64_t v387;
  char *v388;
  char *v389;
  uint64_t v390;
  uint64_t v391;
  char *v392;
  char *v393;
  uint64_t v394;
  uint64_t v395;
  char *v396;
  char *v397;
  uint64_t v398;
  uint64_t v399;
  char *v400;
  char *v401;
  uint64_t v402;
  uint64_t v403;
  char *v404;
  char *v405;
  uint64_t v406;
  uint64_t v407;
  char *v408;
  char *v409;
  uint64_t v410;
  uint64_t v411;
  char *v412;
  char *v413;
  uint64_t v414;
  uint64_t v415;
  char *v416;
  char *v417;
  uint64_t v418;
  uint64_t v419;
  char *v420;
  char *v421;
  uint64_t v422;
  uint64_t v423;
  char *v424;
  char *v425;
  uint64_t v426;
  uint64_t v427;
  char *v428;
  char *v429;
  uint64_t v430;
  uint64_t v431;
  char *v432;
  char *v433;
  uint64_t v434;
  uint64_t v435;
  char *v436;
  char *v437;
  uint64_t v438;
  uint64_t v439;
  char *v440;
  char *v441;
  uint64_t v442;
  uint64_t v443;
  char *v444;
  char *v445;
  uint64_t v446;
  uint64_t v447;
  char *v448;
  char *v449;
  uint64_t v450;
  uint64_t v451;
  char *v452;
  char *v453;
  uint64_t v454;
  uint64_t v455;
  char *v456;
  char *v457;
  uint64_t v458;
  uint64_t v459;
  uint64_t v460;
  uint64_t v461;
  uint64_t v462;
  uint64_t v463;
  uint64_t v464;
  char *v465;
  char *v466;
  uint64_t v467;
  uint64_t v468;
  char *v469;
  char *v470;
  uint64_t v471;
  uint64_t v472;
  char *v473;
  char *v474;
  uint64_t v475;
  uint64_t v476;
  char *v477;
  char *v478;
  uint64_t v479;
  uint64_t v480;
  char *v481;
  char *v482;
  uint64_t v483;
  uint64_t v484;
  char *v485;
  char *v486;
  uint64_t v487;
  __int128 v488;
  uint64_t v489;
  char *v490;
  char *v491;
  uint64_t v492;
  uint64_t v493;
  char *v494;
  _QWORD *v495;
  uint64_t v496;
  uint64_t v497;
  int v498;
  uint64_t v499;
  int v500;
  uint64_t valid;
  uint64_t v502;
  char *v503;
  char *v504;
  uint64_t v505;
  uint64_t v506;
  uint64_t v507;
  _BYTE *v508;
  _BYTE *v509;
  uint64_t v510;
  uint64_t v511;
  uint64_t v512;
  char *v513;
  uint64_t updated;
  uint64_t v515;
  uint64_t v516;
  char *v517;
  uint64_t v518;
  uint64_t v519;
  uint64_t v520;
  uint64_t v521;
  uint64_t v522;
  char *v523;
  uint64_t v524;
  uint64_t v525;
  uint64_t v526;
  uint64_t v527;
  uint64_t v528;
  uint64_t v529;
  uint64_t v530;
  uint64_t v531;
  char *v532;
  char *v533;
  uint64_t v534;
  uint64_t v535;
  uint64_t v536;
  uint64_t v537;
  uint64_t v538;
  uint64_t v539;
  uint64_t v540;
  char *v541;
  char *v542;
  uint64_t v543;
  uint64_t v544;
  uint64_t v545;
  char *v546;
  char *v547;
  uint64_t v548;
  uint64_t v549;
  _BYTE *v550;
  _BYTE *v551;
  uint64_t v552;
  uint64_t v553;
  uint64_t v554;
  _QWORD *v555;
  uint64_t v556;
  uint64_t v557;
  int EnumCaseMultiPayload;
  uint64_t v559;
  uint64_t v560;
  int v561;
  int v562;
  uint64_t v563;
  uint64_t v564;
  uint64_t v565;
  uint64_t v566;
  char *v567;
  char *v568;
  uint64_t v569;
  _QWORD *result;
  uint64_t v571;
  char *v572;
  void *v573;
  char *__dst;
  char *__dsta;
  char *__dstb;
  _QWORD *__dstc;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.Kind);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
        *a1 = *a2;
        ConstantLayerParams = type metadata accessor for Proto_LoadConstantLayerParams(0);
        v7 = *(int *)(ConstantLayerParams + 20);
        v8 = (char *)a1 + v7;
        v9 = (char *)a2 + v7;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
        v11(v8, v9, v10);
        v12 = *(int *)(ConstantLayerParams + 24);
        v13 = (uint64_t)a1 + v12;
        v14 = (uint64_t)a2 + v12;
        v15 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v14, 1, v15))
          goto LABEL_7;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
        *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
        v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
        v493 = *(int *)(v15 + 40);
        v494 = (char *)(v13 + v493);
        v495 = (_QWORD *)(v14 + v493);
        v496 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
          goto LABEL_153;
        *(_QWORD *)v494 = *v495;
        v522 = *(int *)(v496 + 20);
        v572 = &v494[v522];
        __dstb = v494;
        v523 = (char *)v495 + v522;
        v524 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v524))
          goto LABEL_159;
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v572 = *(_QWORD *)v523;
        if (EnumCaseMultiPayload == 1)
          goto LABEL_186;
        goto LABEL_194;
      case 1u:
        *a1 = *a2;
        ConstantNDLayerParams = type metadata accessor for Proto_LoadConstantNDLayerParams(0);
        v17 = *(int *)(ConstantNDLayerParams + 20);
        v18 = (char *)a1 + v17;
        v19 = (char *)a2 + v17;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
        v11(v18, v19, v10);
        v20 = *(int *)(ConstantNDLayerParams + 24);
        v13 = (uint64_t)a1 + v20;
        v14 = (uint64_t)a2 + v20;
        v15 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v14, 1, v15))
          goto LABEL_7;
        *(_QWORD *)v13 = *(_QWORD *)v14;
        *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
        *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
        *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
        *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
        v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
        v497 = *(int *)(v15 + 40);
        v494 = (char *)(v13 + v497);
        v495 = (_QWORD *)(v14 + v497);
        v496 = type metadata accessor for Proto_QuantizationParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
          goto LABEL_153;
        *(_QWORD *)v494 = *v495;
        v525 = *(int *)(v496 + 20);
        v572 = &v494[v525];
        __dstb = v494;
        v523 = (char *)v495 + v525;
        v524 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v524))
          goto LABEL_159;
        v561 = swift_getEnumCaseMultiPayload();
        *(_QWORD *)v572 = *(_QWORD *)v523;
        if (v561 == 1)
        {
LABEL_186:
          v559 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
          v560 = 5;
        }
        else
        {
LABEL_194:
          *((_QWORD *)v572 + 1) = *((_QWORD *)v523 + 1);
          v559 = type metadata accessor for Proto_LinearQuantizationParams(0);
          v560 = 6;
        }
        v11(&v572[*(int *)(v559 + 4 * v560)], &v523[*(int *)(v559 + 4 * v560)], v10);
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v572, 0, 1, v524);
        goto LABEL_199;
      case 2u:
        v22 = type metadata accessor for Proto_PaddingLayerParams.OneOf_PaddingType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v22))
        {
          v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F8);
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
        }
        else
        {
          v498 = swift_getEnumCaseMultiPayload();
          if (v498 == 2 || v498 == 1)
          {
            v499 = sub_240F1C930();
            (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v499 - 8) + 32))(a1, a2, v499);
          }
          else
          {
            *(_DWORD *)a1 = *(_DWORD *)a2;
            v540 = *(int *)(type metadata accessor for Proto_PaddingLayerParams.PaddingConstant(0) + 20);
            v541 = (char *)a1 + v540;
            v542 = (char *)a2 + v540;
            v543 = sub_240F1C930();
            (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v543 - 8) + 32))(v541, v542, v543);
          }
          swift_storeEnumTagMultiPayload();
          __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v22);
        }
        v544 = type metadata accessor for Proto_PaddingLayerParams(0);
        v545 = *(int *)(v544 + 20);
        v546 = (char *)a1 + v545;
        v547 = (char *)a2 + v545;
        v278 = sub_240F1C930();
        v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 32);
        v279(v546, v547, v278);
        v548 = *(int *)(v544 + 24);
        v281 = (_QWORD *)((char *)a1 + v548);
        v282 = (_QWORD *)((char *)a2 + v548);
        v283 = type metadata accessor for Proto_BorderAmounts(0);
        if (!__swift_getEnumTagSinglePayload((uint64_t)v282, 1, v283))
          goto LABEL_180;
        goto LABEL_76;
      case 3u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v24 = *(int *)(type metadata accessor for Proto_ConstantPaddingLayerParams(0) + 28);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 32))(v25, v26, v27);
        goto LABEL_201;
      case 4u:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v28 = *(int *)(type metadata accessor for Proto_ConcatLayerParams(0) + 20);
        v29 = (char *)a1 + v28;
        v30 = (char *)a2 + v28;
        v31 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v31 - 8) + 32))(v29, v30, v31);
        goto LABEL_201;
      case 5u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v32 = *(int *)(type metadata accessor for Proto_ConcatNDLayerParams(0) + 24);
        v33 = (char *)a1 + v32;
        v34 = (char *)a2 + v32;
        v35 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 32))(v33, v34, v35);
        goto LABEL_201;
      case 6u:
        *a1 = *a2;
        v36 = *(int *)(type metadata accessor for Proto_SplitLayerParams(0) + 20);
        v37 = (char *)a1 + v36;
        v38 = (char *)a2 + v36;
        v39 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v39 - 8) + 32))(v37, v38, v39);
        goto LABEL_201;
      case 7u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v40 = *(int *)(type metadata accessor for Proto_SplitNDLayerParams(0) + 28);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 32))(v41, v42, v43);
        goto LABEL_201;
      case 8u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        a1[4] = a2[4];
        *((_BYTE *)a1 + 40) = *((_BYTE *)a2 + 40);
        v44 = *(int *)(type metadata accessor for Proto_UpsampleLayerParams(0) + 32);
        v45 = (char *)a1 + v44;
        v46 = (char *)a2 + v44;
        v47 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v47 - 8) + 32))(v45, v46, v47);
        goto LABEL_201;
      case 9u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v48 = *(int *)(type metadata accessor for Proto_FillLikeLayerParams(0) + 20);
        v49 = (char *)a1 + v48;
        v50 = (char *)a2 + v48;
        v51 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v51 - 8) + 32))(v49, v50, v51);
        goto LABEL_201;
      case 0xAu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        a1[1] = a2[1];
        v52 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
        v53 = (char *)a1 + v52;
        v54 = (char *)a2 + v52;
        v55 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v55 - 8) + 32))(v53, v54, v55);
        goto LABEL_201;
      case 0xBu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v56 = *(int *)(type metadata accessor for Proto_FillDynamicLayerParams(0) + 20);
        v57 = (char *)a1 + v56;
        v58 = (char *)a2 + v56;
        v59 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v59 - 8) + 32))(v57, v58, v59);
        goto LABEL_201;
      case 0xCu:
        *a1 = *a2;
        v60 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
        v61 = (char *)a1 + v60;
        v62 = (char *)a2 + v60;
        v63 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v63 - 8) + 32))(v61, v62, v63);
        goto LABEL_201;
      case 0xDu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v64 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
        v65 = (char *)a1 + v64;
        v66 = (char *)a2 + v64;
        v67 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v67 - 8) + 32))(v65, v66, v67);
        goto LABEL_201;
      case 0xEu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        a1[2] = a2[2];
        v68 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
        v69 = (char *)a1 + v68;
        v70 = (char *)a2 + v68;
        v71 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v71 - 8) + 32))(v69, v70, v71);
        goto LABEL_201;
      case 0xFu:
        *a1 = *a2;
        v72 = *(int *)(type metadata accessor for Proto_TileLayerParams(0) + 20);
        v73 = (char *)a1 + v72;
        v74 = (char *)a2 + v72;
        v75 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v75 - 8) + 32))(v73, v74, v75);
        goto LABEL_201;
      case 0x10u:
        *a1 = *a2;
        v76 = *(int *)(type metadata accessor for Proto_ReverseLayerParams(0) + 20);
        v77 = (char *)a1 + v76;
        v78 = (char *)a2 + v76;
        v79 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v79 - 8) + 32))(v77, v78, v79);
        goto LABEL_201;
      case 0x11u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v80 = *(int *)(type metadata accessor for Proto_SqueezeLayerParams(0) + 24);
        v81 = (char *)a1 + v80;
        v82 = (char *)a2 + v80;
        v83 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v83 - 8) + 32))(v81, v82, v83);
        goto LABEL_201;
      case 0x12u:
        *a1 = *a2;
        v84 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
        v85 = (char *)a1 + v84;
        v86 = (char *)a2 + v84;
        v87 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v87 - 8) + 32))(v85, v86, v87);
        goto LABEL_201;
      case 0x13u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v88 = *(int *)(type metadata accessor for Proto_FlattenLayerParams(0) + 20);
        v89 = (char *)a1 + v88;
        v90 = (char *)a2 + v88;
        v91 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v91 - 8) + 32))(v89, v90, v91);
        goto LABEL_201;
      case 0x14u:
        v92 = a2[1];
        *a1 = *a2;
        a1[1] = v92;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v93 = *(int *)(type metadata accessor for Proto_ReshapeLayerParams(0) + 24);
        v94 = (char *)a1 + v93;
        v95 = (char *)a2 + v93;
        v96 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v96 - 8) + 32))(v94, v95, v96);
        goto LABEL_201;
      case 0x15u:
        *a1 = *a2;
        v97 = *(int *)(type metadata accessor for Proto_ReshapeStaticLayerParams(0) + 20);
        v98 = (char *)a1 + v97;
        v99 = (char *)a2 + v97;
        v100 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v100 - 8) + 32))(v98, v99, v100);
        goto LABEL_201;
      case 0x16u:
        *a1 = *a2;
        v101 = *(int *)(type metadata accessor for Proto_RankPreservingReshapeLayerParams(0) + 20);
        v102 = (char *)a1 + v101;
        v103 = (char *)a2 + v101;
        v104 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v104 - 8) + 32))(v102, v103, v104);
        goto LABEL_201;
      case 0x17u:
        *a1 = *a2;
        v105 = *(int *)(type metadata accessor for Proto_PermuteLayerParams(0) + 20);
        v106 = (char *)a1 + v105;
        v107 = (char *)a2 + v105;
        v108 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v108 - 8) + 32))(v106, v107, v108);
        goto LABEL_201;
      case 0x18u:
        *a1 = *a2;
        v109 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
        v110 = (char *)a1 + v109;
        v111 = (char *)a2 + v109;
        v112 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v112 - 8) + 32))(v110, v111, v112);
        goto LABEL_201;
      case 0x19u:
      case 0x1Bu:
      case 0x1Du:
      case 0x1Eu:
      case 0x21u:
      case 0x38u:
      case 0x39u:
      case 0x3Au:
      case 0x3Bu:
      case 0x3Eu:
      case 0x3Fu:
      case 0x40u:
      case 0x43u:
      case 0x50u:
      case 0x5Cu:
      case 0x5Du:
      case 0x61u:
      case 0x62u:
      case 0x64u:
      case 0x66u:
      case 0x67u:
        v121 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v121 - 8) + 32))(a1, a2, v121);
        goto LABEL_201;
      case 0x1Au:
        *a1 = *a2;
        v113 = *(int *)(type metadata accessor for Proto_BroadcastToStaticLayerParams(0) + 20);
        v114 = (char *)a1 + v113;
        v115 = (char *)a2 + v113;
        v116 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v116 - 8) + 32))(v114, v115, v116);
        goto LABEL_201;
      case 0x1Cu:
        *a1 = *a2;
        v117 = *(int *)(type metadata accessor for Proto_FlattenTo2DLayerParams(0) + 20);
        v118 = (char *)a1 + v117;
        v119 = (char *)a2 + v117;
        v120 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v120 - 8) + 32))(v118, v119, v120);
        goto LABEL_201;
      case 0x1Fu:
        *a1 = *a2;
        v122 = *(int *)(type metadata accessor for Proto_StackLayerParams(0) + 20);
        v123 = (char *)a1 + v122;
        v124 = (char *)a2 + v122;
        v125 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v125 - 8) + 32))(v123, v124, v125);
        goto LABEL_201;
      case 0x20u:
        *a1 = *a2;
        v126 = *(int *)(type metadata accessor for Proto_GatherLayerParams(0) + 20);
        v127 = (char *)a1 + v126;
        v128 = (char *)a2 + v126;
        v129 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v129 - 8) + 32))(v127, v128, v129);
        goto LABEL_201;
      case 0x22u:
        *a1 = *a2;
        v130 = *(int *)(type metadata accessor for Proto_GatherAlongAxisLayerParams(0) + 20);
        v131 = (char *)a1 + v130;
        v132 = (char *)a2 + v130;
        v133 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v133 - 8) + 32))(v131, v132, v133);
        goto LABEL_201;
      case 0x23u:
        v134 = a2[1];
        *a1 = *a2;
        a1[1] = v134;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v135 = *(int *)(type metadata accessor for Proto_ScatterLayerParams(0) + 24);
        v136 = (char *)a1 + v135;
        v137 = (char *)a2 + v135;
        v138 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v138 - 8) + 32))(v136, v137, v138);
        goto LABEL_201;
      case 0x24u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v139 = *(int *)(type metadata accessor for Proto_ScatterNDLayerParams(0) + 20);
        v140 = (char *)a1 + v139;
        v141 = (char *)a2 + v139;
        v142 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v142 - 8) + 32))(v140, v141, v142);
        goto LABEL_201;
      case 0x25u:
        v143 = a2[1];
        *a1 = *a2;
        a1[1] = v143;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v144 = *(int *)(type metadata accessor for Proto_ScatterAlongAxisLayerParams(0) + 24);
        v145 = (char *)a1 + v144;
        v146 = (char *)a2 + v144;
        v147 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v147 - 8) + 32))(v145, v146, v147);
        goto LABEL_201;
      case 0x26u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v148 = a2[3];
        a1[2] = a2[2];
        a1[3] = v148;
        *((_BYTE *)a1 + 32) = *((_BYTE *)a2 + 32);
        v149 = *(int *)(type metadata accessor for Proto_SliceLayerParams(0) + 32);
        v150 = (char *)a1 + v149;
        v151 = (char *)a2 + v149;
        v152 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v152 - 8) + 32))(v150, v151, v152);
        goto LABEL_201;
      case 0x27u:
        v153 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v153;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v154 = *(int *)(type metadata accessor for Proto_SliceStaticLayerParams(0) + 40);
        v155 = (char *)a1 + v154;
        v156 = (char *)a2 + v154;
        v157 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v157 - 8) + 32))(v155, v156, v157);
        goto LABEL_201;
      case 0x28u:
        v158 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v158;
        a1[4] = a2[4];
        v159 = *(int *)(type metadata accessor for Proto_SliceDynamicLayerParams(0) + 36);
        v160 = (char *)a1 + v159;
        v161 = (char *)a2 + v159;
        v162 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v162 - 8) + 32))(v160, v161, v162);
        goto LABEL_201;
      case 0x29u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v163 = *(int *)(type metadata accessor for Proto_SliceBySizeLayerParams(0) + 24);
        v164 = (char *)a1 + v163;
        v165 = (char *)a2 + v163;
        v166 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v166 - 8) + 32))(v164, v165, v166);
        goto LABEL_201;
      case 0x2Au:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v167 = *(int *)(type metadata accessor for Proto_SlidingWindowsLayerParams(0) + 28);
        v168 = (char *)a1 + v167;
        v169 = (char *)a2 + v167;
        v170 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v170 - 8) + 32))(v168, v169, v170);
        goto LABEL_201;
      case 0x2Bu:
        v171 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v171 - 8) + 32))(a1, a2, v171);
        v172 = type metadata accessor for Proto_InnerProductLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v172 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v172 + 20));
        goto LABEL_201;
      case 0x2Cu:
        type metadata accessor for NeuralNetwork.Layer.Activation(0);
        v173 = (char *)&loc_240C21060 + 4 * word_240F1E552[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
        return result;
      case 0x2Du:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
        v174 = *(int *)(type metadata accessor for Proto_UnaryFunctionLayerParams(0) + 36);
        v175 = (char *)a1 + v174;
        v176 = (char *)a2 + v174;
        v177 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v177 - 8) + 32))(v175, v176, v177);
        goto LABEL_201;
      case 0x2Eu:
        *a1 = *a2;
        v178 = *(int *)(type metadata accessor for NeuralNetwork.Layer.ClipParameters() + 24);
        v179 = (char *)a1 + v178;
        v180 = (char *)a2 + v178;
        *(_QWORD *)((char *)a1 + v178) = *(_QWORD *)((char *)a2 + v178);
        v181 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
        v182 = &v179[v181];
        v183 = &v180[v181];
        v184 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v184 - 8) + 32))(v182, v183, v184);
        goto LABEL_201;
      case 0x2Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v185 = *(int *)(type metadata accessor for Proto_GeluLayerParams(0) + 20);
        v186 = (char *)a1 + v185;
        v187 = (char *)a2 + v185;
        v188 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v188 - 8) + 32))(v186, v187, v188);
        goto LABEL_201;
      case 0x30u:
        *a1 = *a2;
        v189 = *(int *)(type metadata accessor for Proto_ClampedReLULayerParams(0) + 24);
        v190 = (char *)a1 + v189;
        v191 = (char *)a2 + v189;
        v192 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v192 - 8) + 32))(v190, v191, v192);
        goto LABEL_201;
      case 0x31u:
        v193 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v193 - 8) + 32))(a1, a2, v193);
        v194 = type metadata accessor for Proto_ConvolutionLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v194 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v194 + 20));
        goto LABEL_201;
      case 0x32u:
        v195 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v195 - 8) + 32))(a1, a2, v195);
        v196 = type metadata accessor for Proto_Convolution3DLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v196 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v196 + 20));
        goto LABEL_201;
      case 0x33u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
        v197 = (int *)type metadata accessor for Proto_PoolingLayerParams(0);
        v198 = v197[7];
        v199 = (char *)a1 + v198;
        v200 = (char *)a2 + v198;
        v201 = type metadata accessor for Proto_PoolingLayerParams.OneOf_PoolingPaddingType(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v200, 1, v201))
        {
          v202 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C200);
          memcpy(v199, v200, *(_QWORD *)(*(_QWORD *)(v202 - 8) + 64));
          goto LABEL_193;
        }
        v500 = swift_getEnumCaseMultiPayload();
        if (v500 == 2)
        {
          *(_QWORD *)v199 = *(_QWORD *)v200;
          valid = type metadata accessor for Proto_PoolingLayerParams.ValidCompletePadding(0);
          goto LABEL_182;
        }
        if (v500 == 1)
        {
          *(_QWORD *)v199 = *(_QWORD *)v200;
          v199[8] = v200[8];
          valid = type metadata accessor for Proto_SamePadding(0);
LABEL_182:
          v549 = *(int *)(valid + 20);
          v550 = &v199[v549];
          v551 = &v200[v549];
          v552 = sub_240F1C930();
          (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v552 - 8) + 32))(v550, v551, v552);
          goto LABEL_192;
        }
        v553 = sub_240F1C930();
        v573 = *(void **)(*(_QWORD *)(v553 - 8) + 32);
        ((void (*)(_BYTE *, _BYTE *, uint64_t))v573)(v199, v200, v553);
        v554 = *(int *)(type metadata accessor for Proto_ValidPadding(0) + 20);
        __dstc = &v199[v554];
        v555 = &v200[v554];
        v556 = type metadata accessor for Proto_BorderAmounts(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v555, 1, v556))
        {
          v557 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
          memcpy(__dstc, v555, *(_QWORD *)(*(_QWORD *)(v557 - 8) + 64));
        }
        else
        {
          *__dstc = *v555;
          ((void (*)(char *, char *, uint64_t))v573)((char *)__dstc + *(int *)(v556 + 20), (char *)v555 + *(int *)(v556 + 20), v553);
          __swift_storeEnumTagSinglePayload((uint64_t)__dstc, 0, 1, v556);
        }
LABEL_192:
        swift_storeEnumTagMultiPayload();
        __swift_storeEnumTagSinglePayload((uint64_t)v199, 0, 1, v201);
LABEL_193:
        *((_BYTE *)a1 + v197[8]) = *((_BYTE *)a2 + v197[8]);
        *((_BYTE *)a1 + v197[9]) = *((_BYTE *)a2 + v197[9]);
        v566 = v197[10];
        v567 = (char *)a1 + v566;
        v568 = (char *)a2 + v566;
        v569 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v569 - 8) + 32))(v567, v568, v569);
LABEL_201:
        swift_storeEnumTagMultiPayload();
        break;
      case 0x34u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *(_OWORD *)((char *)a1 + 12) = *(_OWORD *)((char *)a2 + 12);
        *(_QWORD *)((char *)a1 + 28) = *(_QWORD *)((char *)a2 + 28);
        a1[5] = a2[5];
        *((_BYTE *)a1 + 48) = *((_BYTE *)a2 + 48);
        *(_OWORD *)((char *)a1 + 52) = *(_OWORD *)((char *)a2 + 52);
        *(_QWORD *)((char *)a1 + 68) = *(_QWORD *)((char *)a2 + 68);
        *((_BYTE *)a1 + 76) = *((_BYTE *)a2 + 76);
        v203 = *(int *)(type metadata accessor for Proto_Pooling3DLayerParams(0) + 76);
        v204 = (char *)a1 + v203;
        v205 = (char *)a2 + v203;
        v206 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v206 - 8) + 32))(v204, v205, v206);
        goto LABEL_201;
      case 0x35u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v207 = *(int *)(type metadata accessor for Proto_GlobalPooling3DLayerParams(0) + 20);
        v208 = (char *)a1 + v207;
        v209 = (char *)a2 + v207;
        v210 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v210 - 8) + 32))(v208, v209, v210);
        goto LABEL_201;
      case 0x36u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v211 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
        v212 = (char *)a1 + v211;
        v213 = (char *)a2 + v211;
        v214 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v214 - 8) + 32))(v212, v213, v214);
        goto LABEL_201;
      case 0x37u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v215 = *(int *)(type metadata accessor for Proto_MultiplyLayerParams(0) + 20);
        v216 = (char *)a1 + v215;
        v217 = (char *)a2 + v215;
        v218 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v218 - 8) + 32))(v216, v217, v218);
        goto LABEL_201;
      case 0x3Cu:
        v219 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v219 - 8) + 32))(a1, a2, v219);
        v220 = type metadata accessor for Proto_BatchedMatMulLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v220 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v220 + 20));
        goto LABEL_201;
      case 0x3Du:
        *(_BYTE *)a1 = *(_BYTE *)a2;
        v221 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
        v222 = (char *)a1 + v221;
        v223 = (char *)a2 + v221;
        v224 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v224 - 8) + 32))(v222, v223, v224);
        goto LABEL_201;
      case 0x41u:
        v225 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v225 - 8) + 32))(a1, a2, v225);
        v226 = type metadata accessor for Proto_ScaleLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v226 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v226 + 20));
        goto LABEL_201;
      case 0x42u:
        v227 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v227 - 8) + 32))(a1, a2, v227);
        v228 = type metadata accessor for Proto_BatchnormLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v228 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v228 + 20));
        goto LABEL_201;
      case 0x44u:
        *a1 = *a2;
        v229 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
        v230 = (char *)a1 + v229;
        v231 = (char *)a2 + v229;
        v232 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v232 - 8) + 32))(v230, v231, v232);
        goto LABEL_201;
      case 0x45u:
        *(_WORD *)a1 = *(_WORD *)a2;
        *((_DWORD *)a1 + 1) = *((_DWORD *)a2 + 1);
        v233 = *(int *)(type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(0) + 28);
        v234 = (char *)a1 + v233;
        v235 = (char *)a2 + v233;
        v236 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v236 - 8) + 32))(v234, v235, v236);
        goto LABEL_201;
      case 0x46u:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v237 = *(int *)(type metadata accessor for Proto_L2NormalizeLayerParams(0) + 20);
        v238 = (char *)a1 + v237;
        v239 = (char *)a2 + v237;
        v240 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v240 - 8) + 32))(v238, v239, v240);
        goto LABEL_201;
      case 0x47u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_DWORD *)a1 + 4) = *((_DWORD *)a2 + 4);
        v241 = *(int *)(type metadata accessor for Proto_LRNLayerParams(0) + 32);
        v242 = (char *)a1 + v241;
        v243 = (char *)a2 + v241;
        v244 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v244 - 8) + 32))(v242, v243, v244);
        goto LABEL_201;
      case 0x48u:
        v245 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v245 - 8) + 32))(a1, a2, v245);
        v246 = type metadata accessor for Proto_LayerNormalizationLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v246 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v246 + 20));
        goto LABEL_201;
      case 0x49u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v247 = (int *)type metadata accessor for Proto_UniDirectionalLSTMLayerParams(0);
        v248 = v247[8];
        v249 = (char *)a1 + v248;
        v250 = (char *)a2 + v248;
        v251 = sub_240F1C930();
        v252 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v251 - 8) + 32);
        v252(v249, v250, v251);
        v253 = v247[9];
        v254 = (_DWORD *)((char *)a1 + v253);
        v255 = (_DWORD *)((char *)a2 + v253);
        v256 = type metadata accessor for Proto_LSTMParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v255, 1, v256))
        {
          v257 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
          memcpy(v254, v255, *(_QWORD *)(*(_QWORD *)(v257 - 8) + 64));
        }
        else
        {
          *v254 = *v255;
          *((_BYTE *)v254 + 4) = *((_BYTE *)v255 + 4);
          v254[2] = v255[2];
          v252((char *)v254 + *(int *)(v256 + 40), (char *)v255 + *(int *)(v256 + 40), v251);
          __swift_storeEnumTagSinglePayload((uint64_t)v254, 0, 1, v256);
        }
        v502 = v247[10];
        v503 = (char *)a1 + v502;
        v504 = (char *)a2 + v502;
        v505 = type metadata accessor for Proto_LSTMWeightParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v504, 1, v505))
        {
          v506 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C210);
          memcpy(v503, v504, *(_QWORD *)(*(_QWORD *)(v506 - 8) + 64));
        }
        else
        {
          v252(v503, v504, v251);
          *(_QWORD *)&v503[*(int *)(v505 + 20)] = *(_QWORD *)&v504[*(int *)(v505 + 20)];
          __swift_storeEnumTagSinglePayload((uint64_t)v503, 0, 1, v505);
        }
        goto LABEL_201;
      case 0x4Au:
        v258 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v258;
        a1[4] = a2[4];
        v259 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
        v260 = *(int *)(v259 + 36);
        v261 = (char *)a1 + v260;
        v262 = (char *)a2 + v260;
        v263 = sub_240F1C930();
        v264 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v263 - 8) + 32);
        v264(v261, v262, v263);
        v265 = *(int *)(v259 + 40);
        v266 = (_DWORD *)((char *)a1 + v265);
        v267 = (_DWORD *)((char *)a2 + v265);
        v268 = type metadata accessor for Proto_LSTMParams(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v267, 1, v268))
        {
          v269 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
          memcpy(v266, v267, *(_QWORD *)(*(_QWORD *)(v269 - 8) + 64));
        }
        else
        {
          *v266 = *v267;
          *((_BYTE *)v266 + 4) = *((_BYTE *)v267 + 4);
          v266[2] = v267[2];
          v264((char *)v266 + *(int *)(v268 + 40), (char *)v267 + *(int *)(v268 + 40), v263);
          __swift_storeEnumTagSinglePayload((uint64_t)v266, 0, 1, v268);
        }
        goto LABEL_201;
      case 0x4Bu:
        v270 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v270 - 8) + 32))(a1, a2, v270);
        v271 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v271 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v271 + 20));
        goto LABEL_201;
      case 0x4Cu:
        v272 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v272 - 8) + 32))(a1, a2, v272);
        v273 = type metadata accessor for Proto_GRULayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v273 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v273 + 20));
        goto LABEL_201;
      case 0x4Du:
        *a1 = *a2;
        v274 = type metadata accessor for Proto_CropLayerParams(0);
        v275 = *(int *)(v274 + 20);
        v276 = (char *)a1 + v275;
        v277 = (char *)a2 + v275;
        v278 = sub_240F1C930();
        v279 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v278 - 8) + 32);
        v279(v276, v277, v278);
        v280 = *(int *)(v274 + 24);
        v281 = (_QWORD *)((char *)a1 + v280);
        v282 = (_QWORD *)((char *)a2 + v280);
        v283 = type metadata accessor for Proto_BorderAmounts(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v282, 1, v283))
        {
LABEL_76:
          v284 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
          memcpy(v281, v282, *(_QWORD *)(*(_QWORD *)(v284 - 8) + 64));
        }
        else
        {
LABEL_180:
          *v281 = *v282;
          v279((char *)v281 + *(int *)(v283 + 20), (char *)v282 + *(int *)(v283 + 20), v278);
          __swift_storeEnumTagSinglePayload((uint64_t)v281, 0, 1, v283);
        }
        goto LABEL_201;
      case 0x4Eu:
        *a1 = *a2;
        v285 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
        v286 = *(int *)(v285 + 20);
        v287 = (char *)a1 + v286;
        v288 = (char *)a2 + v286;
        v289 = sub_240F1C930();
        v290 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v289 - 8) + 32);
        v290(v287, v288, v289);
        v291 = *(int *)(v285 + 24);
        v292 = (char *)a1 + v291;
        v293 = (char *)a2 + v291;
        v294 = type metadata accessor for Proto_SamplingMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v293, 1, v294))
        {
          v295 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
          memcpy(v292, v293, *(_QWORD *)(*(_QWORD *)(v295 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v292 = *(_QWORD *)v293;
          v292[8] = v293[8];
          v290(&v292[*(int *)(v294 + 20)], &v293[*(int *)(v294 + 20)], v289);
          __swift_storeEnumTagSinglePayload((uint64_t)v292, 0, 1, v294);
        }
        goto LABEL_201;
      case 0x4Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        v296 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
        v297 = v296[7];
        v298 = (char *)a1 + v297;
        v299 = (char *)a2 + v297;
        v300 = sub_240F1C930();
        v301 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v300 - 8) + 32);
        v301(v298, v299, v300);
        v302 = v296[8];
        v303 = (char *)a1 + v302;
        v304 = (char *)a2 + v302;
        v305 = type metadata accessor for Proto_SamplingMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v304, 1, v305))
        {
          v306 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
          memcpy(v303, v304, *(_QWORD *)(*(_QWORD *)(v306 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v303 = *(_QWORD *)v304;
          v303[8] = v304[8];
          v301(&v303[*(int *)(v305 + 20)], &v304[*(int *)(v305 + 20)], v300);
          __swift_storeEnumTagSinglePayload((uint64_t)v303, 0, 1, v305);
        }
        v507 = v296[9];
        v508 = (char *)a1 + v507;
        v509 = (char *)a2 + v507;
        v510 = type metadata accessor for Proto_BoxCoordinatesMode(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v509, 1, v510))
        {
          v511 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
          memcpy(v508, v509, *(_QWORD *)(*(_QWORD *)(v511 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v508 = *(_QWORD *)v509;
          v508[8] = v509[8];
          v301(&v508[*(int *)(v510 + 20)], &v509[*(int *)(v510 + 20)], v300);
          __swift_storeEnumTagSinglePayload((uint64_t)v508, 0, 1, v510);
        }
        goto LABEL_201;
      case 0x51u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        *((_DWORD *)a1 + 3) = *((_DWORD *)a2 + 3);
        a1[2] = a2[2];
        *((_BYTE *)a1 + 24) = *((_BYTE *)a2 + 24);
        v307 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
        v308 = (char *)a1 + v307;
        v309 = (char *)a2 + v307;
        v310 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v310 - 8) + 32))(v308, v309, v310);
        goto LABEL_201;
      case 0x52u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v311 = *(int *)(type metadata accessor for Proto_ReduceL1LayerParams(0) + 28);
        v312 = (char *)a1 + v311;
        v313 = (char *)a2 + v311;
        v314 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v314 - 8) + 32))(v312, v313, v314);
        goto LABEL_201;
      case 0x53u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v315 = *(int *)(type metadata accessor for Proto_ReduceL2LayerParams(0) + 28);
        v316 = (char *)a1 + v315;
        v317 = (char *)a2 + v315;
        v318 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v318 - 8) + 32))(v316, v317, v318);
        goto LABEL_201;
      case 0x54u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v319 = *(int *)(type metadata accessor for Proto_ReduceMaxLayerParams(0) + 28);
        v320 = (char *)a1 + v319;
        v321 = (char *)a2 + v319;
        v322 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v322 - 8) + 32))(v320, v321, v322);
        goto LABEL_201;
      case 0x55u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v323 = *(int *)(type metadata accessor for Proto_ReduceMinLayerParams(0) + 28);
        v324 = (char *)a1 + v323;
        v325 = (char *)a2 + v323;
        v326 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v326 - 8) + 32))(v324, v325, v326);
        goto LABEL_201;
      case 0x56u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v327 = *(int *)(type metadata accessor for Proto_ReduceSumLayerParams(0) + 28);
        v328 = (char *)a1 + v327;
        v329 = (char *)a2 + v327;
        v330 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v330 - 8) + 32))(v328, v329, v330);
        goto LABEL_201;
      case 0x57u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v331 = *(int *)(type metadata accessor for Proto_ReduceProdLayerParams(0) + 28);
        v332 = (char *)a1 + v331;
        v333 = (char *)a2 + v331;
        v334 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v334 - 8) + 32))(v332, v333, v334);
        goto LABEL_201;
      case 0x58u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v335 = *(int *)(type metadata accessor for Proto_ReduceMeanLayerParams(0) + 28);
        v336 = (char *)a1 + v335;
        v337 = (char *)a2 + v335;
        v338 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v338 - 8) + 32))(v336, v337, v338);
        goto LABEL_201;
      case 0x59u:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v339 = *(int *)(type metadata accessor for Proto_ReduceLogSumLayerParams(0) + 28);
        v340 = (char *)a1 + v339;
        v341 = (char *)a2 + v339;
        v342 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v342 - 8) + 32))(v340, v341, v342);
        goto LABEL_201;
      case 0x5Au:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v343 = *(int *)(type metadata accessor for Proto_ReduceSumSquareLayerParams(0) + 28);
        v344 = (char *)a1 + v343;
        v345 = (char *)a2 + v343;
        v346 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v346 - 8) + 32))(v344, v345, v346);
        goto LABEL_201;
      case 0x5Bu:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v347 = *(int *)(type metadata accessor for Proto_ReduceLogSumExpLayerParams(0) + 28);
        v348 = (char *)a1 + v347;
        v349 = (char *)a2 + v347;
        v350 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v350 - 8) + 32))(v348, v349, v350);
        goto LABEL_201;
      case 0x5Eu:
        *a1 = *a2;
        *((_WORD *)a1 + 4) = *((_WORD *)a2 + 4);
        v351 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
        v352 = (char *)a1 + v351;
        v353 = (char *)a2 + v351;
        v354 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v354 - 8) + 32))(v352, v353, v354);
        goto LABEL_201;
      case 0x5Fu:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v355 = *(int *)(type metadata accessor for Proto_ArgMinLayerParams(0) + 24);
        v356 = (char *)a1 + v355;
        v357 = (char *)a2 + v355;
        v358 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v358 - 8) + 32))(v356, v357, v358);
        goto LABEL_201;
      case 0x60u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v359 = *(int *)(type metadata accessor for Proto_ArgMaxLayerParams(0) + 24);
        v360 = (char *)a1 + v359;
        v361 = (char *)a2 + v359;
        v362 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v362 - 8) + 32))(v360, v361, v362);
        goto LABEL_201;
      case 0x63u:
        v363 = sub_240F1C930();
        v364 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v363 - 8) + 32);
        v364(a1, a2, v363);
        v365 = type metadata accessor for Proto_BranchLayerParams(0);
        v366 = *(int *)(v365 + 20);
        v367 = (_OWORD *)((char *)a1 + v366);
        v368 = (_OWORD *)((char *)a2 + v366);
        v369 = type metadata accessor for Proto_NeuralNetwork(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v368, 1, v369))
        {
          v370 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy(v367, v368, *(_QWORD *)(*(_QWORD *)(v370 - 8) + 64));
        }
        else
        {
          *v367 = *v368;
          *((_QWORD *)v367 + 2) = *((_QWORD *)v368 + 2);
          *((_BYTE *)v367 + 24) = *((_BYTE *)v368 + 24);
          *((_QWORD *)v367 + 4) = *((_QWORD *)v368 + 4);
          *((_BYTE *)v367 + 40) = *((_BYTE *)v368 + 40);
          v364((_OWORD *)((char *)v367 + *(int *)(v369 + 32)), (_OWORD *)((char *)v368 + *(int *)(v369 + 32)), v363);
          v512 = *(int *)(v369 + 36);
          __dst = (char *)v367 + v512;
          v513 = (char *)v368 + v512;
          updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v513, 1, updated))
          {
            v515 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(__dst, v513, *(_QWORD *)(*(_QWORD *)(v515 - 8) + 64));
          }
          else
          {
            v364(__dst, v513, v363);
            *(_QWORD *)&__dst[*(int *)(updated + 20)] = *(_QWORD *)&v513[*(int *)(updated + 20)];
            __swift_storeEnumTagSinglePayload((uint64_t)__dst, 0, 1, updated);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v367, 0, 1, v369);
        }
        v527 = *(int *)(v365 + 24);
        v528 = (uint64_t)a1 + v527;
        v529 = (uint64_t)a2 + v527;
        if (__swift_getEnumTagSinglePayload(v529, 1, v369))
          goto LABEL_163;
        *(_OWORD *)v528 = *(_OWORD *)v529;
        *(_QWORD *)(v528 + 16) = *(_QWORD *)(v529 + 16);
        *(_BYTE *)(v528 + 24) = *(_BYTE *)(v529 + 24);
        *(_QWORD *)(v528 + 32) = *(_QWORD *)(v529 + 32);
        *(_BYTE *)(v528 + 40) = *(_BYTE *)(v529 + 40);
        v364((_OWORD *)(v528 + *(int *)(v369 + 32)), (_OWORD *)(v529 + *(int *)(v369 + 32)), v363);
        v531 = *(int *)(v369 + 36);
        v532 = (char *)(v528 + v531);
        v533 = (char *)(v529 + v531);
        v534 = type metadata accessor for Proto_NetworkUpdateParameters(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v533, 1, v534))
          goto LABEL_165;
        goto LABEL_173;
      case 0x65u:
        *a1 = *a2;
        *(_OWORD *)(a1 + 1) = *(_OWORD *)(a2 + 1);
        v371 = (int *)type metadata accessor for Proto_LoopLayerParams(0);
        v372 = v371[6];
        v373 = (char *)a1 + v372;
        v374 = (char *)a2 + v372;
        v363 = sub_240F1C930();
        v364 = *(void (**)(_OWORD *, _OWORD *, uint64_t))(*(_QWORD *)(v363 - 8) + 32);
        v364(v373, v374, v363);
        v375 = v371[7];
        v376 = (_OWORD *)((char *)a1 + v375);
        v377 = (_OWORD *)((char *)a2 + v375);
        v369 = type metadata accessor for Proto_NeuralNetwork(0);
        if (__swift_getEnumTagSinglePayload((uint64_t)v377, 1, v369))
        {
          v378 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy(v376, v377, *(_QWORD *)(*(_QWORD *)(v378 - 8) + 64));
        }
        else
        {
          *v376 = *v377;
          *((_QWORD *)v376 + 2) = *((_QWORD *)v377 + 2);
          *((_BYTE *)v376 + 24) = *((_BYTE *)v377 + 24);
          *((_QWORD *)v376 + 4) = *((_QWORD *)v377 + 4);
          *((_BYTE *)v376 + 40) = *((_BYTE *)v377 + 40);
          v364((_OWORD *)((char *)v376 + *(int *)(v369 + 32)), (_OWORD *)((char *)v377 + *(int *)(v369 + 32)), v363);
          v516 = *(int *)(v369 + 36);
          __dsta = (char *)v376 + v516;
          v517 = (char *)v377 + v516;
          v518 = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v517, 1, v518))
          {
            v519 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(__dsta, v517, *(_QWORD *)(*(_QWORD *)(v519 - 8) + 64));
          }
          else
          {
            v364(__dsta, v517, v363);
            *(_QWORD *)&__dsta[*(int *)(v518 + 20)] = *(_QWORD *)&v517[*(int *)(v518 + 20)];
            __swift_storeEnumTagSinglePayload((uint64_t)__dsta, 0, 1, v518);
          }
          __swift_storeEnumTagSinglePayload((uint64_t)v376, 0, 1, v369);
        }
        v536 = v371[8];
        v528 = (uint64_t)a1 + v536;
        v529 = (uint64_t)a2 + v536;
        if (__swift_getEnumTagSinglePayload(v529, 1, v369))
        {
LABEL_163:
          v530 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
          memcpy((void *)v528, (const void *)v529, *(_QWORD *)(*(_QWORD *)(v530 - 8) + 64));
        }
        else
        {
          *(_OWORD *)v528 = *(_OWORD *)v529;
          *(_QWORD *)(v528 + 16) = *(_QWORD *)(v529 + 16);
          *(_BYTE *)(v528 + 24) = *(_BYTE *)(v529 + 24);
          *(_QWORD *)(v528 + 32) = *(_QWORD *)(v529 + 32);
          *(_BYTE *)(v528 + 40) = *(_BYTE *)(v529 + 40);
          v364((_OWORD *)(v528 + *(int *)(v369 + 32)), (_OWORD *)(v529 + *(int *)(v369 + 32)), v363);
          v537 = *(int *)(v369 + 36);
          v532 = (char *)(v528 + v537);
          v533 = (char *)(v529 + v537);
          v534 = type metadata accessor for Proto_NetworkUpdateParameters(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v533, 1, v534))
          {
LABEL_165:
            v535 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
            memcpy(v532, v533, *(_QWORD *)(*(_QWORD *)(v535 - 8) + 64));
          }
          else
          {
LABEL_173:
            v364(v532, v533, v363);
            *(_QWORD *)&v532[*(int *)(v534 + 20)] = *(_QWORD *)&v533[*(int *)(v534 + 20)];
            __swift_storeEnumTagSinglePayload((uint64_t)v532, 0, 1, v534);
          }
          __swift_storeEnumTagSinglePayload(v528, 0, 1, v369);
        }
        goto LABEL_201;
      case 0x68u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v379 = *(int *)(type metadata accessor for Proto_RangeStaticLayerParams(0) + 28);
        v380 = (char *)a1 + v379;
        v381 = (char *)a2 + v379;
        v382 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v382 - 8) + 32))(v380, v381, v382);
        goto LABEL_201;
      case 0x69u:
        *a1 = *a2;
        v383 = *(int *)(type metadata accessor for Proto_RangeDynamicLayerParams(0) + 24);
        v384 = (char *)a1 + v383;
        v385 = (char *)a2 + v383;
        v386 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v386 - 8) + 32))(v384, v385, v386);
        goto LABEL_201;
      case 0x6Au:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v387 = *(int *)(type metadata accessor for Proto_EqualLayerParams(0) + 20);
        v388 = (char *)a1 + v387;
        v389 = (char *)a2 + v387;
        v390 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v390 - 8) + 32))(v388, v389, v390);
        goto LABEL_201;
      case 0x6Bu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v391 = *(int *)(type metadata accessor for Proto_NotEqualLayerParams(0) + 20);
        v392 = (char *)a1 + v391;
        v393 = (char *)a2 + v391;
        v394 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v394 - 8) + 32))(v392, v393, v394);
        goto LABEL_201;
      case 0x6Cu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v395 = *(int *)(type metadata accessor for Proto_LessThanLayerParams(0) + 20);
        v396 = (char *)a1 + v395;
        v397 = (char *)a2 + v395;
        v398 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v398 - 8) + 32))(v396, v397, v398);
        goto LABEL_201;
      case 0x6Du:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v399 = *(int *)(type metadata accessor for Proto_LessEqualLayerParams(0) + 20);
        v400 = (char *)a1 + v399;
        v401 = (char *)a2 + v399;
        v402 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v402 - 8) + 32))(v400, v401, v402);
        goto LABEL_201;
      case 0x6Eu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v403 = *(int *)(type metadata accessor for Proto_GreaterThanLayerParams(0) + 20);
        v404 = (char *)a1 + v403;
        v405 = (char *)a2 + v403;
        v406 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v406 - 8) + 32))(v404, v405, v406);
        goto LABEL_201;
      case 0x6Fu:
        *(_DWORD *)a1 = *(_DWORD *)a2;
        v407 = *(int *)(type metadata accessor for Proto_GreaterEqualLayerParams(0) + 20);
        v408 = (char *)a1 + v407;
        v409 = (char *)a2 + v407;
        v410 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v410 - 8) + 32))(v408, v409, v410);
        goto LABEL_201;
      case 0x70u:
        *a1 = *a2;
        a1[1] = a2[1];
        v411 = *(int *)(type metadata accessor for Proto_RandomNormalLikeLayerParams(0) + 28);
        v412 = (char *)a1 + v411;
        v413 = (char *)a2 + v411;
        v414 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v414 - 8) + 32))(v412, v413, v414);
        goto LABEL_201;
      case 0x71u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v415 = *(int *)(type metadata accessor for Proto_RandomNormalStaticLayerParams(0) + 32);
        v416 = (char *)a1 + v415;
        v417 = (char *)a2 + v415;
        v418 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v418 - 8) + 32))(v416, v417, v418);
        goto LABEL_201;
      case 0x72u:
        *a1 = *a2;
        a1[1] = a2[1];
        v419 = *(int *)(type metadata accessor for Proto_RandomNormalDynamicLayerParams(0) + 28);
        v420 = (char *)a1 + v419;
        v421 = (char *)a2 + v419;
        v422 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v422 - 8) + 32))(v420, v421, v422);
        goto LABEL_201;
      case 0x73u:
        *a1 = *a2;
        a1[1] = a2[1];
        v423 = *(int *)(type metadata accessor for Proto_RandomUniformLikeLayerParams(0) + 28);
        v424 = (char *)a1 + v423;
        v425 = (char *)a2 + v423;
        v426 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v426 - 8) + 32))(v424, v425, v426);
        goto LABEL_201;
      case 0x74u:
        *a1 = *a2;
        a1[1] = a2[1];
        a1[2] = a2[2];
        v427 = *(int *)(type metadata accessor for Proto_RandomUniformStaticLayerParams(0) + 32);
        v428 = (char *)a1 + v427;
        v429 = (char *)a2 + v427;
        v430 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v430 - 8) + 32))(v428, v429, v430);
        goto LABEL_201;
      case 0x75u:
        *a1 = *a2;
        a1[1] = a2[1];
        v431 = *(int *)(type metadata accessor for Proto_RandomUniformDynamicLayerParams(0) + 28);
        v432 = (char *)a1 + v431;
        v433 = (char *)a2 + v431;
        v434 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v434 - 8) + 32))(v432, v433, v434);
        goto LABEL_201;
      case 0x76u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v435 = *(int *)(type metadata accessor for Proto_RandomBernoulliLikeLayerParams(0) + 24);
        v436 = (char *)a1 + v435;
        v437 = (char *)a2 + v435;
        v438 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v438 - 8) + 32))(v436, v437, v438);
        goto LABEL_201;
      case 0x77u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        a1[2] = a2[2];
        v439 = *(int *)(type metadata accessor for Proto_RandomBernoulliStaticLayerParams(0) + 28);
        v440 = (char *)a1 + v439;
        v441 = (char *)a2 + v439;
        v442 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v442 - 8) + 32))(v440, v441, v442);
        goto LABEL_201;
      case 0x78u:
        *a1 = *a2;
        *((_DWORD *)a1 + 2) = *((_DWORD *)a2 + 2);
        v443 = *(int *)(type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(0) + 24);
        v444 = (char *)a1 + v443;
        v445 = (char *)a2 + v443;
        v446 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v446 - 8) + 32))(v444, v445, v446);
        goto LABEL_201;
      case 0x79u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        v447 = *(int *)(type metadata accessor for Proto_MatrixBandPartLayerParams(0) + 24);
        v448 = (char *)a1 + v447;
        v449 = (char *)a2 + v447;
        v450 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v450 - 8) + 32))(v448, v449, v450);
        goto LABEL_201;
      case 0x7Au:
        *a1 = *a2;
        v451 = *(int *)(type metadata accessor for Proto_LowerTriangularLayerParams(0) + 20);
        v452 = (char *)a1 + v451;
        v453 = (char *)a2 + v451;
        v454 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v454 - 8) + 32))(v452, v453, v454);
        goto LABEL_201;
      case 0x7Bu:
        *a1 = *a2;
        v455 = *(int *)(type metadata accessor for Proto_UpperTriangularLayerParams(0) + 20);
        v456 = (char *)a1 + v455;
        v457 = (char *)a2 + v455;
        v458 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v458 - 8) + 32))(v456, v457, v458);
        goto LABEL_201;
      case 0x7Cu:
        v459 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v459 - 8) + 32))(a1, a2, v459);
        v460 = type metadata accessor for Proto_EmbeddingLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v460 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v460 + 20));
        goto LABEL_201;
      case 0x7Du:
        v461 = sub_240F1C930();
        (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v461 - 8) + 32))(a1, a2, v461);
        v462 = type metadata accessor for Proto_EmbeddingNDLayerParams(0);
        *(_QWORD *)((char *)a1 + *(int *)(v462 + 20)) = *(_QWORD *)((char *)a2 + *(int *)(v462 + 20));
        goto LABEL_201;
      case 0x7Eu:
        *a1 = *a2;
        v463 = type metadata accessor for Proto_BiasLayerParams(0);
        v464 = *(int *)(v463 + 20);
        v465 = (char *)a1 + v464;
        v466 = (char *)a2 + v464;
        v10 = sub_240F1C930();
        v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32);
        v11(v465, v466, v10);
        v467 = *(int *)(v463 + 24);
        v13 = (uint64_t)a1 + v467;
        v14 = (uint64_t)a2 + v467;
        v15 = type metadata accessor for Proto_WeightParams(0);
        if (__swift_getEnumTagSinglePayload(v14, 1, v15))
        {
LABEL_7:
          v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
          memcpy((void *)v13, (const void *)v14, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
        }
        else
        {
          *(_QWORD *)v13 = *(_QWORD *)v14;
          *(_OWORD *)(v13 + 8) = *(_OWORD *)(v14 + 8);
          *(_OWORD *)(v13 + 24) = *(_OWORD *)(v14 + 24);
          *(_OWORD *)(v13 + 40) = *(_OWORD *)(v14 + 40);
          *(_BYTE *)(v13 + 56) = *(_BYTE *)(v14 + 56);
          v11((char *)(v13 + *(int *)(v15 + 36)), (char *)(v14 + *(int *)(v15 + 36)), v10);
          v520 = *(int *)(v15 + 40);
          v494 = (char *)(v13 + v520);
          v495 = (_QWORD *)(v14 + v520);
          v496 = type metadata accessor for Proto_QuantizationParams(0);
          if (__swift_getEnumTagSinglePayload((uint64_t)v495, 1, v496))
          {
LABEL_153:
            v521 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E8);
            memcpy(v494, v495, *(_QWORD *)(*(_QWORD *)(v521 - 8) + 64));
          }
          else
          {
            *(_QWORD *)v494 = *v495;
            v538 = *(int *)(v496 + 20);
            v572 = &v494[v538];
            __dstb = v494;
            v523 = (char *)v495 + v538;
            v539 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
            if (__swift_getEnumTagSinglePayload((uint64_t)v523, 1, v539))
            {
LABEL_159:
              v526 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
              memcpy(v572, v523, *(_QWORD *)(*(_QWORD *)(v526 - 8) + 64));
            }
            else
            {
              v571 = v539;
              v562 = swift_getEnumCaseMultiPayload();
              *(_QWORD *)v572 = *(_QWORD *)v523;
              if (v562 == 1)
              {
                v563 = (uint64_t)v572;
                v564 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
                v565 = 5;
              }
              else
              {
                *((_QWORD *)v572 + 1) = *((_QWORD *)v523 + 1);
                v563 = (uint64_t)v572;
                v564 = type metadata accessor for Proto_LinearQuantizationParams(0);
                v565 = 6;
              }
              v11((char *)(v563 + *(int *)(v564 + 4 * v565)), &v523[*(int *)(v564 + 4 * v565)], v10);
              swift_storeEnumTagMultiPayload();
              __swift_storeEnumTagSinglePayload(v563, 0, 1, v571);
            }
LABEL_199:
            v11(&__dstb[*(int *)(v496 + 24)], (char *)v495 + *(int *)(v496 + 24), v10);
            __swift_storeEnumTagSinglePayload((uint64_t)__dstb, 0, 1, v496);
          }
          __swift_storeEnumTagSinglePayload(v13, 0, 1, v15);
        }
        goto LABEL_201;
      case 0x7Fu:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        *(_QWORD *)((char *)a1 + 20) = *(_QWORD *)((char *)a2 + 20);
        v468 = *(int *)(type metadata accessor for Proto_CategoricalDistributionLayerParams(0) + 36);
        v469 = (char *)a1 + v468;
        v470 = (char *)a2 + v468;
        v471 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v471 - 8) + 32))(v469, v470, v471);
        goto LABEL_201;
      case 0x80u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        a1[2] = a2[2];
        v472 = *(int *)(type metadata accessor for Proto_OneHotLayerParams(0) + 32);
        v473 = (char *)a1 + v472;
        v474 = (char *)a2 + v472;
        v475 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v475 - 8) + 32))(v473, v474, v475);
        goto LABEL_201;
      case 0x81u:
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v476 = *(int *)(type metadata accessor for Proto_TopKLayerParams(0) + 28);
        v477 = (char *)a1 + v476;
        v478 = (char *)a2 + v476;
        v479 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v479 - 8) + 32))(v477, v478, v479);
        goto LABEL_201;
      case 0x82u:
        *a1 = *a2;
        *((_BYTE *)a1 + 8) = *((_BYTE *)a2 + 8);
        v480 = *(int *)(type metadata accessor for Proto_ArgSortLayerParams(0) + 24);
        v481 = (char *)a1 + v480;
        v482 = (char *)a2 + v480;
        v483 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v483 - 8) + 32))(v481, v482, v483);
        goto LABEL_201;
      case 0x83u:
        *a1 = *a2;
        a1[1] = a2[1];
        *((_BYTE *)a1 + 16) = *((_BYTE *)a2 + 16);
        v484 = *(int *)(type metadata accessor for Proto_NonMaximumSuppressionLayerParams(0) + 32);
        v485 = (char *)a1 + v484;
        v486 = (char *)a2 + v484;
        v487 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v487 - 8) + 32))(v485, v486, v487);
        goto LABEL_201;
      case 0x84u:
        v488 = *((_OWORD *)a2 + 1);
        *(_OWORD *)a1 = *(_OWORD *)a2;
        *((_OWORD *)a1 + 1) = v488;
        *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
        v489 = *(int *)(type metadata accessor for Proto_CustomLayerParams(0) + 32);
        v490 = (char *)a1 + v489;
        v491 = (char *)a2 + v489;
        v492 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v492 - 8) + 32))(v490, v491, v492);
        goto LABEL_201;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        return a1;
    }
  }
  return a1;
}

uint64_t sub_240C24564()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  unint64_t v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  unint64_t v44;
  unint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;
  unint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  unint64_t v60;
  unint64_t v61;
  unint64_t v62;
  unint64_t v63;
  unint64_t v64;
  unint64_t v65;
  unint64_t v66;
  unint64_t v67;
  unint64_t v68;
  unint64_t v69;
  unint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  unint64_t v77;
  unint64_t v78;
  unint64_t v79;
  unint64_t v80;
  unint64_t v81;
  unint64_t v82;
  unint64_t v83;
  unint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unint64_t v88;
  unint64_t v89;
  unint64_t v90;
  unint64_t v91;
  unint64_t v92;
  unint64_t v93;
  unint64_t v94;
  unint64_t v95;
  unint64_t v96;
  unint64_t v97;
  unint64_t v98;
  unint64_t v99;
  unint64_t v100;
  unint64_t v101;
  unint64_t v102;
  unint64_t v103;
  unint64_t v104;
  unint64_t v105;
  unint64_t v106;
  unint64_t v107;
  unint64_t v108;
  unint64_t v109;
  unint64_t v110;
  unint64_t v111;
  unint64_t v112;
  unint64_t v113;

  result = type metadata accessor for Proto_LoadConstantLayerParams(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_LoadConstantNDLayerParams(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Proto_PaddingLayerParams(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Proto_ConstantPaddingLayerParams(319);
        if (v4 <= 0x3F)
        {
          result = type metadata accessor for Proto_ConcatLayerParams(319);
          if (v5 <= 0x3F)
          {
            result = type metadata accessor for Proto_ConcatNDLayerParams(319);
            if (v6 <= 0x3F)
            {
              result = type metadata accessor for Proto_SplitLayerParams(319);
              if (v7 <= 0x3F)
              {
                result = type metadata accessor for Proto_SplitNDLayerParams(319);
                if (v8 <= 0x3F)
                {
                  result = type metadata accessor for Proto_UpsampleLayerParams(319);
                  if (v9 <= 0x3F)
                  {
                    result = type metadata accessor for Proto_FillLikeLayerParams(319);
                    if (v10 <= 0x3F)
                    {
                      result = type metadata accessor for Proto_FillStaticLayerParams(319);
                      if (v11 <= 0x3F)
                      {
                        result = type metadata accessor for Proto_FillDynamicLayerParams(319);
                        if (v12 <= 0x3F)
                        {
                          result = type metadata accessor for Proto_SequenceRepeatLayerParams(319);
                          if (v13 <= 0x3F)
                          {
                            result = type metadata accessor for Proto_ReverseSeqLayerParams(319);
                            if (v14 <= 0x3F)
                            {
                              result = type metadata accessor for Proto_ReorganizeDataLayerParams(319);
                              if (v15 <= 0x3F)
                              {
                                result = type metadata accessor for Proto_TileLayerParams(319);
                                if (v16 <= 0x3F)
                                {
                                  result = type metadata accessor for Proto_ReverseLayerParams(319);
                                  if (v17 <= 0x3F)
                                  {
                                    result = type metadata accessor for Proto_SqueezeLayerParams(319);
                                    if (v18 <= 0x3F)
                                    {
                                      result = type metadata accessor for Proto_ExpandDimsLayerParams(319);
                                      if (v19 <= 0x3F)
                                      {
                                        result = type metadata accessor for Proto_FlattenLayerParams(319);
                                        if (v20 <= 0x3F)
                                        {
                                          result = type metadata accessor for Proto_ReshapeLayerParams(319);
                                          if (v21 <= 0x3F)
                                          {
                                            result = type metadata accessor for Proto_ReshapeStaticLayerParams(319);
                                            if (v22 <= 0x3F)
                                            {
                                              result = type metadata accessor for Proto_RankPreservingReshapeLayerParams(319);
                                              if (v23 <= 0x3F)
                                              {
                                                result = type metadata accessor for Proto_PermuteLayerParams(319);
                                                if (v24 <= 0x3F)
                                                {
                                                  result = type metadata accessor for Proto_TransposeLayerParams(319);
                                                  if (v25 <= 0x3F)
                                                  {
                                                    result = sub_240F1C930();
                                                    if (v26 <= 0x3F)
                                                    {
                                                      result = type metadata accessor for Proto_BroadcastToStaticLayerParams(319);
                                                      if (v27 <= 0x3F)
                                                      {
                                                        result = type metadata accessor for Proto_FlattenTo2DLayerParams(319);
                                                        if (v28 <= 0x3F)
                                                        {
                                                          result = type metadata accessor for Proto_StackLayerParams(319);
                                                          if (v29 <= 0x3F)
                                                          {
                                                            result = type metadata accessor for Proto_GatherLayerParams(319);
                                                            if (v30 <= 0x3F)
                                                            {
                                                              result = type metadata accessor for Proto_GatherAlongAxisLayerParams(319);
                                                              if (v31 <= 0x3F)
                                                              {
                                                                result = type metadata accessor for Proto_ScatterLayerParams(319);
                                                                if (v32 <= 0x3F)
                                                                {
                                                                  result = type metadata accessor for Proto_ScatterNDLayerParams(319);
                                                                  if (v33 <= 0x3F)
                                                                  {
                                                                    result = type metadata accessor for Proto_ScatterAlongAxisLayerParams(319);
                                                                    if (v34 <= 0x3F)
                                                                    {
                                                                      result = type metadata accessor for Proto_SliceLayerParams(319);
                                                                      if (v35 <= 0x3F)
                                                                      {
                                                                        result = type metadata accessor for Proto_SliceStaticLayerParams(319);
                                                                        if (v36 <= 0x3F)
                                                                        {
                                                                          result = type metadata accessor for Proto_SliceDynamicLayerParams(319);
                                                                          if (v37 <= 0x3F)
                                                                          {
                                                                            result = type metadata accessor for Proto_SliceBySizeLayerParams(319);
                                                                            if (v38 <= 0x3F)
                                                                            {
                                                                              result = type metadata accessor for Proto_SlidingWindowsLayerParams(319);
                                                                              if (v39 <= 0x3F)
                                                                              {
                                                                                result = type metadata accessor for Proto_InnerProductLayerParams(319);
                                                                                if (v40 <= 0x3F)
                                                                                {
                                                                                  result = type metadata accessor for NeuralNetwork.Layer.Activation(319);
                                                                                  if (v41 <= 0x3F)
                                                                                  {
                                                                                    result = type metadata accessor for Proto_UnaryFunctionLayerParams(319);
                                                                                    if (v42 <= 0x3F)
                                                                                    {
                                                                                      result = type metadata accessor for NeuralNetwork.Layer.ClipParameters();
                                                                                      if (v43 <= 0x3F)
                                                                                      {
                                                                                        result = type metadata accessor for Proto_GeluLayerParams(319);
                                                                                        if (v44 <= 0x3F)
                                                                                        {
                                                                                          result = type metadata accessor for Proto_ClampedReLULayerParams(319);
                                                                                          if (v45 <= 0x3F)
                                                                                          {
                                                                                            result = type metadata accessor for Proto_ConvolutionLayerParams(319);
                                                                                            if (v46 <= 0x3F)
                                                                                            {
                                                                                              result = type metadata accessor for Proto_Convolution3DLayerParams(319);
                                                                                              if (v47 <= 0x3F)
                                                                                              {
                                                                                                result = type metadata accessor for Proto_PoolingLayerParams(319);
                                                                                                if (v48 <= 0x3F)
                                                                                                {
                                                                                                  result = type metadata accessor for Proto_Pooling3DLayerParams(319);
                                                                                                  if (v49 <= 0x3F)
                                                                                                  {
                                                                                                    result = type metadata accessor for Proto_GlobalPooling3DLayerParams(319);
                                                                                                    if (v50 <= 0x3F)
                                                                                                    {
                                                                                                      result = type metadata accessor for Proto_AddLayerParams(319);
                                                                                                      if (v51 <= 0x3F)
                                                                                                      {
                                                                                                        result = type metadata accessor for Proto_MultiplyLayerParams(319);
                                                                                                        if (v52 <= 0x3F)
                                                                                                        {
                                                                                                          result = type metadata accessor for Proto_BatchedMatMulLayerParams(319);
                                                                                                          if (v53 <= 0x3F)
                                                                                                          {
                                                                                                            result = type metadata accessor for Proto_DotProductLayerParams(319);
                                                                                                            if (v54 <= 0x3F)
                                                                                                            {
                                                                                                              result = type metadata accessor for Proto_ScaleLayerParams(319);
                                                                                                              if (v55 <= 0x3F)
                                                                                                              {
                                                                                                                result = type metadata accessor for Proto_BatchnormLayerParams(319);
                                                                                                                if (v56 <= 0x3F)
                                                                                                                {
                                                                                                                  result = type metadata accessor for Proto_SoftmaxNDLayerParams(319);
                                                                                                                  if (v57 <= 0x3F)
                                                                                                                  {
                                                                                                                    result = type metadata accessor for Proto_MeanVarianceNormalizeLayerParams(319);
                                                                                                                    if (v58 <= 0x3F)
                                                                                                                    {
                                                                                                                      result = type metadata accessor for Proto_L2NormalizeLayerParams(319);
                                                                                                                      if (v59 <= 0x3F)
                                                                                                                      {
                                                                                                                        result = type metadata accessor for Proto_LRNLayerParams(319);
                                                                                                                        if (v60 <= 0x3F)
                                                                                                                        {
                                                                                                                          result = type metadata accessor for Proto_LayerNormalizationLayerParams(319);
                                                                                                                          if (v61 <= 0x3F)
                                                                                                                          {
                                                                                                                            result = type metadata accessor for Proto_UniDirectionalLSTMLayerParams(319);
                                                                                                                            if (v62 <= 0x3F)
                                                                                                                            {
                                                                                                                              result = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(319);
                                                                                                                              if (v63 <= 0x3F)
                                                                                                                              {
                                                                                                                                result = type metadata accessor for Proto_SimpleRecurrentLayerParams(319);
                                                                                                                                if (v64 <= 0x3F)
                                                                                                                                {
                                                                                                                                  result = type metadata accessor for Proto_GRULayerParams(319);
                                                                                                                                  if (v65 <= 0x3F)
                                                                                                                                  {
                                                                                                                                    result = type metadata accessor for Proto_CropLayerParams(319);
                                                                                                                                    if (v66 <= 0x3F)
                                                                                                                                    {
                                                                                                                                      result = type metadata accessor for Proto_ResizeBilinearLayerParams(319);
                                                                                                                                      if (v67 <= 0x3F)
                                                                                                                                      {
                                                                                                                                        result = type metadata accessor for Proto_CropResizeLayerParams(319);
                                                                                                                                        if (v68 <= 0x3F)
                                                                                                                                        {
                                                                                                                                          result = type metadata accessor for Proto_ReduceLayerParams(319);
                                                                                                                                          if (v69 <= 0x3F)
                                                                                                                                          {
                                                                                                                                            result = type metadata accessor for Proto_ReduceL1LayerParams(319);
                                                                                                                                            if (v70 <= 0x3F)
                                                                                                                                            {
                                                                                                                                              result = type metadata accessor for Proto_ReduceL2LayerParams(319);
                                                                                                                                              if (v71 <= 0x3F)
                                                                                                                                              {
                                                                                                                                                result = type metadata accessor for Proto_ReduceMaxLayerParams(319);
                                                                                                                                                if (v72 <= 0x3F)
                                                                                                                                                {
                                                                                                                                                  result = type metadata accessor for Proto_ReduceMinLayerParams(319);
                                                                                                                                                  if (v73 <= 0x3F)
                                                                                                                                                  {
                                                                                                                                                    result = type metadata accessor for Proto_ReduceSumLayerParams(319);
                                                                                                                                                    if (v74 <= 0x3F)
                                                                                                                                                    {
                                                                                                                                                      result = type metadata accessor for Proto_ReduceProdLayerParams(319);
                                                                                                                                                      if (v75 <= 0x3F)
                                                                                                                                                      {
                                                                                                                                                        result = type metadata accessor for Proto_ReduceMeanLayerParams(319);
                                                                                                                                                        if (v76 <= 0x3F)
                                                                                                                                                        {
                                                                                                                                                          result = type metadata accessor for Proto_ReduceLogSumLayerParams(319);
                                                                                                                                                          if (v77 <= 0x3F)
                                                                                                                                                          {
                                                                                                                                                            result = type metadata accessor for Proto_ReduceSumSquareLayerParams(319);
                                                                                                                                                            if (v78 <= 0x3F)
                                                                                                                                                            {
                                                                                                                                                              result = type metadata accessor for Proto_ReduceLogSumExpLayerParams(319);
                                                                                                                                                              if (v79 <= 0x3F)
                                                                                                                                                              {
                                                                                                                                                                result = type metadata accessor for Proto_CumSumLayerParams(319);
                                                                                                                                                                if (v80 <= 0x3F)
                                                                                                                                                                {
                                                                                                                                                                  result = type metadata accessor for Proto_ArgMinLayerParams(319);
                                                                                                                                                                  if (v81 <= 0x3F)
                                                                                                                                                                  {
                                                                                                                                                                    result = type metadata accessor for Proto_ArgMaxLayerParams(319);
                                                                                                                                                                    if (v82 <= 0x3F)
                                                                                                                                                                    {
                                                                                                                                                                      result = type metadata accessor for Proto_BranchLayerParams(319);
                                                                                                                                                                      if (v83 <= 0x3F)
                                                                                                                                                                      {
                                                                                                                                                                        result = type metadata accessor for Proto_LoopLayerParams(319);
                                                                                                                                                                        if (v84 <= 0x3F)
                                                                                                                                                                        {
                                                                                                                                                                          result = type metadata accessor for Proto_RangeStaticLayerParams(319);
                                                                                                                                                                          if (v85 <= 0x3F)
                                                                                                                                                                          {
                                                                                                                                                                            result = type metadata accessor for Proto_RangeDynamicLayerParams(319);
                                                                                                                                                                            if (v86 <= 0x3F)
                                                                                                                                                                            {
                                                                                                                                                                              result = type metadata accessor for Proto_EqualLayerParams(319);
                                                                                                                                                                              if (v87 <= 0x3F)
                                                                                                                                                                              {
                                                                                                                                                                                result = type metadata accessor for Proto_NotEqualLayerParams(319);
                                                                                                                                                                                if (v88 <= 0x3F)
                                                                                                                                                                                {
                                                                                                                                                                                  result = type metadata accessor for Proto_LessThanLayerParams(319);
                                                                                                                                                                                  if (v89 <= 0x3F)
                                                                                                                                                                                  {
                                                                                                                                                                                    result = type metadata accessor for Proto_LessEqualLayerParams(319);
                                                                                                                                                                                    if (v90 <= 0x3F)
                                                                                                                                                                                    {
                                                                                                                                                                                      result = type metadata accessor for Proto_GreaterThanLayerParams(319);
                                                                                                                                                                                      if (v91 <= 0x3F)
                                                                                                                                                                                      {
                                                                                                                                                                                        result = type metadata accessor for Proto_GreaterEqualLayerParams(319);
                                                                                                                                                                                        if (v92 <= 0x3F)
                                                                                                                                                                                        {
                                                                                                                                                                                          result = type metadata accessor for Proto_RandomNormalLikeLayerParams(319);
                                                                                                                                                                                          if (v93 <= 0x3F)
                                                                                                                                                                                          {
                                                                                                                                                                                            result = type metadata accessor for Proto_RandomNormalStaticLayerParams(319);
                                                                                                                                                                                            if (v94 <= 0x3F)
                                                                                                                                                                                            {
                                                                                                                                                                                              result = type metadata accessor for Proto_RandomNormalDynamicLayerParams(319);
                                                                                                                                                                                              if (v95 <= 0x3F)
                                                                                                                                                                                              {
                                                                                                                                                                                                result = type metadata accessor for Proto_RandomUniformLikeLayerParams(319);
                                                                                                                                                                                                if (v96 <= 0x3F)
                                                                                                                                                                                                {
                                                                                                                                                                                                  result = type metadata accessor for Proto_RandomUniformStaticLayerParams(319);
                                                                                                                                                                                                  if (v97 <= 0x3F)
                                                                                                                                                                                                  {
                                                                                                                                                                                                    result = type metadata accessor for Proto_RandomUniformDynamicLayerParams(319);
                                                                                                                                                                                                    if (v98 <= 0x3F)
                                                                                                                                                                                                    {
                                                                                                                                                                                                      result = type metadata accessor for Proto_RandomBernoulliLikeLayerParams(319);
                                                                                                                                                                                                      if (v99 <= 0x3F)
                                                                                                                                                                                                      {
                                                                                                                                                                                                        result = type metadata accessor for Proto_RandomBernoulliStaticLayerParams(319);
                                                                                                                                                                                                        if (v100 <= 0x3F)
                                                                                                                                                                                                        {
                                                                                                                                                                                                          result = type metadata accessor for Proto_RandomBernoulliDynamicLayerParams(319);
                                                                                                                                                                                                          if (v101 <= 0x3F)
                                                                                                                                                                                                          {
                                                                                                                                                                                                            result = type metadata accessor for Proto_MatrixBandPartLayerParams(319);
                                                                                                                                                                                                            if (v102 <= 0x3F)
                                                                                                                                                                                                            {
                                                                                                                                                                                                              result = type metadata accessor for Proto_LowerTriangularLayerParams(319);
                                                                                                                                                                                                              if (v103 <= 0x3F)
                                                                                                                                                                                                              {
                                                                                                                                                                                                                result = type metadata accessor for Proto_UpperTriangularLayerParams(319);
                                                                                                                                                                                                                if (v104 <= 0x3F)
                                                                                                                                                                                                                {
                                                                                                                                                                                                                  result = type metadata accessor for Proto_EmbeddingLayerParams(319);
                                                                                                                                                                                                                  if (v105 <= 0x3F)
                                                                                                                                                                                                                  {
                                                                                                                                                                                                                    result = type metadata accessor for Proto_EmbeddingNDLayerParams(319);
                                                                                                                                                                                                                    if (v106 <= 0x3F)
                                                                                                                                                                                                                    {
                                                                                                                                                                                                                      result = type metadata accessor for Proto_BiasLayerParams(319);
                                                                                                                                                                                                                      if (v107 <= 0x3F)
                                                                                                                                                                                                                      {
                                                                                                                                                                                                                        result = type metadata accessor for Proto_CategoricalDistributionLayerParams(319);
                                                                                                                                                                                                                        if (v108 <= 0x3F)
                                                                                                                                                                                                                        {
                                                                                                                                                                                                                          result = type metadata accessor for Proto_OneHotLayerParams(319);
                                                                                                                                                                                                                          if (v109 <= 0x3F)
                                                                                                                                                                                                                          {
                                                                                                                                                                                                                            result = type metadata accessor for Proto_TopKLayerParams(319);
                                                                                                                                                                                                                            if (v110 <= 0x3F)
                                                                                                                                                                                                                            {
                                                                                                                                                                                                                              result = type metadata accessor for Proto_ArgSortLayerParams(319);
                                                                                                                                                                                                                              if (v111 <= 0x3F)
                                                                                                                                                                                                                              {
                                                                                                                                                                                                                                result = type metadata accessor for Proto_NonMaximumSuppressionLayerParams(319);
                                                                                                                                                                                                                                if (v112 <= 0x3F)
                                                                                                                                                                                                                                {
                                                                                                                                                                                                                                  result = type metadata accessor for Proto_CustomLayerParams(319);
                                                                                                                                                                                                                                  if (v113 <= 0x3F)
                                                                                                                                                                                                                                  {
                                                                                                                                                                                                                                    swift_initEnumMetadataMultiPayload();
                                                                                                                                                                                                                                    return 0;
                                                                                                                                                                                                                                  }
                                                                                                                                                                                                                                }
                                                                                                                                                                                                                              }
                                                                                                                                                                                                                            }
                                                                                                                                                                                                                          }
                                                                                                                                                                                                                        }
                                                                                                                                                                                                                      }
                                                                                                                                                                                                                    }
                                                                                                                                                                                                                  }
                                                                                                                                                                                                                }
                                                                                                                                                                                                              }
                                                                                                                                                                                                            }
                                                                                                                                                                                                          }
                                                                                                                                                                                                        }
                                                                                                                                                                                                      }
                                                                                                                                                                                                    }
                                                                                                                                                                                                  }
                                                                                                                                                                                                }
                                                                                                                                                                                              }
                                                                                                                                                                                            }
                                                                                                                                                                                          }
                                                                                                                                                                                        }
                                                                                                                                                                                      }
                                                                                                                                                                                    }
                                                                                                                                                                                  }
                                                                                                                                                                                }
                                                                                                                                                                              }
                                                                                                                                                                            }
                                                                                                                                                                          }
                                                                                                                                                                        }
                                                                                                                                                                      }
                                                                                                                                                                    }
                                                                                                                                                                  }
                                                                                                                                                                }
                                                                                                                                                              }
                                                                                                                                                            }
                                                                                                                                                          }
                                                                                                                                                        }
                                                                                                                                                      }
                                                                                                                                                    }
                                                                                                                                                  }
                                                                                                                                                }
                                                                                                                                              }
                                                                                                                                            }
                                                                                                                                          }
                                                                                                                                        }
                                                                                                                                      }
                                                                                                                                    }
                                                                                                                                  }
                                                                                                                                }
                                                                                                                              }
                                                                                                                            }
                                                                                                                          }
                                                                                                                        }
                                                                                                                      }
                                                                                                                    }
                                                                                                                  }
                                                                                                                }
                                                                                                              }
                                                                                                            }
                                                                                                          }
                                                                                                        }
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_3_1(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, *(_QWORD *)(a2 - 256), v2);
}

void OUTLINED_FUNCTION_4_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240BE0B90(v3, *(_QWORD *)(v4 - 104), a3);
}

void OUTLINED_FUNCTION_5_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0B90(a1, *(_QWORD *)(v3 - 104), a3);
}

void OUTLINED_FUNCTION_6_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0B90(a1, v3, a3);
}

void OUTLINED_FUNCTION_7_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = v0;
}

void OUTLINED_FUNCTION_8_1(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_240BE0BF4(a1, *(_QWORD *)(a3 - 256), a2);
}

void OUTLINED_FUNCTION_9_2(uint64_t a1@<X0>, uint64_t (*a2)(_QWORD)@<X2>, uint64_t a3@<X8>)
{
  sub_240BE0B90(a1, *(_QWORD *)(a3 - 256), a2);
}

uint64_t OUTLINED_FUNCTION_10_2()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 96);
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_16_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0BF4(a1, v3, a3);
}

void OUTLINED_FUNCTION_17_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0B90(a1, v3, a3);
}

void OUTLINED_FUNCTION_21_1()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_22_0()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_23_1()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

void OUTLINED_FUNCTION_25_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_28_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.EqualParameters(0);
}

uint64_t OUTLINED_FUNCTION_29_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SoftmaxNDParameters(0);
}

uint64_t OUTLINED_FUNCTION_30_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReshapeLikeParameters(0);
}

uint64_t OUTLINED_FUNCTION_31_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SimpleRecurrentParameters();
}

uint64_t OUTLINED_FUNCTION_32_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ScatterNDParameters(0);
}

uint64_t OUTLINED_FUNCTION_33_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceL1Parameters(0);
}

uint64_t OUTLINED_FUNCTION_34_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.InnerProductParameters();
}

uint64_t OUTLINED_FUNCTION_35_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.UnaryFunctionParameters();
}

uint64_t OUTLINED_FUNCTION_36_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceLogSumParameters(0);
}

uint64_t OUTLINED_FUNCTION_37_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.PoolParameters(0);
}

uint64_t OUTLINED_FUNCTION_38_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SequenceRepeatParameters(0);
}

uint64_t OUTLINED_FUNCTION_39_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ArgMaxParameters(0);
}

uint64_t OUTLINED_FUNCTION_40_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastableMultiplyParameters();
}

uint64_t OUTLINED_FUNCTION_41_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.FlattenParameters();
}

uint64_t OUTLINED_FUNCTION_42_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LoopContinueParameters(0);
}

uint64_t OUTLINED_FUNCTION_43_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ScaleParameters();
}

uint64_t OUTLINED_FUNCTION_44_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastToStaticParameters(0);
}

uint64_t OUTLINED_FUNCTION_45@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GreaterThanParameters(0);
}

uint64_t OUTLINED_FUNCTION_46_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LayerNormalizeParameters(0);
}

uint64_t OUTLINED_FUNCTION_47_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GatherNDParameters(0);
}

uint64_t OUTLINED_FUNCTION_48_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.CropResizeParameters(0);
}

uint64_t OUTLINED_FUNCTION_49_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SliceDynamicParameters(0);
}

uint64_t OUTLINED_FUNCTION_50_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceSumParameters(0);
}

uint64_t OUTLINED_FUNCTION_51_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ClampedReluParameters(0);
}

uint64_t OUTLINED_FUNCTION_52_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.FillLikeParameters(0);
}

uint64_t OUTLINED_FUNCTION_53_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.MaxBroadcastableParameters(0);
}

uint64_t OUTLINED_FUNCTION_54_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.MultiplyParameters();
}

uint64_t OUTLINED_FUNCTION_55_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReverseSequenceParameters(0);
}

uint64_t OUTLINED_FUNCTION_56_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.CopyParameters(0);
}

uint64_t OUTLINED_FUNCTION_57_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastableModParameters(0);
}

uint64_t OUTLINED_FUNCTION_58_1@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.PermuteParameters();
}

uint64_t OUTLINED_FUNCTION_59_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.NotEqualParameters(0);
}

uint64_t OUTLINED_FUNCTION_60_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.MeanVarianceNormalizeParameters();
}

uint64_t OUTLINED_FUNCTION_61_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReshapeDynamicParameters(0);
}

uint64_t OUTLINED_FUNCTION_62_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GRUParameters();
}

uint64_t OUTLINED_FUNCTION_63_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ScatterAlongAxisParameters(0);
}

uint64_t OUTLINED_FUNCTION_64_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceL2Parameters(0);
}

uint64_t OUTLINED_FUNCTION_65_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.Activation(0);
}

uint64_t OUTLINED_FUNCTION_66_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceSumSquareParameters(0);
}

uint64_t OUTLINED_FUNCTION_67_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.Pool3DParameters(0);
}

uint64_t OUTLINED_FUNCTION_68_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReorganizeDataParameters(0);
}

uint64_t OUTLINED_FUNCTION_69_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.WhereNonZeroParameters(0);
}

uint64_t OUTLINED_FUNCTION_70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastableDivideParameters(0);
}

uint64_t OUTLINED_FUNCTION_71_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReshapeParameters();
}

uint64_t OUTLINED_FUNCTION_72_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.RangeStaticParameters(0);
}

uint64_t OUTLINED_FUNCTION_73_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BatchNormalizeParameters();
}

uint64_t OUTLINED_FUNCTION_74_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastToDynamicParameters(0);
}

uint64_t OUTLINED_FUNCTION_75_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GreaterEqualParameters(0);
}

uint64_t OUTLINED_FUNCTION_76_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.UnidirectionalLSTMParameters();
}

uint64_t OUTLINED_FUNCTION_77_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GatherAlongAxisParameters(0);
}

uint64_t OUTLINED_FUNCTION_78_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.AverageParameters(0);
}

uint64_t OUTLINED_FUNCTION_79_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SliceBySizeParameters(0);
}

uint64_t OUTLINED_FUNCTION_80_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceProdParameters(0);
}

uint64_t OUTLINED_FUNCTION_81_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ConvolutionParameters(0);
}

uint64_t OUTLINED_FUNCTION_82@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.FillStaticParameters(0);
}

uint64_t OUTLINED_FUNCTION_83_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.CumulativeSumParameters(0);
}

uint64_t OUTLINED_FUNCTION_84_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastableAddParameters(0);
}

uint64_t OUTLINED_FUNCTION_85_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SqueezeParameters();
}

uint64_t OUTLINED_FUNCTION_86_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LoopParameters(0);
}

uint64_t OUTLINED_FUNCTION_87_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastablePowParameters(0);
}

uint64_t OUTLINED_FUNCTION_88_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.TransposeParameters();
}

uint64_t OUTLINED_FUNCTION_89_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LessThanParameters(0);
}

uint64_t OUTLINED_FUNCTION_90_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.L2NormalizeParameters(0);
}

uint64_t OUTLINED_FUNCTION_91_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.StackParameters();
}

uint64_t OUTLINED_FUNCTION_92_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.CropParameters(0);
}

uint64_t OUTLINED_FUNCTION_93_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SliceParameters(0);
}

uint64_t OUTLINED_FUNCTION_94_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceMaxParameters(0);
}

uint64_t OUTLINED_FUNCTION_95_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ClipParameters();
}

uint64_t OUTLINED_FUNCTION_96_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SplitNDParameters(0);
}

uint64_t OUTLINED_FUNCTION_97_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceLogSumExpParameters(0);
}

uint64_t OUTLINED_FUNCTION_98_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GlobalPool3DParameters(0);
}

uint64_t OUTLINED_FUNCTION_99@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.TileParameters(0);
}

uint64_t OUTLINED_FUNCTION_100_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.WhereBroadcastableParameters(0);
}

uint64_t OUTLINED_FUNCTION_101_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BatchedMatrixMultiplyParameters();
}

uint64_t OUTLINED_FUNCTION_102_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReshapeStaticParameters();
}

uint64_t OUTLINED_FUNCTION_103_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.RangeDynamicParameters(0);
}

uint64_t OUTLINED_FUNCTION_104@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SoftmaxParameters(0);
}

uint64_t OUTLINED_FUNCTION_105_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.FlattenTo2DParameters(0);
}

uint64_t OUTLINED_FUNCTION_106_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.RandomNormalLikeParameters(0);
}

uint64_t OUTLINED_FUNCTION_107_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BidirectionalLSTMParameters();
}

uint64_t OUTLINED_FUNCTION_108_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ScatterParameters(0);
}

uint64_t OUTLINED_FUNCTION_109_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceParameters(0);
}

uint64_t OUTLINED_FUNCTION_110_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SlidingWindowsParameters(0);
}

uint64_t OUTLINED_FUNCTION_111_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceMeanParameters(0);
}

uint64_t OUTLINED_FUNCTION_112_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.Convolution3DParameters(0);
}

uint64_t OUTLINED_FUNCTION_113_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.FillDynamicParameters(0);
}

uint64_t OUTLINED_FUNCTION_114_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ArgMinParameters(0);
}

uint64_t OUTLINED_FUNCTION_115_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastableSubtractParameters();
}

uint64_t OUTLINED_FUNCTION_116_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ExpandDimensionsParameters();
}

uint64_t OUTLINED_FUNCTION_117_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LoopBreakParameters(0);
}

uint64_t OUTLINED_FUNCTION_118_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastableFloorDivParameters(0);
}

uint64_t OUTLINED_FUNCTION_119_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BroadcastToLikeParameters(0);
}

uint64_t OUTLINED_FUNCTION_120_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LessEqualParameters(0);
}

uint64_t OUTLINED_FUNCTION_121_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.LRNParameters(0);
}

uint64_t OUTLINED_FUNCTION_122_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GatherParameters(0);
}

uint64_t OUTLINED_FUNCTION_123_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ResizeBilinearParameters(0);
}

uint64_t OUTLINED_FUNCTION_124_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.SliceStaticParameters(0);
}

uint64_t OUTLINED_FUNCTION_125_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReduceMinParameters(0);
}

uint64_t OUTLINED_FUNCTION_126_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.GELUParameters();
}

uint64_t OUTLINED_FUNCTION_127_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.UpsampleParameters();
}

uint64_t OUTLINED_FUNCTION_128_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.MinBroadcastableParameters(0);
}

uint64_t OUTLINED_FUNCTION_129_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.AddParameters(0);
}

uint64_t OUTLINED_FUNCTION_130_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.ReverseParameters(0);
}

uint64_t OUTLINED_FUNCTION_131_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.BranchParameters();
}

uint64_t OUTLINED_FUNCTION_132_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.DotProductParameters();
}

uint64_t OUTLINED_FUNCTION_133_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for NeuralNetwork.Layer.RankPreservingReshapeParameters();
}

uint64_t *sub_240C259D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v11 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v16 = *(int *)(a3 + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
  }
  return a1;
}

uint64_t type metadata accessor for Proto_DictVectorizer.OneOf_Map(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FCB8);
}

uint64_t sub_240C25B90(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Proto_Int64Vector(0);
    else
      v6 = type metadata accessor for Proto_StringVector(0);
    v7 = a1 + *(int *)(v6 + 20);
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(a2 + 20);
  v10 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *sub_240C25C50(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  v6 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v9 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v9 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v14 = *(int *)(a3 + 20);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
  return a1;
}

_QWORD *sub_240C25DD0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  int v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  v6 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v10 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    v16 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v16 == 1)
      v17 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v17 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_240F1C930();
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    swift_bridgeObjectRetain();
    v21(v18, v19, v20);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v22 = *(int *)(a3 + 20);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 24))(v23, v24, v25);
  return a1;
}

_QWORD *sub_240C26054(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;

  v6 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v9 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v9 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v13 = *(int *)(a3 + 20);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
  return a1;
}

_QWORD *sub_240C261AC(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  int EnumCaseMultiPayload;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v6 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *a1 = *a2;
      if (EnumCaseMultiPayload == 1)
        v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v10 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_15;
    }
LABEL_7:
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
    goto LABEL_15;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    v15 = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (v15 == 1)
      v16 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v16 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v17 = (char *)a1 + v16;
    v18 = (char *)a2 + v16;
    v19 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v20 = *(int *)(a3 + 20);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 40))(v21, v22, v23);
  return a1;
}

uint64_t sub_240C263F0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C263FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
  }
  else
  {
    v7 = OUTLINED_FUNCTION_20_0();
    v8 = a1 + *(int *)(a3 + 20);
  }
  return __swift_getEnumTagSinglePayload(v8, a2, v7);
}

uint64_t sub_240C26464()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C26470(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  if (*(_DWORD *)(*(_QWORD *)(v8 - 8) + 84) == a3)
  {
    v9 = v8;
    v10 = a1;
  }
  else
  {
    v9 = OUTLINED_FUNCTION_20_0();
    v10 = a1 + *(int *)(a4 + 20);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for Proto_DictVectorizer(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FCD0);
}

void sub_240C264F4()
{
  unint64_t v0;
  unint64_t v1;

  sub_240C26578();
  if (v0 <= 0x3F)
  {
    sub_240F1C930();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240C26578()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25435FCC8)
  {
    type metadata accessor for Proto_DictVectorizer.OneOf_Map(255);
    v0 = sub_240F1CD98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25435FCC8);
  }
}

uint64_t *sub_240C265CC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C266F4(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    v3 = type metadata accessor for Proto_Int64Vector(0);
  else
    v3 = type metadata accessor for Proto_StringVector(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240C2675C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_240C26850(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_240C2695C(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *sub_240C26A28(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C26B0C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Proto_StringVector(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_Int64Vector(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

void sub_240C26B8C(uint64_t a1, uint64_t a2)
{
  _QWORD **v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD **v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;

  v27 = a2;
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v7 = (_QWORD *)(v6 - v5);
  type metadata accessor for Proto_StringVector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_11_3();
  v12 = (_QWORD *)(v10 - v11);
  MEMORY[0x24BDAC7A8](v13);
  v15 = (_QWORD **)((char *)&v26 - v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C278);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_24_1();
  v19 = v18 - v17;
  v21 = v18 - v17 + *(int *)(v20 + 48);
  sub_240C28444(a1, v18 - v17);
  sub_240C28444(v27, v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240C28444(v19, (uint64_t)v12);
    if (OUTLINED_FUNCTION_14_2() == 1)
    {
      sub_240C2837C(v21, (uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      if ((sub_240BEACE0(*v12, *v7) & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v7);
      v22 = (uint64_t)v12;
LABEL_14:
      OUTLINED_FUNCTION_3_2(v22);
      sub_240BE10B8(v19, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
      goto LABEL_15;
    }
    v23 = type metadata accessor for Proto_Int64Vector;
    v24 = (uint64_t)v12;
  }
  else
  {
    sub_240C28444(v19, (uint64_t)v15);
    if (OUTLINED_FUNCTION_14_2() != 1)
    {
      sub_240C2837C(v21, (uint64_t)v2, type metadata accessor for Proto_StringVector);
      sub_240BEAC24(*v15, *v2);
      if ((v25 & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v2);
      v22 = (uint64_t)v15;
      goto LABEL_14;
    }
    v23 = type metadata accessor for Proto_StringVector;
    v24 = (uint64_t)v15;
  }
  sub_240BE10B8(v24, v23);
  sub_240BE0B68(v19, &qword_25708C278);
LABEL_15:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C26E7C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_13_1();
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  type metadata accessor for Proto_DictVectorizer(0);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C26EC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9030);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9030);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1D370;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "stringToIndex";
  *(_QWORD *)(v7 + 8) = 13;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "int64ToIndex";
  *((_QWORD *)v11 + 1) = 12;
  v11[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C27014()
{
  uint64_t v0;

  if (qword_25708AE20 != -1)
    swift_once();
  v0 = sub_240F1CC30();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2570F9030);
}

void sub_240C2705C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  while (1)
  {
    v1 = sub_240F1C990();
    if (v0 || (v2 & 1) != 0)
      break;
    if (v1 == 2)
    {
      v7 = OUTLINED_FUNCTION_17_2();
      sub_240C274C4(v7, v8, v9, v10);
    }
    else if (v1 == 1)
    {
      v3 = OUTLINED_FUNCTION_17_2();
      sub_240C270D8(v3, v4, v5, v6);
    }
  }
}

void sub_240C270D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_StringVector(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE08);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDB0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDB0);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    }
    else
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708BE08);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_StringVector);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_StringVector);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25708C260, type metadata accessor for Proto_StringVector, (uint64_t)&unk_240F2AE54);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708BE08);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708BE08);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708BE08);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_StringVector);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708BE08);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDB0);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_StringVector);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_240C274C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_Int64Vector(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE10);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDB0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDB0);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_Int64Vector);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_Int64Vector);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25435FB40, type metadata accessor for Proto_Int64Vector, (uint64_t)&unk_240F2ACEC);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708BE10);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708BE10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_Int64Vector);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDB0);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_Int64Vector);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_240C278B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  sub_240C283B4(v0, v4 - v3, &qword_25708BDB0);
  v6 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) == 1)
    goto LABEL_6;
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v7 = OUTLINED_FUNCTION_7_3();
    sub_240C27B5C(v7);
  }
  else
  {
    v8 = OUTLINED_FUNCTION_7_3();
    sub_240C279C4(v8);
  }
  sub_240BE10B8(v5, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  if (!v1)
  {
LABEL_6:
    type metadata accessor for Proto_DictVectorizer(0);
    sub_240F1C918();
  }
}

void sub_240C279C4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_StringVector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB0);
  v8 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_StringVector);
      sub_240BE18B8(&qword_25708C260, type metadata accessor for Proto_StringVector, (uint64_t)&unk_240F2AE54);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_StringVector);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  }
  __break(1u);
}

void sub_240C27B5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64Vector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB0);
  v8 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      sub_240BE18B8(&qword_25435FB40, type metadata accessor for Proto_Int64Vector, (uint64_t)&unk_240F2ACEC);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  }
  __break(1u);
}

void _s20MLModelSpecification33DictionaryVectorizerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  char *v34;
  void (*v35)(uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;

  v36 = OUTLINED_FUNCTION_20_0();
  v41 = *(_QWORD *)(v36 - 8);
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_11_3();
  v40 = (char *)(v5 - v6);
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)&v36 - v8;
  OUTLINED_FUNCTION_13_1();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_10_3();
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C280);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  v14 = v13 - v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_11_3();
  v18 = v16 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v36 - v21;
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v36 - v23;
  v37 = a1;
  OUTLINED_FUNCTION_9_3(a1, (uint64_t)&v36 - v23);
  v39 = a2;
  OUTLINED_FUNCTION_9_3(a2, (uint64_t)v22);
  v25 = v14 + *(int *)(v10 + 48);
  OUTLINED_FUNCTION_9_3((uint64_t)v24, v14);
  OUTLINED_FUNCTION_9_3((uint64_t)v22, v25);
  OUTLINED_FUNCTION_8_2(v14);
  if (v26)
  {
    OUTLINED_FUNCTION_166((uint64_t)v22);
    OUTLINED_FUNCTION_166((uint64_t)v24);
    OUTLINED_FUNCTION_8_2(v25);
    if (v26)
    {
      sub_240BE0B68(v14, &qword_25708BDB0);
LABEL_11:
      v29 = type metadata accessor for Proto_DictVectorizer(0);
      v30 = v38;
      v31 = v41;
      v32 = *(void (**)(char *, uint64_t, uint64_t))(v41 + 16);
      v33 = v36;
      v32(v38, v37 + *(int *)(v29 + 20), v36);
      v34 = v40;
      v32(v40, v39 + *(int *)(v29 + 20), v33);
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_240F1CC90();
      v35 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
      v35((uint64_t)v34, v33);
      v35((uint64_t)v30, v33);
      goto LABEL_12;
    }
    goto LABEL_9;
  }
  sub_240C283B4(v14, v18, &qword_25708BDB0);
  OUTLINED_FUNCTION_8_2(v25);
  if (v26)
  {
    OUTLINED_FUNCTION_166((uint64_t)v22);
    OUTLINED_FUNCTION_166((uint64_t)v24);
    sub_240BE10B8(v18, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
LABEL_9:
    sub_240BE0B68(v14, &qword_25708C280);
    goto LABEL_12;
  }
  sub_240C2837C(v25, v2, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  sub_240C26B8C(v18, v2);
  v28 = v27;
  sub_240BE10B8(v2, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  OUTLINED_FUNCTION_15_2((uint64_t)v22);
  OUTLINED_FUNCTION_15_2((uint64_t)v24);
  sub_240BE10B8(v18, type metadata accessor for Proto_DictVectorizer.OneOf_Map);
  OUTLINED_FUNCTION_15_2(v14);
  if ((v28 & 1) != 0)
    goto LABEL_11;
LABEL_12:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C28000()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_DictVectorizer(0);
  sub_240BE18B8(&qword_25708C240, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E990);
  sub_240F1CC54();
  return sub_240F1CF78();
}

unint64_t sub_240C28070()
{
  return 0xD000000000000014;
}

uint64_t sub_240C28090@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240C280D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240C28110())()
{
  return nullsub_1;
}

void sub_240C28124()
{
  sub_240C2705C();
}

void sub_240C28138()
{
  sub_240C278B0();
}

uint64_t sub_240C28150()
{
  sub_240BE18B8(&qword_25708C258, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E8E0);
  return sub_240F1C960();
}

uint64_t sub_240C281A4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240C27014();
  v3 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_240C281E4()
{
  sub_240BE18B8(&qword_25708C238, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E918);
  return sub_240F1CAF8();
}

uint64_t sub_240C28228()
{
  sub_240BE18B8(&qword_25708C238, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E918);
  return sub_240F1CB04();
}

uint64_t sub_240C28278()
{
  sub_240F1CF3C();
  sub_240F1CC54();
  return sub_240F1CF78();
}

void sub_240C282CC()
{
  sub_240BE18B8(&qword_25708C238, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E918);
}

void sub_240C282F8()
{
  sub_240BE18B8(&qword_25708C240, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E990);
}

void sub_240C28324()
{
  sub_240BE18B8(&qword_25708C248, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E890);
}

void sub_240C28350()
{
  sub_240BE18B8(&qword_25708C250, type metadata accessor for Proto_DictVectorizer, (uint64_t)&unk_240F1E868);
}

void sub_240C2837C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = a3(0);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_44();
}

void sub_240C283B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(a3);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_44();
}

uint64_t __swift_project_value_buffer(uint64_t a1, uint64_t a2)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1 - 8) + 82) & 2) != 0)
    return *(_QWORD *)a2;
  return a2;
}

uint64_t *__swift_allocate_value_buffer(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;

  if ((*(_DWORD *)(*(_QWORD *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_240C28444(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void OUTLINED_FUNCTION_3_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_8_2(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_9_3(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C283B4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_13_1()
{
  return type metadata accessor for Proto_DictVectorizer.OneOf_Map(0);
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_15_2(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  uint64_t v0;

  return v0;
}

uint64_t sub_240C28524(uint64_t a1, uint64_t a2)
{
  return sub_240C28550(a1, a2, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
}

uint64_t sub_240C28550(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  _QWORD v22[2];
  uint64_t v23;

  v10 = a3(0);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x24BDAC7A8](v10);
  v13 = (char *)v22 - v12;
  v14 = *(_QWORD *)(a1 + 16);
  v15 = MEMORY[0x24BEE4AF8];
  if (v14)
  {
    v22[0] = a4;
    v22[1] = v5;
    v23 = MEMORY[0x24BEE4AF8];
    a4(0, v14, 0);
    v15 = v23;
    v16 = *(_QWORD *)(a5(0) - 8);
    v17 = a1 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v18 = *(_QWORD *)(v16 + 72);
    do
    {
      sub_240BE0BF4(v17, (uint64_t)v13, a3);
      v23 = v15;
      v20 = *(_QWORD *)(v15 + 16);
      v19 = *(_QWORD *)(v15 + 24);
      if (v20 >= v19 >> 1)
      {
        ((void (*)(BOOL, unint64_t, uint64_t))v22[0])(v19 > 1, v20 + 1, 1);
        v15 = v23;
      }
      *(_QWORD *)(v15 + 16) = v20 + 1;
      sub_240BE0B90((uint64_t)v13, v15+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(_QWORD *)(v11 + 72) * v20, a3);
      v17 += v18;
      --v14;
    }
    while (v14);
  }
  return v15;
}

uint64_t sub_240C286B0(uint64_t a1, uint64_t a2)
{
  return sub_240C28550(a1, a2, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
}

void NeuralNetwork.layers.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = type metadata accessor for NeuralNetwork.Layer();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_18_1();
    sub_240BF066C();
    type metadata accessor for Proto_NeuralNetworkLayer(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_7_4();
      OUTLINED_FUNCTION_21_2();
      if (v6)
      {
        OUTLINED_FUNCTION_10_4(v5);
        sub_240BF066C();
      }
      OUTLINED_FUNCTION_0_1();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C287AC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.layers.setter(v0);
}

void NeuralNetwork.layers.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_3(a1, (uint64_t)&v3, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *v1 = v2;
  OUTLINED_FUNCTION_12_1();
}

void (*NeuralNetwork.layers.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetwork.layers.getter();
  *a1 = v3;
  return sub_240C28858;
}

void sub_240C28858(uint64_t *a1, char a2)
{
  uint64_t *v2;
  uint64_t **v4;
  uint64_t v5;
  uint64_t v6;

  v4 = (uint64_t **)a1[3];
  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_24_2(v5, v6, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
    OUTLINED_FUNCTION_2_2();
    swift_bridgeObjectRelease();
    *v4 = v2;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    OUTLINED_FUNCTION_5_3(*a1, (uint64_t)(a1 + 2), type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
    OUTLINED_FUNCTION_17_3();
    swift_bridgeObjectRelease();
    *v4 = a1;
    OUTLINED_FUNCTION_6_2();
  }
}

void NeuralNetwork.preprocessors.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = type metadata accessor for NeuralNetwork.Preprocessor(0);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 8) + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_22_1();
    OUTLINED_FUNCTION_18_1();
    sub_240BF06C4();
    type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_7_4();
      OUTLINED_FUNCTION_21_2();
      if (v6)
      {
        OUTLINED_FUNCTION_10_4(v5);
        sub_240BF06C4();
      }
      OUTLINED_FUNCTION_0_1();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C289C4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.preprocessors.setter(v0);
}

void NeuralNetwork.preprocessors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_3(a1, (uint64_t)&v3, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v2;
  OUTLINED_FUNCTION_12_1();
}

void (*NeuralNetwork.preprocessors.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetwork.preprocessors.getter();
  *a1 = v3;
  return sub_240C28A70;
}

void sub_240C28A70(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = a1[3];
  if ((a2 & 1) != 0)
  {
    v5 = OUTLINED_FUNCTION_15_3();
    OUTLINED_FUNCTION_24_2(v5, v6, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
    OUTLINED_FUNCTION_2_2();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 8) = v2;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    OUTLINED_FUNCTION_5_3(*a1, (uint64_t)(a1 + 2), type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
    OUTLINED_FUNCTION_17_3();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v4 + 8) = a1;
    OUTLINED_FUNCTION_6_2();
  }
}

void NeuralNetwork.arrayInputShapeMapping.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_16_2(a1);
}

void sub_240C28B34(_BYTE *a1@<X8>)
{
  char v2;

  NeuralNetwork.arrayInputShapeMapping.getter(&v2);
  *a1 = v2;
}

unsigned __int8 *sub_240C28B6C(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NeuralNetwork.arrayInputShapeMapping.setter(&v2);
}

unsigned __int8 *NeuralNetwork.arrayInputShapeMapping.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

uint64_t *(*NeuralNetwork.arrayInputShapeMapping.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  BOOL v2;

  *(_QWORD *)a1 = v1;
  v2 = *(_BYTE *)(v1 + 24) == 1 && *(_QWORD *)(v1 + 16) != 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C28BEC;
}

uint64_t *sub_240C28BEC(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)(v1 + 16) = *((unsigned __int8 *)result + 8);
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

void NeuralNetwork.imageInputShapeMapping.getter(_BYTE *a1@<X8>)
{
  OUTLINED_FUNCTION_16_2(a1);
}

void sub_240C28C0C(_BYTE *a1@<X8>)
{
  char v2;

  NeuralNetwork.imageInputShapeMapping.getter(&v2);
  *a1 = v2;
}

void NeuralNetwork.imageInputShapeMapping.setter()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 32) = 1;
  *(_BYTE *)(v0 + 40) = 1;
}

uint64_t *(*NeuralNetwork.imageInputShapeMapping.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(v1 + 40);
  return sub_240C28C70;
}

uint64_t *sub_240C28C70(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)(v1 + 32) = 1;
  *(_BYTE *)(v1 + 40) = 1;
  return result;
}

uint64_t NeuralNetwork.init(layers:preprocessors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t updated;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  _BYTE v15[8];
  _BYTE v16[16];

  v6 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a3 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a3 + 8) = v6;
  *(_QWORD *)(a3 + 16) = 0;
  *(_BYTE *)(a3 + 24) = 1;
  *(_QWORD *)(a3 + 32) = 0;
  *(_BYTE *)(a3 + 40) = 1;
  v7 = type metadata accessor for Proto_NeuralNetwork(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v8 = a3 + *(int *)(v7 + 36);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  OUTLINED_FUNCTION_18_0(v8, v10, v11, updated);
  v12 = OUTLINED_FUNCTION_5_3(a1, (uint64_t)v16, type metadata accessor for Proto_NeuralNetworkLayer, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF0698, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_QWORD *)a3 = v12;
  v13 = sub_240C28550(a2, (uint64_t)v15, type metadata accessor for Proto_NeuralNetworkPreprocessing, (void (*)(_QWORD, uint64_t, _QWORD))sub_240BF06F0, type metadata accessor for NeuralNetwork.Preprocessor);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(a3 + 8) = v13;
  return result;
}

uint64_t NeuralNetwork.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = sub_240F1CF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  v10 = type metadata accessor for NeuralNetwork();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v0, v12 - v11, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1E9E0;
  *(_QWORD *)(v14 + 32) = 0x73726579616CLL;
  *(_QWORD *)(v14 + 40) = 0xE600000000000000;
  NeuralNetwork.layers.getter();
  v16 = v15;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C288);
  *(_QWORD *)(v14 + 48) = v16;
  *(_QWORD *)(v14 + 72) = v17;
  strcpy((char *)(v14 + 80), "preprocessors");
  *(_WORD *)(v14 + 94) = -4864;
  NeuralNetwork.preprocessors.getter();
  v19 = v18;
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C290);
  *(_QWORD *)(v14 + 96) = v19;
  *(_QWORD *)(v14 + 120) = v20;
  *(_QWORD *)(v14 + 128) = 0xD000000000000016;
  *(_QWORD *)(v14 + 136) = 0x8000000240F520B0;
  *(_QWORD *)(v14 + 168) = &type metadata for NeuralNetwork.ArrayShapeMapping;
  v21 = *(_BYTE *)(v0 + 24) == 1 && *(_QWORD *)(v0 + 16) != 0;
  *(_BYTE *)(v14 + 144) = v21;
  *(_QWORD *)(v14 + 176) = 0xD000000000000016;
  *(_QWORD *)(v14 + 184) = 0x8000000240F520D0;
  *(_QWORD *)(v14 + 216) = &type metadata for NeuralNetwork.ImageShapeMapping;
  *(_BYTE *)(v14 + 192) = *(_BYTE *)(v0 + 40);
  v22 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v9, v23, v24, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE43C0], v1);
  return sub_240F1CFA8();
}

MLModelSpecification::NeuralNetwork::ArrayShapeMapping_optional __swiftcall NeuralNetwork.ArrayShapeMapping.init(rawValue:)(Swift::Int rawValue)
{
  _BYTE *v1;
  MLModelSpecification::NeuralNetwork::ArrayShapeMapping_optional result;

  OUTLINED_FUNCTION_16_2(v1);
  return result;
}

void *static NeuralNetwork.ArrayShapeMapping.allCases.getter()
{
  return &unk_2511101F0;
}

uint64_t NeuralNetwork.ArrayShapeMapping.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_240C28FFC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240C51C9C(*a1, *a2);
}

MLModelSpecification::NeuralNetwork::ArrayShapeMapping_optional sub_240C29008(Swift::Int *a1)
{
  return NeuralNetwork.ArrayShapeMapping.init(rawValue:)(*a1);
}

void sub_240C29010(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.ArrayShapeMapping.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C29030(_QWORD *a1@<X8>)
{
  *a1 = &unk_2511101F0;
}

uint64_t sub_240C29040()
{
  unsigned __int8 *v0;

  return sub_240E18CCC(*v0);
}

void sub_240C29048()
{
  sub_240E19078();
}

uint64_t sub_240C29050(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_240E19184(a1, *v1);
}

void *static NeuralNetwork.ImageShapeMapping.allCases.getter()
{
  return &unk_2511102A8;
}

uint64_t sub_240C29064(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_240C52BE4(*a1, *a2);
}

void sub_240C29070(_QWORD *a1@<X8>)
{
  *a1 = &unk_2511102A8;
}

uint64_t sub_240C29080(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_240F134EC(a1, *v1);
}

uint64_t sub_240C29088(uint64_t a1)
{
  return *(_QWORD *)(a1 + 16);
}

uint64_t type metadata accessor for NeuralNetwork()
{
  uint64_t result;

  result = qword_25435F9F8;
  if (!qword_25435F9F8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240C290CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C298;
  if (!qword_25708C298)
  {
    v1 = type metadata accessor for Proto_NeuralNetwork(255);
    result = MEMORY[0x24268C2AC](&unk_240F4F34C, v1);
    atomic_store(result, (unint64_t *)&qword_25708C298);
  }
  return result;
}

void sub_240C2910C()
{
  sub_240C29194(&qword_25708C2A0, &qword_25708C2A8);
}

unint64_t sub_240C29134()
{
  unint64_t result;

  result = qword_25708C2B0;
  if (!qword_25708C2B0)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.ArrayShapeMapping, &type metadata for NeuralNetwork.ArrayShapeMapping);
    atomic_store(result, (unint64_t *)&qword_25708C2B0);
  }
  return result;
}

void sub_240C29170()
{
  sub_240C29194(&qword_25708C2B8, &qword_25708C2C0);
}

void sub_240C29194(unint64_t *a1, uint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    v3 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    atomic_store(MEMORY[0x24268C2AC](MEMORY[0x24BEE12E0], v3), a1);
  }
  OUTLINED_FUNCTION_44();
}

unint64_t sub_240C291D4()
{
  unint64_t result;

  result = qword_25708C2C8;
  if (!qword_25708C2C8)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NeuralNetwork.ImageShapeMapping, &type metadata for NeuralNetwork.ImageShapeMapping);
    atomic_store(result, (unint64_t *)&qword_25708C2C8);
  }
  return result;
}

void sub_240C29210(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.layers.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C29238(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.preprocessors.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C2926C()
{
  NeuralNetwork.imageInputShapeMapping.setter();
  OUTLINED_FUNCTION_44();
}

uint64_t initializeBufferWithCopyOfBuffer for NeuralNetwork(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(uint64_t, uint64_t, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t updated;
  uint64_t v18;

  v4 = type metadata accessor for Proto_NeuralNetwork(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = v4;
    v8 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v8;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    *(_QWORD *)(a1 + 32) = a2[4];
    *(_BYTE *)(a1 + 40) = *((_BYTE *)a2 + 40);
    v9 = *(int *)(v4 + 32);
    v10 = a1 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(v7 + 36);
    v15 = (char *)(a1 + v14);
    v16 = (char *)a2 + v14;
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, updated))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v13((uint64_t)v15, (uint64_t)v16, v12);
      *(_QWORD *)&v15[*(int *)(updated + 20)] = *(_QWORD *)&v16[*(int *)(updated + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, updated);
    }
  }
  return a1;
}

uint64_t destroy for NeuralNetwork(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t updated;
  uint64_t result;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_NeuralNetwork(0);
  v3 = a1 + *(int *)(v2 + 32);
  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = a1 + *(int *)(v2 + 36);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  result = __swift_getEnumTagSinglePayload(v6, 1, updated);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for NeuralNetwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t updated;
  uint64_t v15;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v5 = type metadata accessor for Proto_NeuralNetwork(0);
  v6 = *(int *)(v5 + 32);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 36);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, updated))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v10((uint64_t)v12, (uint64_t)v13, v9);
    *(_QWORD *)&v12[*(int *)(updated + 20)] = *(_QWORD *)&v13[*(int *)(updated + 20)];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, updated);
  }
  return a1;
}

uint64_t assignWithCopy for NeuralNetwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t updated;
  int EnumTagSinglePayload;
  uint64_t v18;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = v5;
  v6 = type metadata accessor for Proto_NeuralNetwork(0);
  v7 = *(int *)(v6 + 32);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_240F1C930();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(v6 + 36);
  v14 = (char *)(a1 + v13);
  v15 = (char *)(a2 + v13);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  LODWORD(v9) = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, updated);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, updated);
  if (!(_DWORD)v9)
  {
    if (!EnumTagSinglePayload)
    {
      v12((uint64_t)v14, (uint64_t)v15, v10);
      *(_QWORD *)&v14[*(int *)(updated + 20)] = *(_QWORD *)&v15[*(int *)(updated + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_240C2978C((uint64_t)v14);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v15, v10);
  *(_QWORD *)&v14[*(int *)(updated + 20)] = *(_QWORD *)&v15[*(int *)(updated + 20)];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, updated);
  return a1;
}

uint64_t sub_240C2978C(uint64_t a1)
{
  uint64_t updated;

  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(updated - 8) + 8))(a1, updated);
  return a1;
}

uint64_t initializeWithTake for NeuralNetwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t updated;
  uint64_t v14;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = type metadata accessor for Proto_NeuralNetwork(0);
  v5 = *(int *)(v4 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 36);
  v11 = (char *)(a1 + v10);
  v12 = (char *)(a2 + v10);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, updated))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v9((uint64_t)v11, (uint64_t)v12, v8);
    *(_QWORD *)&v11[*(int *)(updated + 20)] = *(_QWORD *)&v12[*(int *)(updated + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, updated);
  }
  return a1;
}

uint64_t assignWithTake for NeuralNetwork(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t updated;
  int EnumTagSinglePayload;
  uint64_t v16;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_BYTE *)(a1 + 40) = *(_BYTE *)(a2 + 40);
  v4 = type metadata accessor for Proto_NeuralNetwork(0);
  v5 = *(int *)(v4 + 32);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 36);
  v12 = (char *)(a1 + v11);
  v13 = (char *)(a2 + v11);
  updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, updated);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, updated);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      v10((uint64_t)v12, (uint64_t)v13, v8);
      *(_QWORD *)&v12[*(int *)(updated + 20)] = *(_QWORD *)&v13[*(int *)(updated + 20)];
      swift_release();
      return a1;
    }
    sub_240C2978C((uint64_t)v12);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v12, v13, v8);
  *(_QWORD *)&v12[*(int *)(updated + 20)] = *(_QWORD *)&v13[*(int *)(updated + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, updated);
  return a1;
}

uint64_t getEnumTagSinglePayload for NeuralNetwork()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C29A7C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_8_3();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for NeuralNetwork()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C29AB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_8_3();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240C29ADC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_NeuralNetwork(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t sub_240C29B5C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_240C29B64(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.ArrayShapeMapping()
{
  return &type metadata for NeuralNetwork.ArrayShapeMapping;
}

uint64_t _s18UpsampleParametersV13InterpolationOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s20MLModelSpecification13NeuralNetworkV17ArrayShapeMappingOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_240C29C54 + 4 * byte_240F1E9F5[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_240C29C88 + 4 * byte_240F1E9F0[v4]))();
}

uint64_t sub_240C29C88(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C29C90(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C29C98);
  return result;
}

uint64_t sub_240C29CA4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C29CACLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_240C29CB0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C29CB8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NeuralNetwork.ImageShapeMapping()
{
  return &type metadata for NeuralNetwork.ImageShapeMapping;
}

void OUTLINED_FUNCTION_0_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v4;
  sub_240BE0B90(v0, v1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v2, v3);
}

uint64_t OUTLINED_FUNCTION_1_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_4_3()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
}

uint64_t OUTLINED_FUNCTION_5_3(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  return sub_240C28550(a1, a2, a3, a4, a5);
}

void OUTLINED_FUNCTION_7_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return type metadata accessor for Proto_NeuralNetwork(0);
}

BOOL OUTLINED_FUNCTION_10_4@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_15_3()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_16_2(_BYTE *a1@<X8>)
{
  char v1;

  *a1 = v1;
}

uint64_t OUTLINED_FUNCTION_17_3()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return 0;
}

void OUTLINED_FUNCTION_21_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_24_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD), void (*a4)(_QWORD, uint64_t, _QWORD), uint64_t (*a5)(_QWORD))
{
  uint64_t v5;

  return sub_240C28550(a1, v5, a3, a4, a5);
}

void Package.ModelMetadata.description.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void Package.ModelMetadata.description.setter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *v1 = v2;
  v1[1] = v0;
  OUTLINED_FUNCTION_156();
}

uint64_t (*Package.ModelMetadata.description.modify())()
{
  return nullsub_1;
}

void Package.ModelMetadata.version.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void Package.ModelMetadata.version.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  *(_QWORD *)(v1 + 24) = v0;
  OUTLINED_FUNCTION_156();
}

uint64_t (*Package.ModelMetadata.version.modify())()
{
  return nullsub_1;
}

void Package.ModelMetadata.author.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void Package.ModelMetadata.author.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = v2;
  *(_QWORD *)(v1 + 40) = v0;
  OUTLINED_FUNCTION_156();
}

uint64_t (*Package.ModelMetadata.author.modify())()
{
  return nullsub_1;
}

void Package.ModelMetadata.license.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void Package.ModelMetadata.license.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_17_4();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 48) = v2;
  *(_QWORD *)(v1 + 56) = v0;
  OUTLINED_FUNCTION_156();
}

uint64_t (*Package.ModelMetadata.license.modify())()
{
  return nullsub_1;
}

uint64_t Package.ModelMetadata.creatorDefined.getter()
{
  return swift_bridgeObjectRetain();
}

void Package.ModelMetadata.creatorDefined.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 64) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*Package.ModelMetadata.creatorDefined.modify())()
{
  return nullsub_1;
}

void Package.ModelMetadata.init()(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = sub_240F1CC48();
  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  a1[4] = 0;
  a1[5] = 0xE000000000000000;
  a1[6] = 0;
  a1[7] = 0xE000000000000000;
  a1[8] = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C2A004()
{
  unint64_t v0;

  v0 = sub_240F1CE88();
  swift_bridgeObjectRelease();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_240C2A050(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_240C2A090 + 4 * byte_240F1EC7C[a1]))(0xD000000000000015, 0x8000000240F51F10);
}

uint64_t sub_240C2A090()
{
  uint64_t v0;

  return v0 + 7;
}

uint64_t sub_240C2A0D4(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_240C2A114 + 4 * byte_240F1EC81[a1]))(0xD000000000000015, 0x8000000240F51F10);
}

uint64_t sub_240C2A114()
{
  uint64_t v0;

  return v0 + 7;
}

void sub_240C2A158(unsigned __int8 *a1, unsigned __int8 *a2)
{
  sub_240C51B98(*a1, *a2);
}

void sub_240C2A164()
{
  unsigned __int8 *v0;

  sub_240E18CD0(*v0);
}

uint64_t sub_240C2A16C(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_240E1903C(a1, *v1);
}

void sub_240C2A174(uint64_t a1)
{
  unsigned __int8 *v1;

  sub_240E19324(a1, *v1);
}

uint64_t sub_240C2A17C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_240C2A004();
  *a1 = result;
  return result;
}

void sub_240C2A1A8(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_240C2A050(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C2A1CC()
{
  unsigned __int8 *v0;

  return sub_240C2A0D4(*v0);
}

uint64_t sub_240C2A1D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_240C2A04C();
  *a1 = result;
  return result;
}

uint64_t sub_240C2A1F8()
{
  return 0;
}

void sub_240C2A204(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

uint64_t sub_240C2A210()
{
  sub_240C2AD50();
  return sub_240F1CFCC();
}

uint64_t sub_240C2A238()
{
  sub_240C2AD50();
  return sub_240F1CFD8();
}

uint64_t Package.ModelMetadata.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;

  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_329();
  v0 = OUTLINED_FUNCTION_11_4();
  sub_240C2AB68(v0, v1);
  return swift_bridgeObjectRelease();
}

void static Package.ModelMetadata.== infix(_:_:)(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  BOOL v13;
  BOOL v14;
  BOOL v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = a1[2];
  v3 = a1[3];
  v4 = a1[4];
  v5 = a1[5];
  v18 = a1[7];
  v19 = a1[6];
  v6 = a2[2];
  v7 = a2[3];
  v8 = a2[4];
  v9 = a2[5];
  v10 = a2[6];
  v11 = a2[7];
  v12 = *a1 == *a2 && a1[1] == a2[1];
  v16 = a2[8];
  v17 = a1[8];
  if (v12 || (OUTLINED_FUNCTION_51_0() & 1) != 0)
  {
    v13 = v2 == v6 && v3 == v7;
    if (v13 || (OUTLINED_FUNCTION_11_4(), (OUTLINED_FUNCTION_51_0() & 1) != 0))
    {
      v14 = v4 == v8 && v5 == v9;
      if (v14 || (OUTLINED_FUNCTION_51_0() & 1) != 0)
      {
        v15 = v19 == v10 && v18 == v11;
        if (v15 || (OUTLINED_FUNCTION_51_0() & 1) != 0)
          sub_240DB02B4(v17, v16);
      }
    }
  }
}

void Package.ModelMetadata.encode(to:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  char v22;
  char v23;
  char v24;
  char v25;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C2D0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v1[2];
  v17 = v1[3];
  v18 = v7;
  v8 = v1[4];
  v15 = v1[5];
  v16 = v8;
  v9 = v1[6];
  v13 = v1[7];
  v14 = v9;
  v12 = v1[8];
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240C2AD50();
  sub_240F1CFC0();
  v25 = 0;
  v10 = v19;
  sub_240F1CEAC();
  if (!v10)
  {
    v24 = 1;
    OUTLINED_FUNCTION_2_3();
    v23 = 2;
    OUTLINED_FUNCTION_2_3();
    v22 = 3;
    OUTLINED_FUNCTION_2_3();
    v20 = v12;
    v21 = 4;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD68);
    sub_240C2ADAC(&qword_25708C2E0, MEMORY[0x24BEE0D08], MEMORY[0x24BEE04C0]);
    sub_240F1CEB8();
  }
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  OUTLINED_FUNCTION_7_5();
}

uint64_t Package.ModelMetadata.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_13_2();
  v6 = v1;
  v7 = v2;
  v3 = *(_QWORD *)(v0 + 64);
  sub_240F1CF3C();
  OUTLINED_FUNCTION_20_1();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240C2AB68((uint64_t)&v5, v3);
  swift_bridgeObjectRelease();
  return sub_240F1CF78();
}

void Package.ModelMetadata.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C2E8);
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_240C2AD50();
  sub_240F1CFB4();
  if (v2)
  {
    OUTLINED_FUNCTION_19_1();
  }
  else
  {
    v6 = OUTLINED_FUNCTION_4_4();
    v8 = v7;
    v19 = v6;
    OUTLINED_FUNCTION_14_3();
    v9 = OUTLINED_FUNCTION_4_4();
    v20 = v10;
    v17 = v9;
    OUTLINED_FUNCTION_14_3();
    v16 = sub_240F1CE94();
    v12 = v11;
    OUTLINED_FUNCTION_14_3();
    v18 = v12;
    v15 = OUTLINED_FUNCTION_4_4();
    v14 = v13;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD68);
    sub_240C2ADAC(&qword_25708C2F0, MEMORY[0x24BEE0D38], MEMORY[0x24BEE04E0]);
    swift_bridgeObjectRetain();
    sub_240F1CEA0();
    OUTLINED_FUNCTION_0_2();
    OUTLINED_FUNCTION_20_1();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_329();
    OUTLINED_FUNCTION_5_4();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v19;
    a2[1] = v8;
    a2[2] = v17;
    a2[3] = v20;
    a2[4] = v16;
    a2[5] = v18;
    a2[6] = v15;
    a2[7] = v14;
    a2[8] = v21;
    OUTLINED_FUNCTION_19_1();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_12_2();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_7_5();
}

void sub_240C2AA34(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  Package.ModelMetadata.init(from:)(a1, a2);
}

void sub_240C2AA48(_QWORD *a1)
{
  Package.ModelMetadata.encode(to:)(a1);
}

uint64_t sub_240C2AA64()
{
  uint64_t v0;
  uint64_t v1;
  _BYTE v3[72];

  v1 = *(_QWORD *)(v0 + 64);
  sub_240F1CF3C();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240F1CCC0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_240C2AB68((uint64_t)v3, v1);
  swift_bridgeObjectRelease();
  return sub_240F1CF78();
}

uint64_t sub_240C2AB68(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t result;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;

  v12 = a2 + 64;
  v2 = 1 << *(_BYTE *)(a2 + 32);
  v3 = -1;
  if (v2 < 64)
    v3 = ~(-1 << v2);
  v4 = v3 & *(_QWORD *)(a2 + 64);
  v5 = (unint64_t)(v2 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v7 = 0;
  v8 = 0;
  if (!v4)
    goto LABEL_5;
LABEL_4:
  for (v4 &= v4 - 1; ; v4 = (v10 - 1) & v10)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_240F1CCC0();
    swift_bridgeObjectRelease();
    sub_240F1CCC0();
    swift_bridgeObjectRelease();
    result = sub_240F1CF78();
    v7 ^= result;
    if (v4)
      goto LABEL_4;
LABEL_5:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v9 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v5)
        goto LABEL_19;
      v10 = *(_QWORD *)(v12 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_16:
    ;
  }
  v11 = v9 + 2;
  if (v11 >= v5)
  {
LABEL_19:
    swift_release();
    return sub_240F1CF48();
  }
  v10 = *(_QWORD *)(v12 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_16;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v5)
      goto LABEL_19;
    v10 = *(_QWORD *)(v12 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_16;
  }
LABEL_21:
  __break(1u);
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

unint64_t sub_240C2AD50()
{
  unint64_t result;

  result = qword_25708C2D8;
  if (!qword_25708C2D8)
  {
    result = MEMORY[0x24268C2AC](&unk_240F1EE6C, &_s13ModelMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708C2D8);
  }
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

uint64_t sub_240C2ADAC(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  _QWORD v8[2];

  result = *a1;
  if (!result)
  {
    v7 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708BD68);
    v8[0] = a2;
    v8[1] = a2;
    result = MEMORY[0x24268C2AC](a3, v7, v8);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_240C2AE10()
{
  unint64_t result;

  result = qword_25708C2F8;
  if (!qword_25708C2F8)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for Package.ModelMetadata, &type metadata for Package.ModelMetadata);
    atomic_store(result, (unint64_t *)&qword_25708C2F8);
  }
  return result;
}

uint64_t _s13ModelMetadataVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s13ModelMetadataVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s13ModelMetadataVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s13ModelMetadataVwca(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy72_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x48uLL);
}

uint64_t _s13ModelMetadataVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13ModelMetadataVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 72))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s13ModelMetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 72) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 72) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for Package.ModelMetadata()
{
  return &type metadata for Package.ModelMetadata;
}

uint64_t _s13ModelMetadataV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s13ModelMetadataV10CodingKeysOwst(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_240C2B1EC + 4 * byte_240F1EC8B[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_240C2B220 + 4 * byte_240F1EC86[v4]))();
}

uint64_t sub_240C2B220(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C2B228(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C2B230);
  return result;
}

uint64_t sub_240C2B23C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C2B244);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_240C2B248(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C2B250(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_240C2B25C(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

ValueMetadata *_s13ModelMetadataV10CodingKeysOMa()
{
  return &_s13ModelMetadataV10CodingKeysON;
}

unint64_t sub_240C2B278()
{
  unint64_t result;

  result = qword_25708C300;
  if (!qword_25708C300)
  {
    result = MEMORY[0x24268C2AC](&unk_240F1EE44, &_s13ModelMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708C300);
  }
  return result;
}

unint64_t sub_240C2B2B8()
{
  unint64_t result;

  result = qword_25708C308;
  if (!qword_25708C308)
  {
    result = MEMORY[0x24268C2AC](&unk_240F1ED7C, &_s13ModelMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708C308);
  }
  return result;
}

unint64_t sub_240C2B2F8()
{
  unint64_t result;

  result = qword_25708C310;
  if (!qword_25708C310)
  {
    result = MEMORY[0x24268C2AC](&unk_240F1EDA4, &_s13ModelMetadataV10CodingKeysON);
    atomic_store(result, (unint64_t *)&qword_25708C310);
  }
  return result;
}

void sub_240C2B334()
{
  uint64_t v0;
  int64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  OUTLINED_FUNCTION_13_2();
  v0 = 0;
  v1 = 0;
  v3 = v2 + 64;
  OUTLINED_FUNCTION_9_4();
  v6 = v5 & v4;
  v8 = (unint64_t)(v7 + 63) >> 6;
  if ((v5 & v4) == 0)
    goto LABEL_3;
LABEL_2:
  for (v6 &= v6 - 1; ; v6 = (v10 - 1) & v10)
  {
    OUTLINED_FUNCTION_10_5();
    sub_240F1CF48();
    sub_240F1CF6C();
    v0 ^= sub_240F1CF78();
    if (v6)
      goto LABEL_2;
LABEL_3:
    v9 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v9 >= v8)
      goto LABEL_17;
    v10 = *(_QWORD *)(v3 + 8 * v9);
    ++v1;
    if (!v10)
    {
      v1 = v9 + 1;
      if (v9 + 1 >= v8)
        goto LABEL_17;
      v10 = *(_QWORD *)(v3 + 8 * v1);
      if (!v10)
        break;
    }
LABEL_14:
    ;
  }
  v11 = v9 + 2;
  if (v11 >= v8)
  {
LABEL_17:
    sub_240F1CF48();
    OUTLINED_FUNCTION_3_3();
    return;
  }
  v10 = *(_QWORD *)(v3 + 8 * v11);
  if (v10)
  {
    v1 = v11;
    goto LABEL_14;
  }
  while (1)
  {
    v1 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v1 >= v8)
      goto LABEL_17;
    v10 = *(_QWORD *)(v3 + 8 * v1);
    ++v11;
    if (v10)
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

void sub_240C2B464()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  int64_t v9;
  uint64_t v10;
  int64_t v11;

  OUTLINED_FUNCTION_13_2();
  v1 = v0 + 64;
  OUTLINED_FUNCTION_9_4();
  v4 = v3 & v2;
  v6 = (unint64_t)(v5 + 63) >> 6;
  OUTLINED_FUNCTION_14_3();
  v7 = 0;
  v8 = 0;
  if (!v4)
    goto LABEL_3;
LABEL_2:
  for (v4 &= v4 - 1; ; v4 = (v10 - 1) & v10)
  {
    OUTLINED_FUNCTION_10_5();
    OUTLINED_FUNCTION_20_1();
    sub_240F1CCC0();
    swift_bridgeObjectRelease();
    sub_240F1CF6C();
    v7 ^= sub_240F1CF78();
    if (v4)
      goto LABEL_2;
LABEL_3:
    v9 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_19;
    }
    if (v9 >= v6)
      goto LABEL_17;
    v10 = *(_QWORD *)(v1 + 8 * v9);
    ++v8;
    if (!v10)
    {
      v8 = v9 + 1;
      if (v9 + 1 >= v6)
        goto LABEL_17;
      v10 = *(_QWORD *)(v1 + 8 * v8);
      if (!v10)
        break;
    }
LABEL_14:
    ;
  }
  v11 = v9 + 2;
  if (v11 >= v6)
  {
LABEL_17:
    swift_release();
    sub_240F1CF48();
    OUTLINED_FUNCTION_3_3();
    return;
  }
  v10 = *(_QWORD *)(v1 + 8 * v11);
  if (v10)
  {
    v8 = v11;
    goto LABEL_14;
  }
  while (1)
  {
    v8 = v11 + 1;
    if (__OFADD__(v11, 1))
      break;
    if (v8 >= v6)
      goto LABEL_17;
    v10 = *(_QWORD *)(v1 + 8 * v8);
    ++v11;
    if (v10)
      goto LABEL_14;
  }
LABEL_19:
  __break(1u);
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8))(v0, v2);
}

uint64_t OUTLINED_FUNCTION_2_3()
{
  return sub_240F1CEAC();
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return sub_240F1CE94();
}

uint64_t OUTLINED_FUNCTION_5_4()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_8_4()
{
  return 0xD000000000000010;
}

__n128 OUTLINED_FUNCTION_10_5()
{
  __n128 *v0;

  return v0[2];
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_20_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_21_3()
{
  return swift_bridgeObjectRelease();
}

void NormalizerConfiguration.kind.getter(_BYTE *a1@<X8>)
{
  char *v1;
  char v2;

  if (v1[8] == 1)
    v2 = *v1;
  else
    v2 = 0;
  *a1 = v2;
}

unsigned __int8 *sub_240C2B6F0(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return NormalizerConfiguration.kind.setter(&v2);
}

unsigned __int8 *NormalizerConfiguration.kind.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

uint64_t *(*NormalizerConfiguration.kind.modify(uint64_t a1))(uint64_t *result)
{
  char *v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (v1[8] == 1)
    v2 = *v1;
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C2B768;
}

uint64_t *sub_240C2B768(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)v1 = *((unsigned __int8 *)result + 8);
  *(_BYTE *)(v1 + 8) = 1;
  return result;
}

void NormalizerConfiguration.init(kind:)(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1;
  type metadata accessor for Proto_Normalizer();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(_QWORD *)a2 = v3;
  *(_BYTE *)(a2 + 8) = 1;
  OUTLINED_FUNCTION_44();
}

uint64_t NormalizerConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v1 = sub_240F1CF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  v10 = type metadata accessor for NormalizerConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240C2B974(v0, v12 - v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = 1684957547;
  *(_QWORD *)(v13 + 40) = 0xE400000000000000;
  *(_QWORD *)(v13 + 72) = &type metadata for NormalizerConfiguration.Kind;
  NormalizerConfiguration.kind.getter((_BYTE *)(v13 + 48));
  v14 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE43C0], v1);
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for NormalizerConfiguration()
{
  uint64_t result;

  result = qword_25435FF00;
  if (!qword_25435FF00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C2B974(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NormalizerConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

MLModelSpecification::NormalizerConfiguration::Kind_optional __swiftcall NormalizerConfiguration.Kind.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (MLModelSpecification::NormalizerConfiguration::Kind_optional)rawValue;
}

uint64_t NormalizerConfiguration.Kind.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_240C2B9DC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C318;
  if (!qword_25708C318)
  {
    v1 = type metadata accessor for Proto_Normalizer();
    result = MEMORY[0x24268C2AC](&unk_240F20050, v1);
    atomic_store(result, (unint64_t *)&qword_25708C318);
  }
  return result;
}

BOOL sub_240C2BA1C(char *a1, char *a2)
{
  return sub_240C51C24(*a1, *a2);
}

MLModelSpecification::NormalizerConfiguration::Kind_optional sub_240C2BA28(Swift::Int *a1)
{
  return NormalizerConfiguration.Kind.init(rawValue:)(*a1);
}

void sub_240C2BA30(uint64_t *a1@<X8>)
{
  *a1 = NormalizerConfiguration.Kind.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

unint64_t sub_240C2BA54()
{
  unint64_t result;

  result = qword_25708C320;
  if (!qword_25708C320)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for NormalizerConfiguration.Kind, &type metadata for NormalizerConfiguration.Kind);
    atomic_store(result, (unint64_t *)&qword_25708C320);
  }
  return result;
}

uint64_t sub_240C2BA90()
{
  unsigned __int8 *v0;

  return sub_240E18D04(*v0);
}

uint64_t sub_240C2BA98(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_240F135C0(a1, *v1);
}

uint64_t sub_240C2BAA0(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_240E19180(a1, *v1);
}

void sub_240C2BAA8(_BYTE *a1@<X8>)
{
  NormalizerConfiguration.kind.getter(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t initializeBufferWithCopyOfBuffer for NormalizerConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_Normalizer();
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(v4 + 20);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t destroy for NormalizerConfiguration(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_Normalizer() + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t initializeWithCopy for NormalizerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_Normalizer() + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t assignWithCopy for NormalizerConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(type metadata accessor for Proto_Normalizer() + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for NormalizerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_Normalizer() + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for NormalizerConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_Normalizer() + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for NormalizerConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2BD74()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_3();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t storeEnumTagSinglePayload for NormalizerConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2BDA8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_1_3();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240C2BDD4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_Normalizer();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t getEnumTagSinglePayload for NormalizerConfiguration.Kind(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NormalizerConfiguration.Kind(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240C2BF10 + 4 * byte_240F1EEC5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240C2BF44 + 4 * byte_240F1EEC0[v4]))();
}

uint64_t sub_240C2BF44(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C2BF4C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C2BF54);
  return result;
}

uint64_t sub_240C2BF60(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C2BF68);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240C2BF6C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C2BF74(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for NormalizerConfiguration.Kind()
{
  return &type metadata for NormalizerConfiguration.Kind;
}

uint64_t OUTLINED_FUNCTION_1_3()
{
  return type metadata accessor for Proto_Normalizer();
}

void NeuralNetwork.Preprocessor.featureName.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C2BFC4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  NeuralNetwork.Preprocessor.featureName.setter(v1, v2);
}

void NeuralNetwork.Preprocessor.featureName.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

void NeuralNetwork.Preprocessor.featureName.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C2C064(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_156();
  }
}

void NeuralNetwork.Preprocessor.kind.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v4 = OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_3();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v21 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C328);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = OUTLINED_FUNCTION_12_3();
  sub_240C2C26C(v1 + *(int *)(v16 + 20), v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v4) == 1)
  {
    v17 = type metadata accessor for NeuralNetwork.Preprocessor.Kind(0);
    v18 = (uint64_t)v15;
    v19 = 1;
  }
  else
  {
    sub_240BE0B90(v2, (uint64_t)v11, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
    sub_240BE0BF4((uint64_t)v11, v8, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
    sub_240C2C4B4();
    OUTLINED_FUNCTION_24_3();
    v17 = type metadata accessor for NeuralNetwork.Preprocessor.Kind(0);
    v18 = (uint64_t)v15;
    v19 = 0;
  }
  __swift_storeEnumTagSinglePayload(v18, v19, 1, v17);
  OUTLINED_FUNCTION_16_3();
  if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v17) == 1)
  {
    *(_QWORD *)(a1 + 8) = 0;
    *(_DWORD *)(a1 + 4) = 0;
    OUTLINED_FUNCTION_13_3();
    OUTLINED_FUNCTION_23_2();
    *(_DWORD *)a1 = 1065353216;
    *(_DWORD *)(a1 + 16) = 0;
    OUTLINED_FUNCTION_11_4();
    swift_storeEnumTagMultiPayload();
    sub_240BE0B68((uint64_t)v15, &qword_25708C328);
  }
  else
  {
    OUTLINED_FUNCTION_17_1((uint64_t)v15, v20, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  }
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C2C26C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NeuralNetwork.Preprocessor.Kind(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C360);
}

void sub_240C2C2C8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for NeuralNetwork.Preprocessor.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BE0BF4(a1, (uint64_t)v4, v5);
  NeuralNetwork.Preprocessor.kind.setter((uint64_t)v4);
}

void NeuralNetwork.Preprocessor.kind.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_90();
  type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Preprocessor.Kind(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_80();
  sub_240BE0BF4(a1, v5, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  if (OUTLINED_FUNCTION_363() == 1)
  {
    sub_240BE0B90(v5, v3, type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration);
    OUTLINED_FUNCTION_35_2(v3, v13, type metadata accessor for Proto_NeuralNetworkMeanImage);
  }
  else
  {
    sub_240BE0B90(v5, v4, type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration);
    OUTLINED_FUNCTION_35_2(v4, v15, type metadata accessor for Proto_NeuralNetworkImageScaler);
  }
  v14 = OUTLINED_FUNCTION_7_6();
  v16 = swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_31(v16, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  OUTLINED_FUNCTION_7_6();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v14);
  v17 = OUTLINED_FUNCTION_12_3();
  sub_240C2D1EC(v2, v1 + *(int *)(v17 + 20));
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C2C4B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  OUTLINED_FUNCTION_7_6();
  swift_getEnumCaseMultiPayload();
  v0 = OUTLINED_FUNCTION_11_4();
  sub_240BE0B90(v0, v1, v2);
  OUTLINED_FUNCTION_16_3();
  return swift_storeEnumTagMultiPayload();
}

uint64_t NeuralNetwork.Preprocessor.ScalerConfiguration.init(scale:grayBias:)@<X0>(uint64_t a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  uint64_t result;

  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 4) = 0;
  OUTLINED_FUNCTION_13_3();
  result = OUTLINED_FUNCTION_23_2();
  *(float *)a1 = a2;
  *(float *)(a1 + 16) = a3;
  return result;
}

uint64_t sub_240C2C564()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v3 = OUTLINED_FUNCTION_21_4();
  type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration(v3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_313();
  sub_240BE0BF4(v0, v1, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240BE0B90(v1, v0, type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration);
    OUTLINED_FUNCTION_17_1(v0, v10, type metadata accessor for Proto_NeuralNetworkMeanImage);
  }
  else
  {
    OUTLINED_FUNCTION_35_2(v1, v9, type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration);
    OUTLINED_FUNCTION_17_1((uint64_t)v6, v11, type metadata accessor for Proto_NeuralNetworkImageScaler);
  }
  OUTLINED_FUNCTION_7_6();
  return swift_storeEnumTagMultiPayload();
}

void (*NeuralNetwork.Preprocessor.kind.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  void *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_16_3() - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  NeuralNetwork.Preprocessor.kind.getter((uint64_t)v4);
  return sub_240C2C6E8;
}

void sub_240C2C6E8(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240BE0BF4(*(_QWORD *)(a1 + 16), (uint64_t)v2, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
    NeuralNetwork.Preprocessor.kind.setter((uint64_t)v2);
    OUTLINED_FUNCTION_49_2((uint64_t)v3);
  }
  else
  {
    NeuralNetwork.Preprocessor.kind.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

void NeuralNetwork.Preprocessor.init(featureName:kind:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_60();
  v11 = (uint64_t)a4 + *(int *)(type metadata accessor for Proto_NeuralNetworkPreprocessing(v10) + 20);
  OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_46_1(v11, 1);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a4 = a1;
  a4[1] = a2;
  sub_240C2C564();
  sub_240BE10B8(a3, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  OUTLINED_FUNCTION_46_1(v4, 0);
  sub_240C2D1EC(v4, v11);
  OUTLINED_FUNCTION_13();
}

uint64_t static NeuralNetwork.Preprocessor.scaler(featureName:scale:grayBias:)(float a1, float a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_37_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for NeuralNetwork.Preprocessor.Kind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11_5();
  *(_QWORD *)(v2 + 8) = 0;
  *(_DWORD *)(v2 + 4) = 0;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_33_2();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *(float *)v2 = a1;
  *(float *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_12_3();
  v7 = OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_3_4(v7);
  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_25_2();
  return OUTLINED_FUNCTION_5_5();
}

uint64_t static NeuralNetwork.Preprocessor.scaler(featureName:scale:redBias:greenBias:blueBias:)()
{
  _DWORD *v0;
  int v1;
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_54_2();
  OUTLINED_FUNCTION_37_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  type metadata accessor for NeuralNetwork.Preprocessor.Kind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11_5();
  v0[4] = 0;
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_33_2();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v0[2] = v2;
  v0[3] = v3;
  *v0 = v4;
  v0[1] = v1;
  OUTLINED_FUNCTION_36_2();
  OUTLINED_FUNCTION_12_3();
  v7 = OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_3_4(v7);
  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_25_2();
  return OUTLINED_FUNCTION_5_5();
}

uint64_t NeuralNetwork.Preprocessor.ScalerConfiguration.init(scale:redBias:greenBias:blueBias:)()
{
  int v0;
  int v1;
  int v2;
  int v3;
  _DWORD *v4;
  _DWORD *v5;
  uint64_t result;

  OUTLINED_FUNCTION_54_2();
  v5 = v4;
  v4[4] = 0;
  OUTLINED_FUNCTION_13_3();
  result = OUTLINED_FUNCTION_23_2();
  v5[2] = v1;
  v5[3] = v2;
  *v5 = v3;
  v5[1] = v0;
  return result;
}

void static NeuralNetwork.Preprocessor.meanImage(featureName:meanImage:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  a19 = v20;
  a20 = v21;
  v23 = v22;
  OUTLINED_FUNCTION_37_2();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_16_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  v27 = (uint64_t *)((char *)&a9 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_15_4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v27 = v23;
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_12_3();
  v28 = OUTLINED_FUNCTION_7_6();
  OUTLINED_FUNCTION_3_4(v28);
  OUTLINED_FUNCTION_14_4();
  OUTLINED_FUNCTION_25_2();
  OUTLINED_FUNCTION_5_5();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Preprocessor.MeanImageConfiguration.init(meanImage:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  OUTLINED_FUNCTION_15_4();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Preprocessor.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_45_0();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Preprocessor(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v0, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v9 + 32) = 0x4E65727574616566;
  *(_QWORD *)(v9 + 40) = 0xEB00000000656D61;
  v10 = v0[1];
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 48) = *v0;
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 72) = v11;
  *(_QWORD *)(v9 + 80) = 1684957547;
  *(_QWORD *)(v9 + 88) = 0xE400000000000000;
  *(_QWORD *)(v9 + 120) = OUTLINED_FUNCTION_16_3();
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v9 + 96));
  swift_bridgeObjectRetain();
  NeuralNetwork.Preprocessor.kind.getter((uint64_t)boxed_opaque_existential_0);
  v13 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_27_1(v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Preprocessor.Kind.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _BYTE *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  char v27;
  uint64_t (*v28)(uint64_t);
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  _BYTE v34[80];
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_22();
  v35 = v1;
  v36 = v2;
  v4 = v3;
  v6 = v5;
  type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)&v34[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_21_4();
  type metadata accessor for NeuralNetwork.Preprocessor.Kind(v11);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_11_3();
  v15 = (uint64_t *)(v13 - v14);
  MEMORY[0x24BDAC7A8](v16);
  v18 = &v34[-v17];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C330);
  OUTLINED_FUNCTION_0();
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = &v34[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v23 = (uint64_t)&v22[*(int *)(v20 + 48)];
  sub_240BE0BF4(v6, (uint64_t)v22, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  sub_240BE0BF4(v4, v23, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  if (OUTLINED_FUNCTION_363() != 1)
  {
    sub_240BE0BF4((uint64_t)v22, (uint64_t)v18, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
    if (OUTLINED_FUNCTION_363() != 1)
    {
      sub_240BE0B90(v23, v0, type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration);
      _s20MLModelSpecification13NeuralNetworkV12PreprocessorV19ScalerConfigurationV2eeoiySbAG_AGtFZ_0();
      v27 = v30;
      OUTLINED_FUNCTION_49_2(v0);
      OUTLINED_FUNCTION_49_2((uint64_t)v18);
      OUTLINED_FUNCTION_31(v31, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
      return v27 & 1;
    }
    v28 = type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration;
    v29 = (uint64_t)v18;
    goto LABEL_9;
  }
  sub_240BE0BF4((uint64_t)v22, (uint64_t)v15, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  if (OUTLINED_FUNCTION_363() != 1)
  {
    v28 = type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration;
    v29 = (uint64_t)v15;
LABEL_9:
    sub_240BE10B8(v29, v28);
    sub_240BE0B68((uint64_t)v22, &qword_25708C330);
LABEL_12:
    v27 = 0;
    return v27 & 1;
  }
  OUTLINED_FUNCTION_35_2(v23, v24, type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration);
  sub_240BEAAF8(*v15, *v9);
  if ((v25 & 1) == 0
    || (OUTLINED_FUNCTION_15_4(),
        sub_240F1C930(),
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]),
        (sub_240F1CC90() & 1) == 0))
  {
    OUTLINED_FUNCTION_47_2();
    OUTLINED_FUNCTION_24_3();
    OUTLINED_FUNCTION_31(v32, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
    goto LABEL_12;
  }
  OUTLINED_FUNCTION_47_2();
  OUTLINED_FUNCTION_24_3();
  OUTLINED_FUNCTION_31(v26, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
  v27 = 1;
  return v27 & 1;
}

BOOL static NeuralNetwork.Preprocessor.MeanImageConfiguration.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v20;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_3();
  v8 = (char *)(v6 - v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v20 - v10;
  sub_240BEAAF8(*a1, *a2);
  if ((v12 & 1) == 0)
    return 0;
  v13 = OUTLINED_FUNCTION_15_4();
  v14 = (char *)a1 + *(int *)(v13 + 20);
  v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v11, v14, v4);
  v15(v8, (char *)a2 + *(int *)(v13 + 20), v4);
  sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_240F1CC90();
  v17 = *(void (**)(uint64_t))(v5 + 8);
  v18 = OUTLINED_FUNCTION_11_4();
  v17(v18);
  ((void (*)(char *, uint64_t))v17)(v11, v4);
  return (v16 & 1) != 0;
}

float NeuralNetwork.Preprocessor.ScalerConfiguration.channelScale.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void NeuralNetwork.Preprocessor.ScalerConfiguration.channelScale.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

float (*NeuralNetwork.Preprocessor.ScalerConfiguration.channelScale.modify(uint64_t a1))(uint64_t a1)
{
  _DWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *v1;
  return sub_240C2D0C4;
}

float sub_240C2D0C4(uint64_t a1)
{
  float result;

  result = *(float *)(a1 + 8);
  **(float **)a1 = result;
  return result;
}

float NeuralNetwork.Preprocessor.ScalerConfiguration.redBias.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 12);
}

void NeuralNetwork.Preprocessor.ScalerConfiguration.redBias.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 12) = a1;
}

float (*NeuralNetwork.Preprocessor.ScalerConfiguration.redBias.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 12);
  return sub_240C2D100;
}

float sub_240C2D100(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 12) = result;
  return result;
}

float NeuralNetwork.Preprocessor.ScalerConfiguration.greenBias.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 8);
}

void NeuralNetwork.Preprocessor.ScalerConfiguration.greenBias.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 8) = a1;
}

float (*NeuralNetwork.Preprocessor.ScalerConfiguration.greenBias.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 8);
  return sub_240C2D13C;
}

float sub_240C2D13C(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 8) = result;
  return result;
}

float NeuralNetwork.Preprocessor.ScalerConfiguration.blueBias.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void NeuralNetwork.Preprocessor.ScalerConfiguration.blueBias.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

float (*NeuralNetwork.Preprocessor.ScalerConfiguration.blueBias.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 4);
  return sub_240C2D178;
}

float sub_240C2D178(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 4) = result;
  return result;
}

float NeuralNetwork.Preprocessor.ScalerConfiguration.grayBias.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 16);
}

void NeuralNetwork.Preprocessor.ScalerConfiguration.grayBias.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 16) = a1;
}

float (*NeuralNetwork.Preprocessor.ScalerConfiguration.grayBias.modify(uint64_t a1))(float *a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(v1 + 16);
  return sub_240C2D1B4;
}

float sub_240C2D1B4(float *a1)
{
  float result;

  result = a1[2];
  *(float *)(*(_QWORD *)a1 + 16) = result;
  return result;
}

uint64_t type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C380);
}

uint64_t type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C370);
}

uint64_t sub_240C2D1EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void NeuralNetwork.Preprocessor.ScalerConfiguration.customMirror.getter()
{
  _DWORD *v0;
  uint64_t v1;
  _DWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  uint64_t v15;

  OUTLINED_FUNCTION_22();
  v2 = v0;
  v3 = OUTLINED_FUNCTION_45_0();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Preprocessor.ScalerConfiguration(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v2, v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1D380;
  v11 = v2[1];
  *(_DWORD *)(v10 + 48) = *v2;
  v12 = v2[2];
  *(_DWORD *)(v10 + 96) = v2[3];
  *(_DWORD *)(v10 + 144) = v12;
  v13 = MEMORY[0x24BEE14E8];
  strcpy((char *)(v10 + 32), "channelScale");
  *(_BYTE *)(v10 + 45) = 0;
  *(_WORD *)(v10 + 46) = -5120;
  *(_QWORD *)(v10 + 72) = v13;
  *(_QWORD *)(v10 + 80) = 0x73616942646572;
  *(_QWORD *)(v10 + 88) = 0xE700000000000000;
  *(_QWORD *)(v10 + 120) = v13;
  *(_QWORD *)(v10 + 128) = 0x6169426E65657267;
  *(_QWORD *)(v10 + 136) = 0xE900000000000073;
  *(_QWORD *)(v10 + 168) = v13;
  *(_QWORD *)(v10 + 176) = 0x7361694265756C62;
  *(_QWORD *)(v10 + 184) = 0xE800000000000000;
  *(_DWORD *)(v10 + 192) = v11;
  *(_QWORD *)(v10 + 216) = v13;
  *(_QWORD *)(v10 + 224) = 0x7361694279617267;
  *(_QWORD *)(v10 + 232) = 0xE800000000000000;
  v14 = v2[4];
  *(_QWORD *)(v10 + 264) = v13;
  *(_DWORD *)(v10 + 240) = v14;
  v15 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_27_1(v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t NeuralNetwork.Preprocessor.MeanImageConfiguration.meanImage.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240C2D3FC()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Preprocessor.MeanImageConfiguration.meanImage.setter(v0);
}

void NeuralNetwork.Preprocessor.MeanImageConfiguration.meanImage.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Preprocessor.MeanImageConfiguration.meanImage.modify(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C2D47C(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)a1[1];
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *v3 = v2;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *v3 = v2;
    OUTLINED_FUNCTION_156();
  }
}

uint64_t type metadata accessor for NeuralNetwork.Preprocessor(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C350);
}

void NeuralNetwork.Preprocessor.MeanImageConfiguration.customMirror.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(_QWORD);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v24 = v20;
  v25 = OUTLINED_FUNCTION_45_0();
  v26 = *(_QWORD *)(v25 - 8);
  MEMORY[0x24BDAC7A8](v25);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  v30 = OUTLINED_FUNCTION_90();
  type metadata accessor for NeuralNetwork.Preprocessor.MeanImageConfiguration(v30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v24, v32, v33);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v34 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v34 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v34 + 32) = 0x67616D496E61656DLL;
  *(_QWORD *)(v34 + 40) = 0xE900000000000065;
  v35 = *v24;
  *(_QWORD *)(v34 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF90);
  *(_QWORD *)(v34 + 48) = v35;
  v36 = OUTLINED_FUNCTION_44_1();
  __swift_storeEnumTagSinglePayload(v21, 1, 1, v36);
  (*(void (**)(char *, _QWORD, uint64_t))(v26 + 104))(v28, *MEMORY[0x24BEE43C0], v25);
  swift_bridgeObjectRetain();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void sub_240C2D638()
{
  sub_240BE18B8(&qword_25708C338, type metadata accessor for Proto_NeuralNetworkPreprocessing, (uint64_t)&unk_240F4F2D4);
}

void sub_240C2D664()
{
  sub_240BE18B8(&qword_25708C340, type metadata accessor for Proto_NeuralNetworkImageScaler, (uint64_t)&unk_240F4F25C);
}

void sub_240C2D690()
{
  sub_240BE18B8(&qword_25708C348, type metadata accessor for Proto_NeuralNetworkMeanImage, (uint64_t)&unk_240F4F1E4);
}

void sub_240C2D6BC()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Preprocessor.featureName.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C2D6E0(uint64_t a1@<X8>)
{
  NeuralNetwork.Preprocessor.kind.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C2D700()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Preprocessor.ScalerConfiguration.channelScale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C2D720(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Preprocessor.ScalerConfiguration.channelScale.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C2D73C()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Preprocessor.ScalerConfiguration.redBias.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C2D75C(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Preprocessor.ScalerConfiguration.redBias.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C2D778()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Preprocessor.ScalerConfiguration.greenBias.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C2D798(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Preprocessor.ScalerConfiguration.greenBias.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C2D7B4()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Preprocessor.ScalerConfiguration.blueBias.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C2D7D4(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Preprocessor.ScalerConfiguration.blueBias.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C2D7F0()
{
  float *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Preprocessor.ScalerConfiguration.grayBias.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C2D810(uint64_t a1)
{
  float v1;

  v1 = OUTLINED_FUNCTION_40_2(a1);
  NeuralNetwork.Preprocessor.ScalerConfiguration.grayBias.setter(v1);
  OUTLINED_FUNCTION_44();
}

void sub_240C2D82C()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Preprocessor.MeanImageConfiguration.meanImage.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *_s12PreprocessorVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _DWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;

  v4 = type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v13 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v13 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 20);
    v9 = (_DWORD *)((char *)a1 + v8);
    v10 = (_DWORD *)((char *)a2 + v8);
    v11 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)v9 = *(_QWORD *)v10;
        v14 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
        v15 = (char *)v9 + v14;
        v16 = (char *)v10 + v14;
        v17 = sub_240F1C930();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
      }
      else
      {
        *(_OWORD *)v9 = *(_OWORD *)v10;
        v9[4] = v10[4];
        v19 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
        v20 = (char *)v9 + v19;
        v21 = (char *)v10 + v19;
        v22 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16))(v20, v21, v22);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    v23 = *(int *)(v6 + 24);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t _s12PreprocessorVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      swift_bridgeObjectRelease();
      v5 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
    }
    else
    {
      v5 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
    }
    v6 = v3 + v5;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
  }
  v8 = a1 + *(int *)(v2 + 24);
  v9 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
}

_QWORD *_s12PreprocessorVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      v11 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
      v12 = (char *)v7 + v11;
      v13 = (char *)v8 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
    }
    else
    {
      *(_OWORD *)v7 = *(_OWORD *)v8;
      v7[4] = v8[4];
      v16 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
      v17 = (char *)v7 + v16;
      v18 = (char *)v8 + v16;
      v19 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16))(v17, v18, v19);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v20 = *(int *)(v5 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *_s12PreprocessorVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_DWORD *)((char *)a1 + v5);
  v7 = (_DWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)v6 = *(_QWORD *)v7;
        v11 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
        v12 = (char *)v6 + v11;
        v13 = (char *)v7 + v11;
        v14 = sub_240F1C930();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
      }
      else
      {
        *v6 = *v7;
        v6[1] = v7[1];
        v6[2] = v7[2];
        v6[3] = v7[3];
        v6[4] = v7[4];
        v22 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
        v23 = (char *)v6 + v22;
        v24 = (char *)v7 + v22;
        v25 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_15;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v6 = *(_QWORD *)v7;
      v17 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
      v18 = (char *)v6 + v17;
      v19 = (char *)v7 + v17;
      v20 = sub_240F1C930();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
    }
    else
    {
      *v6 = *v7;
      v6[1] = v7[1];
      v6[2] = v7[2];
      v6[3] = v7[3];
      v6[4] = v7[4];
      v26 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
      v27 = (char *)v6 + v26;
      v28 = (char *)v7 + v26;
      v29 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v30 = *(int *)(v4 + 24);
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 24))(v31, v32, v33);
  return a1;
}

_OWORD *_s12PreprocessorVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_DWORD *)((char *)a1 + v5);
  v7 = (_DWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v6 = *(_QWORD *)v7;
      v10 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
    }
    else
    {
      *(_OWORD *)v6 = *(_OWORD *)v7;
      v6[4] = v7[4];
      v10 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
    }
    v11 = (char *)v6 + v10;
    v12 = (char *)v7 + v10;
    v13 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v14 = *(int *)(v4 + 24);
  v15 = (char *)a1 + v14;
  v16 = (char *)a2 + v14;
  v17 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
  return a1;
}

_QWORD *_s12PreprocessorVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
  v6 = *(int *)(v5 + 20);
  v7 = (_DWORD *)((char *)a1 + v6);
  v8 = (_DWORD *)((char *)a2 + v6);
  v9 = type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        *(_QWORD *)v7 = *(_QWORD *)v8;
        v12 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
      }
      else
      {
        *(_OWORD *)v7 = *(_OWORD *)v8;
        v7[4] = v8[4];
        v12 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
      }
      v13 = (char *)v7 + v12;
      v14 = (char *)v8 + v12;
      v15 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1A8);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_15;
  }
  if (v11)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)v7 = *(_QWORD *)v8;
      v17 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
    }
    else
    {
      *(_OWORD *)v7 = *(_OWORD *)v8;
      v7[4] = v8[4];
      v17 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
    }
    v18 = (char *)v7 + v17;
    v19 = (char *)v8 + v17;
    v20 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v21 = *(int *)(v5 + 24);
  v22 = (char *)a1 + v21;
  v23 = (char *)a2 + v21;
  v24 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 40))(v22, v23, v24);
  return a1;
}

uint64_t _s12PreprocessorVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2E3BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_12_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s12PreprocessorVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2E3EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_12_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C2E410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_NeuralNetworkPreprocessing);
}

uint64_t _s12PreprocessorV4KindOwCP(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v11 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *a2;
      v6 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
      v7 = a1 + v6;
      v8 = (uint64_t)a2 + v6;
      v9 = sub_240F1C930();
      v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
      swift_bridgeObjectRetain();
      v10(v7, v8, v9);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
      v12 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
      v13 = a1 + v12;
      v14 = (uint64_t)a2 + v12;
      v15 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 16))(v13, v14, v15);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12PreprocessorV4KindOwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    swift_bridgeObjectRelease();
    v2 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  }
  else
  {
    v2 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  }
  v3 = a1 + v2;
  v4 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

uint64_t _s12PreprocessorV4KindOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
    v5 = a1 + v4;
    v6 = a2 + v4;
    v7 = sub_240F1C930();
    v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    swift_bridgeObjectRetain();
    v8(v5, v6, v7);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    v9 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
    v10 = a1 + v9;
    v11 = a2 + v9;
    v12 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s12PreprocessorV4KindOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  if (a1 != a2)
  {
    sub_240BE10B8(a1, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
      v5 = a1 + v4;
      v6 = a2 + v4;
      v7 = sub_240F1C930();
      v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
      swift_bridgeObjectRetain();
      v8(v5, v6, v7);
    }
    else
    {
      *(_DWORD *)a1 = *(_DWORD *)a2;
      *(_DWORD *)(a1 + 4) = *(_DWORD *)(a2 + 4);
      *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
      *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      v9 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
      v10 = a1 + v9;
      v11 = a2 + v9;
      v12 = sub_240F1C930();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12PreprocessorV4KindOwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
    v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  }
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t _s12PreprocessorV4KindOwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  if (a1 != a2)
  {
    sub_240BE10B8(a1, type metadata accessor for NeuralNetwork.Preprocessor.Kind);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      *(_QWORD *)a1 = *(_QWORD *)a2;
      v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
    }
    else
    {
      *(_OWORD *)a1 = *(_OWORD *)a2;
      *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
      v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
    }
    v5 = a1 + v4;
    v6 = a2 + v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C2E9A0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Proto_NeuralNetworkImageScaler(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_NeuralNetworkMeanImage(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_NeuralNetworkImageScaler(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_DWORD *)(a1 + 16) = *((_DWORD *)a2 + 4);
    v6 = *(int *)(v4 + 36);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *_s12PreprocessorV19ScalerConfigurationVwca(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkImageScaler(0) + 36);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2ECE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_13_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s12PreprocessorV19ScalerConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2ED14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_13_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C2ED38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_NeuralNetworkImageScaler);
}

uint64_t *_s12PreprocessorV22MeanImageConfigurationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_NeuralNetworkMeanImage(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s12PreprocessorV22MeanImageConfigurationVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s12PreprocessorV22MeanImageConfigurationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s12PreprocessorV22MeanImageConfigurationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s12PreprocessorV22MeanImageConfigurationVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s12PreprocessorV22MeanImageConfigurationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_NeuralNetworkMeanImage(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s12PreprocessorV22MeanImageConfigurationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2F00C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s12PreprocessorV22MeanImageConfigurationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2F03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C2F060(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_NeuralNetworkMeanImage);
}

uint64_t OUTLINED_FUNCTION_3_4(uint64_t a1)
{
  uint64_t v1;

  __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_5_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  return sub_240C2D1EC(v0, v1);
}

uint64_t OUTLINED_FUNCTION_7_6()
{
  return type metadata accessor for Proto_NeuralNetworkPreprocessing.OneOf_Preprocessor(0);
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return type metadata accessor for Proto_NeuralNetworkPreprocessing(0);
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return type metadata accessor for Proto_NeuralNetworkImageScaler(0);
}

uint64_t OUTLINED_FUNCTION_14_4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = v0;
  return sub_240C2C564();
}

uint64_t OUTLINED_FUNCTION_15_4()
{
  return type metadata accessor for Proto_NeuralNetworkMeanImage(0);
}

uint64_t OUTLINED_FUNCTION_16_3()
{
  return type metadata accessor for NeuralNetwork.Preprocessor.Kind(0);
}

uint64_t OUTLINED_FUNCTION_21_4()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_23_2()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_24_3()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

void OUTLINED_FUNCTION_25_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_27_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_33_2()
{
  return swift_bridgeObjectRetain();
}

void OUTLINED_FUNCTION_35_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0B90(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  return swift_storeEnumTagMultiPayload();
}

float OUTLINED_FUNCTION_40_2(uint64_t a1)
{
  return *(float *)a1;
}

uint64_t OUTLINED_FUNCTION_42_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_44_1()
{
  return sub_240F1CF84();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return sub_240F1CF90();
}

uint64_t OUTLINED_FUNCTION_46_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

void OUTLINED_FUNCTION_47_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

void OUTLINED_FUNCTION_49_2(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

void OUTLINED_FUNCTION_50_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240BE0BF4(a1, v3, a3);
}

uint64_t NeuralNetwork.Layer.SimpleRecurrentParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v2 = *(int *)(type metadata accessor for Proto_SimpleRecurrentLayerParams(0) + 20);
  if (qword_25708B8C0 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_257090428;
  return swift_retain();
}

unint64_t sub_240C2F268()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C390;
  if (!qword_25708C390)
  {
    v1 = type metadata accessor for Proto_SimpleRecurrentLayerParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4F16C, v1);
    atomic_store(result, (unint64_t *)&qword_25708C390);
  }
  return result;
}

uint64_t *_s25SimpleRecurrentParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t _s25SimpleRecurrentParametersVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
  return swift_release();
}

uint64_t _s25SimpleRecurrentParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t _s25SimpleRecurrentParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s25SimpleRecurrentParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t _s25SimpleRecurrentParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t _s25SimpleRecurrentParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2F508()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_3();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s25SimpleRecurrentParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C2F53C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_0_3();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SimpleRecurrentParameters()
{
  uint64_t result;

  result = qword_25708C398;
  if (!qword_25708C398)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C2F5A0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_SimpleRecurrentLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return type metadata accessor for Proto_SimpleRecurrentLayerParams(0);
}

void MLProgram.NamedValueType.name.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C2F640(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  MLProgram.NamedValueType.name.setter(v1, v2);
}

void MLProgram.NamedValueType.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

void MLProgram.NamedValueType.name.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C2F6E0(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_156();
  }
}

void MLProgram.NamedValueType.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_80();
  v6 = OUTLINED_FUNCTION_2_4();
  sub_240C30218(v0 + *(int *)(v6 + 24), v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v4) == 1)
  {
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v7 = *(int *)(v4 + 20);
    if (qword_25708B0D0 != -1)
      swift_once();
    *(_QWORD *)(v1 + v7) = qword_25708EA38;
    swift_retain();
    sub_240BE0B68(v2, &qword_25708C098);
  }
  else
  {
    sub_240BE0B90(v2, v1, type metadata accessor for Proto_MILSpec_ValueType);
  }
  sub_240D34658();
}

void sub_240C2F848(_QWORD *a1@<X8>)
{
  uint64_t v2;

  MLProgram.NamedValueType.type.getter();
  *a1 = v2;
}

void sub_240C2F880()
{
  swift_retain();
  MLProgram.NamedValueType.type.setter();
}

void MLProgram.NamedValueType.type.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_3_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v6 = *(int *)(v4 + 20);
  if (qword_25708B0D0 != -1)
    swift_once();
  v7 = qword_25708EA38;
  *(_QWORD *)(v1 + v6) = qword_25708EA38;
  sub_240D35544();
  v8 = type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type(0);
  OUTLINED_FUNCTION_16_4(v2, v9, v10, v8);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_MILSpec_ValueType._StorageClass(0);
    v7 = OUTLINED_FUNCTION_192();
    v11 = OUTLINED_FUNCTION_176();
    sub_240D40288(v11);
    *(_QWORD *)(v1 + v6) = v12;
    swift_release();
  }
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_176();
  sub_240C30260(v2, v7);
  swift_endAccess();
  swift_release();
  swift_release();
  v13 = v0 + *(int *)(OUTLINED_FUNCTION_2_4() + 24);
  sub_240BE0B68(v13, &qword_25708C098);
  sub_240BE0B90(v1, v13, type metadata accessor for Proto_MILSpec_ValueType);
  OUTLINED_FUNCTION_71(v13, 0);
  OUTLINED_FUNCTION_13();
}

void MLProgram.NamedValueType.type.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 8) = v1;
  MLProgram.NamedValueType.type.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C2FA6C(uint64_t a1, char a2)
{
  if ((a2 & 1) != 0)
  {
    swift_retain();
    MLProgram.NamedValueType.type.setter();
    swift_release();
  }
  else
  {
    MLProgram.NamedValueType.type.setter();
  }
}

void MLProgram.NamedValueType.init(name:type:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_313();
  v9 = type metadata accessor for Proto_MILSpec_ValueType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_80();
  v11 = OUTLINED_FUNCTION_2_4();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v12 = (uint64_t)a3 + *(int *)(v11 + 24);
  OUTLINED_FUNCTION_14_5(v12, 1);
  *a3 = a1;
  a3[1] = a2;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v13 = *(int *)(v9 + 20);
  if (qword_25708B0D0 != -1)
    swift_once();
  v14 = qword_25708EA38;
  *(_QWORD *)(v3 + v13) = qword_25708EA38;
  sub_240D35544();
  v15 = type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type(0);
  OUTLINED_FUNCTION_16_4(v4, v16, v17, v15);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    type metadata accessor for Proto_MILSpec_ValueType._StorageClass(0);
    v14 = OUTLINED_FUNCTION_192();
    v18 = OUTLINED_FUNCTION_176();
    sub_240D40288(v18);
    *(_QWORD *)(v3 + v13) = v19;
    swift_release();
  }
  OUTLINED_FUNCTION_4_5();
  OUTLINED_FUNCTION_176();
  sub_240C30260(v4, v14);
  swift_endAccess();
  swift_release();
  swift_release();
  sub_240BE0B68(v12, &qword_25708C098);
  sub_240BE0B90(v3, v12, type metadata accessor for Proto_MILSpec_ValueType);
  OUTLINED_FUNCTION_14_5(v12, 0);
  OUTLINED_FUNCTION_13();
}

uint64_t MLProgram.NamedValueType.hash(into:)()
{
  OUTLINED_FUNCTION_2_4();
  sub_240BE18B8(&qword_25708C3A8, type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)&unk_240F32138);
  return sub_240F1CC54();
}

uint64_t MLProgram.NamedValueType.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_2_4();
  sub_240BE18B8(&qword_25708C3A8, type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)&unk_240F32138);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C2FD44()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_MILSpec_NamedValueType(0);
  sub_240BE18B8(&qword_25708C3A8, type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)&unk_240F32138);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void MLProgram.NamedValueType.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for MLProgram.NamedValueType();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_48();
  sub_240BE0BF4((uint64_t)v0, v2, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v10 + 32) = 1701667182;
  *(_QWORD *)(v10 + 40) = 0xE400000000000000;
  v11 = v0[1];
  v12 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 48) = *v0;
  *(_QWORD *)(v10 + 56) = v11;
  *(_QWORD *)(v10 + 72) = v12;
  *(_QWORD *)(v10 + 80) = 1701869940;
  *(_QWORD *)(v10 + 88) = 0xE400000000000000;
  *(_QWORD *)(v10 + 120) = &type metadata for MLProgram.ValueType;
  swift_bridgeObjectRetain();
  MLProgram.NamedValueType.type.getter();
  v13 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload((uint64_t)v7, 1, 1, v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.NamedValueType.debugDescription.getter()
{
  sub_240F1CDEC();
  sub_240F1CCE4();
  swift_bridgeObjectRetain();
  sub_240F1CCE4();
  swift_bridgeObjectRelease();
  sub_240F1CCE4();
  MLProgram.NamedValueType.type.getter();
  sub_240F1CE28();
  swift_release();
  sub_240F1CCE4();
  return 0;
}

void FeatureDescription.init(_:)(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  type metadata accessor for Proto_FeatureType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C3B0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  v8 = type metadata accessor for FeatureType(0);
  OUTLINED_FUNCTION_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v10);
  v14 = (char *)&v18 - v13;
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = 0;
  a2[3] = 0xE000000000000000;
  v15 = type metadata accessor for Proto_FeatureDescription(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v16 = (uint64_t)a2 + *(int *)(v15 + 28);
  OUTLINED_FUNCTION_71(v16, 1);
  v17 = a1[1];
  *a2 = *a1;
  a2[1] = v17;
  swift_bridgeObjectRetain();
  MLProgram.NamedValueType.type.getter();
  FeatureType.init(_:)();
  if (__swift_getEnumTagSinglePayload(v3, 1, v8) == 1)
  {
    sub_240BE10B8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    sub_240BE0B68(v3, &qword_25708C3B0);
  }
  else
  {
    sub_240BE0B90(v3, (uint64_t)v14, type metadata accessor for FeatureType);
    sub_240BE0BF4((uint64_t)v14, (uint64_t)v12, type metadata accessor for FeatureType);
    sub_240CAA3E0();
    sub_240BE0B68(v16, &qword_25435FB30);
    sub_240BE0B90(v2, v16, type metadata accessor for Proto_FeatureType);
    OUTLINED_FUNCTION_71(v16, 0);
    sub_240BE10B8((uint64_t)v12, type metadata accessor for FeatureType);
    sub_240BE10B8((uint64_t)a1, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    sub_240BE10B8((uint64_t)v14, type metadata accessor for FeatureType);
  }
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C30218(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C30260(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for MLProgram.NamedValueType()
{
  uint64_t result;

  result = qword_25708C3C8;
  if (!qword_25708C3C8)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240C302E0()
{
  sub_240BE18B8(&qword_25708C3B8, (uint64_t (*)(uint64_t))type metadata accessor for MLProgram.NamedValueType, (uint64_t)&protocol conformance descriptor for MLProgram.NamedValueType);
}

void sub_240C3030C()
{
  sub_240BE18B8(&qword_25708C3C0, type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)&unk_240F31DC8);
}

void sub_240C30338(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  MLProgram.NamedValueType.name.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t *_s14NamedValueTypeVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v6 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Proto_MILSpec_ValueType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      v12(v14, v15, v11);
      *(_QWORD *)&v14[*(int *)(v16 + 20)] = *(_QWORD *)&v15[*(int *)(v16 + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t _s14NamedValueTypeVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v5(v3, v4);
  v6 = a1 + *(int *)(v2 + 24);
  v7 = type metadata accessor for Proto_MILSpec_ValueType(0);
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
  {
    v5(v6, v4);
    return swift_release();
  }
  return result;
}

_QWORD *_s14NamedValueTypeVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
  v6 = *(int *)(v5 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_MILSpec_ValueType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v10(v12, v13, v9);
    *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *_s14NamedValueTypeVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_MILSpec_ValueType(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      v10(v12, v13, v8);
      *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_240BE10B8((uint64_t)v12, type metadata accessor for Proto_MILSpec_ValueType);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v12, v13, v8);
  *(_QWORD *)&v12[*(int *)(v14 + 20)] = *(_QWORD *)&v13[*(int *)(v14 + 20)];
  swift_retain();
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

_OWORD *_s14NamedValueTypeVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Proto_MILSpec_ValueType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    v9(v11, v12, v8);
    *(_QWORD *)&v11[*(int *)(v13 + 20)] = *(_QWORD *)&v12[*(int *)(v13 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *_s14NamedValueTypeVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  uint64_t v17;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
  v6 = *(int *)(v5 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(char *, char *, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(v5 + 24);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Proto_MILSpec_ValueType(0);
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!EnumTagSinglePayload)
    {
      v11(v13, v14, v9);
      *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
      swift_release();
      return a1;
    }
    sub_240BE10B8((uint64_t)v13, type metadata accessor for Proto_MILSpec_ValueType);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v13, v14, v9);
  *(_QWORD *)&v13[*(int *)(v15 + 20)] = *(_QWORD *)&v14[*(int *)(v15 + 20)];
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t _s14NamedValueTypeVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C30A50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_4();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s14NamedValueTypeVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C30A8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_4();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C30AC0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_NamedValueType(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  return type metadata accessor for Proto_MILSpec_NamedValueType(0);
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return type metadata accessor for Proto_MILSpec_ValueType(0);
}

uint64_t OUTLINED_FUNCTION_4_5()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_14_5(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_16_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __swift_storeEnumTagSinglePayload(a1, 0, 1, a4);
  return swift_retain();
}

uint64_t NeuralNetwork.Layer.CropParameters.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_240C30BC4(type metadata accessor for Proto_CropLayerParams, type metadata accessor for Proto_BorderAmounts, a1);
}

uint64_t NeuralNetwork.Layer.ResizeBilinearParameters.init()@<X0>(_QWORD *a1@<X8>)
{
  return sub_240C30BC4(type metadata accessor for Proto_ResizeBilinearLayerParams, type metadata accessor for Proto_SamplingMode, a1);
}

uint64_t sub_240C30BC4@<X0>(uint64_t (*a1)(_QWORD)@<X0>, uint64_t (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *a3 = MEMORY[0x24BEE4AF8];
  v5 = a1(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v6 = (uint64_t)a3 + *(int *)(v5 + 24);
  v7 = a2(0);
  return OUTLINED_FUNCTION_3_6(v6, 1, 1, v7);
}

uint64_t NeuralNetwork.Layer.CropResizeParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_BYTE *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 12) = 0;
  v2 = type metadata accessor for Proto_CropResizeLayerParams(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v3 = a1 + *(int *)(v2 + 32);
  v4 = type metadata accessor for Proto_SamplingMode(0);
  __swift_storeEnumTagSinglePayload(v3, 1, 1, v4);
  v5 = a1 + *(int *)(v2 + 36);
  v6 = type metadata accessor for Proto_BoxCoordinatesMode(0);
  return OUTLINED_FUNCTION_3_6(v5, 1, 1, v6);
}

uint64_t sub_240C30CBC()
{
  return sub_240C30D44(&qword_25708C3D8, type metadata accessor for Proto_CropLayerParams, (uint64_t)&unk_240F4F0F4);
}

uint64_t sub_240C30CE8()
{
  return sub_240C30D44(&qword_25708C3E0, type metadata accessor for Proto_ResizeBilinearLayerParams, (uint64_t)&unk_240F4F07C);
}

uint64_t sub_240C30D18()
{
  return sub_240C30D44(&qword_25708C3E8, type metadata accessor for Proto_CropResizeLayerParams, (uint64_t)&unk_240F4F004);
}

uint64_t sub_240C30D44(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24268C2AC](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *_s14CropParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;

  v4 = type metadata accessor for Proto_CropLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = v4;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 24);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = type metadata accessor for Proto_BorderAmounts(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      v18 = *(int *)(v16 + 20);
      v19 = (char *)v14 + v18;
      v20 = (char *)v15 + v18;
      swift_bridgeObjectRetain();
      v12(v19, v20, v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t _s14CropParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_CropLayerParams(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_240F1C930();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(v3, v4);
  v5 = a1 + *(int *)(v2 + 24);
  v6 = type metadata accessor for Proto_BorderAmounts(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    return v8(v5 + *(int *)(v6 + 20), v4);
  }
  return result;
}

_QWORD *_s14CropParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_CropLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = type metadata accessor for Proto_BorderAmounts(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    v15 = *(int *)(v13 + 20);
    v16 = (char *)v11 + v15;
    v17 = (char *)v12 + v15;
    swift_bridgeObjectRetain();
    v9(v16, v17, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *_s14CropParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;
  char *v17;
  char *v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_CropLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_BorderAmounts(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
      return a1;
    }
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_BorderAmounts);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v16 = *(int *)(v14 + 20);
  v17 = &v12[v16];
  v18 = &v13[v16];
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  swift_bridgeObjectRetain();
  v19(v17, v18, v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

_QWORD *_s14CropParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_CropLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (_QWORD *)((char *)a1 + v10);
  v12 = (_QWORD *)((char *)a2 + v10);
  v13 = type metadata accessor for Proto_BorderAmounts(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *v11 = *v12;
    v9((char *)v11 + *(int *)(v13 + 20), (char *)v12 + *(int *)(v13 + 20), v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *_s14CropParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_CropLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_BorderAmounts(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      swift_bridgeObjectRelease();
      v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
      return a1;
    }
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_BorderAmounts);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCA0);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t _s14CropParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3147C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_7_7();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s14CropParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C314A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_7_7();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.CropParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C3F0);
}

uint64_t sub_240C314D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_CropLayerParams);
}

uint64_t *_s24ResizeBilinearParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;

  v4 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = v4;
    v8 = *(int *)(v4 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 24);
    v14 = (char *)a1 + v13;
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Proto_SamplingMode(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[8] = v15[8];
      v12(&v14[*(int *)(v16 + 20)], &v15[*(int *)(v16 + 20)], v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t _s24ResizeBilinearParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = sub_240F1C930();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(v3, v4);
  v5 = a1 + *(int *)(v2 + 24);
  v6 = type metadata accessor for Proto_SamplingMode(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
    return v8(v5 + *(int *)(v6 + 20), v4);
  return result;
}

_QWORD *_s24ResizeBilinearParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Proto_SamplingMode(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v9(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *_s24ResizeBilinearParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_SamplingMode(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      v19 = *(_QWORD *)v13;
      v12[8] = v13[8];
      *(_QWORD *)v12 = v19;
      v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
      return a1;
    }
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_SamplingMode);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  v16 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v16;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

_QWORD *_s24ResizeBilinearParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = *(int *)(v4 + 24);
  v11 = (char *)a1 + v10;
  v12 = (char *)a2 + v10;
  v13 = type metadata accessor for Proto_SamplingMode(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v9(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  return a1;
}

_QWORD *_s24ResizeBilinearParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_ResizeBilinearLayerParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_SamplingMode(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v12[8] = v13[8];
      v10(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
      return a1;
    }
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_SamplingMode);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

uint64_t _s24ResizeBilinearParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C31BCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_6_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s24ResizeBilinearParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C31BF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_6_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ResizeBilinearParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C400);
}

uint64_t sub_240C31C24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ResizeBilinearLayerParams);
}

uint64_t _s20CropResizeParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _BYTE *v14;
  _BYTE *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;

  v4 = type metadata accessor for Proto_CropResizeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = v4;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    v8 = *(int *)(v4 + 28);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v7 + 32);
    v14 = (_BYTE *)(a1 + v13);
    v15 = (char *)a2 + v13;
    v16 = type metadata accessor for Proto_SamplingMode(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v14 = *(_QWORD *)v15;
      v14[8] = v15[8];
      v12((uint64_t)&v14[*(int *)(v16 + 20)], (uint64_t)&v15[*(int *)(v16 + 20)], v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
    v18 = *(int *)(v7 + 36);
    v19 = (_BYTE *)(a1 + v18);
    v20 = (char *)a2 + v18;
    v21 = type metadata accessor for Proto_BoxCoordinatesMode(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v19[8] = v20[8];
      v12((uint64_t)&v19[*(int *)(v21 + 20)], (uint64_t)&v20[*(int *)(v21 + 20)], v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
    }
  }
  return a1;
}

uint64_t _s20CropResizeParametersVwxx(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  void (*v10)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
  v3 = a1 + v2[7];
  v4 = sub_240F1C930();
  v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v10(v3, v4);
  v5 = a1 + v2[8];
  v6 = type metadata accessor for Proto_SamplingMode(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
    v10(v5 + *(int *)(v6 + 20), v4);
  v7 = a1 + v2[9];
  v8 = type metadata accessor for Proto_BoxCoordinatesMode(0);
  result = __swift_getEnumTagSinglePayload(v7, 1, v8);
  if (!(_DWORD)result)
    return ((uint64_t (*)(uint64_t, uint64_t))v10)(v7 + *(int *)(v8 + 20), v4);
  return result;
}

uint64_t _s20CropResizeParametersVwcp(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
  v5 = v4[7];
  v6 = (_BYTE *)(a1 + v5);
  v7 = (_BYTE *)(a2 + v5);
  v8 = sub_240F1C930();
  v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  v10 = v4[8];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = type metadata accessor for Proto_SamplingMode(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v9(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v15 = v4[9];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = type metadata accessor for Proto_BoxCoordinatesMode(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v9(&v16[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  return a1;
}

uint64_t _s20CropResizeParametersVwca(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  _BYTE *v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
  v5 = v4[7];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = v4[8];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = type metadata accessor for Proto_SamplingMode(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      v17 = *(_QWORD *)v13;
      v12[8] = v13[8];
      *(_QWORD *)v12 = v17;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_SamplingMode);
LABEL_6:
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    goto LABEL_7;
  }
  v28 = *(_QWORD *)v13;
  v12[8] = v13[8];
  *(_QWORD *)v12 = v28;
  v10((uint64_t)&v12[*(int *)(v14 + 20)], (uint64_t)&v13[*(int *)(v14 + 20)], v8);
LABEL_7:
  v19 = v4[9];
  v20 = (_BYTE *)(a1 + v19);
  v21 = (_BYTE *)(a2 + v19);
  v22 = type metadata accessor for Proto_BoxCoordinatesMode(0);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v22);
  v24 = __swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22);
  if (!v23)
  {
    if (!v24)
    {
      v29 = *(_QWORD *)v21;
      v20[8] = v21[8];
      *(_QWORD *)v20 = v29;
      v10((uint64_t)&v20[*(int *)(v22 + 20)], (uint64_t)&v21[*(int *)(v22 + 20)], v8);
      return a1;
    }
    sub_240C32310((uint64_t)v20, type metadata accessor for Proto_BoxCoordinatesMode);
    goto LABEL_12;
  }
  if (v24)
  {
LABEL_12:
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
    memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    return a1;
  }
  v25 = *(_QWORD *)v21;
  v20[8] = v21[8];
  *(_QWORD *)v20 = v25;
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 16))(&v20[*(int *)(v22 + 20)], &v21[*(int *)(v22 + 20)], v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
  return a1;
}

uint64_t sub_240C32310(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t _s20CropResizeParametersVwtk(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  _BYTE *v6;
  _BYTE *v7;
  uint64_t v8;
  void (*v9)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v10;
  _BYTE *v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BYTE *v16;
  _BYTE *v17;
  uint64_t v18;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
  v5 = v4[7];
  v6 = (_BYTE *)(a1 + v5);
  v7 = (_BYTE *)(a2 + v5);
  v8 = sub_240F1C930();
  v9 = *(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v8 - 8) + 32);
  v9(v6, v7, v8);
  v10 = v4[8];
  v11 = (_BYTE *)(a1 + v10);
  v12 = (_BYTE *)(a2 + v10);
  v13 = type metadata accessor for Proto_SamplingMode(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13))
  {
    v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v14 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v11 = *(_QWORD *)v12;
    v11[8] = v12[8];
    v9(&v11[*(int *)(v13 + 20)], &v12[*(int *)(v13 + 20)], v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v11, 0, 1, v13);
  }
  v15 = v4[9];
  v16 = (_BYTE *)(a1 + v15);
  v17 = (_BYTE *)(a2 + v15);
  v18 = type metadata accessor for Proto_BoxCoordinatesMode(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *(_QWORD *)v16 = *(_QWORD *)v17;
    v16[8] = v17[8];
    v9(&v16[*(int *)(v18 + 20)], &v17[*(int *)(v18 + 20)], v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  return a1;
}

uint64_t _s20CropResizeParametersVwta(uint64_t a1, uint64_t a2)
{
  int *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _BYTE *v12;
  _BYTE *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  _BYTE *v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  v4 = (int *)type metadata accessor for Proto_CropResizeLayerParams(0);
  v5 = v4[7];
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = v4[8];
  v12 = (_BYTE *)(a1 + v11);
  v13 = (_BYTE *)(a2 + v11);
  v14 = type metadata accessor for Proto_SamplingMode(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (EnumTagSinglePayload)
  {
    if (!v16)
    {
      *(_QWORD *)v12 = *(_QWORD *)v13;
      v12[8] = v13[8];
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(&v12[*(int *)(v14 + 20)], &v13[*(int *)(v14 + 20)], v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v16)
  {
    sub_240C32310((uint64_t)v12, type metadata accessor for Proto_SamplingMode);
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C218);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_7;
  }
  *(_QWORD *)v12 = *(_QWORD *)v13;
  v12[8] = v13[8];
  v10((uint64_t)&v12[*(int *)(v14 + 20)], (uint64_t)&v13[*(int *)(v14 + 20)], v8);
LABEL_7:
  v18 = v4[9];
  v19 = (_BYTE *)(a1 + v18);
  v20 = (_BYTE *)(a2 + v18);
  v21 = type metadata accessor for Proto_BoxCoordinatesMode(0);
  v22 = __swift_getEnumTagSinglePayload((uint64_t)v19, 1, v21);
  v23 = __swift_getEnumTagSinglePayload((uint64_t)v20, 1, v21);
  if (!v22)
  {
    if (!v23)
    {
      *(_QWORD *)v19 = *(_QWORD *)v20;
      v19[8] = v20[8];
      v10((uint64_t)&v19[*(int *)(v21 + 20)], (uint64_t)&v20[*(int *)(v21 + 20)], v8);
      return a1;
    }
    sub_240C32310((uint64_t)v19, type metadata accessor for Proto_BoxCoordinatesMode);
    goto LABEL_12;
  }
  if (v23)
  {
LABEL_12:
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C220);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    return a1;
  }
  *(_QWORD *)v19 = *(_QWORD *)v20;
  v19[8] = v20[8];
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v9 + 32))(&v19[*(int *)(v21 + 20)], &v20[*(int *)(v21 + 20)], v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, v21);
  return a1;
}

uint64_t _s20CropResizeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C32758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_5_6();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s20CropResizeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C32780()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_6();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.CropResizeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C410);
}

uint64_t sub_240C327B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_CropResizeLayerParams);
}

uint64_t OUTLINED_FUNCTION_3_6(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_5_6()
{
  return type metadata accessor for Proto_CropResizeLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_6_3()
{
  return type metadata accessor for Proto_ResizeBilinearLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_7_7()
{
  return type metadata accessor for Proto_CropLayerParams(0);
}

void static NeuralNetwork.Layer.FillLikeParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C328CC(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_FillLikeLayerParams);
}

void static NeuralNetwork.Layer.FillStaticParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_21_5();
  if (v7 && (sub_240BEACE0(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) != 0)
  {
    v8 = OUTLINED_FUNCTION_23_3();
    OUTLINED_FUNCTION_11_6(*(int *)(v8 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v8 + 24));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_12_4(v2);
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.FillDynamicParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C328CC(a1, a2, (uint64_t (*)(_QWORD, float))type metadata accessor for Proto_FillDynamicLayerParams);
}

void sub_240C328CC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD, float))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  float v7;
  char v8;
  uint64_t v9;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_21_5();
  if (v8)
  {
    v9 = a3(0, v7);
    OUTLINED_FUNCTION_11_6(*(int *)(v9 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v9 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_12_4(v3);
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.SequenceRepeatParameters.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_20_2();
  if (v3)
  {
    v4 = type metadata accessor for Proto_SequenceRepeatLayerParams(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v4 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v4 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_12_4(v0);
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.ReverseSequenceParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_2();
  if (v7 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    v8 = OUTLINED_FUNCTION_22_2();
    OUTLINED_FUNCTION_11_6(*(int *)(v8 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v8 + 24));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_12_4(v2);
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.TileParameters.== infix(_:_:)(char *a1, _QWORD *a2)
{
  sub_240C32B18(a1, a2, sub_240BEACE0, type metadata accessor for Proto_TileLayerParams);
}

void static NeuralNetwork.Layer.ReverseParameters.== infix(_:_:)(char *a1, _QWORD *a2)
{
  sub_240C32B18(a1, a2, sub_240BEABBC, type metadata accessor for Proto_ReverseLayerParams);
}

void sub_240C32B18(char *a1, _QWORD *a2, uint64_t (*a3)(_QWORD, _QWORD), uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v9 = OUTLINED_FUNCTION_20_0();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v15 - v12;
  if ((a3(*(_QWORD *)a1, *a2) & 1) != 0)
  {
    v14 = a4(0);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, &a1[*(int *)(v14 + 20)], v9);
    OUTLINED_FUNCTION_10_6(*(int *)(v14 + 20));
    sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_12_4(v4);
    OUTLINED_FUNCTION_12_4((uint64_t)v13);
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.SequenceRepeatParameters.init()(_QWORD *a1@<X8>)
{
  sub_240C32EFC(0, (void (*)(_QWORD))type metadata accessor for Proto_SequenceRepeatLayerParams, a1);
}

void NeuralNetwork.Layer.ReorganizeDataParameters.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_QWORD *)(a1 + 16) = 0;
  type metadata accessor for Proto_ReorganizeDataLayerParams(0);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.TileParameters.repetitions.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF080C();
    v3 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
        break;
      v5 = *(_QWORD *)(v6 + 16);
      if (v5 >= *(_QWORD *)(v6 + 24) >> 1)
        sub_240BF080C();
      ++v3;
      *(_QWORD *)(v6 + 16) = v5 + 1;
      *(_QWORD *)(v6 + 8 * v5 + 32) = v4;
      if (v2 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_240C32D3C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.TileParameters.repetitions.setter(v0);
}

void NeuralNetwork.Layer.TileParameters.repetitions.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_240BF0830();
    v5 = 0;
    v6 = v9;
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 < 0)
        break;
      v8 = *(_QWORD *)(v9 + 16);
      if (v8 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_240BF0830();
      ++v5;
      *(_QWORD *)(v9 + 16) = v8 + 1;
      *(_QWORD *)(v9 + 8 * v8 + 32) = v7;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
LABEL_9:
    swift_bridgeObjectRelease();
    *v2 = v6;
  }
}

void (*NeuralNetwork.Layer.TileParameters.repetitions.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  NeuralNetwork.Layer.TileParameters.repetitions.getter();
  *a1 = v3;
  return sub_240C32E90;
}

void sub_240C32E90(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = swift_bridgeObjectRetain();
    NeuralNetwork.Layer.TileParameters.repetitions.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    NeuralNetwork.Layer.TileParameters.repetitions.setter(*a1);
    OUTLINED_FUNCTION_44();
  }
}

void NeuralNetwork.Layer.TileParameters.init()(_QWORD *a1@<X8>)
{
  sub_240C32EFC(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_TileLayerParams, a1);
}

void NeuralNetwork.Layer.ReverseParameters.init()(_QWORD *a1@<X8>)
{
  sub_240C32EFC(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReverseLayerParams, a1);
}

void sub_240C32EFC(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, _QWORD *a3@<X8>)
{
  *a3 = a1;
  a2(0);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.ReverseSequenceParameters.init()(_QWORD *a1@<X8>)
{
  OUTLINED_FUNCTION_22_2();
  *a1 = 0;
  a1[1] = 0;
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.FillLikeParameters.init()(_DWORD *a1@<X8>)
{
  sub_240C32FAC((void (*)(_QWORD))type metadata accessor for Proto_FillLikeLayerParams, a1);
}

void NeuralNetwork.Layer.FillStaticParameters.init()(uint64_t a1@<X8>)
{
  *(_DWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_23_3();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.FillDynamicParameters.init()(_DWORD *a1@<X8>)
{
  sub_240C32FAC((void (*)(_QWORD))type metadata accessor for Proto_FillDynamicLayerParams, a1);
}

void sub_240C32FAC(void (*a1)(_QWORD)@<X0>, _DWORD *a2@<X8>)
{
  *a2 = 0;
  a1(0);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C32FE0()
{
  return sub_240C30D44(&qword_25708C420, type metadata accessor for Proto_SequenceRepeatLayerParams, (uint64_t)&unk_240F4EF8C);
}

uint64_t sub_240C3300C()
{
  return sub_240C30D44(&qword_25708C428, type metadata accessor for Proto_ReorganizeDataLayerParams, (uint64_t)&unk_240F4EF14);
}

uint64_t sub_240C33038()
{
  return sub_240C30D44(&qword_25708C430, type metadata accessor for Proto_TileLayerParams, (uint64_t)&unk_240F4EE9C);
}

uint64_t sub_240C33064()
{
  return sub_240C30D44(&qword_25708C438, type metadata accessor for Proto_ReverseLayerParams, (uint64_t)&unk_240F4EE24);
}

uint64_t sub_240C33090()
{
  return sub_240C30D44(&qword_25708C440, type metadata accessor for Proto_ReverseSeqLayerParams, (uint64_t)&unk_240F4EDAC);
}

uint64_t sub_240C330BC()
{
  return sub_240C30D44(&qword_25708C448, type metadata accessor for Proto_FillLikeLayerParams, (uint64_t)&unk_240F4ED34);
}

uint64_t sub_240C330E8()
{
  return sub_240C30D44(&qword_25708C450, type metadata accessor for Proto_FillStaticLayerParams, (uint64_t)&unk_240F4ECBC);
}

uint64_t sub_240C33114()
{
  return sub_240C30D44(&qword_25708C458, type metadata accessor for Proto_FillDynamicLayerParams, (uint64_t)&unk_240F4EC44);
}

void sub_240C33140(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.Layer.TileParameters.repetitions.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s24SequenceRepeatParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_SequenceRepeatLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s24SequenceRepeatParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C34218(a1, a2, type metadata accessor for Proto_SequenceRepeatLayerParams);
}

_QWORD *_s24SequenceRepeatParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s24SequenceRepeatParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void _s24SequenceRepeatParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33944(a1, a2, a3, type metadata accessor for Proto_SequenceRepeatLayerParams);
}

_QWORD *_s24SequenceRepeatParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SequenceRepeatLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s24SequenceRepeatParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33358()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_30_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s24SequenceRepeatParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33380()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_30_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SequenceRepeatParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C460);
}

uint64_t sub_240C333B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SequenceRepeatLayerParams);
}

uint64_t _s24ReorganizeDataParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_ReorganizeDataLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_QWORD *)(a1 + 16) = a2[2];
    v6 = *(int *)(v4 + 24);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s24ReorganizeDataParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ReorganizeDataLayerParams);
}

uint64_t _s24ReorganizeDataParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s24ReorganizeDataParametersVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_QWORD *)(a1 + 16) = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t _s24ReorganizeDataParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s24ReorganizeDataParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(type metadata accessor for Proto_ReorganizeDataLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s24ReorganizeDataParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33658()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_27_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s24ReorganizeDataParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33680()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_27_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReorganizeDataParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C470);
}

uint64_t sub_240C336B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReorganizeDataLayerParams);
}

void _s14TileParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33780(a1, a2, a3, type metadata accessor for Proto_TileLayerParams);
}

uint64_t _s14TileParametersVwxx()
{
  return sub_240C3381C();
}

void _s14TileParametersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33860(a1, a2, a3, type metadata accessor for Proto_TileLayerParams);
}

void _s14TileParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C338D4(a1, a2);
}

void _s14TileParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33944(a1, a2, a3, type metadata accessor for Proto_TileLayerParams);
}

void _s14TileParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

uint64_t _s14TileParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33710()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_26_0();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s14TileParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33738()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_26_0();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.TileParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C480);
}

uint64_t sub_240C33768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_TileLayerParams);
}

void _s17ReverseParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33780(a1, a2, a3, type metadata accessor for Proto_ReverseLayerParams);
}

void sub_240C33780(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);

  v6 = OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v7 = *(_DWORD *)(*(_QWORD *)(v6 - 8) + 80);
  *a1 = *a2;
  if ((v7 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    v8 = *(int *)(v6 + 20);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = OUTLINED_FUNCTION_20_0();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  OUTLINED_FUNCTION_42();
}

uint64_t _s17ReverseParametersVwxx()
{
  return sub_240C3381C();
}

uint64_t sub_240C3381C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_18_2();
  return OUTLINED_FUNCTION_15_5(v0, v1, v2);
}

void _s17ReverseParametersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33860(a1, a2, a3, type metadata accessor for Proto_ReverseLayerParams);
}

void sub_240C33860(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  *a1 = *a2;
  v6 = *(int *)(OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4) + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = OUTLINED_FUNCTION_20_0();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  OUTLINED_FUNCTION_42();
}

void _s17ReverseParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C338D4(a1, a2);
}

void sub_240C338D4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_3();
  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s17ReverseParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C33944(a1, a2, a3, type metadata accessor for Proto_ReverseLayerParams);
}

void sub_240C33944(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *a1 = *a2;
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s17ReverseParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C339A0(a1, a2);
}

void sub_240C339A0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v2;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_33_3();
  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t _s17ReverseParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33A08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_29_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s17ReverseParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33A30()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_29_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReverseParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C490);
}

uint64_t sub_240C33A60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReverseLayerParams);
}

uint64_t *_s25ReverseSequenceParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_ReverseSeqLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v6 = *(int *)(v4 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s25ReverseSequenceParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ReverseSeqLayerParams);
}

uint64_t sub_240C33B0C(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_32_2(a1, a2, a3);
  OUTLINED_FUNCTION_20_0();
  v3 = OUTLINED_FUNCTION_18_2();
  return OUTLINED_FUNCTION_15_5(v3, v4, v5);
}

_OWORD *_s25ReverseSequenceParametersVwcp(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s25ReverseSequenceParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s25ReverseSequenceParametersVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_OWORD *_s25ReverseSequenceParametersVwta(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ReverseSeqLayerParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s25ReverseSequenceParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33CE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_22_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s25ReverseSequenceParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33D18()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_22_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReverseSequenceParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C4A0);
}

uint64_t sub_240C33D50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReverseSeqLayerParams);
}

void _s18FillLikeParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C34188(a1, a2, a3, type metadata accessor for Proto_FillLikeLayerParams);
}

uint64_t _s18FillLikeParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C34218(a1, a2, type metadata accessor for Proto_FillLikeLayerParams);
}

void _s18FillLikeParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C3424C(a1, a2, a3, type metadata accessor for Proto_FillLikeLayerParams);
}

void _s18FillLikeParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C342A8(a1, a2, a3, type metadata accessor for Proto_FillLikeLayerParams);
}

void _s18FillLikeParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34304(a1, a2, a3, type metadata accessor for Proto_FillLikeLayerParams);
}

void _s18FillLikeParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34360(a1, a2, a3, type metadata accessor for Proto_FillLikeLayerParams);
}

uint64_t _s18FillLikeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s18FillLikeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C33DD8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_28_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.FillLikeParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C4B0);
}

uint64_t sub_240C33E08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_FillLikeLayerParams);
}

uint64_t *_s20FillStaticParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;

  v4 = type metadata accessor for Proto_FillStaticLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    a1[1] = a2[1];
    v6 = *(int *)(v4 + 24);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
    swift_bridgeObjectRetain();
    v10(v7, v8, v9);
  }
  return a1;
}

uint64_t _s20FillStaticParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t _s20FillStaticParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

uint64_t _s20FillStaticParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s20FillStaticParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s20FillStaticParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)a1 = *(_DWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_FillStaticLayerParams(0) + 24);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s20FillStaticParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C34108()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_23_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s20FillStaticParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C34138()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_23_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.FillStaticParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C4C0);
}

uint64_t sub_240C34170(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_FillStaticLayerParams);
}

void _s21FillDynamicParametersVwCP(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  sub_240C34188(a1, a2, a3, type metadata accessor for Proto_FillDynamicLayerParams);
}

void sub_240C34188(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  if ((*(_DWORD *)(*(_QWORD *)(v6 - 8) + 80) & 0x20000) != 0)
  {
    *a1 = *a2;
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v7 = *(int *)(v6 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = OUTLINED_FUNCTION_20_0();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s21FillDynamicParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C34218(a1, a2, type metadata accessor for Proto_FillDynamicLayerParams);
}

uint64_t sub_240C34218(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_32_2(a1, a2, a3);
  OUTLINED_FUNCTION_20_0();
  v3 = OUTLINED_FUNCTION_18_2();
  return OUTLINED_FUNCTION_15_5(v3, v4, v5);
}

void _s21FillDynamicParametersVwcp(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C3424C(a1, a2, a3, type metadata accessor for Proto_FillDynamicLayerParams);
}

void sub_240C3424C(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *a1 = *a2;
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s21FillDynamicParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C342A8(a1, a2, a3, type metadata accessor for Proto_FillDynamicLayerParams);
}

void sub_240C342A8(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *a1 = *a2;
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s21FillDynamicParametersVwtk(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34304(a1, a2, a3, type metadata accessor for Proto_FillDynamicLayerParams);
}

void sub_240C34304(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *a1 = *a2;
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s21FillDynamicParametersVwta(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  sub_240C34360(a1, a2, a3, type metadata accessor for Proto_FillDynamicLayerParams);
}

void sub_240C34360(_DWORD *a1, _DWORD *a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *a1 = *a2;
  OUTLINED_FUNCTION_16_5((uint64_t)a1, (uint64_t)a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t _s21FillDynamicParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C343BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s21FillDynamicParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C343E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_25_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.FillDynamicParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C4D0);
}

uint64_t sub_240C34414(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_FillDynamicLayerParams);
}

uint64_t OUTLINED_FUNCTION_5_7()
{
  return sub_240F1CC90();
}

uint64_t OUTLINED_FUNCTION_9_5()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_10_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);

  return v4(v1, v3 + a1, v2);
}

uint64_t OUTLINED_FUNCTION_11_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v2, v3 + a1, v1);
}

uint64_t OUTLINED_FUNCTION_12_4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t OUTLINED_FUNCTION_14_6@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_15_5(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_16_5(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

float OUTLINED_FUNCTION_21_5()
{
  uint64_t v0;

  return *(float *)v0;
}

uint64_t OUTLINED_FUNCTION_22_2()
{
  return type metadata accessor for Proto_ReverseSeqLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_23_3()
{
  return type metadata accessor for Proto_FillStaticLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_25_3()
{
  return type metadata accessor for Proto_FillDynamicLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  return type metadata accessor for Proto_TileLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return type metadata accessor for Proto_ReorganizeDataLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_28_2()
{
  return type metadata accessor for Proto_FillLikeLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return type metadata accessor for Proto_ReverseLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  return type metadata accessor for Proto_SequenceRepeatLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_32_2(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  return a3(0);
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  uint64_t (*v0)(_QWORD);

  return v0(0);
}

#error "240C346A4: call analysis failed (funcsize=77)"

#error "240C3478C: call analysis failed (funcsize=51)"

void NeuralNetwork.Layer.BranchParameters.init(ifBranch:elseBranch:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_22();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C4E0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  v31 = (char *)&a9 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v32);
  v34 = (char *)&a9 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_6_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_312();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v36 = OUTLINED_FUNCTION_2_5();
  v37 = v28 + *(int *)(v36 + 20);
  OUTLINED_FUNCTION_5_8(v37, 1);
  OUTLINED_FUNCTION_5_8(v28 + *(int *)(v36 + 24), 1);
  sub_240C355AC(v26, v20, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
  sub_240C355AC(v20, (uint64_t)v34, type metadata accessor for Proto_NeuralNetwork);
  OUTLINED_FUNCTION_219(v38, &qword_25708BD18);
  sub_240C35540((uint64_t)v34, v37, type metadata accessor for Proto_NeuralNetwork);
  OUTLINED_FUNCTION_32();
  OUTLINED_FUNCTION_25_4(v20);
  sub_240C02F94(v24, (uint64_t)v31, &qword_25708C4E0);
  NeuralNetwork.Layer.BranchParameters.elseBranch.setter((uint64_t)v31);
  OUTLINED_FUNCTION_13_5(v24);
  OUTLINED_FUNCTION_25_4(v26);
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Layer.BranchParameters.ifBranch.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t EnumTagSinglePayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = OUTLINED_FUNCTION_2_5();
  sub_240C02F94(v1 + *(int *)(v10 + 20), (uint64_t)v5, &qword_25708BD18);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v5, 1, v6);
  if ((_DWORD)EnumTagSinglePayload == 1)
  {
    v13 = MEMORY[0x24BEE4AF8];
    *(_QWORD *)v9 = MEMORY[0x24BEE4AF8];
    *((_QWORD *)v9 + 1) = v13;
    *((_QWORD *)v9 + 2) = 0;
    v9[24] = 1;
    *((_QWORD *)v9 + 4) = 0;
    v9[40] = 1;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v14 = OUTLINED_FUNCTION_28_3();
    OUTLINED_FUNCTION_4_6(v14);
    sub_240BE0B68((uint64_t)v5, &qword_25708BD18);
  }
  else
  {
    OUTLINED_FUNCTION_26_1(EnumTagSinglePayload, v12, type metadata accessor for Proto_NeuralNetwork);
  }
  sub_240C35540((uint64_t)v9, a1, type metadata accessor for Proto_NeuralNetwork);
  OUTLINED_FUNCTION_42();
}

void sub_240C34A34(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for NeuralNetwork();
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C355AC(a1, (uint64_t)v4, v5);
  NeuralNetwork.Layer.BranchParameters.ifBranch.setter((uint64_t)v4);
}

void NeuralNetwork.Layer.BranchParameters.ifBranch.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_16_6();
  sub_240C355AC(v5, v2, type metadata accessor for Proto_NeuralNetwork);
  v6 = OUTLINED_FUNCTION_2_5();
  v7 = v1 + *(int *)(v6 + 20);
  OUTLINED_FUNCTION_37(v6, &qword_25708BD18);
  sub_240C35540(v2, v7, type metadata accessor for Proto_NeuralNetwork);
  OUTLINED_FUNCTION_71(v7, 0);
  sub_240BE10B8(a1, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
  OUTLINED_FUNCTION_42();
}

void (*NeuralNetwork.Layer.BranchParameters.ifBranch.modify())()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = OUTLINED_FUNCTION_27_3();
  *v0 = v2;
  *v2 = v1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v2[1] = v4;
  v5 = OUTLINED_FUNCTION_9_6();
  v2[2] = v5;
  v2[3] = OUTLINED_FUNCTION_119();
  v6 = OUTLINED_FUNCTION_119();
  v2[4] = v6;
  OUTLINED_FUNCTION_6_4();
  v2[5] = OUTLINED_FUNCTION_119();
  v2[6] = OUTLINED_FUNCTION_119();
  v7 = *(int *)(OUTLINED_FUNCTION_2_5() + 20);
  *((_DWORD *)v2 + 14) = v7;
  sub_240C02F94(v1 + v7, (uint64_t)v4, &qword_25708BD18);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    v8 = MEMORY[0x24BEE4AF8];
    *v6 = MEMORY[0x24BEE4AF8];
    v6[1] = v8;
    v6[2] = 0;
    *((_BYTE *)v6 + 24) = 1;
    v6[4] = 0;
    *((_BYTE *)v6 + 40) = 1;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v9 = OUTLINED_FUNCTION_28_3();
    OUTLINED_FUNCTION_4_6(v9);
    sub_240BE0B68((uint64_t)v4, &qword_25708BD18);
  }
  else
  {
    sub_240C35540((uint64_t)v4, (uint64_t)v6, type metadata accessor for Proto_NeuralNetwork);
  }
  OUTLINED_FUNCTION_26_1(v10, v11, type metadata accessor for Proto_NeuralNetwork);
  return sub_240C34C9C;
}

void sub_240C34C9C()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_22();
  v1 = *(void **)v0;
  v2 = *(void **)(*(_QWORD *)v0 + 40);
  v3 = *(void **)(*(_QWORD *)v0 + 48);
  v4 = *(void **)(*(_QWORD *)v0 + 24);
  v5 = *(void **)(*(_QWORD *)v0 + 32);
  v6 = *(void **)(*(_QWORD *)v0 + 8);
  v7 = **(_QWORD **)v0 + *(int *)(*(_QWORD *)v0 + 56);
  if ((v8 & 1) != 0)
  {
    sub_240C355AC(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
    sub_240C355AC((uint64_t)v2, (uint64_t)v4, type metadata accessor for Proto_NeuralNetwork);
    OUTLINED_FUNCTION_219(v9, &qword_25708BD18);
    sub_240C35540((uint64_t)v4, v7, type metadata accessor for Proto_NeuralNetwork);
    OUTLINED_FUNCTION_32();
    sub_240BE10B8((uint64_t)v2, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
  }
  else
  {
    sub_240C355AC(*(_QWORD *)(*(_QWORD *)v0 + 48), (uint64_t)v4, type metadata accessor for Proto_NeuralNetwork);
    OUTLINED_FUNCTION_219(v10, &qword_25708BD18);
    sub_240C35540((uint64_t)v4, v7, type metadata accessor for Proto_NeuralNetwork);
    OUTLINED_FUNCTION_32();
  }
  sub_240BE10B8((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
  free(v3);
  free(v2);
  free(v5);
  free(v4);
  free(v6);
  free(v1);
}

void NeuralNetwork.Layer.BranchParameters.elseBranch.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v25 = v24;
  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
  OUTLINED_FUNCTION_0();
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&a9 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&a9 - v31;
  v33 = v20 + *(int *)(OUTLINED_FUNCTION_2_5() + 24);
  sub_240C02F94(v33, (uint64_t)v32, &qword_25708BD18);
  v34 = 1;
  v35 = OUTLINED_FUNCTION_24_4((uint64_t)v32);
  sub_240BE0B68((uint64_t)v32, &qword_25708BD18);
  if (v35 != 1)
  {
    sub_240C02F94(v33, (uint64_t)v30, &qword_25708BD18);
    if (OUTLINED_FUNCTION_24_4((uint64_t)v30) == 1)
    {
      v36 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)v21 = MEMORY[0x24BEE4AF8];
      *(_QWORD *)(v21 + 8) = v36;
      *(_QWORD *)(v21 + 16) = 0;
      *(_BYTE *)(v21 + 24) = 1;
      *(_QWORD *)(v21 + 32) = 0;
      *(_BYTE *)(v21 + 40) = 1;
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v37 = OUTLINED_FUNCTION_28_3();
      OUTLINED_FUNCTION_4_6(v37);
      sub_240BE0B68((uint64_t)v30, &qword_25708BD18);
    }
    else
    {
      sub_240C35540((uint64_t)v30, v21, type metadata accessor for Proto_NeuralNetwork);
    }
    sub_240C35540(v21, v25, type metadata accessor for Proto_NeuralNetwork);
    v34 = 0;
  }
  v38 = OUTLINED_FUNCTION_6_4();
  __swift_storeEnumTagSinglePayload(v25, v34, 1, v38);
  OUTLINED_FUNCTION_1();
}

void sub_240C34F48(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C4E0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C02F94(a1, (uint64_t)v4, &qword_25708C4E0);
  NeuralNetwork.Layer.BranchParameters.elseBranch.setter((uint64_t)v4);
}

void NeuralNetwork.Layer.BranchParameters.elseBranch.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_9_6();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C4E0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = OUTLINED_FUNCTION_6_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v11 = OUTLINED_FUNCTION_16_6();
  sub_240C02F94(v11, (uint64_t)v8, &qword_25708C4E0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9) == 1)
  {
    OUTLINED_FUNCTION_13_5((uint64_t)v8);
    v12 = OUTLINED_FUNCTION_2_5();
    v13 = v1 + *(int *)(v12 + 24);
    OUTLINED_FUNCTION_37(v12, &qword_25708BD18);
    OUTLINED_FUNCTION_71(v13, 1);
    OUTLINED_FUNCTION_13_5(a1);
  }
  else
  {
    sub_240C35540((uint64_t)v8, v3, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
    sub_240C355AC(v3, v2, type metadata accessor for Proto_NeuralNetwork);
    v14 = OUTLINED_FUNCTION_2_5();
    v15 = v1 + *(int *)(v14 + 24);
    OUTLINED_FUNCTION_37(v14, &qword_25708BD18);
    sub_240C35540(v2, v15, type metadata accessor for Proto_NeuralNetwork);
    OUTLINED_FUNCTION_71(v15, 0);
    sub_240BE0B68(a1, &qword_25708C4E0);
    sub_240BE10B8(v3, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
  }
}

#error "240C351C4: call analysis failed (funcsize=35)"

void sub_240C351E4(uint64_t **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = *a1;
  v3 = (void *)(*a1)[6];
  v4 = (void *)(*a1)[7];
  if ((a2 & 1) != 0)
  {
    v6 = (void *)v2[4];
    v5 = (void *)v2[5];
    v7 = (void *)v2[2];
    sub_240C02F94((*a1)[7], (uint64_t)v5, &qword_25708C4E0);
    NeuralNetwork.Layer.BranchParameters.elseBranch.setter((uint64_t)v5);
    sub_240BE0B68((uint64_t)v4, &qword_25708C4E0);
  }
  else
  {
    v8 = v2[3];
    sub_240C02F94((*a1)[7], (uint64_t)v3, &qword_25708C4E0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v3, 1, v8);
    v10 = v2[6];
    v11 = v2[7];
    if (EnumTagSinglePayload == 1)
    {
      v12 = *v2;
      OUTLINED_FUNCTION_13_5(v10);
      v13 = v12 + *(int *)(OUTLINED_FUNCTION_2_5() + 24);
      sub_240BE0B68(v13, &qword_25708BD18);
      OUTLINED_FUNCTION_71(v13, 1);
      OUTLINED_FUNCTION_13_5(v11);
    }
    else
    {
      v14 = v2[4];
      v16 = v2[1];
      v15 = v2[2];
      v17 = *v2;
      sub_240C35540(v10, v14, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork);
      sub_240C355AC(v14, v15, type metadata accessor for Proto_NeuralNetwork);
      v18 = OUTLINED_FUNCTION_2_5();
      v19 = v17 + *(int *)(v18 + 24);
      OUTLINED_FUNCTION_219(v18, &qword_25708BD18);
      sub_240C35540(v15, v19, type metadata accessor for Proto_NeuralNetwork);
      v20 = __swift_storeEnumTagSinglePayload(v19, 0, 1, v16);
      OUTLINED_FUNCTION_37(v20, &qword_25708C4E0);
      OUTLINED_FUNCTION_25_4(v14);
    }
    v3 = (void *)v2[6];
    v4 = (void *)v2[7];
    v6 = (void *)v2[4];
    v5 = (void *)v2[5];
    v7 = (void *)v2[2];
  }
  free(v4);
  free(v3);
  free(v5);
  free(v6);
  free(v7);
  free(v2);
}

#error "240C354D8: call analysis failed (funcsize=93)"

void sub_240C35540(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v5 = OUTLINED_FUNCTION_41(a1, a2, a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 32))(v3, v4, v5);
  OUTLINED_FUNCTION_44();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BranchParameters()
{
  uint64_t result;

  result = qword_25708C4F0;
  if (!qword_25708C4F0)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240C355AC(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_41(a1, a2, a3);
  OUTLINED_FUNCTION_201(v3);
  OUTLINED_FUNCTION_44();
}

unint64_t sub_240C355D0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C4E8;
  if (!qword_25708C4E8)
  {
    v1 = type metadata accessor for Proto_BranchLayerParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4EBCC, v1);
    atomic_store(result, (unint64_t *)&qword_25708C4E8);
  }
  return result;
}

void sub_240C35610(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.BranchParameters.ifBranch.getter(a1);
}

#error "240C35644: call analysis failed (funcsize=8)"

uint64_t *_s16BranchParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t *, uint64_t *, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(uint64_t *, uint64_t *, uint64_t);
  char *v20;
  char *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t updated;
  uint64_t v26;
  uint64_t v27;
  _QWORD *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v41;

  v4 = type metadata accessor for Proto_BranchLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    v9 = *(int *)(v6 + 20);
    v10 = (uint64_t *)((char *)a1 + v9);
    v11 = (uint64_t *)((char *)a2 + v9);
    v12 = type metadata accessor for Proto_NeuralNetwork(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v11, 1, v12))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
      memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      v15 = v11[1];
      *v10 = *v11;
      v10[1] = v15;
      v10[2] = v11[2];
      *((_BYTE *)v10 + 24) = *((_BYTE *)v11 + 24);
      v10[4] = v11[4];
      *((_BYTE *)v10 + 40) = *((_BYTE *)v11 + 40);
      v16 = *(int *)(v12 + 32);
      v17 = (char *)v10 + v16;
      v41 = v12;
      v18 = v7;
      v19 = v8;
      v20 = (char *)v11 + v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v21 = v20;
      v8 = v19;
      v7 = v18;
      v12 = v41;
      v8((uint64_t *)v17, (uint64_t *)v21, v7);
      v22 = *(int *)(v41 + 36);
      v23 = (char *)v10 + v22;
      v24 = (char *)v11 + v22;
      updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, updated))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v23, (uint64_t *)v24, v7);
        *(_QWORD *)&v23[*(int *)(updated + 20)] = *(_QWORD *)&v24[*(int *)(updated + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, updated);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v10, 0, 1, v41);
    }
    v27 = *(int *)(v6 + 24);
    v28 = (uint64_t *)((char *)a1 + v27);
    v29 = (uint64_t *)((char *)a2 + v27);
    if (__swift_getEnumTagSinglePayload((uint64_t)v29, 1, v12))
    {
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
      memcpy(v28, v29, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
    }
    else
    {
      v31 = v29[1];
      *v28 = *v29;
      v28[1] = v31;
      v28[2] = v29[2];
      *((_BYTE *)v28 + 24) = *((_BYTE *)v29 + 24);
      v28[4] = v29[4];
      *((_BYTE *)v28 + 40) = *((_BYTE *)v29 + 40);
      v32 = *(int *)(v12 + 32);
      v33 = (char *)v28 + v32;
      v34 = (char *)v29 + v32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v8((uint64_t *)v33, (uint64_t *)v34, v7);
      v35 = *(int *)(v12 + 36);
      v36 = (char *)v28 + v35;
      v37 = (char *)v29 + v35;
      v38 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v8((uint64_t *)v36, (uint64_t *)v37, v7);
        *(_QWORD *)&v36[*(int *)(v38 + 20)] = *(_QWORD *)&v37[*(int *)(v38 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
      }
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 0, 1, v12);
    }
  }
  return a1;
}

uint64_t _s16BranchParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t updated;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_240F1C930();
  v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
  v3(a1, v2);
  v4 = type metadata accessor for Proto_BranchLayerParams(0);
  v5 = a1 + *(int *)(v4 + 20);
  v6 = type metadata accessor for Proto_NeuralNetwork(0);
  if (!__swift_getEnumTagSinglePayload(v5, 1, v6))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3(v5 + *(int *)(v6 + 32), v2);
    v7 = v5 + *(int *)(v6 + 36);
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (!__swift_getEnumTagSinglePayload(v7, 1, updated))
    {
      v3(v7, v2);
      swift_release();
    }
  }
  v9 = a1 + *(int *)(v4 + 24);
  result = __swift_getEnumTagSinglePayload(v9, 1, v6);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3(v9 + *(int *)(v6 + 32), v2);
    v11 = v9 + *(int *)(v6 + 36);
    v12 = type metadata accessor for Proto_NetworkUpdateParameters(0);
    result = __swift_getEnumTagSinglePayload(v11, 1, v12);
    if (!(_DWORD)result)
    {
      v3(v11, v2);
      return swift_release();
    }
  }
  return result;
}

uint64_t _s16BranchParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(uint64_t, uint64_t, uint64_t);
  char *v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t updated;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;

  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16);
  v5(a1, a2, v4);
  v6 = type metadata accessor for Proto_BranchLayerParams(0);
  v7 = *(int *)(v6 + 20);
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_NeuralNetwork(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    v37 = a1;
    v12 = v9[1];
    *v8 = *v9;
    v8[1] = v12;
    v8[2] = v9[2];
    *((_BYTE *)v8 + 24) = *((_BYTE *)v9 + 24);
    v8[4] = v9[4];
    *((_BYTE *)v8 + 40) = *((_BYTE *)v9 + 40);
    v13 = *(int *)(v10 + 32);
    v14 = (char *)v8 + v13;
    v15 = v5;
    v16 = (char *)v9 + v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v17 = v16;
    v5 = v15;
    v15((uint64_t)v14, (uint64_t)v17, v4);
    v18 = *(int *)(v10 + 36);
    v19 = (char *)v8 + v18;
    v20 = (char *)v9 + v18;
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v20, 1, updated))
    {
      v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    }
    else
    {
      v15((uint64_t)v19, (uint64_t)v20, v4);
      *(_QWORD *)&v19[*(int *)(updated + 20)] = *(_QWORD *)&v20[*(int *)(updated + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v19, 0, 1, updated);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    a1 = v37;
  }
  v23 = *(int *)(v6 + 24);
  v24 = (_QWORD *)(a1 + v23);
  v25 = (_QWORD *)(a2 + v23);
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v10))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v24, v25, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = v25[1];
    *v24 = *v25;
    v24[1] = v27;
    v24[2] = v25[2];
    *((_BYTE *)v24 + 24) = *((_BYTE *)v25 + 24);
    v24[4] = v25[4];
    *((_BYTE *)v24 + 40) = *((_BYTE *)v25 + 40);
    v28 = *(int *)(v10 + 32);
    v29 = (char *)v24 + v28;
    v30 = (char *)v25 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5((uint64_t)v29, (uint64_t)v30, v4);
    v31 = *(int *)(v10 + 36);
    v32 = (char *)v24 + v31;
    v33 = (char *)v25 + v31;
    v34 = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v33, 1, v34))
    {
      v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
    }
    else
    {
      v5((uint64_t)v32, (uint64_t)v33, v4);
      *(_QWORD *)&v32[*(int *)(v34 + 20)] = *(_QWORD *)&v33[*(int *)(v34 + 20)];
      swift_retain();
      __swift_storeEnumTagSinglePayload((uint64_t)v32, 0, 1, v34);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v10);
  }
  return a1;
}

uint64_t _s16BranchParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(uint64_t, uint64_t, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t updated;
  int v32;
  int v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  void (*v45)(uint64_t, char *, uint64_t);
  uint64_t v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  size_t v51;
  void *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v63;
  uint64_t v64;
  void (*v65)(uint64_t, uint64_t, uint64_t);
  void (*v66)(uint64_t, uint64_t, uint64_t);

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24);
  v6(a1, a2, v4);
  v7 = type metadata accessor for Proto_BranchLayerParams(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Proto_NeuralNetwork(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload(v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      sub_240BE10B8(v9, type metadata accessor for Proto_NeuralNetwork);
      goto LABEL_7;
    }
    *(_QWORD *)v9 = *(_QWORD *)v10;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v26 = *(_QWORD *)(v10 + 16);
    *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
    *(_QWORD *)(v9 + 16) = v26;
    v27 = *(_QWORD *)(v10 + 32);
    *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
    *(_QWORD *)(v9 + 32) = v27;
    v66 = v6;
    v6(v9 + *(int *)(v11 + 32), v10 + *(int *)(v11 + 32), v4);
    v28 = *(int *)(v11 + 36);
    v29 = (char *)(v9 + v28);
    v30 = (char *)(v10 + v28);
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    v32 = __swift_getEnumTagSinglePayload((uint64_t)v29, 1, updated);
    v33 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, updated);
    if (v32)
    {
      if (!v33)
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v29, v30, v4);
        *(_QWORD *)&v29[*(int *)(updated + 20)] = *(_QWORD *)&v30[*(int *)(updated + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v29, 0, 1, updated);
LABEL_16:
        v6 = v66;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v33)
      {
        v6 = v66;
        v66((uint64_t)v29, (uint64_t)v30, v4);
        *(_QWORD *)&v29[*(int *)(updated + 20)] = *(_QWORD *)&v30[*(int *)(updated + 20)];
        swift_retain();
        swift_release();
        goto LABEL_17;
      }
      sub_240BE10B8((uint64_t)v29, type metadata accessor for Proto_NetworkUpdateParameters);
    }
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy((void *)v9, (const void *)v10, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    goto LABEL_17;
  }
  v64 = a1;
  v65 = v6;
  *(_QWORD *)v9 = *(_QWORD *)v10;
  *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
  v14 = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  *(_QWORD *)(v9 + 16) = v14;
  v15 = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  *(_QWORD *)(v9 + 32) = v15;
  v16 = *(int *)(v11 + 32);
  v17 = v9 + v16;
  v18 = v10 + v16;
  v63 = v5;
  v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v19(v17, v18, v4);
  v20 = *(int *)(v11 + 36);
  v21 = (char *)(v9 + v20);
  v22 = (char *)(v10 + v20);
  v23 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v23))
  {
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
  }
  else
  {
    v19((uint64_t)v21, (uint64_t)v22, v4);
    *(_QWORD *)&v21[*(int *)(v23 + 20)] = *(_QWORD *)&v22[*(int *)(v23 + 20)];
    swift_retain();
    __swift_storeEnumTagSinglePayload((uint64_t)v21, 0, 1, v23);
  }
  a1 = v64;
  v6 = v65;
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v11);
  v5 = v63;
LABEL_17:
  v35 = *(int *)(v7 + 24);
  v36 = a1 + v35;
  v37 = (char *)(a2 + v35);
  v38 = __swift_getEnumTagSinglePayload(a1 + v35, 1, v11);
  v39 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v11);
  if (v38)
  {
    if (!v39)
    {
      *(_QWORD *)v36 = *(_QWORD *)v37;
      *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
      v40 = *((_QWORD *)v37 + 2);
      *(_BYTE *)(v36 + 24) = v37[24];
      *(_QWORD *)(v36 + 16) = v40;
      v41 = *((_QWORD *)v37 + 4);
      *(_BYTE *)(v36 + 40) = v37[40];
      *(_QWORD *)(v36 + 32) = v41;
      v42 = *(int *)(v11 + 32);
      v43 = v36 + v42;
      v44 = &v37[v42];
      v45 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v45(v43, v44, v4);
      v46 = *(int *)(v11 + 36);
      v47 = (char *)(v36 + v46);
      v48 = &v37[v46];
      v49 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v48, 1, v49))
      {
        v50 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v47, v48, *(_QWORD *)(*(_QWORD *)(v50 - 8) + 64));
      }
      else
      {
        v45((uint64_t)v47, v48, v4);
        *(_QWORD *)&v47[*(int *)(v49 + 20)] = *(_QWORD *)&v48[*(int *)(v49 + 20)];
        swift_retain();
        __swift_storeEnumTagSinglePayload((uint64_t)v47, 0, 1, v49);
      }
      v60 = v36;
      v61 = v11;
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  if (v39)
  {
    sub_240BE10B8(v36, type metadata accessor for Proto_NeuralNetwork);
LABEL_23:
    v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18) - 8) + 64);
    v52 = (void *)v36;
    goto LABEL_24;
  }
  *(_QWORD *)v36 = *(_QWORD *)v37;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v36 + 8) = *((_QWORD *)v37 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v53 = *((_QWORD *)v37 + 2);
  *(_BYTE *)(v36 + 24) = v37[24];
  *(_QWORD *)(v36 + 16) = v53;
  v54 = *((_QWORD *)v37 + 4);
  *(_BYTE *)(v36 + 40) = v37[40];
  *(_QWORD *)(v36 + 32) = v54;
  v6(v36 + *(int *)(v11 + 32), (uint64_t)&v37[*(int *)(v11 + 32)], v4);
  v55 = *(int *)(v11 + 36);
  v56 = v36 + v55;
  v37 += v55;
  v57 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  v58 = __swift_getEnumTagSinglePayload(v56, 1, v57);
  v59 = __swift_getEnumTagSinglePayload((uint64_t)v37, 1, v57);
  if (v58)
  {
    if (!v59)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v56, v37, v4);
      *(_QWORD *)(v56 + *(int *)(v57 + 20)) = *(_QWORD *)&v37[*(int *)(v57 + 20)];
      swift_retain();
      v60 = v56;
      v61 = v57;
LABEL_30:
      __swift_storeEnumTagSinglePayload(v60, 0, 1, v61);
      return a1;
    }
  }
  else
  {
    if (!v59)
    {
      v6(v56, (uint64_t)v37, v4);
      *(_QWORD *)(v56 + *(int *)(v57 + 20)) = *(_QWORD *)&v37[*(int *)(v57 + 20)];
      swift_retain();
      swift_release();
      return a1;
    }
    sub_240BE10B8(v56, type metadata accessor for Proto_NetworkUpdateParameters);
  }
  v51 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10) - 8) + 64);
  v52 = (void *)v56;
LABEL_24:
  memcpy(v52, v37, v51);
  return a1;
}

uint64_t _s16BranchParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t, uint64_t);
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  _OWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t updated;
  uint64_t v16;
  uint64_t v17;
  _OWORD *v18;
  _OWORD *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;

  v4 = sub_240F1C930();
  v5 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32);
  v5(a1, a2, v4);
  v6 = type metadata accessor for Proto_BranchLayerParams(0);
  v7 = *(int *)(v6 + 20);
  v8 = (_OWORD *)(a1 + v7);
  v9 = (_OWORD *)(a2 + v7);
  v10 = type metadata accessor for Proto_NeuralNetwork(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    *v8 = *v9;
    *((_QWORD *)v8 + 2) = *((_QWORD *)v9 + 2);
    *((_BYTE *)v8 + 24) = *((_BYTE *)v9 + 24);
    *((_QWORD *)v8 + 4) = *((_QWORD *)v9 + 4);
    *((_BYTE *)v8 + 40) = *((_BYTE *)v9 + 40);
    v5((uint64_t)v8 + *(int *)(v10 + 32), (uint64_t)v9 + *(int *)(v10 + 32), v4);
    v12 = *(int *)(v10 + 36);
    v13 = (char *)v8 + v12;
    v14 = (char *)v9 + v12;
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, updated))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v5((uint64_t)v13, (uint64_t)v14, v4);
      *(_QWORD *)&v13[*(int *)(updated + 20)] = *(_QWORD *)&v14[*(int *)(updated + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, updated);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
  }
  v17 = *(int *)(v6 + 24);
  v18 = (_OWORD *)(a1 + v17);
  v19 = (_OWORD *)(a2 + v17);
  if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v10))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    *v18 = *v19;
    *((_QWORD *)v18 + 2) = *((_QWORD *)v19 + 2);
    *((_BYTE *)v18 + 24) = *((_BYTE *)v19 + 24);
    *((_QWORD *)v18 + 4) = *((_QWORD *)v19 + 4);
    *((_BYTE *)v18 + 40) = *((_BYTE *)v19 + 40);
    v5((uint64_t)v18 + *(int *)(v10 + 32), (uint64_t)v19 + *(int *)(v10 + 32), v4);
    v21 = *(int *)(v10 + 36);
    v22 = (char *)v18 + v21;
    v23 = (char *)v19 + v21;
    v24 = type metadata accessor for Proto_NetworkUpdateParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
      memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v5((uint64_t)v22, (uint64_t)v23, v4);
      *(_QWORD *)&v22[*(int *)(v24 + 20)] = *(_QWORD *)&v23[*(int *)(v24 + 20)];
      __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
    }
    __swift_storeEnumTagSinglePayload((uint64_t)v18, 0, 1, v10);
  }
  return a1;
}

uint64_t _s16BranchParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int EnumTagSinglePayload;
  int v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t updated;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  int v31;
  int v32;
  void (*v33)(uint64_t, char *, uint64_t);
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v49;
  void (*v50)(uint64_t, uint64_t, uint64_t);
  void (*v51)(uint64_t, uint64_t, uint64_t);

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40);
  v6(a1, a2, v4);
  v7 = type metadata accessor for Proto_BranchLayerParams(0);
  v8 = *(int *)(v7 + 20);
  v9 = a1 + v8;
  v10 = a2 + v8;
  v11 = type metadata accessor for Proto_NeuralNetwork(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v9, 1, v11);
  v13 = __swift_getEnumTagSinglePayload(v10, 1, v11);
  if (!EnumTagSinglePayload)
  {
    if (v13)
    {
      sub_240BE10B8(v9, type metadata accessor for Proto_NeuralNetwork);
      goto LABEL_7;
    }
    *(_QWORD *)v9 = *(_QWORD *)v10;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 8) = *(_QWORD *)(v10 + 8);
    swift_bridgeObjectRelease();
    *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
    *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
    *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
    *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
    v51 = v6;
    v6(v9 + *(int *)(v11 + 32), v10 + *(int *)(v11 + 32), v4);
    v21 = *(int *)(v11 + 36);
    v22 = (char *)(v9 + v21);
    v23 = (char *)(v10 + v21);
    updated = type metadata accessor for Proto_NetworkUpdateParameters(0);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v22, 1, updated);
    v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, updated);
    if (v25)
    {
      if (!v26)
      {
        (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v22, v23, v4);
        *(_QWORD *)&v22[*(int *)(updated + 20)] = *(_QWORD *)&v23[*(int *)(updated + 20)];
        __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, updated);
LABEL_16:
        v6 = v51;
        goto LABEL_17;
      }
    }
    else
    {
      if (!v26)
      {
        v6 = v51;
        v51((uint64_t)v22, (uint64_t)v23, v4);
        *(_QWORD *)&v22[*(int *)(updated + 20)] = *(_QWORD *)&v23[*(int *)(updated + 20)];
        swift_release();
        goto LABEL_17;
      }
      sub_240BE10B8((uint64_t)v22, type metadata accessor for Proto_NetworkUpdateParameters);
    }
    v27 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v27 - 8) + 64));
    goto LABEL_16;
  }
  if (v13)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18);
    memcpy((void *)v9, (const void *)v10, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    goto LABEL_17;
  }
  v49 = v5;
  v50 = v6;
  *(_OWORD *)v9 = *(_OWORD *)v10;
  *(_QWORD *)(v9 + 16) = *(_QWORD *)(v10 + 16);
  *(_BYTE *)(v9 + 24) = *(_BYTE *)(v10 + 24);
  *(_QWORD *)(v9 + 32) = *(_QWORD *)(v10 + 32);
  *(_BYTE *)(v9 + 40) = *(_BYTE *)(v10 + 40);
  v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v14(v9 + *(int *)(v11 + 32), v10 + *(int *)(v11 + 32), v4);
  v15 = *(int *)(v11 + 36);
  v16 = (char *)(v9 + v15);
  v17 = (char *)(v10 + v15);
  v18 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v14((uint64_t)v16, (uint64_t)v17, v4);
    *(_QWORD *)&v16[*(int *)(v18 + 20)] = *(_QWORD *)&v17[*(int *)(v18 + 20)];
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v6 = v50;
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v11);
  v5 = v49;
LABEL_17:
  v28 = *(int *)(v7 + 24);
  v29 = a1 + v28;
  v30 = (char *)(a2 + v28);
  v31 = __swift_getEnumTagSinglePayload(a1 + v28, 1, v11);
  v32 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v11);
  if (v31)
  {
    if (!v32)
    {
      *(_OWORD *)v29 = *(_OWORD *)v30;
      *(_QWORD *)(v29 + 16) = *((_QWORD *)v30 + 2);
      *(_BYTE *)(v29 + 24) = v30[24];
      *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
      *(_BYTE *)(v29 + 40) = v30[40];
      v33 = *(void (**)(uint64_t, char *, uint64_t))(v5 + 32);
      v33(v29 + *(int *)(v11 + 32), &v30[*(int *)(v11 + 32)], v4);
      v34 = *(int *)(v11 + 36);
      v35 = (char *)(v29 + v34);
      v36 = &v30[v34];
      v37 = type metadata accessor for Proto_NetworkUpdateParameters(0);
      if (__swift_getEnumTagSinglePayload((uint64_t)v36, 1, v37))
      {
        v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10);
        memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
      }
      else
      {
        v33((uint64_t)v35, v36, v4);
        *(_QWORD *)&v35[*(int *)(v37 + 20)] = *(_QWORD *)&v36[*(int *)(v37 + 20)];
        __swift_storeEnumTagSinglePayload((uint64_t)v35, 0, 1, v37);
      }
      v46 = v29;
      v47 = v11;
      goto LABEL_30;
    }
    goto LABEL_23;
  }
  if (v32)
  {
    sub_240BE10B8(v29, type metadata accessor for Proto_NeuralNetwork);
LABEL_23:
    v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD18) - 8) + 64);
    v40 = (void *)v29;
    goto LABEL_24;
  }
  *(_QWORD *)v29 = *(_QWORD *)v30;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 8) = *((_QWORD *)v30 + 1);
  swift_bridgeObjectRelease();
  *(_QWORD *)(v29 + 16) = *((_QWORD *)v30 + 2);
  *(_BYTE *)(v29 + 24) = v30[24];
  *(_QWORD *)(v29 + 32) = *((_QWORD *)v30 + 4);
  *(_BYTE *)(v29 + 40) = v30[40];
  v6(v29 + *(int *)(v11 + 32), (uint64_t)&v30[*(int *)(v11 + 32)], v4);
  v41 = *(int *)(v11 + 36);
  v42 = v29 + v41;
  v30 += v41;
  v43 = type metadata accessor for Proto_NetworkUpdateParameters(0);
  v44 = __swift_getEnumTagSinglePayload(v42, 1, v43);
  v45 = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v43);
  if (v44)
  {
    if (!v45)
    {
      (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(v42, v30, v4);
      *(_QWORD *)(v42 + *(int *)(v43 + 20)) = *(_QWORD *)&v30[*(int *)(v43 + 20)];
      v46 = v42;
      v47 = v43;
LABEL_30:
      __swift_storeEnumTagSinglePayload(v46, 0, 1, v47);
      return a1;
    }
  }
  else
  {
    if (!v45)
    {
      v6(v42, (uint64_t)v30, v4);
      *(_QWORD *)(v42 + *(int *)(v43 + 20)) = *(_QWORD *)&v30[*(int *)(v43 + 20)];
      swift_release();
      return a1;
    }
    sub_240BE10B8(v42, type metadata accessor for Proto_NetworkUpdateParameters);
  }
  v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BD10) - 8) + 64);
  v40 = (void *)v42;
LABEL_24:
  memcpy(v40, v30, v39);
  return a1;
}

uint64_t _s16BranchParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C36C0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_5();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s16BranchParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C36C48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_5();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C36C7C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_BranchLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_2_5()
{
  return type metadata accessor for Proto_BranchLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_4_6(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v1, 1, 1, a1);
}

uint64_t OUTLINED_FUNCTION_5_8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return type metadata accessor for NeuralNetwork();
}

uint64_t OUTLINED_FUNCTION_9_6()
{
  return type metadata accessor for Proto_NeuralNetwork(0);
}

void OUTLINED_FUNCTION_13_5(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_16_6()
{
  uint64_t v0;

  return v0;
}

void *OUTLINED_FUNCTION_17_5(uint64_t a1)
{
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_24_4(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

void OUTLINED_FUNCTION_25_4(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(a1, v1);
}

void OUTLINED_FUNCTION_26_1(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;

  sub_240C35540(v4, v3, a3);
}

void *OUTLINED_FUNCTION_27_3()
{
  return malloc(0x40uLL);
}

uint64_t OUTLINED_FUNCTION_28_3()
{
  return type metadata accessor for Proto_NetworkUpdateParameters(0);
}

void *OUTLINED_FUNCTION_29_3()
{
  size_t v0;

  return malloc(v0);
}

uint64_t MLProgram.init(serializedData:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  _OWORD v8[2];
  uint64_t v9;

  v3 = sub_240F1C948();
  MEMORY[0x24BDAC7A8](v3);
  v4 = type metadata accessor for Proto_MILSpec_Program(0);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  sub_240F1C93C();
  sub_240C36E98();
  result = sub_240F1CAE0();
  if (!v1)
    return sub_240C36ED8((uint64_t)v6, a1);
  return result;
}

unint64_t sub_240C36E98()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C500;
  if (!qword_25708C500)
  {
    v1 = type metadata accessor for Proto_MILSpec_Program(255);
    result = MEMORY[0x24268C2AC](&unk_240F320C0, v1);
    atomic_store(result, (unint64_t *)&qword_25708C500);
  }
  return result;
}

uint64_t sub_240C36ED8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_MILSpec_Program(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t MLProgram.serialized()()
{
  type metadata accessor for Proto_MILSpec_Program(0);
  sub_240C36E98();
  return sub_240F1CAEC();
}

BOOL static NeuralNetwork.Layer.TransposeParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE0(*a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v11 = OUTLINED_FUNCTION_1_4();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.transpose(name:inputName:outputName:axes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v14 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = a3;
  *(_QWORD *)(v14 + 40) = a4;
  v15 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a5;
  *(_QWORD *)(v15 + 40) = a6;
  *v7 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  NeuralNetwork.Layer.TransposeParameters.axes.setter(a7);
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.transpose(axes:)@<X0>(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_4();
  OUTLINED_FUNCTION_315();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_6_5();
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.TransposeParameters.init(axes:)(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  OUTLINED_FUNCTION_1_4();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_6_5();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.TransposeParameters.axes.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  if (v2)
  {
    v6 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v3 = 0;
    while (1)
    {
      v4 = *(_QWORD *)(v1 + 8 * v3 + 32);
      if (v4 < 0)
        break;
      v5 = *(_QWORD *)(v6 + 16);
      if (v5 >= *(_QWORD *)(v6 + 24) >> 1)
        sub_240BF080C();
      ++v3;
      *(_QWORD *)(v6 + 16) = v5 + 1;
      *(_QWORD *)(v6 + 8 * v5 + 32) = v4;
      if (v2 == v3)
      {
        swift_bridgeObjectRelease();
        return;
      }
    }
    __break(1u);
  }
}

void sub_240C37330()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.TransposeParameters.axes.setter(v0);
}

void NeuralNetwork.Layer.TransposeParameters.axes.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *(_QWORD *)(a1 + 16);
  if (v4)
  {
    v9 = MEMORY[0x24BEE4AF8];
    sub_240BF0830();
    v5 = 0;
    v6 = v9;
    while (1)
    {
      v7 = *(_QWORD *)(a1 + 8 * v5 + 32);
      if (v7 < 0)
        break;
      v8 = *(_QWORD *)(v9 + 16);
      if (v8 >= *(_QWORD *)(v9 + 24) >> 1)
        sub_240BF0830();
      ++v5;
      *(_QWORD *)(v9 + 16) = v8 + 1;
      *(_QWORD *)(v9 + 8 * v8 + 32) = v7;
      if (v4 == v5)
      {
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    v6 = MEMORY[0x24BEE4AF8];
LABEL_9:
    swift_bridgeObjectRelease();
    *v2 = v6;
  }
}

void (*NeuralNetwork.Layer.TransposeParameters.axes.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[1] = v1;
  NeuralNetwork.Layer.TransposeParameters.axes.getter();
  *a1 = v3;
  return sub_240C37484;
}

void sub_240C37484(uint64_t a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.TransposeParameters.axes.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_6_5();
    OUTLINED_FUNCTION_44();
  }
}

void NeuralNetwork.Layer.TransposeParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.TransposeParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  sub_240C37660(v0, (uint64_t)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = 1936029793;
  *(_QWORD *)(v9 + 40) = 0xE400000000000000;
  NeuralNetwork.Layer.TransposeParameters.axes.getter();
  v11 = v10;
  *(_QWORD *)(v9 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v9 + 48) = v11;
  v12 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.TransposeParameters()
{
  uint64_t result;

  result = qword_25708C510;
  if (!qword_25708C510)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C37660(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.TransposeParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C376A4()
{
  return sub_240C30D44(&qword_25708C508, type metadata accessor for Proto_TransposeLayerParams, (uint64_t)&unk_240F4EB54);
}

void sub_240C376D0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  NeuralNetwork.Layer.TransposeParameters.axes.getter();
  *a1 = v2;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s19TransposeParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_TransposeLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s19TransposeParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s19TransposeParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s19TransposeParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s19TransposeParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s19TransposeParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_TransposeLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s19TransposeParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C379C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_4();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s19TransposeParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C379FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_4();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C37A30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_TransposeLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_4()
{
  return type metadata accessor for Proto_TransposeLayerParams(0);
}

void OUTLINED_FUNCTION_6_5()
{
  uint64_t v0;

  NeuralNetwork.Layer.TransposeParameters.axes.setter(v0);
}

uint64_t FeatureDescription.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *a1 = 0;
  a1[1] = 0xE000000000000000;
  a1[2] = 0;
  a1[3] = 0xE000000000000000;
  v2 = OUTLINED_FUNCTION_1_5();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v3 = (uint64_t)a1 + *(int *)(v2 + 28);
  v4 = OUTLINED_FUNCTION_7_8();
  return OUTLINED_FUNCTION_35(v3, 1, 1, v4);
}

void FeatureDescription.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

void FeatureDescription.type.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  sub_240CAA3E0();
  v9 = v2 + *(int *)(OUTLINED_FUNCTION_1_5() + 28);
  sub_240C3802C(v9);
  sub_240C3806C(v8, v9);
  __swift_storeEnumTagSinglePayload(v9, 0, 1, v4);
  sub_240BE27A0(a1, type metadata accessor for FeatureType);
  OUTLINED_FUNCTION_156();
}

void FeatureDescription.name.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_44();
}

void sub_240C37BE0(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  FeatureDescription.name.setter(v1, v2);
}

void FeatureDescription.name.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void FeatureDescription.type.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v4 = OUTLINED_FUNCTION_60();
  v5 = type metadata accessor for Proto_FeatureType(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_80();
  v7 = OUTLINED_FUNCTION_1_5();
  sub_240C384A0(v0 + *(int *)(v7 + 28), v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    v8 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
    __swift_storeEnumTagSinglePayload(v1, 1, 1, v8);
    *(_BYTE *)(v1 + *(int *)(v5 + 20)) = 0;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240C3802C(v2);
  }
  else
  {
    sub_240C3806C(v2, v1);
  }
  sub_240CA9F8C();
}

void sub_240C37D40(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for FeatureType(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C38520(a1, (uint64_t)v4, v5);
  FeatureDescription.type.setter((uint64_t)v4);
}

void (*FeatureDescription.type.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;

  v3 = malloc(0x28uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_7_8();
  v3[1] = v4;
  v3[2] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for FeatureType(0) - 8) + 64);
  v3[3] = malloc(v5);
  v3[4] = malloc(v5);
  FeatureDescription.type.getter();
  return sub_240C37E4C;
}

void sub_240C37E4C(uint64_t a1, char a2)
{
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(void **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 24);
  v4 = *(void **)(*(_QWORD *)a1 + 32);
  v5 = *(void **)(*(_QWORD *)a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240C38520(*(_QWORD *)(*(_QWORD *)a1 + 32), (uint64_t)v3, type metadata accessor for FeatureType);
    sub_240CAA3E0();
    v6 = OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_10_7(v6);
    OUTLINED_FUNCTION_17_6();
    OUTLINED_FUNCTION_8_5();
    sub_240BE27A0((uint64_t)v3, type metadata accessor for FeatureType);
  }
  else
  {
    sub_240CAA3E0();
    v7 = OUTLINED_FUNCTION_1_5();
    OUTLINED_FUNCTION_10_7(v7);
    OUTLINED_FUNCTION_17_6();
    OUTLINED_FUNCTION_8_5();
  }
  sub_240BE27A0((uint64_t)v4, type metadata accessor for FeatureType);
  free(v4);
  free(v3);
  free(v5);
  free(v2);
}

void FeatureDescription.featureDescription.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_44();
}

void sub_240C37F40(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  FeatureDescription.featureDescription.setter(v1, v2);
}

void FeatureDescription.featureDescription.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_156();
}

void FeatureDescription.featureDescription.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C37FE0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    OUTLINED_FUNCTION_156();
  }
}

uint64_t sub_240C3802C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240C3806C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_FeatureType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void FeatureDescription.init(name:type:description:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, _QWORD *a6@<X8>)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_7_8();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24_1();
  v15 = v14 - v13;
  a6[2] = 0;
  a6[3] = 0xE000000000000000;
  v16 = OUTLINED_FUNCTION_1_5();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v17 = (uint64_t)a6 + *(int *)(v16 + 28);
  OUTLINED_FUNCTION_5_8(v17, 1);
  *a6 = a1;
  a6[1] = a2;
  sub_240CAA3E0();
  sub_240C3802C(v17);
  sub_240C3806C(v15, v17);
  OUTLINED_FUNCTION_5_8(v17, 0);
  sub_240BE27A0(a3, type metadata accessor for FeatureType);
  swift_bridgeObjectRelease();
  a6[2] = a4;
  a6[3] = a5;
  OUTLINED_FUNCTION_1();
}

uint64_t FeatureDescription.hash(into:)()
{
  OUTLINED_FUNCTION_1_5();
  sub_240BE18B8(&qword_25708C520, type metadata accessor for Proto_FeatureDescription, (uint64_t)&unk_240F33FB4);
  return sub_240F1CC54();
}

uint64_t FeatureDescription.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_1_5();
  sub_240BE18B8(&qword_25708C520, type metadata accessor for Proto_FeatureDescription, (uint64_t)&unk_240F33FB4);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C38254()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_FeatureDescription(0);
  sub_240BE18B8(&qword_25708C520, type metadata accessor for Proto_FeatureDescription, (uint64_t)&unk_240F33FB4);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void FeatureDescription.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v16 = sub_240F1CF90();
  v3 = *(_QWORD *)(v16 - 8);
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_60();
  type metadata accessor for FeatureDescription();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  sub_240C38520((uint64_t)v0, v7 - v6, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = swift_allocObject();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v9 + 32) = 1701667182;
  *(_QWORD *)(v9 + 40) = 0xE400000000000000;
  v10 = v0[1];
  v11 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v9 + 48) = *v0;
  *(_QWORD *)(v9 + 56) = v10;
  *(_QWORD *)(v9 + 72) = v11;
  *(_QWORD *)(v9 + 80) = 1701869940;
  *(_QWORD *)(v9 + 88) = 0xE400000000000000;
  *(_QWORD *)(v9 + 120) = type metadata accessor for FeatureType(0);
  __swift_allocate_boxed_opaque_existential_0((uint64_t *)(v9 + 96));
  swift_bridgeObjectRetain();
  FeatureDescription.type.getter();
  *(_QWORD *)(v9 + 128) = 0xD000000000000012;
  *(_QWORD *)(v9 + 136) = 0x8000000240F52110;
  v12 = v0[2];
  v13 = v0[3];
  *(_QWORD *)(v9 + 168) = v11;
  *(_QWORD *)(v9 + 144) = v12;
  *(_QWORD *)(v9 + 152) = v13;
  v14 = *MEMORY[0x24BEE4388];
  v15 = sub_240F1CF84();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 104))(v2, v14, v15);
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v15);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BEE43C0], v16);
  OUTLINED_FUNCTION_329();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C384A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for FeatureDescription()
{
  uint64_t result;

  result = qword_25435FB90;
  if (!qword_25435FB90)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240C38520(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  OUTLINED_FUNCTION_44();
}

void sub_240C38560()
{
  sub_240BE18B8(&qword_25708C528, (uint64_t (*)(uint64_t))type metadata accessor for FeatureDescription, (uint64_t)&protocol conformance descriptor for FeatureDescription);
}

void sub_240C3858C()
{
  sub_240BE18B8(&qword_25435FFC8, type metadata accessor for Proto_FeatureDescription, (uint64_t)&unk_240F33E44);
}

void sub_240C385B8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FeatureDescription.name.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C385E0()
{
  FeatureDescription.type.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C38600(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  FeatureDescription.featureDescription.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for FeatureDescription(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;

  v4 = type metadata accessor for Proto_FeatureDescription(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[3];
    a1[2] = a2[2];
    a1[3] = v8;
    v9 = *(int *)(v4 + 24);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
    v14 = *(int *)(v6 + 28);
    v15 = (char *)a1 + v14;
    v16 = (char *)a2 + v14;
    v17 = type metadata accessor for Proto_FeatureType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v17))
    {
      v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    }
    else
    {
      v20 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v16, 1, v20))
      {
        v22 = (char *)&loc_240C38798 + 4 * byte_240F1F890[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
      memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      v15[*(int *)(v17 + 20)] = v16[*(int *)(v17 + 20)];
      v13(&v15[*(int *)(v17 + 24)], &v16[*(int *)(v17 + 24)], v12);
      __swift_storeEnumTagSinglePayload((uint64_t)v15, 0, 1, v17);
    }
  }
  return a1;
}

uint64_t destroy for FeatureDescription(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  int EnumCaseMultiPayload;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_FeatureDescription(0);
  v3 = a1 + *(int *)(v2 + 24);
  v4 = sub_240F1C930();
  v33 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v33(v3, v4);
  v5 = a1 + *(int *)(v2 + 28);
  v6 = type metadata accessor for Proto_FeatureType(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
  {
    v8 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
    if (!__swift_getEnumTagSinglePayload(v5, 1, v8))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
        case 1u:
        case 2u:
          v9 = v5;
          goto LABEL_36;
        case 3u:
          v10 = type metadata accessor for Proto_ImageFeatureType(0);
          v11 = v5 + *(int *)(v10 + 24);
          v12 = type metadata accessor for Proto_ImageFeatureType.OneOf_SizeFlexibility(0);
          if (__swift_getEnumTagSinglePayload(v11, 1, v12))
            goto LABEL_29;
          if (swift_getEnumCaseMultiPayload() != 1)
          {
            swift_bridgeObjectRelease();
            v19 = type metadata accessor for Proto_ImageFeatureType.EnumeratedImageSizes(0);
LABEL_27:
            v16 = *(int *)(v19 + 20);
            goto LABEL_28;
          }
          v33(v11, v4);
          v13 = type metadata accessor for Proto_ImageFeatureType.ImageSizeRange(0);
          v14 = v11 + *(int *)(v13 + 20);
          v15 = type metadata accessor for Proto_SizeRange(0);
          if (!__swift_getEnumTagSinglePayload(v14, 1, v15))
            v33(v14 + *(int *)(v15 + 24), v4);
          v11 += *(int *)(v13 + 24);
          if (!__swift_getEnumTagSinglePayload(v11, 1, v15))
          {
            v16 = *(int *)(v15 + 24);
LABEL_28:
            v33(v11 + v16, v4);
          }
LABEL_29:
          v32 = *(int *)(v10 + 32);
LABEL_35:
          v9 = v5 + v32;
LABEL_36:
          v33(v9, v4);
          break;
        case 4u:
          swift_bridgeObjectRelease();
          v10 = type metadata accessor for Proto_ArrayFeatureType(0);
          v11 = v5 + *(int *)(v10 + 24);
          v17 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
          if (__swift_getEnumTagSinglePayload(v11, 1, v17))
            goto LABEL_29;
          EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
          swift_bridgeObjectRelease();
          if (EnumCaseMultiPayload == 1)
            v19 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
          else
            v19 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
          goto LABEL_27;
        case 5u:
          v20 = type metadata accessor for Proto_DictionaryFeatureType.OneOf_KeyType(0);
          if (!__swift_getEnumTagSinglePayload(v5, 1, v20))
            v33(v5, v4);
          v21 = type metadata accessor for Proto_DictionaryFeatureType(0);
          goto LABEL_34;
        case 6u:
          v22 = type metadata accessor for Proto_SequenceFeatureType.OneOf_Type(0);
          if (!__swift_getEnumTagSinglePayload(v5, 1, v22))
            v33(v5, v4);
          v23 = type metadata accessor for Proto_SequenceFeatureType(0);
          v33(v5 + *(int *)(v23 + 20), v4);
          v24 = v5 + *(int *)(v23 + 24);
          v25 = type metadata accessor for Proto_SizeRange(0);
          if (__swift_getEnumTagSinglePayload(v24, 1, v25))
            return ((uint64_t (*)(uint64_t, uint64_t))v33)(v5 + *(int *)(v6 + 24), v4);
          v9 = v24 + *(int *)(v25 + 24);
          goto LABEL_36;
        case 7u:
          v26 = type metadata accessor for Proto_StateFeatureType.OneOf_Type(0);
          if (!__swift_getEnumTagSinglePayload(v5, 1, v26))
          {
            swift_bridgeObjectRelease();
            v27 = type metadata accessor for Proto_ArrayFeatureType(0);
            v28 = v5 + *(int *)(v27 + 24);
            v29 = type metadata accessor for Proto_ArrayFeatureType.OneOf_ShapeFlexibility(0);
            if (!__swift_getEnumTagSinglePayload(v28, 1, v29))
            {
              v30 = swift_getEnumCaseMultiPayload();
              swift_bridgeObjectRelease();
              if (v30 == 1)
                v31 = type metadata accessor for Proto_ArrayFeatureType.ShapeRange(0);
              else
                v31 = type metadata accessor for Proto_ArrayFeatureType.EnumeratedShapes(0);
              v33(v28 + *(int *)(v31 + 20), v4);
            }
            v33(v5 + *(int *)(v27 + 32), v4);
          }
          v21 = type metadata accessor for Proto_StateFeatureType(0);
LABEL_34:
          v32 = *(int *)(v21 + 20);
          goto LABEL_35;
        default:
          return ((uint64_t (*)(uint64_t, uint64_t))v33)(v5 + *(int *)(v6 + 24), v4);
      }
    }
    return ((uint64_t (*)(_QWORD, _QWORD))v33)(v5 + *(int *)(v6 + 24), v4);
  }
  return result;
}

_QWORD *initializeWithCopy for FeatureDescription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = type metadata accessor for Proto_FeatureDescription(0);
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  v12 = *(int *)(v6 + 28);
  v13 = (char *)a1 + v12;
  v14 = (char *)a2 + v12;
  v15 = type metadata accessor for Proto_FeatureType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v17 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v17))
    {
      v19 = (char *)&loc_240C39478 + 4 * byte_240F1F8A0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
    v13[*(int *)(v15 + 20)] = v14[*(int *)(v15 + 20)];
    v11(&v13[*(int *)(v15 + 24)], &v14[*(int *)(v15 + 24)], v10);
    __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  }
  return a1;
}

_QWORD *assignWithCopy for FeatureDescription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  int v16;
  uint64_t v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v27;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_FeatureDescription(0);
  v5 = *(int *)(v4 + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_FeatureType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v14);
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14);
  if (!EnumTagSinglePayload)
  {
    if (v16)
    {
      sub_240BE27A0((uint64_t)v12, type metadata accessor for Proto_FeatureType);
      goto LABEL_7;
    }
    v21 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
    v22 = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v21);
    v23 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v21);
    if (v22)
    {
      if (!v23)
      {
        v24 = (char *)&loc_240C39DC4 + 4 * word_240F1F8B0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v23)
      {
        if (a1 != a2)
        {
          sub_240BE27A0((uint64_t)v12, type metadata accessor for Proto_FeatureType.OneOf_Type);
          v27 = (char *)&loc_240C39E88 + 4 * word_240F1F8C0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240BE27A0((uint64_t)v12, type metadata accessor for Proto_FeatureType.OneOf_Type);
    }
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
LABEL_17:
    v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
    v10(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v8);
    return a1;
  }
  if (v16)
  {
LABEL_7:
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
    return a1;
  }
  v17 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v17))
  {
    v25 = (char *)&loc_240C39E00 + 4 * byte_240F1F8A8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
  memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v18 - 8) + 64));
  v19 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
  v19(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v8);
  __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  return a1;
}

_OWORD *initializeWithTake for FeatureDescription(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = type metadata accessor for Proto_FeatureDescription(0);
  v6 = *(int *)(v5 + 24);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 28);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = type metadata accessor for Proto_FeatureType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v16))
    {
      v18 = (char *)&loc_240C3B980 + 4 * byte_240F1F8D0[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    v12[*(int *)(v14 + 20)] = v13[*(int *)(v14 + 20)];
    v10(&v12[*(int *)(v14 + 24)], &v13[*(int *)(v14 + 24)], v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *assignWithTake for FeatureDescription(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  int v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  v6 = type metadata accessor for Proto_FeatureDescription(0);
  v7 = *(int *)(v6 + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(char *, char *, uint64_t))(v11 + 40);
  v12(v8, v9, v10);
  v13 = *(int *)(v6 + 28);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = type metadata accessor for Proto_FeatureType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  v18 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (!EnumTagSinglePayload)
  {
    if (v18)
    {
      sub_240BE27A0((uint64_t)v14, type metadata accessor for Proto_FeatureType);
      goto LABEL_7;
    }
    v23 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
    v24 = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v23);
    v25 = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v23);
    if (v24)
    {
      if (!v25)
      {
        v26 = (char *)&loc_240C3C240 + 4 * word_240F1F8E0[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v25)
      {
        if (a1 != a2)
        {
          sub_240BE27A0((uint64_t)v14, type metadata accessor for Proto_FeatureType.OneOf_Type);
          v29 = (char *)&loc_240C3C304 + 4 * word_240F1F8F0[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_17;
      }
      sub_240BE27A0((uint64_t)v14, type metadata accessor for Proto_FeatureType.OneOf_Type);
    }
    v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
LABEL_17:
    v14[*(int *)(v16 + 20)] = v15[*(int *)(v16 + 20)];
    v12(&v14[*(int *)(v16 + 24)], &v15[*(int *)(v16 + 24)], v10);
    return a1;
  }
  if (v18)
  {
LABEL_7:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB30);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  v19 = type metadata accessor for Proto_FeatureType.OneOf_Type(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v19))
  {
    v27 = (char *)&loc_240C3C27C + 4 * byte_240F1F8D8[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25435FB00);
  memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  v21 = *(void (**)(char *, char *, uint64_t))(v11 + 32);
  v14[*(int *)(v16 + 20)] = v15[*(int *)(v16 + 20)];
  v21(&v14[*(int *)(v16 + 24)], &v15[*(int *)(v16 + 24)], v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureDescription()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3DAC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_5();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for FeatureDescription()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3DB00(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_35(a1, a2, a2, v4);
}

uint64_t sub_240C3DB30()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_FeatureDescription(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  return type metadata accessor for Proto_FeatureDescription(0);
}

uint64_t OUTLINED_FUNCTION_7_8()
{
  return type metadata accessor for Proto_FeatureType(0);
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(v0, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_10_7(uint64_t a1)
{
  uint64_t v1;

  return sub_240C3802C(v1 + *(int *)(a1 + 28));
}

uint64_t OUTLINED_FUNCTION_17_6()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C3806C(v1, v0);
}

BOOL static NeuralNetwork.Layer.SoftmaxNDParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 != *(_QWORD *)a2)
    return 0;
  v11 = OUTLINED_FUNCTION_5_9();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.softmax(name:inputName:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v11 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v11 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v11 + 32) = a3;
  *(_QWORD *)(v11 + 40) = a4;
  v12 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = a5;
  *(_QWORD *)(v12 + 40) = a6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.softmaxND(name:inputName:outputName:axis:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24_1();
  v15 = (_QWORD *)(v14 - v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v16 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v16 + 32) = a3;
  *(_QWORD *)(v16 + 40) = a4;
  v17 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v17 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v17 + 32) = a5;
  *(_QWORD *)(v17 + 40) = a6;
  OUTLINED_FUNCTION_5_9();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v15 = a7;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.softmaxND(axis:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.SoftmaxNDParameters.init(axis:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  OUTLINED_FUNCTION_5_9();
  OUTLINED_FUNCTION_17_7();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.SoftmaxParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_SoftmaxLayerParams);
}

void NeuralNetwork.Layer.SoftmaxParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_SoftmaxLayerParams);
}

void sub_240C3DFB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_SoftmaxLayerParams);
}

uint64_t NeuralNetwork.Layer.SoftmaxParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0;
  v3 = OUTLINED_FUNCTION_15_6();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  type metadata accessor for NeuralNetwork.Layer.SoftmaxParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_48();
  sub_240C3E408(v2, v1, v13);
  v14 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v11, v15, v16, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE43C0], v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  return sub_240F1CF9C();
}

uint64_t NeuralNetwork.Layer.SoftmaxNDParameters.axis.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t NeuralNetwork.Layer.SoftmaxNDParameters.axis.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.SoftmaxNDParameters.axis.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C3E138;
}

uint64_t sub_240C3E138(uint64_t result)
{
  **(_QWORD **)(result + 8) = *(_QWORD *)result;
  return result;
}

uint64_t NeuralNetwork.Layer.SoftmaxNDParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_SoftmaxNDLayerParams);
}

uint64_t sub_240C3E160(uint64_t a1, void (*a2)(_QWORD))
{
  a2(0);
  OUTLINED_FUNCTION_2_6();
  return sub_240F1CC54();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SoftmaxParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C580);
}

void NeuralNetwork.Layer.SoftmaxNDParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_SoftmaxNDLayerParams);
}

void sub_240C3E1E4(void (*a1)(_QWORD))
{
  sub_240F1CF3C();
  a1(0);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_12_5();
  sub_240F1CF78();
  OUTLINED_FUNCTION_8_6();
}

void sub_240C3E240(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_SoftmaxNDLayerParams);
}

void sub_240C3E25C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(_QWORD))
{
  sub_240F1CF3C();
  a4(0);
  OUTLINED_FUNCTION_2_6();
  OUTLINED_FUNCTION_12_5();
  sub_240F1CF78();
  OUTLINED_FUNCTION_8_6();
}

void NeuralNetwork.Layer.SoftmaxNDParameters.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v0;
  v4 = OUTLINED_FUNCTION_15_6();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.SoftmaxNDParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  sub_240C3E408((uint64_t)v3, v2, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = 1936291937;
  *(_QWORD *)(v12 + 40) = 0xE400000000000000;
  v13 = *v3;
  *(_QWORD *)(v12 + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 48) = v13;
  v14 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v1, v15, v16, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.SoftmaxNDParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C590);
}

uint64_t sub_240C3E408(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v5;

  v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_240C3E44C()
{
  return sub_240C30D44(&qword_25708C560, type metadata accessor for NeuralNetwork.Layer.SoftmaxParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.SoftmaxParameters);
}

uint64_t sub_240C3E478()
{
  return sub_240C30D44(&qword_25708C568, type metadata accessor for Proto_SoftmaxLayerParams, (uint64_t)&unk_240F4EADC);
}

uint64_t sub_240C3E4A4()
{
  return sub_240C30D44(&qword_25708C570, type metadata accessor for NeuralNetwork.Layer.SoftmaxNDParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.SoftmaxNDParameters);
}

uint64_t sub_240C3E4D0()
{
  return sub_240C30D44(&qword_25708C578, type metadata accessor for Proto_SoftmaxNDLayerParams, (uint64_t)&unk_240F4EA64);
}

void sub_240C3E500(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.SoftmaxNDParameters.axis.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C3E524(uint64_t *a1)
{
  NeuralNetwork.Layer.SoftmaxNDParameters.axis.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t initializeBufferWithCopyOfBuffer for IdentityModelConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_240F1C930();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t initializeWithCopy for IdentityModelConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for IdentityModelConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for IdentityModelConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for IdentityModelConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t _s17SoftmaxParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3E69C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_11_7();
  return OUTLINED_FUNCTION_1_0(v1, v0, v2);
}

uint64_t _s17SoftmaxParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3E6CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_7();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t *_s19SoftmaxNDParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_SoftmaxNDLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s19SoftmaxNDParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_QWORD *_s19SoftmaxNDParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *_s19SoftmaxNDParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s19SoftmaxNDParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s19SoftmaxNDParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_SoftmaxNDLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s19SoftmaxNDParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3E96C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_5_9();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t _s19SoftmaxNDParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3E9A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_5_9();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C3E9C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_SoftmaxNDLayerParams);
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  uint64_t v0;
  unint64_t *v1;
  uint64_t (*v2)(uint64_t);

  return sub_240C30D44(v1, v2, v0);
}

uint64_t OUTLINED_FUNCTION_3_8()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_5_9()
{
  return type metadata accessor for Proto_SoftmaxNDLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_11_7()
{
  return type metadata accessor for Proto_SoftmaxLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_12_5()
{
  return sub_240F1CC54();
}

uint64_t OUTLINED_FUNCTION_14_7()
{
  return type metadata accessor for NeuralNetwork.Layer.Kind();
}

uint64_t OUTLINED_FUNCTION_15_6()
{
  return sub_240F1CF90();
}

uint64_t OUTLINED_FUNCTION_17_7()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

BOOL static NeuralNetwork.Layer.ClipParameters.== infix(_:_:)(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  float *v12;
  float *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, char *, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  if (*a1 != *a2)
    return 0;
  if (a1[1] != a2[1])
    return 0;
  v11 = *(int *)(OUTLINED_FUNCTION_2_7() + 24);
  v12 = (float *)((char *)a1 + v11);
  v13 = (float *)((char *)a2 + v11);
  if (*v12 != *(float *)((char *)a2 + v11))
    return 0;
  if (v12[1] != v13[1])
    return 0;
  v14 = OUTLINED_FUNCTION_0_4();
  v15 = (char *)v12 + *(int *)(v14 + 24);
  v16 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v16(v10, v15, v4);
  v16(v8, (char *)v13 + *(int *)(v14 + 24), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  LOBYTE(v14) = sub_240F1CC90();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.clip(name:inputName:outputName:minimum:maximum:)(float a1, float a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  float *v17;
  uint64_t v18;
  uint64_t v19;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_24_1();
  v17 = (float *)(v16 - v15);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v18 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v18 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v18 + 32) = a5;
  *(_QWORD *)(v18 + 40) = a6;
  v19 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v19 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v19 + 32) = a7;
  *(_QWORD *)(v19 + 40) = a8;
  *(_QWORD *)((char *)v17 + *(int *)(OUTLINED_FUNCTION_2_7() + 24)) = 0;
  OUTLINED_FUNCTION_0_4();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v17 = a1;
  v17[1] = a2;
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t static NeuralNetwork.Layer.Kind.clip(minimum:maximum:)@<X0>(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  *(_QWORD *)((char *)a1 + *(int *)(OUTLINED_FUNCTION_2_7() + 24)) = 0;
  OUTLINED_FUNCTION_0_4();
  OUTLINED_FUNCTION_4_7();
  *a1 = a2;
  a1[1] = a3;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

uint64_t NeuralNetwork.Layer.ClipParameters.init(minimum:maximum:)@<X0>(float *a1@<X8>, float a2@<S0>, float a3@<S1>)
{
  uint64_t result;

  *(_QWORD *)((char *)a1 + *(int *)(OUTLINED_FUNCTION_2_7() + 24)) = 0;
  OUTLINED_FUNCTION_0_4();
  result = OUTLINED_FUNCTION_4_7();
  *a1 = a2;
  a1[1] = a3;
  return result;
}

float NeuralNetwork.Layer.ClipParameters.minimum.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void NeuralNetwork.Layer.ClipParameters.minimum.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

uint64_t (*NeuralNetwork.Layer.ClipParameters.minimum.modify())()
{
  return nullsub_1;
}

float NeuralNetwork.Layer.ClipParameters.maximum.getter()
{
  uint64_t v0;

  return *(float *)(v0 + 4);
}

void NeuralNetwork.Layer.ClipParameters.maximum.setter(float a1)
{
  uint64_t v1;

  *(float *)(v1 + 4) = a1;
}

uint64_t (*NeuralNetwork.Layer.ClipParameters.maximum.modify())()
{
  return nullsub_1;
}

uint64_t NeuralNetwork.Layer.ClipParameters.hash(into:)()
{
  sub_240F1CF60();
  sub_240F1CF60();
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0_4();
  sub_240C30D44(&qword_25708C5A0, type metadata accessor for Proto_ClipLayerParams, (uint64_t)&unk_240F4FEDC);
  return sub_240F1CC54();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ClipParameters()
{
  uint64_t result;

  result = qword_25708C5B8;
  if (!qword_25708C5B8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t NeuralNetwork.Layer.ClipParameters.hashValue.getter()
{
  sub_240F1CF3C();
  NeuralNetwork.Layer.ClipParameters.hash(into:)();
  return sub_240F1CF78();
}

uint64_t sub_240C3EEF8()
{
  sub_240F1CF3C();
  NeuralNetwork.Layer.ClipParameters.hash(into:)();
  return sub_240F1CF78();
}

uint64_t NeuralNetwork.Layer.ClipParameters.customMirror.getter()
{
  _DWORD *v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240C3F0C0((uint64_t)v1, v13 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v14 + 16) = xmmword_240F1D370;
  v15 = v1[1];
  *(_DWORD *)(v14 + 48) = *v1;
  *(_QWORD *)(v14 + 32) = 0x6D756D696E696DLL;
  *(_QWORD *)(v14 + 40) = 0xE700000000000000;
  v16 = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v14 + 72) = MEMORY[0x24BEE14E8];
  *(_QWORD *)(v14 + 80) = 0x6D756D6978616DLL;
  *(_QWORD *)(v14 + 88) = 0xE700000000000000;
  *(_QWORD *)(v14 + 120) = v16;
  *(_DWORD *)(v14 + 96) = v15;
  v17 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v17);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  return sub_240F1CFA8();
}

uint64_t sub_240C3F0C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.ClipParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C3F104()
{
  return sub_240C30D44(&qword_25708C5A8, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.ClipParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.ClipParameters);
}

uint64_t sub_240C3F130()
{
  return sub_240C30D44(&qword_25708C5B0, type metadata accessor for Proto_ClipLayerParams, (uint64_t)&unk_240F4E9EC);
}

uint64_t *_s14ClipParametersVwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    *(uint64_t *)((char *)a1 + v5) = *(uint64_t *)((char *)a2 + v5);
    v8 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
    v9 = &v6[v8];
    v10 = &v7[v8];
    v11 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
  }
  return v3;
}

uint64_t _s14ClipParametersVwxx(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = v2 + *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
  v4 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
}

_QWORD *_s14ClipParametersVwcp(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_DWORD *_s14ClipParametersVwca(_DWORD *a1, _DWORD *a2, uint64_t a3)
{
  uint64_t v4;
  _DWORD *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (_DWORD *)((char *)a1 + v4);
  v6 = (char *)a2 + v4;
  *v5 = *(_DWORD *)((char *)a2 + v4);
  v5[1] = *(_DWORD *)((char *)a2 + v4 + 4);
  v7 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
  v8 = (char *)v5 + v7;
  v9 = &v6[v7];
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

_QWORD *_s14ClipParametersVwtk(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  return a1;
}

_QWORD *_s14ClipParametersVwta(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *(_QWORD *)((char *)a1 + v4) = *(_QWORD *)((char *)a2 + v4);
  v7 = *(int *)(type metadata accessor for Proto_ClipLayerParams(0) + 24);
  v8 = &v5[v7];
  v9 = &v6[v7];
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t _s14ClipParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3F448(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = OUTLINED_FUNCTION_0_4();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t _s14ClipParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C3F488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = OUTLINED_FUNCTION_0_4();
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t sub_240C3F4C0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ClipLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return type metadata accessor for Proto_ClipLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return type metadata accessor for NeuralNetwork.Layer.ClipParameters();
}

uint64_t OUTLINED_FUNCTION_4_7()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

BOOL static NeuralNetwork.Layer.AddParameters.== infix(_:_:)(float *a1, float *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 != *a2)
    return 0;
  v11 = OUTLINED_FUNCTION_2_8();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, (char *)a2 + *(int *)(v11 + 20), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.add(name:inputName:outputName:scalar:)(float a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  float *v7;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v14 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v14 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v14 + 32) = a4;
  *(_QWORD *)(v14 + 40) = a5;
  v15 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v15 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v15 + 32) = a6;
  *(_QWORD *)(v15 + 40) = a7;
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v7 = a1;
  OUTLINED_FUNCTION_12_6();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t static NeuralNetwork.Layer.Kind.add(scalar:)@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  int v3;

  if ((a1 & 0x100000000) != 0)
  {
    *a2 = 0;
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_5_10();
  }
  else
  {
    v3 = a1;
    OUTLINED_FUNCTION_2_8();
    OUTLINED_FUNCTION_5_10();
    *a2 = v3;
  }
  OUTLINED_FUNCTION_14_7();
  return swift_storeEnumTagMultiPayload();
}

void static NeuralNetwork.Layer.add(name:inputNames:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = (_DWORD *)(v9 - v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v11 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v11 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v11 + 32) = a4;
  *(_QWORD *)(v11 + 40) = a5;
  *v10 = 0;
  OUTLINED_FUNCTION_2_8();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.add(name:inputNames:outputName:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _DWORD *v8;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_14_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v15 = swift_allocObject();
  *(_OWORD *)(v15 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v15 + 32) = a3;
  *(_QWORD *)(v15 + 40) = a4;
  *(_QWORD *)(v15 + 48) = a5;
  *(_QWORD *)(v15 + 56) = a6;
  v16 = OUTLINED_FUNCTION_3_8();
  *(_OWORD *)(v16 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v16 + 32) = a7;
  *(_QWORD *)(v16 + 40) = a8;
  *v8 = 0;
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_12_6();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t NeuralNetwork.Layer.AddParameters.init(scalar:)@<X0>(float *a1@<X8>, float a2@<S0>)
{
  uint64_t result;

  OUTLINED_FUNCTION_2_8();
  result = OUTLINED_FUNCTION_5_10();
  *a1 = a2;
  return result;
}

void NeuralNetwork.Layer.AddParameters.init()(_DWORD *a1@<X8>)
{
  *a1 = 0;
  OUTLINED_FUNCTION_2_8();
  OUTLINED_FUNCTION_5_10();
  OUTLINED_FUNCTION_44();
}

float NeuralNetwork.Layer.AddParameters.scalar.getter()
{
  uint64_t v0;

  return *(float *)v0;
}

void NeuralNetwork.Layer.AddParameters.scalar.setter(float a1)
{
  float *v1;

  *v1 = a1;
}

float (*NeuralNetwork.Layer.AddParameters.scalar.modify(uint64_t a1))(uint64_t a1)
{
  _DWORD *v1;

  *(_QWORD *)a1 = v1;
  *(_DWORD *)(a1 + 8) = *v1;
  return sub_240C2D0C4;
}

uint64_t NeuralNetwork.Layer.AddParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_AddLayerParams);
}

void NeuralNetwork.Layer.AddParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_AddLayerParams);
}

void sub_240C3FAA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_AddLayerParams);
}

void NeuralNetwork.Layer.AddParameters.customMirror.getter()
{
  int *v0;
  uint64_t v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v3 = v0;
  v4 = OUTLINED_FUNCTION_15_6();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_24_1();
  v8 = v7 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.AddParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_48();
  sub_240C3E408((uint64_t)v3, v2, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = 0x72616C616373;
  *(_QWORD *)(v12 + 40) = 0xE600000000000000;
  v13 = *v3;
  *(_QWORD *)(v12 + 72) = MEMORY[0x24BEE14E8];
  *(_DWORD *)(v12 + 48) = v13;
  v14 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v1, v15, v16, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v8, *MEMORY[0x24BEE43C0], v4);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t NeuralNetwork.Layer.BroadcastableAddParameters.hash(into:)(uint64_t a1)
{
  return sub_240C3E160(a1, (void (*)(_QWORD))type metadata accessor for Proto_AddBroadcastableLayerParams);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.AddParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C5F8);
}

void NeuralNetwork.Layer.BroadcastableAddParameters.hashValue.getter()
{
  sub_240C3E1E4((void (*)(_QWORD))type metadata accessor for Proto_AddBroadcastableLayerParams);
}

void sub_240C3FC64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C3E25C(a1, a2, a3, (void (*)(_QWORD))type metadata accessor for Proto_AddBroadcastableLayerParams);
}

uint64_t NeuralNetwork.Layer.BroadcastableAddParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v2 = v0;
  v3 = OUTLINED_FUNCTION_15_6();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  type metadata accessor for NeuralNetwork.Layer.BroadcastableAddParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_48();
  sub_240C3E408(v2, v1, v13);
  v14 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v11, v15, v16, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE43C0], v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BD70);
  sub_240BF058C();
  return sub_240F1CF9C();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BroadcastableAddParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C608);
}

uint64_t sub_240C3FDD0()
{
  return sub_240C30D44(&qword_25708C5D8, type metadata accessor for NeuralNetwork.Layer.AddParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.AddParameters);
}

uint64_t sub_240C3FDFC()
{
  return sub_240C30D44(&qword_25708C5E0, type metadata accessor for Proto_AddLayerParams, (uint64_t)&unk_240F4E974);
}

uint64_t sub_240C3FE28()
{
  return sub_240C30D44(&qword_25708C5E8, type metadata accessor for NeuralNetwork.Layer.BroadcastableAddParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.BroadcastableAddParameters);
}

uint64_t sub_240C3FE54()
{
  return sub_240C30D44(&qword_25708C5F0, type metadata accessor for Proto_AddBroadcastableLayerParams, (uint64_t)&unk_240F4E8FC);
}

void sub_240C3FE84(float *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.AddParameters.scalar.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C3FEA8(float *a1)
{
  NeuralNetwork.Layer.AddParameters.scalar.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s13AddParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_AddLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_DWORD *)a1 = *(_DWORD *)a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s13AddParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_DWORD *_s13AddParametersVwcp(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_DWORD *_s13AddParametersVwca(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_DWORD *_s13AddParametersVwtk(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_DWORD *_s13AddParametersVwta(_DWORD *a1, _DWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_AddLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s13AddParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C4014C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_8();
  return OUTLINED_FUNCTION_1_0(a1, a2, v4);
}

uint64_t _s13AddParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C40184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_8();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C401A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_AddLayerParams);
}

uint64_t _s26BroadcastableAddParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C401C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_11_8();
  return OUTLINED_FUNCTION_1_0(v1, v0, v2);
}

uint64_t _s26BroadcastableAddParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C401F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_11_8();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t OUTLINED_FUNCTION_2_8()
{
  return type metadata accessor for Proto_AddLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_5_10()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_11_8()
{
  return type metadata accessor for Proto_AddBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_12_6()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.inputGate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__inputGateWeightMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGate.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AB08);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40308(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AB08);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.forgetGate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__forgetGateWeightMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGate.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AB2C);
}

void sub_240C4032C(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v2;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;

  type metadata accessor for Proto_WeightParams(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_20_3(v6, v7, v8);
  a2(v2);
  sub_240C412B4(a1);
  OUTLINED_FUNCTION_156();
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40434(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AB2C);
}

void sub_240C40440(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  void *v6;
  void *v7;
  void *v8;
  void *v9;

  v4 = *(void **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 56);
  v6 = *(void **)(*(_QWORD *)a1 + 64);
  v7 = *(void **)(*(_QWORD *)a1 + 40);
  v8 = *(void **)(*(_QWORD *)a1 + 48);
  v9 = *(void **)(*(_QWORD *)a1 + 32);
  if ((a2 & 1) != 0)
  {
    sub_240C3E408(*(_QWORD *)(*(_QWORD *)a1 + 64), (uint64_t)v5, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.WeightParameters);
    sub_240C3E408((uint64_t)v5, (uint64_t)v7, type metadata accessor for Proto_WeightParams);
    a3(v7);
    sub_240C412B4((uint64_t)v5);
  }
  else
  {
    sub_240C3E408(*(_QWORD *)(*(_QWORD *)a1 + 64), (uint64_t)v7, type metadata accessor for Proto_WeightParams);
    a3(v7);
  }
  sub_240C412B4((uint64_t)v6);
  free(v6);
  free(v5);
  free(v8);
  free(v7);
  free(v9);
  free(v4);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.blockInput.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__blockInputWeightMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.blockInput.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AB50);
}

void NeuralNetwork.Layer.LSTMWeightParameters.blockInput.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C405DC(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AB50);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.outputGate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__outputGateWeightMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGate.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AB74);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGate.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C406B0(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AB74);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.inputGateRecursion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__inputGateRecursionMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGateRecursion.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AB98);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGateRecursion.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40784(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AB98);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.forgetGateRecursion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__forgetGateRecursionMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGateRecursion.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1ABBC);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGateRecursion.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40858(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1ABBC);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.blockInputRecursion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__blockInputRecursionMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.blockInputRecursion.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1ABE0);
}

void NeuralNetwork.Layer.LSTMWeightParameters.blockInputRecursion.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C4092C(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1ABE0);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.outputGateRecursion.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__outputGateRecursionMatrix, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGateRecursion.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AC04);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGateRecursion.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40A00(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AC04);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.inputGateBias.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__inputGateBiasVector, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGateBias.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AC28);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGateBias.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40AD4(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AC28);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.forgetGateBias.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__forgetGateBiasVector, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGateBias.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AC4C);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGateBias.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40BA8(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AC4C);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.blockInputBias.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__blockInputBiasVector, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.blockInputBias.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AC70);
}

void NeuralNetwork.Layer.LSTMWeightParameters.blockInputBias.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40C7C(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AC70);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.outputGateBias.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__outputGateBiasVector, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGateBias.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AC94);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGateBias.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40D50(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AC94);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.inputGatePeephole.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__inputGatePeepholeVector, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGatePeephole.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1ACB8);
}

void NeuralNetwork.Layer.LSTMWeightParameters.inputGatePeephole.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40E24(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1ACB8);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.forgetGatePeephole.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__forgetGatePeepholeVector, a1);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGatePeephole.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1ACDC);
}

void NeuralNetwork.Layer.LSTMWeightParameters.forgetGatePeephole.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C40EF8(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1ACDC);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.outputGatePeephole.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_240C40F10(&OBJC_IVAR____TtCV20MLModelSpecification22Proto_LSTMWeightParamsP33_FEBA7ED9F351FA7751CD6B489714AC0A13_StorageClass__outputGatePeepholeVector, a1);
}

uint64_t sub_240C40F10@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for Proto_WeightParams(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_17_8();
  OUTLINED_FUNCTION_47_0();
  v12 = v11 + *a1;
  swift_beginAccess();
  sub_240C411E8(v12, (uint64_t)v6);
  if (__swift_getEnumTagSinglePayload((uint64_t)v6, 1, v7) == 1)
  {
    *(_QWORD *)v10 = MEMORY[0x24BEE4AF8];
    *(_OWORD *)(v10 + 8) = xmmword_240F1FDE0;
    *(_OWORD *)(v10 + 24) = xmmword_240F1FDE0;
    *(_OWORD *)(v10 + 40) = xmmword_240F1FDE0;
    v10[56] = 0;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v13 = (uint64_t)&v10[*(int *)(v7 + 40)];
    v14 = type metadata accessor for Proto_QuantizationParams(0);
    __swift_storeEnumTagSinglePayload(v13, 1, 1, v14);
    sub_240C41230((uint64_t)v6);
  }
  else
  {
    sub_240C41270((uint64_t)v6, (uint64_t)v10);
  }
  return sub_240C41270((uint64_t)v10, a2);
}

void sub_240C41068(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t))
{
  uint64_t v5;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;

  type metadata accessor for NeuralNetwork.WeightParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_20_3(v8, v9, v10);
  a5(v5);
  OUTLINED_FUNCTION_156();
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGatePeephole.setter(uint64_t a1)
{
  sub_240C4032C(a1, (void (*)(uint64_t))sub_240E1AD00);
}

void NeuralNetwork.Layer.LSTMWeightParameters.outputGatePeephole.modify()
{
  _QWORD *v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  char v9;
  uint64_t v10;

  v2 = OUTLINED_FUNCTION_13_6();
  OUTLINED_FUNCTION_16_7((uint64_t)v2);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  v4 = OUTLINED_FUNCTION_17_5(v3);
  v5 = OUTLINED_FUNCTION_7_9((uint64_t)v4);
  *(_QWORD *)(v1 + 40) = OUTLINED_FUNCTION_0_5(v5);
  v6 = OUTLINED_FUNCTION_119();
  v7 = OUTLINED_FUNCTION_10_8((uint64_t)v6);
  *(_QWORD *)(v1 + 56) = OUTLINED_FUNCTION_0_5(v7);
  v8 = OUTLINED_FUNCTION_119();
  OUTLINED_FUNCTION_8_7((uint64_t)v8);
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_3_9();
  OUTLINED_FUNCTION_15_7();
  OUTLINED_FUNCTION_5_11();
  if (v9)
  {
    *v0 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_1_6((__n128)xmmword_240F1FDE0);
    v10 = OUTLINED_FUNCTION_9_7();
    OUTLINED_FUNCTION_2_9(v10);
  }
  else
  {
    OUTLINED_FUNCTION_12_7();
  }
  OUTLINED_FUNCTION_14_8();
  OUTLINED_FUNCTION_42();
}

void sub_240C41178(uint64_t a1, char a2)
{
  sub_240C40440(a1, a2, (void (*)(void *))sub_240E1AD00);
}

uint64_t NeuralNetwork.Layer.LSTMWeightParameters.init()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v2 = *(int *)(OUTLINED_FUNCTION_17_8() + 20);
  if (qword_25708B8E8 != -1)
    swift_once();
  *(_QWORD *)(a1 + v2) = qword_257090438;
  return swift_retain();
}

uint64_t sub_240C411E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C41230(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1F0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240C41270(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_WeightParams(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C412B4(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for NeuralNetwork.WeightParameters();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_240C412F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C618;
  if (!qword_25708C618)
  {
    v1 = type metadata accessor for Proto_LSTMWeightParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4E884, v1);
    atomic_store(result, (unint64_t *)&qword_25708C618);
  }
  return result;
}

void sub_240C41334(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.inputGate.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41350(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.inputGate.setter);
}

void sub_240C4136C(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.forgetGate.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41388(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.forgetGate.setter);
}

void sub_240C413A4(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.blockInput.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C413C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.blockInput.setter);
}

void sub_240C413DC(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.outputGate.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C413F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.outputGate.setter);
}

void sub_240C41414(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.inputGateRecursion.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.inputGateRecursion.setter);
}

void sub_240C4144C(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.forgetGateRecursion.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41468(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.forgetGateRecursion.setter);
}

void sub_240C41484(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.blockInputRecursion.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C414A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.blockInputRecursion.setter);
}

void sub_240C414BC(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.outputGateRecursion.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C414D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.outputGateRecursion.setter);
}

void sub_240C414F4(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.inputGateBias.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.inputGateBias.setter);
}

void sub_240C4152C(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.forgetGateBias.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.forgetGateBias.setter);
}

void sub_240C41564(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.blockInputBias.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.blockInputBias.setter);
}

void sub_240C4159C(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.outputGateBias.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C415B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.outputGateBias.setter);
}

void sub_240C415D4(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.inputGatePeephole.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C415F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.inputGatePeephole.setter);
}

void sub_240C4160C(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.forgetGatePeephole.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41628(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.forgetGatePeephole.setter);
}

void sub_240C41644(uint64_t a1@<X8>)
{
  NeuralNetwork.Layer.LSTMWeightParameters.outputGatePeephole.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C41660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C41068(a1, a2, a3, a4, NeuralNetwork.Layer.LSTMWeightParameters.outputGatePeephole.setter);
}

uint64_t *_s20LSTMWeightParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = type metadata accessor for Proto_LSTMWeightParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    v6 = v4;
    v7 = sub_240F1C930();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(v6 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(v6 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t _s20LSTMWeightParametersVwxx(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  type metadata accessor for Proto_LSTMWeightParams(0);
  return swift_release();
}

uint64_t _s20LSTMWeightParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LSTMWeightParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  return a1;
}

uint64_t _s20LSTMWeightParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LSTMWeightParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t _s20LSTMWeightParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LSTMWeightParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  return a1;
}

uint64_t _s20LSTMWeightParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  v5 = type metadata accessor for Proto_LSTMWeightParams(0);
  *(_QWORD *)(a1 + *(int *)(v5 + 20)) = *(_QWORD *)(a2 + *(int *)(v5 + 20));
  swift_release();
  return a1;
}

uint64_t _s20LSTMWeightParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C418DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_17_8();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s20LSTMWeightParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C41918(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_17_8();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters()
{
  uint64_t result;

  result = qword_25708C620;
  if (!qword_25708C620)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C41984()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_LSTMWeightParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *OUTLINED_FUNCTION_0_5(uint64_t a1)
{
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_1_6(__n128 a1)
{
  uint64_t v1;

  *(__n128 *)(v1 + 8) = a1;
  *(__n128 *)(v1 + 24) = a1;
  *(__n128 *)(v1 + 40) = a1;
  *(_BYTE *)(v1 + 56) = 0;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_2_9(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v2, 1, 1, a1);
  return sub_240C41230(v1);
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_5_11()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_7_9(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return type metadata accessor for Proto_WeightParams(0);
}

uint64_t OUTLINED_FUNCTION_8_7(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return type metadata accessor for Proto_LSTMWeightParams(0);
}

uint64_t OUTLINED_FUNCTION_9_7()
{
  return type metadata accessor for Proto_QuantizationParams(0);
}

uint64_t OUTLINED_FUNCTION_10_8(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 48) = a1;
  return type metadata accessor for NeuralNetwork.WeightParameters();
}

uint64_t OUTLINED_FUNCTION_12_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C41270(v0, v1);
}

void *OUTLINED_FUNCTION_13_6()
{
  return malloc(0x48uLL);
}

uint64_t OUTLINED_FUNCTION_14_8()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C41270(v1, v0);
}

uint64_t OUTLINED_FUNCTION_15_7()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C411E8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_7(uint64_t result)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = result;
  *(_QWORD *)(result + 24) = v2;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_8()
{
  return type metadata accessor for Proto_LSTMWeightParams(0);
}

uint64_t OUTLINED_FUNCTION_20_3@<X0>(uint64_t (*a1)(_QWORD)@<X2>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;

  return sub_240C3E408(v3, (uint64_t)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
}

uint64_t sub_240C41B1C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  uint64_t v14;

  v13 = type metadata accessor for Proto_ActivationParams(0);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_81();
  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    v14 = MEMORY[0x24BEE4AF8];
    sub_240BF0854();
    type metadata accessor for NeuralNetwork.Layer.Activation(0);
    OUTLINED_FUNCTION_51_2();
    v6 = a1 + v5;
    v8 = *(_QWORD *)(v7 + 72);
    type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(0);
    do
    {
      OUTLINED_FUNCTION_46_1(v1, 1);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      sub_240BE0B68(v1, &qword_25708C190);
      sub_240CDB23C();
      OUTLINED_FUNCTION_46_1(v1, 0);
      v4 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0854();
        v4 = v14;
      }
      v9 = *(_QWORD *)(v4 + 16);
      if (v9 >= *(_QWORD *)(v4 + 24) >> 1)
      {
        sub_240BF0854();
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v9 + 1;
      OUTLINED_FUNCTION_43_2();
      sub_240C35540(v1, v10 + v11 * v9, type metadata accessor for Proto_ActivationParams);
      v6 += v8;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_240C41CB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v3 = type metadata accessor for Proto_LSTMWeightParams(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v14[1] = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_240BF08D8();
    v8 = v15;
    v9 = *(_QWORD *)(type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters() - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240C355AC(v10, (uint64_t)v6, type metadata accessor for Proto_LSTMWeightParams);
      v15 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_240BF08D8();
        v8 = v15;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      sub_240C35540((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, type metadata accessor for Proto_LSTMWeightParams);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void static NeuralNetwork.Layer.bidirectionalLSTM(name:inputNames:outputNames:inputSize:outputSize:sequenceOutput:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v12 = v0;
  v13 = v1;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (uint64_t *)((char *)&v11 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.init(inputSize:outputSize:sequenceOutput:)(v7, v5, v3, v10);
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t static NeuralNetwork.Layer.Kind.bidirectionalLSTM(inputSize:outputSize:sequenceOutput:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  NeuralNetwork.Layer.BidirectionalLSTMParameters.init(inputSize:outputSize:sequenceOutput:)(a1, a2, a3, a4);
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.init(inputSize:outputSize:sequenceOutput:)(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  v10 = OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x24BEE4AF8];
  a4[2] = MEMORY[0x24BEE4AF8];
  a4[3] = v14;
  a4[4] = v14;
  v15 = OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_23_2();
  v16 = (uint64_t)a4 + *(int *)(v15 + 40);
  OUTLINED_FUNCTION_71(v16, 1);
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  *a4 = a1;
  if (a2 < 0)
  {
LABEL_8:
    __break(1u);
    return;
  }
  a4[1] = a2;
  sub_240C02F94(v16, v4, &qword_25708C208);
  OUTLINED_FUNCTION_7_1(v4, 1, v10);
  if (v17)
  {
    OUTLINED_FUNCTION_20_4();
    sub_240BE0B68(v4, &qword_25708C208);
  }
  else
  {
    sub_240C35540(v4, (uint64_t)v13, type metadata accessor for Proto_LSTMParams);
  }
  *v13 = a3 & 1;
  sub_240BE0B68(v16, &qword_25708C208);
  sub_240C35540((uint64_t)v13, v16, type metadata accessor for Proto_LSTMParams);
  OUTLINED_FUNCTION_71(v16, 0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C170);
  v18 = type metadata accessor for NeuralNetwork.Layer.Activation(0);
  v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_240F1DA40;
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  swift_storeEnumTagMultiPayload();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_54_3();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_54_3();
  v20 = OUTLINED_FUNCTION_25_5(v19);
  swift_setDeallocating();
  sub_240C42DA8();
  swift_bridgeObjectRelease();
  a4[2] = v20;
  NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.getter();
  sub_240C41B1C(v21);
  OUTLINED_FUNCTION_8_8();
  swift_bridgeObjectRelease();
  a4[3] = v18;
  OUTLINED_FUNCTION_13();
}

uint64_t NeuralNetwork.Layer.BidirectionalLSTMParameters.inputSize.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*v0 < 0)
    __break(1u);
  return result;
}

uint64_t NeuralNetwork.Layer.BidirectionalLSTMParameters.inputSize.setter(uint64_t result)
{
  _QWORD *v1;

  if (result < 0)
    __break(1u);
  else
    *v1 = result;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.BidirectionalLSTMParameters.inputSize.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  _QWORD *v1;

  *((_QWORD *)result + 1) = v1;
  if ((*v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *v1;
    return sub_240C421A0;
  }
  return result;
}

uint64_t *sub_240C421A0(uint64_t *result, char a2)
{
  uint64_t v2;

  v2 = *result;
  if ((a2 & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
LABEL_5:
      *(_QWORD *)result[1] = v2;
      return result;
    }
    __break(1u);
  }
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

uint64_t NeuralNetwork.Layer.BidirectionalLSTMParameters.outputSize.getter()
{
  uint64_t v0;
  uint64_t result;

  result = *(_QWORD *)(v0 + 8);
  if (result < 0)
    __break(1u);
  return result;
}

uint64_t NeuralNetwork.Layer.BidirectionalLSTMParameters.outputSize.setter(uint64_t result)
{
  uint64_t v1;

  if (result < 0)
    __break(1u);
  else
    *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t *(*NeuralNetwork.Layer.BidirectionalLSTMParameters.outputSize.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  uint64_t v1;
  uint64_t v2;

  *((_QWORD *)result + 1) = v1;
  v2 = *(_QWORD *)(v1 + 8);
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = v2;
    return sub_240C42208;
  }
  return result;
}

uint64_t *sub_240C42208(uint64_t *result, char a2)
{
  uint64_t v2;

  v2 = *result;
  if ((a2 & 1) != 0)
  {
    if ((v2 & 0x8000000000000000) == 0)
    {
LABEL_5:
      *(_QWORD *)(result[1] + 8) = v2;
      return result;
    }
    __break(1u);
  }
  if ((v2 & 0x8000000000000000) == 0)
    goto LABEL_5;
  __break(1u);
  return result;
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C630);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C190);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v57 = OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_15_8(v7, v48);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = OUTLINED_FUNCTION_17_9(v9, v10, v11, v12, v13, v14, v15, v16, v49);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v18);
  v19 = OUTLINED_FUNCTION_32_3();
  v20 = OUTLINED_FUNCTION_36_3(v19);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_132();
  v22 = MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_38_2(v22, v23, v24, v25, v26, v27, v28, v29, v50);
  v31 = MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_55_2(v31, v32, v33, v34, v35, v36, v37, v38, v51);
  v39 = *(_QWORD *)(v0 + 16);
  v40 = *(_QWORD *)(v39 + 16);
  if (v40)
  {
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_14_9();
    v55 = v2;
    while (1)
    {
      OUTLINED_FUNCTION_40_3();
      OUTLINED_FUNCTION_34_2();
      OUTLINED_FUNCTION_44_2();
      OUTLINED_FUNCTION_7_1(v1, 1, v57);
      if (v43)
        break;
      OUTLINED_FUNCTION_6_6(v1, v52);
      OUTLINED_FUNCTION_6_6(v52, v53);
      OUTLINED_FUNCTION_57_1();
      OUTLINED_FUNCTION_7_1(v2, 1, v58);
      if (v43)
      {
        v41 = v2;
        v42 = &qword_25708C630;
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_11_9();
      v44 = v2;
LABEL_10:
      v45 = v56;
      OUTLINED_FUNCTION_6_6(v44, v56);
      OUTLINED_FUNCTION_6_6(v56, v59);
      OUTLINED_FUNCTION_49_3();
      if ((OUTLINED_FUNCTION_56_2() & 1) == 0)
      {
        OUTLINED_FUNCTION_19_3();
        v45 = v60;
      }
      if (*(_QWORD *)(v45 + 16) >= *(_QWORD *)(v45 + 24) >> 1)
        OUTLINED_FUNCTION_18_3();
      v46 = OUTLINED_FUNCTION_7_10();
      sub_240C35540(v46, v47, type metadata accessor for NeuralNetwork.Layer.Activation);
      v2 = v55;
      v39 += v54;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    v41 = v1;
    v42 = &qword_25708C190;
LABEL_9:
    sub_240BE0B68(v41, v42);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_11_9();
    OUTLINED_FUNCTION_45_1();
    v44 = v3;
    goto LABEL_10;
  }
LABEL_16:
  OUTLINED_FUNCTION_1();
}

void sub_240C42470()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.setter(v0);
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_5(a1);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = v2;
  OUTLINED_FUNCTION_12_1();
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C42500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_41_2();
  if ((v3 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_24_5();
    OUTLINED_FUNCTION_53_2(v4);
    OUTLINED_FUNCTION_8_8();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v1;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_25_5(v0);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v5;
    OUTLINED_FUNCTION_6_2();
  }
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.backwardActivations.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t *v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  OUTLINED_FUNCTION_22();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C630);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C190);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v57 = OUTLINED_FUNCTION_10_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_15_8(v7, v48);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v17 = OUTLINED_FUNCTION_17_9(v9, v10, v11, v12, v13, v14, v15, v16, v49);
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_133();
  MEMORY[0x24BDAC7A8](v18);
  v19 = OUTLINED_FUNCTION_32_3();
  v20 = OUTLINED_FUNCTION_36_3(v19);
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_132();
  v22 = MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_38_2(v22, v23, v24, v25, v26, v27, v28, v29, v50);
  v31 = MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_55_2(v31, v32, v33, v34, v35, v36, v37, v38, v51);
  v39 = *(_QWORD *)(v0 + 24);
  v40 = *(_QWORD *)(v39 + 16);
  if (v40)
  {
    OUTLINED_FUNCTION_52_2();
    OUTLINED_FUNCTION_22_3();
    OUTLINED_FUNCTION_14_9();
    v55 = v2;
    while (1)
    {
      OUTLINED_FUNCTION_40_3();
      OUTLINED_FUNCTION_34_2();
      OUTLINED_FUNCTION_44_2();
      OUTLINED_FUNCTION_7_1(v1, 1, v57);
      if (v43)
        break;
      OUTLINED_FUNCTION_6_6(v1, v52);
      OUTLINED_FUNCTION_6_6(v52, v53);
      OUTLINED_FUNCTION_57_1();
      OUTLINED_FUNCTION_7_1(v2, 1, v58);
      if (v43)
      {
        v41 = v2;
        v42 = &qword_25708C630;
        goto LABEL_9;
      }
      OUTLINED_FUNCTION_11_9();
      v44 = v2;
LABEL_10:
      v45 = v56;
      OUTLINED_FUNCTION_6_6(v44, v56);
      OUTLINED_FUNCTION_6_6(v56, v59);
      OUTLINED_FUNCTION_49_3();
      if ((OUTLINED_FUNCTION_56_2() & 1) == 0)
      {
        OUTLINED_FUNCTION_19_3();
        v45 = v60;
      }
      if (*(_QWORD *)(v45 + 16) >= *(_QWORD *)(v45 + 24) >> 1)
        OUTLINED_FUNCTION_18_3();
      v46 = OUTLINED_FUNCTION_7_10();
      sub_240C35540(v46, v47, type metadata accessor for NeuralNetwork.Layer.Activation);
      v2 = v55;
      v39 += v54;
      if (!--v40)
      {
        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    v41 = v1;
    v42 = &qword_25708C190;
LABEL_9:
    sub_240BE0B68(v41, v42);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    OUTLINED_FUNCTION_11_9();
    OUTLINED_FUNCTION_45_1();
    v44 = v3;
    goto LABEL_10;
  }
LABEL_16:
  OUTLINED_FUNCTION_1();
}

void sub_240C427B0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.backwardActivations.setter(v0);
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.backwardActivations.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_25_5(a1);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 24) = v2;
  OUTLINED_FUNCTION_12_1();
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.backwardActivations.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetwork.Layer.BidirectionalLSTMParameters.backwardActivations.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C42840()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_41_2();
  if ((v3 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_24_5();
    OUTLINED_FUNCTION_53_2(v4);
    OUTLINED_FUNCTION_8_8();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 24) = v1;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_25_5(v0);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 24) = v5;
    OUTLINED_FUNCTION_6_2();
  }
}

uint64_t NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unsigned __int8 *v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v11;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  v3 = OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v6 = (unsigned __int8 *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = OUTLINED_FUNCTION_16_8();
  sub_240C02F94(v1 + *(int *)(v7 + 40), v0, &qword_25708C208);
  OUTLINED_FUNCTION_7_1(v0, 1, v3);
  if (v8)
  {
    OUTLINED_FUNCTION_20_4();
    sub_240BE0B68(v0, &qword_25708C208);
  }
  else
  {
    sub_240C35540(v0, (uint64_t)v6, type metadata accessor for Proto_LSTMParams);
  }
  v9 = *v6;
  sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_LSTMParams);
  return v9;
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.setter(char a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char v11;
  uint64_t v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = OUTLINED_FUNCTION_42_3();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + *(int *)(OUTLINED_FUNCTION_16_8() + 40);
  sub_240C02F94(v10, (uint64_t)v5, &qword_25708C208);
  OUTLINED_FUNCTION_7_1((uint64_t)v5, 1, v6);
  if (v11)
  {
    *((_DWORD *)v9 + 2) = 0;
    *(_DWORD *)v9 = 0;
    v9[4] = 0;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    sub_240BE0B68((uint64_t)v5, &qword_25708C208);
  }
  else
  {
    sub_240C35540((uint64_t)v5, (uint64_t)v9, type metadata accessor for Proto_LSTMParams);
  }
  *v9 = a1 & 1;
  sub_240BE0B68(v10, &qword_25708C208);
  sub_240C35540((uint64_t)v9, v10, type metadata accessor for Proto_LSTMParams);
  __swift_storeEnumTagSinglePayload(v10, 0, 1, v6);
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.modify(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C42B04(uint64_t a1)
{
  NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.setter(*(_BYTE *)(a1 + 8));
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.weights.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  v2 = type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  v3 = *(_QWORD *)(v1 + 32);
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v12 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF08AC();
    type metadata accessor for Proto_LSTMWeightParams(0);
    OUTLINED_FUNCTION_51_2();
    v6 = v3 + v5;
    v8 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_240C355AC(v6, v0, type metadata accessor for Proto_LSTMWeightParams);
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_240BF08AC();
      *(_QWORD *)(v12 + 16) = v9 + 1;
      OUTLINED_FUNCTION_43_2();
      sub_240C35540(v0, v10 + v11 * v9, (uint64_t (*)(_QWORD))type metadata accessor for NeuralNetwork.Layer.LSTMWeightParameters);
      v6 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C42C44()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.weights.setter(v0);
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.weights.setter(uint64_t a1)
{
  uint64_t v1;

  sub_240C41CB0(a1);
  OUTLINED_FUNCTION_2_2();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = 0;
  OUTLINED_FUNCTION_12_1();
}

void NeuralNetwork.Layer.BidirectionalLSTMParameters.weights.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  NeuralNetwork.Layer.BidirectionalLSTMParameters.weights.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C42CD8()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_41_2();
  if ((v2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_24_5();
    sub_240C41CB0(v3);
    OUTLINED_FUNCTION_8_8();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 32) = 0;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    v4 = sub_240C41CB0(v0);
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 32) = v4;
    OUTLINED_FUNCTION_6_2();
  }
}

uint64_t NeuralNetwork.Layer.BidirectionalLSTMParameters.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = 0;
  a1[1] = 0;
  v2 = MEMORY[0x24BEE4AF8];
  a1[2] = MEMORY[0x24BEE4AF8];
  a1[3] = v2;
  a1[4] = v2;
  v3 = OUTLINED_FUNCTION_16_8();
  OUTLINED_FUNCTION_23_2();
  v4 = (uint64_t)a1 + *(int *)(v3 + 40);
  v5 = OUTLINED_FUNCTION_42_3();
  return OUTLINED_FUNCTION_35(v4, 1, 1, v5);
}

uint64_t sub_240C42DA8()
{
  type metadata accessor for NeuralNetwork.Layer.Activation(0);
  swift_arrayDestroy();
  return swift_deallocClassInstance();
}

unint64_t sub_240C42DF0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C638;
  if (!qword_25708C638)
  {
    v1 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(255);
    result = MEMORY[0x24268C2AC](&unk_240F4E80C, v1);
    atomic_store(result, (unint64_t *)&qword_25708C638);
  }
  return result;
}

void sub_240C42E30()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.BidirectionalLSTMParameters.inputSize.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C42E50(uint64_t *a1)
{
  NeuralNetwork.Layer.BidirectionalLSTMParameters.inputSize.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C42E70()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.BidirectionalLSTMParameters.outputSize.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C42E90(uint64_t *a1)
{
  NeuralNetwork.Layer.BidirectionalLSTMParameters.outputSize.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C42EB0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.forwardActivations.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C42ED4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.backwardActivations.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C42EF8()
{
  _BYTE *v0;

  OUTLINED_FUNCTION_103();
  *v0 = NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C42F1C(char *a1)
{
  NeuralNetwork.Layer.BidirectionalLSTMParameters.sequenceOutput.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C42F3C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  NeuralNetwork.Layer.BidirectionalLSTMParameters.weights.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s27BidirectionalLSTMParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v13;
  _DWORD *v14;
  _DWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v4 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    a1[4] = a2[4];
    v8 = *(int *)(v4 + 36);
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
    v13 = *(int *)(v6 + 40);
    v14 = (_DWORD *)((char *)a1 + v13);
    v15 = (_DWORD *)((char *)a2 + v13);
    v16 = type metadata accessor for Proto_LSTMParams(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16))
    {
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
      memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    }
    else
    {
      *v14 = *v15;
      *((_BYTE *)v14 + 4) = *((_BYTE *)v15 + 4);
      v14[2] = v15[2];
      v12((char *)v14 + *(int *)(v16 + 40), (char *)v15 + *(int *)(v16 + 40), v11);
      __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
    }
  }
  return a1;
}

uint64_t _s27BidirectionalLSTMParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;
  uint64_t (*v8)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
  v3 = a1 + *(int *)(v2 + 36);
  v4 = sub_240F1C930();
  v8 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8);
  v8(v3, v4);
  v5 = a1 + *(int *)(v2 + 40);
  v6 = type metadata accessor for Proto_LSTMParams(0);
  result = __swift_getEnumTagSinglePayload(v5, 1, v6);
  if (!(_DWORD)result)
    return v8(v5 + *(int *)(v6 + 40), v4);
  return result;
}

uint64_t _s27BidirectionalLSTMParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
  v6 = *(int *)(v5 + 36);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 40);
  v12 = (_DWORD *)(a1 + v11);
  v13 = (_DWORD *)(a2 + v11);
  v14 = type metadata accessor for Proto_LSTMParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    *((_BYTE *)v12 + 4) = *((_BYTE *)v13 + 4);
    v12[2] = v13[2];
    v10((char *)v12 + *(int *)(v14 + 40), (char *)v13 + *(int *)(v14 + 40), v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

_QWORD *_s27BidirectionalLSTMParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;

  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
  v5 = *(int *)(v4 + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(char *, char *, uint64_t))(v9 + 24);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 40);
  v12 = (uint64_t)a1 + v11;
  v13 = (uint64_t)a2 + v11;
  v14 = type metadata accessor for Proto_LSTMParams(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload(v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
      *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
      *(_BYTE *)(v12 + 3) = *(_BYTE *)(v13 + 3);
      *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
      v10((char *)(v12 + *(int *)(v14 + 40)), (char *)(v13 + *(int *)(v14 + 40)), v8);
      return a1;
    }
    sub_240BE10B8(v12, type metadata accessor for Proto_LSTMParams);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  *(_BYTE *)v12 = *(_BYTE *)v13;
  *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
  *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
  *(_BYTE *)(v12 + 3) = *(_BYTE *)(v13 + 3);
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
  return a1;
}

uint64_t _s27BidirectionalLSTMParametersVwtk(uint64_t a1, uint64_t a2)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v5 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
  v6 = *(int *)(v5 + 36);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(v5 + 40);
  v12 = (_DWORD *)(a1 + v11);
  v13 = (_DWORD *)(a2 + v11);
  v14 = type metadata accessor for Proto_LSTMParams(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *v12 = *v13;
    *((_BYTE *)v12 + 4) = *((_BYTE *)v13 + 4);
    v12[2] = v13[2];
    v10((char *)v12 + *(int *)(v14 + 40), (char *)v13 + *(int *)(v14 + 40), v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t _s27BidirectionalLSTMParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int EnumTagSinglePayload;
  uint64_t v16;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  v4 = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
  v5 = *(int *)(v4 + 36);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 40);
  v10(v6, v7, v8);
  v11 = *(int *)(v4 + 40);
  v12 = a1 + v11;
  v13 = a2 + v11;
  v14 = type metadata accessor for Proto_LSTMParams(0);
  LODWORD(v7) = __swift_getEnumTagSinglePayload(v12, 1, v14);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v13, 1, v14);
  if (!(_DWORD)v7)
  {
    if (!EnumTagSinglePayload)
    {
      *(_BYTE *)v12 = *(_BYTE *)v13;
      *(_BYTE *)(v12 + 1) = *(_BYTE *)(v13 + 1);
      *(_BYTE *)(v12 + 2) = *(_BYTE *)(v13 + 2);
      *(_BYTE *)(v12 + 3) = *(_BYTE *)(v13 + 3);
      *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
      *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
      v10(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
      return a1;
    }
    sub_240BE10B8(v12, type metadata accessor for Proto_LSTMParams);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C208);
    memcpy((void *)v12, (const void *)v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    return a1;
  }
  *(_DWORD *)v12 = *(_DWORD *)v13;
  *(_BYTE *)(v12 + 4) = *(_BYTE *)(v13 + 4);
  *(_DWORD *)(v12 + 8) = *(_DWORD *)(v13 + 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 32))(v12 + *(int *)(v14 + 40), v13 + *(int *)(v14 + 40), v8);
  __swift_storeEnumTagSinglePayload(v12, 0, 1, v14);
  return a1;
}

uint64_t _s27BidirectionalLSTMParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C437A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_16_8();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s27BidirectionalLSTMParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C437DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_16_8();
  return OUTLINED_FUNCTION_35(a1, a2, a2, v4);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.BidirectionalLSTMParameters()
{
  uint64_t result;

  result = qword_25708C640;
  if (!qword_25708C640)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C43844()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_BiDirectionalLSTMLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_6_6(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C35540(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_7_10()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 16) = v1;
  return *(_QWORD *)(v2 - 96);
}

uint64_t OUTLINED_FUNCTION_8_8()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_10_9()
{
  return type metadata accessor for Proto_ActivationParams.OneOf_NonlinearityType(0);
}

void OUTLINED_FUNCTION_11_9()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(v0, v1);
}

void OUTLINED_FUNCTION_14_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 168) = v0;
  *(_QWORD *)(v2 - 144) = *(_QWORD *)(v1 + 72);
}

void OUTLINED_FUNCTION_15_8(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

uint64_t OUTLINED_FUNCTION_16_8()
{
  return type metadata accessor for Proto_BiDirectionalLSTMLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_17_9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 160) = (char *)&a9 - v9;
  return type metadata accessor for Proto_ActivationParams(0);
}

void OUTLINED_FUNCTION_18_3()
{
  sub_240BF0880();
}

void OUTLINED_FUNCTION_19_3()
{
  sub_240BF0880();
}

uint64_t OUTLINED_FUNCTION_20_4()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 8) = 0;
  *(_DWORD *)v0 = 0;
  *(_BYTE *)(v0 + 4) = 0;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void OUTLINED_FUNCTION_22_3()
{
  sub_240BF0880();
}

uint64_t OUTLINED_FUNCTION_24_5()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_25_5(uint64_t a1)
{
  return sub_240C41B1C(a1);
}

uint64_t OUTLINED_FUNCTION_32_3()
{
  return type metadata accessor for NeuralNetwork.Layer.Activation(0);
}

void OUTLINED_FUNCTION_34_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(v1, v0, v2);
}

uint64_t OUTLINED_FUNCTION_36_3(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 104) = result;
  *(_QWORD *)(v1 - 120) = *(_QWORD *)(result - 8);
  return result;
}

void OUTLINED_FUNCTION_38_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 128) = (char *)&a9 - v9;
}

void OUTLINED_FUNCTION_40_3()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_42_3()
{
  return type metadata accessor for Proto_LSTMParams(0);
}

void OUTLINED_FUNCTION_44_2()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;

  sub_240C02F94(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_49_3()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_52_2()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = v0;
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_53_2(uint64_t a1)
{
  return sub_240C41B1C(a1);
}

uint64_t OUTLINED_FUNCTION_54_3()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_55_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 96) = (char *)&a9 - v9;
}

uint64_t OUTLINED_FUNCTION_56_2()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

void OUTLINED_FUNCTION_57_1()
{
  uint64_t v0;
  uint64_t v1;

  sub_240CDB64C(v0, v1);
}

_QWORD *sub_240C43B04(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v5 = *(int *)(a3 + 20);
    v6 = a1 + v5;
    v7 = (uint64_t)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t _s20MLModelSpecification11FeatureTypeO13IntParametersVwxx_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t sub_240C43BCC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t sub_240C43C30(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  v5 = *(int *)(a3 + 20);
  v6 = a1 + v5;
  v7 = (uint64_t)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t sub_240C43C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t sub_240C43CF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(int *)(a3 + 20);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_240C43D5C()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C43D68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 20);
  v5 = OUTLINED_FUNCTION_20_0();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_240C43D9C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C43DA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 20);
  v6 = OUTLINED_FUNCTION_20_0();
  return __swift_storeEnumTagSinglePayload(v5, a2, a2, v6);
}

uint64_t type metadata accessor for Proto_Normalizer()
{
  uint64_t result;

  result = qword_25435FAC0;
  if (!qword_25435FAC0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C43E18()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240C43E8C@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  OUTLINED_FUNCTION_0_6();
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t _s20MLModelSpecification23NormalizerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  void (*v15)(char *, char *, uint64_t);
  char v16;
  void (*v17)(char *, uint64_t);
  uint64_t v19;

  v4 = OUTLINED_FUNCTION_20_0();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1;
  v12 = *a2;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    if (v11 == v12)
      goto LABEL_7;
LABEL_9:
    v16 = 0;
    return v16 & 1;
  }
  if (!v12)
  {
    if (!v11)
      goto LABEL_7;
    goto LABEL_9;
  }
  if (v12 == 1)
  {
    if (v11 != 1)
      goto LABEL_9;
  }
  else if (v11 != 2)
  {
    goto LABEL_9;
  }
LABEL_7:
  v13 = OUTLINED_FUNCTION_0_6();
  v14 = (char *)a1 + *(int *)(v13 + 20);
  v15 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v15(v10, v14, v4);
  v15(v8, (char *)a2 + *(int *)(v13 + 20), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v16 = sub_240F1CC90();
  v17 = *(void (**)(char *, uint64_t))(v5 + 8);
  v17(v8, v4);
  v17(v10, v4);
  return v16 & 1;
}

void sub_240C44038(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
}

void sub_240C44048(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_240C44024();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

uint64_t sub_240C44078()
{
  uint64_t v0;

  return nullsub_1(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

void sub_240C44084(uint64_t a1@<X8>)
{
  uint64_t v2;
  char v3;
  char v4;

  sub_240C44024();
  *(_QWORD *)a1 = v2;
  *(_BYTE *)(a1 + 8) = v3;
  *(_BYTE *)(a1 + 9) = v4 & 1;
}

uint64_t sub_240C440B8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = nullsub_1(*(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
  *a1 = result;
  return result;
}

void sub_240C440E4()
{
  uint64_t v0;

  sub_240E18D08(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_240C440F0()
{
  sub_240C44930();
  return sub_240F1C96C();
}

void sub_240C44128(uint64_t a1)
{
  uint64_t v1;

  sub_240E19188(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

BOOL sub_240C44134(uint64_t a1, uint64_t *a2)
{
  return sub_240C51C64(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *a2);
}

void sub_240C44150()
{
  qword_2570F9048 = (uint64_t)&unk_251110A88;
}

uint64_t *sub_240C44164()
{
  if (qword_25708AE28 != -1)
    swift_once();
  return &qword_2570F9048;
}

uint64_t sub_240C441A4@<X0>(_QWORD *a1@<X8>)
{
  sub_240C44164();
  *a1 = qword_2570F9048;
  return swift_bridgeObjectRetain();
}

uint64_t sub_240C441D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9050);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9050);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_240F1DA30;
  v5 = v4 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v4 + v3) = 1;
  *(_QWORD *)v5 = "normType";
  *(_QWORD *)(v5 + 8) = 8;
  *(_BYTE *)(v5 + 16) = 2;
  v6 = *MEMORY[0x24BE5C318];
  v7 = sub_240F1CC0C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 104))(v5, v6, v7);
  return sub_240F1CC18();
}

uint64_t sub_240C442D4()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  while (1)
  {
    result = sub_240F1C990();
    if (v0 || (v2 & 1) != 0)
      break;
    if (result == 1)
      sub_240C44344();
  }
  return result;
}

uint64_t sub_240C44344()
{
  sub_240C44930();
  return sub_240F1C9CC();
}

uint64_t sub_240C443A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t result;

  if (!*v0 || (sub_240C44930(), result = sub_240F1CB7C(), !v1))
  {
    type metadata accessor for Proto_Normalizer();
    return sub_240F1C918();
  }
  return result;
}

uint64_t sub_240C44460()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_0_6();
  sub_240C30D44(&qword_25708C658, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F1FF50);
  sub_240F1CC54();
  return sub_240F1CF78();
}

unint64_t sub_240C444CC()
{
  return 0xD000000000000010;
}

uint64_t sub_240C444E8()
{
  return sub_240C442D4();
}

uint64_t sub_240C444FC()
{
  return sub_240C443A8();
}

uint64_t sub_240C44510()
{
  sub_240C30D44(&qword_25708C678, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F1FFE0);
  return sub_240F1C960();
}

uint64_t sub_240C44560@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AE30, (uint64_t)qword_2570F9050, a1);
}

uint64_t sub_240C4457C()
{
  sub_240C30D44((unint64_t *)&qword_25708C318, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F20050);
  return sub_240F1CAF8();
}

uint64_t sub_240C445C0()
{
  sub_240C30D44((unint64_t *)&qword_25708C318, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F20050);
  return sub_240F1CB04();
}

uint64_t sub_240C44614()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9068);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9068);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 0;
  *(_QWORD *)v7 = "LMax";
  *(_QWORD *)(v7 + 8) = 4;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 1;
  *(_QWORD *)v11 = "L1";
  *((_QWORD *)v11 + 1) = 2;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "L2";
  *((_QWORD *)v13 + 1) = 2;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C44790(_QWORD *a1, uint64_t a2)
{
  uint64_t v3;

  if (*a1 != -1)
    swift_once();
  v3 = sub_240F1CC30();
  return __swift_project_value_buffer(v3, a2);
}

uint64_t sub_240C447D0@<X0>(uint64_t a1@<X8>)
{
  return sub_240C447EC(&qword_25708AE38, (uint64_t)qword_2570F9068, a1);
}

uint64_t sub_240C447EC@<X0>(_QWORD *a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_240C44790(a1, a2);
  v5 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a3, v4, v5);
}

uint64_t sub_240C44838()
{
  return sub_240C30D44(&qword_25708C650, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F1FF28);
}

uint64_t sub_240C44864()
{
  return sub_240C30D44((unint64_t *)&qword_25708C318, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F20050);
}

uint64_t sub_240C44890()
{
  return sub_240C30D44(&qword_25708C658, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F1FF50);
}

unint64_t sub_240C448C0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708C660;
  if (!qword_25708C660)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_25708C668);
    result = MEMORY[0x24268C2AC](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_25708C660);
  }
  return result;
}

uint64_t sub_240C44904()
{
  return sub_240C30D44(&qword_25708C670, (uint64_t (*)(uint64_t))type metadata accessor for Proto_Normalizer, (uint64_t)&unk_240F1FF90);
}

unint64_t sub_240C44930()
{
  unint64_t result;

  result = qword_25708C680;
  if (!qword_25708C680)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20174, &type metadata for Proto_Normalizer.NormType);
    atomic_store(result, (unint64_t *)&qword_25708C680);
  }
  return result;
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for Proto_GLMRegressor.PostEvaluationTransform(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for Proto_GLMRegressor.PostEvaluationTransform(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_240C449D0(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_240C449EC(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Normalizer.NormType()
{
  return &type metadata for Proto_Normalizer.NormType;
}

unint64_t sub_240C44A20()
{
  unint64_t result;

  result = qword_25708C688;
  if (!qword_25708C688)
  {
    result = MEMORY[0x24268C2AC](&unk_240F200D4, &type metadata for Proto_Normalizer.NormType);
    atomic_store(result, (unint64_t *)&qword_25708C688);
  }
  return result;
}

unint64_t sub_240C44A60()
{
  unint64_t result;

  result = qword_25708C690;
  if (!qword_25708C690)
  {
    result = MEMORY[0x24268C2AC](&unk_240F200FC, &type metadata for Proto_Normalizer.NormType);
    atomic_store(result, (unint64_t *)&qword_25708C690);
  }
  return result;
}

unint64_t sub_240C44AA0()
{
  unint64_t result;

  result = qword_25708C698;
  if (!qword_25708C698)
  {
    result = MEMORY[0x24268C2AC](&unk_240F2013C, &type metadata for Proto_Normalizer.NormType);
    atomic_store(result, (unint64_t *)&qword_25708C698);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_6()
{
  return type metadata accessor for Proto_Normalizer();
}

uint64_t *sub_240C44AE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  int v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    v5 = *(int *)(a3 + 24);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t sub_240C44B6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_OWORD *sub_240C44BA4(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C44C00(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *sub_240C44C64(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C44CC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  v4 = *(int *)(a3 + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t sub_240C44D24()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C44D30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 + *(int *)(a3 + 24);
  v5 = OUTLINED_FUNCTION_20_0();
  return __swift_getEnumTagSinglePayload(v4, a2, v5);
}

uint64_t sub_240C44D64()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C44D70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;

  v5 = a1 + *(int *)(a4 + 24);
  v6 = OUTLINED_FUNCTION_20_0();
  return OUTLINED_FUNCTION_35(v5, a2, a2, v6);
}

uint64_t type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C6A0);
}

uint64_t sub_240C44DB8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_240C44E30(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_2543601F8);
}

_QWORD *sub_240C44F50(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *sub_240C45034(uint64_t a1, uint64_t *a2, int *a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = a3[5];
    v8 = (_QWORD *)(a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v8 = *v9;
      if (EnumCaseMultiPayload == 1)
        v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_240F1C930();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v19 = a3[6];
    v20 = (char *)v4 + v19;
    v21 = (uint64_t)a2 + v19;
    v22 = sub_240F1C930();
    v23 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    v23(v20, v21, v22);
    v24 = a3[7];
    v25 = (_QWORD *)((char *)v4 + v24);
    v26 = (uint64_t *)((char *)a2 + v24);
    v27 = type metadata accessor for Proto_TreeEnsembleParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27))
    {
      v28 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
      memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v28 - 8) + 64));
    }
    else
    {
      v29 = v26[1];
      *v25 = *v26;
      v25[1] = v29;
      v25[2] = v26[2];
      v30 = *(int *)(v27 + 28);
      v31 = (char *)v25 + v30;
      v32 = (char *)v26 + v30;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v23(v31, (uint64_t)v32, v22);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
    }
  }
  return v4;
}

uint64_t type metadata accessor for Proto_TreeEnsembleParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360220);
}

uint64_t sub_240C452B0(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  void (*v15)(uint64_t, uint64_t);

  v4 = a1 + a2[5];
  v5 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  if (!__swift_getEnumTagSinglePayload(v4, 1, v5))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v7 = type metadata accessor for Proto_Int64Vector(0);
    else
      v7 = type metadata accessor for Proto_StringVector(0);
    v8 = v4 + *(int *)(v7 + 20);
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
  }
  v10 = a1 + a2[6];
  v11 = sub_240F1C930();
  v15 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8);
  v15(v10, v11);
  v12 = a1 + a2[7];
  v13 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  result = __swift_getEnumTagSinglePayload(v12, 1, v13);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return ((uint64_t (*)(uint64_t, uint64_t))v15)(v12 + *(int *)(v13 + 28), v11);
  }
  return result;
}

uint64_t sub_240C453E8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  char *v30;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
      v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v12 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_240F1C930();
    v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
    swift_bridgeObjectRetain();
    v16(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v17 = a3[6];
  v18 = a1 + v17;
  v19 = a2 + v17;
  v20 = sub_240F1C930();
  v21 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
  v21(v18, v19, v20);
  v22 = a3[7];
  v23 = (_QWORD *)(a1 + v22);
  v24 = (_QWORD *)(a2 + v22);
  v25 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25))
  {
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
  }
  else
  {
    v27 = v24[1];
    *v23 = *v24;
    v23[1] = v27;
    v23[2] = v24[2];
    v28 = *(int *)(v25 + 28);
    v29 = (char *)v23 + v28;
    v30 = (char *)v24 + v28;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v21((uint64_t)v29, (uint64_t)v30, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
  }
  return a1;
}

uint64_t sub_240C45624(uint64_t a1, uint64_t *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  int EnumTagSinglePayload;
  int v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(uint64_t, uint64_t, uint64_t);
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v35;
  int v36;
  uint64_t v37;
  char *v38;
  char *v39;
  void (*v40)(char *, char *, uint64_t);
  uint64_t v41;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)((char *)a2 + v7);
  v10 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v10);
  v12 = __swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10);
  if (EnumTagSinglePayload)
  {
    if (!v12)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v8 = *v9;
      if (EnumCaseMultiPayload == 1)
        v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v14 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v15 = (char *)v8 + v14;
      v16 = (char *)v9 + v14;
      v17 = sub_240F1C930();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
      goto LABEL_15;
    }
LABEL_7:
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    goto LABEL_15;
  }
  if (v12)
  {
    sub_240BE10B8((uint64_t)v8, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    goto LABEL_7;
  }
  if ((uint64_t *)a1 != a2)
  {
    sub_240BE10B8((uint64_t)v8, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    v20 = swift_getEnumCaseMultiPayload();
    *v8 = *v9;
    if (v20 == 1)
      v21 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v21 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v22 = (char *)v8 + v21;
    v23 = (char *)v9 + v21;
    v24 = sub_240F1C930();
    v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
    swift_bridgeObjectRetain();
    v25(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v26 = a3[6];
  v27 = a1 + v26;
  v28 = (uint64_t)a2 + v26;
  v29 = sub_240F1C930();
  v30 = *(_QWORD *)(v29 - 8);
  v31 = *(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 24);
  v31(v27, v28, v29);
  v32 = a3[7];
  v33 = (_QWORD *)(a1 + v32);
  v34 = (uint64_t *)((char *)a2 + v32);
  v35 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  LODWORD(v28) = __swift_getEnumTagSinglePayload((uint64_t)v33, 1, v35);
  v36 = __swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35);
  if (!(_DWORD)v28)
  {
    if (!v36)
    {
      *v33 = *v34;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v33[1] = v34[1];
      v33[2] = v34[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v31((uint64_t)v33 + *(int *)(v35 + 28), (uint64_t)v34 + *(int *)(v35 + 28), v29);
      return a1;
    }
    sub_240BE10B8((uint64_t)v33, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_20;
  }
  if (v36)
  {
LABEL_20:
    v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    return a1;
  }
  *v33 = *v34;
  v33[1] = v34[1];
  v33[2] = v34[2];
  v37 = *(int *)(v35 + 28);
  v38 = (char *)v33 + v37;
  v39 = (char *)v34 + v37;
  v40 = *(void (**)(char *, char *, uint64_t))(v30 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v40(v38, v39, v29);
  __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  return a1;
}

uint64_t sub_240C459EC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (EnumCaseMultiPayload == 1)
      v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v12 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v13 = (char *)v7 + v12;
    v14 = (char *)v8 + v12;
    v15 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
  }
  v16 = a3[6];
  v17 = a1 + v16;
  v18 = a2 + v16;
  v19 = sub_240F1C930();
  v20 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
  v20(v17, v18, v19);
  v21 = a3[7];
  v22 = (_QWORD *)(a1 + v21);
  v23 = (_QWORD *)(a2 + v21);
  v24 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v23, 1, v24))
  {
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v22, v23, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v22 = *(_OWORD *)v23;
    v22[2] = v23[2];
    v20((uint64_t)v22 + *(int *)(v24 + 28), (uint64_t)v23 + *(int *)(v24 + 28), v19);
    __swift_storeEnumTagSinglePayload((uint64_t)v22, 0, 1, v24);
  }
  return a1;
}

uint64_t sub_240C45BF4(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  int v11;
  int EnumCaseMultiPayload;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  _QWORD *v30;
  _QWORD *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  uint64_t v36;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = a3[5];
  v7 = (_QWORD *)(a1 + v6);
  v8 = (_QWORD *)(a2 + v6);
  v9 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v9);
  v11 = __swift_getEnumTagSinglePayload((uint64_t)v8, 1, v9);
  if (EnumTagSinglePayload)
  {
    if (!v11)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v7 = *v8;
      if (EnumCaseMultiPayload == 1)
        v13 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v13 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v14 = (char *)v7 + v13;
      v15 = (char *)v8 + v13;
      v16 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 32))(v14, v15, v16);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v7, 0, 1, v9);
      goto LABEL_15;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
    memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_15;
  }
  if (v11)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    v18 = swift_getEnumCaseMultiPayload();
    *v7 = *v8;
    if (v18 == 1)
      v19 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v19 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v20 = (char *)v7 + v19;
    v21 = (char *)v8 + v19;
    v22 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v23 = a3[6];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_240F1C930();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 40);
  v28(v24, v25, v26);
  v29 = a3[7];
  v30 = (_QWORD *)(a1 + v29);
  v31 = (_QWORD *)(a2 + v29);
  v32 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  LODWORD(v25) = __swift_getEnumTagSinglePayload((uint64_t)v30, 1, v32);
  v33 = __swift_getEnumTagSinglePayload((uint64_t)v31, 1, v32);
  if (!(_DWORD)v25)
  {
    if (!v33)
    {
      *v30 = *v31;
      swift_bridgeObjectRelease();
      v36 = v31[2];
      v30[1] = v31[1];
      v30[2] = v36;
      swift_bridgeObjectRelease();
      v28((uint64_t)v30 + *(int *)(v32 + 28), (uint64_t)v31 + *(int *)(v32 + 28), v26);
      return a1;
    }
    sub_240BE10B8((uint64_t)v30, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_20;
  }
  if (v33)
  {
LABEL_20:
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v30 = *(_OWORD *)v31;
  v30[2] = v31[2];
  (*(void (**)(char *, char *, uint64_t))(v27 + 32))((char *)v30 + *(int *)(v32 + 28), (char *)v31 + *(int *)(v32 + 28), v26);
  __swift_storeEnumTagSinglePayload((uint64_t)v30, 0, 1, v32);
  return a1;
}

uint64_t sub_240C45F50()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C45F5C(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  OUTLINED_FUNCTION_44_3();
  if (v5)
  {
    v4 = a3[5];
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_44_3();
    if (v5)
    {
      v4 = a3[6];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
      v4 = a3[7];
    }
  }
  v6 = OUTLINED_FUNCTION_56_3(v4);
  return OUTLINED_FUNCTION_3_10(v6, v7, v8);
}

uint64_t sub_240C45FD0()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C45FDC(uint64_t a1, uint64_t a2, uint64_t a3, int *a4)
{
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  OUTLINED_FUNCTION_43_3();
  if (v6)
  {
    v5 = a4[5];
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    OUTLINED_FUNCTION_43_3();
    if (v6)
    {
      v5 = a4[6];
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
      v5 = a4[7];
    }
  }
  v7 = OUTLINED_FUNCTION_37_3(v5);
  return OUTLINED_FUNCTION_3_6(v7, v8, v9, v10);
}

uint64_t type metadata accessor for Proto_TreeEnsembleClassifier(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360210);
}

void sub_240C46068()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_240C46134(319, &qword_254360208, (void (*)(uint64_t))type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
  if (v0 <= 0x3F)
  {
    sub_240F1C930();
    if (v1 <= 0x3F)
    {
      sub_240C46134(319, &qword_254360230, (void (*)(uint64_t))type metadata accessor for Proto_TreeEnsembleParameters);
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

void sub_240C46134(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    a3(255);
    v4 = sub_240F1CD98();
    if (!v5)
      atomic_store(v4, a2);
  }
}

_QWORD *sub_240C46180(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v7 = *(int *)(a3 + 20);
    v8 = a1 + v7;
    v9 = (uint64_t)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    v11(v8, v9, v10);
    v12 = *(int *)(a3 + 24);
    v13 = (_QWORD *)((char *)v4 + v12);
    v14 = (uint64_t *)((char *)a2 + v12);
    v15 = type metadata accessor for Proto_TreeEnsembleParameters(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15))
    {
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    }
    else
    {
      v18 = v14[1];
      *v13 = *v14;
      v13[1] = v18;
      v13[2] = v14[2];
      v19 = *(int *)(v15 + 28);
      v20 = (char *)v13 + v19;
      v21 = (char *)v14 + v19;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v11((uint64_t)v20, (uint64_t)v21, v10);
      __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
    }
  }
  return v4;
}

uint64_t sub_240C462C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t (*v9)(uint64_t, uint64_t);

  v4 = a1 + *(int *)(a2 + 20);
  v5 = sub_240F1C930();
  v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8);
  v9(v4, v5);
  v6 = a1 + *(int *)(a2 + 24);
  v7 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  result = __swift_getEnumTagSinglePayload(v6, 1, v7);
  if (!(_DWORD)result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9(v6 + *(int *)(v7 + 28), v5);
  }
  return result;
}

uint64_t sub_240C46380(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    v16 = v13[1];
    *v12 = *v13;
    v12[1] = v16;
    v12[2] = v13[2];
    v17 = *(int *)(v14 + 28);
    v18 = (char *)v12 + v17;
    v19 = (char *)v13 + v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v10((uint64_t)v18, (uint64_t)v19, v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_240C4649C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  int EnumTagSinglePayload;
  uint64_t v18;
  char *v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;

  v6 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v6;
  v7 = *(int *)(a3 + 20);
  v8 = a1 + v7;
  v9 = (uint64_t)a2 + v7;
  v10 = sub_240F1C930();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 24);
  v12(v8, v9, v10);
  v13 = *(int *)(a3 + 24);
  v14 = (_QWORD *)(a1 + v13);
  v15 = (uint64_t *)((char *)a2 + v13);
  v16 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  LODWORD(v9) = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v16);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v15, 1, v16);
  if (!(_DWORD)v9)
  {
    if (!EnumTagSinglePayload)
    {
      *v14 = *v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v14[1] = v15[1];
      v14[2] = v15[2];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      v12((uint64_t)v14 + *(int *)(v16 + 28), (uint64_t)v15 + *(int *)(v16 + 28), v10);
      return a1;
    }
    sub_240BE10B8((uint64_t)v14, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    return a1;
  }
  *v14 = *v15;
  v14[1] = v15[1];
  v14[2] = v15[2];
  v18 = *(int *)(v16 + 28);
  v19 = (char *)v14 + v18;
  v20 = (char *)v15 + v18;
  v21 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v19, v20, v10);
  __swift_storeEnumTagSinglePayload((uint64_t)v14, 0, 1, v16);
  return a1;
}

uint64_t sub_240C46640(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = (char *)(a1 + v6);
  v8 = (char *)(a2 + v6);
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32);
  v10(v7, v8, v9);
  v11 = *(int *)(a3 + 24);
  v12 = (_QWORD *)(a1 + v11);
  v13 = (_QWORD *)(a2 + v11);
  v14 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v14))
  {
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
  }
  else
  {
    *(_OWORD *)v12 = *(_OWORD *)v13;
    v12[2] = v13[2];
    v10((char *)v12 + *(int *)(v14 + 28), (char *)v13 + *(int *)(v14 + 28), v9);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v14);
  }
  return a1;
}

uint64_t sub_240C46748(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  _QWORD *v13;
  _QWORD *v14;
  uint64_t v15;
  int EnumTagSinglePayload;
  uint64_t v17;
  uint64_t v19;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v6 = *(int *)(a3 + 20);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 40);
  v11(v7, v8, v9);
  v12 = *(int *)(a3 + 24);
  v13 = (_QWORD *)(a1 + v12);
  v14 = (_QWORD *)(a2 + v12);
  v15 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  LODWORD(v8) = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v15);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v14, 1, v15);
  if (!(_DWORD)v8)
  {
    if (!EnumTagSinglePayload)
    {
      *v13 = *v14;
      swift_bridgeObjectRelease();
      v19 = v14[2];
      v13[1] = v14[1];
      v13[2] = v19;
      swift_bridgeObjectRelease();
      v11((uint64_t)v13 + *(int *)(v15 + 28), (uint64_t)v14 + *(int *)(v15 + 28), v9);
      return a1;
    }
    sub_240BE10B8((uint64_t)v13, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_6;
  }
  if (EnumTagSinglePayload)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  *(_OWORD *)v13 = *(_OWORD *)v14;
  v13[2] = v14[2];
  (*(void (**)(char *, char *, uint64_t))(v10 + 32))((char *)v13 + *(int *)(v15 + 28), (char *)v14 + *(int *)(v15 + 28), v9);
  __swift_storeEnumTagSinglePayload((uint64_t)v13, 0, 1, v15);
  return a1;
}

uint64_t sub_240C468B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C468C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_44_3();
  if (v4)
  {
    v5 = *(int *)(a3 + 20);
  }
  else
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    v5 = *(int *)(a3 + 24);
  }
  v6 = OUTLINED_FUNCTION_56_3(v5);
  return OUTLINED_FUNCTION_3_10(v6, v7, v8);
}

uint64_t sub_240C46918()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C46924(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_43_3();
  if (v8)
  {
    v9 = v7;
    v10 = *(int *)(a4 + 20);
  }
  else
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
    v10 = *(int *)(a4 + 24);
  }
  return OUTLINED_FUNCTION_3_6(a1 + v10, a2, a2, v9);
}

uint64_t type metadata accessor for Proto_TreeEnsembleRegressor(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254360168);
}

void sub_240C46998()
{
  unint64_t v0;
  unint64_t v1;

  sub_240F1C930();
  if (v0 <= 0x3F)
  {
    sub_240C46134(319, &qword_254360230, (void (*)(uint64_t))type metadata accessor for Proto_TreeEnsembleParameters);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

uint64_t *sub_240C46A38(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v3 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v4 = *a2;
  *a1 = *a2;
  if ((v3 & 0x20000) != 0)
  {
    v5 = (uint64_t *)(v4 + ((v3 + 16) & ~(unint64_t)v3));
    swift_retain();
  }
  else
  {
    v5 = a1;
    v6 = a2[2];
    a1[1] = a2[1];
    a1[2] = v6;
    v7 = *(int *)(a3 + 28);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return v5;
}

uint64_t sub_240C46AE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 28);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *sub_240C46B38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(a3 + 28);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *sub_240C46BC0(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 28);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t sub_240C46C54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  v4 = *(int *)(a3 + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *sub_240C46CB8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v6 = a2[2];
  a1[1] = a2[1];
  a1[2] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 28);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t sub_240C46D34()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240C46D40(unint64_t *a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_71_1(*a1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v4 = OUTLINED_FUNCTION_56_3(*(int *)(a3 + 28));
    OUTLINED_FUNCTION_3_10(v4, v5, v6);
  }
}

uint64_t sub_240C46D90()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240C46D9C()
{
  int v0;
  _QWORD *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_72_1();
  if (v3)
  {
    *v1 = (v0 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_20_0();
    v5 = OUTLINED_FUNCTION_37_3(*(int *)(v4 + 28));
    OUTLINED_FUNCTION_3_6(v5, v6, v7, v8);
  }
}

uint64_t sub_240C46DE0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

_QWORD *sub_240C46E68(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  __int128 v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, uint64_t, uint64_t);
  uint64_t v12;

  v3 = (_QWORD *)a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v12 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v5 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
    *(_OWORD *)(a1 + 48) = v5;
    *(_BYTE *)(a1 + 64) = *((_BYTE *)a2 + 64);
    v6 = a2[10];
    v7 = *(int *)(a3 + 56);
    v8 = (uint64_t)a2 + v7;
    v9 = a1 + v7;
    *(_QWORD *)(a1 + 72) = a2[9];
    *(_QWORD *)(a1 + 80) = v6;
    v10 = sub_240F1C930();
    v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v9, v8, v10);
  }
  return v3;
}

uint64_t sub_240C46F2C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 56);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t sub_240C46F74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(_QWORD *)(a2 + 80);
  v6 = *(int *)(a3 + 56);
  v7 = a2 + v6;
  v8 = a1 + v6;
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v5;
  v9 = sub_240F1C930();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v8, v7, v9);
  return a1;
}

uint64_t sub_240C4700C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  v6 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v6;
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  *(_QWORD *)(a1 + 56) = *(_QWORD *)(a2 + 56);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v7 = *(int *)(a3 + 56);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  return a1;
}

uint64_t sub_240C470D0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  v5 = *(int *)(a3 + 56);
  v6 = a1 + v5;
  v7 = a2 + v5;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t sub_240C47154(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_BYTE *)(a1 + 64) = *(_BYTE *)(a2 + 64);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  v6 = *(int *)(a3 + 56);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  return a1;
}

uint64_t sub_240C47200()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

void sub_240C4720C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (a2 == 0x7FFFFFFF)
  {
    OUTLINED_FUNCTION_71_1(*(_QWORD *)(a1 + 72));
    OUTLINED_FUNCTION_156();
  }
  else
  {
    OUTLINED_FUNCTION_20_0();
    v4 = OUTLINED_FUNCTION_56_3(*(int *)(a3 + 56));
    OUTLINED_FUNCTION_3_10(v4, v5, v6);
  }
}

uint64_t sub_240C4725C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

void sub_240C47268()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_72_1();
  if (v3)
  {
    *(_QWORD *)(v1 + 72) = (v0 - 1);
    OUTLINED_FUNCTION_156();
  }
  else
  {
    v4 = v2;
    OUTLINED_FUNCTION_20_0();
    v5 = OUTLINED_FUNCTION_37_3(*(int *)(v4 + 56));
    OUTLINED_FUNCTION_3_6(v5, v6, v7, v8);
  }
}

uint64_t type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C6B0);
}

uint64_t sub_240C472C0()
{
  uint64_t result;
  unint64_t v1;

  result = sub_240F1C930();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_240C47364()
{
  OUTLINED_FUNCTION_60_1();
}

void sub_240C47370(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C4748C(a1, a2, a3, (uint64_t (*)(void))sub_240C47364);
}

void sub_240C4737C(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_240C474B8(a1, a2, a3, (uint64_t (*)(_QWORD))sub_240C47364);
}

void sub_240C47388()
{
  uint64_t v0;

  sub_240E18D1C(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_240C47394()
{
  sub_240C4BBD8();
  return sub_240F1C96C();
}

void sub_240C473CC(uint64_t a1)
{
  uint64_t v1;

  sub_240E192D0(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

uint64_t sub_240C473D8(uint64_t a1, uint64_t a2)
{
  return sub_240C52BE0(*(_QWORD *)a1, *(unsigned __int8 *)(a1 + 8), *(_QWORD *)a2, *(unsigned __int8 *)(a2 + 8));
}

void sub_240C473F4()
{
  qword_2570F9080 = (uint64_t)&unk_251113B88;
}

uint64_t *sub_240C47408()
{
  if (qword_25708AE40 != -1)
    swift_once();
  return &qword_2570F9080;
}

uint64_t sub_240C47448@<X0>(_QWORD *a1@<X8>)
{
  sub_240C47408();
  *a1 = qword_2570F9080;
  return swift_bridgeObjectRetain();
}

void sub_240C47474()
{
  OUTLINED_FUNCTION_60_1();
}

void sub_240C47480(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C4748C(a1, a2, a3, (uint64_t (*)(void))sub_240C47474);
}

void sub_240C4748C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  uint64_t v4;
  __int16 v5;

  v4 = a4();
  OUTLINED_FUNCTION_57_2(v4, v5);
  OUTLINED_FUNCTION_44();
}

void sub_240C474AC(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  sub_240C474B8(a1, a2, a3, (uint64_t (*)(_QWORD))sub_240C47474);
}

void sub_240C474B8(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;
  __int16 v5;

  v4 = a4(*a1);
  OUTLINED_FUNCTION_57_2(v4, v5);
  OUTLINED_FUNCTION_44();
}

void sub_240C474DC(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = nullsub_1(*(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
  OUTLINED_FUNCTION_44();
}

void sub_240C47504()
{
  uint64_t v0;

  sub_240E18D30(*(_QWORD *)v0, *(unsigned __int8 *)(v0 + 8));
}

uint64_t sub_240C47510()
{
  sub_240C4BC14();
  return sub_240F1C96C();
}

void sub_240C47548(uint64_t a1)
{
  uint64_t v1;

  sub_240E19254(a1, *(_QWORD *)v1, *(unsigned __int8 *)(v1 + 8));
}

void sub_240C47554(_QWORD *a1@<X8>)
{
  type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(0);
  *a1 = 0;
  a1[1] = 0;
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void _s20MLModelSpecification12TreeEnsembleV0C4NodeVAEycfC_0(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_BYTE *)(a1 + 64) = 0;
  *(_QWORD *)(a1 + 72) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 80) = 0;
  type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0);
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C475D0(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = v2;
  OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C47604()
{
  qword_2570F9088 = (uint64_t)&unk_251112A08;
}

uint64_t *sub_240C47618()
{
  if (qword_25708AE48 != -1)
    swift_once();
  return &qword_2570F9088;
}

uint64_t sub_240C47658@<X0>(_QWORD *a1@<X8>)
{
  sub_240C47618();
  *a1 = qword_2570F9088;
  return swift_bridgeObjectRetain();
}

void sub_240C47684(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD **v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)(uint64_t);
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t v25;

  v25 = a2;
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_313();
  type metadata accessor for Proto_StringVector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_11_3();
  v10 = (_QWORD *)(v8 - v9);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (_QWORD **)((char *)&v24 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C7B8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_24_1();
  v17 = v16 - v15;
  v19 = v16 - v15 + *(int *)(v18 + 48);
  sub_240C4BC50(a1, v16 - v15);
  sub_240C4BC50(v25, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240C4BC50(v17, (uint64_t)v10);
    if (OUTLINED_FUNCTION_14_2() == 1)
    {
      sub_240C2837C(v19, (uint64_t)v2, type metadata accessor for Proto_Int64Vector);
      if ((sub_240BEACE0(*v10, *v2) & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v2);
      v20 = (uint64_t)v10;
LABEL_14:
      OUTLINED_FUNCTION_3_2(v20);
      sub_240BE10B8(v17, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
      goto LABEL_15;
    }
    v21 = type metadata accessor for Proto_Int64Vector;
    v22 = (uint64_t)v10;
  }
  else
  {
    sub_240C4BC50(v17, (uint64_t)v13);
    if (OUTLINED_FUNCTION_14_2() != 1)
    {
      sub_240C2837C(v19, (uint64_t)v3, type metadata accessor for Proto_StringVector);
      sub_240BEAC24(*v13, *v3);
      if ((v23 & 1) != 0)
      {
        OUTLINED_FUNCTION_20_0();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        sub_240F1CC90();
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v3);
      v20 = (uint64_t)v13;
      goto LABEL_14;
    }
    v21 = type metadata accessor for Proto_StringVector;
    v22 = (uint64_t)v13;
  }
  sub_240BE10B8(v22, v21);
  sub_240BE0B68(v17, &qword_25708C7B8);
LABEL_15:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C4796C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = OUTLINED_FUNCTION_38_3(a1);
  v3 = type metadata accessor for Proto_TreeEnsembleClassifier(v2);
  v4 = v1 + *(int *)(v3 + 20);
  v5 = OUTLINED_FUNCTION_67_1();
  __swift_storeEnumTagSinglePayload(v4, 1, 1, v5);
  OUTLINED_FUNCTION_19_2();
  v6 = OUTLINED_FUNCTION_52_3(*(int *)(v3 + 28));
  return OUTLINED_FUNCTION_3_6(v6, v7, v8, v9);
}

uint64_t sub_240C479C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = OUTLINED_FUNCTION_38_3(a1);
  v2 = type metadata accessor for Proto_TreeEnsembleRegressor(v1);
  OUTLINED_FUNCTION_19_2();
  v3 = OUTLINED_FUNCTION_52_3(*(int *)(v2 + 24));
  return OUTLINED_FUNCTION_35(v3, v4, v5, v6);
}

uint64_t sub_240C479F0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9090);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9090);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1E9E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "NoTransform";
  *(_QWORD *)(v7 + 8) = 11;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "Classification_SoftMax";
  *(_QWORD *)(v11 + 8) = 22;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "Regression_Logistic";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "Classification_SoftMaxWithZeroClassReference";
  *((_QWORD *)v15 + 1) = 44;
  v15[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C47BA8(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE50, (uint64_t)qword_2570F9090);
}

uint64_t sub_240C47BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;
  _QWORD *v12;
  char *v13;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F90A8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F90A8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1DA40;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "nodes";
  *(_QWORD *)(v7 + 8) = 5;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "numPredictionDimensions";
  *((_QWORD *)v11 + 1) = 23;
  v11[16] = 2;
  v10();
  v12 = (_QWORD *)((char *)v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "basePredictionValue";
  *((_QWORD *)v13 + 1) = 19;
  v13[16] = 2;
  v10();
  return sub_240F1CC18();
}

void sub_240C47D4C()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  v1 = OUTLINED_FUNCTION_5_12();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 3:
          sub_240F1CA50();
          break;
        case 2:
          OUTLINED_FUNCTION_32_4();
          break;
        case 1:
          OUTLINED_FUNCTION_6_7();
          sub_240C47DD4();
          break;
      }
      v1 = OUTLINED_FUNCTION_27_4();
    }
  }
  OUTLINED_FUNCTION_47_3();
}

uint64_t sub_240C47DD4()
{
  type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0);
  sub_240BE18B8((unint64_t *)&qword_25708C718, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F208E0);
  return sub_240F1CABC();
}

uint64_t sub_240C47E58()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  OUTLINED_FUNCTION_58_2();
  if (!*(_QWORD *)(*(_QWORD *)v1 + 16)
    || (type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0),
        sub_240BE18B8((unint64_t *)&qword_25708C718, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F208E0), v2 = v0, result = sub_240F1CBF4(), !v0))
  {
    if (!*(_QWORD *)(v3 + 8) || (result = OUTLINED_FUNCTION_35_3(), (v0 = v2) == 0))
    {
      if (!*(_QWORD *)(*(_QWORD *)(v3 + 16) + 16) || (result = sub_240F1CB58(), !v0))
      {
        type metadata accessor for Proto_TreeEnsembleParameters(0);
        return OUTLINED_FUNCTION_50_3();
      }
    }
  }
  return result;
}

void sub_240C47F58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)&v10 - v6;
  sub_240BEF57C();
  if ((v8 & 1) != 0
    && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8)
    && (sub_240BEACE4(*(_QWORD *)(a1 + 16), *(_QWORD *)(a2 + 16)) & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_49_4();
    OUTLINED_FUNCTION_11_6(*(int *)(v9 + 28));
    OUTLINED_FUNCTION_10_6(*(int *)(v9 + 28));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_12_4((uint64_t)v7);
  }
  OUTLINED_FUNCTION_13();
}

unint64_t sub_240C48038()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240C48054@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 28);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240C48094(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 28);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240C480D4())(_QWORD, _QWORD)
{
  return nullsub_1;
}

void sub_240C480E8()
{
  sub_240C47D4C();
}

uint64_t sub_240C480FC()
{
  return sub_240C47E58();
}

uint64_t sub_240C48110()
{
  sub_240BE18B8(&qword_25708C780, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20810);
  return sub_240F1C960();
}

uint64_t sub_240C48160(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE58, (uint64_t)qword_2570F90A8);
}

uint64_t sub_240C4817C()
{
  sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
  return sub_240F1CAF8();
}

uint64_t sub_240C481BC()
{
  return sub_240C4B5F8(type metadata accessor for Proto_TreeEnsembleParameters, &qword_25708C738, (uint64_t)&unk_240F20780);
}

uint64_t sub_240C481E8()
{
  sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
  return sub_240F1CB04();
}

uint64_t sub_240C48240()
{
  uint64_t result;

  result = sub_240F1CCE4();
  qword_2570F90C0 = 0xD00000000000001CLL;
  *(_QWORD *)algn_2570F90C8 = 0x8000000240F52150;
  return result;
}

uint64_t *sub_240C482AC()
{
  if (qword_25708AE60 != -1)
    swift_once();
  return &qword_2570F90C0;
}

uint64_t sub_240C482EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F90D0);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F90D0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F201C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "treeId";
  *(_QWORD *)(v7 + 8) = 6;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "nodeId";
  *(_QWORD *)(v11 + 8) = 6;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "nodeBehavior";
  *((_QWORD *)v13 + 1) = 12;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 10;
  *(_QWORD *)v15 = "branchFeatureIndex";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 11;
  *(_QWORD *)v17 = "branchFeatureValue";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 12;
  *(_QWORD *)v19 = "trueChildNodeId";
  *((_QWORD *)v19 + 1) = 15;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 13;
  *(_QWORD *)v21 = "falseChildNodeId";
  *((_QWORD *)v21 + 1) = 16;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 14;
  *(_QWORD *)v23 = "missingValueTracksTrueChild";
  *((_QWORD *)v23 + 1) = 27;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 20;
  *(_QWORD *)v25 = "evaluationInfo";
  *((_QWORD *)v25 + 1) = 14;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 30;
  *(_QWORD *)v27 = "relativeHitRate";
  *((_QWORD *)v27 + 1) = 15;
  v27[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C485F0()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = OUTLINED_FUNCTION_5_12();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      switch(result)
      {
        case 1:
        case 2:
        case 10:
        case 12:
        case 13:
          OUTLINED_FUNCTION_32_4();
          break;
        case 3:
          OUTLINED_FUNCTION_6_7();
          sub_240C48714();
          break;
        case 4:
        case 5:
        case 6:
        case 7:
        case 8:
        case 9:
        case 15:
        case 16:
        case 17:
        case 18:
        case 19:
          break;
        case 11:
          goto LABEL_8;
        case 14:
          sub_240F1C9C0();
          break;
        case 20:
          OUTLINED_FUNCTION_6_7();
          sub_240C48774();
          break;
        default:
          if (result == 30)
LABEL_8:
            OUTLINED_FUNCTION_69_1();
          break;
      }
      result = OUTLINED_FUNCTION_27_4();
    }
  }
  return result;
}

uint64_t sub_240C48714()
{
  sub_240C4BC14();
  return sub_240F1C9CC();
}

uint64_t sub_240C48774()
{
  type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(0);
  sub_240BE18B8(&qword_25708C6F8, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F205C8);
  return sub_240F1CABC();
}

uint64_t sub_240C487F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  OUTLINED_FUNCTION_64_1();
  if (!*(_QWORD *)v1 || (result = OUTLINED_FUNCTION_4_8(), (v2 = v0) == 0))
  {
    if (!*(_QWORD *)(v1 + 8) || (result = OUTLINED_FUNCTION_4_8(), (v2 = v0) == 0))
    {
      if (!*(_QWORD *)(v1 + 16) || (sub_240C4BC14(), result = OUTLINED_FUNCTION_46_2(), (v2 = v0) == 0))
      {
        if (!*(_QWORD *)(v1 + 32) || (result = OUTLINED_FUNCTION_4_8(), (v2 = v0) == 0))
        {
          if (*(double *)(v1 + 40) == 0.0 || (result = OUTLINED_FUNCTION_45_2(), (v2 = v0) == 0))
          {
            if (!*(_QWORD *)(v1 + 48) || (result = OUTLINED_FUNCTION_4_8(), (v2 = v0) == 0))
            {
              if (!*(_QWORD *)(v1 + 56) || (result = OUTLINED_FUNCTION_4_8(), (v2 = v0) == 0))
              {
                if (*(_BYTE *)(v1 + 64) != 1 || (v0 = v2, result = sub_240F1CB70(), !v2))
                {
                  if (!*(_QWORD *)(*(_QWORD *)(v1 + 72) + 16)
                    || (type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(0),
                        sub_240BE18B8(&qword_25708C6F8, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F205C8), v0 = v2, result = sub_240F1CBF4(), !v2))
                  {
                    if (*(double *)(v1 + 80) == 0.0 || (result = OUTLINED_FUNCTION_45_2(), !v0))
                    {
                      type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0);
                      return sub_240F1C918();
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  return result;
}

void _s20MLModelSpecification12TreeEnsembleV0C4NodeV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  char v9;
  uint64_t v10;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_2();
  if (v7 && *(_QWORD *)(a1 + 8) == *(_QWORD *)(a2 + 8))
  {
    v8 = *(_QWORD *)(a2 + 16);
    if (*(_BYTE *)(a2 + 24) == 1)
      __asm { BR              X11 }
    if (*(_QWORD *)(a1 + 16) == v8
      && *(_QWORD *)(a1 + 32) == *(_QWORD *)(a2 + 32)
      && *(double *)(a1 + 40) == *(double *)(a2 + 40)
      && *(_QWORD *)(a1 + 48) == *(_QWORD *)(a2 + 48)
      && *(_QWORD *)(a1 + 56) == *(_QWORD *)(a2 + 56)
      && *(unsigned __int8 *)(a1 + 64) == *(unsigned __int8 *)(a2 + 64))
    {
      sub_240BEF8F0();
      if ((v9 & 1) != 0 && *(double *)(a1 + 80) == *(double *)(a2 + 80))
      {
        v10 = type metadata accessor for Proto_TreeEnsembleParameters.TreeNode(0);
        OUTLINED_FUNCTION_11_6(*(int *)(v10 + 56));
        OUTLINED_FUNCTION_10_6(*(int *)(v10 + 56));
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_5_7();
        OUTLINED_FUNCTION_9_5();
        OUTLINED_FUNCTION_12_4(v2);
      }
    }
  }
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C48B88(uint64_t a1, uint64_t a2)
{
  return sub_240C493F8(a1, a2, (void (*)(void))sub_240C482AC, &qword_2570F90C0);
}

uint64_t sub_240C48BA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 56);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240C48BE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 56);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

uint64_t (*sub_240C48C20())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_240C48C34()
{
  return sub_240C485F0();
}

uint64_t sub_240C48C48()
{
  return sub_240C487F4();
}

uint64_t sub_240C48C5C()
{
  sub_240BE18B8(&qword_25708C7A0, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F20720);
  return sub_240F1C960();
}

uint64_t sub_240C48CAC(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE68, (uint64_t)qword_2570F90D0);
}

uint64_t sub_240C48CC8()
{
  sub_240BE18B8((unint64_t *)&qword_25708C718, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F208E0);
  return sub_240F1CAF8();
}

uint64_t sub_240C48D08()
{
  return sub_240C4B5F8(type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, &qword_25708C720, (uint64_t)&unk_240F20690);
}

uint64_t sub_240C48D34()
{
  sub_240BE18B8((unint64_t *)&qword_25708C718, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F208E0);
  return sub_240F1CB04();
}

uint64_t sub_240C48D88()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F90E8);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F90E8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F201D0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 0;
  *(_QWORD *)v7 = "BranchOnValueLessThanEqual";
  *(_QWORD *)(v7 + 8) = 26;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 1;
  *(_QWORD *)v11 = "BranchOnValueLessThan";
  *(_QWORD *)(v11 + 8) = 21;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 2;
  *(_QWORD *)v13 = "BranchOnValueGreaterThanEqual";
  *((_QWORD *)v13 + 1) = 29;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 3;
  *(_QWORD *)v15 = "BranchOnValueGreaterThan";
  *((_QWORD *)v15 + 1) = 24;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 4;
  *(_QWORD *)v17 = "BranchOnValueEqual";
  *((_QWORD *)v17 + 1) = 18;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 5;
  *(_QWORD *)v19 = "BranchOnValueNotEqual";
  *((_QWORD *)v19 + 1) = 21;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 6;
  *(_QWORD *)v21 = "LeafNode";
  *((_QWORD *)v21 + 1) = 8;
  v21[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C48FE0(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE70, (uint64_t)qword_2570F90E8);
}

uint64_t sub_240C48FFC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t v2;

  if (qword_25708AE60 != -1)
    swift_once();
  v1 = qword_2570F90C0;
  v2 = *(_QWORD *)algn_2570F90C8;
  swift_bridgeObjectRetain();
  result = sub_240F1CCE4();
  qword_2570F9100 = v1;
  *(_QWORD *)algn_2570F9108 = v2;
  return result;
}

uint64_t *sub_240C49090()
{
  if (qword_25708AE78 != -1)
    swift_once();
  return &qword_2570F9100;
}

uint64_t sub_240C490D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9110);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9110);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1D370;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "evaluationIndex";
  *(_QWORD *)(v7 + 8) = 15;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "evaluationValue";
  *((_QWORD *)v11 + 1) = 15;
  v11[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C49224()
{
  uint64_t v0;
  uint64_t result;
  char v2;

  result = OUTLINED_FUNCTION_5_12();
  if (!v0)
  {
    while ((v2 & 1) == 0)
    {
      if (result == 2)
      {
        OUTLINED_FUNCTION_69_1();
      }
      else if (result == 1)
      {
        OUTLINED_FUNCTION_32_4();
      }
      result = OUTLINED_FUNCTION_27_4();
    }
  }
  return result;
}

void sub_240C49294()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_58_2();
  if (!*v1 || (OUTLINED_FUNCTION_35_3(), (v0 = v2) == 0))
  {
    if (*(double *)(v3 + 8) == 0.0 || (sub_240F1CBC4(), !v0))
    {
      type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(0);
      OUTLINED_FUNCTION_50_3();
    }
  }
  OUTLINED_FUNCTION_47_3();
}

void sub_240C49320(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_2();
  if (v7 && *(double *)(a1 + 8) == *(double *)(a2 + 8))
  {
    v8 = type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo(0);
    OUTLINED_FUNCTION_11_6(*(int *)(v8 + 24));
    OUTLINED_FUNCTION_10_6(*(int *)(v8 + 24));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_12_4(v2);
  }
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C493E0(uint64_t a1, uint64_t a2)
{
  return sub_240C493F8(a1, a2, (void (*)(void))sub_240C49090, &qword_2570F9100);
}

uint64_t sub_240C493F8(uint64_t a1, uint64_t a2, void (*a3)(void), uint64_t *a4)
{
  uint64_t v5;

  a3();
  v5 = *a4;
  swift_bridgeObjectRetain();
  return v5;
}

uint64_t (*sub_240C4943C())(_QWORD, _QWORD)
{
  return nullsub_1;
}

uint64_t sub_240C49450()
{
  return sub_240C49224();
}

void sub_240C49464()
{
  sub_240C49294();
}

uint64_t sub_240C49478()
{
  sub_240BE18B8(&qword_25708C7B0, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F20590);
  return sub_240F1C960();
}

uint64_t sub_240C494C8(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE80, (uint64_t)qword_2570F9110);
}

uint64_t sub_240C494E4()
{
  sub_240BE18B8(&qword_25708C6F8, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F205C8);
  return sub_240F1CAF8();
}

uint64_t sub_240C49524()
{
  return sub_240C4B5F8(type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, &qword_25708C700, (uint64_t)&unk_240F20500);
}

uint64_t sub_240C49550()
{
  sub_240BE18B8(&qword_25708C6F8, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F205C8);
  return sub_240F1CB04();
}

uint64_t sub_240C495A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9128);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9128);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1E9E0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "treeEnsemble";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "postEvaluationTransform";
  *(_QWORD *)(v11 + 8) = 23;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 100;
  *(_QWORD *)v13 = "stringClassLabels";
  *((_QWORD *)v13 + 1) = 17;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 101;
  *(_QWORD *)v15 = "int64ClassLabels";
  *((_QWORD *)v15 + 1) = 16;
  v15[16] = 2;
  v10();
  return sub_240F1CC18();
}

void sub_240C49760(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    v3 = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    switch(v3)
    {
      case 101:
        v5 = OUTLINED_FUNCTION_17_2();
        sub_240C49C7C(v5, v6, v7, v8);
        break;
      case 2:
        OUTLINED_FUNCTION_30_3();
        break;
      case 100:
        v9 = OUTLINED_FUNCTION_17_2();
        sub_240C49880(v9, v10, v11, v12);
        break;
      case 1:
        OUTLINED_FUNCTION_6_7();
        sub_240C497EC();
        break;
    }
  }
  OUTLINED_FUNCTION_53_3();
}

uint64_t sub_240C497EC()
{
  type metadata accessor for Proto_TreeEnsembleClassifier(0);
  type metadata accessor for Proto_TreeEnsembleParameters(0);
  sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
  return sub_240F1CAC8();
}

void sub_240C49880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = type metadata accessor for Proto_StringVector(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v35 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE08);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v33 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v33 - v23, 1, 1, v5);
  v34 = a1 + *(int *)(type metadata accessor for Proto_TreeEnsembleClassifier(0) + 20);
  sub_240C283B4(v34, (uint64_t)v12, &qword_25708BDE0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDE0);
    v26 = v13;
  }
  else
  {
    v33 = v9;
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    }
    else
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708BE08);
      v27 = (uint64_t)v33;
      sub_240C2837C((uint64_t)v16, (uint64_t)v33, type metadata accessor for Proto_StringVector);
      sub_240C2837C(v27, (uint64_t)v24, type metadata accessor for Proto_StringVector);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
  }
  v28 = v36;
  sub_240BE18B8(&qword_25708C260, type metadata accessor for Proto_StringVector, (uint64_t)&unk_240F2AE54);
  sub_240F1CAC8();
  if (v28)
  {
    v29 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v29, &qword_25708BE08);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708BE08);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708BE08);
    v29 = (uint64_t)v22;
    goto LABEL_10;
  }
  v30 = (uint64_t)v22;
  v31 = v35;
  sub_240C2837C(v30, v35, type metadata accessor for Proto_StringVector);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708BE08);
  v32 = v34;
  sub_240BE0B68(v34, &qword_25708BDE0);
  sub_240C2837C(v31, v32, type metadata accessor for Proto_StringVector);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v32, 0, 1, v26);
}

void sub_240C49C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  int EnumTagSinglePayload;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = a2;
  v39 = a4;
  v38 = a3;
  v5 = type metadata accessor for Proto_Int64Vector(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v35 = (uint64_t)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v33 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v33 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v33 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE10);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v33 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v33 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v33 - v23, 1, 1, v5);
  v34 = a1 + *(int *)(type metadata accessor for Proto_TreeEnsembleClassifier(0) + 20);
  sub_240C283B4(v34, (uint64_t)v12, &qword_25708BDE0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDE0);
    v26 = v13;
  }
  else
  {
    v33 = v9;
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    v26 = v13;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
      v27 = (uint64_t)v33;
      sub_240C2837C((uint64_t)v16, (uint64_t)v33, type metadata accessor for Proto_Int64Vector);
      sub_240C2837C(v27, (uint64_t)v24, type metadata accessor for Proto_Int64Vector);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    }
  }
  v28 = v36;
  sub_240BE18B8(&qword_25435FB40, type metadata accessor for Proto_Int64Vector, (uint64_t)&unk_240F2ACEC);
  sub_240F1CAC8();
  if (v28)
  {
    v29 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v29, &qword_25708BE10);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708BE10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
    v29 = (uint64_t)v22;
    goto LABEL_10;
  }
  v30 = (uint64_t)v22;
  v31 = v35;
  sub_240C2837C(v30, v35, type metadata accessor for Proto_Int64Vector);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
  v32 = v34;
  sub_240BE0B68(v34, &qword_25708BDE0);
  sub_240C2837C(v31, v32, type metadata accessor for Proto_Int64Vector);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v32, 0, 1, v26);
}

void sub_240C4A078()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_64_1();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  OUTLINED_FUNCTION_22_4();
  sub_240C4A1EC(v6);
  if (!v0)
  {
    if (*v1)
    {
      sub_240C4BBD8();
      OUTLINED_FUNCTION_46_2();
    }
    v7 = type metadata accessor for Proto_TreeEnsembleClassifier(0);
    sub_240C283B4((uint64_t)v1 + *(int *)(v7 + 20), v5, &qword_25708BDE0);
    v8 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
    if (__swift_getEnumTagSinglePayload(v5, 1, v8) != 1)
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        OUTLINED_FUNCTION_22_4();
        sub_240C4A500(v9);
      }
      else
      {
        OUTLINED_FUNCTION_22_4();
        sub_240C4A35C(v10);
      }
      sub_240BE10B8(v5, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
    }
    sub_240F1C918();
  }
}

void sub_240C4A1EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_TreeEnsembleClassifier(0);
  sub_240C283B4(a1 + *(int *)(v8 + 28), (uint64_t)v4, &qword_25708BDE8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDE8);
  }
  else
  {
    sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_TreeEnsembleParameters);
    sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
    sub_240F1CC00();
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_TreeEnsembleParameters);
  }
}

void sub_240C4A35C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_StringVector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_TreeEnsembleClassifier(0);
  sub_240C283B4(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_25708BDE0);
  v9 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v9) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() != 1)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_StringVector);
      sub_240BE18B8(&qword_25708C260, type metadata accessor for Proto_StringVector, (uint64_t)&unk_240F2AE54);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_StringVector);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
  }
  __break(1u);
}

void sub_240C4A500(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64Vector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_TreeEnsembleClassifier(0);
  sub_240C283B4(a1 + *(int *)(v8 + 20), (uint64_t)v4, &qword_25708BDE0);
  v9 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v9) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDE0);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      sub_240BE18B8(&qword_25435FB40, type metadata accessor for Proto_Int64Vector, (uint64_t)&unk_240F2ACEC);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
  }
  __break(1u);
}

void _s20MLModelSpecification35TreeEnsembleClassifierConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t *v38;
  uint64_t v39;
  char v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  void (*v56)(char *, uint64_t, uint64_t);
  char *v57;
  char *v58;
  void (*v59)(uint64_t, uint64_t);
  uint64_t v60;
  char *v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v73 = a2;
  v5 = OUTLINED_FUNCTION_20_0();
  v64 = *(_QWORD *)(v5 - 8);
  v65 = v5;
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_85();
  v63 = v6;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v7);
  v62 = (char *)&v60 - v8;
  v70 = OUTLINED_FUNCTION_67_1();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v61 = (char *)&v60 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C7C0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_253(v12, v60);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_85();
  v66 = v14;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v15);
  v68 = (uint64_t)&v60 - v16;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v17);
  v69 = (uint64_t)&v60 - v18;
  v19 = OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_313();
  v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C7C8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_10_3();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_11_3();
  v26 = v24 - v25;
  v28 = MEMORY[0x24BDAC7A8](v27);
  v30 = (char *)&v60 - v29;
  MEMORY[0x24BDAC7A8](v28);
  v32 = (char *)&v60 - v31;
  v33 = type metadata accessor for Proto_TreeEnsembleClassifier(0);
  v34 = *(int *)(v33 + 28);
  v72 = a1;
  OUTLINED_FUNCTION_36_4(a1 + v34, (uint64_t)v32);
  v35 = v33;
  OUTLINED_FUNCTION_36_4(v73 + *(int *)(v33 + 28), (uint64_t)v30);
  v36 = v3 + *(int *)(v21 + 48);
  OUTLINED_FUNCTION_36_4((uint64_t)v32, v3);
  OUTLINED_FUNCTION_36_4((uint64_t)v30, v36);
  OUTLINED_FUNCTION_7_1(v3, 1, v19);
  if (v37)
  {
    OUTLINED_FUNCTION_13_5((uint64_t)v30);
    OUTLINED_FUNCTION_13_5((uint64_t)v32);
    OUTLINED_FUNCTION_7_1(v36, 1, v19);
    if (v37)
    {
      sub_240BE0B68(v3, &qword_25708BDE8);
      goto LABEL_12;
    }
LABEL_9:
    v38 = &qword_25708C7C8;
    v39 = v3;
LABEL_10:
    sub_240BE0B68(v39, v38);
    goto LABEL_24;
  }
  sub_240C283B4(v3, v26, &qword_25708BDE8);
  OUTLINED_FUNCTION_7_1(v36, 1, v19);
  if (v37)
  {
    sub_240BE0B68((uint64_t)v30, &qword_25708BDE8);
    sub_240BE0B68((uint64_t)v32, &qword_25708BDE8);
    sub_240BE10B8(v26, type metadata accessor for Proto_TreeEnsembleParameters);
    goto LABEL_9;
  }
  sub_240C2837C(v36, v2, type metadata accessor for Proto_TreeEnsembleParameters);
  sub_240C47F58(v26, v2);
  v41 = v40;
  sub_240BE10B8(v2, type metadata accessor for Proto_TreeEnsembleParameters);
  OUTLINED_FUNCTION_13_5((uint64_t)v30);
  OUTLINED_FUNCTION_13_5((uint64_t)v32);
  sub_240BE10B8(v26, type metadata accessor for Proto_TreeEnsembleParameters);
  OUTLINED_FUNCTION_13_5(v3);
  if ((v41 & 1) == 0)
    goto LABEL_24;
LABEL_12:
  v42 = v72;
  v43 = v73;
  if ((sub_240C52BE0(*(_QWORD *)v72, *(unsigned __int8 *)(v72 + 8), *(_QWORD *)v73, *(unsigned __int8 *)(v73 + 8)) & 1) == 0)
    goto LABEL_24;
  v44 = v35;
  v45 = v69;
  OUTLINED_FUNCTION_15_9(v42 + *(int *)(v35 + 20), v69);
  v46 = v68;
  OUTLINED_FUNCTION_15_9(v43 + *(int *)(v35 + 20), v68);
  v47 = v71;
  v48 = v71 + *(int *)(v67 + 48);
  OUTLINED_FUNCTION_15_9(v45, v71);
  OUTLINED_FUNCTION_15_9(v46, v48);
  v49 = v70;
  OUTLINED_FUNCTION_7_1(v47, 1, v70);
  if (v37)
  {
    OUTLINED_FUNCTION_13_5(v46);
    OUTLINED_FUNCTION_13_5(v45);
    OUTLINED_FUNCTION_7_1(v48, 1, v49);
    if (v37)
    {
      sub_240BE0B68(v47, &qword_25708BDE0);
LABEL_23:
      v53 = v42 + *(int *)(v44 + 24);
      v55 = v64;
      v54 = v65;
      v56 = *(void (**)(char *, uint64_t, uint64_t))(v64 + 16);
      v57 = v62;
      v56(v62, v53, v65);
      v58 = v63;
      v56(v63, v43 + *(int *)(v44 + 24), v54);
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_240F1CC90();
      v59 = *(void (**)(uint64_t, uint64_t))(v55 + 8);
      v59((uint64_t)v58, v54);
      v59((uint64_t)v57, v54);
      goto LABEL_24;
    }
    goto LABEL_21;
  }
  v50 = v66;
  sub_240C283B4(v47, v66, &qword_25708BDE0);
  OUTLINED_FUNCTION_7_1(v48, 1, v49);
  if (v51)
  {
    OUTLINED_FUNCTION_157(v46);
    OUTLINED_FUNCTION_157(v45);
    sub_240BE10B8(v50, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
LABEL_21:
    v38 = &qword_25708C7C0;
    v39 = v47;
    goto LABEL_10;
  }
  v52 = (uint64_t)v61;
  OUTLINED_FUNCTION_68_1(v48);
  sub_240C47684(v50, v52);
  OUTLINED_FUNCTION_34_3();
  OUTLINED_FUNCTION_70_0(v46);
  OUTLINED_FUNCTION_70_0(v45);
  sub_240BE10B8(v50, type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels);
  OUTLINED_FUNCTION_70_0(v47);
  if ((v48 & 1) != 0)
    goto LABEL_23;
LABEL_24:
  OUTLINED_FUNCTION_1();
}

unint64_t sub_240C4AC10()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_240C4AC2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_12_8(v0, v1, v2, v3);
}

uint64_t sub_240C4AC54(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = OUTLINED_FUNCTION_20_0();
  return OUTLINED_FUNCTION_12_8(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

void sub_240C4AC8C(uint64_t a1, uint64_t a2)
{
  sub_240C49760(a1, a2);
}

void sub_240C4ACA0()
{
  sub_240C4A078();
}

uint64_t sub_240C4ACB4()
{
  sub_240BE18B8(&qword_25708C798, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F204A0);
  return sub_240F1C960();
}

uint64_t sub_240C4AD04(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE88, (uint64_t)qword_2570F9128);
}

uint64_t sub_240C4AD20()
{
  sub_240BE18B8((unint64_t *)&qword_25708C6E0, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F20958);
  return sub_240F1CAF8();
}

uint64_t sub_240C4AD60()
{
  return sub_240C4B5F8(type metadata accessor for Proto_TreeEnsembleClassifier, &qword_25708C6E8, (uint64_t)&unk_240F20410);
}

uint64_t sub_240C4AD8C()
{
  sub_240BE18B8((unint64_t *)&qword_25708C6E0, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F20958);
  return sub_240F1CB04();
}

uint64_t sub_240C4ADE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  char *v11;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9140);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9140);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F1D370;
  v6 = (_QWORD *)(v5 + v4);
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *v6 = 1;
  *(_QWORD *)v7 = "treeEnsemble";
  *(_QWORD *)(v7 + 8) = 12;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = (char *)v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)((char *)v6 + v3) = 2;
  *(_QWORD *)v11 = "postEvaluationTransform";
  *((_QWORD *)v11 + 1) = 23;
  v11[16] = 2;
  v10();
  return sub_240F1CC18();
}

void sub_240C4AF30(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  char v4;

  OUTLINED_FUNCTION_31_2(a1, a2);
  while (1)
  {
    v3 = sub_240F1C990();
    if (v2 || (v4 & 1) != 0)
      break;
    if (v3 == 2)
    {
      OUTLINED_FUNCTION_30_3();
    }
    else if (v3 == 1)
    {
      OUTLINED_FUNCTION_6_7();
      sub_240C4AF8C();
    }
  }
  OUTLINED_FUNCTION_53_3();
}

uint64_t sub_240C4AF8C()
{
  type metadata accessor for Proto_TreeEnsembleRegressor(0);
  type metadata accessor for Proto_TreeEnsembleParameters(0);
  sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
  return sub_240F1CAC8();
}

uint64_t sub_240C4B020()
{
  sub_240C4BBD8();
  return sub_240F1C9CC();
}

void sub_240C4B084()
{
  _QWORD *v0;
  uint64_t v1;

  sub_240C4B154((uint64_t)v0);
  if (!v1)
  {
    if (*v0)
    {
      sub_240C4BBD8();
      sub_240F1CB7C();
    }
    type metadata accessor for Proto_TreeEnsembleRegressor(0);
    sub_240F1C918();
  }
}

void sub_240C4B154(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_TreeEnsembleParameters(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  sub_240C283B4(a1 + *(int *)(v8 + 24), (uint64_t)v4, &qword_25708BDE8);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDE8);
  }
  else
  {
    sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_TreeEnsembleParameters);
    sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
    sub_240F1CC00();
    sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_TreeEnsembleParameters);
  }
}

void _s20MLModelSpecification34TreeEnsembleRegressorConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t, uint64_t);
  char *v38;
  char *v39;
  void (*v40)(uint64_t, uint64_t);
  uint64_t v41;
  char *v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v4 = OUTLINED_FUNCTION_20_0();
  v44 = *(_QWORD *)(v4 - 8);
  v45 = v4;
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_85();
  v43 = v5;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v6);
  v42 = (char *)&v41 - v7;
  v8 = OUTLINED_FUNCTION_49_4();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_253(v10, v41);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C7C8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_24_1();
  v15 = v14 - v13;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_11_3();
  v19 = v17 - v18;
  v21 = MEMORY[0x24BDAC7A8](v20);
  v23 = (char *)&v41 - v22;
  MEMORY[0x24BDAC7A8](v21);
  v25 = (char *)&v41 - v24;
  v26 = type metadata accessor for Proto_TreeEnsembleRegressor(0);
  v27 = *(int *)(v26 + 24);
  v47 = a1;
  OUTLINED_FUNCTION_15_9(a1 + v27, (uint64_t)v25);
  v28 = *(int *)(v26 + 24);
  v48 = a2;
  OUTLINED_FUNCTION_15_9(a2 + v28, (uint64_t)v23);
  v29 = v15 + *(int *)(v11 + 48);
  OUTLINED_FUNCTION_15_9((uint64_t)v25, v15);
  OUTLINED_FUNCTION_15_9((uint64_t)v23, v29);
  OUTLINED_FUNCTION_7_1(v15, 1, v8);
  if (!v30)
  {
    sub_240C283B4(v15, v19, &qword_25708BDE8);
    OUTLINED_FUNCTION_7_1(v29, 1, v8);
    if (!v30)
    {
      v31 = v46;
      OUTLINED_FUNCTION_68_1(v29);
      sub_240C47F58(v19, v31);
      OUTLINED_FUNCTION_34_3();
      OUTLINED_FUNCTION_279((uint64_t)v23);
      OUTLINED_FUNCTION_279((uint64_t)v25);
      sub_240BE10B8(v19, type metadata accessor for Proto_TreeEnsembleParameters);
      OUTLINED_FUNCTION_279(v15);
      if ((v29 & 1) == 0)
        goto LABEL_13;
      goto LABEL_11;
    }
    OUTLINED_FUNCTION_157((uint64_t)v23);
    OUTLINED_FUNCTION_157((uint64_t)v25);
    sub_240BE10B8(v19, type metadata accessor for Proto_TreeEnsembleParameters);
LABEL_9:
    sub_240BE0B68(v15, &qword_25708C7C8);
    goto LABEL_13;
  }
  OUTLINED_FUNCTION_13_5((uint64_t)v23);
  OUTLINED_FUNCTION_13_5((uint64_t)v25);
  OUTLINED_FUNCTION_7_1(v29, 1, v8);
  if (!v30)
    goto LABEL_9;
  sub_240BE0B68(v15, &qword_25708BDE8);
LABEL_11:
  v32 = v47;
  v33 = v48;
  if ((sub_240C52BE0(*(_QWORD *)v47, *(unsigned __int8 *)(v47 + 8), *(_QWORD *)v48, *(unsigned __int8 *)(v48 + 8)) & 1) != 0)
  {
    v34 = v32 + *(int *)(v26 + 20);
    v36 = v44;
    v35 = v45;
    v37 = *(void (**)(char *, uint64_t, uint64_t))(v44 + 16);
    v38 = v42;
    v37(v42, v34, v45);
    v39 = v43;
    v37(v43, v33 + *(int *)(v26 + 20), v35);
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_240F1CC90();
    v40 = *(void (**)(uint64_t, uint64_t))(v36 + 8);
    v40((uint64_t)v39, v35);
    v40((uint64_t)v38, v35);
  }
LABEL_13:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C4B5F8(uint64_t (*a1)(uint64_t), unint64_t *a2, uint64_t a3)
{
  sub_240F1CF3C();
  a1(0);
  sub_240BE18B8(a2, a1, a3);
  sub_240F1CC54();
  return sub_240F1CF78();
}

unint64_t sub_240C4B678()
{
  return 0xD00000000000001BLL;
}

void sub_240C4B694(uint64_t a1, uint64_t a2)
{
  sub_240C4AF30(a1, a2);
}

void sub_240C4B6A8()
{
  sub_240C4B084();
}

uint64_t sub_240C4B6BC()
{
  sub_240BE18B8(&qword_25708C788, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F203B0);
  return sub_240F1C960();
}

uint64_t sub_240C4B70C(uint64_t a1, uint64_t a2)
{
  return sub_240C4B728(a1, a2, &qword_25708AE90, (uint64_t)qword_2570F9140);
}

uint64_t sub_240C4B728(uint64_t a1, uint64_t a2, _QWORD *a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  sub_240C44790(a3, a4);
  sub_240F1CC30();
  v4 = OUTLINED_FUNCTION_48_2();
  return OUTLINED_FUNCTION_12_8(v4, v5, v6, v7);
}

uint64_t sub_240C4B760()
{
  sub_240BE18B8((unint64_t *)&qword_25708C6C8, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F209D0);
  return sub_240F1CAF8();
}

uint64_t sub_240C4B7A0()
{
  return sub_240C4B5F8(type metadata accessor for Proto_TreeEnsembleRegressor, &qword_25708C6D0, (uint64_t)&unk_240F20320);
}

uint64_t sub_240C4B7CC()
{
  sub_240BE18B8((unint64_t *)&qword_25708C6C8, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F209D0);
  return sub_240F1CB04();
}

void sub_240C4B820()
{
  sub_240BE18B8(&qword_25708C6C0, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F202F8);
}

void sub_240C4B84C()
{
  sub_240BE18B8((unint64_t *)&qword_25708C6C8, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F209D0);
}

void sub_240C4B878()
{
  sub_240BE18B8(&qword_25708C6D0, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F20320);
}

void sub_240C4B8A4()
{
  sub_240BE18B8(&qword_25708C6D8, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F203E8);
}

void sub_240C4B8D0()
{
  sub_240BE18B8((unint64_t *)&qword_25708C6E0, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F20958);
}

void sub_240C4B8FC()
{
  sub_240BE18B8(&qword_25708C6E8, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F20410);
}

void sub_240C4B928()
{
  sub_240BE18B8(&qword_25708C6F0, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F204D8);
}

void sub_240C4B954()
{
  sub_240BE18B8(&qword_25708C6F8, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F205C8);
}

void sub_240C4B980()
{
  sub_240BE18B8(&qword_25708C700, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F20500);
}

void sub_240C4B9AC()
{
  sub_240BE18B8(&qword_25708C708, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.EvaluationInfo, (uint64_t)&unk_240F20540);
}

void sub_240C4B9D8()
{
  sub_240BE18B8(&qword_25708C710, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F20668);
}

void sub_240C4BA04()
{
  sub_240BE18B8((unint64_t *)&qword_25708C718, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F208E0);
}

void sub_240C4BA30()
{
  sub_240BE18B8(&qword_25708C720, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F20690);
}

void sub_240C4BA5C()
{
  sub_240BE18B8(&qword_25708C728, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20758);
}

void sub_240C4BA88()
{
  sub_240BE18B8(&qword_25708C730, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20A48);
}

void sub_240C4BAB4()
{
  sub_240BE18B8(&qword_25708C738, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F20780);
}

void sub_240C4BAE0()
{
  sub_240C29194(&qword_25708C740, &qword_25708C748);
}

void sub_240C4BB04()
{
  sub_240C29194(&qword_25708C750, &qword_25708C758);
}

void sub_240C4BB28()
{
  sub_240BE18B8(&qword_25708C760, type metadata accessor for Proto_TreeEnsembleParameters.TreeNode, (uint64_t)&unk_240F206D0);
}

void sub_240C4BB54()
{
  sub_240BE18B8(&qword_25708C768, type metadata accessor for Proto_TreeEnsembleClassifier, (uint64_t)&unk_240F20450);
}

void sub_240C4BB80()
{
  sub_240BE18B8(&qword_25708C770, type metadata accessor for Proto_TreeEnsembleRegressor, (uint64_t)&unk_240F20360);
}

void sub_240C4BBAC()
{
  sub_240BE18B8(&qword_25708C778, type metadata accessor for Proto_TreeEnsembleParameters, (uint64_t)&unk_240F207C0);
}

unint64_t sub_240C4BBD8()
{
  unint64_t result;

  result = qword_25708C790;
  if (!qword_25708C790)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20C8C, &type metadata for Proto_TreeEnsemblePostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708C790);
  }
  return result;
}

unint64_t sub_240C4BC14()
{
  unint64_t result;

  result = qword_25708C7A8;
  if (!qword_25708C7A8)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20C44, &type metadata for Proto_TreeEnsembleParameters.TreeNode.TreeNodeBehavior);
    atomic_store(result, (unint64_t *)&qword_25708C7A8);
  }
  return result;
}

uint64_t sub_240C4BC50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for Proto_TreeEnsemblePostEvaluationTransform()
{
  return &type metadata for Proto_TreeEnsemblePostEvaluationTransform;
}

ValueMetadata *type metadata accessor for Proto_TreeEnsembleParameters.TreeNode.TreeNodeBehavior()
{
  return &type metadata for Proto_TreeEnsembleParameters.TreeNode.TreeNodeBehavior;
}

unint64_t sub_240C4BCB8()
{
  unint64_t result;

  result = qword_25708C7D0;
  if (!qword_25708C7D0)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20B04, &type metadata for Proto_TreeEnsembleParameters.TreeNode.TreeNodeBehavior);
    atomic_store(result, (unint64_t *)&qword_25708C7D0);
  }
  return result;
}

unint64_t sub_240C4BCF8()
{
  unint64_t result;

  result = qword_25708C7D8;
  if (!qword_25708C7D8)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20BA4, &type metadata for Proto_TreeEnsemblePostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708C7D8);
  }
  return result;
}

unint64_t sub_240C4BD38()
{
  unint64_t result;

  result = qword_25708C7E0;
  if (!qword_25708C7E0)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20B2C, &type metadata for Proto_TreeEnsembleParameters.TreeNode.TreeNodeBehavior);
    atomic_store(result, (unint64_t *)&qword_25708C7E0);
  }
  return result;
}

unint64_t sub_240C4BD78()
{
  unint64_t result;

  result = qword_25708C7E8;
  if (!qword_25708C7E8)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20B6C, &type metadata for Proto_TreeEnsembleParameters.TreeNode.TreeNodeBehavior);
    atomic_store(result, (unint64_t *)&qword_25708C7E8);
  }
  return result;
}

unint64_t sub_240C4BDB8()
{
  unint64_t result;

  result = qword_25708C7F0;
  if (!qword_25708C7F0)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20BCC, &type metadata for Proto_TreeEnsemblePostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708C7F0);
  }
  return result;
}

unint64_t sub_240C4BDF8()
{
  unint64_t result;

  result = qword_25708C7F8;
  if (!qword_25708C7F8)
  {
    result = MEMORY[0x24268C2AC](&unk_240F20C0C, &type metadata for Proto_TreeEnsemblePostEvaluationTransform);
    atomic_store(result, (unint64_t *)&qword_25708C7F8);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_3_10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_4_8()
{
  return sub_240F1CBE8();
}

uint64_t OUTLINED_FUNCTION_5_12()
{
  return sub_240F1C990();
}

uint64_t OUTLINED_FUNCTION_6_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_12_8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void OUTLINED_FUNCTION_15_9(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C283B4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_27_4()
{
  return sub_240F1C990();
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return sub_240C4B020();
}

uint64_t OUTLINED_FUNCTION_31_2(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t OUTLINED_FUNCTION_32_4()
{
  return sub_240F1CAB0();
}

void OUTLINED_FUNCTION_34_3()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_35_3()
{
  return sub_240F1CBE8();
}

void OUTLINED_FUNCTION_36_4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C283B4(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_37_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_38_3@<X0>(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  return 0;
}

uint64_t OUTLINED_FUNCTION_45_2()
{
  return sub_240F1CBC4();
}

uint64_t OUTLINED_FUNCTION_46_2()
{
  return sub_240F1CB7C();
}

uint64_t OUTLINED_FUNCTION_48_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_49_4()
{
  return type metadata accessor for Proto_TreeEnsembleParameters(0);
}

uint64_t OUTLINED_FUNCTION_50_3()
{
  return sub_240F1C918();
}

uint64_t OUTLINED_FUNCTION_52_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + a1;
  type metadata accessor for Proto_TreeEnsembleParameters(0);
  return v2;
}

uint64_t OUTLINED_FUNCTION_56_3@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return v1 + a1;
}

uint64_t OUTLINED_FUNCTION_57_2(uint64_t result, __int16 a2)
{
  uint64_t v2;

  *(_QWORD *)v2 = result;
  *(_BYTE *)(v2 + 8) = a2;
  *(_BYTE *)(v2 + 9) = HIBYTE(a2) & 1;
  return result;
}

uint64_t OUTLINED_FUNCTION_67_1()
{
  return type metadata accessor for Proto_TreeEnsembleClassifier.OneOf_ClassLabels(0);
}

void OUTLINED_FUNCTION_68_1(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);
  uint64_t v2;

  sub_240C2837C(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_69_1()
{
  return sub_240F1CA80();
}

void OUTLINED_FUNCTION_70_0(uint64_t a1)
{
  uint64_t *v1;

  sub_240BE0B68(a1, v1);
}

uint64_t OUTLINED_FUNCTION_71_1@<X0>(unint64_t a1@<X8>)
{
  if (a1 >= 0xFFFFFFFF)
    LODWORD(a1) = -1;
  return (a1 + 1);
}

uint64_t destroy for Proto_Imputer.OneOf_ReplaceValue(uint64_t a1)
{
  return sub_240C02F7C(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s20MLModelSpecification13Proto_ImputerV18OneOf_ReplaceValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240C02F64(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for Proto_Imputer.OneOf_ReplaceValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_240C02F64(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_240C02F7C(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for Proto_Imputer.OneOf_ReplaceValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_240C02F7C(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for Proto_Imputer.OneOf_ReplaceValue(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFE && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 253;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 2)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Proto_Imputer.OneOf_ReplaceValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 254;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFE)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_240C4C23C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_240C4C244(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Proto_Imputer.OneOf_ReplaceValue()
{
  return &type metadata for Proto_Imputer.OneOf_ReplaceValue;
}

uint64_t *sub_240C4C25C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 3u:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_240F1C930();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_10;
      case 4u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_240F1C930();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_10;
      case 5u:
        *a1 = *a2;
        v19 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_240F1C930();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        goto LABEL_10;
      case 6u:
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_240F1C930();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(v5 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_240C4C488(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 2:
      return swift_bridgeObjectRelease();
    case 3:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_DoubleVector(0);
      goto LABEL_7;
    case 4:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_Int64Vector(0);
      goto LABEL_7;
    case 5:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_StringToDoubleMap(0);
      goto LABEL_7;
    case 6:
      swift_bridgeObjectRelease();
      v3 = type metadata accessor for Proto_Int64ToDoubleMap(0);
LABEL_7:
      v4 = a1 + *(int *)(v3 + 20);
      v5 = sub_240F1C930();
      result = (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

_QWORD *sub_240C4C554(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);

  switch(swift_getEnumCaseMultiPayload())
  {
    case 2u:
      v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      goto LABEL_8;
    case 3u:
      *a1 = *a2;
      v7 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
      goto LABEL_8;
    case 4u:
      *a1 = *a2;
      v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      v13 = (char *)a1 + v12;
      v14 = (char *)a2 + v12;
      v15 = sub_240F1C930();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      goto LABEL_8;
    case 5u:
      *a1 = *a2;
      v17 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_240F1C930();
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      swift_bridgeObjectRetain();
      v21(v18, v19, v20);
      goto LABEL_8;
    case 6u:
      *a1 = *a2;
      v22 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = sub_240F1C930();
      v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      swift_bridgeObjectRetain();
      v26(v23, v24, v25);
LABEL_8:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_240C4C758(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        goto LABEL_9;
      case 3u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_240F1C930();
        v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
        swift_bridgeObjectRetain();
        v10(v7, v8, v9);
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        v11 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v12 = (char *)a1 + v11;
        v13 = (char *)a2 + v11;
        v14 = sub_240F1C930();
        v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
        swift_bridgeObjectRetain();
        v15(v12, v13, v14);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_240F1C930();
        v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
        swift_bridgeObjectRetain();
        v20(v17, v18, v19);
        goto LABEL_9;
      case 6u:
        *a1 = *a2;
        v21 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v22 = (char *)a1 + v21;
        v23 = (char *)a2 + v21;
        v24 = sub_240F1C930();
        v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
        swift_bridgeObjectRetain();
        v25(v22, v23, v24);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t type metadata accessor for Proto_Imputer.OneOf_ImputedValue(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FA08);
}

_QWORD *sub_240C4C990(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  switch(swift_getEnumCaseMultiPayload())
  {
    case 3u:
      *a1 = *a2;
      v6 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      goto LABEL_7;
    case 4u:
      *a1 = *a2;
      v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
      goto LABEL_7;
    case 5u:
      *a1 = *a2;
      v14 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
      v15 = (char *)a1 + v14;
      v16 = (char *)a2 + v14;
      v17 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
      goto LABEL_7;
    case 6u:
      *a1 = *a2;
      v18 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
      v19 = (char *)a1 + v18;
      v20 = (char *)a2 + v18;
      v21 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

_QWORD *sub_240C4CB38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        *a1 = *a2;
        v6 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v7 = (char *)a1 + v6;
        v8 = (char *)a2 + v6;
        v9 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
        goto LABEL_8;
      case 4u:
        *a1 = *a2;
        v10 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v11 = (char *)a1 + v10;
        v12 = (char *)a2 + v10;
        v13 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v11, v12, v13);
        goto LABEL_8;
      case 5u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        goto LABEL_8;
      case 6u:
        *a1 = *a2;
        v18 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v19 = (char *)a1 + v18;
        v20 = (char *)a2 + v18;
        v21 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_240C4CCF8()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;

  result = type metadata accessor for Proto_DoubleVector(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_Int64Vector(319);
    if (v2 <= 0x3F)
    {
      result = type metadata accessor for Proto_StringToDoubleMap(319);
      if (v3 <= 0x3F)
      {
        result = type metadata accessor for Proto_Int64ToDoubleMap(319);
        if (v4 <= 0x3F)
        {
          swift_initEnumMetadataMultiPayload();
          return 0;
        }
      }
    }
  }
  return result;
}

uint64_t *sub_240C4CDCC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  char *v33;
  int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v7))
    {
      v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v8 - 8) + 64));
    }
    else
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          v10 = a2[1];
          *a1 = *a2;
          a1[1] = v10;
          swift_bridgeObjectRetain();
          goto LABEL_12;
        case 3u:
          *a1 = *a2;
          v11 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
          v12 = (char *)a1 + v11;
          v13 = (char *)a2 + v11;
          v14 = sub_240F1C930();
          v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
          swift_bridgeObjectRetain();
          v15(v12, v13, v14);
          goto LABEL_12;
        case 4u:
          *a1 = *a2;
          v16 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
          v17 = (char *)a1 + v16;
          v18 = (char *)a2 + v16;
          v19 = sub_240F1C930();
          v20 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 16);
          swift_bridgeObjectRetain();
          v20(v17, v18, v19);
          goto LABEL_12;
        case 5u:
          *a1 = *a2;
          v21 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
          v22 = (char *)a1 + v21;
          v23 = (char *)a2 + v21;
          v24 = sub_240F1C930();
          v25 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16);
          swift_bridgeObjectRetain();
          v25(v22, v23, v24);
          goto LABEL_12;
        case 6u:
          *a1 = *a2;
          v26 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_240F1C930();
          v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 16);
          swift_bridgeObjectRetain();
          v30(v27, v28, v29);
LABEL_12:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v7);
    }
    v31 = *(int *)(a3 + 20);
    v32 = (char *)a1 + v31;
    v33 = (char *)a2 + v31;
    v34 = v33[16];
    if (v34 == 255)
    {
      *(_OWORD *)v32 = *(_OWORD *)v33;
      v32[16] = v33[16];
    }
    else
    {
      v35 = *(_QWORD *)v33;
      v36 = *((_QWORD *)v33 + 1);
      sub_240C02F64(*(_QWORD *)v33, v36, v33[16]);
      *(_QWORD *)v32 = v35;
      *((_QWORD *)v32 + 1) = v36;
      v32[16] = v34;
    }
    v37 = *(int *)(a3 + 24);
    v38 = (char *)a1 + v37;
    v39 = (char *)a2 + v37;
    v40 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v40 - 8) + 16))(v38, v39, v40);
  }
  return a1;
}

uint64_t sub_240C4D0D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;

  v4 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (!__swift_getEnumTagSinglePayload(a1, 1, v4))
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        swift_bridgeObjectRelease();
        break;
      case 3u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for Proto_DoubleVector(0);
        goto LABEL_8;
      case 4u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for Proto_Int64Vector(0);
        goto LABEL_8;
      case 5u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for Proto_StringToDoubleMap(0);
        goto LABEL_8;
      case 6u:
        swift_bridgeObjectRelease();
        v5 = type metadata accessor for Proto_Int64ToDoubleMap(0);
LABEL_8:
        v6 = a1 + *(int *)(v5 + 20);
        v7 = sub_240F1C930();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
        break;
      default:
        break;
    }
  }
  v8 = a1 + *(int *)(a2 + 20);
  v9 = *(unsigned __int8 *)(v8 + 16);
  if (v9 != 255)
    sub_240C02F7C(*(_QWORD *)v8, *(_QWORD *)(v8 + 8), v9);
  v10 = a1 + *(int *)(a2 + 24);
  v11 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
}

_QWORD *sub_240C4D200(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  uint64_t v29;
  char *v30;
  char *v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;

  v6 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        v8 = a2[1];
        *a1 = *a2;
        a1[1] = v8;
        swift_bridgeObjectRetain();
        goto LABEL_10;
      case 3u:
        *a1 = *a2;
        v9 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v10 = (char *)a1 + v9;
        v11 = (char *)a2 + v9;
        v12 = sub_240F1C930();
        v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
        swift_bridgeObjectRetain();
        v13(v10, v11, v12);
        goto LABEL_10;
      case 4u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_240F1C930();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
        goto LABEL_10;
      case 5u:
        *a1 = *a2;
        v19 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v20 = (char *)a1 + v19;
        v21 = (char *)a2 + v19;
        v22 = sub_240F1C930();
        v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
        swift_bridgeObjectRetain();
        v23(v20, v21, v22);
        goto LABEL_10;
      case 6u:
        *a1 = *a2;
        v24 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v25 = (char *)a1 + v24;
        v26 = (char *)a2 + v24;
        v27 = sub_240F1C930();
        v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v27 - 8) + 16);
        swift_bridgeObjectRetain();
        v28(v25, v26, v27);
LABEL_10:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v29 = *(int *)(a3 + 20);
  v30 = (char *)a1 + v29;
  v31 = (char *)a2 + v29;
  v32 = v31[16];
  if (v32 == 255)
  {
    *(_OWORD *)v30 = *(_OWORD *)v31;
    v30[16] = v31[16];
  }
  else
  {
    v33 = *(_QWORD *)v31;
    v34 = *((_QWORD *)v31 + 1);
    sub_240C02F64(*(_QWORD *)v31, v34, v31[16]);
    *(_QWORD *)v30 = v33;
    *((_QWORD *)v30 + 1) = v34;
    v30[16] = v32;
  }
  v35 = *(int *)(a3 + 24);
  v36 = (char *)a1 + v35;
  v37 = (char *)a2 + v35;
  v38 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16))(v36, v37, v38);
  return a1;
}

_QWORD *sub_240C4D4D8(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  void (*v24)(char *, char *, uint64_t);
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  void (*v39)(char *, char *, uint64_t);
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  void (*v49)(char *, char *, uint64_t);
  uint64_t v50;
  uint64_t v51;
  char *v52;
  int v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  char v61;
  __int128 v62;
  uint64_t v63;
  char *v64;
  char *v65;
  uint64_t v66;

  v6 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          *a1 = *a2;
          a1[1] = a2[1];
          swift_bridgeObjectRetain();
          goto LABEL_17;
        case 3u:
          *a1 = *a2;
          v10 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
          v11 = (char *)a1 + v10;
          v12 = (char *)a2 + v10;
          v13 = sub_240F1C930();
          v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
          swift_bridgeObjectRetain();
          v14(v11, v12, v13);
          goto LABEL_17;
        case 4u:
          *a1 = *a2;
          v15 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
          v16 = (char *)a1 + v15;
          v17 = (char *)a2 + v15;
          v18 = sub_240F1C930();
          v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
          swift_bridgeObjectRetain();
          v19(v16, v17, v18);
          goto LABEL_17;
        case 5u:
          *a1 = *a2;
          v20 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
          v21 = (char *)a1 + v20;
          v22 = (char *)a2 + v20;
          v23 = sub_240F1C930();
          v24 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16);
          swift_bridgeObjectRetain();
          v24(v21, v22, v23);
          goto LABEL_17;
        case 6u:
          *a1 = *a2;
          v25 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
          v26 = (char *)a1 + v25;
          v27 = (char *)a2 + v25;
          v28 = sub_240F1C930();
          v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
          swift_bridgeObjectRetain();
          v29(v26, v27, v28);
LABEL_17:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_25;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
LABEL_7:
    v9 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v9 + 64));
    goto LABEL_25;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 2u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
      case 3u:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_240F1C930();
        v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
        swift_bridgeObjectRetain();
        v34(v31, v32, v33);
        break;
      case 4u:
        *a1 = *a2;
        v35 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v36 = (char *)a1 + v35;
        v37 = (char *)a2 + v35;
        v38 = sub_240F1C930();
        v39 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 16);
        swift_bridgeObjectRetain();
        v39(v36, v37, v38);
        break;
      case 5u:
        *a1 = *a2;
        v40 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v41 = (char *)a1 + v40;
        v42 = (char *)a2 + v40;
        v43 = sub_240F1C930();
        v44 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v43 - 8) + 16);
        swift_bridgeObjectRetain();
        v44(v41, v42, v43);
        break;
      case 6u:
        *a1 = *a2;
        v45 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v46 = (char *)a1 + v45;
        v47 = (char *)a2 + v45;
        v48 = sub_240F1C930();
        v49 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v48 - 8) + 16);
        swift_bridgeObjectRetain();
        v49(v46, v47, v48);
        break;
      default:
        v9 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_25:
  v50 = *(int *)(a3 + 20);
  v51 = (uint64_t)a1 + v50;
  v52 = (char *)a2 + v50;
  v53 = *((unsigned __int8 *)a2 + v50 + 16);
  if (*((unsigned __int8 *)a1 + v50 + 16) == 255)
  {
    if (v53 == 255)
    {
      v62 = *(_OWORD *)v52;
      *(_BYTE *)(v51 + 16) = v52[16];
      *(_OWORD *)v51 = v62;
    }
    else
    {
      v59 = *(_QWORD *)v52;
      v60 = *((_QWORD *)v52 + 1);
      sub_240C02F64(v59, v60, v53);
      *(_QWORD *)v51 = v59;
      *(_QWORD *)(v51 + 8) = v60;
      *(_BYTE *)(v51 + 16) = v53;
    }
  }
  else if (v53 == 255)
  {
    sub_240C4DA18(v51);
    v61 = v52[16];
    *(_OWORD *)v51 = *(_OWORD *)v52;
    *(_BYTE *)(v51 + 16) = v61;
  }
  else
  {
    v54 = *(_QWORD *)v52;
    v55 = *((_QWORD *)v52 + 1);
    sub_240C02F64(v54, v55, v53);
    v56 = *(_QWORD *)v51;
    v57 = *(_QWORD *)(v51 + 8);
    *(_QWORD *)v51 = v54;
    *(_QWORD *)(v51 + 8) = v55;
    v58 = *(_BYTE *)(v51 + 16);
    *(_BYTE *)(v51 + 16) = v53;
    sub_240C02F7C(v56, v57, v58);
  }
  v63 = *(int *)(a3 + 24);
  v64 = (char *)a1 + v63;
  v65 = (char *)a2 + v63;
  v66 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v66 - 8) + 24))(v64, v65, v66);
  return a1;
}

uint64_t sub_240C4DA18(uint64_t a1)
{
  destroy for Proto_Imputer.OneOf_ReplaceValue(a1);
  return a1;
}

_QWORD *sub_240C4DA44(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  char *v28;
  char *v29;
  uint64_t v30;

  v6 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6))
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v7 - 8) + 64));
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        *a1 = *a2;
        v8 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v9 = (char *)a1 + v8;
        v10 = (char *)a2 + v8;
        v11 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
        goto LABEL_9;
      case 4u:
        *a1 = *a2;
        v12 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v13 = (char *)a1 + v12;
        v14 = (char *)a2 + v12;
        v15 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
        goto LABEL_9;
      case 5u:
        *a1 = *a2;
        v16 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v17 = (char *)a1 + v16;
        v18 = (char *)a2 + v16;
        v19 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(v17, v18, v19);
        goto LABEL_9;
      case 6u:
        *a1 = *a2;
        v20 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v21 = (char *)a1 + v20;
        v22 = (char *)a2 + v20;
        v23 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 32))(v21, v22, v23);
LABEL_9:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
        break;
    }
    __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
  }
  v24 = *(int *)(a3 + 20);
  v25 = *(int *)(a3 + 24);
  v26 = (char *)a1 + v24;
  v27 = (char *)a2 + v24;
  *(_OWORD *)v26 = *(_OWORD *)v27;
  v26[16] = v27[16];
  v28 = (char *)a1 + v25;
  v29 = (char *)a2 + v25;
  v30 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 32))(v28, v29, v30);
  return a1;
}

_QWORD *sub_240C4DC90(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  int EnumTagSinglePayload;
  int v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  int v45;
  int v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;

  v6 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)a1, 1, v6);
  v8 = __swift_getEnumTagSinglePayload((uint64_t)a2, 1, v6);
  if (EnumTagSinglePayload)
  {
    if (!v8)
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 3u:
          *a1 = *a2;
          v9 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
          v10 = (char *)a1 + v9;
          v11 = (char *)a2 + v9;
          v12 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
          goto LABEL_16;
        case 4u:
          *a1 = *a2;
          v18 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
          v19 = (char *)a1 + v18;
          v20 = (char *)a2 + v18;
          v21 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
          goto LABEL_16;
        case 5u:
          *a1 = *a2;
          v22 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
          v23 = (char *)a1 + v22;
          v24 = (char *)a2 + v22;
          v25 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 32))(v23, v24, v25);
          goto LABEL_16;
        case 6u:
          *a1 = *a2;
          v26 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
          v27 = (char *)a1 + v26;
          v28 = (char *)a2 + v26;
          v29 = sub_240F1C930();
          (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v29 - 8) + 32))(v27, v28, v29);
LABEL_16:
          swift_storeEnumTagMultiPayload();
          break;
        default:
          memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64));
          break;
      }
      __swift_storeEnumTagSinglePayload((uint64_t)a1, 0, 1, v6);
      goto LABEL_23;
    }
    goto LABEL_7;
  }
  if (v8)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
LABEL_7:
    v13 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8) - 8);
LABEL_8:
    memcpy(a1, a2, *(_QWORD *)(v13 + 64));
    goto LABEL_23;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 3u:
        *a1 = *a2;
        v14 = *(int *)(type metadata accessor for Proto_DoubleVector(0) + 20);
        v15 = (char *)a1 + v14;
        v16 = (char *)a2 + v14;
        v17 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 32))(v15, v16, v17);
        break;
      case 4u:
        *a1 = *a2;
        v30 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
        v31 = (char *)a1 + v30;
        v32 = (char *)a2 + v30;
        v33 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 32))(v31, v32, v33);
        break;
      case 5u:
        *a1 = *a2;
        v34 = *(int *)(type metadata accessor for Proto_StringToDoubleMap(0) + 20);
        v35 = (char *)a1 + v34;
        v36 = (char *)a2 + v34;
        v37 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v37 - 8) + 32))(v35, v36, v37);
        break;
      case 6u:
        *a1 = *a2;
        v38 = *(int *)(type metadata accessor for Proto_Int64ToDoubleMap(0) + 20);
        v39 = (char *)a1 + v38;
        v40 = (char *)a2 + v38;
        v41 = sub_240F1C930();
        (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 32))(v39, v40, v41);
        break;
      default:
        v13 = *(_QWORD *)(v6 - 8);
        goto LABEL_8;
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_23:
  v42 = *(int *)(a3 + 20);
  v43 = (uint64_t)a1 + v42;
  v44 = (char *)a2 + v42;
  v45 = *((unsigned __int8 *)a1 + v42 + 16);
  if (v45 == 255)
  {
LABEL_27:
    *(_OWORD *)v43 = *(_OWORD *)v44;
    *(_BYTE *)(v43 + 16) = v44[16];
    goto LABEL_28;
  }
  v46 = v44[16];
  if (v46 == 255)
  {
    sub_240C4DA18(v43);
    goto LABEL_27;
  }
  v47 = *(_QWORD *)v43;
  v48 = *(_QWORD *)(v43 + 8);
  *(_OWORD *)v43 = *(_OWORD *)v44;
  *(_BYTE *)(v43 + 16) = v46;
  sub_240C02F7C(v47, v48, v45);
LABEL_28:
  v49 = *(int *)(a3 + 24);
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v52 - 8) + 40))(v50, v51, v52);
  return a1;
}

uint64_t sub_240C4E0C8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C4E0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  if (*(_DWORD *)(*(_QWORD *)(v6 - 8) + 84) == (_DWORD)a2)
  {
    v7 = v6;
    v8 = a1;
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  if ((_DWORD)a2 != 252)
  {
    v7 = OUTLINED_FUNCTION_20_0();
    v8 = a1 + *(int *)(a3 + 24);
    return __swift_getEnumTagSinglePayload(v8, a2, v7);
  }
  v9 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 20) + 16);
  if (v9 <= 2)
    return 0;
  else
    return v9 ^ 0xFF;
}

uint64_t sub_240C4E16C()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C4E178(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  if (*(_DWORD *)(*(_QWORD *)(result - 8) + 84) == a3)
  {
    v9 = result;
    v10 = a1;
  }
  else
  {
    if (a3 == 252)
    {
      *(_BYTE *)(a1 + *(int *)(a4 + 20) + 16) = ~(_BYTE)a2;
      return result;
    }
    v9 = OUTLINED_FUNCTION_20_0();
    v10 = a1 + *(int *)(a4 + 24);
  }
  return __swift_storeEnumTagSinglePayload(v10, a2, a2, v9);
}

uint64_t type metadata accessor for Proto_Imputer(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FA20);
}

void sub_240C4E224()
{
  unint64_t v0;
  unint64_t v1;

  sub_240C4E2B0();
  if (v0 <= 0x3F)
  {
    sub_240F1C930();
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

void sub_240C4E2B0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25435FA18)
  {
    type metadata accessor for Proto_Imputer.OneOf_ImputedValue(255);
    v0 = sub_240F1CD98();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25435FA18);
  }
}

void sub_240C4E304(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;

  type metadata accessor for Proto_Int64ToDoubleMap(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for Proto_StringToDoubleMap(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for Proto_Int64Vector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_2_0();
  type metadata accessor for Proto_DoubleVector(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_20_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11_3();
  v8 = MEMORY[0x24BDAC7A8](v7);
  v9 = MEMORY[0x24BDAC7A8](v8);
  v10 = MEMORY[0x24BDAC7A8](v9);
  v11 = MEMORY[0x24BDAC7A8](v10);
  v12 = MEMORY[0x24BDAC7A8](v11);
  MEMORY[0x24BDAC7A8](v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C858);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_24_1();
  v17 = v15 - v14 + *(int *)(v16 + 48);
  sub_240C51790(a1, v15 - v14);
  sub_240C51790(a2, v17);
  v18 = (char *)sub_240C4E504 + 4 * byte_240F20D21[swift_getEnumCaseMultiPayload()];
  __asm { BR              X10 }
}

void sub_240C4E504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C51790(v0, v1);
  v2 = OUTLINED_FUNCTION_3_11();
  if ((_DWORD)v2)
    sub_240BE0B68(v0, &qword_25708C858);
  else
    OUTLINED_FUNCTION_31(v2, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C4E900(uint64_t a1, uint64_t a2, char a3, uint64_t a4, uint64_t a5, char a6)
{
  if (a3)
  {
    if (a3 == 1)
    {
      return a6 == 1 && a1 == a4;
    }
    else if (a6 == 2)
    {
      if (a1 == a4 && a2 == a5)
        return 1;
      else
        return sub_240F1CEDC();
    }
    else
    {
      return 0;
    }
  }
  else
  {
    return !a6 && *(double *)&a1 == *(double *)&a4;
  }
}

uint64_t sub_240C4E980(uint64_t a1, uint64_t a2)
{
  return sub_240C4E900(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(_BYTE *)(a2 + 16));
}

uint64_t sub_240C4E99C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = OUTLINED_FUNCTION_20_5();
  __swift_storeEnumTagSinglePayload(a1, 1, 1, v2);
  v3 = a1 + *(int *)(type metadata accessor for Proto_Imputer(0) + 20);
  *(_QWORD *)v3 = 0;
  *(_QWORD *)(v3 + 8) = 0;
  *(_BYTE *)(v3 + 16) = -1;
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t sub_240C4E9F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void);
  unint64_t v11;
  _QWORD *v12;
  char *v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  char *v17;
  _QWORD *v18;
  char *v19;
  _QWORD *v20;
  char *v21;
  _QWORD *v22;
  char *v23;
  _QWORD *v24;
  char *v25;
  _QWORD *v26;
  char *v27;

  v0 = sub_240F1CC30();
  __swift_allocate_value_buffer(v0, qword_2570F9158);
  __swift_project_value_buffer(v0, (uint64_t)qword_2570F9158);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C268);
  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C270);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = *(_QWORD *)(v2 + 72);
  v4 = (*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_240F201C0;
  v6 = v5 + v4;
  v7 = v5 + v4 + *(int *)(v1 + 48);
  *(_QWORD *)(v5 + v4) = 1;
  *(_QWORD *)v7 = "imputedDoubleValue";
  *(_QWORD *)(v7 + 8) = 18;
  *(_BYTE *)(v7 + 16) = 2;
  v8 = *MEMORY[0x24BE5C318];
  v9 = sub_240F1CC0C();
  v10 = *(void (**)(void))(*(_QWORD *)(v9 - 8) + 104);
  ((void (*)(unint64_t, uint64_t, uint64_t))v10)(v7, v8, v9);
  v11 = v6 + v3 + *(int *)(v1 + 48);
  *(_QWORD *)(v6 + v3) = 2;
  *(_QWORD *)v11 = "imputedInt64Value";
  *(_QWORD *)(v11 + 8) = 17;
  *(_BYTE *)(v11 + 16) = 2;
  v10();
  v12 = (_QWORD *)(v6 + 2 * v3);
  v13 = (char *)v12 + *(int *)(v1 + 48);
  *v12 = 3;
  *(_QWORD *)v13 = "imputedStringValue";
  *((_QWORD *)v13 + 1) = 18;
  v13[16] = 2;
  v10();
  v14 = (_QWORD *)(v6 + 3 * v3);
  v15 = (char *)v14 + *(int *)(v1 + 48);
  *v14 = 4;
  *(_QWORD *)v15 = "imputedDoubleArray";
  *((_QWORD *)v15 + 1) = 18;
  v15[16] = 2;
  v10();
  v16 = (_QWORD *)(v6 + 4 * v3);
  v17 = (char *)v16 + *(int *)(v1 + 48);
  *v16 = 5;
  *(_QWORD *)v17 = "imputedInt64Array";
  *((_QWORD *)v17 + 1) = 17;
  v17[16] = 2;
  v10();
  v18 = (_QWORD *)(v6 + 5 * v3);
  v19 = (char *)v18 + *(int *)(v1 + 48);
  *v18 = 6;
  *(_QWORD *)v19 = "imputedStringDictionary";
  *((_QWORD *)v19 + 1) = 23;
  v19[16] = 2;
  v10();
  v20 = (_QWORD *)(v6 + 6 * v3);
  v21 = (char *)v20 + *(int *)(v1 + 48);
  *v20 = 7;
  *(_QWORD *)v21 = "imputedInt64Dictionary";
  *((_QWORD *)v21 + 1) = 22;
  v21[16] = 2;
  v10();
  v22 = (_QWORD *)(v6 + 7 * v3);
  v23 = (char *)v22 + *(int *)(v1 + 48);
  *v22 = 11;
  *(_QWORD *)v23 = "replaceDoubleValue";
  *((_QWORD *)v23 + 1) = 18;
  v23[16] = 2;
  v10();
  v24 = (_QWORD *)(v6 + 8 * v3);
  v25 = (char *)v24 + *(int *)(v1 + 48);
  *v24 = 12;
  *(_QWORD *)v25 = "replaceInt64Value";
  *((_QWORD *)v25 + 1) = 17;
  v25[16] = 2;
  v10();
  v26 = (_QWORD *)(v6 + 9 * v3);
  v27 = (char *)v26 + *(int *)(v1 + 48);
  *v26 = 13;
  *(_QWORD *)v27 = "replaceStringValue";
  *((_QWORD *)v27 + 1) = 18;
  v27[16] = 2;
  v10();
  return sub_240F1CC18();
}

uint64_t sub_240C4ECF8()
{
  uint64_t v0;

  if (qword_25708AE98 != -1)
    swift_once();
  v0 = sub_240F1CC30();
  return __swift_project_value_buffer(v0, (uint64_t)qword_2570F9158);
}

void sub_240C4ED40()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t (*v3)(void);
  uint64_t (*v4)(void);
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t (*v31)(uint64_t *, uint64_t, uint64_t);
  char v32;
  uint64_t v33;
  uint64_t v34;

  v1 = sub_240F1C990();
  if (!v0)
  {
    v3 = MEMORY[0x24BE5C100];
    v4 = MEMORY[0x24BE5C0D0];
    while ((v2 & 1) == 0)
    {
      switch(v1)
      {
        case 1:
          v5 = OUTLINED_FUNCTION_6_7();
          sub_240C4EE80(v5, v6);
          break;
        case 2:
          v7 = OUTLINED_FUNCTION_6_7();
          sub_240C4EFE8(v7, v8);
          break;
        case 3:
          v9 = OUTLINED_FUNCTION_6_7();
          sub_240C4F150(v9, v10);
          break;
        case 4:
          v11 = OUTLINED_FUNCTION_17_2();
          sub_240C4F2C4(v11, v12, v13, v14);
          break;
        case 5:
          v15 = OUTLINED_FUNCTION_17_2();
          sub_240C4F6B0(v15, v16, v17, v18);
          break;
        case 6:
          v19 = OUTLINED_FUNCTION_17_2();
          sub_240C4FA9C(v19, v20, v21, v22);
          break;
        case 7:
          v23 = OUTLINED_FUNCTION_17_2();
          sub_240C4FE88(v23, v24, v25, v26);
          break;
        case 11:
          v27 = OUTLINED_FUNCTION_6_7();
          v31 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v3;
          v32 = 0;
          goto LABEL_15;
        case 12:
          v27 = OUTLINED_FUNCTION_6_7();
          v31 = (uint64_t (*)(uint64_t *, uint64_t, uint64_t))v4;
          v32 = 1;
LABEL_15:
          sub_240C50274(v27, v28, v29, v30, v31, v32);
          break;
        case 13:
          v33 = OUTLINED_FUNCTION_6_7();
          sub_240C50344(v33, v34);
          break;
        default:
          break;
      }
      v1 = sub_240F1C990();
    }
  }
}

uint64_t sub_240C4EE80(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  char v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = 1;
  result = sub_240F1CA74();
  if (!v2 && (v12 & 1) == 0)
  {
    v8 = v11;
    sub_240C283B4((uint64_t)a2, (uint64_t)v6, &qword_25708BDB8);
    v9 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v9);
    sub_240BE0B68((uint64_t)v6, &qword_25708BDB8);
    if (EnumTagSinglePayload != 1)
      sub_240F1C99C();
    sub_240BE0B68((uint64_t)a2, &qword_25708BDB8);
    *a2 = v8;
    swift_storeEnumTagMultiPayload();
    return __swift_storeEnumTagSinglePayload((uint64_t)a2, 0, 1, v9);
  }
  return result;
}

uint64_t sub_240C4EFE8(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  int EnumTagSinglePayload;
  uint64_t v10;
  char v11;
  uint64_t v12;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = 0;
  v11 = 1;
  result = sub_240F1CA38();
  if (!v2 && (v11 & 1) == 0)
  {
    v12 = v10;
    sub_240C283B4((uint64_t)a2, (uint64_t)v6, &qword_25708BDB8);
    v8 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
    sub_240BE0B68((uint64_t)v6, &qword_25708BDB8);
    if (EnumTagSinglePayload != 1)
      sub_240F1C99C();
    sub_240BE0B68((uint64_t)a2, &qword_25708BDB8);
    *a2 = v12;
    swift_storeEnumTagMultiPayload();
    return __swift_storeEnumTagSinglePayload((uint64_t)a2, 0, 1, v8);
  }
  return result;
}

uint64_t sub_240C4F150(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = 0;
  v12 = 0;
  result = sub_240F1CA8C();
  if (v2)
    return swift_bridgeObjectRelease();
  v8 = v12;
  if (v12)
  {
    v13 = v11;
    sub_240C283B4((uint64_t)a2, (uint64_t)v6, &qword_25708BDB8);
    v9 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v9);
    sub_240BE0B68((uint64_t)v6, &qword_25708BDB8);
    if (EnumTagSinglePayload != 1)
      sub_240F1C99C();
    sub_240BE0B68((uint64_t)a2, &qword_25708BDB8);
    *a2 = v13;
    a2[1] = v8;
    swift_storeEnumTagMultiPayload();
    return __swift_storeEnumTagSinglePayload((uint64_t)a2, 0, 1, v9);
  }
  return result;
}

void sub_240C4F2C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_DoubleVector(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C840);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDB8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDB8);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708C840);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_DoubleVector);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_DoubleVector);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25708C828, type metadata accessor for Proto_DoubleVector, (uint64_t)&unk_240F2AA1C);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708C840);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708C840);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708C840);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_DoubleVector);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708C840);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDB8);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_DoubleVector);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_240C4F6B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_Int64Vector(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE10);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDB8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDB8);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_Int64Vector);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_Int64Vector);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25435FB40, type metadata accessor for Proto_Int64Vector, (uint64_t)&unk_240F2ACEC);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708BE10);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708BE10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_Int64Vector);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708BE10);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDB8);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_Int64Vector);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_240C4FA9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_StringToDoubleMap(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C848);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDB8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDB8);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708C848);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_StringToDoubleMap);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_StringToDoubleMap);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25708C830, type metadata accessor for Proto_StringToDoubleMap, (uint64_t)&unk_240F2B124);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708C848);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708C848);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708C848);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_StringToDoubleMap);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708C848);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDB8);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_StringToDoubleMap);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

void sub_240C4FE88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int EnumTagSinglePayload;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v34 = a2;
  v36 = a4;
  v35 = a3;
  v5 = type metadata accessor for Proto_Int64ToDoubleMap(0);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v32 = (uint64_t)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v30 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  v14 = MEMORY[0x24BDAC7A8](v13);
  v16 = (char *)&v30 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v14);
  v18 = (char *)&v30 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C850);
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v30 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v20);
  v24 = (char *)&v30 - v23;
  __swift_storeEnumTagSinglePayload((uint64_t)&v30 - v23, 1, 1, v5);
  v30 = a1;
  sub_240C283B4(a1, (uint64_t)v12, &qword_25708BDB8);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v13);
  if (EnumTagSinglePayload == 1)
  {
    sub_240BE0B68((uint64_t)v12, &qword_25708BDB8);
    v25 = v13;
  }
  else
  {
    sub_240C2837C((uint64_t)v12, (uint64_t)v18, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    sub_240C2837C((uint64_t)v18, (uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    v25 = v13;
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_240BE0B68((uint64_t)v24, &qword_25708C850);
      sub_240C2837C((uint64_t)v16, (uint64_t)v9, type metadata accessor for Proto_Int64ToDoubleMap);
      sub_240C2837C((uint64_t)v9, (uint64_t)v24, type metadata accessor for Proto_Int64ToDoubleMap);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v5);
    }
    else
    {
      sub_240BE10B8((uint64_t)v16, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
    }
  }
  v26 = v33;
  sub_240BE18B8(&qword_25708C838, type metadata accessor for Proto_Int64ToDoubleMap, (uint64_t)&unk_240F2AFBC);
  sub_240F1CAC8();
  if (v26)
  {
    v27 = (uint64_t)v24;
LABEL_10:
    sub_240BE0B68(v27, &qword_25708C850);
    return;
  }
  sub_240C283B4((uint64_t)v24, (uint64_t)v22, &qword_25708C850);
  if (__swift_getEnumTagSinglePayload((uint64_t)v22, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v24, &qword_25708C850);
    v27 = (uint64_t)v22;
    goto LABEL_10;
  }
  v28 = v32;
  sub_240C2837C((uint64_t)v22, v32, type metadata accessor for Proto_Int64ToDoubleMap);
  if (EnumTagSinglePayload != 1)
    sub_240F1C99C();
  sub_240BE0B68((uint64_t)v24, &qword_25708C850);
  v29 = v30;
  sub_240BE0B68(v30, &qword_25708BDB8);
  sub_240C2837C(v28, v29, type metadata accessor for Proto_Int64ToDoubleMap);
  swift_storeEnumTagMultiPayload();
  __swift_storeEnumTagSinglePayload(v29, 0, 1, v25);
}

uint64_t sub_240C50274(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t *, uint64_t, uint64_t), char a6)
{
  uint64_t v6;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;

  v15 = 0;
  v16 = 1;
  result = a5(&v15, a3, a4);
  if (!v6 && (v16 & 1) == 0)
  {
    v10 = v15;
    v11 = a2 + *(int *)(type metadata accessor for Proto_Imputer(0) + 20);
    if (*(unsigned __int8 *)(v11 + 16) == 255)
    {
      v12 = -1;
    }
    else
    {
      sub_240F1C99C();
      v12 = *(_BYTE *)(v11 + 16);
    }
    v13 = *(_QWORD *)v11;
    v14 = *(_QWORD *)(v11 + 8);
    *(_QWORD *)v11 = v10;
    *(_QWORD *)(v11 + 8) = 0;
    *(_BYTE *)(v11 + 16) = a6;
    return sub_240C5177C(v13, v14, v12);
  }
  return result;
}

uint64_t sub_240C50344(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = sub_240F1CA8C();
  if (v2)
    return swift_bridgeObjectRelease();
  if (v9)
  {
    v5 = a2 + *(int *)(type metadata accessor for Proto_Imputer(0) + 20);
    if (*(unsigned __int8 *)(v5 + 16) == 255)
    {
      v6 = -1;
    }
    else
    {
      sub_240F1C99C();
      v6 = *(_BYTE *)(v5 + 16);
    }
    v7 = *(_QWORD *)v5;
    v8 = *(_QWORD *)(v5 + 8);
    *(_QWORD *)v5 = 0;
    *(_QWORD *)(v5 + 8) = v9;
    *(_BYTE *)(v5 + 16) = 2;
    return sub_240C5177C(v7, v8, v6);
  }
  return result;
}

uint64_t sub_240C50420()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  uint64_t v12;
  uint64_t v13;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  sub_240C283B4(v0, v4 - v3, &qword_25708BDB8);
  v6 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload(v5, 1, v6) != 1)
  {
    v11 = (char *)&loc_240C5050C + 4 * byte_240F20D35[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v7 = type metadata accessor for Proto_Imputer(0);
  v8 = *(unsigned __int8 *)(v0 + *(int *)(v7 + 20) + 16);
  if (!*(_BYTE *)(v0 + *(int *)(v7 + 20) + 16))
  {
    v12 = OUTLINED_FUNCTION_0_7();
    result = sub_240C50F80(v12);
    goto LABEL_9;
  }
  if (v8 == 1)
  {
    v13 = OUTLINED_FUNCTION_0_7();
    result = sub_240C51008(v13);
LABEL_9:
    if (v1)
      return result;
    return sub_240F1C918();
  }
  if (v8 == 2)
  {
    v9 = OUTLINED_FUNCTION_0_7();
    result = sub_240C5108C(v9);
    goto LABEL_9;
  }
  return sub_240F1C918();
}

void sub_240C505EC(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v5 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (!swift_getEnumCaseMultiPayload())
    {
      sub_240F1CBC4();
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

void sub_240C506F4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v5 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240F1CBAC();
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

void sub_240C50800(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v5 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v5) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 2)
    {
      sub_240F1CBD0();
      swift_bridgeObjectRelease();
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

void sub_240C50920(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_DoubleVector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v8 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 3)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_DoubleVector);
      sub_240BE18B8(&qword_25708C828, type metadata accessor for Proto_DoubleVector, (uint64_t)&unk_240F2AA1C);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_DoubleVector);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

void sub_240C50AB8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64Vector(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v8 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 4)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      sub_240BE18B8(&qword_25435FB40, type metadata accessor for Proto_Int64Vector, (uint64_t)&unk_240F2ACEC);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64Vector);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

void sub_240C50C50(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_StringToDoubleMap(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v8 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 5)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_StringToDoubleMap);
      sub_240BE18B8(&qword_25708C830, type metadata accessor for Proto_StringToDoubleMap, (uint64_t)&unk_240F2B124);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_StringToDoubleMap);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

void sub_240C50DE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD v9[2];

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)v9 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for Proto_Int64ToDoubleMap(0);
  MEMORY[0x24BDAC7A8](v5);
  v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C283B4(a1, (uint64_t)v4, &qword_25708BDB8);
  v8 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v4, 1, v8) == 1)
  {
    sub_240BE0B68((uint64_t)v4, &qword_25708BDB8);
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 6)
    {
      sub_240C2837C((uint64_t)v4, (uint64_t)v7, type metadata accessor for Proto_Int64ToDoubleMap);
      sub_240BE18B8(&qword_25708C838, type metadata accessor for Proto_Int64ToDoubleMap, (uint64_t)&unk_240F2AFBC);
      sub_240F1CC00();
      sub_240BE10B8((uint64_t)v7, type metadata accessor for Proto_Int64ToDoubleMap);
      return;
    }
    sub_240BE10B8((uint64_t)v4, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
  }
  __break(1u);
}

uint64_t sub_240C50F80(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Imputer(0);
  v3 = a1 + *(int *)(result + 20);
  if (*(_BYTE *)(v3 + 16))
  {
    __break(1u);
  }
  else
  {
    sub_240C02F64(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), 0);
    return sub_240F1CBC4();
  }
  return result;
}

uint64_t sub_240C51008(uint64_t a1)
{
  uint64_t result;
  uint64_t v3;

  result = type metadata accessor for Proto_Imputer(0);
  v3 = a1 + *(int *)(result + 20);
  if (*(_BYTE *)(v3 + 16) == 1)
  {
    sub_240C02F64(*(_QWORD *)v3, *(_QWORD *)(v3 + 8), 1);
    return sub_240F1CBAC();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_240C5108C(uint64_t a1)
{
  uint64_t result;

  result = type metadata accessor for Proto_Imputer(0);
  if (*(_BYTE *)(a1 + *(int *)(result + 20) + 16) == 2)
    return sub_240F1CBD0();
  __break(1u);
  return result;
}

void _s20MLModelSpecification20ImputerConfigurationV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  int v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  char *v43;
  uint64_t v44;
  char *v45;
  void (*v46)(uint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;

  v48 = OUTLINED_FUNCTION_20_0();
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x24BDAC7A8](v48);
  OUTLINED_FUNCTION_11_3();
  v50 = (char *)(v4 - v5);
  MEMORY[0x24BDAC7A8](v6);
  v49 = (char *)&v47 - v7;
  OUTLINED_FUNCTION_20_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C860);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_24_1();
  v16 = v15 - v14;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BDB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_11_3();
  v20 = v18 - v19;
  v22 = MEMORY[0x24BDAC7A8](v21);
  v24 = (char *)&v47 - v23;
  MEMORY[0x24BDAC7A8](v22);
  v26 = (char *)&v47 - v25;
  v52 = a1;
  OUTLINED_FUNCTION_15_9(a1, (uint64_t)&v47 - v25);
  v27 = a2;
  OUTLINED_FUNCTION_15_9(a2, (uint64_t)v24);
  v28 = v16 + *(int *)(v12 + 48);
  OUTLINED_FUNCTION_15_9((uint64_t)v26, v16);
  OUTLINED_FUNCTION_15_9((uint64_t)v24, v28);
  OUTLINED_FUNCTION_8_2(v16);
  if (!v29)
  {
    sub_240C283B4(v16, v20, &qword_25708BDB8);
    OUTLINED_FUNCTION_8_2(v28);
    if (!v29)
    {
      sub_240C2837C(v28, v11, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
      sub_240C4E304(v20, v11);
      v31 = v30;
      sub_240BE10B8(v11, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
      OUTLINED_FUNCTION_15_2((uint64_t)v24);
      OUTLINED_FUNCTION_15_2((uint64_t)v26);
      sub_240BE10B8(v20, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
      OUTLINED_FUNCTION_15_2(v16);
      if ((v31 & 1) == 0)
        goto LABEL_10;
      goto LABEL_12;
    }
    sub_240BE0B68((uint64_t)v24, &qword_25708BDB8);
    sub_240BE0B68((uint64_t)v26, &qword_25708BDB8);
    sub_240BE10B8(v20, type metadata accessor for Proto_Imputer.OneOf_ImputedValue);
LABEL_9:
    sub_240BE0B68(v16, &qword_25708C860);
    goto LABEL_10;
  }
  sub_240BE0B68((uint64_t)v24, &qword_25708BDB8);
  sub_240BE0B68((uint64_t)v26, &qword_25708BDB8);
  OUTLINED_FUNCTION_8_2(v28);
  if (!v29)
    goto LABEL_9;
  sub_240BE0B68(v16, &qword_25708BDB8);
LABEL_12:
  v32 = type metadata accessor for Proto_Imputer(0);
  v33 = *(int *)(v32 + 20);
  v34 = v52;
  v35 = (uint64_t *)(v52 + v33);
  v36 = *(unsigned __int8 *)(v52 + v33 + 16);
  v37 = v27 + v33;
  v38 = *(unsigned __int8 *)(v37 + 16);
  if (v36 == 255)
  {
    if (v38 == 255)
    {
LABEL_17:
      v39 = v34 + *(int *)(v32 + 24);
      v40 = v51;
      v41 = *(void (**)(char *, uint64_t, uint64_t))(v51 + 16);
      v42 = v48;
      v43 = v49;
      v41(v49, v39, v48);
      v44 = v27 + *(int *)(v32 + 24);
      v45 = v50;
      v41(v50, v44, v42);
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      sub_240F1CC90();
      v46 = *(void (**)(uint64_t, uint64_t))(v40 + 8);
      v46((uint64_t)v45, v42);
      v46((uint64_t)v43, v42);
    }
  }
  else if (v38 != 255 && (sub_240C4E900(*v35, v35[1], v36, *(_QWORD *)v37, *(_QWORD *)(v37 + 8), v38) & 1) != 0)
  {
    goto LABEL_17;
  }
LABEL_10:
  OUTLINED_FUNCTION_1();
}

uint64_t sub_240C51468()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_Imputer(0);
  sub_240BE18B8(&qword_25708C810, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20E38);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C514D8()
{
  return 0x6D492E6F746F7250;
}

uint64_t sub_240C514FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 24);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t sub_240C5153C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 24);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 40))(v4, a1, v5);
}

void sub_240C5157C()
{
  sub_240C4ED40();
}

uint64_t sub_240C51590()
{
  return sub_240C50420();
}

uint64_t sub_240C515A4()
{
  sub_240BE18B8(&qword_25708C820, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20EC8);
  return sub_240F1C960();
}

uint64_t sub_240C515F4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = sub_240C4ECF8();
  v3 = sub_240F1CC30();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v2, v3);
}

uint64_t sub_240C51634()
{
  sub_240BE18B8((unint64_t *)&qword_25708C808, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20F00);
  return sub_240F1CAF8();
}

uint64_t sub_240C51678()
{
  sub_240BE18B8((unint64_t *)&qword_25708C808, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20F00);
  return sub_240F1CB04();
}

void sub_240C516CC()
{
  sub_240BE18B8(&qword_25708C800, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20E10);
}

void sub_240C516F8()
{
  sub_240BE18B8((unint64_t *)&qword_25708C808, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20F00);
}

void sub_240C51724()
{
  sub_240BE18B8(&qword_25708C810, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20E38);
}

void sub_240C51750()
{
  sub_240BE18B8(&qword_25708C818, type metadata accessor for Proto_Imputer, (uint64_t)&unk_240F20E78);
}

uint64_t sub_240C5177C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3 != -1)
    return sub_240C02F7C(a1, a2, a3);
  return a1;
}

uint64_t sub_240C51790(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_3_11()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_4_9()
{
  return sub_240F1CC90();
}

void OUTLINED_FUNCTION_5_13()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

uint64_t OUTLINED_FUNCTION_20_5()
{
  return type metadata accessor for Proto_Imputer.OneOf_ImputedValue(0);
}

void OUTLINED_FUNCTION_21_6(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;

  sub_240C2837C(a1, v3, a3);
}

uint64_t sub_240C5182C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v11;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v11 = MEMORY[0x24BEE4AF8];
    sub_240BF0904();
    v2 = v11;
    v4 = *(_QWORD *)(type metadata accessor for Proto_GLMRegressor.DoubleArray(0) - 8);
    v5 = (uint64_t *)(a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80)));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = *v5;
      v9 = *(_QWORD *)(v11 + 16);
      v8 = *(_QWORD *)(v11 + 24);
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1)
        sub_240BF0904();
      *(_QWORD *)(v11 + 16) = v9 + 1;
      *(_QWORD *)(v11 + 8 * v9 + 32) = v7;
      v5 = (uint64_t *)((char *)v5 + v6);
      --v1;
    }
    while (v1);
  }
  return v2;
}

BOOL static LinearRegressorConfiguration.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, uint64_t, uint64_t);
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v18 - v9;
  sub_240BEED88();
  if ((v11 & 1) == 0)
    return 0;
  if ((sub_240BEACE4(*(_QWORD *)(a1 + 8), *(_QWORD *)(a2 + 8)) & 1) == 0)
    return 0;
  if (!sub_240C51C64(*(_QWORD *)(a1 + 16), *(unsigned __int8 *)(a1 + 24), *(_QWORD *)(a2 + 16)))
    return 0;
  v12 = OUTLINED_FUNCTION_0_8();
  v13 = a1 + *(int *)(v12 + 28);
  v14 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, a2 + *(int *)(v12 + 28), v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = sub_240F1CC90();
  v16 = *(void (**)(char *, uint64_t))(v5 + 8);
  v16(v8, v4);
  v16(v10, v4);
  return (v15 & 1) != 0;
}

BOOL sub_240C51A78(char a1, char a2)
{
  return qword_240F21128[a1] == qword_240F21128[a2];
}

void sub_240C51A9C(unsigned __int8 a1, char a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = 0x737475706E49;
  v3 = a1;
  if (a1)
  {
    if (a1 == 1)
      v4 = 0x7374757074754FLL;
    else
      v4 = 0x676E696E69617254;
    if (v3 == 1)
      v5 = 0xE700000000000000;
    else
      v5 = 0xEE00737475706E49;
  }
  else
  {
    v5 = 0xE600000000000000;
    v4 = 0x737475706E49;
  }
  if (a2)
  {
    if (a2 == 1)
      v2 = 0x7374757074754FLL;
    else
      v2 = 0x676E696E69617254;
    if (a2 == 1)
      v6 = 0xE700000000000000;
    else
      v6 = 0xEE00737475706E49;
  }
  else
  {
    v6 = 0xE600000000000000;
  }
  if (v4 != v2 || v5 != v6)
    OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_156();
}

void sub_240C51B98(unsigned __int8 a1, unsigned __int8 a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = sub_240C2A050(a1);
  v5 = v4;
  if (v3 != sub_240C2A050(a2) || v5 != v6)
    OUTLINED_FUNCTION_5_14();
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_156();
}

BOOL sub_240C51C00(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    a1 = qword_240F211C8[a1];
  if ((a4 & 1) != 0)
    a3 = qword_240F211C8[a3];
  return a1 == a3;
}

BOOL sub_240C51C24(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_240C51C38(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = 10 * a1;
  if ((a2 & 1) == 0)
    v4 = a1;
  v5 = 10 * a3;
  if ((a4 & 1) == 0)
    v5 = a3;
  return v4 == v5;
}

BOOL sub_240C51C64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return a1 == a3;
}

BOOL sub_240C51C70(uint64_t a1, char a2, uint64_t a3, char a4)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a1 != 0;
  if ((a2 & 1) == 0)
    v4 = a1;
  v5 = a3 != 0;
  if ((a4 & 1) == 0)
    v5 = a3;
  return v4 == v5;
}

BOOL sub_240C51C9C(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

BOOL sub_240C51CAC(char a1, char a2)
{
  return qword_240F21270[a1] == qword_240F21270[a2];
}

BOOL sub_240C51CD0(uint64_t a1, char a2, uint64_t a3, char a4)
{
  if ((a2 & 1) != 0)
    a1 = qword_240F21290[a1];
  if ((a4 & 1) != 0)
    a3 = qword_240F21290[a3];
  return a1 == a3;
}

uint64_t LinearRegressorConfiguration.weights.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_315();
  v1 = sub_240C5182C(v0);
  OUTLINED_FUNCTION_173();
  return v1;
}

void sub_240C51D3C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  LinearRegressorConfiguration.weights.setter(v0);
}

void LinearRegressorConfiguration.weights.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  uint64_t v14;

  v3 = type metadata accessor for Proto_GLMRegressor.DoubleArray(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v7 = (_QWORD *)(v6 - v5);
  v8 = *(_QWORD *)(a1 + 16);
  if (v8)
  {
    v13 = v1;
    v14 = MEMORY[0x24BEE4AF8];
    sub_240BF0930();
    v9 = 0;
    v10 = v14;
    do
    {
      v11 = *(_QWORD *)(a1 + 8 * v9 + 32);
      swift_bridgeObjectRetain();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      *v7 = v11;
      v12 = *(_QWORD *)(v14 + 16);
      if (v12 >= *(_QWORD *)(v14 + 24) >> 1)
        sub_240BF0930();
      ++v9;
      *(_QWORD *)(v14 + 16) = v12 + 1;
      sub_240C5250C((uint64_t)v7, v14+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12);
    }
    while (v8 != v9);
    swift_bridgeObjectRelease();
    v1 = v13;
  }
  else
  {
    swift_bridgeObjectRelease();
    v10 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  *v1 = v10;
  OUTLINED_FUNCTION_1();
}

void (*LinearRegressorConfiguration.weights.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[2] = v1;
  v3 = swift_bridgeObjectRetain();
  v4 = sub_240C5182C(v3);
  OUTLINED_FUNCTION_42_2();
  *a1 = v4;
  return sub_240C51F14;
}

void sub_240C51F14(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    LinearRegressorConfiguration.weights.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    LinearRegressorConfiguration.weights.setter(*a1);
    OUTLINED_FUNCTION_44();
  }
}

uint64_t LinearRegressorConfiguration.offset.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240C51F5C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  LinearRegressorConfiguration.offset.setter(v0);
}

void LinearRegressorConfiguration.offset.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t (*LinearRegressorConfiguration.offset.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  return sub_240C51FE0;
}

uint64_t sub_240C51FE0(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v2;
    return swift_bridgeObjectRelease();
  }
  else
  {
    result = OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v2;
  }
  return result;
}

void LinearRegressorConfiguration.postEvaluationFunction.getter(_BYTE *a1@<X8>)
{
  uint64_t v1;
  char v2;

  if (*(_BYTE *)(v1 + 24) == 1)
    v2 = *(_BYTE *)(v1 + 16);
  else
    v2 = 0;
  *a1 = v2;
}

unsigned __int8 *sub_240C52054(unsigned __int8 *a1)
{
  unsigned __int8 v2;

  v2 = *a1;
  return LinearRegressorConfiguration.postEvaluationFunction.setter(&v2);
}

unsigned __int8 *LinearRegressorConfiguration.postEvaluationFunction.setter(unsigned __int8 *result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = *result;
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

uint64_t *(*LinearRegressorConfiguration.postEvaluationFunction.modify(uint64_t a1))(uint64_t *result)
{
  uint64_t v1;
  char v2;

  *(_QWORD *)a1 = v1;
  if (*(_BYTE *)(v1 + 24) == 1)
    v2 = *(_BYTE *)(v1 + 16);
  else
    v2 = 0;
  *(_BYTE *)(a1 + 8) = v2;
  return sub_240C520CC;
}

uint64_t *sub_240C520CC(uint64_t *result)
{
  uint64_t v1;

  v1 = *result;
  *(_QWORD *)(v1 + 16) = *((unsigned __int8 *)result + 8);
  *(_BYTE *)(v1 + 24) = 1;
  return result;
}

void LinearRegressorConfiguration.init()(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)a1 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a1 + 8) = v2;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  OUTLINED_FUNCTION_0_8();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_44();
}

void LinearRegressorConfiguration.init(weights:offset:postEvaluationFunction:)(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned __int8 *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;

  v7 = MEMORY[0x24BEE4AF8];
  v8 = *a3;
  *(_QWORD *)a4 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(a4 + 8) = v7;
  *(_QWORD *)(a4 + 16) = 0;
  *(_BYTE *)(a4 + 24) = 1;
  OUTLINED_FUNCTION_0_8();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  LinearRegressorConfiguration.weights.setter(a1);
  *(_QWORD *)(a4 + 8) = a2;
  *(_QWORD *)(a4 + 16) = v8;
  *(_BYTE *)(a4 + 24) = 1;
}

uint64_t LinearRegressorConfiguration.hash(into:)()
{
  OUTLINED_FUNCTION_0_8();
  sub_240C30D44(&qword_25708C868, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27590);
  return sub_240F1CC54();
}

uint64_t LinearRegressorConfiguration.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_0_8();
  sub_240C30D44(&qword_25708C868, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27590);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C5225C()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_GLMRegressor(0);
  sub_240C30D44(&qword_25708C868, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27590);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void LinearRegressorConfiguration.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_240F1CF90();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_24_1();
  v5 = v4 - v3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  v9 = v8 - v7;
  v10 = type metadata accessor for LinearRegressorConfiguration();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_24_1();
  sub_240C52588(v0, v12 - v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v13 + 32) = 0x73746867696577;
  *(_QWORD *)(v13 + 40) = 0xE700000000000000;
  v14 = swift_bridgeObjectRetain();
  v15 = sub_240C5182C(v14);
  swift_bridgeObjectRelease();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C870);
  *(_QWORD *)(v13 + 48) = v15;
  *(_QWORD *)(v13 + 72) = v16;
  *(_QWORD *)(v13 + 80) = 0x74657366666FLL;
  *(_QWORD *)(v13 + 88) = 0xE600000000000000;
  v17 = *(_QWORD *)(v0 + 8);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEC8);
  *(_QWORD *)(v13 + 96) = v17;
  *(_QWORD *)(v13 + 120) = v18;
  *(_QWORD *)(v13 + 128) = 0xD000000000000016;
  *(_QWORD *)(v13 + 136) = 0x8000000240F525B0;
  *(_QWORD *)(v13 + 168) = &type metadata for LinearRegressorConfiguration.PostEvaluationFunction;
  LinearRegressorConfiguration.postEvaluationFunction.getter((_BYTE *)(v13 + 144));
  v19 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v9, 1, 1, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x24BEE43C0], v1);
  swift_bridgeObjectRetain();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

MLModelSpecification::LinearRegressorConfiguration::PostEvaluationFunction_optional __swiftcall LinearRegressorConfiguration.PostEvaluationFunction.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (MLModelSpecification::LinearRegressorConfiguration::PostEvaluationFunction_optional)rawValue;
}

uint64_t LinearRegressorConfiguration.PostEvaluationFunction.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

MLModelSpecification::LinearRegressorConfiguration::PostEvaluationFunction_optional sub_240C524E4(Swift::Int *a1)
{
  return LinearRegressorConfiguration.PostEvaluationFunction.init(rawValue:)(*a1);
}

void sub_240C524EC(uint64_t *a1@<X8>)
{
  *a1 = LinearRegressorConfiguration.PostEvaluationFunction.rawValue.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C5250C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for Proto_GLMRegressor.DoubleArray(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for LinearRegressorConfiguration()
{
  uint64_t result;

  result = qword_254360188;
  if (!qword_254360188)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C52588(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for LinearRegressorConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C525CC()
{
  return sub_240C30D44(&qword_25708C878, (uint64_t (*)(uint64_t))type metadata accessor for LinearRegressorConfiguration, (uint64_t)&protocol conformance descriptor for LinearRegressorConfiguration);
}

uint64_t sub_240C525F8()
{
  return sub_240C30D44(&qword_25708C880, type metadata accessor for Proto_GLMRegressor, (uint64_t)&unk_240F27518);
}

unint64_t sub_240C52628()
{
  unint64_t result;

  result = qword_25708C888;
  if (!qword_25708C888)
  {
    result = MEMORY[0x24268C2AC](&protocol conformance descriptor for LinearRegressorConfiguration.PostEvaluationFunction, &type metadata for LinearRegressorConfiguration.PostEvaluationFunction);
    atomic_store(result, (unint64_t *)&qword_25708C888);
  }
  return result;
}

void sub_240C52664(uint64_t *a1@<X8>)
{
  *a1 = LinearRegressorConfiguration.weights.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C5268C(uint64_t *a1@<X8>)
{
  *a1 = LinearRegressorConfiguration.offset.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C526B4(_BYTE *a1@<X8>)
{
  LinearRegressorConfiguration.postEvaluationFunction.getter(a1);
  OUTLINED_FUNCTION_44();
}

uint64_t initializeBufferWithCopyOfBuffer for LinearRegressorConfiguration(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v4 = type metadata accessor for Proto_GLMRegressor(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *(_QWORD *)a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = v6 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    *(_QWORD *)(a1 + 8) = a2[1];
    *(_QWORD *)(a1 + 16) = v7;
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v8 = *(int *)(v4 + 28);
    v9 = a1 + v8;
    v10 = (uint64_t)a2 + v8;
    v11 = sub_240F1C930();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  return a1;
}

uint64_t destroy for LinearRegressorConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_GLMRegressor(0) + 28);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

uint64_t initializeWithCopy for LinearRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v5 = *(int *)(type metadata accessor for Proto_GLMRegressor(0) + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

uint64_t assignWithCopy for LinearRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = v4;
  v5 = *(int *)(type metadata accessor for Proto_GLMRegressor(0) + 28);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 24))(v6, v7, v8);
  return a1;
}

uint64_t initializeWithTake for LinearRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for Proto_GLMRegressor(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t assignWithTake for LinearRegressorConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for Proto_GLMRegressor(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for LinearRegressorConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C52A3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_8();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for LinearRegressorConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C52A78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_8();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C52AAC()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_GLMRegressor(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for LinearRegressorConfiguration.PostEvaluationFunction(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_240C52B60 + 4 * byte_240F20F85[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_240C52B94 + 4 * byte_240F20F80[v4]))();
}

uint64_t sub_240C52B94(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C52B9C(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x240C52BA4);
  return result;
}

uint64_t sub_240C52BB0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x240C52BB8);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_240C52BBC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_240C52BC4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LinearRegressorConfiguration.PostEvaluationFunction()
{
  return &type metadata for LinearRegressorConfiguration.PostEvaluationFunction;
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return type metadata accessor for Proto_GLMRegressor(0);
}

uint64_t OUTLINED_FUNCTION_5_14()
{
  return sub_240F1CEDC();
}

void static NeuralNetwork.Layer.ReduceL1Parameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceL1LayerParams);
}

void static NeuralNetwork.Layer.ReduceL2Parameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceL2LayerParams);
}

void sub_240C52C20(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v12 - v8;
  if ((sub_240BEACE0(*(_QWORD *)a1, *(_QWORD *)a2) & 1) != 0)
  {
    OUTLINED_FUNCTION_24_6();
    if (v10)
    {
      if (*(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9))
      {
        v11 = a3(0);
        OUTLINED_FUNCTION_11_6(*(int *)(v11 + 28));
        OUTLINED_FUNCTION_10_6(*(int *)(v11 + 28));
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_5_7();
        OUTLINED_FUNCTION_9_5();
        OUTLINED_FUNCTION_12_4((uint64_t)v9);
      }
    }
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.ReduceMaxParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceMaxLayerParams);
}

void static NeuralNetwork.Layer.ReduceMinParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceMinLayerParams);
}

void static NeuralNetwork.Layer.ReduceSumParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceSumLayerParams);
}

void static NeuralNetwork.Layer.ReduceProdParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceProdLayerParams);
}

void static NeuralNetwork.Layer.ReduceMeanParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceMeanLayerParams);
}

void static NeuralNetwork.Layer.ReduceLogSumParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceLogSumLayerParams);
}

void static NeuralNetwork.Layer.ReduceSumSquareParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceSumSquareLayerParams);
}

void static NeuralNetwork.Layer.ReduceLogSumExpParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52C20(a1, a2, type metadata accessor for Proto_ReduceLogSumExpLayerParams);
}

void static NeuralNetwork.Layer.CumulativeSumParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_2();
  if (v7)
  {
    OUTLINED_FUNCTION_24_6();
    if (v7)
    {
      if (*(unsigned __int8 *)(a1 + 9) == *(unsigned __int8 *)(a2 + 9))
      {
        v8 = type metadata accessor for Proto_CumSumLayerParams(0);
        OUTLINED_FUNCTION_11_6(*(int *)(v8 + 28));
        OUTLINED_FUNCTION_10_6(*(int *)(v8 + 28));
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        OUTLINED_FUNCTION_5_7();
        OUTLINED_FUNCTION_9_5();
        OUTLINED_FUNCTION_12_4(v2);
      }
    }
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Layer.ArgMinParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52E48(a1, a2, type metadata accessor for Proto_ArgMinLayerParams);
}

void static NeuralNetwork.Layer.ArgMaxParameters.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  sub_240C52E48(a1, a2, type metadata accessor for Proto_ArgMaxLayerParams);
}

void sub_240C52E48(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_20_2();
  if (v7)
  {
    OUTLINED_FUNCTION_24_6();
    if (v7)
    {
      v8 = a3(0);
      OUTLINED_FUNCTION_11_6(*(int *)(v8 + 24));
      OUTLINED_FUNCTION_10_6(*(int *)(v8 + 24));
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_5_7();
      OUTLINED_FUNCTION_9_5();
      OUTLINED_FUNCTION_12_4(v3);
    }
  }
  OUTLINED_FUNCTION_13();
}

void NeuralNetwork.Layer.ReduceL1Parameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceL1LayerParams, a1);
}

void NeuralNetwork.Layer.ReduceL2Parameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceL2LayerParams, a1);
}

void NeuralNetwork.Layer.ReduceMaxParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceMaxLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceMinParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceMinLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceSumParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceSumLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceProdParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceProdLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceMeanParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceMeanLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceLogSumParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceLogSumLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceSumSquareParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceSumSquareLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceLogSumExpParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(MEMORY[0x24BEE4AF8], (void (*)(_QWORD))type metadata accessor for Proto_ReduceLogSumExpLayerParams, a1);
}

void NeuralNetwork.Layer.ReduceParameters.init()(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_BYTE *)(a1 + 8) = 1;
  *(_DWORD *)(a1 + 12) = 0;
  *(_QWORD *)(a1 + 16) = 0;
  *(_BYTE *)(a1 + 24) = 1;
  type metadata accessor for Proto_ReduceLayerParams(0);
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.ArgMinParameters.init()(uint64_t a1@<X8>)
{
  sub_240C53090((void (*)(_QWORD))type metadata accessor for Proto_ArgMinLayerParams, a1);
}

void NeuralNetwork.Layer.ArgMaxParameters.init()(uint64_t a1@<X8>)
{
  sub_240C53090((void (*)(_QWORD))type metadata accessor for Proto_ArgMaxLayerParams, a1);
}

void sub_240C53090(void (*a1)(_QWORD)@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = 0;
  *(_BYTE *)(a2 + 8) = 0;
  a1(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Layer.CumulativeSumParameters.init()(uint64_t a1@<X8>)
{
  sub_240C530E4(0, (void (*)(_QWORD))type metadata accessor for Proto_CumSumLayerParams, a1);
}

void sub_240C530E4(uint64_t a1@<X0>, void (*a2)(_QWORD)@<X1>, uint64_t a3@<X8>)
{
  *(_QWORD *)a3 = a1;
  *(_WORD *)(a3 + 8) = 0;
  a2(0);
  OUTLINED_FUNCTION_50_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C53114()
{
  sub_240BE18B8(&qword_25708C890, type metadata accessor for Proto_ReduceL1LayerParams, (uint64_t)&unk_240F4E794);
}

void sub_240C53140()
{
  sub_240BE18B8(&qword_25708C898, type metadata accessor for Proto_ReduceL2LayerParams, (uint64_t)&unk_240F4E71C);
}

void sub_240C5316C()
{
  sub_240BE18B8(&qword_25708C8A0, type metadata accessor for Proto_ReduceMaxLayerParams, (uint64_t)&unk_240F4E6A4);
}

void sub_240C53198()
{
  sub_240BE18B8(&qword_25708C8A8, type metadata accessor for Proto_ReduceMinLayerParams, (uint64_t)&unk_240F4E62C);
}

void sub_240C531C4()
{
  sub_240BE18B8(&qword_25708C8B0, type metadata accessor for Proto_ReduceSumLayerParams, (uint64_t)&unk_240F4E5B4);
}

void sub_240C531F0()
{
  sub_240BE18B8(&qword_25708C8B8, type metadata accessor for Proto_ReduceProdLayerParams, (uint64_t)&unk_240F4E53C);
}

void sub_240C5321C()
{
  sub_240BE18B8(&qword_25708C8C0, type metadata accessor for Proto_ReduceMeanLayerParams, (uint64_t)&unk_240F4E4C4);
}

void sub_240C53248()
{
  sub_240BE18B8(&qword_25708C8C8, type metadata accessor for Proto_ReduceLogSumLayerParams, (uint64_t)&unk_240F4E44C);
}

void sub_240C53274()
{
  sub_240BE18B8(&qword_25708C8D0, type metadata accessor for Proto_ReduceSumSquareLayerParams, (uint64_t)&unk_240F4E3D4);
}

void sub_240C532A0()
{
  sub_240BE18B8(&qword_25708C8D8, type metadata accessor for Proto_ReduceLogSumExpLayerParams, (uint64_t)&unk_240F4E35C);
}

void sub_240C532CC()
{
  sub_240BE18B8(&qword_25708C8E0, type metadata accessor for Proto_WhereBroadcastableLayerParams, (uint64_t)&unk_240F4E2E4);
}

void sub_240C532F8()
{
  sub_240BE18B8(&qword_25708C8E8, type metadata accessor for Proto_AverageLayerParams, (uint64_t)&unk_240F4E26C);
}

void sub_240C53324()
{
  sub_240BE18B8(&qword_25708C8F0, type metadata accessor for Proto_MaxLayerParams, (uint64_t)&unk_240F4E1F4);
}

void sub_240C53350()
{
  sub_240BE18B8(&qword_25708C8F8, type metadata accessor for Proto_MinLayerParams, (uint64_t)&unk_240F4E17C);
}

void sub_240C5337C()
{
  sub_240BE18B8(&qword_25708C900, type metadata accessor for Proto_ReduceLayerParams, (uint64_t)&unk_240F4E104);
}

void sub_240C533A8()
{
  sub_240BE18B8(&qword_25708C908, type metadata accessor for Proto_MinBroadcastableLayerParams, (uint64_t)&unk_240F4E08C);
}

void sub_240C533D4()
{
  sub_240BE18B8(&qword_25708C910, type metadata accessor for Proto_MaxBroadcastableLayerParams, (uint64_t)&unk_240F4E014);
}

void sub_240C53400()
{
  sub_240BE18B8(&qword_25708C918, type metadata accessor for Proto_ArgMinLayerParams, (uint64_t)&unk_240F4DF9C);
}

void sub_240C5342C()
{
  sub_240BE18B8(&qword_25708C920, type metadata accessor for Proto_ArgMaxLayerParams, (uint64_t)&unk_240F4DF24);
}

void sub_240C53458()
{
  sub_240BE18B8(&qword_25708C928, type metadata accessor for Proto_WhereNonZeroLayerParams, (uint64_t)&unk_240F4DEAC);
}

void sub_240C53484()
{
  sub_240BE18B8(&qword_25708C930, type metadata accessor for Proto_CumSumLayerParams, (uint64_t)&unk_240F4DE34);
}

void _s18ReduceL1ParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceL1LayerParams);
}

uint64_t _s18ReduceL1ParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceL1LayerParams);
}

void _s18ReduceL1ParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceL1LayerParams);
}

void _s18ReduceL1ParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s18ReduceL1ParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceL1LayerParams);
}

void _s18ReduceL1ParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s18ReduceL1ParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53504()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_45_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s18ReduceL1ParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5352C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_45_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceL1Parameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C938);
}

uint64_t sub_240C5355C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceL1LayerParams);
}

void _s18ReduceL2ParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceL2LayerParams);
}

uint64_t _s18ReduceL2ParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceL2LayerParams);
}

void _s18ReduceL2ParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceL2LayerParams);
}

void _s18ReduceL2ParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s18ReduceL2ParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceL2LayerParams);
}

void _s18ReduceL2ParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s18ReduceL2ParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C535BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_44_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s18ReduceL2ParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C535E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_44_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceL2Parameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C948);
}

uint64_t sub_240C53614(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceL2LayerParams);
}

void _s19ReduceMaxParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceMaxLayerParams);
}

uint64_t _s19ReduceMaxParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceMaxLayerParams);
}

void _s19ReduceMaxParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceMaxLayerParams);
}

void _s19ReduceMaxParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s19ReduceMaxParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceMaxLayerParams);
}

void _s19ReduceMaxParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s19ReduceMaxParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53674()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_31_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s19ReduceMaxParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5369C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_31_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceMaxParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C958);
}

uint64_t sub_240C536CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceMaxLayerParams);
}

void _s19ReduceMinParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceMinLayerParams);
}

uint64_t _s19ReduceMinParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceMinLayerParams);
}

void _s19ReduceMinParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceMinLayerParams);
}

void _s19ReduceMinParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s19ReduceMinParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceMinLayerParams);
}

void _s19ReduceMinParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s19ReduceMinParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5372C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_41_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s19ReduceMinParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53754()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_41_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceMinParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C968);
}

uint64_t sub_240C53784(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceMinLayerParams);
}

void _s19ReduceSumParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceSumLayerParams);
}

uint64_t _s19ReduceSumParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceSumLayerParams);
}

void _s19ReduceSumParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceSumLayerParams);
}

void _s19ReduceSumParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s19ReduceSumParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceSumLayerParams);
}

void _s19ReduceSumParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s19ReduceSumParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C537E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_28_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s19ReduceSumParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5380C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_28_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceSumParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C978);
}

uint64_t sub_240C5383C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceSumLayerParams);
}

void _s20ReduceProdParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceProdLayerParams);
}

uint64_t _s20ReduceProdParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceProdLayerParams);
}

void _s20ReduceProdParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceProdLayerParams);
}

void _s20ReduceProdParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s20ReduceProdParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceProdLayerParams);
}

void _s20ReduceProdParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s20ReduceProdParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5389C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_37_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s20ReduceProdParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C538C4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_37_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceProdParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C988);
}

uint64_t sub_240C538F4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceProdLayerParams);
}

void _s20ReduceMeanParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceMeanLayerParams);
}

uint64_t _s20ReduceMeanParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceMeanLayerParams);
}

void _s20ReduceMeanParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceMeanLayerParams);
}

void _s20ReduceMeanParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s20ReduceMeanParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceMeanLayerParams);
}

void _s20ReduceMeanParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s20ReduceMeanParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53954()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_47_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s20ReduceMeanParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5397C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_47_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceMeanParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C998);
}

uint64_t sub_240C539AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceMeanLayerParams);
}

void _s22ReduceLogSumParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumLayerParams);
}

uint64_t _s22ReduceLogSumParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceLogSumLayerParams);
}

void _s22ReduceLogSumParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumLayerParams);
}

void _s22ReduceLogSumParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s22ReduceLogSumParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumLayerParams);
}

void _s22ReduceLogSumParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s22ReduceLogSumParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53A0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_34_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s22ReduceLogSumParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53A34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_34_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceLogSumParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C9A8);
}

uint64_t sub_240C53A64(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumLayerParams);
}

void _s25ReduceSumSquareParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceSumSquareLayerParams);
}

uint64_t _s25ReduceSumSquareParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceSumSquareLayerParams);
}

void _s25ReduceSumSquareParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceSumSquareLayerParams);
}

void _s25ReduceSumSquareParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void _s25ReduceSumSquareParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceSumSquareLayerParams);
}

void _s25ReduceSumSquareParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

uint64_t _s25ReduceSumSquareParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53AC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_43_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s25ReduceSumSquareParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53AEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_43_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceSumSquareParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C9B8);
}

uint64_t sub_240C53B1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceSumSquareLayerParams);
}

void _s25ReduceLogSumExpParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53B34(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumExpLayerParams);
}

void sub_240C53B34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (*v12)(uint64_t, uint64_t, uint64_t);

  v6 = OUTLINED_FUNCTION_16_5(a1, a2, a3, a4);
  v7 = *(_DWORD *)(*(_QWORD *)(v6 - 8) + 80);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  if ((v7 & 0x20000) != 0)
  {
    swift_retain();
  }
  else
  {
    *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
    v8 = *(int *)(v6 + 28);
    v9 = a1 + v8;
    v10 = a2 + v8;
    v11 = OUTLINED_FUNCTION_20_0();
    v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 16);
    swift_bridgeObjectRetain();
    v12(v9, v10, v11);
  }
  OUTLINED_FUNCTION_42();
}

uint64_t _s25ReduceLogSumExpParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C53BD8(a1, a2, (void (*)(_QWORD))type metadata accessor for Proto_ReduceLogSumExpLayerParams);
}

uint64_t sub_240C53BD8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  swift_bridgeObjectRelease();
  a3(0);
  OUTLINED_FUNCTION_20_0();
  v4 = OUTLINED_FUNCTION_18_2();
  return OUTLINED_FUNCTION_15_5(v4, v5, v6);
}

void _s25ReduceLogSumExpParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C53C20(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumExpLayerParams);
}

void sub_240C53C20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v6 = *(int *)(OUTLINED_FUNCTION_16_5(a1, a2, a3, a4) + 28);
  v7 = a1 + v6;
  v8 = a2 + v6;
  v9 = OUTLINED_FUNCTION_20_0();
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  OUTLINED_FUNCTION_42();
}

void _s25ReduceLogSumExpParametersVwca(_QWORD *a1, _QWORD *a2)
{
  sub_240C53C9C(a1, a2);
}

void sub_240C53C9C(_QWORD *a1, _QWORD *a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_49(v2);
  OUTLINED_FUNCTION_156();
}

void _s25ReduceLogSumExpParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumExpLayerParams);
}

void _s25ReduceLogSumExpParametersVwta(_QWORD *a1, _QWORD *a2)
{
  sub_240C53D10(a1, a2);
}

void sub_240C53D10(_QWORD *a1, _QWORD *a2)
{
  uint64_t (*v2)(uint64_t, uint64_t);

  *a1 = *a2;
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_19_4();
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_49(v2);
  OUTLINED_FUNCTION_156();
}

uint64_t _s25ReduceLogSumExpParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53D70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_33_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s25ReduceLogSumExpParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53D98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_33_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceLogSumExpParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C9C8);
}

uint64_t sub_240C53DC8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceLogSumExpLayerParams);
}

uint64_t _s28WhereBroadcastableParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53DF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_42_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s28WhereBroadcastableParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53E20()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_42_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.WhereBroadcastableParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C9D8);
}

uint64_t _s17AverageParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53E5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_29_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s17AverageParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53E84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_29_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.AverageParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C9E8);
}

uint64_t _s13MaxParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53EC0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_40_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s13MaxParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53EE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_40_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.MaxParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708C9F8);
}

uint64_t _s13MinParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53F24()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_27_5();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s13MinParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C53F4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_27_5();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.MinParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA08);
}

uint64_t _s16ReduceParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_ReduceLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
    *(_QWORD *)(a1 + 16) = a2[2];
    *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
    v6 = *(int *)(v4 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s16ReduceParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C548B4(a1, a2, type metadata accessor for Proto_ReduceLayerParams);
}

uint64_t _s16ReduceParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s16ReduceParametersVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v4 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v4;
  *(_DWORD *)(a1 + 12) = *((_DWORD *)a2 + 3);
  v5 = a2[2];
  *(_BYTE *)(a1 + 24) = *((_BYTE *)a2 + 24);
  *(_QWORD *)(a1 + 16) = v5;
  v6 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
  v7 = a1 + v6;
  v8 = (uint64_t)a2 + v6;
  v9 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  return a1;
}

uint64_t _s16ReduceParametersVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

uint64_t _s16ReduceParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_DWORD *)(a1 + 12) = *(_DWORD *)(a2 + 12);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for Proto_ReduceLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s16ReduceParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54268()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_39_2();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s16ReduceParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54290()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_39_2();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ReduceParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA18);
}

uint64_t sub_240C542C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ReduceLayerParams);
}

uint64_t _s26MinBroadcastableParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C542D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_35_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s26MinBroadcastableParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_35_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.MinBroadcastableParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA28);
}

uint64_t _s26MaxBroadcastableParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5433C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_46_3();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s26MaxBroadcastableParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54364()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_46_3();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.MaxBroadcastableParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA38);
}

void _s16ArgMinParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C54458(a1, a2, a3, type metadata accessor for Proto_ArgMinLayerParams);
}

uint64_t _s16ArgMinParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ArgMinLayerParams);
}

void _s16ArgMinParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C544FC(a1, a2, a3, type metadata accessor for Proto_ArgMinLayerParams);
}

void _s16ArgMinParametersVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C54548(a1, a2, a3, type metadata accessor for Proto_ArgMinLayerParams);
}

void _s16ArgMinParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C5458C(a1, a2, a3, type metadata accessor for Proto_ArgMinLayerParams);
}

void _s16ArgMinParametersVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C545D8(a1, a2, a3, type metadata accessor for Proto_ArgMinLayerParams);
}

uint64_t _s16ArgMinParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C543E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_32_5();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s16ArgMinParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54410()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_32_5();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ArgMinParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA48);
}

uint64_t sub_240C54440(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ArgMinLayerParams);
}

void _s16ArgMaxParametersVwCP(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C54458(a1, a2, a3, type metadata accessor for Proto_ArgMaxLayerParams);
}

void sub_240C54458(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v6 = OUTLINED_FUNCTION_16_5(a1, a2, a3, a4);
  if ((*(_DWORD *)(*(_QWORD *)(v6 - 8) + 80) & 0x20000) != 0)
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
    v7 = *(int *)(v6 + 24);
    v8 = a1 + v7;
    v9 = a2 + v7;
    v10 = OUTLINED_FUNCTION_20_0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  }
  OUTLINED_FUNCTION_156();
}

uint64_t _s16ArgMaxParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C33B0C(a1, a2, type metadata accessor for Proto_ArgMaxLayerParams);
}

void _s16ArgMaxParametersVwcp(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C544FC(a1, a2, a3, type metadata accessor for Proto_ArgMaxLayerParams);
}

void sub_240C544FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_4_10(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s16ArgMaxParametersVwca(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C54548(a1, a2, a3, type metadata accessor for Proto_ArgMaxLayerParams);
}

void sub_240C54548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_10(a1, a2, a3, a4);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_14_6(v4);
  OUTLINED_FUNCTION_156();
}

void _s16ArgMaxParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C5458C(a1, a2, a3, type metadata accessor for Proto_ArgMaxLayerParams);
}

void sub_240C5458C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  OUTLINED_FUNCTION_4_10(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s16ArgMaxParametersVwta(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C545D8(a1, a2, a3, type metadata accessor for Proto_ArgMaxLayerParams);
}

void sub_240C545D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t (*v4)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_4_10(a1, a2, a3, a4);
  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_14_6(v4);
  OUTLINED_FUNCTION_156();
}

uint64_t _s16ArgMaxParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5461C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_30_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s16ArgMaxParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54644()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_30_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ArgMaxParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA58);
}

uint64_t sub_240C54674(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_ArgMaxLayerParams);
}

uint64_t _s10ActivationO17ReluConfigurationVwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_20_0();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t _s10ActivationO17ReluConfigurationVwxx_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_20_0();
  v0 = OUTLINED_FUNCTION_18_2();
  return OUTLINED_FUNCTION_15_5(v0, v1, v2);
}

void _s10ActivationO17ReluConfigurationVwcp_0(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_10(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_44();
}

void _s17AverageParametersVwca_0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_25_6();
  OUTLINED_FUNCTION_14_10(a1, v2);
  OUTLINED_FUNCTION_44();
}

void _s10ActivationO17ReluConfigurationVwtk_0(uint64_t a1)
{
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_10(a1, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_44();
}

void _s17AverageParametersVwta_0(uint64_t a1)
{
  uint64_t (*v2)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_26_2();
  OUTLINED_FUNCTION_14_10(a1, v2);
  OUTLINED_FUNCTION_44();
}

uint64_t _s22WhereNonZeroParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C547B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_36_5();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s22WhereNonZeroParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C547DC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_36_5();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.WhereNonZeroParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA68);
}

uint64_t _s23CumulativeSumParametersVwCP(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_CumSumLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_WORD *)(a1 + 8) = *((_WORD *)a2 + 4);
    v6 = *(int *)(v4 + 28);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s23CumulativeSumParametersVwxx(uint64_t a1, uint64_t a2)
{
  return sub_240C548B4(a1, a2, type metadata accessor for Proto_CumSumLayerParams);
}

uint64_t sub_240C548B4(uint64_t a1, uint64_t a2, uint64_t (*a3)(_QWORD))
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_32_2(a1, a2, a3);
  OUTLINED_FUNCTION_20_0();
  v3 = OUTLINED_FUNCTION_18_2();
  return OUTLINED_FUNCTION_15_5(v3, v4, v5);
}

uint64_t _s23CumulativeSumParametersVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  v4 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

uint64_t _s23CumulativeSumParametersVwca(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void _s23CumulativeSumParametersVwtk(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_240C549D0(a1, a2, a3, type metadata accessor for Proto_CumSumLayerParams);
}

void sub_240C549D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  OUTLINED_FUNCTION_16_5(a1, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_20_0();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

uint64_t _s23CumulativeSumParametersVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_BYTE *)(a1 + 9) = *(_BYTE *)(a2 + 9);
  v4 = *(int *)(type metadata accessor for Proto_CumSumLayerParams(0) + 28);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s23CumulativeSumParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_38_4();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s23CumulativeSumParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C54AD4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_38_4();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t type metadata accessor for NeuralNetwork.Layer.CumulativeSumParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CA78);
}

uint64_t sub_240C54B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_CumSumLayerParams);
}

uint64_t OUTLINED_FUNCTION_4_10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return a4(0);
}

uint64_t OUTLINED_FUNCTION_14_10@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_19_4()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;
  uint64_t v2;

  *(_BYTE *)(v2 + 8) = *(_BYTE *)(v1 + 8);
  *(_BYTE *)(v2 + 9) = *(_BYTE *)(v1 + 9);
  return v0(0);
}

uint64_t OUTLINED_FUNCTION_27_5()
{
  return type metadata accessor for Proto_MinLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_28_4()
{
  return type metadata accessor for Proto_ReduceSumLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_29_4()
{
  return type metadata accessor for Proto_AverageLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return type metadata accessor for Proto_ArgMaxLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_31_3()
{
  return type metadata accessor for Proto_ReduceMaxLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_32_5()
{
  return type metadata accessor for Proto_ArgMinLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_33_4()
{
  return type metadata accessor for Proto_ReduceLogSumExpLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_34_4()
{
  return type metadata accessor for Proto_ReduceLogSumLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_35_4()
{
  return type metadata accessor for Proto_MinBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_36_5()
{
  return type metadata accessor for Proto_WhereNonZeroLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_37_4()
{
  return type metadata accessor for Proto_ReduceProdLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_38_4()
{
  return type metadata accessor for Proto_CumSumLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return type metadata accessor for Proto_ReduceLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_40_4()
{
  return type metadata accessor for Proto_MaxLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_41_3()
{
  return type metadata accessor for Proto_ReduceMinLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_42_4()
{
  return type metadata accessor for Proto_WhereBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_43_4()
{
  return type metadata accessor for Proto_ReduceSumSquareLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_44_4()
{
  return type metadata accessor for Proto_ReduceL2LayerParams(0);
}

uint64_t OUTLINED_FUNCTION_45_3()
{
  return type metadata accessor for Proto_ReduceL1LayerParams(0);
}

uint64_t OUTLINED_FUNCTION_46_3()
{
  return type metadata accessor for Proto_MaxBroadcastableLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_47_4()
{
  return type metadata accessor for Proto_ReduceMeanLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_50_4()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

void NeuralNetwork.Layer.DotProductParameters.init()(_BYTE *a1@<X8>)
{
  *a1 = 0;
  OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_5_10();
  OUTLINED_FUNCTION_44();
}

BOOL static NeuralNetwork.Layer.DotProductParameters.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unsigned __int8 *v12;
  void (*v13)(char *, unsigned __int8 *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if (*a1 != *a2)
    return 0;
  v11 = OUTLINED_FUNCTION_2_10();
  v12 = &a1[*(int *)(v11 + 20)];
  v13 = *(void (**)(char *, unsigned __int8 *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.dotProduct(name:inputNames:outputName:)(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_1_7(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v6 = (__n128 *)OUTLINED_FUNCTION_113();
  v7 = OUTLINED_FUNCTION_4_11(v6, (__n128)xmmword_240F1D370);
  *(_OWORD *)(v7 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v3;
  *v4 = 0;
  OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_8_9();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.cosineSimilarity(name:inputNames:outputName:)(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;
  _BYTE *v4;
  uint64_t v5;
  __n128 *v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_1_7(a1, a2, a3);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v6 = (__n128 *)OUTLINED_FUNCTION_113();
  v7 = OUTLINED_FUNCTION_4_11(v6, (__n128)xmmword_240F1D370);
  *(_OWORD *)(v7 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v3;
  *v4 = 0;
  OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_8_9();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *v4 = 1;
  OUTLINED_FUNCTION_9_8();
  OUTLINED_FUNCTION_5_15();
  OUTLINED_FUNCTION_1();
}

void static NeuralNetwork.Layer.DotProductParameters.cosineSimilarity()(_BYTE *a1@<X8>)
{
  *a1 = 0;
  OUTLINED_FUNCTION_2_10();
  OUTLINED_FUNCTION_5_10();
  *a1 = 1;
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Layer.DotProductParameters.normalizeInputs.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t NeuralNetwork.Layer.DotProductParameters.normalizeInputs.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*NeuralNetwork.Layer.DotProductParameters.normalizeInputs.modify(uint64_t a1))(uint64_t result)
{
  _BYTE *v1;

  *(_QWORD *)a1 = v1;
  *(_BYTE *)(a1 + 8) = *v1;
  return sub_240C5500C;
}

uint64_t sub_240C5500C(uint64_t result)
{
  **(_BYTE **)result = *(_BYTE *)(result + 8);
  return result;
}

uint64_t NeuralNetwork.Layer.DotProductParameters.hash(into:)()
{
  OUTLINED_FUNCTION_2_10();
  sub_240C30D44(&qword_25708CA88, type metadata accessor for Proto_DotProductLayerParams, (uint64_t)&unk_240F4FE1C);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.DotProductParameters.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_2_10();
  sub_240C30D44(&qword_25708CA88, type metadata accessor for Proto_DotProductLayerParams, (uint64_t)&unk_240F4FE1C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C550E0()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_DotProductLayerParams(0);
  sub_240C30D44(&qword_25708CA88, type metadata accessor for Proto_DotProductLayerParams, (uint64_t)&unk_240F4FE1C);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void NeuralNetwork.Layer.DotProductParameters.customMirror.getter()
{
  char *v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;

  v2 = v0;
  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.DotProductParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  sub_240C552F8((uint64_t)v2, (uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v10 + 32) = 0x7A696C616D726F6ELL;
  *(_QWORD *)(v10 + 40) = 0xEF737475706E4965;
  v11 = *v2;
  *(_QWORD *)(v10 + 72) = MEMORY[0x24BEE1328];
  *(_BYTE *)(v10 + 48) = v11;
  v12 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v12);
  (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v6, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.DotProductParameters()
{
  uint64_t result;

  result = qword_25708CAA0;
  if (!qword_25708CAA0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C552F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.DotProductParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C5533C()
{
  return sub_240C30D44(&qword_25708CA90, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.DotProductParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.DotProductParameters);
}

uint64_t sub_240C55368()
{
  return sub_240C30D44(&qword_25708CA98, type metadata accessor for Proto_DotProductLayerParams, (uint64_t)&unk_240F4DDBC);
}

void sub_240C55398(_BYTE *a1@<X8>)
{
  *a1 = NeuralNetwork.Layer.DotProductParameters.normalizeInputs.getter() & 1;
  OUTLINED_FUNCTION_44();
}

void sub_240C553C0(unsigned __int8 *a1)
{
  NeuralNetwork.Layer.DotProductParameters.normalizeInputs.setter(*a1);
  OUTLINED_FUNCTION_44();
}

uint64_t *_s20DotProductParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_DotProductLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v6 = *(int *)(v4 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s20DotProductParametersVwxx(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

_BYTE *_s20DotProductParametersVwcp(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

_BYTE *_s20DotProductParametersVwca(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_BYTE *_s20DotProductParametersVwtk(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_BYTE *_s20DotProductParametersVwta(_BYTE *a1, _BYTE *a2)
{
  uint64_t v4;
  _BYTE *v5;
  _BYTE *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_DotProductLayerParams(0) + 20);
  v5 = &a1[v4];
  v6 = &a2[v4];
  v7 = sub_240F1C930();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s20DotProductParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C55664(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_10();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s20DotProductParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C556A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_10();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C556D4()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_DotProductLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_1_7@<X0>(uint64_t a1@<X0>, uint64_t a2@<X6>, uint64_t a3@<X8>)
{
  uint64_t v3;

  *(_QWORD *)(v3 - 104) = a2;
  *(_QWORD *)(v3 - 96) = a3;
  *(_QWORD *)(v3 - 88) = a1;
  return type metadata accessor for NeuralNetwork.Layer.Kind();
}

uint64_t OUTLINED_FUNCTION_2_10()
{
  return type metadata accessor for Proto_DotProductLayerParams(0);
}

uint64_t OUTLINED_FUNCTION_4_11(__n128 *a1, __n128 a2)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  a1[1] = a2;
  a1[2].n128_u64[0] = v3;
  a1[2].n128_u64[1] = v5;
  a1[3].n128_u64[0] = v2;
  a1[3].n128_u64[1] = v4;
  return swift_allocObject();
}

void OUTLINED_FUNCTION_5_15()
{
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
}

uint64_t OUTLINED_FUNCTION_8_9()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_9_8()
{
  return swift_storeEnumTagMultiPayload();
}

BOOL static NeuralNetwork.Layer.ExpandDimensionsParameters.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  void (*v13)(char *, char *, uint64_t);
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v17;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v17 - v9;
  if ((sub_240BEACE0(*a1, *(_QWORD *)a2) & 1) == 0)
    return 0;
  v11 = OUTLINED_FUNCTION_1_8();
  v12 = (char *)a1 + *(int *)(v11 + 20);
  v13 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v13(v10, v12, v4);
  v13(v8, &a2[*(int *)(v11 + 20)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v14 = sub_240F1CC90();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  v15(v10, v4);
  return (v14 & 1) != 0;
}

void static NeuralNetwork.Layer.expandDimensions(name:inputName:outputName:axes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  type metadata accessor for NeuralNetwork.Layer.Kind();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BEF8);
  v12 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = a3;
  *(_QWORD *)(v12 + 40) = a4;
  v13 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v13 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v13 + 32) = a5;
  *(_QWORD *)(v13 + 40) = a6;
  OUTLINED_FUNCTION_315();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v14 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.ExpandDimensionsParameters.init(axes:)(v14, v6);
  swift_storeEnumTagMultiPayload();
  NeuralNetwork.Layer.init(name:inputNames:outputNames:kind:)();
  OUTLINED_FUNCTION_1();
}

uint64_t static NeuralNetwork.Layer.Kind.expandDimensions(axes:)@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;

  v2 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.ExpandDimensionsParameters.init(axes:)(v2, a1);
  type metadata accessor for NeuralNetwork.Layer.Kind();
  return swift_storeEnumTagMultiPayload();
}

void NeuralNetwork.Layer.ExpandDimensionsParameters.init(axes:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;

  OUTLINED_FUNCTION_1_8();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_0_9();
    v4 = v7;
    do
    {
      OUTLINED_FUNCTION_5_16();
      if (v5)
      {
        OUTLINED_FUNCTION_2_11();
        v4 = v7;
      }
      OUTLINED_FUNCTION_6_8();
    }
    while (!v6);
    OUTLINED_FUNCTION_165();
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v4 = MEMORY[0x24BEE4AF8];
  }
  *a2 = v4;
  OUTLINED_FUNCTION_3_12();
}

uint64_t NeuralNetwork.Layer.ExpandDimensionsParameters.axes.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v8 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v4 = 0;
    v3 = v8;
    v5 = *(_QWORD *)(v8 + 16);
    do
    {
      v6 = *(_QWORD *)(v1 + 8 * v4 + 32);
      if (v5 >= *(_QWORD *)(v8 + 24) >> 1)
        sub_240BF080C();
      ++v4;
      *(_QWORD *)(v8 + 16) = v5 + 1;
      *(_QWORD *)(v8 + 8 * v5++ + 32) = v6;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_240C55BA0()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Layer.ExpandDimensionsParameters.axes.setter(v0);
}

void NeuralNetwork.Layer.ExpandDimensionsParameters.axes.setter(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;

  v2 = v1;
  if (*(_QWORD *)(a1 + 16))
  {
    OUTLINED_FUNCTION_0_9();
    v3 = v6;
    do
    {
      OUTLINED_FUNCTION_5_16();
      if (v4)
      {
        OUTLINED_FUNCTION_2_11();
        v3 = v6;
      }
      OUTLINED_FUNCTION_6_8();
    }
    while (!v5);
    OUTLINED_FUNCTION_165();
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v3 = MEMORY[0x24BEE4AF8];
  }
  swift_bridgeObjectRelease();
  *v2 = v3;
  OUTLINED_FUNCTION_3_12();
}

void (*NeuralNetwork.Layer.ExpandDimensionsParameters.axes.modify(uint64_t *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = NeuralNetwork.Layer.ExpandDimensionsParameters.axes.getter();
  return sub_240C55C88;
}

void sub_240C55C88(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    NeuralNetwork.Layer.ExpandDimensionsParameters.axes.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    NeuralNetwork.Layer.ExpandDimensionsParameters.axes.setter(*a1);
  }
}

uint64_t NeuralNetwork.Layer.ExpandDimensionsParameters.hash(into:)()
{
  OUTLINED_FUNCTION_1_8();
  sub_240C30D44(&qword_25708CAB0, type metadata accessor for Proto_ExpandDimsLayerParams, (uint64_t)&unk_240F4FDDC);
  return sub_240F1CC54();
}

uint64_t NeuralNetwork.Layer.ExpandDimensionsParameters.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_1_8();
  sub_240C30D44(&qword_25708CAB0, type metadata accessor for Proto_ExpandDimsLayerParams, (uint64_t)&unk_240F4FDDC);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C55D8C()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_ExpandDimsLayerParams(0);
  sub_240C30D44(&qword_25708CAB0, type metadata accessor for Proto_ExpandDimsLayerParams, (uint64_t)&unk_240F4FDDC);
  sub_240F1CC54();
  return sub_240F1CF78();
}

void NeuralNetwork.Layer.ExpandDimensionsParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_81();
  type metadata accessor for NeuralNetwork.Layer.ExpandDimensionsParameters();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  sub_240C55F98(v0, (uint64_t)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = 1936029793;
  *(_QWORD *)(v9 + 40) = 0xE400000000000000;
  v10 = NeuralNetwork.Layer.ExpandDimensionsParameters.axes.getter();
  *(_QWORD *)(v9 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C070);
  *(_QWORD *)(v9 + 48) = v10;
  v11 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v1, 1, 1, v11);
  (*(void (**)(char *, _QWORD, uint64_t))(v3 + 104))(v5, *MEMORY[0x24BEE43C0], v2);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t type metadata accessor for NeuralNetwork.Layer.ExpandDimensionsParameters()
{
  uint64_t result;

  result = qword_25708CAC8;
  if (!qword_25708CAC8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C55F98(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for NeuralNetwork.Layer.ExpandDimensionsParameters();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C55FDC()
{
  return sub_240C30D44(&qword_25708CAB8, (uint64_t (*)(uint64_t))type metadata accessor for NeuralNetwork.Layer.ExpandDimensionsParameters, (uint64_t)&protocol conformance descriptor for NeuralNetwork.Layer.ExpandDimensionsParameters);
}

uint64_t sub_240C56008()
{
  return sub_240C30D44(&qword_25708CAC0, type metadata accessor for Proto_ExpandDimsLayerParams, (uint64_t)&unk_240F4DD44);
}

uint64_t sub_240C56034@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = NeuralNetwork.Layer.ExpandDimensionsParameters.axes.getter();
  *a1 = result;
  return result;
}

uint64_t *_s26ExpandDimensionsParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_ExpandDimsLayerParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s26ExpandDimensionsParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s26ExpandDimensionsParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s26ExpandDimensionsParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s26ExpandDimensionsParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s26ExpandDimensionsParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_ExpandDimsLayerParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s26ExpandDimensionsParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C56328(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_8();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t _s26ExpandDimensionsParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C56364(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_8();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C56398()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_ExpandDimsLayerParams(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void OUTLINED_FUNCTION_0_9()
{
  sub_240BF0790();
}

uint64_t OUTLINED_FUNCTION_1_8()
{
  return type metadata accessor for Proto_ExpandDimsLayerParams(0);
}

void OUTLINED_FUNCTION_2_11()
{
  sub_240BF0790();
}

void OUTLINED_FUNCTION_6_8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v0 + 16) = v1;
  *(_QWORD *)(v0 + 8 * v2 + 32) = v3;
}

void sub_240C56488(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t vars0;
  uint64_t vars8;

  sub_240C564B4(a1, a2, (uint64_t)type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)sub_240BF0988, (uint64_t)type metadata accessor for MLProgram.NamedValueType, a6, a7, a8, vars0, vars8);
}

void sub_240C564B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t (*v12)(_QWORD);
  void (*v13)(uint64_t);
  void (*v14)(uint64_t);
  uint64_t (*v15)(_QWORD);
  uint64_t (*v16)(_QWORD);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD v30[2];

  OUTLINED_FUNCTION_97_1();
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v19 = v15(0);
  v20 = *(_QWORD *)(v19 - 8);
  MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)v30 - v21;
  v23 = *(_QWORD *)(v18 + 16);
  if (v23)
  {
    v30[0] = v14;
    v30[1] = v10;
    v24 = OUTLINED_FUNCTION_85_1();
    v14(v24);
    v25 = *(_QWORD *)(v12(0) - 8);
    v26 = v18 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v27 = *(_QWORD *)(v25 + 72);
    do
    {
      sub_240C355AC(v26, (uint64_t)v22, v16);
      v29 = *(_QWORD *)(a10 + 16);
      v28 = *(_QWORD *)(a10 + 24);
      if (v29 >= v28 >> 1)
        ((void (*)(BOOL, unint64_t, uint64_t))v30[0])(v28 > 1, v29 + 1, 1);
      *(_QWORD *)(a10 + 16) = v29 + 1;
      sub_240C35540((uint64_t)v22, a10+ ((*(unsigned __int8 *)(v20 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v20 + 80))+ *(_QWORD *)(v20 + 72) * v29, v16);
      v26 += v27;
      --v23;
    }
    while (v23);
  }
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_240C565E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  unint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[8];
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;

  v3 = type metadata accessor for MLProgram.Value();
  MEMORY[0x24BDAC7A8](v3);
  v36 = (uint64_t)&v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for MLProgram.Argument.Binding(0);
  v37 = *(_QWORD *)(v5 - 8);
  v38 = v5;
  v6 = MEMORY[0x24BDAC7A8](v5);
  v8 = (char *)&v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v41 = (uint64_t)&v36 - v9;
  v10 = *(_QWORD *)(a1 + 16);
  v11 = MEMORY[0x24BEE4AF8];
  if (!v10)
    return v11;
  v42 = v1;
  v46 = MEMORY[0x24BEE4AF8];
  sub_240BF0A90(0, v10, 0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C078);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = a1 + ((*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80));
  v39 = *(_QWORD *)(v13 + 72);
  v40 = v12;
  while (1)
  {
    v44 = 34;
    v45 = 0xE100000000000000;
    sub_240F1CCE4();
    sub_240F1CCE4();
    v16 = v44;
    v15 = v45;
    v17 = *(_QWORD *)(MLProgram.Argument.bindings.getter() + 16);
    swift_bridgeObjectRelease();
    if (v17 == 1)
      break;
    v21 = swift_allocObject();
    v22 = MLProgram.Argument.bindings.getter();
    v23 = v42;
    sub_240C56A44(v22, (uint64_t)v43, v24, v25, v26, v27, v28, v29, v36, v37);
    v31 = v30;
    v42 = v23;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v21 + 16) = v31;
    v20 = v21 | 0x8000000000000000;
LABEL_10:
    v11 = v46;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_240BF0A90(0, *(_QWORD *)(v11 + 16) + 1, 1);
      v11 = v46;
    }
    v34 = *(_QWORD *)(v11 + 16);
    v33 = *(_QWORD *)(v11 + 24);
    if (v34 >= v33 >> 1)
    {
      sub_240BF0A90((_QWORD *)(v33 > 1), v34 + 1, 1);
      v11 = v46;
    }
    v14 += v39;
    *(_QWORD *)(v11 + 16) = v34 + 1;
    v35 = (_QWORD *)(v11 + 24 * v34);
    v35[4] = v16;
    v35[5] = v15;
    v35[6] = v20;
    if (!--v10)
      return v11;
  }
  result = MLProgram.Argument.bindings.getter();
  if (*(_QWORD *)(result + 16))
  {
    v19 = v41;
    sub_240C355AC(result + ((*(unsigned __int8 *)(v37 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v37 + 80)), v41, type metadata accessor for MLProgram.Argument.Binding);
    swift_bridgeObjectRelease();
    sub_240C355AC(v19, (uint64_t)v8, type metadata accessor for MLProgram.Argument.Binding);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_240C35540((uint64_t)v8, v36, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      v20 = sub_240DD12C8();
      sub_240BF03EC();
    }
    else
    {
      v20 = swift_allocObject();
      v44 = 0x2228666552;
      v45 = 0xE500000000000000;
      sub_240F1CCE4();
      swift_bridgeObjectRelease();
      sub_240F1CCE4();
      v32 = v45;
      *(_QWORD *)(v20 + 16) = v44;
      *(_QWORD *)(v20 + 24) = v32;
    }
    sub_240BF03EC();
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_240C56954(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_240BF0A64();
    v2 = v10;
    v4 = *(_QWORD *)(type metadata accessor for MLProgram.Block() - 8);
    v5 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v6 = *(_QWORD *)(v4 + 72);
    do
    {
      v7 = sub_240CB3E84();
      v8 = *(_QWORD *)(v10 + 16);
      if (v8 >= *(_QWORD *)(v10 + 24) >> 1)
        sub_240BF0A64();
      *(_QWORD *)(v10 + 16) = v8 + 1;
      *(_QWORD *)(v10 + 8 * v8 + 32) = v7;
      v5 += v6;
      --v1;
    }
    while (v1);
  }
  return v2;
}

void sub_240C56A44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;

  OUTLINED_FUNCTION_97_1();
  OUTLINED_FUNCTION_391();
  type metadata accessor for MLProgram.Value();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = type metadata accessor for MLProgram.Argument.Binding(0);
  v16 = *(_QWORD *)(v26 - 8);
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_11_5();
  v17 = *(_QWORD *)(v10 + 16);
  if (v17)
  {
    v25 = v11;
    OUTLINED_FUNCTION_85_1();
    sub_240BF0A64();
    v18 = v10 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    v19 = *(_QWORD *)(v16 + 72);
    do
    {
      sub_240C355AC(v18, v12, type metadata accessor for MLProgram.Argument.Binding);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        sub_240C35540(v12, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v20 = sub_240DD12C8();
        sub_240BF03EC();
      }
      else
      {
        v20 = swift_allocObject();
        v27 = 0x2228666552;
        v28 = 0xE500000000000000;
        sub_240F1CCE4();
        swift_bridgeObjectRelease();
        sub_240F1CCE4();
        v21 = v28;
        *(_QWORD *)(v20 + 16) = v27;
        *(_QWORD *)(v20 + 24) = v21;
      }
      v22 = a10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_240BF0A64();
        v22 = a10;
      }
      v24 = *(_QWORD *)(v22 + 16);
      v23 = *(_QWORD *)(v22 + 24);
      if (v24 >= v23 >> 1)
      {
        OUTLINED_FUNCTION_139_0(v23);
        sub_240BF0A64();
        v22 = a10;
      }
      *(_QWORD *)(v22 + 16) = v24 + 1;
      *(_QWORD *)(v22 + 8 * v24 + 32) = v20;
      v18 += v19;
      --v17;
    }
    while (v17);
  }
  OUTLINED_FUNCTION_7_5();
}

void MLProgram.Operation.name.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_44();
}

void sub_240C56C50(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  MLProgram.Operation.name.setter(v1, v2);
}

void MLProgram.Operation.name.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

void MLProgram.Operation.name.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C56CF0(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = (_QWORD *)a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *v3 = v4;
    v3[1] = v2;
    OUTLINED_FUNCTION_156();
  }
}

void MLProgram.Operation.inputs.getter()
{
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_122_1();
}

void sub_240C56D78()
{
  swift_bridgeObjectRetain();
  MLProgram.Operation.inputs.setter();
}

void MLProgram.Operation.inputs.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C5A368();
  v2 = v1;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_80_1();
  *(_QWORD *)(v0 + 16) = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Operation.inputs.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_42_5();
  a1[2] = v2;
  *a1 = v4;
  OUTLINED_FUNCTION_12_1();
}

void sub_240C56E48(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    sub_240C5A368();
    v4 = v3;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v4;
    OUTLINED_FUNCTION_31_4();
  }
  else
  {
    sub_240C5A368();
    v6 = v5;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 16) = v6;
    OUTLINED_FUNCTION_12_1();
  }
}

void MLProgram.Operation.outputs.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  OUTLINED_FUNCTION_22();
  v3 = OUTLINED_FUNCTION_140_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 24) + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_83_1();
    sub_240BF095C();
    type metadata accessor for Proto_MILSpec_NamedValueType(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_57_3(v1);
      OUTLINED_FUNCTION_21_2();
      if (v6)
      {
        OUTLINED_FUNCTION_10_4(v5);
        sub_240BF095C();
      }
      OUTLINED_FUNCTION_14_11();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C56FB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Operation.outputs.setter(v0, v1, v2, v3, v4, v5, v6, v7);
}

void MLProgram.Operation.outputs.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[2];

  OUTLINED_FUNCTION_79_1(a1, (uint64_t)v11, (uint64_t)type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)sub_240BF0988, (uint64_t)type metadata accessor for MLProgram.NamedValueType, a6, a7, a8, v11[0], v11[1]);
  v10 = v9;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_147_0();
  *(_QWORD *)(v8 + 24) = v10;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Operation.outputs.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  MLProgram.Operation.outputs.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C57058(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = a1[3];
  if ((a2 & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_125_1(v9, v10, (uint64_t)type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)sub_240BF0988, (uint64_t)type metadata accessor for MLProgram.NamedValueType, v11, v12, v13, v18, v19);
    v15 = v14;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 24) = v15;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    OUTLINED_FUNCTION_79_1(*a1, (uint64_t)(a1 + 2), (uint64_t)type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)sub_240BF0988, (uint64_t)type metadata accessor for MLProgram.NamedValueType, a6, a7, a8, v18, v19);
    v17 = v16;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 24) = v17;
    OUTLINED_FUNCTION_6_2();
  }
}

void MLProgram.Operation.blocks.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  OUTLINED_FUNCTION_22();
  v3 = OUTLINED_FUNCTION_66_1();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(*(_QWORD *)(v0 + 32) + 16);
  if (v4)
  {
    OUTLINED_FUNCTION_55_0();
    OUTLINED_FUNCTION_83_1();
    sub_240BF09B4();
    type metadata accessor for Proto_MILSpec_Block(0);
    OUTLINED_FUNCTION_4_3();
    do
    {
      OUTLINED_FUNCTION_57_3(v1);
      OUTLINED_FUNCTION_21_2();
      if (v6)
      {
        OUTLINED_FUNCTION_10_4(v5);
        sub_240BF09B4();
      }
      OUTLINED_FUNCTION_14_11();
      v1 += v2;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C571D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v0 = swift_bridgeObjectRetain();
  MLProgram.Operation.blocks.setter(v0, v1, v2, v3, v4, v5, v6, v7);
}

void MLProgram.Operation.blocks.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11[2];

  OUTLINED_FUNCTION_79_1(a1, (uint64_t)v11, (uint64_t)type metadata accessor for Proto_MILSpec_Block, (uint64_t)sub_240BF09E0, (uint64_t)type metadata accessor for MLProgram.Block, a6, a7, a8, v11[0], v11[1]);
  v10 = v9;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_84_1();
  *(_QWORD *)(v8 + 32) = v10;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Operation.blocks.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  MLProgram.Operation.blocks.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

void sub_240C57278(uint64_t *a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v8 = a1[3];
  if ((a2 & 1) != 0)
  {
    v9 = OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_125_1(v9, v10, (uint64_t)type metadata accessor for Proto_MILSpec_Block, (uint64_t)sub_240BF09E0, (uint64_t)type metadata accessor for MLProgram.Block, v11, v12, v13, v18, v19);
    v15 = v14;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = v15;
    OUTLINED_FUNCTION_1_2();
  }
  else
  {
    OUTLINED_FUNCTION_79_1(*a1, (uint64_t)(a1 + 2), (uint64_t)type metadata accessor for Proto_MILSpec_Block, (uint64_t)sub_240BF09E0, (uint64_t)type metadata accessor for MLProgram.Block, a6, a7, a8, v18, v19);
    v17 = v16;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v8 + 32) = v17;
    OUTLINED_FUNCTION_6_2();
  }
}

void MLProgram.Operation.attributes.getter()
{
  OUTLINED_FUNCTION_42_5();
  OUTLINED_FUNCTION_122_1();
}

void sub_240C5735C()
{
  swift_bridgeObjectRetain();
  MLProgram.Operation.attributes.setter();
}

void MLProgram.Operation.attributes.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C5A368();
  v2 = v1;
  OUTLINED_FUNCTION_173();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 40) = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Operation.attributes.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_42_5();
  a1[2] = v2;
  *a1 = v4;
  OUTLINED_FUNCTION_12_1();
}

void sub_240C57430(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    sub_240C5A368();
    v4 = v3;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 40) = v4;
    OUTLINED_FUNCTION_31_4();
  }
  else
  {
    sub_240C5A368();
    v6 = v5;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 40) = v6;
    OUTLINED_FUNCTION_12_1();
  }
}

void sub_240C574CC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int64_t v19;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __n128 *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  size_t v32;
  uint64_t v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  __n128 *v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  unint64_t *v48;
  _QWORD *v49;
  __n128 *v50;
  __n128 *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54[4];

  OUTLINED_FUNCTION_22();
  type metadata accessor for MLProgram.ValueType.DictionaryParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_251(v4, v52);
  type metadata accessor for MLProgram.ValueType.TupleParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v6 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.ListParameters(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v8 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.TensorParameters(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_18();
  v11 = type metadata accessor for Proto_MILSpec_ValueType(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_81();
  v13 = OUTLINED_FUNCTION_140_0();
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  v53 = v15;
  MLProgram.Operation.outputs.getter();
  v17 = v16;
  if (*(_QWORD *)(v16 + 16))
  {
    v54[2] = MEMORY[0x24BEE4AF8];
    v18 = (_QWORD *)OUTLINED_FUNCTION_83_1();
    sub_240BF0A90(v18, v19, v20);
    sub_240C355AC(v17 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80)), v53, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    v54[0] = 34;
    v54[1] = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_240F1CCE4();
    OUTLINED_FUNCTION_73_1();
    sub_240F1CCE4();
    v21 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
    sub_240C02F94(v53 + *(int *)(v21 + 24), v0, &qword_25708C098);
    v22 = OUTLINED_FUNCTION_87_1();
    if (__swift_getEnumTagSinglePayload(v22, v23, v11) == 1)
    {
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v24 = *(int *)(v11 + 20);
      if (qword_25708B0D0 != -1)
        swift_once();
      *(_QWORD *)(v2 + v24) = qword_25708EA38;
      swift_retain();
      sub_240BE0B68(v0, &qword_25708C098);
    }
    else
    {
      sub_240C35540(v0, v2, type metadata accessor for Proto_MILSpec_ValueType);
    }
    sub_240D34658();
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v25 = MEMORY[0x24BEE4AF8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C088);
  v26 = (__n128 *)OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_93_1(v26, (__n128)xmmword_240F1DA30);
  v27 = OUTLINED_FUNCTION_113();
  v28 = v1[1];
  *(_QWORD *)(v27 + 16) = *v1;
  *(_QWORD *)(v27 + 24) = v28;
  v26[3].n128_u64[0] = v27;
  swift_bridgeObjectRetain();
  sub_240C5A5D0();
  v30 = *(_QWORD *)(v29 + 16);
  swift_release();
  if (v30)
  {
    sub_240C5A5D0();
    v31 = swift_bridgeObjectRetain();
    v32 = sub_240DDAE5C(v31);
    OUTLINED_FUNCTION_99_0();
    v54[0] = v32;
    sub_240C5AE38(v54);
    OUTLINED_FUNCTION_99_0();
    v33 = sub_240C565E8(v54[0]);
    OUTLINED_FUNCTION_99_0();
    v34 = OUTLINED_FUNCTION_113();
    *(_QWORD *)(v34 + 16) = v33;
    v35 = v34 | 0xC000000000000000;
    v36 = 2;
    OUTLINED_FUNCTION_56_4();
    v26 = v37;
    v37[1].n128_u64[0] = 2;
    v37[3].n128_u64[1] = 0x737475706E69;
    v37[4].n128_u64[0] = 0xE600000000000000;
    v37[4].n128_u64[1] = v35;
  }
  else
  {
    v36 = 1;
  }
  v38 = OUTLINED_FUNCTION_113();
  *(_QWORD *)(v38 + 16) = v25;
  v39 = v26[1].n128_u64[1];
  if (v36 >= v39 >> 1)
  {
    OUTLINED_FUNCTION_139_0(v39);
    OUTLINED_FUNCTION_56_4();
    v26 = v50;
  }
  v26[1].n128_u64[0] = v36 + 1;
  v40 = &v26->n128_u64[3 * v36];
  v40[4] = 0x7374757074756FLL;
  v40[5] = 0xE700000000000000;
  v40[6] = v38 | 0xC000000000000000;
  MLProgram.Operation.blocks.getter();
  v42 = *(_QWORD *)(v41 + 16);
  swift_bridgeObjectRelease();
  if (v42)
  {
    v43 = OUTLINED_FUNCTION_113();
    MLProgram.Operation.blocks.getter();
    v45 = sub_240C56954(v44);
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v43 + 16) = v45;
    v47 = v26[1].n128_u64[0];
    v46 = v26[1].n128_u64[1];
    if (v47 >= v46 >> 1)
    {
      OUTLINED_FUNCTION_139_0(v46);
      OUTLINED_FUNCTION_56_4();
      v26 = v51;
    }
    v26[1].n128_u64[0] = v47 + 1;
    v48 = &v26->n128_u64[3 * v47];
    v48[4] = 0x736B636F6C42;
    v48[5] = 0xE600000000000000;
    v48[6] = v43 | 0x8000000000000000;
  }
  v49 = (_QWORD *)OUTLINED_FUNCTION_113();
  v49[2] = 0x6F6974617265704FLL;
  v49[3] = 0xE90000000000006ELL;
  v49[4] = v26;
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.Operation.init(name:inputs:outputs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t result;
  uint64_t v17[2];

  type metadata accessor for Proto_MILSpec_Argument(0);
  v8 = MEMORY[0x24BEE4AF8];
  a4[2] = OUTLINED_FUNCTION_72_2();
  a4[3] = v8;
  a4[4] = v8;
  type metadata accessor for Proto_MILSpec_Value(0);
  a4[5] = OUTLINED_FUNCTION_72_2();
  type metadata accessor for Proto_MILSpec_Operation(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a4 = a1;
  a4[1] = a2;
  sub_240C5A368();
  v10 = v9;
  OUTLINED_FUNCTION_100_1();
  swift_bridgeObjectRelease();
  a4[2] = v10;
  sub_240C564B4(a3, (uint64_t)v17, (uint64_t)type metadata accessor for Proto_MILSpec_NamedValueType, (uint64_t)sub_240BF0988, (uint64_t)type metadata accessor for MLProgram.NamedValueType, v11, v12, v13, v17[0], v17[1]);
  v15 = v14;
  OUTLINED_FUNCTION_42_2();
  result = swift_bridgeObjectRelease();
  a4[3] = v15;
  return result;
}

void sub_240C57D08()
{
  sub_240C57D30();
}

void sub_240C57D1C()
{
  sub_240C57D30();
}

void sub_240C57D30()
{
  unint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  void (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t *v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  _QWORD *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  unint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  int64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int64_t v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  int64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  _QWORD *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  char v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  uint64_t v195;
  uint64_t v196;
  void (*v197)(uint64_t, uint64_t);
  uint64_t v198;
  uint64_t v199;
  uint64_t v200;
  void (*v201)(uint64_t, uint64_t);
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  unint64_t v207;
  uint64_t v208;
  uint64_t v209;
  uint64_t v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  uint64_t v214;
  uint64_t v215;
  unint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  int64_t v220;
  uint64_t v221;

  OUTLINED_FUNCTION_22();
  v197 = v1;
  v201 = v2;
  v205 = v3;
  v5 = v4;
  v196 = *(_QWORD *)(OUTLINED_FUNCTION_66_1() - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v6);
  v195 = (uint64_t)&v186 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = OUTLINED_FUNCTION_101();
  v194 = type metadata accessor for MLProgram.Value.Representation(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_2_0();
  v190 = v10;
  v11 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.Value.BlobFileValue(v11);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_2_0();
  v188 = v13;
  v14 = OUTLINED_FUNCTION_101();
  v192 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(v14);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_81_1((uint64_t)&v186 - v17);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_81_1((uint64_t)&v186 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_81_1(v21);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_2_0();
  v193 = OUTLINED_FUNCTION_33_5(v23);
  v214 = *(_QWORD *)(v193 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v24);
  v191 = OUTLINED_FUNCTION_10_10(v25, v186);
  v212 = *(_QWORD *)(v191 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_251(v27, v186);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  OUTLINED_FUNCTION_2_0();
  v203 = v29;
  v202 = OUTLINED_FUNCTION_58_3();
  v220 = *(_QWORD *)(v202 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v30);
  v218 = *(_QWORD *)(OUTLINED_FUNCTION_8_10(v31, v186) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_17_10(v33, v186);
  v208 = v5;
  sub_240C5A5D0();
  v187 = 0;
  OUTLINED_FUNCTION_71_2();
  v198 = v34;
  v204 = v35;
  OUTLINED_FUNCTION_3_13();
  v199 = v37;
  if (!v38)
    goto LABEL_3;
  while (2)
  {
    OUTLINED_FUNCTION_98_1();
    v209 = v39;
    v210 = v40;
LABEL_25:
    OUTLINED_FUNCTION_48_3();
    v206 = v56;
    v207 = v55;
    v57 = *(_QWORD *)(v208 + 16);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB28);
    v58 = sub_240F1CE64();
    v59 = 0;
    v215 = v57 + 64;
    OUTLINED_FUNCTION_102_1();
    v62 = v61 & v60;
    v216 = (unint64_t)(v63 + 63) >> 6;
    v65 = v64 + 64;
    if ((v61 & v60) != 0)
    {
LABEL_26:
      OUTLINED_FUNCTION_134_0();
      v67 = v66 | (v59 << 6);
      goto LABEL_49;
    }
    while (1)
    {
      if (__OFADD__(v59, 1))
      {
        __break(1u);
LABEL_132:
        __break(1u);
        goto LABEL_133;
      }
      OUTLINED_FUNCTION_130_1();
      if (v42 == v43)
        goto LABEL_52;
      v59 = v68;
      if (!*(_QWORD *)(v215 + 8 * v68))
      {
        v59 = v68 + 1;
        OUTLINED_FUNCTION_129_1();
        if (v42 == v43)
          goto LABEL_52;
        OUTLINED_FUNCTION_127_1();
        if (!v70)
        {
          v59 = v69 + 2;
          OUTLINED_FUNCTION_129_1();
          if (v42 == v43)
            goto LABEL_52;
          OUTLINED_FUNCTION_127_1();
          if (!v72)
          {
            v59 = v71 + 3;
            OUTLINED_FUNCTION_129_1();
            if (v42 == v43)
              goto LABEL_52;
            OUTLINED_FUNCTION_127_1();
            if (!v73)
              break;
          }
        }
      }
LABEL_48:
      OUTLINED_FUNCTION_51_3();
      v62 = v78 & v77;
      v67 = v79 + (v59 << 6);
LABEL_49:
      v80 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v67);
      v82 = *v80;
      v81 = v80[1];
      v83 = v217;
      v0 = (unint64_t)type metadata accessor for Proto_MILSpec_Argument;
      OUTLINED_FUNCTION_120_1(*(_QWORD *)(v57 + 56) + *(_QWORD *)(v218 + 72) * v67, v217);
      v84 = v83;
      v85 = v219;
      OUTLINED_FUNCTION_6_6(v84, v219);
      OUTLINED_FUNCTION_119_1();
      *(_QWORD *)(v65 + v86) |= v87;
      v88 = (_QWORD *)(*(_QWORD *)(v58 + 48) + 16 * v67);
      *v88 = v82;
      v88[1] = v81;
      OUTLINED_FUNCTION_115_1();
      sub_240C35540(v85, v89, type metadata accessor for MLProgram.Argument);
      OUTLINED_FUNCTION_50_5();
      if (v43)
      {
        __break(1u);
        goto LABEL_62;
      }
      *(_QWORD *)(v58 + 16) = v90;
      OUTLINED_FUNCTION_315();
      if (v62)
        goto LABEL_26;
    }
    OUTLINED_FUNCTION_130_1();
    if (v42 != v43)
    {
      if (!*(_QWORD *)(v215 + 8 * v74))
      {
        while (1)
        {
          v59 = v74 + 1;
          if (__OFADD__(v74, 1))
            break;
          OUTLINED_FUNCTION_129_1();
          if (v42 == v43)
            goto LABEL_52;
          OUTLINED_FUNCTION_127_1();
          v74 = v75 + 1;
          if (v76)
            goto LABEL_48;
        }
LABEL_135:
        __break(1u);
LABEL_136:
        __break(1u);
LABEL_137:
        __break(1u);
LABEL_138:
        __break(1u);
LABEL_139:
        __break(1u);
LABEL_140:
        __break(1u);
        goto LABEL_141;
      }
      v59 = v74;
      goto LABEL_48;
    }
LABEL_52:
    if (*(_QWORD *)(v58 + 16))
    {
      v0 = v207;
      swift_bridgeObjectRetain();
      sub_240C66A40(v206, v0);
      v91 = v203;
      v92 = v202;
      if ((v93 & 1) != 0)
      {
        OUTLINED_FUNCTION_113_1();
        sub_240C355AC(v95 + v96 * v94, v91, type metadata accessor for MLProgram.Argument);
        v97 = v91;
        v98 = 0;
      }
      else
      {
        v97 = OUTLINED_FUNCTION_87_1();
      }
      __swift_storeEnumTagSinglePayload(v97, v98, 1, v92);
      OUTLINED_FUNCTION_100_1();
    }
    else
    {
      v91 = v203;
      OUTLINED_FUNCTION_54();
      v92 = v202;
      __swift_storeEnumTagSinglePayload(v99, v100, v101, v202);
    }
    swift_release();
    v102 = OUTLINED_FUNCTION_87_1();
    if (__swift_getEnumTagSinglePayload(v102, v103, v92) == 1)
      goto LABEL_142;
    v201(v91, v205);
    sub_240BF03EC();
    v36 = v210;
    if (v209)
      continue;
    break;
  }
LABEL_3:
  if (__OFADD__(v36, 1))
    goto LABEL_137;
  if (v36 + 1 >= v199)
    goto LABEL_62;
  OUTLINED_FUNCTION_96_1();
  if (v41)
    goto LABEL_24;
  OUTLINED_FUNCTION_22_5();
  if (v42 == v43)
    goto LABEL_62;
  OUTLINED_FUNCTION_27_6();
  if (v44)
    goto LABEL_24;
  OUTLINED_FUNCTION_22_5();
  if (v42 == v43)
    goto LABEL_62;
  OUTLINED_FUNCTION_27_6();
  if (v45)
    goto LABEL_24;
  OUTLINED_FUNCTION_22_5();
  if (v42 == v43)
    goto LABEL_62;
  OUTLINED_FUNCTION_27_6();
  if (v46)
    goto LABEL_24;
  OUTLINED_FUNCTION_22_5();
  if (v42 != v43)
  {
    OUTLINED_FUNCTION_27_6();
    if (!v48)
    {
      if (v47 + 5 >= v199)
        goto LABEL_62;
      OUTLINED_FUNCTION_96_1();
      if (!v50)
      {
        while (!__OFADD__(v49, 1))
        {
          OUTLINED_FUNCTION_22_5();
          if (v42 == v43)
            goto LABEL_62;
          OUTLINED_FUNCTION_27_6();
          v49 = v51 + 1;
          if (v52)
            goto LABEL_24;
        }
        goto LABEL_140;
      }
    }
LABEL_24:
    OUTLINED_FUNCTION_146_0();
    v209 = v53;
    v210 = v54;
    goto LABEL_25;
  }
LABEL_62:
  swift_release();
  v104 = v208;
  MLProgram.Operation.blocks.getter();
  v106 = *(_QWORD *)(v105 + 16);
  swift_bridgeObjectRelease();
  if (v106)
  {
    v0 = 0;
    do
    {
      MLProgram.Operation.blocks.getter();
      if (v0 >= *(_QWORD *)(v107 + 16))
        goto LABEL_138;
      v104 = v107;
      v108 = v0 + 1;
      v109 = v107
           + ((*(unsigned __int8 *)(v196 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v196 + 80))
           + *(_QWORD *)(v196 + 72) * v0;
      v110 = v195;
      sub_240C355AC(v109, v195, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
      OUTLINED_FUNCTION_42_2();
      v197(v110, v205);
      sub_240BF03EC();
      v0 = v108;
    }
    while (v106 != v108);
  }
  v111 = v187;
  sub_240C5A5D0();
  v112 = 0;
  v114 = OUTLINED_FUNCTION_11_10(v113);
  v209 = v115;
  v210 = v114;
  if (!v104)
    goto LABEL_68;
  while (2)
  {
    OUTLINED_FUNCTION_148_0();
    v217 = v104;
    v218 = v112;
LABEL_90:
    OUTLINED_FUNCTION_48_3();
    v215 = v129;
    v216 = v128;
    v130 = *(_QWORD *)(v208 + 40);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v131 = sub_240F1CE64();
    v132 = 0;
    v219 = v130 + 64;
    OUTLINED_FUNCTION_102_1();
    v135 = v134 & v133;
    v220 = (unint64_t)(v136 + 63) >> 6;
    if ((v134 & v133) != 0)
    {
LABEL_91:
      OUTLINED_FUNCTION_49_5();
      v111 = v137 | (v132 << 6);
      goto LABEL_112;
    }
    while (2)
    {
      v138 = v132 + 1;
      if (__OFADD__(v132, 1))
      {
        __break(1u);
        goto LABEL_135;
      }
      if (v138 >= v220)
        goto LABEL_115;
      ++v132;
      if (*(_QWORD *)(v219 + 8 * v138))
        goto LABEL_111;
      v132 = v138 + 1;
      OUTLINED_FUNCTION_114_1();
      if (v42 == v43)
        goto LABEL_115;
      OUTLINED_FUNCTION_141_0();
      if (v140)
        goto LABEL_111;
      v132 = v139 + 2;
      OUTLINED_FUNCTION_114_1();
      if (v42 == v43)
        goto LABEL_115;
      OUTLINED_FUNCTION_141_0();
      if (v142)
        goto LABEL_111;
      v132 = v141 + 3;
      OUTLINED_FUNCTION_114_1();
      if (v42 == v43)
        goto LABEL_115;
      OUTLINED_FUNCTION_141_0();
      if (v144)
      {
LABEL_111:
        OUTLINED_FUNCTION_51_3();
        v135 = v149 & v148;
        v111 = v150 + (v132 << 6);
LABEL_112:
        v151 = (uint64_t *)(*(_QWORD *)(v130 + 48) + 16 * v111);
        v152 = *v151;
        v153 = v151[1];
        v154 = v211;
        v0 = (unint64_t)type metadata accessor for Proto_MILSpec_Value;
        OUTLINED_FUNCTION_120_1(*(_QWORD *)(v130 + 56) + *(_QWORD *)(v212 + 72) * v111, v211);
        v155 = v154;
        v156 = v213;
        OUTLINED_FUNCTION_6_6(v155, v213);
        OUTLINED_FUNCTION_118_1();
        OUTLINED_FUNCTION_45_4(v157);
        v159 = (_QWORD *)(v158 + 16 * v111);
        *v159 = v152;
        v159[1] = v153;
        OUTLINED_FUNCTION_38_5();
        sub_240C35540(v156, v160 + v161 * v111, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        OUTLINED_FUNCTION_50_5();
        if (v43)
          goto LABEL_132;
        *(_QWORD *)(v131 + 16) = v162;
        OUTLINED_FUNCTION_213();
        if (v135)
          goto LABEL_91;
        continue;
      }
      break;
    }
    v145 = v143 + 4;
    if (v145 < v220)
    {
      if (!*(_QWORD *)(v219 + 8 * v145))
      {
        while (1)
        {
          v132 = v145 + 1;
          if (__OFADD__(v145, 1))
            goto LABEL_136;
          OUTLINED_FUNCTION_114_1();
          if (v42 == v43)
            goto LABEL_115;
          OUTLINED_FUNCTION_141_0();
          v145 = v146 + 1;
          if (v147)
            goto LABEL_111;
        }
      }
      v132 = v145;
      goto LABEL_111;
    }
LABEL_115:
    if (*(_QWORD *)(v131 + 16))
    {
      v163 = v216;
      swift_bridgeObjectRetain();
      sub_240C66A40(v215, v163);
      OUTLINED_FUNCTION_124_1();
      v164 = v200;
      v165 = v193;
      if ((v166 & 1) != 0)
      {
        OUTLINED_FUNCTION_38_5();
        sub_240C355AC(v168 + v169 * v167, v164, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v170 = v164;
        v171 = 0;
      }
      else
      {
        v170 = OUTLINED_FUNCTION_87_1();
      }
      __swift_storeEnumTagSinglePayload(v170, v171, 1, v165);
      OUTLINED_FUNCTION_12_2();
    }
    else
    {
      OUTLINED_FUNCTION_54();
      v165 = v193;
      __swift_storeEnumTagSinglePayload(v172, v173, v174, v193);
      OUTLINED_FUNCTION_124_1();
    }
    swift_release();
    v175 = OUTLINED_FUNCTION_87_1();
    if (__swift_getEnumTagSinglePayload(v175, v176, v165) == 1)
      goto LABEL_143;
    OUTLINED_FUNCTION_126_1();
    sub_240C02F94(v177, v178, &qword_25708CB50);
    v179 = 1;
    if (__swift_getEnumTagSinglePayload(v131, 1, v192) != 1)
    {
      OUTLINED_FUNCTION_126_1();
      sub_240C35540(v180, v181, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
      v182 = v189;
      OUTLINED_FUNCTION_57_3(v131);
      sub_240C77BEC(v182);
      sub_240BF03EC();
      v179 = 0;
    }
    __swift_storeEnumTagSinglePayload(v0, v179, 1, v111);
    if (__swift_getEnumTagSinglePayload(v0, 1, v111) == 1)
    {
      sub_240BE0B68(v0, &qword_25708CB10);
      v104 = v217;
      v112 = v218;
    }
    else
    {
      v183 = v190;
      sub_240C355AC(v0, v190, type metadata accessor for MLProgram.Value.Representation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v111 = v188;
        sub_240C35540(v183, v188, type metadata accessor for MLProgram.Value.BlobFileValue);
        v184 = *(_QWORD *)v111;
        v185 = *(_QWORD *)(v111 + 8);
        OUTLINED_FUNCTION_329();
        sub_240C6FB8C(&v221, v184, v185);
        swift_bridgeObjectRelease();
      }
      sub_240BF03EC();
      v104 = v217;
      sub_240BF03EC();
      v112 = v218;
    }
    sub_240BF03EC();
    if (v104)
      continue;
    break;
  }
LABEL_68:
  if (__OFADD__(v112, 1))
    goto LABEL_139;
  if (v112 + 1 >= v209)
  {
LABEL_133:
    swift_release();
    OUTLINED_FUNCTION_1();
    return;
  }
  OUTLINED_FUNCTION_96_1();
  if (v116)
    goto LABEL_89;
  OUTLINED_FUNCTION_95_1();
  if (v42 == v43)
    goto LABEL_133;
  OUTLINED_FUNCTION_94_1();
  if (v117)
    goto LABEL_89;
  OUTLINED_FUNCTION_95_1();
  if (v42 == v43)
    goto LABEL_133;
  OUTLINED_FUNCTION_94_1();
  if (v118)
    goto LABEL_89;
  OUTLINED_FUNCTION_95_1();
  if (v42 == v43)
    goto LABEL_133;
  OUTLINED_FUNCTION_94_1();
  if (v119)
    goto LABEL_89;
  OUTLINED_FUNCTION_95_1();
  if (v42 == v43)
    goto LABEL_133;
  OUTLINED_FUNCTION_94_1();
  if (v121)
    goto LABEL_89;
  if (v120 + 5 >= v209)
    goto LABEL_133;
  OUTLINED_FUNCTION_96_1();
  if (v123)
  {
LABEL_89:
    OUTLINED_FUNCTION_146_0();
    v217 = v126;
    v218 = v127;
    goto LABEL_90;
  }
  while (!__OFADD__(v122, 1))
  {
    OUTLINED_FUNCTION_95_1();
    if (v42 == v43)
      goto LABEL_133;
    OUTLINED_FUNCTION_94_1();
    v122 = v124 + 1;
    if (v125)
      goto LABEL_89;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
}

void sub_240C588DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C58914(a1, a2, a3, (uint64_t)sub_240C8D31C, (uint64_t)sub_240C77F1C, (uint64_t)sub_240CB5118, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240C588F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C58914(a1, a2, a3, (uint64_t)sub_240C8D31C, (uint64_t)sub_240C77F1C, (uint64_t)sub_240CB512C, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240C58914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t (*v43)(uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char v56;
  BOOL v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  char v82;
  unint64_t v83;
  char v84;
  unint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  int64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  unint64_t v126;
  unint64_t v127;
  unint64_t v128;
  int64_t v129;
  uint64_t *v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  unint64_t v143;
  char v144;
  uint64_t v145;
  unint64_t v146;
  char v147;
  unint64_t v148;
  char v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167[2];
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;
  int64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;

  OUTLINED_FUNCTION_22();
  a19 = v20;
  a20 = v21;
  v171 = v22;
  v167[0] = v23;
  v174 = v24;
  v26 = v25;
  v179 = v27;
  v29 = v28;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v30);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_81_1((uint64_t)v167 - v32);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v33);
  v168 = OUTLINED_FUNCTION_33_5((uint64_t)v167 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0));
  v189 = *(_QWORD *)(v168 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v35);
  v187 = *(_QWORD *)(OUTLINED_FUNCTION_10_10(v36, v167[0]) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v37);
  OUTLINED_FUNCTION_251(v38, v167[0]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_2_0();
  v176 = v40;
  v175 = OUTLINED_FUNCTION_58_3();
  v195 = *(_QWORD *)(v175 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v41);
  v43 = type metadata accessor for Proto_MILSpec_Argument;
  v193 = *(_QWORD *)(OUTLINED_FUNCTION_8_10(v42, v167[0]) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v44);
  OUTLINED_FUNCTION_17_10(v45, v167[0]);
  v46 = *(_QWORD *)(v29 + 16);
  v178 = v26;
  v47 = v29;
  swift_bridgeObjectRetain_n();
  v48 = 0;
  sub_240C5A5D0();
  OUTLINED_FUNCTION_71_2();
  v172 = v49;
  v177 = v50;
  OUTLINED_FUNCTION_3_13();
  v173 = v53;
  v180 = v47;
LABEL_2:
  v185 = v48;
  if (v51)
  {
    OUTLINED_FUNCTION_53_4();
  }
  else
  {
    if (__OFADD__(v52, 1))
    {
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
LABEL_145:
      __break(1u);
      goto LABEL_146;
    }
    OUTLINED_FUNCTION_108_1();
    if (v56 == v57)
      goto LABEL_62;
    v58 = *(_QWORD *)(v172 + 8 * v55);
    if (!v58)
    {
      OUTLINED_FUNCTION_19_5();
      if (v56 == v57)
        goto LABEL_62;
      OUTLINED_FUNCTION_24_7();
      if (!v58)
      {
        OUTLINED_FUNCTION_19_5();
        if (v56 == v57)
          goto LABEL_62;
        OUTLINED_FUNCTION_24_7();
        if (!v58)
        {
          OUTLINED_FUNCTION_19_5();
          if (v56 == v57)
            goto LABEL_62;
          OUTLINED_FUNCTION_24_7();
          if (!v58)
          {
            OUTLINED_FUNCTION_19_5();
            if (v56 == v57)
              goto LABEL_62;
            OUTLINED_FUNCTION_24_7();
            if (!v58)
            {
              OUTLINED_FUNCTION_19_5();
              if (v56 == v57)
                goto LABEL_62;
              OUTLINED_FUNCTION_24_7();
              if (!v58)
              {
                while (!__OFADD__(v95, 1))
                {
                  OUTLINED_FUNCTION_108_1();
                  if (v56 == v57)
                    goto LABEL_140;
                  OUTLINED_FUNCTION_106_1();
                  if (v58)
                    goto LABEL_20;
                }
LABEL_146:
                __break(1u);
                goto LABEL_147;
              }
            }
          }
        }
      }
    }
LABEL_20:
    OUTLINED_FUNCTION_54_4(v58);
  }
  OUTLINED_FUNCTION_142_0(v54);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB28);
  v59 = OUTLINED_FUNCTION_112_1();
  v60 = 0;
  v190 = v46 + 64;
  OUTLINED_FUNCTION_21_7();
  v191 = v61;
  if (v43)
  {
LABEL_22:
    OUTLINED_FUNCTION_49_5();
    v63 = v62 | (v60 << 6);
    goto LABEL_40;
  }
  while (1)
  {
    v57 = __OFADD__(v60++, 1);
    if (v57)
    {
      __break(1u);
      goto LABEL_71;
    }
    if (v60 >= v191)
      goto LABEL_47;
    if (!*(_QWORD *)(v190 + 8 * v60))
    {
      OUTLINED_FUNCTION_36_6();
      if (v56 == v57)
        goto LABEL_47;
      OUTLINED_FUNCTION_35_5();
      if (!v65)
      {
        OUTLINED_FUNCTION_36_6();
        if (v56 == v57)
          goto LABEL_47;
        OUTLINED_FUNCTION_35_5();
        if (!v66)
        {
          OUTLINED_FUNCTION_36_6();
          if (v56 == v57)
            goto LABEL_47;
          OUTLINED_FUNCTION_35_5();
          if (!v67)
          {
            OUTLINED_FUNCTION_36_6();
            if (v56 == v57)
              goto LABEL_47;
            OUTLINED_FUNCTION_35_5();
            if (!v68)
            {
              while (1)
              {
                v60 = v64 + 1;
                if (__OFADD__(v64, 1))
                  goto LABEL_138;
                if (v60 >= v191)
                  break;
                ++v64;
                if (*(_QWORD *)(v190 + 8 * v60))
                  goto LABEL_39;
              }
LABEL_47:
              OUTLINED_FUNCTION_64_2();
              OUTLINED_FUNCTION_76_1();
              v197 = v59;
              OUTLINED_FUNCTION_315();
              OUTLINED_FUNCTION_28_5();
              OUTLINED_FUNCTION_144_0();
              v48 = v185;
              if (v57)
                goto LABEL_139;
              v83 = v81;
              v84 = v82;
              __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB30);
              OUTLINED_FUNCTION_137_0();
              if ((sub_240F1CE34() & 1) != 0)
              {
                v85 = OUTLINED_FUNCTION_28_5();
                if ((v84 & 1) != (v86 & 1))
                  goto LABEL_150;
                v83 = v85;
              }
              if ((v84 & 1) == 0)
                goto LABEL_148;
              OUTLINED_FUNCTION_113_1();
              v89 = v176;
              v43 = type metadata accessor for MLProgram.Argument;
              sub_240C35540(v87 + v88 * v83, v176, type metadata accessor for MLProgram.Argument);
              OUTLINED_FUNCTION_110_1();
              OUTLINED_FUNCTION_44_5(v90, v91, v92, (uint64_t)&a16);
              OUTLINED_FUNCTION_329();
              OUTLINED_FUNCTION_109_1((uint64_t)&a15);
              OUTLINED_FUNCTION_132_1();
              OUTLINED_FUNCTION_128_1();
              sub_240BE0B68(v89, &qword_25708CB20);
              OUTLINED_FUNCTION_173();
              OUTLINED_FUNCTION_173();
              OUTLINED_FUNCTION_173();
              sub_240C5A368();
              v46 = v93;
              OUTLINED_FUNCTION_42_2();
              v94 = v180;
              OUTLINED_FUNCTION_80_1();
              *(_QWORD *)(v94 + 16) = v46;
              v51 = v181;
              v52 = v182;
              goto LABEL_2;
            }
          }
        }
      }
      v60 = v64;
    }
LABEL_39:
    OUTLINED_FUNCTION_103_1();
    v63 = v69 + (v60 << 6);
LABEL_40:
    v70 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * v63);
    v71 = *v70;
    v48 = v70[1];
    v72 = v192;
    sub_240C355AC(*(_QWORD *)(v46 + 56) + *(_QWORD *)(v193 + 72) * v63, v192, type metadata accessor for Proto_MILSpec_Argument);
    v73 = v72;
    v74 = v194;
    sub_240C35540(v73, v194, type metadata accessor for Proto_MILSpec_Argument);
    OUTLINED_FUNCTION_118_1();
    OUTLINED_FUNCTION_45_4(v75);
    v77 = (_QWORD *)(v76 + 16 * v63);
    *v77 = v71;
    v77[1] = v48;
    OUTLINED_FUNCTION_113_1();
    sub_240C35540(v74, v78 + v79 * v63, type metadata accessor for MLProgram.Argument);
    OUTLINED_FUNCTION_50_5();
    if (v57)
      break;
    *(_QWORD *)(v59 + 16) = v80;
    OUTLINED_FUNCTION_55_0();
    if (v43)
      goto LABEL_22;
  }
  __break(1u);
LABEL_62:
  OUTLINED_FUNCTION_117_1();
  while (2)
  {
    MLProgram.Operation.blocks.getter();
    v97 = *(_QWORD *)(v96 + 16);
    swift_bridgeObjectRelease();
    if (v97)
    {
      v98 = 0;
      while (1)
      {
        MLProgram.Operation.blocks.getter();
        v100 = v99;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240C95824();
          v100 = v108;
        }
        if (v98 >= *(_QWORD *)(v100 + 16))
          goto LABEL_143;
        v101 = v98 + 1;
        OUTLINED_FUNCTION_66_1();
        OUTLINED_FUNCTION_59_1();
        OUTLINED_FUNCTION_213();
        OUTLINED_FUNCTION_109_1((uint64_t)&a12);
        sub_240C564B4(v100, (uint64_t)&v196, (uint64_t)type metadata accessor for Proto_MILSpec_Block, (uint64_t)sub_240BF09E0, (uint64_t)type metadata accessor for MLProgram.Block, v102, v103, v104, v167[0], v167[1]);
        v106 = v105;
        OUTLINED_FUNCTION_42_2();
        v107 = v180;
        OUTLINED_FUNCTION_84_1();
        *(_QWORD *)(v107 + 32) = v106;
        v98 = v101;
        if (v97 == v101)
          goto LABEL_72;
      }
    }
LABEL_71:
    v107 = v180;
LABEL_72:
    v109 = *(_QWORD *)(v107 + 40);
    sub_240C5A5D0();
    v182 = v110 + 64;
    OUTLINED_FUNCTION_3_13();
    v183 = v113;
    v184 = v112;
    if (!v114)
      goto LABEL_74;
LABEL_73:
    v190 = v111;
    v191 = v48;
    OUTLINED_FUNCTION_98_1();
    v185 = v115;
LABEL_91:
    OUTLINED_FUNCTION_48_3();
    v192 = v118;
    v193 = v119;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v120 = sub_240F1CE64();
    v121 = 0;
    v194 = v109 + 64;
    OUTLINED_FUNCTION_52_4();
    v124 = v123 & v122;
    v195 = (unint64_t)(v125 + 63) >> 6;
    if ((v123 & v122) != 0)
    {
LABEL_92:
      v126 = __clz(__rbit64(v124));
      v124 &= v124 - 1;
      v127 = v126 | (v121 << 6);
      goto LABEL_110;
    }
LABEL_93:
    v57 = __OFADD__(v121++, 1);
    if (v57)
    {
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      __break(1u);
LABEL_140:
      OUTLINED_FUNCTION_117_1();
      v48 = v185;
      continue;
    }
    break;
  }
  if (v121 >= v195)
    goto LABEL_117;
  v128 = *(_QWORD *)(v194 + 8 * v121);
  if (v128)
  {
LABEL_109:
    v124 = (v128 - 1) & v128;
    v127 = __clz(__rbit64(v128)) + (v121 << 6);
LABEL_110:
    v130 = (uint64_t *)(*(_QWORD *)(v109 + 48) + 16 * v127);
    v132 = *v130;
    v131 = v130[1];
    v133 = v186;
    OUTLINED_FUNCTION_120_1(*(_QWORD *)(v109 + 56) + *(_QWORD *)(v187 + 72) * v127, v186);
    v134 = v133;
    v135 = v188;
    OUTLINED_FUNCTION_6_6(v134, v188);
    OUTLINED_FUNCTION_105_1();
    OUTLINED_FUNCTION_104_0(v136);
    v138 = (_QWORD *)(v137 + 16 * v127);
    *v138 = v132;
    v138[1] = v131;
    OUTLINED_FUNCTION_38_5();
    sub_240C35540(v135, v139 + v140 * v127, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    OUTLINED_FUNCTION_50_5();
    if (v57)
    {
      __break(1u);
      goto LABEL_136;
    }
    *(_QWORD *)(v120 + 16) = v141;
    swift_bridgeObjectRetain();
    if (v124)
      goto LABEL_92;
    goto LABEL_93;
  }
  OUTLINED_FUNCTION_30_5();
  if (v56 == v57)
    goto LABEL_117;
  OUTLINED_FUNCTION_29_5();
  if (v128)
    goto LABEL_108;
  OUTLINED_FUNCTION_30_5();
  if (v56 == v57)
    goto LABEL_117;
  OUTLINED_FUNCTION_29_5();
  if (v128)
    goto LABEL_108;
  OUTLINED_FUNCTION_30_5();
  if (v56 == v57)
    goto LABEL_117;
  OUTLINED_FUNCTION_29_5();
  if (v128)
  {
LABEL_108:
    v121 = v129;
    goto LABEL_109;
  }
  OUTLINED_FUNCTION_30_5();
  if (v56 != v57)
  {
    OUTLINED_FUNCTION_29_5();
    if (!v128)
    {
      while (1)
      {
        v121 = v129 + 1;
        if (__OFADD__(v129, 1))
          break;
        if (v121 >= v195)
          goto LABEL_117;
        v128 = *(_QWORD *)(v194 + 8 * v121);
        ++v129;
        if (v128)
          goto LABEL_109;
      }
      __break(1u);
      goto LABEL_142;
    }
    goto LABEL_108;
  }
LABEL_117:
  v142 = v169;
  swift_bridgeObjectRetain_n();
  OUTLINED_FUNCTION_76_1();
  v197 = v120;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_101_1();
  OUTLINED_FUNCTION_144_0();
  v145 = v170;
  if (v57)
    goto LABEL_144;
  v146 = v143;
  v147 = v144;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
  OUTLINED_FUNCTION_137_0();
  if ((sub_240F1CE34() & 1) != 0)
  {
    v148 = OUTLINED_FUNCTION_101_1();
    if ((v147 & 1) != (v149 & 1))
      goto LABEL_150;
    v146 = v148;
  }
  if ((v147 & 1) == 0)
    goto LABEL_149;
  OUTLINED_FUNCTION_135_0();
  sub_240C35540(v150 + v151 * v146, v142, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
  OUTLINED_FUNCTION_110_1();
  __swift_storeEnumTagSinglePayload(v152, v153, v154, v168);
  MLProgram.Value.representation.getter(v145);
  v155 = type metadata accessor for MLProgram.Value.Representation(0);
  if (OUTLINED_FUNCTION_90_1(v155))
  {
    OUTLINED_FUNCTION_126_1();
    sub_240C02F94(v156, v157, &qword_25708CB10);
    MLProgram.Value.representation.setter(v142);
    sub_240BE0B68(v145, &qword_25708CB10);
  }
  else
  {
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_109_1((uint64_t)&v198);
    MLProgram.Value.representation.setter(v145);
  }
  sub_240C6F79C();
  sub_240BE0B68(v142, &qword_25708CB18);
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_12_2();
  v48 = v191;
  sub_240C5A368();
  v109 = v158;
  OUTLINED_FUNCTION_42_2();
  v159 = v180;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v159 + 40) = v109;
  v111 = v190;
  if (v185)
    goto LABEL_73;
LABEL_74:
  if (__OFADD__(v111, 1))
    goto LABEL_145;
  OUTLINED_FUNCTION_138_0();
  if (v56 == v57)
    goto LABEL_136;
  v117 = *(_QWORD *)(v182 + 8 * v116);
  if (v117)
    goto LABEL_90;
  OUTLINED_FUNCTION_20_6();
  if (v56 == v57)
    goto LABEL_136;
  OUTLINED_FUNCTION_32_6();
  if (v117)
    goto LABEL_90;
  OUTLINED_FUNCTION_20_6();
  if (v56 == v57)
    goto LABEL_136;
  OUTLINED_FUNCTION_32_6();
  if (v117)
    goto LABEL_90;
  OUTLINED_FUNCTION_20_6();
  if (v56 == v57)
    goto LABEL_136;
  OUTLINED_FUNCTION_32_6();
  if (v117)
    goto LABEL_90;
  OUTLINED_FUNCTION_20_6();
  if (v56 == v57)
    goto LABEL_136;
  OUTLINED_FUNCTION_32_6();
  if (v117)
    goto LABEL_90;
  OUTLINED_FUNCTION_20_6();
  if (v56 == v57)
  {
LABEL_136:
    swift_bridgeObjectRelease();
    swift_release();
    OUTLINED_FUNCTION_111_1();
    OUTLINED_FUNCTION_1();
    return;
  }
  v117 = *(_QWORD *)(v182 + 8 * v160);
  if (v117)
  {
LABEL_90:
    OUTLINED_FUNCTION_39_3(v117);
    goto LABEL_91;
  }
  while (!__OFADD__(v160, 1))
  {
    OUTLINED_FUNCTION_138_0();
    if (v56 == v57)
      goto LABEL_136;
    OUTLINED_FUNCTION_106_1();
    if (v117)
      goto LABEL_90;
  }
LABEL_147:
  __break(1u);
LABEL_148:
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_44_5(v161, v162, v163, (uint64_t)&a16);
  __break(1u);
LABEL_149:
  OUTLINED_FUNCTION_111_1();
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_44_5(v164, v165, v166, (uint64_t)&a9);
  __break(1u);
LABEL_150:
  swift_bridgeObjectRelease_n();
  sub_240F1CEF4();
  __break(1u);
}

void sub_240C59444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  BOOL v51;
  uint64_t v52;
  uint64_t v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t **v69;
  uint64_t v70;
  uint64_t v71;
  char v72;
  char v73;
  char v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  uint64_t v86;
  uint64_t v87;
  unint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  int64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t *v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  _QWORD *v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  unint64_t v132;
  char v133;
  uint64_t v134;
  unint64_t v135;
  char v136;
  unint64_t v137;
  char v138;
  uint64_t v139;
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  uint64_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  int64_t v170;
  uint64_t v171;
  uint64_t v172;
  uint64_t v173;
  uint64_t v174;
  uint64_t v175;
  int64_t v176;
  uint64_t v177;
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;

  OUTLINED_FUNCTION_22();
  a19 = v20;
  a20 = v21;
  v164 = v22;
  v24 = v23;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_7_2();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_81_1((uint64_t)&v155 - v27);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v28);
  v156 = OUTLINED_FUNCTION_33_5((uint64_t)&v155 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0));
  v174 = *(_QWORD *)(v156 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v30);
  v172 = *(_QWORD *)(OUTLINED_FUNCTION_10_10(v31, v155) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_251(v33, v155);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_2_0();
  v162 = v35;
  v36 = (uint64_t *)type metadata accessor for MLProgram.Argument;
  v161 = OUTLINED_FUNCTION_58_3();
  v180 = *(_QWORD *)(v161 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v37);
  v178 = *(_QWORD *)(OUTLINED_FUNCTION_8_10(v38, v155) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_17_10(v40, v155);
  v41 = *(_QWORD *)(v24 + 16);
  v42 = 0;
  sub_240C5A5D0();
  OUTLINED_FUNCTION_71_2();
  v159 = v43;
  v163 = v44;
  OUTLINED_FUNCTION_3_13();
  v160 = v47;
  v165 = v24;
LABEL_2:
  v170 = v42;
  if (v45)
  {
    OUTLINED_FUNCTION_53_4();
  }
  else
  {
    if (__OFADD__(v46, 1))
    {
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    OUTLINED_FUNCTION_108_1();
    if (v50 == v51)
      goto LABEL_61;
    v52 = *(_QWORD *)(v159 + 8 * v49);
    if (!v52)
    {
      OUTLINED_FUNCTION_19_5();
      if (v50 == v51)
        goto LABEL_61;
      OUTLINED_FUNCTION_23_4();
      if (!v52)
      {
        OUTLINED_FUNCTION_19_5();
        if (v50 == v51)
          goto LABEL_61;
        OUTLINED_FUNCTION_23_4();
        if (!v52)
        {
          OUTLINED_FUNCTION_19_5();
          if (v50 == v51)
            goto LABEL_61;
          OUTLINED_FUNCTION_23_4();
          if (!v52)
          {
            OUTLINED_FUNCTION_19_5();
            if (v50 == v51)
              goto LABEL_61;
            OUTLINED_FUNCTION_23_4();
            if (!v52)
            {
              OUTLINED_FUNCTION_19_5();
              if (v50 == v51)
                goto LABEL_61;
              OUTLINED_FUNCTION_23_4();
              if (!v52)
              {
                while (!__OFADD__(v82, 1))
                {
                  OUTLINED_FUNCTION_108_1();
                  if (v50 == v51)
                    goto LABEL_139;
                  OUTLINED_FUNCTION_106_1();
                  if (v52)
                    goto LABEL_20;
                }
LABEL_145:
                __break(1u);
                goto LABEL_146;
              }
            }
          }
        }
      }
    }
LABEL_20:
    OUTLINED_FUNCTION_54_4(v52);
  }
  OUTLINED_FUNCTION_142_0(v48);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB28);
  v53 = sub_240F1CE64();
  v54 = 0;
  v175 = v41 + 64;
  OUTLINED_FUNCTION_52_4();
  v57 = v56 & v55;
  v176 = (unint64_t)(v58 + 63) >> 6;
  if ((v56 & v55) != 0)
  {
LABEL_22:
    OUTLINED_FUNCTION_134_0();
    v60 = v59 | (v54 << 6);
    goto LABEL_40;
  }
  while (1)
  {
    v51 = __OFADD__(v54++, 1);
    if (v51)
    {
      __break(1u);
      goto LABEL_70;
    }
    if (v54 >= v176)
      goto LABEL_47;
    v61 = *(_QWORD *)(v175 + 8 * v54);
    if (!v61)
    {
      OUTLINED_FUNCTION_36_6();
      if (v50 == v51)
        goto LABEL_47;
      OUTLINED_FUNCTION_35_5();
      if (!v61)
      {
        OUTLINED_FUNCTION_36_6();
        if (v50 == v51)
          goto LABEL_47;
        OUTLINED_FUNCTION_35_5();
        if (!v61)
        {
          OUTLINED_FUNCTION_36_6();
          if (v50 == v51)
            goto LABEL_47;
          OUTLINED_FUNCTION_35_5();
          if (!v61)
          {
            OUTLINED_FUNCTION_36_6();
            if (v50 == v51)
              goto LABEL_47;
            OUTLINED_FUNCTION_35_5();
            if (!v61)
            {
              while (1)
              {
                v54 = v62 + 1;
                if (__OFADD__(v62, 1))
                  goto LABEL_137;
                if (v54 >= v176)
                  break;
                v61 = *(_QWORD *)(v175 + 8 * v54);
                ++v62;
                if (v61)
                  goto LABEL_39;
              }
LABEL_47:
              OUTLINED_FUNCTION_64_2();
              v36 = (uint64_t *)OUTLINED_FUNCTION_76_1();
              v182 = v53;
              OUTLINED_FUNCTION_315();
              OUTLINED_FUNCTION_28_5();
              OUTLINED_FUNCTION_145_0();
              v42 = v170;
              if (v51)
                goto LABEL_138;
              v73 = v72;
              __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB30);
              OUTLINED_FUNCTION_137_0();
              if ((sub_240F1CE34() & 1) != 0)
              {
                v53 = v182;
                OUTLINED_FUNCTION_28_5();
                if ((v73 & 1) != (v74 & 1))
                  goto LABEL_149;
              }
              if ((v73 & 1) == 0)
                goto LABEL_147;
              OUTLINED_FUNCTION_113_1();
              OUTLINED_FUNCTION_126_1();
              v36 = (uint64_t *)type metadata accessor for MLProgram.Argument;
              sub_240C35540(v75, v76, type metadata accessor for MLProgram.Argument);
              OUTLINED_FUNCTION_110_1();
              OUTLINED_FUNCTION_44_5(v77, v78, v79, (uint64_t)&a17);
              sub_240C8DE84();
              OUTLINED_FUNCTION_128_1();
              sub_240BE0B68(v53, &qword_25708CB20);
              OUTLINED_FUNCTION_173();
              OUTLINED_FUNCTION_173();
              OUTLINED_FUNCTION_173();
              sub_240C5A368();
              v41 = v80;
              OUTLINED_FUNCTION_42_2();
              v81 = v165;
              OUTLINED_FUNCTION_80_1();
              *(_QWORD *)(v81 + 16) = v41;
              v45 = v166;
              v46 = v167;
              goto LABEL_2;
            }
          }
        }
      }
      v54 = v62;
    }
LABEL_39:
    v57 = (v61 - 1) & v61;
    v60 = __clz(__rbit64(v61)) + (v54 << 6);
LABEL_40:
    v63 = *(_QWORD *)(v41 + 48) + 16 * v60;
    v36 = *(uint64_t **)v63;
    v42 = *(_QWORD *)(v63 + 8);
    v64 = v177;
    sub_240C355AC(*(_QWORD *)(v41 + 56) + *(_QWORD *)(v178 + 72) * v60, v177, type metadata accessor for Proto_MILSpec_Argument);
    v65 = v64;
    v66 = v179;
    sub_240C35540(v65, v179, type metadata accessor for Proto_MILSpec_Argument);
    OUTLINED_FUNCTION_119_1();
    OUTLINED_FUNCTION_45_4(v67);
    v69 = (uint64_t **)(v68 + 16 * v60);
    *v69 = v36;
    v69[1] = (uint64_t *)v42;
    OUTLINED_FUNCTION_115_1();
    sub_240C35540(v66, v70, type metadata accessor for MLProgram.Argument);
    OUTLINED_FUNCTION_50_5();
    if (v51)
      break;
    *(_QWORD *)(v53 + 16) = v71;
    OUTLINED_FUNCTION_55_0();
    if (v57)
      goto LABEL_22;
  }
  __break(1u);
LABEL_61:
  swift_release();
  while (2)
  {
    MLProgram.Operation.blocks.getter();
    v84 = *(_QWORD *)(v83 + 16);
    swift_bridgeObjectRelease();
    if (v84)
    {
      v85 = 0;
      v36 = (uint64_t *)sub_240BF09E0;
      while (1)
      {
        MLProgram.Operation.blocks.getter();
        v87 = v86;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_240C95824();
          v87 = v97;
        }
        if (v85 >= *(_QWORD *)(v87 + 16))
          goto LABEL_142;
        v88 = v85 + 1;
        OUTLINED_FUNCTION_66_1();
        OUTLINED_FUNCTION_59_1();
        sub_240CB57F0(v90 + v89 * v85, v164);
        sub_240C564B4(v87, (uint64_t)&v181, (uint64_t)type metadata accessor for Proto_MILSpec_Block, (uint64_t)sub_240BF09E0, (uint64_t)type metadata accessor for MLProgram.Block, v91, v92, v93, v155, v156);
        v95 = v94;
        OUTLINED_FUNCTION_42_2();
        v96 = v165;
        OUTLINED_FUNCTION_84_1();
        *(_QWORD *)(v96 + 32) = v95;
        v85 = v88;
        if (v84 == v88)
          goto LABEL_71;
      }
    }
LABEL_70:
    v96 = v165;
LABEL_71:
    v98 = *(_QWORD *)(v96 + 40);
    sub_240C5A5D0();
    v100 = OUTLINED_FUNCTION_11_10(v99);
    v168 = v102;
    v169 = v100;
    if (!v96)
      goto LABEL_73;
LABEL_72:
    v175 = v101;
    v176 = v42;
    OUTLINED_FUNCTION_148_0();
    v170 = v96;
LABEL_90:
    OUTLINED_FUNCTION_48_3();
    v177 = v106;
    v178 = v105;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v107 = OUTLINED_FUNCTION_112_1();
    v108 = 0;
    v179 = v98 + 64;
    OUTLINED_FUNCTION_21_7();
    v180 = v109;
    if (v36)
    {
LABEL_91:
      OUTLINED_FUNCTION_49_5();
      v111 = v110 | (v108 << 6);
      goto LABEL_109;
    }
LABEL_92:
    v51 = __OFADD__(v108++, 1);
    if (v51)
    {
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      __break(1u);
LABEL_139:
      swift_release();
      v42 = v170;
      continue;
    }
    break;
  }
  if (v108 >= v180)
    goto LABEL_116;
  if (*(_QWORD *)(v179 + 8 * v108))
  {
LABEL_108:
    OUTLINED_FUNCTION_103_1();
    v111 = v117 + (v108 << 6);
LABEL_109:
    v118 = (uint64_t *)(*(_QWORD *)(v98 + 48) + 16 * v111);
    v120 = *v118;
    v119 = v118[1];
    v121 = v171;
    sub_240C355AC(*(_QWORD *)(v98 + 56) + *(_QWORD *)(v172 + 72) * v111, v171, type metadata accessor for Proto_MILSpec_Value);
    v122 = v121;
    v123 = v173;
    sub_240C35540(v122, v173, type metadata accessor for Proto_MILSpec_Value);
    OUTLINED_FUNCTION_118_1();
    OUTLINED_FUNCTION_104_0(v124);
    v126 = (_QWORD *)(v125 + 16 * v111);
    *v126 = v120;
    v126[1] = v119;
    OUTLINED_FUNCTION_38_5();
    sub_240C35540(v123, v127 + v128 * v111, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
    OUTLINED_FUNCTION_50_5();
    if (v51)
    {
      __break(1u);
      goto LABEL_135;
    }
    *(_QWORD *)(v107 + 16) = v129;
    OUTLINED_FUNCTION_315();
    if (v36)
      goto LABEL_91;
    goto LABEL_92;
  }
  OUTLINED_FUNCTION_30_5();
  if (v50 == v51)
    goto LABEL_116;
  OUTLINED_FUNCTION_29_5();
  if (v113)
    goto LABEL_107;
  OUTLINED_FUNCTION_30_5();
  if (v50 == v51)
    goto LABEL_116;
  OUTLINED_FUNCTION_29_5();
  if (v114)
    goto LABEL_107;
  OUTLINED_FUNCTION_30_5();
  if (v50 == v51)
    goto LABEL_116;
  OUTLINED_FUNCTION_29_5();
  if (v115)
  {
LABEL_107:
    v108 = v112;
    goto LABEL_108;
  }
  OUTLINED_FUNCTION_30_5();
  if (v50 != v51)
  {
    OUTLINED_FUNCTION_29_5();
    if (!v116)
    {
      while (1)
      {
        v108 = v112 + 1;
        if (__OFADD__(v112, 1))
          break;
        if (v108 >= v180)
          goto LABEL_116;
        ++v112;
        if (*(_QWORD *)(v179 + 8 * v108))
          goto LABEL_108;
      }
      __break(1u);
      goto LABEL_141;
    }
    goto LABEL_107;
  }
LABEL_116:
  v130 = v157;
  v131 = v178;
  OUTLINED_FUNCTION_64_2();
  OUTLINED_FUNCTION_76_1();
  v182 = v107;
  OUTLINED_FUNCTION_315();
  sub_240C66A40(v177, v131);
  OUTLINED_FUNCTION_145_0();
  v134 = v158;
  if (v51)
    goto LABEL_143;
  v135 = v132;
  v136 = v133;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
  OUTLINED_FUNCTION_137_0();
  if ((sub_240F1CE34() & 1) != 0)
  {
    v137 = sub_240C66A40(v177, v178);
    if ((v136 & 1) != (v138 & 1))
      goto LABEL_149;
    v135 = v137;
  }
  if ((v136 & 1) == 0)
    goto LABEL_148;
  OUTLINED_FUNCTION_135_0();
  sub_240C35540(v139 + v140 * v135, v130, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
  OUTLINED_FUNCTION_110_1();
  __swift_storeEnumTagSinglePayload(v141, v142, v143, v156);
  MLProgram.Value.representation.getter(v134);
  v144 = type metadata accessor for MLProgram.Value.Representation(0);
  if (OUTLINED_FUNCTION_90_1(v144))
  {
    v145 = v155;
    v36 = &qword_25708CB10;
    sub_240C02F94(v134, v155, &qword_25708CB10);
    MLProgram.Value.representation.setter(v145);
    sub_240BE0B68(v134, &qword_25708CB10);
  }
  else
  {
    sub_240C78004();
    MLProgram.Value.representation.setter(v134);
  }
  v96 = v170;
  OUTLINED_FUNCTION_132_1();
  sub_240C6F79C();
  sub_240BE0B68(v130, &qword_25708CB18);
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_165();
  v42 = v176;
  sub_240C5A368();
  v98 = v146;
  OUTLINED_FUNCTION_173();
  v147 = v165;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v147 + 40) = v98;
  v101 = v175;
  if (v96)
    goto LABEL_72;
LABEL_73:
  if (__OFADD__(v101, 1))
    goto LABEL_144;
  OUTLINED_FUNCTION_138_0();
  if (v50 == v51)
    goto LABEL_135;
  v104 = *(_QWORD *)(v167 + 8 * v103);
  if (v104)
    goto LABEL_89;
  OUTLINED_FUNCTION_20_6();
  if (v50 == v51)
    goto LABEL_135;
  OUTLINED_FUNCTION_32_6();
  if (v104)
    goto LABEL_89;
  OUTLINED_FUNCTION_20_6();
  if (v50 == v51)
    goto LABEL_135;
  OUTLINED_FUNCTION_32_6();
  if (v104)
    goto LABEL_89;
  OUTLINED_FUNCTION_20_6();
  if (v50 == v51)
    goto LABEL_135;
  OUTLINED_FUNCTION_32_6();
  if (v104)
    goto LABEL_89;
  OUTLINED_FUNCTION_20_6();
  if (v50 == v51)
    goto LABEL_135;
  OUTLINED_FUNCTION_32_6();
  if (v104)
    goto LABEL_89;
  OUTLINED_FUNCTION_20_6();
  if (v50 == v51)
  {
LABEL_135:
    swift_release();
    OUTLINED_FUNCTION_1();
    return;
  }
  v104 = *(_QWORD *)(v167 + 8 * v148);
  if (v104)
  {
LABEL_89:
    OUTLINED_FUNCTION_39_3(v104);
    goto LABEL_90;
  }
  while (!__OFADD__(v148, 1))
  {
    OUTLINED_FUNCTION_138_0();
    if (v50 == v51)
      goto LABEL_135;
    OUTLINED_FUNCTION_106_1();
    if (v104)
      goto LABEL_89;
  }
LABEL_146:
  __break(1u);
LABEL_147:
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_44_5(v149, v150, v151, (uint64_t)&a17);
  __break(1u);
LABEL_148:
  OUTLINED_FUNCTION_54();
  OUTLINED_FUNCTION_44_5(v152, v153, v154, (uint64_t)&a12);
  __break(1u);
LABEL_149:
  sub_240F1CEF4();
  __break(1u);
}

void MLProgram.Operation.customMirror.getter()
{
  unint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  __n128 *v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v28 = v2;
  v27 = sub_240F1CF90();
  v3 = *(_QWORD *)(v27 - 8);
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_5();
  type metadata accessor for MLProgram.Operation();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  sub_240C355AC((uint64_t)v0, (uint64_t)&v26 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0), v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v8 = (__n128 *)OUTLINED_FUNCTION_113();
  OUTLINED_FUNCTION_93_1(v8, (__n128)xmmword_240F1D380);
  v9 = v0[1];
  v10 = MEMORY[0x24BEE0D00];
  v8[3].n128_u64[0] = *v0;
  v8[3].n128_u64[1] = v9;
  v8[4].n128_u64[1] = v10;
  v8[5].n128_u64[0] = 0x737475706E69;
  v8[5].n128_u64[1] = 0xE600000000000000;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_42_5();
  v12 = v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAD8);
  v8[6].n128_u64[0] = v12;
  v8[7].n128_u64[1] = v13;
  v8[8].n128_u64[0] = 0x7374757074756FLL;
  v8[8].n128_u64[1] = 0xE700000000000000;
  MLProgram.Operation.outputs.getter();
  v15 = v14;
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAE0);
  v8[9].n128_u64[0] = v15;
  v8[10].n128_u64[1] = v16;
  v8[11].n128_u64[0] = 0x736B636F6C62;
  v8[11].n128_u64[1] = 0xE600000000000000;
  MLProgram.Operation.blocks.getter();
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAE8);
  v8[12].n128_u64[0] = v18;
  v8[13].n128_u64[1] = v19;
  v8[14].n128_u64[0] = 0x7475626972747461;
  v8[14].n128_u64[1] = 0xEA00000000007365;
  sub_240C5A5D0();
  v21 = v20;
  v8[16].n128_u64[1] = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAF0);
  v8[15].n128_u64[0] = v21;
  sub_240F1CF84();
  OUTLINED_FUNCTION_54();
  __swift_storeEnumTagSinglePayload(v22, v23, v24, v25);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v1, *MEMORY[0x24BEE43C0], v27);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void MLProgram.Operation.debugDescription.getter()
{
  sub_240F1CDEC();
  sub_240F1CCE4();
  swift_bridgeObjectRetain();
  sub_240F1CCE4();
  OUTLINED_FUNCTION_100_1();
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_42_5();
  type metadata accessor for MLProgram.Argument(0);
  OUTLINED_FUNCTION_123_1();
  OUTLINED_FUNCTION_61_1();
  swift_release();
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_143_0();
  sub_240F1CCE4();
  MLProgram.Operation.outputs.getter();
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_133_1();
}

void sub_240C5A22C()
{
  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_143_0();
  OUTLINED_FUNCTION_136_0();
  MLProgram.Operation.blocks.getter();
  OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_133_1();
}

uint64_t sub_240C5A260()
{
  uint64_t v1;

  OUTLINED_FUNCTION_61_1();
  OUTLINED_FUNCTION_12_2();
  OUTLINED_FUNCTION_73_1();
  OUTLINED_FUNCTION_143_0();
  sub_240F1CCE4();
  sub_240C5A5D0();
  OUTLINED_FUNCTION_391();
  type metadata accessor for MLProgram.Value();
  OUTLINED_FUNCTION_123_1();
  sub_240F1CCE4();
  swift_release();
  OUTLINED_FUNCTION_165();
  sub_240F1CCE4();
  return v1;
}

void sub_240C5A310()
{
  sub_240C5A5D0();
}

void sub_240C5A33C()
{
  sub_240C5A368();
}

void sub_240C5A368()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  unint64_t v20;
  uint64_t v21;
  unint64_t i;
  char v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  _BYTE *v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  uint64_t (*v54)(_QWORD);

  OUTLINED_FUNCTION_97_1();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v53 = v6;
  v51 = *(_QWORD *)(v6(0) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v7);
  v50 = &v43[-v8];
  v9 = OUTLINED_FUNCTION_101();
  v54 = v3;
  v49 = *(_QWORD *)(v3(v9) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v10);
  v48 = &v43[-v11];
  __swift_instantiateConcreteTypeFromMangledName(v1);
  sub_240F1CE64();
  v52 = v5;
  v44 = v5 + 64;
  OUTLINED_FUNCTION_9_4();
  v15 = v14 & v13;
  v45 = (unint64_t)(v16 + 63) >> 6;
  v46 = v17;
  v47 = v17 + 8;
  v18 = (uint64_t)v50;
  v19 = v53;
  if ((v14 & v13) == 0)
    goto LABEL_3;
LABEL_2:
  v20 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  v21 = v12;
  for (i = v20 | (v12 << 6); ; i = v32 + (v31 << 6))
  {
    v33 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * i);
    v34 = *v33;
    v35 = v33[1];
    v36 = v48;
    sub_240C355AC(*(_QWORD *)(v52 + 56) + *(_QWORD *)(v49 + 72) * i, (uint64_t)v48, v54);
    sub_240C355AC((uint64_t)v36, v18, v19);
    OUTLINED_FUNCTION_213();
    sub_240BF03EC();
    OUTLINED_FUNCTION_105_1();
    v37 = v46;
    *(_QWORD *)((char *)v47 + v38) |= v39;
    v40 = (_QWORD *)(v37[6] + 16 * i);
    *v40 = v34;
    v40[1] = v35;
    sub_240C35540(v18, v37[7] + *(_QWORD *)(v51 + 72) * i, v19);
    v41 = v37[2];
    v24 = __OFADD__(v41, 1);
    v42 = v41 + 1;
    if (v24)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v37[2] = v42;
    v12 = v21;
    if (v15)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v12, 1))
      goto LABEL_23;
    OUTLINED_FUNCTION_130_1();
    if (v23 == v24)
      goto LABEL_21;
    OUTLINED_FUNCTION_96_1();
    if (!v26)
    {
      if (v25 + 1 >= v45)
        goto LABEL_21;
      if (!*(_QWORD *)(v44 + 8 * (v25 + 1)))
      {
        if (v25 + 2 >= v45)
          goto LABEL_21;
        if (!*(_QWORD *)(v44 + 8 * (v25 + 2)))
        {
          OUTLINED_FUNCTION_130_1();
          if (v23 == v24)
          {
LABEL_21:
            OUTLINED_FUNCTION_7_5();
            return;
          }
          if (!*(_QWORD *)(v44 + 8 * v27))
            break;
        }
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_51_3();
    v15 = v30 & v29;
    v21 = v31;
  }
  while (1)
  {
    v28 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v28 >= v45)
      goto LABEL_21;
    ++v27;
    if (*(_QWORD *)(v44 + 8 * v28))
      goto LABEL_17;
  }
LABEL_24:
  __break(1u);
}

void sub_240C5A5D0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t *v2;
  uint64_t (*v3)(uint64_t);
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD);

  OUTLINED_FUNCTION_97_1();
  v2 = v1;
  v4 = v3;
  v5 = OUTLINED_FUNCTION_391();
  v44 = v6;
  v42 = *(_QWORD *)(v6(v5) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v36 - v8;
  v9 = OUTLINED_FUNCTION_101();
  v40 = *(_QWORD *)(v4(v9) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  __swift_instantiateConcreteTypeFromMangledName(v2);
  v13 = (_QWORD *)sub_240F1CE64();
  v14 = 0;
  v43 = v0;
  v37 = v0 + 64;
  OUTLINED_FUNCTION_9_4();
  v17 = v16 & v15;
  v38 = (unint64_t)(v18 + 63) >> 6;
  v39 = v19 + 64;
  v20 = (uint64_t)v41;
  if ((v16 & v15) == 0)
    goto LABEL_3;
LABEL_2:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v21 | (v14 << 6); ; i = v27 + (v14 << 6))
  {
    v28 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * i);
    v29 = *v28;
    v30 = v28[1];
    sub_240C355AC(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v40 + 72) * i, (uint64_t)v12, v4);
    sub_240C355AC((uint64_t)v12, v20, v4);
    OUTLINED_FUNCTION_213();
    sub_240BF03EC();
    OUTLINED_FUNCTION_118_1();
    *(_QWORD *)(v39 + v32) |= v31 << i;
    v33 = (_QWORD *)(v13[6] + 16 * i);
    *v33 = v29;
    v33[1] = v30;
    sub_240C35540(v20, v13[7] + *(_QWORD *)(v42 + 72) * i, v44);
    OUTLINED_FUNCTION_50_5();
    if (v35)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v13[2] = v34;
    if (v17)
      goto LABEL_2;
LABEL_3:
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_22;
    if (v23 >= v38)
      goto LABEL_20;
    ++v14;
    if (!*(_QWORD *)(v37 + 8 * v23))
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_20;
      if (!*(_QWORD *)(v37 + 8 * v14))
      {
        v14 = v23 + 2;
        if (v23 + 2 >= v38)
          goto LABEL_20;
        if (!*(_QWORD *)(v37 + 8 * v14))
          break;
      }
    }
LABEL_16:
    OUTLINED_FUNCTION_51_3();
    v17 = v26 & v25;
  }
  v24 = v23 + 3;
  if (v24 >= v38)
  {
LABEL_20:
    OUTLINED_FUNCTION_7_5();
    return;
  }
  if (*(_QWORD *)(v37 + 8 * v24))
  {
    v14 = v24;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v38)
      goto LABEL_20;
    ++v24;
    if (*(_QWORD *)(v37 + 8 * v14))
      goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

uint64_t type metadata accessor for MLProgram.Operation()
{
  uint64_t result;

  result = qword_25708CB00;
  if (!qword_25708CB00)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240C5A860()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708CAF8;
  if (!qword_25708CAF8)
  {
    v1 = type metadata accessor for Proto_MILSpec_Operation(255);
    result = MEMORY[0x24268C2AC](&unk_240F31D50, v1);
    atomic_store(result, (unint64_t *)&qword_25708CAF8);
  }
  return result;
}

void sub_240C5A8A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  MLProgram.Operation.name.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C5A8C4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Operation.inputs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C5A8E8()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Operation.outputs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C5A90C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Operation.blocks.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C5A930()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Operation.attributes.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s9OperationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);
  uint64_t v14;

  v4 = type metadata accessor for Proto_MILSpec_Operation(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = a2[1];
    *a1 = *a2;
    a1[1] = v6;
    v7 = a2[3];
    a1[2] = a2[2];
    a1[3] = v7;
    v8 = a2[5];
    a1[4] = a2[4];
    a1[5] = v8;
    v9 = *(int *)(v4 + 36);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t _s9OperationVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_MILSpec_Operation(0) + 36);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s9OperationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  v7 = *(int *)(type metadata accessor for Proto_MILSpec_Operation(0) + 36);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v11(v8, v9, v10);
  return a1;
}

_QWORD *_s9OperationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Operation(0) + 36);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s9OperationVwtk(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  a1[2] = a2[2];
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Operation(0) + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *_s9OperationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Operation(0) + 36);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t _s9OperationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5AD70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_78_1();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s9OperationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C5ADA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_78_1();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240C5ADD0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_Operation(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_240C5AE38(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6[2];

  v2 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708C078) - 8);
  v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
  {
    sub_240C5C1B4();
    v3 = v4;
  }
  v5 = *(_QWORD *)(v3 + 16);
  v6[0] = v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v5;
  sub_240C5AEBC(v6);
  *a1 = v3;
}

void sub_240C5AEBC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  _QWORD *v34;
  uint64_t v36;
  _QWORD *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  BOOL v44;
  int v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  char v69;
  uint64_t v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  unint64_t v74;
  char *v75;
  char *v76;
  uint64_t v77;
  unint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  char v82;
  char *v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  BOOL v89;
  unint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  uint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  char v101;
  char *v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  BOOL v106;
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  unint64_t v117;
  char *v118;
  char *v119;
  uint64_t v120;
  char *v121;
  uint64_t v122;
  unint64_t v123;
  uint64_t v124;
  unint64_t v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  uint64_t v131;
  uint64_t v132;
  char *v133;
  uint64_t v134;
  uint64_t v135;
  _QWORD *v136;
  _QWORD *v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t v140;
  _QWORD *v141;
  _QWORD *v142;
  unint64_t v143;
  uint64_t v144;
  uint64_t v145;
  _QWORD *v146;
  _QWORD *v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t *v152;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C078);
  v144 = *(_QWORD *)(v4 - 8);
  v145 = v4;
  v5 = MEMORY[0x24BDAC7A8](v4);
  v139 = (uint64_t)&v131 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x24BDAC7A8](v5);
  v150 = (uint64_t)&v131 - v8;
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v131 - v10;
  v12 = MEMORY[0x24BDAC7A8](v9);
  v14 = (char *)&v131 - v13;
  v15 = MEMORY[0x24BDAC7A8](v12);
  v142 = (uint64_t *)((char *)&v131 - v16);
  v17 = MEMORY[0x24BDAC7A8](v15);
  v141 = (uint64_t *)((char *)&v131 - v18);
  v19 = MEMORY[0x24BDAC7A8](v17);
  v137 = (uint64_t *)((char *)&v131 - v20);
  MEMORY[0x24BDAC7A8](v19);
  v136 = (uint64_t *)((char *)&v131 - v21);
  v152 = a1;
  v22 = a1[1];
  v23 = sub_240F1CEC4();
  if (v23 >= v22)
  {
    if (v22 < 0)
      goto LABEL_159;
    if (v22)
      sub_240C5B8F8(0, v22, 1, v152);
    return;
  }
  if (v22 < -1)
    goto LABEL_158;
  v24 = v23;
  v25 = (char *)MEMORY[0x24BEE4AF8];
  v26 = MEMORY[0x24BEE4AF8];
  if (v22 > 1)
  {
    v26 = sub_240F1CD5C();
    *(_QWORD *)(v26 + 16) = v22 / 2;
  }
  v27 = *(unsigned __int8 *)(v144 + 80);
  v135 = v26;
  v143 = v26 + ((v27 + 32) & ~v27);
  if (v22 > 0)
  {
    v134 = v24;
    v146 = v14;
    v147 = v11;
    v28 = 0;
    while (1)
    {
      v29 = v28;
      v30 = v28 + 1;
      if (v28 + 1 >= v22)
        break;
      v31 = *v152;
      v32 = *(_QWORD *)(v144 + 72);
      v33 = v136;
      sub_240C02F94(*v152 + v32 * v30, (uint64_t)v136, &qword_25708C078);
      v151 = v32;
      v34 = v137;
      sub_240C02F94(v31 + v32 * v29, (uint64_t)v137, &qword_25708C078);
      if (*v33 == *v34 && v33[1] == v34[1])
        LODWORD(v149) = 0;
      else
        LODWORD(v149) = sub_240F1CEDC();
      sub_240BE0B68((uint64_t)v137, &qword_25708C078);
      sub_240BE0B68((uint64_t)v136, &qword_25708C078);
      v138 = v31;
      if (v29 + 2 >= v22)
      {
        v39 = v29 + 2;
      }
      else
      {
        v140 = v29;
        v148 = v151 * v30;
        v38 = v31;
        v39 = v29 + 2;
        v40 = v151 * (v29 + 2);
        while (1)
        {
          v41 = v22;
          v42 = v141;
          sub_240C02F94(v38 + v40, (uint64_t)v141, &qword_25708C078);
          v43 = v142;
          sub_240C02F94(v38 + v148, (uint64_t)v142, &qword_25708C078);
          v44 = *v42 == *v43 && v42[1] == v43[1];
          v45 = v44 ? 0 : sub_240F1CEDC();
          sub_240BE0B68((uint64_t)v142, &qword_25708C078);
          sub_240BE0B68((uint64_t)v141, &qword_25708C078);
          if (((v149 ^ v45) & 1) != 0)
            break;
          v38 += v151;
          ++v39;
          v22 = v41;
          if (v39 >= v41)
          {
            v39 = v41;
            v29 = v140;
            goto LABEL_29;
          }
        }
        v29 = v140;
        v22 = v41;
      }
LABEL_29:
      if ((v149 & 1) == 0)
      {
        v37 = v147;
        v36 = v39;
        goto LABEL_47;
      }
      if (v39 < v29)
        goto LABEL_160;
      v36 = v39;
      if (v29 >= v39)
        goto LABEL_14;
      v148 = v22;
      v133 = v25;
      v46 = 0;
      v47 = v151 * (v36 - 1);
      v48 = v36 * v151;
      v49 = v29;
      v140 = v29;
      v50 = v29 * v151;
      v51 = v147;
      v52 = v36;
      do
      {
        if (v49 != v52 + v46 - 1)
        {
          v53 = v2;
          v54 = v138;
          if (!v138)
            goto LABEL_165;
          v55 = v52;
          v56 = v138 + v50;
          v149 = v138 + v47;
          sub_240C5C1C8(v138 + v50, v139);
          if (v50 < v47 || v56 >= v54 + v48)
          {
            v58 = v149;
            swift_arrayInitWithTakeFrontToBack();
            v2 = v53;
            v59 = v58;
          }
          else
          {
            v2 = v53;
            v59 = v149;
            if (v50 != v47)
              swift_arrayInitWithTakeBackToFront();
          }
          sub_240C5C1C8(v139, v59);
          v51 = v147;
          v52 = v55;
        }
        ++v49;
        --v46;
        v47 -= v151;
        v48 -= v151;
        v50 += v151;
      }
      while (v49 < v52 + v46);
      v37 = v51;
      v36 = v52;
      v25 = v133;
      v29 = v140;
      v22 = v148;
LABEL_47:
      v149 = v36;
      if (v36 < v22)
      {
        if (__OFSUB__(v36, v29))
          goto LABEL_157;
        if (v36 - v29 < v134)
        {
          if (__OFADD__(v29, v134))
            goto LABEL_161;
          if (v29 + v134 >= v22)
            v60 = v22;
          else
            v60 = v29 + v134;
          if (v60 < v29)
          {
LABEL_162:
            __break(1u);
LABEL_163:
            __break(1u);
LABEL_164:
            __break(1u);
LABEL_165:
            __break(1u);
LABEL_166:
            __break(1u);
            return;
          }
          v61 = v149;
          if (v149 != v60)
          {
            v140 = v29;
            v132 = v2;
            v133 = v25;
            v62 = *(_QWORD *)(v144 + 72);
            v151 = v62 * (v149 - 1);
            v148 = v62;
            v63 = v149 * v62;
            v138 = v60;
            do
            {
              v64 = 0;
              v65 = v140;
              v149 = v63;
              while (1)
              {
                v66 = *v152;
                v67 = v146;
                sub_240C02F94(v63 + v64 + *v152, (uint64_t)v146, &qword_25708C078);
                sub_240C02F94(v151 + v64 + v66, (uint64_t)v37, &qword_25708C078);
                if (*v67 == *v37 && v67[1] == v37[1])
                  break;
                v69 = sub_240F1CEDC();
                sub_240BE0B68((uint64_t)v37, &qword_25708C078);
                sub_240BE0B68((uint64_t)v67, &qword_25708C078);
                if ((v69 & 1) == 0)
                  goto LABEL_67;
                v70 = *v152;
                v63 = v149;
                if (!*v152)
                  goto LABEL_163;
                v71 = v70 + v151 + v64;
                sub_240C5C1C8(v70 + v149 + v64, v150);
                swift_arrayInitWithTakeFrontToBack();
                sub_240C5C1C8(v150, v71);
                v37 = v147;
                v64 -= v148;
                if (v61 == ++v65)
                  goto LABEL_68;
              }
              sub_240BE0B68((uint64_t)v37, &qword_25708C078);
              sub_240BE0B68((uint64_t)v67, &qword_25708C078);
LABEL_67:
              v63 = v149;
LABEL_68:
              ++v61;
              v151 += v148;
              v63 += v148;
            }
            while (v61 != v138);
            v149 = v138;
            v2 = v132;
            v25 = v133;
            v29 = v140;
          }
        }
      }
      if (v149 < v29)
        goto LABEL_156;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v25 = sub_240C5BF98(0, *((_QWORD *)v25 + 2) + 1, 1, v25);
      v73 = *((_QWORD *)v25 + 2);
      v72 = *((_QWORD *)v25 + 3);
      v74 = v73 + 1;
      if (v73 >= v72 >> 1)
        v25 = sub_240C5BF98((char *)(v72 > 1), v73 + 1, 1, v25);
      *((_QWORD *)v25 + 2) = v74;
      v75 = v25 + 32;
      v76 = &v25[16 * v73 + 32];
      v77 = v149;
      *(_QWORD *)v76 = v29;
      *((_QWORD *)v76 + 1) = v77;
      if (v73)
      {
        while (1)
        {
          v78 = v74 - 1;
          if (v74 >= 4)
          {
            v83 = &v75[16 * v74];
            v84 = *((_QWORD *)v83 - 8);
            v85 = *((_QWORD *)v83 - 7);
            v89 = __OFSUB__(v85, v84);
            v86 = v85 - v84;
            if (v89)
              goto LABEL_141;
            v88 = *((_QWORD *)v83 - 6);
            v87 = *((_QWORD *)v83 - 5);
            v89 = __OFSUB__(v87, v88);
            v81 = v87 - v88;
            v82 = v89;
            if (v89)
              goto LABEL_142;
            v90 = v74 - 2;
            v91 = &v75[16 * v74 - 32];
            v93 = *(_QWORD *)v91;
            v92 = *((_QWORD *)v91 + 1);
            v89 = __OFSUB__(v92, v93);
            v94 = v92 - v93;
            if (v89)
              goto LABEL_143;
            v89 = __OFADD__(v81, v94);
            v95 = v81 + v94;
            if (v89)
              goto LABEL_145;
            if (v95 >= v86)
            {
              v113 = &v75[16 * v78];
              v115 = *(_QWORD *)v113;
              v114 = *((_QWORD *)v113 + 1);
              v89 = __OFSUB__(v114, v115);
              v116 = v114 - v115;
              if (v89)
                goto LABEL_151;
              v106 = v81 < v116;
              goto LABEL_107;
            }
          }
          else
          {
            if (v74 != 3)
            {
              v107 = *((_QWORD *)v25 + 4);
              v108 = *((_QWORD *)v25 + 5);
              v89 = __OFSUB__(v108, v107);
              v100 = v108 - v107;
              v101 = v89;
              goto LABEL_101;
            }
            v80 = *((_QWORD *)v25 + 4);
            v79 = *((_QWORD *)v25 + 5);
            v89 = __OFSUB__(v79, v80);
            v81 = v79 - v80;
            v82 = v89;
          }
          if ((v82 & 1) != 0)
            goto LABEL_144;
          v90 = v74 - 2;
          v96 = &v75[16 * v74 - 32];
          v98 = *(_QWORD *)v96;
          v97 = *((_QWORD *)v96 + 1);
          v99 = __OFSUB__(v97, v98);
          v100 = v97 - v98;
          v101 = v99;
          if (v99)
            goto LABEL_146;
          v102 = &v75[16 * v78];
          v104 = *(_QWORD *)v102;
          v103 = *((_QWORD *)v102 + 1);
          v89 = __OFSUB__(v103, v104);
          v105 = v103 - v104;
          if (v89)
            goto LABEL_148;
          if (__OFADD__(v100, v105))
            goto LABEL_150;
          if (v100 + v105 >= v81)
          {
            v106 = v81 < v105;
LABEL_107:
            if (v106)
              v78 = v90;
            goto LABEL_109;
          }
LABEL_101:
          if ((v101 & 1) != 0)
            goto LABEL_147;
          v109 = &v75[16 * v78];
          v111 = *(_QWORD *)v109;
          v110 = *((_QWORD *)v109 + 1);
          v89 = __OFSUB__(v110, v111);
          v112 = v110 - v111;
          if (v89)
            goto LABEL_149;
          if (v112 < v100)
            goto LABEL_118;
LABEL_109:
          v117 = v78 - 1;
          if (v78 - 1 >= v74)
          {
            __break(1u);
LABEL_138:
            __break(1u);
LABEL_139:
            __break(1u);
LABEL_140:
            __break(1u);
LABEL_141:
            __break(1u);
LABEL_142:
            __break(1u);
LABEL_143:
            __break(1u);
LABEL_144:
            __break(1u);
LABEL_145:
            __break(1u);
LABEL_146:
            __break(1u);
LABEL_147:
            __break(1u);
LABEL_148:
            __break(1u);
LABEL_149:
            __break(1u);
LABEL_150:
            __break(1u);
LABEL_151:
            __break(1u);
LABEL_152:
            __break(1u);
LABEL_153:
            __break(1u);
LABEL_154:
            __break(1u);
LABEL_155:
            __break(1u);
LABEL_156:
            __break(1u);
LABEL_157:
            __break(1u);
LABEL_158:
            __break(1u);
LABEL_159:
            __break(1u);
LABEL_160:
            __break(1u);
LABEL_161:
            __break(1u);
            goto LABEL_162;
          }
          if (!*v152)
            goto LABEL_164;
          v118 = v25;
          v119 = &v75[16 * v117];
          v120 = *(_QWORD *)v119;
          v121 = &v75[16 * v78];
          v122 = *((_QWORD *)v121 + 1);
          sub_240C5BB50(*v152 + *(_QWORD *)(v144 + 72) * *(_QWORD *)v119, *v152 + *(_QWORD *)(v144 + 72) * *(_QWORD *)v121, *v152 + *(_QWORD *)(v144 + 72) * v122, v143);
          if (v2)
            goto LABEL_135;
          if (v122 < v120)
            goto LABEL_138;
          if (v78 > *((_QWORD *)v118 + 2))
            goto LABEL_139;
          *(_QWORD *)v119 = v120;
          *(_QWORD *)&v75[16 * v117 + 8] = v122;
          v123 = *((_QWORD *)v118 + 2);
          if (v78 >= v123)
            goto LABEL_140;
          v25 = v118;
          v74 = v123 - 1;
          memmove(&v75[16 * v78], v121 + 16, 16 * (v123 - 1 - v78));
          *((_QWORD *)v118 + 2) = v123 - 1;
          if (v123 <= 2)
            goto LABEL_118;
        }
      }
      v74 = 1;
LABEL_118:
      v22 = v152[1];
      v28 = v149;
      if (v149 >= v22)
        goto LABEL_124;
    }
    v36 = v28 + 1;
LABEL_14:
    v37 = v147;
    goto LABEL_47;
  }
  v74 = *((_QWORD *)v25 + 2);
LABEL_124:
  if (v74 >= 2)
  {
    v124 = *v152;
    do
    {
      v125 = v74 - 2;
      if (v74 < 2)
        goto LABEL_152;
      if (!v124)
        goto LABEL_166;
      v126 = v25;
      v127 = *(_QWORD *)&v25[16 * v125 + 32];
      v128 = *(_QWORD *)&v25[16 * v74 + 24];
      sub_240C5BB50(v124 + *(_QWORD *)(v144 + 72) * v127, v124 + *(_QWORD *)(v144 + 72) * *(_QWORD *)&v25[16 * v74 + 16], v124 + *(_QWORD *)(v144 + 72) * v128, v143);
      if (v2)
        break;
      if (v128 < v127)
        goto LABEL_153;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v126 = sub_240C5C13C((uint64_t)v25);
      if (v125 >= *((_QWORD *)v126 + 2))
        goto LABEL_154;
      v129 = &v126[16 * v125 + 32];
      *(_QWORD *)v129 = v127;
      *((_QWORD *)v129 + 1) = v128;
      v130 = *((_QWORD *)v126 + 2);
      if (v74 > v130)
        goto LABEL_155;
      memmove(&v126[16 * v74 + 16], &v126[16 * v74 + 32], 16 * (v130 - v74));
      *((_QWORD *)v126 + 2) = v130 - 1;
      v74 = v130 - 1;
      v25 = v126;
    }
    while (v130 > 2);
  }
LABEL_135:
  swift_bridgeObjectRelease();
  *(_QWORD *)(v135 + 16) = 0;
  swift_bridgeObjectRelease();
}

void sub_240C5B8F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v21;
  uint64_t v22;
  _QWORD *v23;
  uint64_t *v24;
  _QWORD *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v29 = a1;
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C078);
  v7 = MEMORY[0x24BDAC7A8](v30);
  v34 = (uint64_t)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x24BDAC7A8](v7);
  v11 = (uint64_t *)((char *)&v27 - v10);
  MEMORY[0x24BDAC7A8](v9);
  v14 = (uint64_t *)((char *)&v27 - v13);
  v33 = a3;
  v28 = a2;
  if (a3 != a2)
  {
    v15 = *(_QWORD *)(v12 + 72);
    v36 = v15 * (v33 - 1);
    v31 = (char *)&v27 - v13;
    v32 = v15;
    v35 = v15 * v33;
    v16 = &qword_25708C078;
    while (2)
    {
      v17 = 0;
      v18 = v29;
      while (1)
      {
        v19 = *a4;
        sub_240C02F94(v35 + v17 + *a4, (uint64_t)v14, v16);
        sub_240C02F94(v36 + v17 + v19, (uint64_t)v11, v16);
        if (*v14 == *v11 && v14[1] == v11[1])
          break;
        v21 = sub_240F1CEDC();
        sub_240BE0B68((uint64_t)v11, v16);
        sub_240BE0B68((uint64_t)v14, v16);
        if ((v21 & 1) != 0)
        {
          v22 = *a4;
          if (!*a4)
          {
            __break(1u);
            return;
          }
          v23 = v11;
          v24 = v16;
          v25 = a4;
          v26 = v22 + v36 + v17;
          sub_240C5C1C8(v22 + v35 + v17, v34);
          swift_arrayInitWithTakeFrontToBack();
          sub_240C5C1C8(v34, v26);
          v17 -= v32;
          ++v18;
          a4 = v25;
          v16 = v24;
          v11 = v23;
          v14 = v31;
          if (v33 != v18)
            continue;
        }
        goto LABEL_13;
      }
      sub_240BE0B68((uint64_t)v11, v16);
      sub_240BE0B68((uint64_t)v14, v16);
LABEL_13:
      v36 += v32;
      v35 += v32;
      if (++v33 != v28)
        continue;
      break;
    }
  }
}

uint64_t sub_240C5BB50(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t result;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  int64_t v22;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  char v29;
  unint64_t v30;
  unint64_t v31;
  unint64_t v33;
  BOOL v35;
  unint64_t v36;
  uint64_t v38;
  unint64_t v39;
  _QWORD *v40;
  unint64_t v41;
  char v43;
  unint64_t v45;
  unint64_t v46;
  BOOL v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t v51;
  _QWORD *v52;
  unint64_t v53;
  unint64_t v54;
  unint64_t v55;

  v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C078);
  v8 = MEMORY[0x24BDAC7A8](v51);
  v10 = (uint64_t *)((char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v11 = MEMORY[0x24BDAC7A8](v8);
  v52 = (uint64_t *)((char *)&v49 - v12);
  v13 = MEMORY[0x24BDAC7A8](v11);
  v15 = (uint64_t *)((char *)&v49 - v14);
  result = MEMORY[0x24BDAC7A8](v13);
  v18 = (uint64_t *)((char *)&v49 - v17);
  v20 = *(_QWORD *)(v19 + 72);
  if (!v20)
  {
    __break(1u);
LABEL_81:
    __break(1u);
LABEL_82:
    __break(1u);
    return result;
  }
  v21 = a2 - a1 == 0x8000000000000000 && v20 == -1;
  if (v21)
    goto LABEL_81;
  v22 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v20 == -1)
    goto LABEL_82;
  v55 = a1;
  v54 = a4;
  v24 = v22 / v20;
  if ((uint64_t)(a2 - a1) / v20 >= v22 / v20)
  {
    sub_240BF1D98();
    v36 = a4 + v24 * v20;
    v53 = v36;
    v55 = a2;
    if (v24 * v20 >= 1 && a1 < a2)
    {
      v38 = -v20;
      v50 = a1;
      do
      {
        v39 = a3;
        v40 = v52;
        sub_240C02F94(v36 + v38, (uint64_t)v52, &qword_25708C078);
        v41 = a2 + v38;
        sub_240C02F94(a2 + v38, (uint64_t)v10, &qword_25708C078);
        if (*v40 == *v10 && v40[1] == v10[1])
          v43 = 0;
        else
          v43 = sub_240F1CEDC();
        a3 = v39 + v38;
        sub_240BE0B68((uint64_t)v10, &qword_25708C078);
        sub_240BE0B68((uint64_t)v52, &qword_25708C078);
        if ((v43 & 1) != 0)
        {
          if (v39 < a2 || a3 >= a2)
          {
            swift_arrayInitWithTakeFrontToBack();
            v45 = v50;
          }
          else
          {
            v21 = v39 == a2;
            v45 = v50;
            if (!v21)
              swift_arrayInitWithTakeBackToFront();
          }
          v55 += v38;
        }
        else
        {
          v46 = v53;
          v53 += v38;
          if (v39 < v46 || a3 >= v46)
          {
            swift_arrayInitWithTakeFrontToBack();
            v41 = a2;
            v45 = v50;
          }
          else
          {
            v21 = v39 == v46;
            v45 = v50;
            if (!v21)
              swift_arrayInitWithTakeBackToFront();
            v41 = a2;
          }
        }
        v36 = v53;
        v48 = v53 > a4 && v41 > v45;
        a2 = v41;
      }
      while (v48);
    }
  }
  else
  {
    v25 = (uint64_t)(a2 - a1) / v20;
    sub_240BF1D98();
    v26 = a4 + v25 * v20;
    v53 = v26;
    if (v25 * v20 >= 1 && a2 < a3)
    {
      while (1)
      {
        sub_240C02F94(a2, (uint64_t)v18, &qword_25708C078);
        sub_240C02F94(a4, (uint64_t)v15, &qword_25708C078);
        if (*v18 == *v15 && v18[1] == v15[1])
          break;
        v29 = sub_240F1CEDC();
        sub_240BE0B68((uint64_t)v15, &qword_25708C078);
        sub_240BE0B68((uint64_t)v18, &qword_25708C078);
        if ((v29 & 1) == 0)
          goto LABEL_27;
        v30 = v55;
        v31 = a2 + v20;
        if (v55 < a2 || v55 >= v31)
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else if (v55 == a2)
        {
          v30 = a2;
        }
        else
        {
          swift_arrayInitWithTakeBackToFront();
        }
LABEL_36:
        v55 = v30 + v20;
        a4 = v54;
        v35 = v54 >= v26 || v31 >= a3;
        a2 = v31;
        if (v35)
          goto LABEL_79;
      }
      sub_240BE0B68((uint64_t)v15, &qword_25708C078);
      sub_240BE0B68((uint64_t)v18, &qword_25708C078);
LABEL_27:
      v30 = v55;
      v33 = v54 + v20;
      if (v55 < v54 || v55 >= v33)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (v55 != v54)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      v54 = v33;
      v31 = a2;
      goto LABEL_36;
    }
  }
LABEL_79:
  sub_240C5C08C(&v55, &v54, (uint64_t *)&v53);
  return 1;
}

char *sub_240C5BF98(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB48);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size_0(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_240C5C08C(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;
  unint64_t v9;

  v3 = *a1;
  v4 = *a2;
  v5 = *a3;
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C078);
  v7 = *(_QWORD *)(*(_QWORD *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    return result;
  }
  if (v5 - v4 == 0x8000000000000000 && v7 == -1)
    goto LABEL_16;
  v9 = v4 + (uint64_t)(v5 - v4) / v7 * v7;
  if (v3 < v4 || v3 >= v9)
    return swift_arrayInitWithTakeFrontToBack();
  if (v3 != v4)
    return swift_arrayInitWithTakeBackToFront();
  return result;
}

char *sub_240C5C13C(uint64_t a1)
{
  return sub_240C5BF98(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_240C5C150()
{
  OUTLINED_FUNCTION_147_0();
  return swift_deallocObject();
}

uint64_t sub_240C5C170()
{
  OUTLINED_FUNCTION_80_1();
  return swift_deallocObject();
}

uint64_t sub_240C5C190()
{
  OUTLINED_FUNCTION_147_0();
  OUTLINED_FUNCTION_84_1();
  return swift_deallocObject();
}

void sub_240C5C1B4()
{
  sub_240BF1504();
}

uint64_t sub_240C5C1C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C078);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_8_10@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 128) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Proto_MILSpec_Argument(0);
}

uint64_t OUTLINED_FUNCTION_10_10@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 176) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Proto_MILSpec_Value(0);
}

uint64_t OUTLINED_FUNCTION_11_10(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 224) = result + 64;
  return result;
}

void OUTLINED_FUNCTION_14_11()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(v1 + 16) = v4;
  sub_240C35540(v0, v1+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v2, v3);
}

void OUTLINED_FUNCTION_17_10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 144) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

unint64_t OUTLINED_FUNCTION_28_5()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C66A40(v1, v0);
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_33_5@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
  return type metadata accessor for MLProgram.Value();
}

void OUTLINED_FUNCTION_39_3(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v3 - 160) = v1;
  *(_QWORD *)(v3 - 152) = v2;
  *(_QWORD *)(v3 - 200) = (a1 - 1) & a1;
}

void OUTLINED_FUNCTION_42_5()
{
  sub_240C5A5D0();
}

uint64_t OUTLINED_FUNCTION_44_5@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, a3, *(_QWORD *)(a4 - 256));
}

void OUTLINED_FUNCTION_45_4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) |= v1;
}

void OUTLINED_FUNCTION_53_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (v0 - 1) & v0;
  *(_QWORD *)(v2 - 224) = v1;
}

void OUTLINED_FUNCTION_54_4(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 232) = (a1 - 1) & a1;
  *(_QWORD *)(v2 - 224) = v1;
}

void OUTLINED_FUNCTION_56_4()
{
  sub_240C02C78();
}

void OUTLINED_FUNCTION_57_3(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_58_3()
{
  return type metadata accessor for MLProgram.Argument(0);
}

uint64_t OUTLINED_FUNCTION_61_1()
{
  return sub_240F1CCE4();
}

uint64_t OUTLINED_FUNCTION_64_2()
{
  return swift_bridgeObjectRetain_n();
}

uint64_t OUTLINED_FUNCTION_66_1()
{
  return type metadata accessor for MLProgram.Block();
}

uint64_t OUTLINED_FUNCTION_68_2()
{
  return swift_projectBox();
}

uint64_t OUTLINED_FUNCTION_72_2()
{
  return sub_240F1CC48();
}

uint64_t OUTLINED_FUNCTION_73_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_76_1()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_78_1()
{
  return type metadata accessor for Proto_MILSpec_Operation(0);
}

void OUTLINED_FUNCTION_79_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  sub_240C564B4(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10);
}

uint64_t OUTLINED_FUNCTION_80_1()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_81_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 256) = a1;
}

uint64_t OUTLINED_FUNCTION_83_1()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_84_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_85_1()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 72) = v0;
  return 0;
}

uint64_t OUTLINED_FUNCTION_87_1()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_90_1(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, a1);
}

__n128 *OUTLINED_FUNCTION_93_1(__n128 *result, __n128 a2)
{
  result[1] = a2;
  result[2].n128_u64[0] = 1701667182;
  result[2].n128_u64[1] = 0xE400000000000000;
  return result;
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_100_1()
{
  return swift_bridgeObjectRelease();
}

unint64_t OUTLINED_FUNCTION_101_1()
{
  uint64_t v0;
  uint64_t v1;

  return sub_240C66A40(*(_QWORD *)(v1 - 136), v0);
}

void OUTLINED_FUNCTION_104_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + a1) |= v1;
}

uint64_t OUTLINED_FUNCTION_109_1@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 - 256))();
}

uint64_t OUTLINED_FUNCTION_111_1()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_112_1()
{
  return sub_240F1CE64();
}

uint64_t OUTLINED_FUNCTION_117_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_120_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_123_1()
{
  return sub_240F1CC3C();
}

void OUTLINED_FUNCTION_125_1(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;

  sub_240C564B4(a1, v10, a3, a4, a5, a6, a7, a8, a9, a10);
}

void OUTLINED_FUNCTION_128_1()
{
  sub_240C6F7B0();
}

uint64_t OUTLINED_FUNCTION_132_1()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_133_1()
{
  JUMPOUT(0x24268BDC0);
}

uint64_t OUTLINED_FUNCTION_136_0()
{
  return sub_240F1CCE4();
}

BOOL OUTLINED_FUNCTION_139_0@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  return type metadata accessor for MLProgram.NamedValueType();
}

void OUTLINED_FUNCTION_142_0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = (uint64_t *)(*(_QWORD *)(v1 + 48) + 16 * a1);
  v5 = *v3;
  v4 = v3[1];
  *(_QWORD *)(v2 - 216) = v5;
  *(_QWORD *)(v2 - 208) = v4;
}

uint64_t OUTLINED_FUNCTION_143_0()
{
  return 8236;
}

uint64_t OUTLINED_FUNCTION_147_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_149_0(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240C355AC(a1, a2, v2);
}

uint64_t sub_240C5C8F0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v3 = type metadata accessor for Proto_Coefficients(0);
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *(_QWORD *)(a1 + 16);
  v8 = MEMORY[0x24BEE4AF8];
  if (v7)
  {
    v14[1] = v1;
    v15 = MEMORY[0x24BEE4AF8];
    sub_240BF0C18();
    v8 = v15;
    v9 = *(_QWORD *)(type metadata accessor for SupportVectorCoefficients() - 8);
    v10 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v11 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240BE0BF4(v10, (uint64_t)v6, type metadata accessor for Proto_Coefficients);
      v15 = v8;
      v12 = *(_QWORD *)(v8 + 16);
      if (v12 >= *(_QWORD *)(v8 + 24) >> 1)
      {
        sub_240BF0C18();
        v8 = v15;
      }
      *(_QWORD *)(v8 + 16) = v12 + 1;
      sub_240BE0B90((uint64_t)v6, v8+ ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80))+ *(_QWORD *)(v4 + 72) * v12, type metadata accessor for Proto_Coefficients);
      v10 += v11;
      --v7;
    }
    while (v7);
  }
  return v8;
}

void SupportVectorClassifierConfiguration.kernel.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  OUTLINED_FUNCTION_22();
  a19 = v22;
  a20 = v23;
  v24 = OUTLINED_FUNCTION_26_3();
  v25 = type metadata accessor for Proto_Kernel(v24);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  v28 = (char *)&a9 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_11_3();
  v32 = v30 - v31;
  MEMORY[0x24BDAC7A8](v33);
  v35 = (char *)&a9 - v34;
  v36 = v21 + *(int *)(OUTLINED_FUNCTION_1_9() + 48);
  OUTLINED_FUNCTION_53_5(v36, (uint64_t)v35);
  v37 = 1;
  v38 = OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_51_4();
  if (v38 != 1)
  {
    sub_240C5E950(v36, v32, &qword_25708BE38);
    v39 = OUTLINED_FUNCTION_73_2();
    OUTLINED_FUNCTION_7_1(v39, v40, v25);
    if (v41)
    {
      v42 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v28, 1, 1, v42);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      sub_240BE0B68(v32, &qword_25708BE38);
    }
    else
    {
      sub_240BE0B90(v32, (uint64_t)v28, type metadata accessor for Proto_Kernel);
    }
    sub_240BE0B90((uint64_t)v28, v20, type metadata accessor for Proto_Kernel);
    v37 = 0;
  }
  v43 = type metadata accessor for SupportVectorKernel(0);
  OUTLINED_FUNCTION_17_11(v20, v37, v44, v43);
  OUTLINED_FUNCTION_1();
}

void SupportVectorClassifierConfiguration.kernel.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_47_5();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_313();
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_25_7();
  v9 = type metadata accessor for SupportVectorKernel(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_65_1(a1, v4);
  OUTLINED_FUNCTION_7_1(v4, 1, v9);
  if (v11)
  {
    sub_240BE0B68(v4, &qword_25708CB68);
    v12 = OUTLINED_FUNCTION_1_9();
    v13 = v1 + *(int *)(v12 + 48);
    OUTLINED_FUNCTION_37(v12, &qword_25708BE38);
    OUTLINED_FUNCTION_71(v13, 1);
    sub_240BE0B68(a1, &qword_25708CB68);
  }
  else
  {
    OUTLINED_FUNCTION_54_5(v4);
    sub_240BE0BF4(v3, v2, type metadata accessor for Proto_Kernel);
    v14 = OUTLINED_FUNCTION_1_9();
    v15 = v1 + *(int *)(v14 + 48);
    OUTLINED_FUNCTION_37(v14, &qword_25708BE38);
    sub_240BE0B90(v2, v15, type metadata accessor for Proto_Kernel);
    OUTLINED_FUNCTION_71(v15, 0);
    sub_240BE0B68(a1, &qword_25708CB68);
    OUTLINED_FUNCTION_56_5();
  }
  OUTLINED_FUNCTION_13();
}

void (*SupportVectorClassifierConfiguration.kernel.modify())()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  char v16;
  uint64_t v17;

  OUTLINED_FUNCTION_22();
  v2 = v1;
  v3 = malloc(0x60uLL);
  *v2 = v3;
  *v3 = v0;
  v4 = type metadata accessor for SupportVectorKernel(0);
  v3[1] = v4;
  v3[2] = malloc(*(_QWORD *)(*(_QWORD *)(v4 - 8) + 64));
  v5 = OUTLINED_FUNCTION_47_5();
  v3[3] = v5;
  v3[4] = OUTLINED_FUNCTION_3_14(v5);
  v6 = OUTLINED_FUNCTION_152();
  v3[5] = v6;
  v7 = OUTLINED_FUNCTION_246();
  v8 = OUTLINED_FUNCTION_3_14(v7);
  v3[6] = v8;
  v9 = OUTLINED_FUNCTION_152();
  v3[7] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB68);
  v3[8] = OUTLINED_FUNCTION_3_14(v10);
  v3[9] = OUTLINED_FUNCTION_152();
  v11 = OUTLINED_FUNCTION_152();
  v3[10] = v11;
  v12 = *(int *)(OUTLINED_FUNCTION_1_9() + 48);
  *((_DWORD *)v3 + 22) = v12;
  v13 = v0 + v12;
  OUTLINED_FUNCTION_53_5(v13, (uint64_t)v9);
  v14 = 1;
  v15 = OUTLINED_FUNCTION_30_6();
  OUTLINED_FUNCTION_51_4();
  if (v15 != 1)
  {
    sub_240C5E950(v13, (uint64_t)v8, &qword_25708BE38);
    OUTLINED_FUNCTION_7_1((uint64_t)v8, 1, v5);
    if (v16)
    {
      v17 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 1, 1, v17);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      sub_240BE0B68((uint64_t)v8, &qword_25708BE38);
    }
    else
    {
      sub_240BE0B90((uint64_t)v8, (uint64_t)v6, type metadata accessor for Proto_Kernel);
    }
    sub_240BE0B90((uint64_t)v6, (uint64_t)v11, type metadata accessor for Proto_Kernel);
    v14 = 0;
  }
  __swift_storeEnumTagSinglePayload((uint64_t)v11, v14, 1, v4);
  return sub_240C5CEC8;
}

void sub_240C5CEC8()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  void *v2;
  void *v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  OUTLINED_FUNCTION_22();
  v5 = *(_QWORD **)v4;
  v6 = *(_QWORD *)(*(_QWORD *)v4 + 72);
  v7 = *(_QWORD *)(*(_QWORD *)v4 + 80);
  if ((v8 & 1) != 0)
  {
    OUTLINED_FUNCTION_67_2();
    sub_240C5E950(v7, v0, &qword_25708CB68);
    SupportVectorClassifierConfiguration.kernel.setter(v0);
    sub_240BE0B68(v7, &qword_25708CB68);
  }
  else
  {
    v9 = v5[1];
    sub_240C5E950(*(_QWORD *)(*(_QWORD *)v4 + 80), v6, &qword_25708CB68);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v6, 1, v9);
    v11 = *((int *)v5 + 22);
    v12 = v5[9];
    v13 = v5[10];
    if (EnumTagSinglePayload == 1)
    {
      v14 = *v5 + v11;
      sub_240BE0B68(v12, &qword_25708CB68);
      sub_240BE0B68(v14, &qword_25708BE38);
      v15 = OUTLINED_FUNCTION_73_2();
      OUTLINED_FUNCTION_71(v15, v16);
      sub_240BE0B68(v13, &qword_25708CB68);
    }
    else
    {
      v17 = v5[4];
      v18 = v5[2];
      v19 = *v5 + v11;
      OUTLINED_FUNCTION_54_5(v12);
      v1 = type metadata accessor for Proto_Kernel;
      sub_240BE0BF4(v18, v17, type metadata accessor for Proto_Kernel);
      sub_240BE0B68(v19, &qword_25708BE38);
      sub_240BE0B90(v17, v19, type metadata accessor for Proto_Kernel);
      v20 = OUTLINED_FUNCTION_32_7(v19);
      OUTLINED_FUNCTION_37(v20, &qword_25708CB68);
      OUTLINED_FUNCTION_56_5();
    }
    OUTLINED_FUNCTION_67_2();
  }
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_351();
  free(v3);
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  free(v1);
  free(v2);
  OUTLINED_FUNCTION_75(v5);
}

uint64_t SupportVectorClassifierConfiguration.supportVectorCountPerClass.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v9;

  v1 = *v0;
  v2 = *(_QWORD *)(*v0 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v9 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_315();
    sub_240BF080C();
    v4 = 0;
    v3 = v9;
    v5 = *(_QWORD *)(v9 + 16);
    do
    {
      v6 = *(int *)(v1 + 4 * v4 + 32);
      v7 = *(_QWORD *)(v9 + 24);
      if (v5 >= v7 >> 1)
      {
        OUTLINED_FUNCTION_43_5(v7);
        sub_240BF080C();
      }
      ++v4;
      *(_QWORD *)(v9 + 16) = v5 + 1;
      *(_QWORD *)(v9 + 8 * v5++ + 32) = v6;
    }
    while (v2 != v4);
    swift_bridgeObjectRelease();
  }
  return v3;
}

void sub_240C5D118()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  SupportVectorClassifierConfiguration.supportVectorCountPerClass.setter(v0);
}

void SupportVectorClassifierConfiguration.supportVectorCountPerClass.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v6;
  char *v7;
  int64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  _BOOL8 v15;
  int64_t v16;
  char v17;
  uint64_t v18;

  v4 = v1;
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v7 = (char *)OUTLINED_FUNCTION_39_4();
    sub_240BF0BD0(v7, v8, v9);
    v10 = 0;
    v11 = v18;
    while (1)
    {
      v12 = *(_QWORD *)(a1 + 8 * v10 + 32);
      if (v12 < (uint64_t)0xFFFFFFFF80000000)
        break;
      if (v12 > 0x7FFFFFFF)
        goto LABEL_12;
      OUTLINED_FUNCTION_72_3();
      if (v14)
      {
        v15 = OUTLINED_FUNCTION_44_6(v13);
        sub_240BF0BD0((char *)v15, v16, v17);
        v11 = v18;
      }
      ++v10;
      *(_QWORD *)(v11 + 16) = v2;
      *(_DWORD *)(v11 + 4 * v3 + 32) = v12;
      if (v6 == v10)
      {
        OUTLINED_FUNCTION_165();
        goto LABEL_10;
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
  }
  else
  {
    OUTLINED_FUNCTION_165();
    v11 = MEMORY[0x24BEE4AF8];
LABEL_10:
    swift_bridgeObjectRelease();
    *v4 = v11;
    OUTLINED_FUNCTION_19_6();
  }
}

void SupportVectorClassifierConfiguration.supportVectorCountPerClass.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = SupportVectorClassifierConfiguration.supportVectorCountPerClass.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C5D23C(uint64_t *a1, char a2)
{
  uint64_t v2;

  if ((a2 & 1) != 0)
  {
    v2 = OUTLINED_FUNCTION_315();
    SupportVectorClassifierConfiguration.supportVectorCountPerClass.setter(v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    SupportVectorClassifierConfiguration.supportVectorCountPerClass.setter(*a1);
    OUTLINED_FUNCTION_44();
  }
}

void SupportVectorClassifierConfiguration.supportVectors.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v3 = OUTLINED_FUNCTION_14_12();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_3();
  v7 = v5 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v21 - v9;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_1_9();
  sub_240C5E950(v1 + *(int *)(v14 + 20), (uint64_t)v13, &qword_25708BE20);
  v15 = 1;
  v16 = OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_7_1(v16, v17, v3);
  if (!v18)
  {
    OUTLINED_FUNCTION_37_5((uint64_t)v13, (uint64_t)v10);
    OUTLINED_FUNCTION_36_7((uint64_t)v10, v7);
    sub_240C5D4B4(v7, a1);
    OUTLINED_FUNCTION_3_2((uint64_t)v10);
    v15 = 0;
  }
  v19 = type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(0);
  OUTLINED_FUNCTION_17_11(a1, v15, v20, v19);
  OUTLINED_FUNCTION_13();
}

void sub_240C5D390(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, void (*a6)(uint64_t))
{
  uint64_t v6;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(a5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_81();
  sub_240C5E950(a1, v6, a5);
  a6(v6);
  OUTLINED_FUNCTION_42();
}

void SupportVectorClassifierConfiguration.supportVectors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v3 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_12_9();
  v7 = OUTLINED_FUNCTION_7_1(a1, 1, v6);
  if (v8)
  {
    OUTLINED_FUNCTION_37(v7, &qword_25708CB70);
    v10 = OUTLINED_FUNCTION_14_12();
    v11 = 1;
  }
  else
  {
    sub_240C5D528();
    sub_240BE10B8(a1, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
    v10 = OUTLINED_FUNCTION_14_12();
    v11 = 0;
  }
  OUTLINED_FUNCTION_17_11(v2, v11, v9, v10);
  v12 = OUTLINED_FUNCTION_1_9();
  sub_240C5E97C(v2, v3 + *(int *)(v12 + 20), &qword_25708BE20);
  OUTLINED_FUNCTION_156();
}

uint64_t sub_240C5D4B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_14_12();
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = type metadata accessor for Proto_DenseSupportVectors;
  else
    v4 = type metadata accessor for Proto_SparseSupportVectors;
  sub_240BE0B90(a1, a2, v4);
  type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(0);
  return swift_storeEnumTagMultiPayload();
}

void sub_240C5D528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);

  v4 = OUTLINED_FUNCTION_26_3();
  type metadata accessor for DenseSupportVectorCollection(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_59();
  type metadata accessor for SparseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_12_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_313();
  sub_240BE0BF4(v1, v3, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240BE0B90(v3, v1, type metadata accessor for DenseSupportVectorCollection);
    v9 = OUTLINED_FUNCTION_11_2();
    sub_240BE0B90(v9, v10, v11);
  }
  else
  {
    sub_240BE0B90(v3, v2, type metadata accessor for SparseSupportVectorCollection);
    sub_240BE0B90(v2, v0, type metadata accessor for Proto_SparseSupportVectors);
  }
  OUTLINED_FUNCTION_14_12();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_42();
}

void (*SupportVectorClassifierConfiguration.supportVectors.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  size_t v5;
  void *v6;
  void *v7;
  uint64_t v8;
  void *v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = OUTLINED_FUNCTION_14_12();
  v3[1] = v4;
  v5 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 64);
  v6 = malloc(v5);
  v3[2] = v6;
  v7 = malloc(v5);
  v3[3] = v7;
  v8 = OUTLINED_FUNCTION_246();
  v3[4] = OUTLINED_FUNCTION_3_14(v8);
  v9 = OUTLINED_FUNCTION_152();
  v3[5] = v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB70);
  v3[6] = OUTLINED_FUNCTION_3_14(v10);
  v11 = OUTLINED_FUNCTION_152();
  v3[7] = v11;
  v12 = *(int *)(OUTLINED_FUNCTION_1_9() + 20);
  *((_DWORD *)v3 + 16) = v12;
  OUTLINED_FUNCTION_53_5(v1 + v12, (uint64_t)v9);
  v13 = 1;
  OUTLINED_FUNCTION_7_1((uint64_t)v9, 1, v4);
  if (!v14)
  {
    OUTLINED_FUNCTION_37_5((uint64_t)v9, (uint64_t)v7);
    OUTLINED_FUNCTION_36_7((uint64_t)v7, (uint64_t)v6);
    sub_240C5D4B4((uint64_t)v6, (uint64_t)v11);
    OUTLINED_FUNCTION_3_2((uint64_t)v7);
    v13 = 0;
  }
  v15 = type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(0);
  OUTLINED_FUNCTION_17_11((uint64_t)v11, v13, v16, v15);
  return sub_240C5D778;
}

void sub_240C5D778()
{
  uint64_t **v0;
  uint64_t *v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  v1 = *v0;
  v2 = (*v0)[7];
  if ((v3 & 1) != 0)
  {
    v4 = v1[6];
    v5 = (void *)v1[2];
    sub_240C5E950((*v0)[7], v4, &qword_25708CB70);
    SupportVectorClassifierConfiguration.supportVectors.setter(v4);
    sub_240BE0B68(v2, &qword_25708CB70);
  }
  else
  {
    v6 = type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(0);
    OUTLINED_FUNCTION_7_1(v2, 1, v6);
    if (v7)
    {
      sub_240BE0B68(v2, &qword_25708CB70);
      v10 = 1;
    }
    else
    {
      sub_240C5D528();
      OUTLINED_FUNCTION_34(v8, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
      v10 = 0;
    }
    v11 = v1[4];
    v5 = (void *)v1[2];
    OUTLINED_FUNCTION_17_11(v11, v10, v9, v1[1]);
    OUTLINED_FUNCTION_52_5(v11, v12, &qword_25708BE20);
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  free(v5);
  OUTLINED_FUNCTION_75(v1);
}

uint64_t SupportVectorClassifierConfiguration.coefficients.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v2 = type metadata accessor for SupportVectorCoefficients();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  v4 = *(_QWORD *)(v1 + *(int *)(OUTLINED_FUNCTION_1_9() + 24));
  v5 = *(_QWORD *)(v4 + 16);
  v6 = MEMORY[0x24BEE4AF8];
  if (v5)
  {
    v13 = MEMORY[0x24BEE4AF8];
    OUTLINED_FUNCTION_55_0();
    sub_240BF0BEC();
    v6 = v13;
    v7 = *(_QWORD *)(type metadata accessor for Proto_Coefficients(0) - 8);
    v8 = v4 + ((*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
    v9 = *(_QWORD *)(v7 + 72);
    do
    {
      sub_240BE0BF4(v8, v0, type metadata accessor for Proto_Coefficients);
      v11 = *(_QWORD *)(v13 + 16);
      v10 = *(_QWORD *)(v13 + 24);
      if (v11 >= v10 >> 1)
      {
        OUTLINED_FUNCTION_10_4(v10);
        sub_240BF0BEC();
      }
      *(_QWORD *)(v13 + 16) = v11 + 1;
      sub_240BE0B90(v0, v13+ ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80))+ *(_QWORD *)(v3 + 72) * v11, (uint64_t (*)(_QWORD))type metadata accessor for SupportVectorCoefficients);
      v8 += v9;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_240C5D9C4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  return SupportVectorClassifierConfiguration.coefficients.setter(v0);
}

uint64_t SupportVectorClassifierConfiguration.coefficients.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_240C5C8F0(a1);
  swift_bridgeObjectRelease();
  v3 = *(int *)(OUTLINED_FUNCTION_1_9() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = v2;
  return result;
}

void SupportVectorClassifierConfiguration.coefficients.modify(uint64_t *a1)
{
  uint64_t v1;

  a1[3] = v1;
  *a1 = SupportVectorClassifierConfiguration.coefficients.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C5DA74(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v2 = *a1;
  v3 = a1[3];
  if ((a2 & 1) != 0)
  {
    v4 = OUTLINED_FUNCTION_329();
    v5 = sub_240C5C8F0(v4);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_1_9();
    OUTLINED_FUNCTION_66_2();
    *(_QWORD *)(v3 + v2) = v5;
    return swift_bridgeObjectRelease();
  }
  else
  {
    v7 = sub_240C5C8F0(*a1);
    OUTLINED_FUNCTION_42_2();
    OUTLINED_FUNCTION_1_9();
    result = OUTLINED_FUNCTION_66_2();
    *(_QWORD *)(v3 + v2) = v7;
  }
  return result;
}

uint64_t SupportVectorClassifierConfiguration.rho.getter()
{
  OUTLINED_FUNCTION_1_9();
  return swift_bridgeObjectRetain();
}

void sub_240C5DB38()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  SupportVectorClassifierConfiguration.rho.setter(v0);
}

void SupportVectorClassifierConfiguration.rho.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_9() + 28);
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_156();
}

void SupportVectorClassifierConfiguration.rho.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_33_6(*(int *)(v2 + 28));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

uint64_t SupportVectorClassifierConfiguration.probabilityA.getter()
{
  OUTLINED_FUNCTION_1_9();
  return swift_bridgeObjectRetain();
}

void sub_240C5DBE4()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  SupportVectorClassifierConfiguration.probabilityA.setter(v0);
}

void SupportVectorClassifierConfiguration.probabilityA.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_9() + 32);
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_156();
}

void SupportVectorClassifierConfiguration.probabilityA.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_33_6(*(int *)(v2 + 32));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

uint64_t SupportVectorClassifierConfiguration.probabilityB.getter()
{
  OUTLINED_FUNCTION_1_9();
  return swift_bridgeObjectRetain();
}

void sub_240C5DC8C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  SupportVectorClassifierConfiguration.probabilityB.setter(v0);
}

void SupportVectorClassifierConfiguration.probabilityB.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(int *)(OUTLINED_FUNCTION_1_9() + 36);
  OUTLINED_FUNCTION_57_4();
  *(_QWORD *)(v1 + v3) = a1;
  OUTLINED_FUNCTION_156();
}

void SupportVectorClassifierConfiguration.probabilityB.modify(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 8) = v1;
  v2 = OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_33_6(*(int *)(v2 + 36));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_44();
}

void sub_240C5DD18(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *((int *)a1 + 4);
  v3 = *a1;
  v4 = a1[1];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v4 + v2) = v3;
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v4 + v2) = v3;
    OUTLINED_FUNCTION_156();
  }
}

void SupportVectorClassifierConfiguration.classLabels.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;

  v3 = OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_3();
  v7 = v5 - v6;
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v20 - v9;
  OUTLINED_FUNCTION_216();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = OUTLINED_FUNCTION_1_9();
  OUTLINED_FUNCTION_65_1(v1 + *(int *)(v14 + 40), (uint64_t)v13);
  v15 = OUTLINED_FUNCTION_73_2();
  OUTLINED_FUNCTION_7_1(v15, v16, v3);
  if (v17)
  {
    v19 = 0;
    v18 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_37_5((uint64_t)v13, (uint64_t)v10);
    OUTLINED_FUNCTION_36_7((uint64_t)v10, v7);
    sub_240C5DFD0();
    v18 = v20;
    v19 = v21;
    OUTLINED_FUNCTION_3_2((uint64_t)v10);
  }
  *(_QWORD *)a1 = v18;
  *(_BYTE *)(a1 + 8) = v19;
  OUTLINED_FUNCTION_13();
}

void sub_240C5DE7C(uint64_t a1@<X8>)
{
  char v2;
  uint64_t v3;
  char v4;

  SupportVectorClassifierConfiguration.classLabels.getter((uint64_t)&v3);
  v2 = v4;
  *(_QWORD *)a1 = v3;
  *(_BYTE *)(a1 + 8) = v2;
}

void sub_240C5DEBC(uint64_t a1)
{
  char v1;
  uint64_t v2;
  char v3;

  v1 = *(_BYTE *)(a1 + 8);
  v2 = *(_QWORD *)a1;
  v3 = v1;
  swift_bridgeObjectRetain();
  SupportVectorClassifierConfiguration.classLabels.setter(&v2);
}

void SupportVectorClassifierConfiguration.classLabels.setter(uint64_t *a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE28);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_18();
  v5 = *a1;
  if ((a1[1] & 1) != 0)
  {
    OUTLINED_FUNCTION_48_4();
    OUTLINED_FUNCTION_55_0();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    *v1 = v5;
  }
  else
  {
    v6 = OUTLINED_FUNCTION_55_0();
    sub_240C5E7DC(v6);
  }
  OUTLINED_FUNCTION_13_7();
  swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_165();
  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_32_7((uint64_t)v1);
  v7 = OUTLINED_FUNCTION_1_9();
  sub_240C5E97C((uint64_t)v1, v2 + *(int *)(v7 + 40), &qword_25708BE28);
  OUTLINED_FUNCTION_156();
}

void sub_240C5DFD0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t EnumCaseMultiPayload;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  OUTLINED_FUNCTION_22();
  v5 = v4;
  v6 = OUTLINED_FUNCTION_26_3();
  type metadata accessor for Proto_StringVector(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v8 = OUTLINED_FUNCTION_25_7();
  type metadata accessor for Proto_Int64Vector(v8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_81();
  OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_59();
  sub_240BE0BF4(v5, v1, v11);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v13 = EnumCaseMultiPayload;
  if ((_DWORD)EnumCaseMultiPayload == 1)
  {
    sub_240BE0B90(v1, v2, type metadata accessor for Proto_Int64Vector);
    v17 = *(_QWORD *)v2;
    v18 = *(_QWORD *)(*(_QWORD *)v2 + 16);
    if (v18)
    {
      v25 = v0;
      v26 = MEMORY[0x24BEE4AF8];
      swift_bridgeObjectRetain();
      sub_240BF080C();
      v14 = v26;
      v20 = (uint64_t *)(v17 + 32);
      v21 = *(_QWORD *)(v26 + 16);
      do
      {
        v23 = *v20++;
        v22 = v23;
        v24 = *(_QWORD *)(v26 + 24);
        if (v21 >= v24 >> 1)
        {
          OUTLINED_FUNCTION_10_4(v24);
          sub_240BF080C();
        }
        *(_QWORD *)(v26 + 16) = v21 + 1;
        *(_QWORD *)(v26 + 8 * v21++ + 32) = v22;
        --v18;
      }
      while (v18);
      v0 = v25;
    }
    else
    {
      v19 = swift_bridgeObjectRetain();
      v14 = MEMORY[0x24BEE4AF8];
    }
    OUTLINED_FUNCTION_34(v19, type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels);
    swift_bridgeObjectRelease();
    v16 = type metadata accessor for Proto_Int64Vector;
    v15 = v2;
  }
  else
  {
    OUTLINED_FUNCTION_34(EnumCaseMultiPayload, type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels);
    sub_240BE0B90(v1, (uint64_t)v3, type metadata accessor for Proto_StringVector);
    v14 = *v3;
    OUTLINED_FUNCTION_329();
    v15 = (uint64_t)v3;
    v16 = type metadata accessor for Proto_StringVector;
  }
  sub_240BE10B8(v15, v16);
  *(_QWORD *)v0 = v14;
  *(_BYTE *)(v0 + 8) = v13 != 1;
  OUTLINED_FUNCTION_1();
}

void (*SupportVectorClassifierConfiguration.classLabels.modify(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t v13;
  char v14;

  v3 = malloc(0x48uLL);
  *a1 = v3;
  v3[2] = v1;
  v4 = OUTLINED_FUNCTION_13_7();
  v3[3] = v4;
  v5 = OUTLINED_FUNCTION_3_14(v4);
  v3[4] = v5;
  v6 = OUTLINED_FUNCTION_152();
  v3[5] = v6;
  OUTLINED_FUNCTION_216();
  v3[6] = OUTLINED_FUNCTION_61_2();
  v3[7] = OUTLINED_FUNCTION_61_2();
  v7 = OUTLINED_FUNCTION_61_2();
  v3[8] = v7;
  v8 = *(int *)(OUTLINED_FUNCTION_1_9() + 40);
  *((_DWORD *)v3 + 3) = v8;
  OUTLINED_FUNCTION_65_1(v1 + v8, (uint64_t)v7);
  OUTLINED_FUNCTION_7_1((uint64_t)v7, 1, v4);
  if (v9)
  {
    v11 = 0;
    v10 = MEMORY[0x24BEE4AF8];
  }
  else
  {
    OUTLINED_FUNCTION_37_5((uint64_t)v7, (uint64_t)v6);
    OUTLINED_FUNCTION_36_7((uint64_t)v6, (uint64_t)v5);
    sub_240C5DFD0();
    v10 = v13;
    v11 = v14;
    OUTLINED_FUNCTION_3_2((uint64_t)v6);
  }
  *v3 = v10;
  *((_BYTE *)v3 + 8) = v11;
  return sub_240C5E2C4;
}

void sub_240C5E2C4()
{
  uint64_t v0;
  uint64_t **v1;
  uint64_t *v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_22();
  v2 = *v1;
  v3 = **v1;
  if ((v4 & 1) != 0)
  {
    if (((*v1)[1] & 1) != 0)
    {
      v5 = v2[6];
      v0 = v5 + *(int *)(OUTLINED_FUNCTION_48_4() + 20);
      OUTLINED_FUNCTION_59_2();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      OUTLINED_FUNCTION_59_2();
      sub_240C5E7DC(v3);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_31_5(v0);
    OUTLINED_FUNCTION_52_5(v0, v7, &qword_25708BE28);
    swift_bridgeObjectRelease();
  }
  else
  {
    v6 = v2[7];
    if (((*v1)[1] & 1) != 0)
    {
      OUTLINED_FUNCTION_48_4();
      OUTLINED_FUNCTION_329();
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      OUTLINED_FUNCTION_75_1();
    }
    else
    {
      v8 = OUTLINED_FUNCTION_329();
      sub_240C5E7DC(v8);
    }
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_18_4();
    OUTLINED_FUNCTION_31_5(v6);
    OUTLINED_FUNCTION_52_5(v6, v9, &qword_25708BE28);
  }
  OUTLINED_FUNCTION_288();
  OUTLINED_FUNCTION_290();
  OUTLINED_FUNCTION_351();
  OUTLINED_FUNCTION_367();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_75(v2);
}

uint64_t SupportVectorClassifierConfiguration.init()@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = MEMORY[0x24BEE4AF8];
  *a1 = MEMORY[0x24BEE4AF8];
  v3 = (int *)OUTLINED_FUNCTION_1_9();
  v4 = (uint64_t)a1 + v3[5];
  v5 = OUTLINED_FUNCTION_14_12();
  OUTLINED_FUNCTION_17_11(v4, 1, v6, v5);
  *(_QWORD *)((char *)a1 + v3[6]) = v2;
  *(_QWORD *)((char *)a1 + v3[7]) = v2;
  *(_QWORD *)((char *)a1 + v3[8]) = v2;
  *(_QWORD *)((char *)a1 + v3[9]) = v2;
  v7 = (uint64_t)a1 + v3[10];
  v8 = OUTLINED_FUNCTION_13_7();
  OUTLINED_FUNCTION_17_11(v7, 1, v9, v8);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v10 = (uint64_t)a1 + v3[12];
  v11 = OUTLINED_FUNCTION_47_5();
  return __swift_storeEnumTagSinglePayload(v10, 1, 1, v11);
}

uint64_t static SupportVectorClassifierConfiguration.SupportVectors.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _BYTE *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char v27;
  uint64_t v29;
  _BYTE v30[80];
  uint64_t v31;
  uint64_t v32;

  OUTLINED_FUNCTION_22();
  v31 = v1;
  v32 = v2;
  v4 = v3;
  v6 = v5;
  type metadata accessor for DenseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = &v30[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SparseSupportVectorCollection(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  v12 = &v30[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_11_3();
  v16 = v14 - v15;
  MEMORY[0x24BDAC7A8](v17);
  v19 = &v30[-v18];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB78);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_18();
  v22 = v0 + *(int *)(v21 + 48);
  sub_240BE0BF4(v6, v0, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
  sub_240BE0BF4(v4, v22, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_240BE0BF4(v0, v16, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
    if (OUTLINED_FUNCTION_50_6() == 1)
    {
      sub_240BE0B90(v22, (uint64_t)v9, type metadata accessor for DenseSupportVectorCollection);
      sub_240BEC2E0();
      if ((v23 & 1) != 0)
      {
        type metadata accessor for Proto_DenseSupportVectors(0);
        sub_240F1C930();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        if ((sub_240F1CC90() & 1) != 0)
        {
          OUTLINED_FUNCTION_3_2((uint64_t)v9);
          v24 = v16;
LABEL_13:
          OUTLINED_FUNCTION_3_2(v24);
          sub_240BE10B8(v0, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
          return 1;
        }
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v9);
      v29 = v16;
LABEL_16:
      OUTLINED_FUNCTION_3_2(v29);
      sub_240BE10B8(v0, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
      return 0;
    }
    v25 = type metadata accessor for DenseSupportVectorCollection;
    v26 = v16;
  }
  else
  {
    sub_240BE0BF4(v0, (uint64_t)v19, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
    if (OUTLINED_FUNCTION_50_6() != 1)
    {
      sub_240BE0B90(v22, (uint64_t)v12, type metadata accessor for SparseSupportVectorCollection);
      sub_240BEBA94();
      if ((v27 & 1) != 0)
      {
        type metadata accessor for Proto_SparseSupportVectors(0);
        sub_240F1C930();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        if ((sub_240F1CC90() & 1) != 0)
        {
          OUTLINED_FUNCTION_3_2((uint64_t)v12);
          v24 = (uint64_t)v19;
          goto LABEL_13;
        }
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v12);
      v29 = (uint64_t)v19;
      goto LABEL_16;
    }
    v25 = type metadata accessor for SparseSupportVectorCollection;
    v26 = (uint64_t)v19;
  }
  sub_240BE10B8(v26, v25);
  sub_240BE0B68(v0, &qword_25708CB78);
  return 0;
}

uint64_t SupportVectorClassifierConfiguration.ClassLabels.count.getter()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

void sub_240C5E7DC(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  char v13;
  unint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;

  v5 = OUTLINED_FUNCTION_26_3();
  type metadata accessor for Proto_Int64Vector(v5);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  v6 = *(_QWORD *)(a1 + 16);
  OUTLINED_FUNCTION_39_4();
  sub_240BF0790();
  v7 = v21;
  if (v6)
  {
    v8 = *(_QWORD *)(a1 + 16);
    v9 = (uint64_t *)(a1 + 32);
    OUTLINED_FUNCTION_55_0();
    v10 = v6;
    while (v8)
    {
      v11 = *v9;
      OUTLINED_FUNCTION_72_3();
      if (v13)
      {
        OUTLINED_FUNCTION_44_6(v12);
        sub_240BF0790();
        v7 = v21;
      }
      *(_QWORD *)(v7 + 16) = v2;
      *(_QWORD *)(v7 + 8 * v3 + 32) = v11;
      ++v9;
      --v8;
      if (!--v10)
        goto LABEL_9;
    }
    __break(1u);
    goto LABEL_18;
  }
  OUTLINED_FUNCTION_55_0();
LABEL_9:
  v14 = *(_QWORD *)(a1 + 16);
  v15 = v14 - v6;
  if (v14 == v6)
  {
LABEL_10:
    swift_bridgeObjectRelease_n();
    *v1 = v7;
    OUTLINED_FUNCTION_19_6();
    return;
  }
  if (v14 > v6)
  {
    v16 = *(_QWORD *)(v7 + 16);
    v17 = (uint64_t *)(a1 + 8 * v6 + 32);
    do
    {
      v19 = *v17++;
      v18 = v19;
      v20 = *(_QWORD *)(v7 + 24);
      if (v16 >= v20 >> 1)
      {
        OUTLINED_FUNCTION_43_5(v20);
        sub_240BF0790();
      }
      *(_QWORD *)(v7 + 16) = v16 + 1;
      *(_QWORD *)(v7 + 8 * v16++ + 32) = v18;
      --v15;
    }
    while (v15);
    goto LABEL_10;
  }
LABEL_18:
  __break(1u);
}

void static SupportVectorClassifierConfiguration.ClassLabels.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;
  _QWORD *v5;
  char v6;

  v4 = *(_QWORD **)a1;
  v5 = *(_QWORD **)a2;
  v6 = *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(a1 + 8) & 1) != 0)
  {
    if ((v6 & 1) != 0)
      sub_240BEAC24(v4, v5);
  }
  else if ((v6 & 1) == 0)
  {
    sub_240BEACE0(v4, v5);
  }
}

uint64_t type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CB88);
}

void sub_240C5E950(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_45_5(a1, a2, a3);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16));
  OUTLINED_FUNCTION_44();
}

void sub_240C5E97C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_45_5(a1, a2, a3);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40));
  OUTLINED_FUNCTION_44();
}

void sub_240C5E9A8()
{
  sub_240BE18B8(&qword_25708CB80, type metadata accessor for Proto_SupportVectorClassifier, (uint64_t)&unk_240F2DECC);
}

#error "240C5E9E4: call analysis failed (funcsize=7)"

void sub_240C5E9F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C5D390(a1, a2, a3, a4, &qword_25708CB68, SupportVectorClassifierConfiguration.kernel.setter);
}

void sub_240C5EA14()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = SupportVectorClassifierConfiguration.supportVectorCountPerClass.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C5EA38(uint64_t a1@<X8>)
{
  SupportVectorClassifierConfiguration.supportVectors.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C5EA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_240C5D390(a1, a2, a3, a4, &qword_25708CB70, SupportVectorClassifierConfiguration.supportVectors.setter);
}

void sub_240C5EA78()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = SupportVectorClassifierConfiguration.coefficients.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C5EA9C()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = SupportVectorClassifierConfiguration.rho.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C5EAC0()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = SupportVectorClassifierConfiguration.probabilityA.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C5EAE4()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = SupportVectorClassifierConfiguration.probabilityB.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *initializeBufferWithCopyOfBuffer for SupportVectorClassifierConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  void (*v34)(char *, char *, uint64_t);
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;

  v4 = type metadata accessor for Proto_SupportVectorClassifier(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = (int *)v4;
    v8 = *(int *)(v4 + 20);
    v9 = (uint64_t *)((char *)a1 + v8);
    v10 = (uint64_t *)((char *)a2 + v8);
    v11 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v10, 1, v11))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
      memcpy(v9, v10, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v9 = *v10;
      if (EnumCaseMultiPayload == 1)
        v14 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
      else
        v14 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
      v15 = (char *)v9 + v14;
      v16 = (char *)v10 + v14;
      v17 = sub_240F1C930();
      v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
      swift_bridgeObjectRetain();
      v18(v15, v16, v17);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v9, 0, 1, v11);
    }
    *(uint64_t *)((char *)a1 + v7[6]) = *(uint64_t *)((char *)a2 + v7[6]);
    *(uint64_t *)((char *)a1 + v7[7]) = *(uint64_t *)((char *)a2 + v7[7]);
    *(uint64_t *)((char *)a1 + v7[8]) = *(uint64_t *)((char *)a2 + v7[8]);
    *(uint64_t *)((char *)a1 + v7[9]) = *(uint64_t *)((char *)a2 + v7[9]);
    v19 = v7[10];
    v20 = (uint64_t *)((char *)a1 + v19);
    v21 = (uint64_t *)((char *)a2 + v19);
    v22 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (__swift_getEnumTagSinglePayload((uint64_t)v21, 1, v22))
    {
      v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE28);
      memcpy(v20, v21, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
    }
    else
    {
      v24 = swift_getEnumCaseMultiPayload();
      *v20 = *v21;
      if (v24 == 1)
        v25 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v25 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v26 = (char *)v20 + v25;
      v27 = (char *)v21 + v25;
      v28 = sub_240F1C930();
      v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      swift_bridgeObjectRetain();
      v29(v26, v27, v28);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v20, 0, 1, v22);
    }
    v30 = v7[11];
    v31 = (char *)a1 + v30;
    v32 = (char *)a2 + v30;
    v33 = sub_240F1C930();
    v34 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v33 - 8) + 16);
    v34(v31, v32, v33);
    v35 = v7[12];
    v36 = (char *)a1 + v35;
    v37 = (char *)a2 + v35;
    v38 = type metadata accessor for Proto_Kernel(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v38))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v40 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
      if (!__swift_getEnumTagSinglePayload((uint64_t)v37, 1, v40))
      {
        v42 = (char *)&loc_240C5EEE8 + 4 * byte_240F21D20[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
      memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
      v34(&v36[*(int *)(v38 + 20)], &v37[*(int *)(v38 + 20)], v33);
      __swift_storeEnumTagSinglePayload((uint64_t)v36, 0, 1, v38);
    }
  }
  return a1;
}

uint64_t destroy for SupportVectorClassifierConfiguration(uint64_t a1)
{
  int *v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(uint64_t, uint64_t);

  swift_bridgeObjectRelease();
  v2 = (int *)type metadata accessor for Proto_SupportVectorClassifier(0);
  v3 = a1 + v2[5];
  v4 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
      v6 = type metadata accessor for Proto_DenseSupportVectors(0);
    else
      v6 = type metadata accessor for Proto_SparseSupportVectors(0);
    v7 = v3 + *(int *)(v6 + 20);
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v9 = a1 + v2[10];
  v10 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
  if (!__swift_getEnumTagSinglePayload(v9, 1, v10))
  {
    v11 = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (v11 == 1)
      v12 = type metadata accessor for Proto_Int64Vector(0);
    else
      v12 = type metadata accessor for Proto_StringVector(0);
    v13 = v9 + *(int *)(v12 + 20);
    v14 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v13, v14);
  }
  v15 = a1 + v2[11];
  v16 = sub_240F1C930();
  v24 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8);
  v24(v15, v16);
  v17 = a1 + v2[12];
  v18 = type metadata accessor for Proto_Kernel(0);
  result = __swift_getEnumTagSinglePayload(v17, 1, v18);
  if (!(_DWORD)result)
  {
    v20 = v17;
    v21 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    if (!__swift_getEnumTagSinglePayload(v17, 1, v21))
    {
      switch(swift_getEnumCaseMultiPayload())
      {
        case 0u:
          goto LABEL_18;
        case 1u:
          v22 = type metadata accessor for Proto_RBFKernel(0);
          v23 = 5;
          goto LABEL_17;
        case 2u:
          v22 = type metadata accessor for Proto_PolyKernel(0);
          v23 = 7;
          goto LABEL_17;
        case 3u:
          v22 = type metadata accessor for Proto_SigmoidKernel(0);
          v23 = 6;
LABEL_17:
          v20 = v17 + *(int *)(v22 + 4 * v23);
LABEL_18:
          v24(v20, v16);
          break;
        default:
          return ((uint64_t (*)(uint64_t, uint64_t))v24)(v17 + *(int *)(v18 + 20), v16);
      }
    }
    return ((uint64_t (*)(uint64_t, uint64_t))v24)(v17 + *(int *)(v18 + 20), v16);
  }
  return result;
}

_QWORD *initializeWithCopy for SupportVectorClassifierConfiguration(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  void (*v26)(char *, char *, uint64_t);
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for Proto_SupportVectorClassifier(0);
  v5 = v4[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (EnumCaseMultiPayload == 1)
      v11 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v11 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_240F1C930();
    v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
    swift_bridgeObjectRetain();
    v15(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  v16 = v4[10];
  v17 = (_QWORD *)((char *)a1 + v16);
  v18 = (_QWORD *)((char *)a2 + v16);
  v19 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (__swift_getEnumTagSinglePayload((uint64_t)v18, 1, v19))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE28);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v21 = swift_getEnumCaseMultiPayload();
    *v17 = *v18;
    if (v21 == 1)
      v22 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v22 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v23 = (char *)v17 + v22;
    v24 = (char *)v18 + v22;
    v25 = sub_240F1C930();
    v26 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    swift_bridgeObjectRetain();
    v26(v23, v24, v25);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v17, 0, 1, v19);
  }
  v27 = v4[11];
  v28 = (char *)a1 + v27;
  v29 = (char *)a2 + v27;
  v30 = sub_240F1C930();
  v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
  v31(v28, v29, v30);
  v32 = v4[12];
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = type metadata accessor for Proto_Kernel(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v35))
  {
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
  }
  else
  {
    v37 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v34, 1, v37))
    {
      v39 = (char *)&loc_240C5F5F8 + 4 * byte_240F21D28[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    v31(&v33[*(int *)(v35 + 20)], &v34[*(int *)(v35 + 20)], v30);
    __swift_storeEnumTagSinglePayload((uint64_t)v33, 0, 1, v35);
  }
  return a1;
}

_QWORD *assignWithCopy for SupportVectorClassifierConfiguration(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  _QWORD *v25;
  _QWORD *v26;
  uint64_t v27;
  int v28;
  int v29;
  int v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  void (*v35)(char *, char *, uint64_t);
  uint64_t v36;
  int v37;
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  void (*v42)(char *, char *, uint64_t);
  uint64_t v43;
  char *v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  void (*v48)(char *, char *, uint64_t);
  uint64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  int v59;
  int v60;
  char *v61;
  char *v62;
  uint64_t v63;
  char *v64;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Proto_SupportVectorClassifier(0);
  v5 = v4[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v6 = *v7;
      if (EnumCaseMultiPayload == 1)
        v12 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
      else
        v12 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
      v13 = (char *)v6 + v12;
      v14 = (char *)v7 + v12;
      v15 = sub_240F1C930();
      v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
      swift_bridgeObjectRetain();
      v16(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_15;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors);
    v18 = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (v18 == 1)
      v19 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v19 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v20 = (char *)v6 + v19;
    v21 = (char *)v7 + v19;
    v22 = sub_240F1C930();
    v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
    swift_bridgeObjectRetain();
    v23(v20, v21, v22);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v24 = v4[10];
  v25 = (_QWORD *)((char *)a1 + v24);
  v26 = (_QWORD *)((char *)a2 + v24);
  v27 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v27);
  v29 = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v27);
  if (v28)
  {
    if (!v29)
    {
      v30 = swift_getEnumCaseMultiPayload();
      *v25 = *v26;
      if (v30 == 1)
        v31 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v31 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v32 = (char *)v25 + v31;
      v33 = (char *)v26 + v31;
      v34 = sub_240F1C930();
      v35 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v34 - 8) + 16);
      swift_bridgeObjectRetain();
      v35(v32, v33, v34);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v27);
      goto LABEL_29;
    }
LABEL_21:
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE28);
    memcpy(v25, v26, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    goto LABEL_29;
  }
  if (v29)
  {
    sub_240BE10B8((uint64_t)v25, type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels);
    goto LABEL_21;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v25, type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels);
    v37 = swift_getEnumCaseMultiPayload();
    *v25 = *v26;
    if (v37 == 1)
      v38 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v38 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v39 = (char *)v25 + v38;
    v40 = (char *)v26 + v38;
    v41 = sub_240F1C930();
    v42 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v41 - 8) + 16);
    swift_bridgeObjectRetain();
    v42(v39, v40, v41);
    swift_storeEnumTagMultiPayload();
  }
LABEL_29:
  v43 = v4[11];
  v44 = (char *)a1 + v43;
  v45 = (char *)a2 + v43;
  v46 = sub_240F1C930();
  v47 = *(_QWORD *)(v46 - 8);
  v48 = *(void (**)(char *, char *, uint64_t))(v47 + 24);
  v48(v44, v45, v46);
  v49 = v4[12];
  v50 = (char *)a1 + v49;
  v51 = (char *)a2 + v49;
  v52 = type metadata accessor for Proto_Kernel(0);
  v53 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v52);
  v54 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v52);
  if (!v53)
  {
    if (v54)
    {
      sub_240BE10B8((uint64_t)v50, type metadata accessor for Proto_Kernel);
      goto LABEL_35;
    }
    v58 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    v59 = __swift_getEnumTagSinglePayload((uint64_t)v50, 1, v58);
    v60 = __swift_getEnumTagSinglePayload((uint64_t)v51, 1, v58);
    if (v59)
    {
      if (!v60)
      {
        v61 = (char *)&loc_240C5FD14 + 4 * byte_240F21D30[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v60)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v50, type metadata accessor for Proto_Kernel.OneOf_Kernel);
          v64 = (char *)&loc_240C5FE98 + 4 * byte_240F21D34[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_45;
      }
      sub_240BE10B8((uint64_t)v50, type metadata accessor for Proto_Kernel.OneOf_Kernel);
    }
    v63 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v63 - 8) + 64));
LABEL_45:
    v48(&v50[*(int *)(v52 + 20)], &v51[*(int *)(v52 + 20)], v46);
    return a1;
  }
  if (v54)
  {
LABEL_35:
    v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v57 - 8) + 64));
    return a1;
  }
  v55 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v51, 1, v55))
  {
    v62 = (char *)&loc_240C5FD50 + 4 * byte_240F21D2C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
  memcpy(v50, v51, *(_QWORD *)(*(_QWORD *)(v56 - 8) + 64));
  (*(void (**)(char *, char *, uint64_t))(v47 + 16))(&v50[*(int *)(v52 + 20)], &v51[*(int *)(v52 + 20)], v46);
  __swift_storeEnumTagSinglePayload((uint64_t)v50, 0, 1, v52);
  return a1;
}

_QWORD *initializeWithTake for SupportVectorClassifierConfiguration(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  uint64_t v30;
  char *v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;

  *a1 = *a2;
  v4 = (int *)type metadata accessor for Proto_SupportVectorClassifier(0);
  v5 = v4[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (EnumCaseMultiPayload == 1)
      v11 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v11 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  v15 = v4[10];
  v16 = (_QWORD *)((char *)a1 + v15);
  v17 = (_QWORD *)((char *)a2 + v15);
  v18 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v17, 1, v18))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE28);
    memcpy(v16, v17, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    v20 = swift_getEnumCaseMultiPayload();
    *v16 = *v17;
    if (v20 == 1)
      v21 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v21 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v22 = (char *)v16 + v21;
    v23 = (char *)v17 + v21;
    v24 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v16, 0, 1, v18);
  }
  v25 = v4[11];
  v26 = (char *)a1 + v25;
  v27 = (char *)a2 + v25;
  v28 = sub_240F1C930();
  v29 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 32);
  v29(v26, v27, v28);
  v30 = v4[12];
  v31 = (char *)a1 + v30;
  v32 = (char *)a2 + v30;
  v33 = type metadata accessor for Proto_Kernel(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v33))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    v35 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    if (!__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v35))
    {
      v37 = (char *)&loc_240C6039C + 4 * byte_240F21D38[swift_getEnumCaseMultiPayload()];
      __asm { BR              X10 }
    }
    v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v31, v32, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    v29(&v31[*(int *)(v33 + 20)], &v32[*(int *)(v33 + 20)], v28);
    __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v33);
  }
  return a1;
}

_QWORD *assignWithTake for SupportVectorClassifierConfiguration(_QWORD *a1, _QWORD *a2)
{
  int *v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  void (*v44)(char *, char *, uint64_t);
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  int v49;
  int v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;
  char *v57;
  char *v58;
  uint64_t v59;
  char *v60;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = (int *)type metadata accessor for Proto_SupportVectorClassifier(0);
  v5 = v4[5];
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v6 = *v7;
      if (EnumCaseMultiPayload == 1)
        v12 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
      else
        v12 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
      v13 = (char *)v6 + v12;
      v14 = (char *)v7 + v12;
      v15 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_15;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE20);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors);
    v17 = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (v17 == 1)
      v18 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v18 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v19 = (char *)v6 + v18;
    v20 = (char *)v7 + v18;
    v21 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  *(_QWORD *)((char *)a1 + v4[6]) = *(_QWORD *)((char *)a2 + v4[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[7]) = *(_QWORD *)((char *)a2 + v4[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[8]) = *(_QWORD *)((char *)a2 + v4[8]);
  swift_bridgeObjectRelease();
  *(_QWORD *)((char *)a1 + v4[9]) = *(_QWORD *)((char *)a2 + v4[9]);
  swift_bridgeObjectRelease();
  v22 = v4[10];
  v23 = (_QWORD *)((char *)a1 + v22);
  v24 = (_QWORD *)((char *)a2 + v22);
  v25 = type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v23, 1, v25);
  v27 = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v25);
  if (v26)
  {
    if (!v27)
    {
      v28 = swift_getEnumCaseMultiPayload();
      *v23 = *v24;
      if (v28 == 1)
        v29 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
      else
        v29 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
      v30 = (char *)v23 + v29;
      v31 = (char *)v24 + v29;
      v32 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v32 - 8) + 32))(v30, v31, v32);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v25);
      goto LABEL_29;
    }
LABEL_21:
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE28);
    memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    goto LABEL_29;
  }
  if (v27)
  {
    sub_240BE10B8((uint64_t)v23, type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels);
    goto LABEL_21;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v23, type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels);
    v34 = swift_getEnumCaseMultiPayload();
    *v23 = *v24;
    if (v34 == 1)
      v35 = *(int *)(type metadata accessor for Proto_Int64Vector(0) + 20);
    else
      v35 = *(int *)(type metadata accessor for Proto_StringVector(0) + 20);
    v36 = (char *)v23 + v35;
    v37 = (char *)v24 + v35;
    v38 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v38 - 8) + 32))(v36, v37, v38);
    swift_storeEnumTagMultiPayload();
  }
LABEL_29:
  v39 = v4[11];
  v40 = (char *)a1 + v39;
  v41 = (char *)a2 + v39;
  v42 = sub_240F1C930();
  v43 = *(_QWORD *)(v42 - 8);
  v44 = *(void (**)(char *, char *, uint64_t))(v43 + 40);
  v44(v40, v41, v42);
  v45 = v4[12];
  v46 = (char *)a1 + v45;
  v47 = (char *)a2 + v45;
  v48 = type metadata accessor for Proto_Kernel(0);
  v49 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v48);
  v50 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v48);
  if (!v49)
  {
    if (v50)
    {
      sub_240BE10B8((uint64_t)v46, type metadata accessor for Proto_Kernel);
      goto LABEL_35;
    }
    v54 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
    v55 = __swift_getEnumTagSinglePayload((uint64_t)v46, 1, v54);
    v56 = __swift_getEnumTagSinglePayload((uint64_t)v47, 1, v54);
    if (v55)
    {
      if (!v56)
      {
        v57 = (char *)&loc_240C60A2C + 4 * byte_240F21D40[swift_getEnumCaseMultiPayload()];
        __asm { BR              X10 }
      }
    }
    else
    {
      if (!v56)
      {
        if (a1 != a2)
        {
          sub_240BE10B8((uint64_t)v46, type metadata accessor for Proto_Kernel.OneOf_Kernel);
          v60 = (char *)&loc_240C60BA0 + 4 * byte_240F21D44[swift_getEnumCaseMultiPayload()];
          __asm { BR              X10 }
        }
        goto LABEL_45;
      }
      sub_240BE10B8((uint64_t)v46, type metadata accessor for Proto_Kernel.OneOf_Kernel);
    }
    v59 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v59 - 8) + 64));
LABEL_45:
    v44(&v46[*(int *)(v48 + 20)], &v47[*(int *)(v48 + 20)], v42);
    return a1;
  }
  if (v50)
  {
LABEL_35:
    v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE38);
    memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v53 - 8) + 64));
    return a1;
  }
  v51 = type metadata accessor for Proto_Kernel.OneOf_Kernel(0);
  if (!__swift_getEnumTagSinglePayload((uint64_t)v47, 1, v51))
  {
    v58 = (char *)&loc_240C60A68 + 4 * byte_240F21D3C[swift_getEnumCaseMultiPayload()];
    __asm { BR              X10 }
  }
  v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BE30);
  memcpy(v46, v47, *(_QWORD *)(*(_QWORD *)(v52 - 8) + 64));
  (*(void (**)(char *, char *, uint64_t))(v43 + 32))(&v46[*(int *)(v48 + 20)], &v47[*(int *)(v48 + 20)], v42);
  __swift_storeEnumTagSinglePayload((uint64_t)v46, 0, 1, v48);
  return a1;
}

uint64_t getEnumTagSinglePayload for SupportVectorClassifierConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C60D3C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_9();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SupportVectorClassifierConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C60D78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_1_9();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t type metadata accessor for SupportVectorClassifierConfiguration(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435F8A0);
}

uint64_t sub_240C60DC0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_SupportVectorClassifier(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for SupportVectorClassifierConfiguration.SupportVectors(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v7 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v7 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for SupportVectorClassifierConfiguration.SupportVectors(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
    v3 = type metadata accessor for Proto_DenseSupportVectors(0);
  else
    v3 = type metadata accessor for Proto_SparseSupportVectors(0);
  v4 = a1 + *(int *)(v3 + 20);
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *initializeWithCopy for SupportVectorClassifierConfiguration.SupportVectors(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for SupportVectorClassifierConfiguration.SupportVectors(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for SupportVectorClassifierConfiguration.SupportVectors(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
    v5 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
  else
    v5 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for SupportVectorClassifierConfiguration.SupportVectors(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
      v5 = *(int *)(type metadata accessor for Proto_DenseSupportVectors(0) + 20);
    else
      v5 = *(int *)(type metadata accessor for Proto_SparseSupportVectors(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C61368()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Proto_SparseSupportVectors(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_DenseSupportVectors(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for SupportVectorClassifierConfiguration.ClassLabels(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for SupportVectorClassifierConfiguration.ClassLabels()
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for SupportVectorClassifierConfiguration.ClassLabels(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SupportVectorClassifierConfiguration.ClassLabels(uint64_t a1, uint64_t a2)
{
  char v3;

  v3 = *(_BYTE *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SupportVectorClassifierConfiguration.ClassLabels(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFF && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 254;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 8);
      if (v3 <= 1)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SupportVectorClassifierConfiguration.ClassLabels(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 255;
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0xFF)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
      *(_BYTE *)(result + 8) = -(char)a2;
  }
  return result;
}

uint64_t sub_240C61520(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_240C61528(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for SupportVectorClassifierConfiguration.ClassLabels()
{
  return &type metadata for SupportVectorClassifierConfiguration.ClassLabels;
}

uint64_t OUTLINED_FUNCTION_1_9()
{
  return type metadata accessor for Proto_SupportVectorClassifier(0);
}

void *OUTLINED_FUNCTION_3_14(uint64_t a1)
{
  return malloc(*(_QWORD *)(*(_QWORD *)(a1 - 8) + 64));
}

uint64_t OUTLINED_FUNCTION_12_9()
{
  return type metadata accessor for SupportVectorClassifierConfiguration.SupportVectors(0);
}

uint64_t OUTLINED_FUNCTION_13_7()
{
  return type metadata accessor for Proto_SupportVectorClassifier.OneOf_ClassLabels(0);
}

uint64_t OUTLINED_FUNCTION_14_12()
{
  return type metadata accessor for Proto_SupportVectorClassifier.OneOf_SupportVectors(0);
}

uint64_t OUTLINED_FUNCTION_17_11(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_storeEnumTagSinglePayload(a1, a2, 1, a4);
}

uint64_t OUTLINED_FUNCTION_18_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_25_7()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_26_3()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_30_6()
{
  uint64_t v0;
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(v1, 1, v0);
}

uint64_t OUTLINED_FUNCTION_31_5(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_32_7(uint64_t a1)
{
  uint64_t v1;

  return __swift_storeEnumTagSinglePayload(a1, 0, 1, v1);
}

uint64_t OUTLINED_FUNCTION_33_6@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  *(_DWORD *)(v1 + 16) = a1;
  result = *(_QWORD *)(v2 + a1);
  *(_QWORD *)v1 = result;
  return result;
}

void OUTLINED_FUNCTION_36_7(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, a2, v2);
}

void OUTLINED_FUNCTION_37_5(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_39_4()
{
  return 0;
}

BOOL OUTLINED_FUNCTION_43_5@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

BOOL OUTLINED_FUNCTION_44_6@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_45_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return __swift_instantiateConcreteTypeFromMangledName(a3);
}

uint64_t OUTLINED_FUNCTION_47_5()
{
  return type metadata accessor for Proto_Kernel(0);
}

uint64_t OUTLINED_FUNCTION_48_4()
{
  return type metadata accessor for Proto_StringVector(0);
}

uint64_t OUTLINED_FUNCTION_50_6()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_51_4()
{
  uint64_t *v0;
  uint64_t v1;

  sub_240BE0B68(v1, v0);
}

void OUTLINED_FUNCTION_52_5(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  sub_240C5E97C(a1, v3, a3);
}

void OUTLINED_FUNCTION_53_5(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C5E950(a1, a2, v2);
}

void OUTLINED_FUNCTION_54_5(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, v1, v2);
}

void OUTLINED_FUNCTION_56_5()
{
  uint64_t v0;
  uint64_t (*v1)(_QWORD);

  sub_240BE10B8(v0, v1);
}

uint64_t OUTLINED_FUNCTION_57_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_59_2()
{
  return swift_bridgeObjectRetain_n();
}

void *OUTLINED_FUNCTION_61_2()
{
  size_t v0;

  return malloc(v0);
}

void OUTLINED_FUNCTION_65_1(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;

  sub_240C5E950(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_66_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_73_2()
{
  uint64_t v0;

  return v0;
}

_QWORD *OUTLINED_FUNCTION_75_1()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return v1;
}

BOOL static SerializedModelConfiguration.== infix(_:_:)(_QWORD *a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  BOOL v11;
  uint64_t v12;
  char *v13;
  void (*v14)(char *, char *, uint64_t);
  char v15;
  void (*v16)(uint64_t);
  uint64_t v17;
  uint64_t v19;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v19 - v9;
  v11 = *a1 == *(_QWORD *)a2 && a1[1] == *((_QWORD *)a2 + 1);
  if (!v11 && (sub_240F1CEDC() & 1) == 0)
    return 0;
  if ((MEMORY[0x24268B91C](a1[2], a1[3], *((_QWORD *)a2 + 2), *((_QWORD *)a2 + 3)) & 1) == 0)
    return 0;
  v12 = OUTLINED_FUNCTION_0_10();
  v13 = (char *)a1 + *(int *)(v12 + 24);
  v14 = *(void (**)(char *, char *, uint64_t))(v5 + 16);
  v14(v10, v13, v4);
  v14(v8, &a2[*(int *)(v12 + 24)], v4);
  sub_240C30D44(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
  v15 = sub_240F1CC90();
  v16 = *(void (**)(uint64_t))(v5 + 8);
  v17 = OUTLINED_FUNCTION_11_4();
  v16(v17);
  ((void (*)(char *, uint64_t))v16)(v10, v4);
  return (v15 & 1) != 0;
}

void SerializedModelConfiguration.identifier.getter()
{
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C618D8(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  SerializedModelConfiguration.identifier.setter(v1, v2);
}

void SerializedModelConfiguration.identifier.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_156();
}

void SerializedModelConfiguration.identifier.modify(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = v1[1];
  *a1 = *v1;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void SerializedModelConfiguration.data.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_11_4();
  sub_240BF5610(v0, v1);
  OUTLINED_FUNCTION_11_4();
  OUTLINED_FUNCTION_44();
}

void sub_240C6199C(uint64_t *a1)
{
  uint64_t v1;
  unint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  sub_240BF5610(*a1, v2);
  SerializedModelConfiguration.data.setter(v1, v2);
}

void SerializedModelConfiguration.data.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_240BF6AE0(*(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_156();
}

void SerializedModelConfiguration.data.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  unint64_t v4;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 24);
  *a1 = v3;
  a1[1] = v4;
  sub_240BF5610(v3, v4);
  OUTLINED_FUNCTION_44();
}

void sub_240C61A3C(uint64_t *a1, char a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    sub_240BF5610(*a1, v2);
    OUTLINED_FUNCTION_6_9();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    sub_240BF6AE0(v4, v2);
  }
  else
  {
    OUTLINED_FUNCTION_6_9();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    OUTLINED_FUNCTION_42();
  }
}

void SerializedModelConfiguration.init(identifier:data:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  OUTLINED_FUNCTION_0_10();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a5 = a1;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  OUTLINED_FUNCTION_42();
}

uint64_t SerializedModelConfiguration.hash(into:)()
{
  OUTLINED_FUNCTION_0_10();
  sub_240C30D44(&qword_25708CB98, type metadata accessor for Proto_SerializedModel, (uint64_t)&unk_240F33F74);
  return sub_240F1CC54();
}

uint64_t SerializedModelConfiguration.hashValue.getter()
{
  sub_240F1CF3C();
  OUTLINED_FUNCTION_0_10();
  sub_240C30D44(&qword_25708CB98, type metadata accessor for Proto_SerializedModel, (uint64_t)&unk_240F33F74);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t sub_240C61BAC()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_SerializedModel(0);
  sub_240C30D44(&qword_25708CB98, type metadata accessor for Proto_SerializedModel, (uint64_t)&unk_240F33F74);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t SerializedModelConfiguration.customMirror.getter()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = v0;
  v2 = sub_240F1CF90();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_24_1();
  v10 = v9 - v8;
  v11 = type metadata accessor for SerializedModelConfiguration();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_24_1();
  sub_240C61E1C((uint64_t)v1, v13 - v12);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v14 + 32) = 0x696669746E656469;
  *(_QWORD *)(v14 + 40) = 0xEA00000000007265;
  v15 = v1[1];
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v14 + 48) = *v1;
  *(_QWORD *)(v14 + 56) = v15;
  *(_QWORD *)(v14 + 72) = v16;
  *(_QWORD *)(v14 + 80) = 1635017060;
  *(_QWORD *)(v14 + 120) = MEMORY[0x24BDCDDE8];
  v18 = v1[2];
  v17 = v1[3];
  *(_QWORD *)(v14 + 88) = 0xE400000000000000;
  *(_QWORD *)(v14 + 96) = v18;
  *(_QWORD *)(v14 + 104) = v17;
  v19 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v10, 1, 1, v19);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v3 + 104))(v6, *MEMORY[0x24BEE43C0], v2);
  swift_bridgeObjectRetain();
  sub_240BF5610(v18, v17);
  return sub_240F1CFA8();
}

uint64_t type metadata accessor for SerializedModelConfiguration()
{
  uint64_t result;

  result = qword_254360238;
  if (!qword_254360238)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_240C61E1C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for SerializedModelConfiguration();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_240C61E60()
{
  return sub_240C30D44(&qword_25708CBA0, (uint64_t (*)(uint64_t))type metadata accessor for SerializedModelConfiguration, (uint64_t)&protocol conformance descriptor for SerializedModelConfiguration);
}

uint64_t sub_240C61E8C()
{
  return sub_240C30D44(&qword_25708CBA8, type metadata accessor for Proto_SerializedModel, (uint64_t)&unk_240F33DCC);
}

void sub_240C61EB8(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SerializedModelConfiguration.identifier.getter();
  *a1 = v2;
  a1[1] = v3;
}

void sub_240C61EE4(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  SerializedModelConfiguration.data.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t *initializeBufferWithCopyOfBuffer for SerializedModelConfiguration(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;

  v4 = type metadata accessor for Proto_SerializedModel(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    v7 = a2[1];
    *a1 = *a2;
    a1[1] = v7;
    v8 = a2[2];
    v9 = a2[3];
    swift_bridgeObjectRetain();
    sub_240BF5610(v8, v9);
    a1[2] = v8;
    a1[3] = v9;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t destroy for SerializedModelConfiguration(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  sub_240BF6AE0(*(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24));
  v2 = a1 + *(int *)(type metadata accessor for Proto_SerializedModel(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *initializeWithCopy for SerializedModelConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[2];
  v6 = a2[3];
  swift_bridgeObjectRetain();
  sub_240BF5610(v5, v6);
  a1[2] = v5;
  a1[3] = v6;
  v7 = *(int *)(type metadata accessor for Proto_SerializedModel(0) + 24);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

_QWORD *assignWithCopy for SerializedModelConfiguration(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = a2[2];
  v5 = a2[3];
  sub_240BF5610(v4, v5);
  v6 = a1[2];
  v7 = a1[3];
  a1[2] = v4;
  a1[3] = v5;
  sub_240BF6AE0(v6, v7);
  v8 = *(int *)(type metadata accessor for Proto_SerializedModel(0) + 24);
  v9 = (char *)a1 + v8;
  v10 = (char *)a2 + v8;
  v11 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 24))(v9, v10, v11);
  return a1;
}

_OWORD *initializeWithTake for SerializedModelConfiguration(_OWORD *a1, _OWORD *a2)
{
  __int128 v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for Proto_SerializedModel(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

_QWORD *assignWithTake for SerializedModelConfiguration(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;

  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a1[2];
  v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_240BF6AE0(v5, v6);
  v7 = *(int *)(type metadata accessor for Proto_SerializedModel(0) + 24);
  v8 = (char *)a1 + v7;
  v9 = a2 + v7;
  v10 = sub_240F1C930();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for SerializedModelConfiguration()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6222C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_10();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for SerializedModelConfiguration()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C62268(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_10();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C6229C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_SerializedModel(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_10()
{
  return type metadata accessor for Proto_SerializedModel(0);
}

uint64_t OUTLINED_FUNCTION_6_9()
{
  uint64_t v0;
  unint64_t v1;

  return sub_240BF6AE0(v0, v1);
}

void sub_240C62318()
{
  _BYTE *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned __int8 *v8;
  uint64_t v9;
  int v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_97_1();
  v3 = v2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_90();
  type metadata accessor for Proto_MILSpec_Dimension(v5);
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_11_5();
  v7 = *(_QWORD *)(v3 + 16);
  if (!v7)
  {
LABEL_10:
    OUTLINED_FUNCTION_7_5();
    return;
  }
  v14 = MEMORY[0x24BEE4AF8];
  sub_240BF071C();
  type metadata accessor for Proto_MILSpec_Dimension.OneOf_Dimension(0);
  v8 = (unsigned __int8 *)(v3 + 40);
  while (1)
  {
    v9 = *((_QWORD *)v8 - 1);
    v10 = *v8;
    OUTLINED_FUNCTION_46_1(v1, 1);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    if (v10 != 1)
      break;
    type metadata accessor for Proto_MILSpec_Dimension.UnknownDimension(0);
    OUTLINED_FUNCTION_121_1();
    *v0 = v9 & 1;
LABEL_7:
    swift_storeEnumTagMultiPayload();
    OUTLINED_FUNCTION_46_1((uint64_t)v0, 0);
    sub_240C5E97C((uint64_t)v0, v1, &qword_25708BF50);
    v11 = *(_QWORD *)(v14 + 16);
    if (v11 >= *(_QWORD *)(v14 + 24) >> 1)
      sub_240BF071C();
    *(_QWORD *)(v14 + 16) = v11 + 1;
    OUTLINED_FUNCTION_43_2();
    sub_240BE0B90(v1, v12 + v13 * v11, type metadata accessor for Proto_MILSpec_Dimension);
    v8 += 16;
    if (!--v7)
      goto LABEL_10;
  }
  type metadata accessor for Proto_MILSpec_Dimension.ConstantDimension(0);
  OUTLINED_FUNCTION_121_1();
  if ((v9 & 0x8000000000000000) == 0)
  {
    *(_QWORD *)v0 = v9;
    goto LABEL_7;
  }
  __break(1u);
}

void sub_240C624BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[2];
  uint64_t v15;

  OUTLINED_FUNCTION_97_1();
  v2 = v1;
  type metadata accessor for Proto_MILSpec_NamedValueType(0);
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v3);
  v5 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v2 + 16);
  if (v6)
  {
    v14[1] = v0;
    v15 = MEMORY[0x24BEE4AF8];
    sub_240BF0988();
    type metadata accessor for MLProgram.NamedValueType();
    OUTLINED_FUNCTION_51_2();
    v8 = v2 + v7;
    v10 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_240BE0BF4(v8, (uint64_t)v5, type metadata accessor for Proto_MILSpec_NamedValueType);
      v11 = *(_QWORD *)(v15 + 16);
      if (v11 >= *(_QWORD *)(v15 + 24) >> 1)
        sub_240BF0988();
      *(_QWORD *)(v15 + 16) = v11 + 1;
      OUTLINED_FUNCTION_43_2();
      sub_240BE0B90((uint64_t)v5, v12 + v13 * v11, type metadata accessor for Proto_MILSpec_NamedValueType);
      v8 += v10;
      --v6;
    }
    while (v6);
  }
  OUTLINED_FUNCTION_7_5();
}

uint64_t sub_240C625D8(_QWORD *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  char v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  _QWORD v36[5];
  uint64_t v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;

  v41 = a2;
  v4 = type metadata accessor for MLProgram.ValueType.DictionaryParameters(0);
  MEMORY[0x24BDAC7A8](v4);
  v36[4] = (char *)v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for MLProgram.ValueType.TupleParameters(0);
  MEMORY[0x24BDAC7A8](v6);
  v36[3] = (char *)v36 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for MLProgram.ValueType.ListParameters(0);
  MEMORY[0x24BDAC7A8](v8);
  v36[2] = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = type metadata accessor for MLProgram.ValueType.TensorParameters(0);
  MEMORY[0x24BDAC7A8](v37);
  v36[1] = (char *)v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  MEMORY[0x24BDAC7A8](v11);
  v13 = (char *)v36 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = type metadata accessor for Proto_MILSpec_ValueType(0);
  MEMORY[0x24BDAC7A8](v14);
  v16 = (char *)v36 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = type metadata accessor for MLProgram.NamedValueType();
  v40 = *(_QWORD *)(v17 - 8);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (_QWORD *)((char *)v36 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1[2])
  {
    v42 = v2;
    v46 = MEMORY[0x24BEE4AF8];
    sub_240BF095C();
    v44 = v13;
    v45 = a1 + 5;
    v20 = v46;
    v38 = v19;
    v39 = v14;
    v22 = a1[4];
    v21 = a1[5];
    v23 = *v41;
    v24 = *(_QWORD *)(*v41 + 16);
    swift_bridgeObjectRetain_n();
    v43 = v20;
    if (v24 && (v25 = sub_240C66A40(v22, v21), (v26 & 1) != 0))
    {
      v27 = *(_QWORD *)(*(_QWORD *)(v23 + 56) + 8 * v25);
      swift_retain();
      swift_bridgeObjectRelease();
    }
    else
    {
      v27 = swift_allocBox();
      v29 = v28;
      type metadata accessor for Proto_MILSpec_Value(0);
      *(_QWORD *)(v29 + 32) = sub_240F1CC48();
      type metadata accessor for Proto_MILSpec_TensorType(0);
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      *(_QWORD *)v29 = 4;
      *(_BYTE *)(v29 + 8) = 1;
      *(_QWORD *)(v29 + 16) = 0;
      v30 = v42;
      sub_240C62318();
      v32 = v31;
      v42 = v30;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v29 + 24) = v32;
    }
    v33 = type metadata accessor for Proto_MILSpec_NamedValueType(0);
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    __swift_storeEnumTagSinglePayload((uint64_t)v19 + *(int *)(v33 + 24), 1, 1, v14);
    *v19 = v22;
    v19[1] = v21;
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v34 = *(int *)(v14 + 20);
    if (qword_25708B0D0 != -1)
      swift_once();
    v45 += 2;
    *(_QWORD *)&v16[v34] = qword_25708EA38;
    __asm { BR              X9 }
  }
  return MEMORY[0x24BEE4AF8];
}

void MLProgram.Function.inputs.getter()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_22();
  type metadata accessor for MLProgram.NamedValueType();
  OUTLINED_FUNCTION_205();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_18();
  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  if (v4)
  {
    v12 = MEMORY[0x24BEE4AF8];
    swift_bridgeObjectRetain();
    sub_240BF095C();
    OUTLINED_FUNCTION_65_2();
    OUTLINED_FUNCTION_51_2();
    v6 = v3 + v5;
    v8 = *(_QWORD *)(v7 + 72);
    do
    {
      OUTLINED_FUNCTION_113_2(v6);
      v9 = *(_QWORD *)(v12 + 16);
      if (v9 >= *(_QWORD *)(v12 + 24) >> 1)
        sub_240BF095C();
      *(_QWORD *)(v12 + 16) = v9 + 1;
      OUTLINED_FUNCTION_43_2();
      OUTLINED_FUNCTION_141_1(v0, v10 + v11 * v9);
      v6 += v8;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void sub_240C62D40()
{
  swift_bridgeObjectRetain();
  MLProgram.Function.inputs.setter();
}

void MLProgram.Function.inputs.setter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C624BC();
  v2 = v1;
  OUTLINED_FUNCTION_173();
  swift_bridgeObjectRelease();
  *v0 = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Function.inputs.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[3] = v1;
  MLProgram.Function.inputs.getter();
  *a1 = v3;
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C62DD8(uint64_t a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD **)(a1 + 24);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_329();
    sub_240C624BC();
    v4 = v3;
    OUTLINED_FUNCTION_42_2();
    swift_bridgeObjectRelease();
    *v2 = v4;
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_240C624BC();
    v7 = v6;
    OUTLINED_FUNCTION_42_2();
    result = swift_bridgeObjectRelease();
    *v2 = v7;
  }
  return result;
}

void MLProgram.Function.outputs.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  unint64_t v75;
  char v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  char v80;
  unint64_t v81;
  char v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  _QWORD *v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t *v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  unint64_t v127;
  char v128;
  uint64_t v129;
  uint64_t v130;
  unint64_t v131;
  char v132;
  char v133;
  unint64_t v134;
  char v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  char *v140;
  uint64_t v141;
  _QWORD *v142;
  uint64_t v143;
  _QWORD *v144;
  _QWORD v145[3];
  char *v146;
  uint64_t v147;
  uint64_t v148;
  char *v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t *v154;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t *v162;
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;

  OUTLINED_FUNCTION_22();
  v3 = v1;
  v148 = *(_QWORD *)(type metadata accessor for MLProgram.Operation() - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_81();
  v158 = type metadata accessor for MLProgram.ValueType.TensorParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_81_1((uint64_t)v145 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF68);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85();
  v160 = v8;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_386();
  v11 = OUTLINED_FUNCTION_19_0(v10);
  v12 = type metadata accessor for Proto_MILSpec_ValueType.OneOf_Type(v11);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  v159 = (uint64_t)v145 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_38_0();
  v156 = v16;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_38_0();
  v152 = v18;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_81_1(v20);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v21);
  v164 = (char *)v145 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v23);
  v161 = (uint64_t)v145 - v24;
  v25 = OUTLINED_FUNCTION_101();
  v26 = type metadata accessor for Proto_MILSpec_ValueType(v25);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v27);
  OUTLINED_FUNCTION_85();
  v163 = v28;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v29);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_19_0(v30);
  v150 = *(_QWORD *)(type metadata accessor for MLProgram.NamedValueType() - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v31);
  OUTLINED_FUNCTION_85();
  v162 = (uint64_t *)v32;
  OUTLINED_FUNCTION_23_0();
  v34 = MEMORY[0x24BDAC7A8](v33);
  v36 = (char *)v145 - v35;
  MEMORY[0x24BDAC7A8](v34);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_81_1(v37);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBB0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v38);
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_0();
  v40 = MEMORY[0x24BDAC7A8](v39);
  v42 = (char *)v145 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v40);
  v44 = (char *)v145 - v43;
  OUTLINED_FUNCTION_47_6();
  sub_240C63C80(v45, v0);
  swift_release();
  v46 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBB8);
  OUTLINED_FUNCTION_7_1((uint64_t)v0, 1, v46);
  if (v47)
  {
    sub_240BE0B68((uint64_t)v0, &qword_25708CBB0);
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_28((uint64_t)v0 + *(int *)(v46 + 48), (uint64_t)v42);
    v149 = v44;
    OUTLINED_FUNCTION_28((uint64_t)v42, (uint64_t)v44);
    v170 = MEMORY[0x24BEE4B00];
    MLProgram.Function.inputs.getter();
    v49 = *(_QWORD *)(v48 + 16);
    v165 = v26;
    v166 = v12;
    v146 = v36;
    v147 = v2;
    if (v49)
    {
      OUTLINED_FUNCTION_83_2();
      v145[1] = v50;
      v52 = v50 + v51;
      v151 = *(_QWORD *)(v53 + 72);
      v54 = v161;
      v55 = v155;
      v56 = v154;
      do
      {
        OUTLINED_FUNCTION_14(v52, (uint64_t)v56);
        v57 = v56[1];
        v167 = *v56;
        v58 = OUTLINED_FUNCTION_65_2();
        sub_240C5E950((uint64_t)v56 + *(int *)(v58 + 24), v54, &qword_25708C098);
        OUTLINED_FUNCTION_7_1(v54, 1, v26);
        if (v47)
        {
          OUTLINED_FUNCTION_315();
          _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
          v59 = *(int *)(v26 + 20);
          if (qword_25708B0D0 != -1)
            swift_once();
          *(_QWORD *)(v55 + v59) = qword_25708EA38;
          swift_retain();
          sub_240BE0B68(v54, &qword_25708C098);
        }
        else
        {
          sub_240BE0B90(v54, v55, type metadata accessor for Proto_MILSpec_ValueType);
          OUTLINED_FUNCTION_315();
        }
        v60 = *(_QWORD *)(v55 + *(int *)(v26 + 20))
            + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
        OUTLINED_FUNCTION_80_2();
        OUTLINED_FUNCTION_126_1();
        sub_240C5E950(v61, v62, &qword_25708BF68);
        OUTLINED_FUNCTION_7_1(v60, 1, v12);
        if (!v47)
        {
          sub_240BE10B8(v55, type metadata accessor for Proto_MILSpec_ValueType);
          OUTLINED_FUNCTION_126_1();
          OUTLINED_FUNCTION_66_3(v69, v70);
          OUTLINED_FUNCTION_126_1();
          OUTLINED_FUNCTION_66_3(v71, v72);
          v73 = (char *)&loc_240C633E8 + *((int *)qword_240C63C28 + OUTLINED_FUNCTION_111_2());
          __asm { BR              X9 }
        }
        OUTLINED_FUNCTION_70_0(v60);
        v63 = OUTLINED_FUNCTION_31_6();
        v65 = v64;
        v66 = v157;
        v67 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(v157 + 24) = MEMORY[0x24BEE4AF8];
        OUTLINED_FUNCTION_51_5();
        v68 = sub_240F1CC48();
        OUTLINED_FUNCTION_110_2(v68);
        OUTLINED_FUNCTION_109_2();
        OUTLINED_FUNCTION_76_2();
        sub_240C62318();
        OUTLINED_FUNCTION_133_2();
        *(_QWORD *)(v66 + 24) = v67;
        sub_240BE0B90(v66, v65, type metadata accessor for MLProgram.ValueType.TensorParameters);
        sub_240BE10B8(v55, type metadata accessor for Proto_MILSpec_ValueType);
        v74 = v170;
        OUTLINED_FUNCTION_76_1();
        v168 = v74;
        OUTLINED_FUNCTION_81_2(v167);
        OUTLINED_FUNCTION_53_6();
        if (__OFADD__(v77, v78))
          goto LABEL_59;
        v79 = v75;
        v80 = v76;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBC0);
        if ((sub_240F1CE34() & 1) != 0)
        {
          v81 = OUTLINED_FUNCTION_81_2(v167);
          if ((v80 & 1) != (v82 & 1))
            goto LABEL_62;
          v79 = v81;
        }
        v83 = v168;
        if ((v80 & 1) != 0)
        {
          v84 = *(_QWORD *)(v168 + 56);
          swift_release();
          *(_QWORD *)(v84 + 8 * v79) = v63;
        }
        else
        {
          OUTLINED_FUNCTION_131_1(v168 + 8 * (v79 >> 6));
          v86 = (_QWORD *)(v85 + 16 * v79);
          *v86 = v167;
          v86[1] = v57;
          *(_QWORD *)(*(_QWORD *)(v83 + 56) + 8 * v79) = v63;
          OUTLINED_FUNCTION_50_5();
          if (v88)
            goto LABEL_61;
          *(_QWORD *)(v83 + 16) = v87;
          OUTLINED_FUNCTION_315();
        }
        v170 = v83;
        OUTLINED_FUNCTION_173();
        swift_bridgeObjectRelease();
        v56 = v154;
        sub_240BE10B8((uint64_t)v154, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
        v52 += v151;
        --v49;
        v26 = v165;
        v12 = v166;
        v54 = v161;
        v55 = v155;
      }
      while (v49);
      v167 = v3;
      OUTLINED_FUNCTION_115_2();
      v2 = v147;
      v36 = v146;
    }
    else
    {
      v167 = v1;
      swift_bridgeObjectRelease();
    }
    v89 = (uint64_t)v149;
    MLProgram.Block.operations.getter();
    v92 = v163;
    v91 = (uint64_t)v164;
    v153 = *(_QWORD *)(v90 + 16);
    if (v153)
    {
      v93 = 0;
      OUTLINED_FUNCTION_83_2();
      v152 = v94 + v95;
      v96 = v150;
      v151 = v94;
      while (1)
      {
        if (v93 >= *(_QWORD *)(v94 + 16))
          goto LABEL_60;
        v97 = *(_QWORD *)(v148 + 72);
        v155 = v93;
        sub_240BE0BF4(v152 + v97 * v93, v2, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
        v98 = *(char **)(v2 + 24);
        v99 = *((_QWORD *)v98 + 2);
        if (v99)
        {
          v169 = MEMORY[0x24BEE4AF8];
          OUTLINED_FUNCTION_315();
          sub_240BF095C();
          v96 = v150;
          v100 = v169;
          OUTLINED_FUNCTION_65_2();
          OUTLINED_FUNCTION_51_2();
          v161 = (uint64_t)v98;
          v102 = (uint64_t)&v98[v101];
          v104 = *(_QWORD *)(v103 + 72);
          do
          {
            sub_240BE0BF4(v102, (uint64_t)v36, type metadata accessor for Proto_MILSpec_NamedValueType);
            v169 = v100;
            v105 = (uint64_t)v36;
            v106 = *(_QWORD *)(v100 + 16);
            if (v106 >= *(_QWORD *)(v100 + 24) >> 1)
            {
              sub_240BF095C();
              v96 = v150;
              v100 = v169;
            }
            *(_QWORD *)(v100 + 16) = v106 + 1;
            OUTLINED_FUNCTION_83_2();
            sub_240BE0B90(v105, v100 + v107 + *(_QWORD *)(v96 + 72) * v106, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
            v102 += v104;
            --v99;
            v36 = (char *)v105;
          }
          while (v99);
          swift_bridgeObjectRelease();
          v92 = v163;
          v91 = (uint64_t)v164;
          v89 = (uint64_t)v149;
          v12 = v166;
        }
        else
        {
          v100 = MEMORY[0x24BEE4AF8];
        }
        v108 = *(_QWORD *)(v100 + 16);
        if (v108)
          break;
        OUTLINED_FUNCTION_5_4();
LABEL_54:
        v93 = v155 + 1;
        v2 = v147;
        sub_240BE10B8(v147, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Operation);
        v36 = v146;
        v94 = v151;
        if (v93 == v153)
          goto LABEL_55;
      }
      OUTLINED_FUNCTION_83_2();
      v154 = (uint64_t *)v100;
      v110 = v100 + v109;
      v161 = *(_QWORD *)(v96 + 72);
      v111 = v162;
      v112 = v167;
      while (1)
      {
        sub_240BE0BF4(v110, (uint64_t)v111, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
        v113 = v111[1];
        v167 = *v111;
        v114 = OUTLINED_FUNCTION_65_2();
        sub_240C5E950((uint64_t)v111 + *(int *)(v114 + 24), v91, &qword_25708C098);
        OUTLINED_FUNCTION_7_1(v91, 1, v26);
        if (v47)
        {
          OUTLINED_FUNCTION_63_1();
          _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
          v115 = *(int *)(v26 + 20);
          if (qword_25708B0D0 != -1)
            swift_once();
          *(_QWORD *)(v92 + v115) = qword_25708EA38;
          swift_retain();
          sub_240BE0B68(v91, &qword_25708C098);
        }
        else
        {
          sub_240BE0B90(v91, v92, type metadata accessor for Proto_MILSpec_ValueType);
          OUTLINED_FUNCTION_63_1();
        }
        v116 = *(_QWORD *)(v92 + *(int *)(v26 + 20))
             + OBJC_IVAR____TtCV20MLModelSpecification23Proto_MILSpec_ValueTypeP33_332B47BD95040FAA9FC0D6990ECE156813_StorageClass__type;
        OUTLINED_FUNCTION_80_2();
        v117 = v116;
        v118 = v160;
        sub_240C5E950(v117, v160, &qword_25708BF68);
        OUTLINED_FUNCTION_7_1(v118, 1, v12);
        if (!v47)
        {
          sub_240BE10B8(v92, type metadata accessor for Proto_MILSpec_ValueType);
          OUTLINED_FUNCTION_126_1();
          OUTLINED_FUNCTION_66_3(v138, v139);
          OUTLINED_FUNCTION_66_3(v118, v159);
          v140 = (char *)&loc_240C63A14 + *((int *)qword_240C63C38 + OUTLINED_FUNCTION_111_2());
          __asm { BR              X9 }
        }
        OUTLINED_FUNCTION_13_5(v118);
        v119 = v92;
        v120 = OUTLINED_FUNCTION_31_6();
        v122 = v121;
        v123 = v157;
        v124 = MEMORY[0x24BEE4AF8];
        *(_QWORD *)(v157 + 24) = MEMORY[0x24BEE4AF8];
        OUTLINED_FUNCTION_51_5();
        v125 = sub_240F1CC48();
        OUTLINED_FUNCTION_110_2(v125);
        OUTLINED_FUNCTION_109_2();
        OUTLINED_FUNCTION_76_2();
        sub_240C62318();
        OUTLINED_FUNCTION_133_2();
        *(_QWORD *)(v123 + 24) = v124;
        sub_240BE0B90(v123, v122, type metadata accessor for MLProgram.ValueType.TensorParameters);
        sub_240BE10B8(v119, type metadata accessor for Proto_MILSpec_ValueType);
        v126 = v170;
        OUTLINED_FUNCTION_76_1();
        v169 = v126;
        OUTLINED_FUNCTION_85_2(v167);
        OUTLINED_FUNCTION_53_6();
        if (__OFADD__(v129, v130))
          break;
        v131 = v127;
        v132 = v128;
        __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBC0);
        v133 = sub_240F1CE34();
        v26 = v165;
        v12 = v166;
        if ((v133 & 1) != 0)
        {
          v134 = OUTLINED_FUNCTION_85_2(v167);
          if ((v132 & 1) != (v135 & 1))
            goto LABEL_62;
          v131 = v134;
        }
        v136 = v169;
        if ((v132 & 1) != 0)
        {
          v137 = *(_QWORD *)(v169 + 56);
          swift_release();
          *(_QWORD *)(v137 + 8 * v131) = v120;
        }
        else
        {
          OUTLINED_FUNCTION_131_1(v169 + 8 * (v131 >> 6));
          v142 = (_QWORD *)(v141 + 16 * v131);
          *v142 = v167;
          v142[1] = v113;
          *(_QWORD *)(*(_QWORD *)(v136 + 56) + 8 * v131) = v120;
          OUTLINED_FUNCTION_50_5();
          if (v88)
            goto LABEL_58;
          *(_QWORD *)(v136 + 16) = v143;
          OUTLINED_FUNCTION_63_1();
        }
        v170 = v136;
        OUTLINED_FUNCTION_12_2();
        swift_bridgeObjectRelease();
        v111 = v162;
        sub_240BE10B8((uint64_t)v162, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
        v110 += v161;
        --v108;
        v92 = v163;
        v91 = (uint64_t)v164;
        if (!v108)
        {
          v167 = v112;
          OUTLINED_FUNCTION_115_2();
          v96 = v150;
          v89 = (uint64_t)v149;
          goto LABEL_54;
        }
      }
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
LABEL_61:
      __break(1u);
LABEL_62:
      sub_240F1CEF4();
      __break(1u);
      JUMPOUT(0x240C63C28);
    }
LABEL_55:
    swift_bridgeObjectRelease();
    v144 = (_QWORD *)OUTLINED_FUNCTION_120_2();
    sub_240C625D8(v144, &v170);
    swift_bridgeObjectRelease();
    sub_240BE10B8(v89, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_1();
}

void MLProgram.Function.blockSpecializations.getter()
{
  OUTLINED_FUNCTION_47_6();
  OUTLINED_FUNCTION_122_1();
}

uint64_t sub_240C63C80@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t result;
  int v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_24_1();
  v8 = (uint64_t *)(v7 - v6);
  result = sub_240F1A2A8(a1);
  if ((v11 & 1) != 0)
    goto LABEL_7;
  if (*(_DWORD *)(a1 + 36) != v10)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
    return __swift_storeEnumTagSinglePayload((uint64_t)a2, 1, 1, v4);
  v12 = (uint64_t)v8 + *(int *)(v4 + 48);
  v13 = sub_240CB73F8(v12, result, v10, 0, a1);
  *v8 = v13;
  v8[1] = v14;
  *a2 = v13;
  a2[1] = v14;
  sub_240BE0BF4(v12, (uint64_t)a2 + *(int *)(v4 + 48), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
  OUTLINED_FUNCTION_120_2();
  sub_240BE0B68((uint64_t)v8, &qword_25708CBB8);
  return OUTLINED_FUNCTION_14_5((uint64_t)a2, 0);
}

void MLProgram.Function.opset.getter()
{
  OUTLINED_FUNCTION_329();
  OUTLINED_FUNCTION_44();
}

void sub_240C63DCC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  MLProgram.Function.opset.setter(v1, v2);
}

void MLProgram.Function.opset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_156();
}

void MLProgram.Function.opset.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 16);
  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C63E6C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v4;
    *(_QWORD *)(v3 + 16) = v2;
    OUTLINED_FUNCTION_156();
  }
}

void sub_240C63EBC()
{
  swift_bridgeObjectRetain();
  MLProgram.Function.blockSpecializations.setter();
}

void MLProgram.Function.blockSpecializations.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C66F00();
  v2 = v1;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_147_0();
  *(_QWORD *)(v0 + 24) = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Function.blockSpecializations.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_47_6();
  a1[2] = v2;
  *a1 = v4;
  OUTLINED_FUNCTION_12_1();
}

void sub_240C63F8C(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    sub_240C66F00();
    v4 = v3;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 24) = v4;
    OUTLINED_FUNCTION_31_4();
  }
  else
  {
    sub_240C66F00();
    v6 = v5;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 24) = v6;
    OUTLINED_FUNCTION_12_1();
  }
}

void MLProgram.Function.attributes.getter()
{
  OUTLINED_FUNCTION_47_6();
  OUTLINED_FUNCTION_122_1();
}

void sub_240C64060()
{
  swift_bridgeObjectRetain();
  MLProgram.Function.attributes.setter();
}

void MLProgram.Function.attributes.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_240C66F00();
  v2 = v1;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_84_1();
  *(_QWORD *)(v0 + 32) = v2;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.Function.attributes.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_47_6();
  a1[2] = v2;
  *a1 = v4;
  OUTLINED_FUNCTION_12_1();
}

void sub_240C64130(uint64_t a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(a1 + 8);
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    sub_240C66F00();
    v4 = v3;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 32) = v4;
    OUTLINED_FUNCTION_31_4();
  }
  else
  {
    sub_240C66F00();
    v6 = v5;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 32) = v6;
    OUTLINED_FUNCTION_12_1();
  }
}

void sub_240C641CC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  int64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  unint64_t v81;
  _QWORD *v82;
  unint64_t v83;
  char v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  char v88;
  uint64_t v89;
  uint64_t v90;
  unint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  _QWORD *v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char v103;
  char v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t *v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  _QWORD *v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  unint64_t v121;
  _QWORD *v122;
  unint64_t v123;
  char v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  char v128;
  uint64_t v129;
  unint64_t v130;
  _QWORD *v131;
  _QWORD *v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  __int128 v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t *v140;
  uint64_t *v141;
  uint64_t *v142;
  _QWORD *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t *v146;
  uint64_t *v147;
  uint64_t *v148;
  _QWORD *v149;
  uint64_t v150;
  unint64_t v151;
  unint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  uint64_t v156;

  OUTLINED_FUNCTION_22();
  v144 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  v143 = (uint64_t *)((char *)&v134 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_38_0();
  v142 = (uint64_t *)v5;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_0();
  v141 = v7;
  OUTLINED_FUNCTION_23_0();
  v9 = MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_17_12(v9, v10, v11, v12, v13, v14, v15, v16, v134);
  v150 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_85();
  v149 = v18;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v19);
  OUTLINED_FUNCTION_38_0();
  v148 = (uint64_t *)v20;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_38_0();
  v147 = v22;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_386();
  v146 = v24;
  v25 = OUTLINED_FUNCTION_101();
  type metadata accessor for MLProgram.ValueType.DictionaryParameters(v25);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v26);
  OUTLINED_FUNCTION_2_0();
  v28 = OUTLINED_FUNCTION_19_0(v27);
  type metadata accessor for MLProgram.ValueType.TupleParameters(v28);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v29);
  v31 = OUTLINED_FUNCTION_19_0((uint64_t)&v134 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0));
  type metadata accessor for MLProgram.ValueType.ListParameters(v31);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v32);
  OUTLINED_FUNCTION_2_0();
  v34 = OUTLINED_FUNCTION_19_0(v33);
  type metadata accessor for MLProgram.ValueType.TensorParameters(v34);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v35);
  OUTLINED_FUNCTION_2_0();
  OUTLINED_FUNCTION_81_1(v36);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C098);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v37);
  v38 = OUTLINED_FUNCTION_90();
  v138 = type metadata accessor for Proto_MILSpec_ValueType(v38);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v39);
  OUTLINED_FUNCTION_24_1();
  v42 = v41 - v40;
  v43 = type metadata accessor for MLProgram.NamedValueType();
  v44 = *(_QWORD *)(v43 - 8);
  MEMORY[0x24BDAC7A8](v43);
  OUTLINED_FUNCTION_15_10(v45, v134);
  MLProgram.Function.inputs.getter();
  v47 = v46;
  v48 = *(_QWORD *)(v46 + 16);
  v135 = v0;
  if (v48)
  {
    v49 = (_QWORD *)OUTLINED_FUNCTION_72_4();
    OUTLINED_FUNCTION_127_2(v49, v48);
    OUTLINED_FUNCTION_83_2();
    v134 = v47;
    v145 = *(_QWORD *)(v44 + 72);
    v136 = xmmword_240F1DA30;
    v51 = v138;
    v137 = v1;
    v151 = v42;
    v52 = v153;
    sub_240BE0BF4(v47 + v50, v153, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.NamedValueType);
    OUTLINED_FUNCTION_54_6();
    swift_bridgeObjectRetain();
    sub_240F1CCE4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_6();
    v152 = v155;
    v53 = OUTLINED_FUNCTION_65_2();
    sub_240C5E950(v52 + *(int *)(v53 + 24), v1, &qword_25708C098);
    OUTLINED_FUNCTION_7_1(v1, 1, v51);
    if (v54)
    {
      _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
      v55 = *(int *)(v51 + 20);
      if (qword_25708B0D0 != -1)
        swift_once();
      *(_QWORD *)(v42 + v55) = qword_25708EA38;
      swift_retain();
      sub_240BE0B68(v1, &qword_25708C098);
    }
    else
    {
      sub_240BE0B90(v1, v42, type metadata accessor for Proto_MILSpec_ValueType);
    }
    sub_240D34658();
    __asm { BR              X9 }
  }
  swift_bridgeObjectRelease();
  v139 = MEMORY[0x24BEE4AF8];
  sub_240C66C84();
  v57 = v56;
  v58 = *(_QWORD *)(v56 + 16);
  if (v58)
  {
    v138 = 0;
    v59 = (_QWORD *)OUTLINED_FUNCTION_72_4();
    OUTLINED_FUNCTION_127_2(v59, v58);
    v60 = sub_240F1A2A8(v57);
    v62 = v61;
    v64 = v63 & 1;
    v65 = v156;
    v145 = v57;
    do
    {
      v153 = v58;
      v66 = v150;
      v67 = v146;
      v68 = (uint64_t)v146 + *(int *)(v150 + 48);
      LODWORD(v152) = v64 & 1;
      v69 = sub_240CB73F8(v68, v60, v62, v64 & 1, v57);
      *v67 = v69;
      v67[1] = v70;
      v71 = (uint64_t)v147;
      *v147 = v69;
      *(_QWORD *)(v71 + 8) = v70;
      sub_240BE0BF4(v68, v71 + *(int *)(v66 + 48), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
      v72 = v148;
      sub_240C67744(v71, (uint64_t)v148, &qword_25708CBB8);
      OUTLINED_FUNCTION_329();
      OUTLINED_FUNCTION_70_0((uint64_t)v67);
      OUTLINED_FUNCTION_54_6();
      v73 = *v72;
      v74 = v72[1];
      sub_240F1CCE4();
      OUTLINED_FUNCTION_43_6();
      v75 = v154;
      v151 = v155;
      v76 = *(int *)(v66 + 48);
      v77 = v149;
      *v149 = v73;
      v77[1] = v74;
      OUTLINED_FUNCTION_14((uint64_t)v72 + v76, (uint64_t)v77 + v76);
      sub_240CB3E84();
      v79 = v78;
      OUTLINED_FUNCTION_112_2();
      OUTLINED_FUNCTION_70_0((uint64_t)v72);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_20_7(*(_QWORD *)(v65 + 16));
        v65 = v156;
      }
      v81 = *(_QWORD *)(v65 + 16);
      v80 = *(_QWORD *)(v65 + 24);
      v57 = v145;
      if (v81 >= v80 >> 1)
      {
        OUTLINED_FUNCTION_48_5((_QWORD *)(v80 > 1), v81 + 1);
        v65 = v156;
      }
      *(_QWORD *)(v65 + 16) = v81 + 1;
      v82 = (_QWORD *)(v65 + 24 * v81);
      v83 = v151;
      v82[4] = v75;
      v82[5] = v83;
      v82[6] = v79;
      v84 = v152;
      v85 = sub_240CB72FC(v60, v62, v152, v57);
      v87 = v86;
      v64 = v88 & 1;
      sub_240C67718(v60, v62, v84);
      v60 = v85;
      v62 = v87;
      v58 = v153 - 1;
    }
    while (v153 != 1);
    sub_240C67718(v85, v87, v64);
    swift_release();
  }
  else
  {
    swift_release();
    v65 = MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C088);
  v89 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v89 + 16) = xmmword_240F1DA40;
  *(_QWORD *)(v89 + 32) = 0x746573706FLL;
  *(_QWORD *)(v89 + 40) = 0xE500000000000000;
  v90 = OUTLINED_FUNCTION_113();
  v154 = 34;
  v155 = 0xE100000000000000;
  OUTLINED_FUNCTION_20_1();
  sub_240F1CCE4();
  OUTLINED_FUNCTION_5_4();
  OUTLINED_FUNCTION_43_6();
  v91 = v155;
  *(_QWORD *)(v90 + 16) = v154;
  *(_QWORD *)(v90 + 24) = v91;
  *(_QWORD *)(v89 + 48) = v90;
  *(_QWORD *)(v89 + 56) = 0x737475706E69;
  *(_QWORD *)(v89 + 64) = 0xE600000000000000;
  v92 = OUTLINED_FUNCTION_113();
  *(_QWORD *)(v92 + 16) = v139;
  *(_QWORD *)(v89 + 72) = v92 | 0xC000000000000000;
  *(_QWORD *)(v89 + 80) = 0x736B636F6C62;
  *(_QWORD *)(v89 + 88) = 0xE600000000000000;
  v93 = OUTLINED_FUNCTION_113();
  *(_QWORD *)(v93 + 16) = v65;
  *(_QWORD *)(v89 + 96) = v93 | 0xC000000000000000;
  OUTLINED_FUNCTION_129_2();
  v95 = *(_QWORD *)(v94 + 16);
  swift_release();
  if (v95)
  {
    OUTLINED_FUNCTION_129_2();
    v97 = v96;
    v98 = *(_QWORD *)(v96 + 16);
    if (v98)
    {
      v149 = (_QWORD *)v89;
      v99 = (_QWORD *)OUTLINED_FUNCTION_72_4();
      OUTLINED_FUNCTION_127_2(v99, v98);
      v100 = sub_240F1A2A8(v97);
      v102 = v101;
      v104 = v103 & 1;
      v105 = v156;
      v150 = v97;
      do
      {
        v153 = v98;
        v106 = v144;
        v107 = v140;
        v108 = (uint64_t)v140 + *(int *)(v144 + 48);
        LODWORD(v152) = v104 & 1;
        v109 = sub_240CB737C(v108, v100, v102, v104 & 1, v97);
        *v107 = v109;
        v107[1] = v110;
        v111 = (uint64_t)v141;
        *v141 = v109;
        *(_QWORD *)(v111 + 8) = v110;
        sub_240BE0BF4(v108, v111 + *(int *)(v106 + 48), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v112 = v142;
        sub_240C67744(v111, (uint64_t)v142, &qword_25708CBF8);
        OUTLINED_FUNCTION_315();
        OUTLINED_FUNCTION_13_5((uint64_t)v107);
        OUTLINED_FUNCTION_54_6();
        v113 = *v112;
        v114 = v112[1];
        sub_240F1CCE4();
        OUTLINED_FUNCTION_43_6();
        v115 = v154;
        v151 = v155;
        v116 = *(int *)(v106 + 48);
        v117 = v143;
        v118 = (uint64_t)v143 + v116;
        *v143 = v113;
        v117[1] = v114;
        sub_240BE0BF4((uint64_t)v112 + v116, (uint64_t)v117 + v116, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v119 = sub_240DD12C8();
        sub_240BE10B8(v118, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        OUTLINED_FUNCTION_13_5((uint64_t)v112);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_20_7(*(_QWORD *)(v105 + 16));
          v105 = v156;
        }
        v121 = *(_QWORD *)(v105 + 16);
        v120 = *(_QWORD *)(v105 + 24);
        v97 = v150;
        if (v121 >= v120 >> 1)
        {
          OUTLINED_FUNCTION_48_5((_QWORD *)(v120 > 1), v121 + 1);
          v105 = v156;
        }
        *(_QWORD *)(v105 + 16) = v121 + 1;
        v122 = (_QWORD *)(v105 + 24 * v121);
        v123 = v151;
        v122[4] = v115;
        v122[5] = v123;
        v122[6] = v119;
        v124 = v152;
        v125 = sub_240CB72FC(v100, v102, v152, v97);
        v127 = v126;
        v104 = v128 & 1;
        sub_240C67718(v100, v102, v124);
        v100 = v125;
        v102 = v127;
        v98 = v153 - 1;
      }
      while (v153 != 1);
      sub_240C67718(v125, v127, v104);
      swift_release();
      v89 = (uint64_t)v149;
    }
    else
    {
      swift_release();
      v105 = MEMORY[0x24BEE4AF8];
    }
    v129 = OUTLINED_FUNCTION_113();
    *(_QWORD *)(v129 + 16) = v105;
    v130 = *(_QWORD *)(v89 + 16);
    if (v130 >= *(_QWORD *)(v89 + 24) >> 1)
    {
      sub_240C02C78();
      v89 = v133;
    }
    *(_QWORD *)(v89 + 16) = v130 + 1;
    v131 = (_QWORD *)(v89 + 24 * v130);
    v131[4] = 0x7475626972747461;
    v131[5] = 0xEA00000000007365;
    v131[6] = v129 | 0xC000000000000000;
  }
  v132 = (_QWORD *)OUTLINED_FUNCTION_113();
  v132[2] = 0x6E6F6974636E7546;
  v132[3] = 0xE800000000000000;
  v132[4] = v89;
  OUTLINED_FUNCTION_1();
}

void MLProgram.Function.init()(_QWORD *a1@<X8>)
{
  *a1 = MEMORY[0x24BEE4AF8];
  a1[1] = 0;
  a1[2] = 0xE000000000000000;
  type metadata accessor for Proto_MILSpec_Block(0);
  a1[3] = OUTLINED_FUNCTION_78_2();
  OUTLINED_FUNCTION_51_5();
  a1[4] = OUTLINED_FUNCTION_78_2();
  type metadata accessor for Proto_MILSpec_Function(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  OUTLINED_FUNCTION_156();
}

uint64_t MLProgram.Function.weightsFileNames()()
{
  uint64_t v1;

  v1 = MEMORY[0x24BEE4B08];
  sub_240C64E18();
  return v1;
}

void sub_240C64E0C()
{
  sub_240C64E18();
}

void sub_240C64E18()
{
  uint64_t v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  int64_t i;
  BOOL v34;
  char v35;
  int64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  _QWORD *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t *v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  _QWORD *v101;
  uint64_t v102;
  unint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  char v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  int EnumCaseMultiPayload;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t (*v118)(uint64_t);
  uint64_t v119;
  uint64_t *v120;
  uint64_t v121;
  uint64_t v122;
  int64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  int64_t v138;
  void (*v139)(uint64_t, uint64_t);
  uint64_t v140;
  uint64_t v141;
  uint64_t v142;
  uint64_t v143;
  uint64_t v144;

  OUTLINED_FUNCTION_22();
  v139 = v1;
  v137 = v2;
  v4 = v3;
  v129 = OUTLINED_FUNCTION_132_2();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_2_0();
  v7 = OUTLINED_FUNCTION_19_0(v6);
  type metadata accessor for MLProgram.Value.BlobFileValue(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_2_0();
  v10 = OUTLINED_FUNCTION_19_0(v9);
  v125 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(v10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_85();
  v121 = v12;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_81_1(v14);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_2_0();
  v131 = v16;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v17);
  OUTLINED_FUNCTION_2_0();
  v128 = v18;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v19);
  v126 = OUTLINED_FUNCTION_29_6(v20, v119);
  v143 = *(_QWORD *)(v126 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v21);
  OUTLINED_FUNCTION_2_0();
  v142 = v22;
  v124 = OUTLINED_FUNCTION_51_5();
  v141 = *(_QWORD *)(v124 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v23);
  OUTLINED_FUNCTION_2_0();
  v140 = v24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v25);
  OUTLINED_FUNCTION_81();
  v130 = v4;
  sub_240C66C84();
  v27 = v26;
  v28 = 0;
  v29 = 1 << *(_BYTE *)(v26 + 32);
  v30 = -1;
  if (v29 < 64)
    v30 = ~(-1 << v29);
  v135 = v26 + 64;
  v31 = v30 & *(_QWORD *)(v26 + 64);
  v138 = (unint64_t)(v29 + 63) >> 6;
  if (!v31)
    goto LABEL_5;
LABEL_4:
  OUTLINED_FUNCTION_128_2();
  for (i = v32 | (v28 << 6); ; i = v44 + (v28 << 6))
  {
    v45 = (uint64_t *)(*(_QWORD *)(v27 + 48) + 16 * i);
    v46 = *v45;
    v47 = v45[1];
    OUTLINED_FUNCTION_213();
    sub_240C66C84();
    sub_240C6B828(v46, v47, v48, v0);
    swift_bridgeObjectRelease();
    swift_release();
    v49 = OUTLINED_FUNCTION_66_1();
    OUTLINED_FUNCTION_7_1(v0, 1, v49);
    if (v50)
      goto LABEL_112;
    v139(v0, v137);
    sub_240BE10B8(v0, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block);
    if (v31)
      goto LABEL_4;
LABEL_5:
    v34 = __OFADD__(v28++, 1);
    if (v34)
      goto LABEL_108;
    if (v28 >= v138)
      goto LABEL_32;
    if (!*(_QWORD *)(v135 + 8 * v28))
      break;
LABEL_24:
    OUTLINED_FUNCTION_92_1();
    v31 = v43 & v42;
  }
  OUTLINED_FUNCTION_95_2();
  if (v35 == v34)
    goto LABEL_32;
  OUTLINED_FUNCTION_94_2();
  if (v37)
    goto LABEL_23;
  OUTLINED_FUNCTION_95_2();
  if (v35 == v34)
    goto LABEL_32;
  OUTLINED_FUNCTION_94_2();
  if (v38)
    goto LABEL_23;
  OUTLINED_FUNCTION_95_2();
  if (v35 == v34)
    goto LABEL_32;
  OUTLINED_FUNCTION_94_2();
  if (v39)
    goto LABEL_23;
  OUTLINED_FUNCTION_95_2();
  if (v35 == v34)
    goto LABEL_32;
  OUTLINED_FUNCTION_94_2();
  if (v40)
    goto LABEL_23;
  OUTLINED_FUNCTION_95_2();
  if (v35 == v34)
    goto LABEL_32;
  OUTLINED_FUNCTION_94_2();
  if (v41)
  {
LABEL_23:
    v28 = v36;
    goto LABEL_24;
  }
  while (1)
  {
    v28 = v36 + 1;
    if (__OFADD__(v36, 1))
      goto LABEL_110;
    if (v28 >= v138)
      break;
    ++v36;
    if (*(_QWORD *)(v135 + 8 * v28))
      goto LABEL_24;
  }
LABEL_32:
  swift_release();
  sub_240C66C84();
  v51 = 0;
  OUTLINED_FUNCTION_13_8();
  v54 = v53 & v52;
  v123 = (unint64_t)(v55 + 63) >> 6;
  if ((v53 & v52) == 0)
    goto LABEL_34;
LABEL_33:
  v134 = (v54 - 1) & v54;
  v136 = v51;
  while (2)
  {
    OUTLINED_FUNCTION_48_3();
    v132 = v70;
    v133 = v69;
    v71 = *(_QWORD *)(v130 + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v72 = sub_240F1CE64();
    v73 = (_QWORD *)v72;
    v74 = 0;
    v75 = 1 << *(_BYTE *)(v71 + 32);
    v76 = *(_QWORD *)(v71 + 64);
    if (v75 < 64)
      v77 = ~(-1 << v75);
    else
      v77 = -1;
    v78 = v77 & v76;
    v79 = v72 + 64;
    if ((v77 & v76) != 0)
    {
LABEL_60:
      OUTLINED_FUNCTION_49_5();
      v81 = v80 | (v74 << 6);
      goto LABEL_83;
    }
    while (2)
    {
      if (__OFADD__(v74, 1))
      {
        __break(1u);
        goto LABEL_107;
      }
      OUTLINED_FUNCTION_130_1();
      if (v35 == v34)
        goto LABEL_86;
      OUTLINED_FUNCTION_138_1();
      v74 = v82;
      if (v83)
        goto LABEL_82;
      v74 = v82 + 1;
      OUTLINED_FUNCTION_105_2();
      if (v35 == v34)
        goto LABEL_86;
      OUTLINED_FUNCTION_139_1();
      if (v85)
        goto LABEL_82;
      v74 = v84 + 2;
      OUTLINED_FUNCTION_105_2();
      if (v35 == v34)
        goto LABEL_86;
      OUTLINED_FUNCTION_139_1();
      if (v87)
        goto LABEL_82;
      v74 = v86 + 3;
      OUTLINED_FUNCTION_105_2();
      if (v35 == v34)
        goto LABEL_86;
      OUTLINED_FUNCTION_139_1();
      if (v88)
      {
LABEL_82:
        OUTLINED_FUNCTION_51_3();
        v78 = v94 & v93;
        v81 = v95 + (v74 << 6);
LABEL_83:
        v96 = (uint64_t *)(*(_QWORD *)(v71 + 48) + 16 * v81);
        v98 = *v96;
        v97 = v96[1];
        sub_240BE0BF4(*(_QWORD *)(v71 + 56) + *(_QWORD *)(v141 + 72) * v81, v140, type metadata accessor for Proto_MILSpec_Value);
        sub_240BE0B90(v140, v142, type metadata accessor for Proto_MILSpec_Value);
        OUTLINED_FUNCTION_135_1();
        *(_QWORD *)(v79 + v99) |= v100;
        v101 = (_QWORD *)(v73[6] + 16 * v81);
        *v101 = v98;
        v101[1] = v97;
        sub_240BE0B90(v142, v73[7] + *(_QWORD *)(v143 + 72) * v81, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        OUTLINED_FUNCTION_50_5();
        if (v34)
        {
          __break(1u);
          goto LABEL_105;
        }
        v73[2] = v102;
        swift_bridgeObjectRetain();
        if (v78)
          goto LABEL_60;
        continue;
      }
      break;
    }
    OUTLINED_FUNCTION_130_1();
    if (v35 == v34)
    {
LABEL_86:
      if (v73[2])
      {
        swift_bridgeObjectRetain();
        v103 = sub_240C66A40(v132, v133);
        v105 = v128;
        v104 = v129;
        v106 = v126;
        v107 = v127;
        if ((v108 & 1) != 0)
        {
          sub_240BE0BF4(v73[7] + *(_QWORD *)(v143 + 72) * v103, v127, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
          v109 = v127;
          v110 = 0;
        }
        else
        {
          v109 = v127;
          v110 = 1;
        }
        OUTLINED_FUNCTION_14_5(v109, v110);
        swift_bridgeObjectRelease();
      }
      else
      {
        v106 = v126;
        v107 = v127;
        OUTLINED_FUNCTION_14_5(v127, 1);
        v105 = v128;
        v104 = v129;
      }
      swift_release();
      OUTLINED_FUNCTION_7_1(v107, 1, v106);
      if (v50)
        goto LABEL_113;
      sub_240C5E950(v107 + *(int *)(v124 + 20), v131, &qword_25708CB50);
      v111 = 1;
      OUTLINED_FUNCTION_7_1(v131, 1, v125);
      if (!v50)
      {
        OUTLINED_FUNCTION_126_1();
        OUTLINED_FUNCTION_141_1(v112, v113);
        sub_240BE0BF4(v131, v121, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
        sub_240C77BEC(v121);
        sub_240BE10B8(v131, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
        v111 = 0;
      }
      __swift_storeEnumTagSinglePayload(v105, v111, 1, v104);
      OUTLINED_FUNCTION_7_1(v105, 1, v104);
      if (v50)
      {
        sub_240BE0B68(v105, &qword_25708CB10);
        v54 = v134;
        v51 = v136;
      }
      else
      {
        OUTLINED_FUNCTION_113_2(v105);
        EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
        if (EnumCaseMultiPayload == 1)
        {
          OUTLINED_FUNCTION_141_1(v122, (uint64_t)v120);
          v115 = *v120;
          v116 = v120[1];
          OUTLINED_FUNCTION_329();
          sub_240C6FB8C(&v144, v115, v116);
          swift_bridgeObjectRelease();
          v117 = (uint64_t)v120;
          v118 = type metadata accessor for MLProgram.Value.BlobFileValue;
        }
        else
        {
          v117 = v122;
          v118 = type metadata accessor for MLProgram.Value.Representation;
        }
        sub_240BE10B8(v117, v118);
        v54 = v134;
        v51 = v136;
        sub_240BE10B8(v105, type metadata accessor for MLProgram.Value.Representation);
      }
      sub_240BE10B8(v107, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      if (!v54)
      {
LABEL_34:
        if (__OFADD__(v51, 1))
          goto LABEL_109;
        if (v51 + 1 >= v123)
          goto LABEL_105;
        OUTLINED_FUNCTION_136_1();
        if (!v56)
        {
          OUTLINED_FUNCTION_23_5();
          if (v35 == v34)
          {
LABEL_105:
            swift_release();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_30_7();
          if (!v57)
          {
            OUTLINED_FUNCTION_23_5();
            if (v35 == v34)
              goto LABEL_105;
            OUTLINED_FUNCTION_30_7();
            if (!v58)
            {
              OUTLINED_FUNCTION_23_5();
              if (v35 == v34)
                goto LABEL_105;
              OUTLINED_FUNCTION_30_7();
              if (!v59)
              {
                OUTLINED_FUNCTION_23_5();
                if (v35 == v34)
                  goto LABEL_105;
                OUTLINED_FUNCTION_30_7();
                if (!v61)
                {
                  if (v60 + 5 >= v123)
                    goto LABEL_105;
                  OUTLINED_FUNCTION_136_1();
                  if (!v63)
                  {
                    while (!__OFADD__(v62, 1))
                    {
                      OUTLINED_FUNCTION_23_5();
                      if (v35 == v34)
                        goto LABEL_105;
                      OUTLINED_FUNCTION_30_7();
                      v62 = v64 + 1;
                      if (v65)
                        goto LABEL_55;
                    }
                    goto LABEL_111;
                  }
                }
              }
            }
          }
        }
LABEL_55:
        OUTLINED_FUNCTION_51_3();
        v134 = v67 & v66;
        v136 = v68;
        continue;
      }
      goto LABEL_33;
    }
    break;
  }
  OUTLINED_FUNCTION_138_1();
  if (v90)
  {
    v74 = v89;
    goto LABEL_82;
  }
  while (1)
  {
    v74 = v89 + 1;
    if (__OFADD__(v89, 1))
      break;
    OUTLINED_FUNCTION_105_2();
    if (v35 == v34)
      goto LABEL_86;
    OUTLINED_FUNCTION_139_1();
    v89 = v91 + 1;
    if (v92)
      goto LABEL_82;
  }
LABEL_107:
  __break(1u);
LABEL_108:
  __break(1u);
LABEL_109:
  __break(1u);
LABEL_110:
  __break(1u);
LABEL_111:
  __break(1u);
LABEL_112:
  __break(1u);
LABEL_113:
  __break(1u);
}

Swift::Void __swiftcall MLProgram.Function.updateWeightsFileName(to:)(Swift::String to)
{
  swift_bridgeObjectRetain();
  sub_240C65718();
  OUTLINED_FUNCTION_156();
}

void sub_240C65704()
{
  sub_240C65718();
}

void sub_240C65718()
{
  void (*v0)(uint64_t, uint64_t, uint64_t);
  void (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)();
  uint64_t (*v27)(uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)();
  uint64_t (*v42)(uint64_t);
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  char v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unint64_t v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  _QWORD *v92;
  uint64_t v93;
  unint64_t v94;
  char v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  void (*v114)(uint64_t, uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  void (*v124)(uint64_t, uint64_t, uint64_t);
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  int64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;

  OUTLINED_FUNCTION_22();
  v114 = v0;
  v124 = v1;
  v3 = v2;
  v128 = v4;
  v129 = v2;
  v6 = v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_85();
  v116 = v8;
  OUTLINED_FUNCTION_23_0();
  v10 = MEMORY[0x24BDAC7A8](v9);
  OUTLINED_FUNCTION_17_12(v10, v11, v12, v13, v14, v15, v16, v17, v110);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v18);
  v138 = *(_QWORD *)(OUTLINED_FUNCTION_29_6(v19, v111) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v20);
  v136 = *(_QWORD *)(OUTLINED_FUNCTION_28_6(v21, v112) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v22);
  OUTLINED_FUNCTION_15_10(v23, v113);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v24);
  OUTLINED_FUNCTION_2_0();
  v126 = v25;
  v130 = v6;
  OUTLINED_FUNCTION_123_2();
  v26 = type metadata accessor for MLProgram.Block;
  v27 = type metadata accessor for Proto_MILSpec_Block;
  v28 = 0;
  sub_240C66C84();
  OUTLINED_FUNCTION_71_2();
  v120 = v29;
  v127 = v30;
  OUTLINED_FUNCTION_18_5();
  v122 = v32;
  if (!v33)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_60_2();
  while (1)
  {
    v40 = *(_QWORD *)(*(_QWORD *)(v127 + 48) + 16 * v34);
    OUTLINED_FUNCTION_20_1();
    v41 = v26;
    v42 = v27;
    sub_240C66C84();
    v44 = v43;
    OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_76_1();
    v139 = v44;
    OUTLINED_FUNCTION_20_1();
    OUTLINED_FUNCTION_73_3(v40);
    OUTLINED_FUNCTION_53_6();
    v3 = v47 + v48;
    if (__OFADD__(v47, v48))
      goto LABEL_98;
    v49 = v45;
    v50 = v46;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBF0);
    if ((sub_240F1CE34() & 1) != 0)
    {
      v51 = OUTLINED_FUNCTION_73_3(v40);
      if ((v50 & 1) != (v52 & 1))
        goto LABEL_107;
      v49 = v51;
    }
    if ((v50 & 1) == 0)
      goto LABEL_105;
    v53 = *(_QWORD *)(v44 + 56);
    v54 = v53 + *(_QWORD *)(*(_QWORD *)(OUTLINED_FUNCTION_66_1() - 8) + 72) * v49;
    v26 = v41;
    OUTLINED_FUNCTION_66_3(v54, v126);
    OUTLINED_FUNCTION_14_5(v126, 0);
    OUTLINED_FUNCTION_315();
    v124(v126, v128, v129);
    OUTLINED_FUNCTION_75_2();
    sub_240C6F7C4();
    sub_240BE0B68(v126, &qword_25708CBE8);
    OUTLINED_FUNCTION_5_4();
    v3 = v139;
    OUTLINED_FUNCTION_5_4();
    OUTLINED_FUNCTION_5_4();
    v27 = v42;
    sub_240C66F00();
    v56 = v55;
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_116_1();
    *(_QWORD *)(v139 + 24) = v56;
    v31 = v133;
    if (v131)
      goto LABEL_2;
LABEL_3:
    v35 = __OFADD__(v31, 1);
    v36 = v31 + 1;
    if (v35)
      goto LABEL_100;
    if (v36 >= v122)
      goto LABEL_33;
    v37 = *(_QWORD *)(v120 + 8 * v36);
    if (!v37)
    {
      OUTLINED_FUNCTION_84_2();
      if (v38 == v35)
        goto LABEL_33;
      OUTLINED_FUNCTION_89_1();
      if (!v37)
      {
        OUTLINED_FUNCTION_84_2();
        if (v38 == v35)
          goto LABEL_33;
        OUTLINED_FUNCTION_89_1();
        if (!v37)
        {
          OUTLINED_FUNCTION_84_2();
          if (v38 == v35)
            goto LABEL_33;
          OUTLINED_FUNCTION_89_1();
          if (!v37)
          {
            OUTLINED_FUNCTION_84_2();
            if (v38 == v35)
              goto LABEL_33;
            OUTLINED_FUNCTION_89_1();
            if (!v37)
            {
              OUTLINED_FUNCTION_84_2();
              if (v38 == v35)
                goto LABEL_33;
              OUTLINED_FUNCTION_89_1();
              if (!v37)
                break;
            }
          }
        }
      }
    }
LABEL_21:
    OUTLINED_FUNCTION_61_3(v37);
  }
  while (1)
  {
    if (__OFADD__(v39, 1))
      goto LABEL_103;
    if (v39 + 1 >= v122)
      break;
    OUTLINED_FUNCTION_106_1();
    if (v37)
      goto LABEL_21;
  }
LABEL_33:
  swift_release();
  v57 = *(_QWORD *)(v130 + 32);
  sub_240C66C84();
  OUTLINED_FUNCTION_71_2();
  v115 = v58;
  OUTLINED_FUNCTION_3_13();
  v117 = v60;
  if (!v61)
    goto LABEL_35;
LABEL_34:
  v123 = v59;
  v125 = v28;
  OUTLINED_FUNCTION_98_1();
  v121 = v62;
  while (2)
  {
    OUTLINED_FUNCTION_48_3();
    v126 = v70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v71 = (_QWORD *)sub_240F1CE64();
    v72 = 0;
    v132 = v57 + 64;
    OUTLINED_FUNCTION_13_8();
    v75 = v74 & v73;
    v134 = (unint64_t)(v76 + 63) >> 6;
    v78 = v77 + 64;
    if ((v74 & v73) != 0)
    {
LABEL_53:
      OUTLINED_FUNCTION_49_5();
      v80 = v79 | (v72 << 6);
      goto LABEL_71;
    }
    while (1)
    {
      v35 = __OFADD__(v72++, 1);
      if (v35)
      {
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      if (v72 >= v134)
        goto LABEL_78;
      if (!*(_QWORD *)(v132 + 8 * v72))
        break;
LABEL_70:
      OUTLINED_FUNCTION_92_1();
      v75 = v87 & v86;
      v80 = v88 + (v72 << 6);
LABEL_71:
      v89 = (uint64_t *)(*(_QWORD *)(v57 + 48) + 16 * v80);
      v91 = *v89;
      v90 = v89[1];
      v3 = (uint64_t)type metadata accessor for Proto_MILSpec_Value;
      OUTLINED_FUNCTION_14(*(_QWORD *)(v57 + 56) + *(_QWORD *)(v136 + 72) * v80, v135);
      OUTLINED_FUNCTION_28(v135, v137);
      *(_QWORD *)(v78 + ((v80 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v80;
      v92 = (_QWORD *)(v71[6] + 16 * v80);
      *v92 = v91;
      v92[1] = v90;
      sub_240BE0B90(v137, v71[7] + *(_QWORD *)(v138 + 72) * v80, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      OUTLINED_FUNCTION_50_5();
      if (v35)
      {
        __break(1u);
        goto LABEL_96;
      }
      v71[2] = v93;
      OUTLINED_FUNCTION_63_1();
      if (v75)
        goto LABEL_53;
    }
    OUTLINED_FUNCTION_42_6();
    if (v38 == v35)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v82)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v38 == v35)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v83)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v38 == v35)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v84)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v38 == v35)
    {
LABEL_78:
      OUTLINED_FUNCTION_123_2();
      v3 = OUTLINED_FUNCTION_76_1();
      OUTLINED_FUNCTION_20_1();
      OUTLINED_FUNCTION_73_3(v126);
      OUTLINED_FUNCTION_53_6();
      if (__OFADD__(v96, v97))
        goto LABEL_101;
      v98 = v94;
      v99 = v95;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
      v3 = v118;
      if ((sub_240F1CE34() & 1) != 0)
      {
        v100 = OUTLINED_FUNCTION_73_3(v126);
        if ((v99 & 1) != (v101 & 1))
          goto LABEL_107;
        v98 = v100;
      }
      if ((v99 & 1) == 0)
        goto LABEL_106;
      sub_240BE0B90(v71[7] + *(_QWORD *)(v138 + 72) * v98, v118, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      OUTLINED_FUNCTION_62_1(v118, 0);
      MLProgram.Value.representation.getter(v119);
      v102 = OUTLINED_FUNCTION_132_2();
      if (__swift_getEnumTagSinglePayload(v119, 1, v102))
      {
        sub_240C5E950(v119, v116, &qword_25708CB10);
        MLProgram.Value.representation.setter(v116);
        OUTLINED_FUNCTION_13_5(v119);
      }
      else
      {
        OUTLINED_FUNCTION_315();
        v114(v119, v128, v129);
        MLProgram.Value.representation.setter(v119);
      }
      OUTLINED_FUNCTION_75_2();
      sub_240C6F79C();
      sub_240BE0B68(v118, &qword_25708CB18);
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_5_4();
      OUTLINED_FUNCTION_5_4();
      v28 = v125;
      sub_240C66F00();
      v57 = v103;
      OUTLINED_FUNCTION_173();
      v3 = v130;
      swift_bridgeObjectRelease();
      *(_QWORD *)(v130 + 32) = v57;
      v59 = v123;
      if (!v121)
      {
LABEL_35:
        v35 = __OFADD__(v59, 1);
        v63 = v59 + 1;
        if (v35)
          goto LABEL_102;
        if (v63 >= v117)
          goto LABEL_96;
        if (!*(_QWORD *)(v115 + 8 * v63))
        {
          OUTLINED_FUNCTION_101_2();
          if (v38 == v35)
          {
LABEL_96:
            OUTLINED_FUNCTION_173();
            swift_release();
            OUTLINED_FUNCTION_122_2();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_24_8();
          if (v65)
            goto LABEL_50;
          OUTLINED_FUNCTION_101_2();
          if (v38 == v35)
            goto LABEL_96;
          OUTLINED_FUNCTION_24_8();
          if (v66)
            goto LABEL_50;
          OUTLINED_FUNCTION_101_2();
          if (v38 == v35)
            goto LABEL_96;
          OUTLINED_FUNCTION_24_8();
          if (v67)
            goto LABEL_50;
          OUTLINED_FUNCTION_101_2();
          if (v38 == v35)
            goto LABEL_96;
          OUTLINED_FUNCTION_24_8();
          if (v68)
          {
LABEL_50:
            v63 = v64;
          }
          else
          {
            OUTLINED_FUNCTION_101_2();
            if (v38 == v35)
              goto LABEL_96;
            OUTLINED_FUNCTION_24_8();
            v63 = v104;
            if (!v105)
            {
              while (!__OFADD__(v104, 1))
              {
                if (v104 + 1 >= v117)
                  goto LABEL_96;
                OUTLINED_FUNCTION_106_1();
                if (v106)
                  goto LABEL_51;
              }
              goto LABEL_104;
            }
          }
        }
LABEL_51:
        v123 = v63;
        v125 = v28;
        OUTLINED_FUNCTION_125_2();
        v121 = v69;
        continue;
      }
      goto LABEL_34;
    }
    break;
  }
  OUTLINED_FUNCTION_36_8();
  if (v85)
  {
LABEL_69:
    v72 = v81;
    goto LABEL_70;
  }
  while (1)
  {
    v72 = v81 + 1;
    if (__OFADD__(v81, 1))
      break;
    if (v72 >= v134)
      goto LABEL_78;
    ++v81;
    if (*(_QWORD *)(v132 + 8 * v72))
      goto LABEL_70;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  OUTLINED_FUNCTION_122_2();
  v107 = OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_18_0(v126, v108, v109, v107);
  __break(1u);
LABEL_106:
  OUTLINED_FUNCTION_122_2();
  OUTLINED_FUNCTION_62_1(v3, 1);
  __break(1u);
LABEL_107:
  swift_bridgeObjectRelease_n();
  sub_240F1CEF4();
  __break(1u);
}

void sub_240C65F94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t (*v22)();
  uint64_t (*v23)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  BOOL v31;
  int64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t (*v39)();
  uint64_t (*v40)(uint64_t);
  _QWORD *v41;
  _QWORD *v42;
  unint64_t v43;
  char v44;
  unint64_t v45;
  char v46;
  unint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  int64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  int64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  unint64_t v97;
  char v98;
  unint64_t v99;
  char v100;
  char v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  int64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  int64_t v133;
  uint64_t v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  _QWORD *v138;

  OUTLINED_FUNCTION_22();
  v129 = v0;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  v119 = (uint64_t)&v117 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  OUTLINED_FUNCTION_23_0();
  v6 = MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_17_12(v6, v7, v8, v9, v10, v11, v12, v13, v117);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_2_0();
  v123 = v15;
  v122 = type metadata accessor for MLProgram.Value();
  v137 = *(_QWORD *)(v122 - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v16);
  v135 = *(_QWORD *)(OUTLINED_FUNCTION_28_6(v17, v117) - 8);
  OUTLINED_FUNCTION_1_1();
  MEMORY[0x24BDAC7A8](v18);
  OUTLINED_FUNCTION_15_10(v19, v117);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBE8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v20);
  OUTLINED_FUNCTION_2_0();
  v128 = v21;
  v131 = v2;
  v22 = type metadata accessor for MLProgram.Block;
  v23 = type metadata accessor for Proto_MILSpec_Block;
  v24 = 0;
  sub_240C66C84();
  OUTLINED_FUNCTION_71_2();
  v126 = v25;
  v130 = v26;
  OUTLINED_FUNCTION_18_5();
  v127 = v28;
  if (!v29)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_60_2();
  while (1)
  {
    v36 = (uint64_t *)(*(_QWORD *)(v130 + 48) + 16 * v30);
    v38 = *v36;
    v37 = v36[1];
    OUTLINED_FUNCTION_315();
    v39 = v22;
    v40 = v23;
    sub_240C66C84();
    v42 = v41;
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_76_1();
    v138 = v42;
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_81_2(v38);
    OUTLINED_FUNCTION_137_1();
    if (v31)
      goto LABEL_98;
    v45 = v43;
    v46 = v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBF0);
    if ((OUTLINED_FUNCTION_57_5() & 1) != 0)
    {
      v47 = OUTLINED_FUNCTION_81_2(v38);
      if ((v46 & 1) != (v48 & 1))
        goto LABEL_107;
      v45 = v47;
    }
    if ((v46 & 1) == 0)
      goto LABEL_105;
    v49 = v138[7];
    v50 = OUTLINED_FUNCTION_66_1();
    v51 = v49 + *(_QWORD *)(*(_QWORD *)(v50 - 8) + 72) * v45;
    v52 = v128;
    v22 = v39;
    sub_240BE0B90(v51, v128, (uint64_t (*)(_QWORD))v39);
    __swift_storeEnumTagSinglePayload(v52, 0, 1, v50);
    sub_240CB57F0();
    sub_240C6F7C4();
    sub_240BE0B68(v52, &qword_25708CBE8);
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_173();
    v23 = v40;
    sub_240C66F00();
    v54 = v53;
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_116_1();
    *(_QWORD *)(v37 + 24) = v54;
    v27 = v133;
    if (v132)
      goto LABEL_2;
LABEL_3:
    v31 = __OFADD__(v27, 1);
    v32 = v27 + 1;
    if (v31)
      goto LABEL_100;
    if (v32 >= v127)
      goto LABEL_33;
    v33 = *(_QWORD *)(v126 + 8 * v32);
    if (!v33)
    {
      OUTLINED_FUNCTION_86_1();
      if (v34 == v31)
        goto LABEL_33;
      OUTLINED_FUNCTION_88_1();
      if (!v33)
      {
        OUTLINED_FUNCTION_86_1();
        if (v34 == v31)
          goto LABEL_33;
        OUTLINED_FUNCTION_88_1();
        if (!v33)
        {
          OUTLINED_FUNCTION_86_1();
          if (v34 == v31)
            goto LABEL_33;
          OUTLINED_FUNCTION_88_1();
          if (!v33)
          {
            OUTLINED_FUNCTION_86_1();
            if (v34 == v31)
              goto LABEL_33;
            OUTLINED_FUNCTION_88_1();
            if (!v33)
            {
              OUTLINED_FUNCTION_86_1();
              if (v34 == v31)
                goto LABEL_33;
              OUTLINED_FUNCTION_88_1();
              if (!v33)
                break;
            }
          }
        }
      }
    }
LABEL_21:
    OUTLINED_FUNCTION_61_3(v33);
  }
  while (1)
  {
    if (__OFADD__(v35, 1))
      goto LABEL_103;
    if (v35 + 1 >= v127)
      break;
    OUTLINED_FUNCTION_106_1();
    if (v33)
      goto LABEL_21;
  }
LABEL_33:
  swift_release();
  v55 = *(_QWORD *)(v131 + 32);
  OUTLINED_FUNCTION_129_2();
  OUTLINED_FUNCTION_71_2();
  v118 = v56;
  v124 = v57;
  OUTLINED_FUNCTION_3_13();
  v120 = v59;
  if (!v60)
    goto LABEL_35;
LABEL_34:
  v126 = v58;
  v127 = v24;
  OUTLINED_FUNCTION_98_1();
  v125 = v61;
  while (2)
  {
    OUTLINED_FUNCTION_48_3();
    v130 = v69;
    v128 = v70;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v71 = (_QWORD *)sub_240F1CE64();
    v72 = 0;
    v132 = v55 + 64;
    OUTLINED_FUNCTION_13_8();
    v75 = v74 & v73;
    v133 = (unint64_t)(v76 + 63) >> 6;
    v78 = v77 + 64;
    if ((v74 & v73) != 0)
    {
LABEL_53:
      v79 = __clz(__rbit64(v75));
      v75 &= v75 - 1;
      v80 = v79 | (v72 << 6);
      goto LABEL_71;
    }
    while (1)
    {
      v31 = __OFADD__(v72++, 1);
      if (v31)
      {
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      if (v72 >= v133)
        goto LABEL_78;
      if (!*(_QWORD *)(v132 + 8 * v72))
        break;
LABEL_70:
      OUTLINED_FUNCTION_92_1();
      v75 = v87 & v86;
      v80 = v88 + (v72 << 6);
LABEL_71:
      v89 = (uint64_t *)(*(_QWORD *)(v55 + 48) + 16 * v80);
      v91 = *v89;
      v90 = v89[1];
      v92 = v134;
      sub_240BE0BF4(*(_QWORD *)(v55 + 56) + *(_QWORD *)(v135 + 72) * v80, v134, type metadata accessor for Proto_MILSpec_Value);
      v93 = v92;
      v94 = v136;
      sub_240BE0B90(v93, v136, type metadata accessor for Proto_MILSpec_Value);
      *(_QWORD *)(v78 + ((v80 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v80;
      v95 = (_QWORD *)(v71[6] + 16 * v80);
      *v95 = v91;
      v95[1] = v90;
      sub_240BE0B90(v94, v71[7] + *(_QWORD *)(v137 + 72) * v80, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      OUTLINED_FUNCTION_50_5();
      if (v31)
      {
        __break(1u);
        goto LABEL_96;
      }
      v71[2] = v96;
      OUTLINED_FUNCTION_120_2();
      if (v75)
        goto LABEL_53;
    }
    OUTLINED_FUNCTION_42_6();
    if (v34 == v31)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v82)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v34 == v31)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v83)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v34 == v31)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v84)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v34 == v31)
    {
LABEL_78:
      v24 = v127;
      OUTLINED_FUNCTION_123_2();
      OUTLINED_FUNCTION_76_1();
      v138 = v71;
      OUTLINED_FUNCTION_63_1();
      OUTLINED_FUNCTION_85_2(v130);
      OUTLINED_FUNCTION_137_1();
      if (v31)
        goto LABEL_101;
      v99 = v97;
      v100 = v98;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
      v101 = OUTLINED_FUNCTION_57_5();
      v104 = v121;
      if ((v101 & 1) != 0)
      {
        v105 = OUTLINED_FUNCTION_85_2(v130);
        if ((v100 & 1) != (v102 & 1))
          goto LABEL_107;
        v99 = v105;
      }
      if ((v100 & 1) == 0)
        goto LABEL_106;
      v106 = v123;
      sub_240BE0B90(v138[7] + *(_QWORD *)(v137 + 72) * v99, v123, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      OUTLINED_FUNCTION_62_1(v106, 0);
      MLProgram.Value.representation.getter(v104);
      v107 = OUTLINED_FUNCTION_132_2();
      if (__swift_getEnumTagSinglePayload(v104, 1, v107))
      {
        v108 = v119;
        sub_240C5E950(v104, v119, &qword_25708CB10);
        MLProgram.Value.representation.setter(v108);
        sub_240BE0B68(v104, &qword_25708CB10);
      }
      else
      {
        sub_240C78004();
        MLProgram.Value.representation.setter(v104);
      }
      OUTLINED_FUNCTION_75_2();
      sub_240C6F79C();
      sub_240BE0B68(v106, &qword_25708CB18);
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_12_2();
      sub_240C66F00();
      v55 = v109;
      OUTLINED_FUNCTION_42_2();
      v110 = v131;
      OUTLINED_FUNCTION_84_1();
      *(_QWORD *)(v110 + 32) = v55;
      v58 = v126;
      if (!v125)
      {
LABEL_35:
        v31 = __OFADD__(v58, 1);
        v62 = v58 + 1;
        if (v31)
          goto LABEL_102;
        if (v62 >= v120)
          goto LABEL_96;
        if (!*(_QWORD *)(v118 + 8 * v62))
        {
          OUTLINED_FUNCTION_100_2();
          if (v34 == v31)
          {
LABEL_96:
            swift_release();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_22_6();
          if (v64)
            goto LABEL_50;
          OUTLINED_FUNCTION_100_2();
          if (v34 == v31)
            goto LABEL_96;
          OUTLINED_FUNCTION_22_6();
          if (v65)
            goto LABEL_50;
          OUTLINED_FUNCTION_100_2();
          if (v34 == v31)
            goto LABEL_96;
          OUTLINED_FUNCTION_22_6();
          if (v66)
            goto LABEL_50;
          OUTLINED_FUNCTION_100_2();
          if (v34 == v31)
            goto LABEL_96;
          OUTLINED_FUNCTION_22_6();
          if (v67)
          {
LABEL_50:
            v62 = v63;
          }
          else
          {
            OUTLINED_FUNCTION_100_2();
            if (v34 == v31)
              goto LABEL_96;
            OUTLINED_FUNCTION_22_6();
            v62 = v111;
            if (!v112)
            {
              while (!__OFADD__(v111, 1))
              {
                if (v111 + 1 >= v120)
                  goto LABEL_96;
                OUTLINED_FUNCTION_106_1();
                if (v113)
                  goto LABEL_51;
              }
              goto LABEL_104;
            }
          }
        }
LABEL_51:
        v126 = v62;
        v127 = v24;
        OUTLINED_FUNCTION_125_2();
        v125 = v68;
        continue;
      }
      goto LABEL_34;
    }
    break;
  }
  OUTLINED_FUNCTION_36_8();
  if (v85)
  {
LABEL_69:
    v72 = v81;
    goto LABEL_70;
  }
  while (1)
  {
    v72 = v81 + 1;
    if (__OFADD__(v81, 1))
      break;
    if (v72 >= v133)
      goto LABEL_78;
    ++v81;
    if (*(_QWORD *)(v132 + 8 * v72))
      goto LABEL_70;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  v114 = OUTLINED_FUNCTION_66_1();
  OUTLINED_FUNCTION_18_0(v128, v115, v116, v114);
  __break(1u);
LABEL_106:
  OUTLINED_FUNCTION_18_0(v123, v102, v103, v122);
  __break(1u);
LABEL_107:
  sub_240F1CEF4();
  __break(1u);
}

void MLProgram.Function.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_22();
  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_81();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_5();
  type metadata accessor for MLProgram.Function();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v0, v8 - v7, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1E9E0;
  *(_QWORD *)(v10 + 32) = 0x737475706E69;
  *(_QWORD *)(v10 + 40) = 0xE600000000000000;
  MLProgram.Function.inputs.getter();
  v12 = v11;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAE0);
  *(_QWORD *)(v10 + 48) = v12;
  *(_QWORD *)(v10 + 72) = v13;
  *(_QWORD *)(v10 + 80) = 0x746573706FLL;
  v15 = *(_QWORD *)(v0 + 8);
  v14 = *(_QWORD *)(v0 + 16);
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v10 + 88) = 0xE500000000000000;
  *(_QWORD *)(v10 + 96) = v15;
  *(_QWORD *)(v10 + 104) = v14;
  *(_QWORD *)(v10 + 120) = v16;
  *(_QWORD *)(v10 + 128) = 0xD000000000000014;
  *(_QWORD *)(v10 + 136) = 0x8000000240F525F0;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_47_6();
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBC8);
  *(_QWORD *)(v10 + 144) = v18;
  *(_QWORD *)(v10 + 168) = v19;
  *(_QWORD *)(v10 + 176) = 0x7475626972747461;
  *(_QWORD *)(v10 + 184) = 0xEA00000000007365;
  sub_240C66C84();
  v21 = v20;
  *(_QWORD *)(v10 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAF0);
  *(_QWORD *)(v10 + 192) = v21;
  v22 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v2, v23, v24, v22);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v1, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.Function.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  sub_240C641CC();
  v1 = sub_240CC4F3C(0, 0, v0);
  swift_release();
  return v1;
}

unint64_t sub_240C66A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_240F1CF3C();
  sub_240F1CCC0();
  v4 = sub_240F1CF78();
  return sub_240C66ADC(a1, a2, v4);
}

unint64_t sub_240C66AA4(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_240F1CF30();
  return sub_240C66BBC(a1, v2);
}

unint64_t sub_240C66ADC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_240F1CEDC() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_240F1CEDC() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_240C66BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  unint64_t result;
  uint64_t v7;
  uint64_t v8;

  v4 = v2 + 64;
  v5 = -1 << *(_BYTE *)(v2 + 32);
  result = a2 & ~v5;
  if (((*(_QWORD *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0)
  {
    v7 = *(_QWORD *)(v2 + 48);
    if (*(_QWORD *)(v7 + 8 * result) != a1)
    {
      v8 = ~v5;
      for (result = (result + 1) & v8;
            ((*(_QWORD *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            result = (result + 1) & v8)
      {
        if (*(_QWORD *)(v7 + 8 * result) == a1)
          break;
      }
    }
  }
  return result;
}

void sub_240C66C58()
{
  sub_240C66C84();
}

void sub_240C66C84()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t (*v2)(uint64_t);
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  int64_t v23;
  int64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  _QWORD *v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t (*v44)(_QWORD);

  OUTLINED_FUNCTION_97_1();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v44 = v6;
  v42 = *(_QWORD *)(v6(0) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v7);
  v41 = (char *)&v36 - v8;
  v9 = OUTLINED_FUNCTION_101();
  v40 = *(_QWORD *)(v3(v9) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v36 - v11;
  __swift_instantiateConcreteTypeFromMangledName(v1);
  v13 = (_QWORD *)sub_240F1CE64();
  v14 = 0;
  v43 = v5;
  v37 = v5 + 64;
  OUTLINED_FUNCTION_9_4();
  v17 = v16 & v15;
  v38 = (unint64_t)(v18 + 63) >> 6;
  v39 = v19 + 64;
  v20 = (uint64_t)v41;
  if ((v16 & v15) == 0)
    goto LABEL_3;
LABEL_2:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v21 | (v14 << 6); ; i = v27 + (v14 << 6))
  {
    v28 = (uint64_t *)(*(_QWORD *)(v43 + 48) + 16 * i);
    v29 = *v28;
    v30 = v28[1];
    sub_240BE0BF4(*(_QWORD *)(v43 + 56) + *(_QWORD *)(v40 + 72) * i, (uint64_t)v12, v3);
    sub_240BE0BF4((uint64_t)v12, v20, v3);
    OUTLINED_FUNCTION_213();
    sub_240BE10B8((uint64_t)v12, v3);
    OUTLINED_FUNCTION_135_1();
    *(_QWORD *)(v39 + v31) |= v32;
    v33 = (_QWORD *)(v13[6] + 16 * i);
    *v33 = v29;
    v33[1] = v30;
    sub_240BE0B90(v20, v13[7] + *(_QWORD *)(v42 + 72) * i, v44);
    OUTLINED_FUNCTION_50_5();
    if (v35)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v13[2] = v34;
    if (v17)
      goto LABEL_2;
LABEL_3:
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_22;
    if (v23 >= v38)
      goto LABEL_20;
    ++v14;
    if (!*(_QWORD *)(v37 + 8 * v23))
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v38)
        goto LABEL_20;
      if (!*(_QWORD *)(v37 + 8 * v14))
      {
        v14 = v23 + 2;
        if (v23 + 2 >= v38)
          goto LABEL_20;
        if (!*(_QWORD *)(v37 + 8 * v14))
          break;
      }
    }
LABEL_16:
    OUTLINED_FUNCTION_51_3();
    v17 = v26 & v25;
  }
  v24 = v23 + 3;
  if (v24 >= v38)
  {
LABEL_20:
    OUTLINED_FUNCTION_7_5();
    return;
  }
  if (*(_QWORD *)(v37 + 8 * v24))
  {
    v14 = v24;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v14 >= v38)
      goto LABEL_20;
    ++v24;
    if (*(_QWORD *)(v37 + 8 * v14))
      goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

void sub_240C66ED4()
{
  sub_240C66F00();
}

void sub_240C66F00()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t (*v2)(_QWORD);
  uint64_t (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(_QWORD);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t i;
  char v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  _BYTE *v38;
  _QWORD *v39;
  _QWORD *v40;
  uint64_t v41;
  uint64_t v42;
  _BYTE v43[16];
  uint64_t v44;
  int64_t v45;
  _QWORD *v46;
  _QWORD *v47;
  _BYTE *v48;
  uint64_t v49;
  _BYTE *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t (*v53)(_QWORD);
  uint64_t (*v54)(_QWORD);

  OUTLINED_FUNCTION_97_1();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v53 = v6;
  v51 = *(_QWORD *)(v6(0) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v7);
  v50 = &v43[-v8];
  v9 = OUTLINED_FUNCTION_101();
  v54 = v3;
  v49 = *(_QWORD *)(v3(v9) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v10);
  v48 = &v43[-v11];
  __swift_instantiateConcreteTypeFromMangledName(v1);
  sub_240F1CE64();
  v52 = v5;
  v44 = v5 + 64;
  OUTLINED_FUNCTION_9_4();
  v15 = v14 & v13;
  v45 = (unint64_t)(v16 + 63) >> 6;
  v46 = v17;
  v47 = v17 + 8;
  v18 = (uint64_t)v50;
  v19 = v53;
  if ((v14 & v13) == 0)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_128_2();
  v21 = v20;
  for (i = v22 | (v20 << 6); ; i = v34 + (v33 << 6))
  {
    v35 = (uint64_t *)(*(_QWORD *)(v52 + 48) + 16 * i);
    v36 = *v35;
    v37 = v35[1];
    v38 = v48;
    sub_240BE0BF4(*(_QWORD *)(v52 + 56) + *(_QWORD *)(v49 + 72) * i, (uint64_t)v48, v54);
    sub_240BE0BF4((uint64_t)v38, v18, v19);
    OUTLINED_FUNCTION_213();
    sub_240BE10B8((uint64_t)v38, v54);
    v39 = v46;
    *(_QWORD *)((char *)v47 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v40 = (_QWORD *)(v39[6] + 16 * i);
    *v40 = v36;
    v40[1] = v37;
    sub_240BE0B90(v18, v39[7] + *(_QWORD *)(v51 + 72) * i, v19);
    v41 = v39[2];
    v25 = __OFADD__(v41, 1);
    v42 = v41 + 1;
    if (v25)
    {
      __break(1u);
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v39[2] = v42;
    v12 = v21;
    if (v15)
      goto LABEL_2;
LABEL_3:
    if (__OFADD__(v12, 1))
      goto LABEL_23;
    OUTLINED_FUNCTION_130_1();
    if (v24 == v25)
      goto LABEL_21;
    OUTLINED_FUNCTION_138_1();
    if (!v27)
    {
      if (v26 + 1 >= v45)
        goto LABEL_21;
      if (!*(_QWORD *)(v44 + 8 * (v26 + 1)))
      {
        if (v26 + 2 >= v45)
          goto LABEL_21;
        if (!*(_QWORD *)(v44 + 8 * (v26 + 2)))
        {
          OUTLINED_FUNCTION_130_1();
          if (v24 == v25)
          {
LABEL_21:
            OUTLINED_FUNCTION_7_5();
            return;
          }
          OUTLINED_FUNCTION_138_1();
          if (!v29)
            break;
        }
      }
    }
LABEL_17:
    OUTLINED_FUNCTION_51_3();
    v15 = v32 & v31;
    v21 = v33;
  }
  while (1)
  {
    v30 = v28 + 1;
    if (__OFADD__(v28, 1))
      break;
    if (v30 >= v45)
      goto LABEL_21;
    ++v28;
    if (*(_QWORD *)(v44 + 8 * v30))
      goto LABEL_17;
  }
LABEL_24:
  __break(1u);
}

uint64_t type metadata accessor for MLProgram.Function()
{
  uint64_t result;

  result = qword_25708CBD8;
  if (!qword_25708CBD8)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_240C671A0()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25708CBD0;
  if (!qword_25708CBD0)
  {
    v1 = type metadata accessor for Proto_MILSpec_Function(255);
    result = MEMORY[0x24268C2AC](&unk_240F31CD8, v1);
    atomic_store(result, (unint64_t *)&qword_25708CBD0);
  }
  return result;
}

void sub_240C671E0()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Function.inputs.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C67204()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_103();
  MLProgram.Function.opset.getter();
  *v0 = v1;
  v0[1] = v2;
  OUTLINED_FUNCTION_44();
}

void sub_240C67228()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Function.blockSpecializations.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C6724C()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.Function.attributes.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

uint64_t *_s8FunctionVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_MILSpec_Function(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = a2[2];
    a1[1] = a2[1];
    a1[2] = v7;
    v8 = a2[4];
    a1[3] = a2[3];
    a1[4] = v8;
    v9 = *(int *)(v4 + 32);
    v10 = (char *)a1 + v9;
    v11 = (char *)a2 + v9;
    v12 = sub_240F1C930();
    v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v13(v10, v11, v12);
  }
  return a1;
}

uint64_t _s8FunctionVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_MILSpec_Function(0) + 32);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s8FunctionVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  void (*v10)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  a1[4] = a2[4];
  v6 = *(int *)(type metadata accessor for Proto_MILSpec_Function(0) + 32);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  v9 = sub_240F1C930();
  v10 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v7, v8, v9);
  return a1;
}

_QWORD *_s8FunctionVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Function(0) + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

uint64_t _s8FunctionVwtk(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  v4 = *(int *)(type metadata accessor for Proto_MILSpec_Function(0) + 32);
  v5 = a1 + v4;
  v6 = a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s8FunctionVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRelease();
  v5 = *(int *)(type metadata accessor for Proto_MILSpec_Function(0) + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 40))(v6, v7, v8);
  return a1;
}

uint64_t _s8FunctionVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C67650()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_82_0();
  return __swift_getEnumTagSinglePayload(v1, v0, v2);
}

uint64_t _s8FunctionVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C67684()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v2 = OUTLINED_FUNCTION_82_0();
  return __swift_storeEnumTagSinglePayload(v1, v0, v0, v2);
}

uint64_t sub_240C676B0()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_MILSpec_Function(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240C67718(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) != 0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_240C67724()
{
  OUTLINED_FUNCTION_147_0();
  return swift_deallocObject();
}

void sub_240C67744(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3;

  v3 = OUTLINED_FUNCTION_45_5(a1, a2, a3);
  OUTLINED_FUNCTION_49(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32));
  OUTLINED_FUNCTION_44();
}

uint64_t sub_240C67770()
{
  OUTLINED_FUNCTION_147_0();
  OUTLINED_FUNCTION_84_1();
  return swift_deallocObject();
}

uint64_t sub_240C67794()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

void OUTLINED_FUNCTION_15_10(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 136) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
}

void OUTLINED_FUNCTION_17_12(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v10 - 240) = (char *)&a9 - v9;
}

_QWORD *OUTLINED_FUNCTION_20_7@<X0>(uint64_t a1@<X8>)
{
  return sub_240BF0A90(0, a1 + 1, 1);
}

uint64_t OUTLINED_FUNCTION_28_6@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 120) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for Proto_MILSpec_Value(0);
}

uint64_t OUTLINED_FUNCTION_29_6@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 - 248) = (char *)&a2 - ((a1 + 15) & 0xFFFFFFFFFFFFFFF0);
  return type metadata accessor for MLProgram.Value();
}

uint64_t OUTLINED_FUNCTION_31_6()
{
  return swift_allocBox();
}

uint64_t OUTLINED_FUNCTION_43_6()
{
  return sub_240F1CCE4();
}

void OUTLINED_FUNCTION_47_6()
{
  sub_240C66C84();
}

_QWORD *OUTLINED_FUNCTION_48_5(_QWORD *a1, int64_t a2)
{
  return sub_240BF0A90(a1, a2, 1);
}

uint64_t OUTLINED_FUNCTION_51_5()
{
  return type metadata accessor for Proto_MILSpec_Value(0);
}

void OUTLINED_FUNCTION_54_6()
{
  uint64_t v0;

  *(_QWORD *)(v0 - 112) = 34;
  *(_QWORD *)(v0 - 104) = 0xE100000000000000;
}

uint64_t OUTLINED_FUNCTION_57_5()
{
  return sub_240F1CE34();
}

void OUTLINED_FUNCTION_60_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (v0 - 1) & v0;
  *(_QWORD *)(v2 - 144) = v1;
}

void OUTLINED_FUNCTION_61_3(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 - 152) = (a1 - 1) & a1;
  *(_QWORD *)(v2 - 144) = v1;
}

uint64_t OUTLINED_FUNCTION_62_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, *(_QWORD *)(v2 - 232));
}

uint64_t OUTLINED_FUNCTION_63_1()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_65_2()
{
  return type metadata accessor for Proto_MILSpec_NamedValueType(0);
}

void OUTLINED_FUNCTION_66_3(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_71_3()
{
  uint64_t v0;

  return *(_QWORD *)(v0 - 312);
}

uint64_t OUTLINED_FUNCTION_72_4()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = v0;
  return 0;
}

unint64_t OUTLINED_FUNCTION_73_3(uint64_t a1)
{
  uint64_t v1;

  return sub_240C66A40(a1, v1);
}

uint64_t OUTLINED_FUNCTION_75_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_76_2()
{
  uint64_t v0;

  *(_QWORD *)v0 = 4;
  *(_BYTE *)(v0 + 8) = 1;
  *(_QWORD *)(v0 + 16) = 0;
}

uint64_t OUTLINED_FUNCTION_78_2()
{
  return sub_240F1CC48();
}

uint64_t OUTLINED_FUNCTION_80_2()
{
  return swift_beginAccess();
}

unint64_t OUTLINED_FUNCTION_81_2(uint64_t a1)
{
  uint64_t v1;

  return sub_240C66A40(a1, v1);
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return type metadata accessor for Proto_MILSpec_Function(0);
}

unint64_t OUTLINED_FUNCTION_85_2(uint64_t a1)
{
  uint64_t v1;

  return sub_240C66A40(a1, v1);
}

uint64_t OUTLINED_FUNCTION_109_2()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_110_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return type metadata accessor for Proto_MILSpec_TensorType(0);
}

uint64_t OUTLINED_FUNCTION_111_2()
{
  return swift_getEnumCaseMultiPayload();
}

void OUTLINED_FUNCTION_112_2()
{
  uint64_t (*v0)(_QWORD);
  uint64_t v1;

  sub_240BE10B8(v1, v0);
}

void OUTLINED_FUNCTION_113_2(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(_QWORD);

  sub_240BE0BF4(a1, v1, v2);
}

uint64_t OUTLINED_FUNCTION_115_2()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_116_1()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_120_2()
{
  return swift_bridgeObjectRetain();
}

uint64_t OUTLINED_FUNCTION_121_1()
{
  return _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
}

uint64_t OUTLINED_FUNCTION_122_2()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_123_2()
{
  return swift_bridgeObjectRetain_n();
}

_QWORD *OUTLINED_FUNCTION_127_2(_QWORD *a1, int64_t a2)
{
  return sub_240BF0A90(a1, a2, 0);
}

void OUTLINED_FUNCTION_129_2()
{
  sub_240C66C84();
}

void OUTLINED_FUNCTION_131_1(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 64) |= v1;
}

uint64_t OUTLINED_FUNCTION_132_2()
{
  return type metadata accessor for MLProgram.Value.Representation(0);
}

uint64_t OUTLINED_FUNCTION_133_2()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_141_1(uint64_t a1, uint64_t a2)
{
  uint64_t (*v2)(_QWORD);

  sub_240BE0B90(a1, a2, v2);
}

void sub_240C67BF0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_16_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v5 = OUTLINED_FUNCTION_90();
  type metadata accessor for AudioFeaturePrintKind(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_11_5();
  type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.OneOf_AudioFeaturePrintType(0);
  OUTLINED_FUNCTION_5_8(a1, 1);
  type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  sub_240C68AF4(a1);
  sub_240BE0BF4(v1, v3, type metadata accessor for AudioFeaturePrintKind);
  sub_240BE0B90(v3, v2, type metadata accessor for AudioFeaturePrintKind.SoundParameters);
  OUTLINED_FUNCTION_17_1(v2, v6, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound);
  OUTLINED_FUNCTION_5_8(a1, 0);
  OUTLINED_FUNCTION_13();
}

void sub_240C67CC8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  type metadata accessor for AudioFeaturePrintKind.SoundParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC40);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  v4 = OUTLINED_FUNCTION_90();
  v5 = type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.OneOf_AudioFeaturePrintType(v4);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_11_3();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v13 - v9;
  sub_240C68B34(a1, v2);
  if (__swift_getEnumTagSinglePayload(v2, 1, v5) == 1)
  {
    sub_240C68AF4(v2);
    OUTLINED_FUNCTION_2_12();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    *(_QWORD *)v1 = 1;
    *(_BYTE *)(v1 + 8) = 1;
    OUTLINED_FUNCTION_17_1(v1, v11, type metadata accessor for AudioFeaturePrintKind.SoundParameters);
    sub_240BE27A0(a1, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint);
  }
  else
  {
    sub_240BE27A0(a1, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint);
    sub_240BE0B90(v2, (uint64_t)v10, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.OneOf_AudioFeaturePrintType);
    sub_240BE0B90((uint64_t)v10, v8, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.OneOf_AudioFeaturePrintType);
    OUTLINED_FUNCTION_17_1(v8, v12, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound);
  }
  OUTLINED_FUNCTION_13();
}

void static AudioFeaturePrintKind.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_16_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_11_3();
  v8 = (uint64_t *)(v6 - v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (uint64_t *)((char *)&v15 - v10);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_11_5();
  v14 = v2 + *(int *)(v13 + 48);
  sub_240BE0BF4(a1, v2, type metadata accessor for AudioFeaturePrintKind);
  sub_240BE0BF4(a2, v14, type metadata accessor for AudioFeaturePrintKind);
  OUTLINED_FUNCTION_28(v2, (uint64_t)v11);
  OUTLINED_FUNCTION_28(v14, (uint64_t)v8);
  sub_240DE3B08(v11, v8);
  OUTLINED_FUNCTION_17_13((uint64_t)v8);
  OUTLINED_FUNCTION_17_13((uint64_t)v11);
  OUTLINED_FUNCTION_13();
}

uint64_t type metadata accessor for AudioFeaturePrintKind.SoundParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_254375280);
}

uint64_t type metadata accessor for AudioFeaturePrintKind(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25435FD10);
}

void static AudioFeaturePrintKind.sound(version:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  type metadata accessor for AudioFeaturePrintKind.SoundParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_24_1();
  v3 = v2 - v1;
  OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_17_7();
  sub_240CECE18();
  if ((v5 & 0x100) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)v3 = v4;
    *(_BYTE *)(v3 + 8) = v5 & 1;
    OUTLINED_FUNCTION_17_1(v3, v5, type metadata accessor for AudioFeaturePrintKind.SoundParameters);
  }
}

void AudioFeaturePrintKind.SoundParameters.init(version:)(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  OUTLINED_FUNCTION_2_12();
  OUTLINED_FUNCTION_17_7();
  *(_QWORD *)a2 = a1;
  *(_BYTE *)(a2 + 8) = a1 < 2;
  OUTLINED_FUNCTION_44();
}

void AudioFeaturePrintKind.hash(into:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);

  OUTLINED_FUNCTION_16_9();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_80();
  type metadata accessor for AudioFeaturePrintKind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  sub_240BE0BF4(v0, v5 - v4, v7);
  OUTLINED_FUNCTION_28(v6, v1);
  sub_240F1CF48();
  OUTLINED_FUNCTION_2_12();
  sub_240BE18B8(&qword_25708CC18, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound, (uint64_t)&unk_240F374C8);
  sub_240F1CC54();
  OUTLINED_FUNCTION_17_13(v1);
}

void static AudioFeaturePrintKind.SoundParameters.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  void (*v16)(char *, uint64_t, uint64_t);
  void (*v17)(char *, uint64_t);
  uint64_t v18;

  v4 = sub_240F1C930();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_11_3();
  v8 = (char *)(v6 - v7);
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)&v18 - v10;
  v12 = *a1;
  v13 = *a2;
  if (*((_BYTE *)a1 + 8))
    v12 = *a1 != 0;
  if (*((_BYTE *)a2 + 8) != 1)
  {
    if (v12 != v13)
      goto LABEL_11;
    goto LABEL_10;
  }
  if (v13)
  {
    if (v12 != 1)
      goto LABEL_11;
    goto LABEL_10;
  }
  if (!v12)
  {
LABEL_10:
    v14 = OUTLINED_FUNCTION_2_12();
    v15 = (uint64_t)a1 + *(int *)(v14 + 20);
    v16 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v16(v11, v15, v4);
    v16(v8, (uint64_t)a2 + *(int *)(v14 + 20), v4);
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    sub_240F1CC90();
    v17 = *(void (**)(char *, uint64_t))(v5 + 8);
    v17(v8, v4);
    v17(v11, v4);
  }
LABEL_11:
  OUTLINED_FUNCTION_13();
}

void AudioFeaturePrintKind.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  AudioFeaturePrintKind.hash(into:)();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240C68268()
{
  sub_240F1CF3C();
  AudioFeaturePrintKind.hash(into:)();
  return sub_240F1CF78();
}

uint64_t static AudioFeaturePrintKind.SoundParameters.latestVersion.getter()
{
  return 1;
}

uint64_t AudioFeaturePrintKind.SoundParameters.version.getter()
{
  _BYTE *v0;

  if (v0[8])
    return *(_QWORD *)v0 != 0;
  else
    return *(_QWORD *)v0;
}

unint64_t AudioFeaturePrintKind.SoundParameters.version.setter(unint64_t result)
{
  uint64_t v1;

  *(_QWORD *)v1 = result;
  *(_BYTE *)(v1 + 8) = result < 2;
  return result;
}

_QWORD *(*AudioFeaturePrintKind.SoundParameters.version.modify(_QWORD *a1))(_QWORD *result)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  if (*((_BYTE *)v1 + 8))
    v2 = *v1 != 0;
  *a1 = v2;
  a1[1] = v1;
  return sub_240C68308;
}

_QWORD *sub_240C68308(_QWORD *result)
{
  uint64_t v1;
  BOOL v2;

  v1 = result[1];
  v2 = *result < 2uLL;
  *(_QWORD *)v1 = *result;
  *(_BYTE *)(v1 + 8) = v2;
  return result;
}

uint64_t AudioFeaturePrintKind.SoundParameters.hash(into:)()
{
  OUTLINED_FUNCTION_2_12();
  sub_240BE18B8(&qword_25708CC18, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound, (uint64_t)&unk_240F374C8);
  return sub_240F1CC54();
}

void AudioFeaturePrintKind.SoundParameters.hashValue.getter()
{
  OUTLINED_FUNCTION_22_7();
  OUTLINED_FUNCTION_2_12();
  sub_240BE18B8(&qword_25708CC18, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound, (uint64_t)&unk_240F374C8);
  sub_240F1CC54();
  sub_240F1CF78();
  OUTLINED_FUNCTION_19_7();
}

uint64_t sub_240C683D4()
{
  sub_240F1CF3C();
  type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(0);
  sub_240BE18B8(&qword_25708CC18, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound, (uint64_t)&unk_240F374C8);
  sub_240F1CC54();
  return sub_240F1CF78();
}

uint64_t AudioFeaturePrintKind.SoundParameters.customMirror.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(_QWORD);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v3 = v0;
  v4 = sub_240F1CF90();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_80();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  v7 = OUTLINED_FUNCTION_90();
  type metadata accessor for AudioFeaturePrintKind.SoundParameters(v7);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  sub_240BE0BF4(v3, v10 - v9, v11);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v12 + 32) = 0x6E6F6973726576;
  *(_QWORD *)(v12 + 40) = 0xE700000000000000;
  v13 = *(_QWORD *)v3;
  if (*(_BYTE *)(v3 + 8))
    v13 = *(_QWORD *)v3 != 0;
  *(_QWORD *)(v12 + 72) = MEMORY[0x24BEE1768];
  *(_QWORD *)(v12 + 48) = v13;
  v14 = sub_240F1CF84();
  __swift_storeEnumTagSinglePayload(v2, 1, 1, v14);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v5 + 104))(v1, *MEMORY[0x24BEE43C0], v4);
  return sub_240F1CFA8();
}

void sub_240C685C4()
{
  sub_240BE18B8(&qword_25708CC20, type metadata accessor for AudioFeaturePrintKind, (uint64_t)&protocol conformance descriptor for AudioFeaturePrintKind);
}

void sub_240C685F0()
{
  sub_240BE18B8(&qword_25708CC28, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint, (uint64_t)&unk_240F37450);
}

void sub_240C6861C()
{
  sub_240BE18B8(&qword_25708CC30, type metadata accessor for AudioFeaturePrintKind.SoundParameters, (uint64_t)&protocol conformance descriptor for AudioFeaturePrintKind.SoundParameters);
}

void sub_240C68648()
{
  sub_240BE18B8(&qword_25708CC38, type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound, (uint64_t)&unk_240F373D8);
}

void sub_240C68674(uint64_t *a1@<X8>)
{
  *a1 = AudioFeaturePrintKind.SoundParameters.version.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C68698(unint64_t *a1)
{
  AudioFeaturePrintKind.SoundParameters.version.setter(*a1);
  OUTLINED_FUNCTION_44();
}

_QWORD *initializeBufferWithCopyOfBuffer for AudioFeaturePrintKind(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  _QWORD *v4;
  int v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = (_QWORD *)a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *v4 = *a2;
    v4 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(0) + 20);
    v7 = (char *)v4 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return v4;
}

uint64_t getEnumTagSinglePayload for AudioFeaturePrintKind()
{
  type metadata accessor for AudioFeaturePrintKind.SoundParameters(0);
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C687A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_12();
  return __swift_getEnumTagSinglePayload(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for AudioFeaturePrintKind()
{
  type metadata accessor for AudioFeaturePrintKind.SoundParameters(0);
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C68820(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_2_12();
  return __swift_storeEnumTagSinglePayload(a1, a2, a2, v4);
}

uint64_t sub_240C68854(uint64_t a1)
{
  uint64_t result;
  unint64_t v3;
  uint64_t v4;

  result = type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(319);
  if (v3 <= 0x3F)
  {
    v4 = *(_QWORD *)(result - 8);
    swift_initEnumMetadataSingleCase();
    result = 0;
    *(_DWORD *)(*(_QWORD *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for AudioFeaturePrintKind.SoundParameters(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = v10 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    *(_QWORD *)a1 = *a2;
    *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
    v6 = *(int *)(v4 + 20);
    v7 = a1 + v6;
    v8 = (uint64_t)a2 + v6;
    v9 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  }
  return a1;
}

uint64_t _s20MLModelSpecification21AudioFeaturePrintKindO15SoundParametersVwxx_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = a1 + *(int *)(OUTLINED_FUNCTION_2_12() + 20);
  v2 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
}

void _s20MLModelSpecification21AudioFeaturePrintKindO15SoundParametersVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1, a2);
  v2 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification21AudioFeaturePrintKindO15SoundParametersVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *(_BYTE *)(a1 + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)a1 = v2;
  OUTLINED_FUNCTION_2_12();
  v3 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 24));
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification21AudioFeaturePrintKindO15SoundParametersVwtk_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1, a2);
  v2 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 32));
  OUTLINED_FUNCTION_156();
}

void _s20MLModelSpecification21AudioFeaturePrintKindO15SoundParametersVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_1_10(a1, a2);
  v2 = OUTLINED_FUNCTION_3_15();
  OUTLINED_FUNCTION_14_6(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 40));
  OUTLINED_FUNCTION_156();
}

uint64_t getEnumTagSinglePayload for AudioFeaturePrintKind.SoundParameters()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t storeEnumTagSinglePayload for AudioFeaturePrintKind.SoundParameters()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C68A8C()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_240C68AF4(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC40);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_240C68B34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t OUTLINED_FUNCTION_1_10(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  return type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(0);
}

uint64_t OUTLINED_FUNCTION_2_12()
{
  return type metadata accessor for Proto_CoreMLModels_AudioFeaturePrint.Sound(0);
}

uint64_t OUTLINED_FUNCTION_3_15()
{
  return sub_240F1C930();
}

uint64_t OUTLINED_FUNCTION_16_9()
{
  return type metadata accessor for AudioFeaturePrintKind.SoundParameters(0);
}

void OUTLINED_FUNCTION_17_13(uint64_t a1)
{
  uint64_t (*v1)(_QWORD);

  sub_240BE27A0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_22_7()
{
  return sub_240F1CF3C();
}

uint64_t NeuralNetwork.Quantization.bitCount.getter()
{
  uint64_t *v0;
  uint64_t result;

  result = *v0;
  if (*v0 < 0)
    __break(1u);
  return result;
}

uint64_t NeuralNetwork.Quantization.bitCount.setter(uint64_t result)
{
  _QWORD *v1;

  if (result < 0)
    __break(1u);
  else
    *v1 = result;
  return result;
}

uint64_t *(*NeuralNetwork.Quantization.bitCount.modify(uint64_t *(*result)(uint64_t *result, char a2)))(uint64_t *result, char a2)
{
  _QWORD *v1;

  *((_QWORD *)result + 1) = v1;
  if ((*v1 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)result = *v1;
    return sub_240C421A0;
  }
  return result;
}

void NeuralNetwork.Quantization.kind.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v5 = OUTLINED_FUNCTION_14_13();
  OUTLINED_FUNCTION_0();
  v7 = MEMORY[0x24BDAC7A8](v6);
  v9 = (char *)&v19 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v7);
  v11 = (char *)&v19 - v10;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_48();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC48);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_11_5();
  v14 = OUTLINED_FUNCTION_27_7();
  sub_240C68DF0(v1 + *(int *)(v14 + 20), v3);
  if (__swift_getEnumTagSinglePayload(v3, 1, v5) == 1)
  {
    v15 = type metadata accessor for NeuralNetwork.Quantization.Kind(0);
    v16 = v2;
    v17 = 1;
  }
  else
  {
    sub_240BE0B90(v3, (uint64_t)v11, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    sub_240BE0BF4((uint64_t)v11, (uint64_t)v9, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    sub_240C69034((uint64_t)v9, v2);
    OUTLINED_FUNCTION_3_2((uint64_t)v11);
    v15 = type metadata accessor for NeuralNetwork.Quantization.Kind(0);
    v16 = v2;
    v17 = 0;
  }
  __swift_storeEnumTagSinglePayload(v16, v17, 1, v15);
  type metadata accessor for NeuralNetwork.Quantization.Kind(0);
  if (__swift_getEnumTagSinglePayload(v2, 1, v15) == 1)
  {
    OUTLINED_FUNCTION_9_9();
    _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
    v18 = MEMORY[0x24BEE4AF8];
    *a1 = MEMORY[0x24BEE4AF8];
    a1[1] = v18;
    swift_storeEnumTagMultiPayload();
    sub_240BE0B68(v2, &qword_25708CC48);
  }
  else
  {
    sub_240BE0B90(v2, (uint64_t)a1, type metadata accessor for NeuralNetwork.Quantization.Kind);
  }
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C68DF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NeuralNetwork.Quantization.Kind(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CC80);
}

void sub_240C68E4C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t (*v5)(_QWORD);
  uint64_t v6;

  v2 = type metadata accessor for NeuralNetwork.Quantization.Kind(0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240BE0BF4(a1, (uint64_t)v4, v5);
  NeuralNetwork.Quantization.kind.setter((uint64_t)v4);
}

void NeuralNetwork.Quantization.kind.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  v9 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Quantization.Kind(v9);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_11_5();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_80();
  sub_240BE0BF4(a1, v5, type metadata accessor for NeuralNetwork.Quantization.Kind);
  if (OUTLINED_FUNCTION_363() == 1)
  {
    sub_240BE0B90(v5, v3, type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters);
    OUTLINED_FUNCTION_35_2(v3, v12, type metadata accessor for Proto_LookUpTableQuantizationParams);
  }
  else
  {
    sub_240BE0B90(v5, v4, type metadata accessor for NeuralNetwork.Quantization.LinearParameters);
    OUTLINED_FUNCTION_35_2(v4, v14, type metadata accessor for Proto_LinearQuantizationParams);
  }
  v13 = OUTLINED_FUNCTION_14_13();
  v15 = swift_storeEnumTagMultiPayload();
  OUTLINED_FUNCTION_31(v15, type metadata accessor for NeuralNetwork.Quantization.Kind);
  OUTLINED_FUNCTION_14_13();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v13);
  v16 = OUTLINED_FUNCTION_27_7();
  sub_240C69A88(v2, v1 + *(int *)(v16 + 20));
  OUTLINED_FUNCTION_13();
}

uint64_t sub_240C69034@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_14_13();
  if (swift_getEnumCaseMultiPayload() == 1)
    v4 = type metadata accessor for Proto_LookUpTableQuantizationParams;
  else
    v4 = type metadata accessor for Proto_LinearQuantizationParams;
  sub_240BE0B90(a1, a2, v4);
  type metadata accessor for NeuralNetwork.Quantization.Kind(0);
  return OUTLINED_FUNCTION_2_13();
}

uint64_t static NeuralNetwork.Quantization.Kind.linear(scale:bias:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  OUTLINED_FUNCTION_9_9();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_315();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  a3[1] = a2;
  type metadata accessor for NeuralNetwork.Quantization.Kind(0);
  return OUTLINED_FUNCTION_2_13();
}

void (*NeuralNetwork.Quantization.kind.modify(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  size_t v3;
  _QWORD *v4;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(type metadata accessor for NeuralNetwork.Quantization.Kind(0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  NeuralNetwork.Quantization.kind.getter(v4);
  return sub_240C69164;
}

void sub_240C69164(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240BE0BF4(*(_QWORD *)(a1 + 16), (uint64_t)v2, type metadata accessor for NeuralNetwork.Quantization.Kind);
    NeuralNetwork.Quantization.kind.setter((uint64_t)v2);
    sub_240BE10B8((uint64_t)v3, type metadata accessor for NeuralNetwork.Quantization.Kind);
  }
  else
  {
    NeuralNetwork.Quantization.kind.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

void NeuralNetwork.Quantization.init(bitCount:kind:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  type metadata accessor for NeuralNetwork.Quantization.Kind(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_313();
  *a3 = 0;
  v8 = (uint64_t)a3 + *(int *)(OUTLINED_FUNCTION_27_7() + 20);
  v9 = OUTLINED_FUNCTION_14_13();
  OUTLINED_FUNCTION_18_0(v8, v10, v11, v9);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    *a3 = a1;
    sub_240BE0BF4(a2, v3, type metadata accessor for NeuralNetwork.Quantization.Kind);
    NeuralNetwork.Quantization.kind.setter(v3);
    sub_240BE10B8(a2, type metadata accessor for NeuralNetwork.Quantization.Kind);
  }
}

void NeuralNetwork.Quantization.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD);
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_43_7();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_313();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  v6 = OUTLINED_FUNCTION_60();
  type metadata accessor for NeuralNetwork.Quantization(v6);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v0, v8, v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v10 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v10 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v10 + 32) = 0x746E756F43746962;
  *(_QWORD *)(v10 + 40) = 0xE800000000000000;
  if ((*v0 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v11 = MEMORY[0x24BEE1768];
    *(_QWORD *)(v10 + 48) = *v0;
    v12 = (uint64_t *)(v10 + 96);
    *(_QWORD *)(v10 + 72) = v11;
    *(_QWORD *)(v10 + 80) = 1684957547;
    *(_QWORD *)(v10 + 88) = 0xE400000000000000;
    *(_QWORD *)(v10 + 120) = type metadata accessor for NeuralNetwork.Quantization.Kind(0);
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v12);
    NeuralNetwork.Quantization.kind.getter(boxed_opaque_existential_0);
    v14 = OUTLINED_FUNCTION_44_1();
    OUTLINED_FUNCTION_18_0(v2, v15, v16, v14);
    OUTLINED_FUNCTION_46_4(v1, *MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
    sub_240F1CFA8();
    OUTLINED_FUNCTION_1();
  }
}

void NeuralNetwork.Quantization.LinearParameters.init(scale:bias:)(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  OUTLINED_FUNCTION_9_9();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  a3[1] = a2;
  OUTLINED_FUNCTION_156();
}

uint64_t static NeuralNetwork.Quantization.Kind.lookupTable(table:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  OUTLINED_FUNCTION_15_11();
  OUTLINED_FUNCTION_315();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a2 = a1;
  type metadata accessor for NeuralNetwork.Quantization.Kind(0);
  return OUTLINED_FUNCTION_2_13();
}

void NeuralNetwork.Quantization.LookupTableParameters.init(table:)(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  OUTLINED_FUNCTION_15_11();
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a2 = a1;
  OUTLINED_FUNCTION_44();
}

uint64_t static NeuralNetwork.Quantization.Kind.== infix(_:_:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  char v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  char v27;
  char v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  _BYTE v33[80];
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_22();
  v34 = v2;
  v35 = v3;
  v5 = v4;
  v7 = v6;
  type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_80();
  type metadata accessor for NeuralNetwork.Quantization.LinearParameters(0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v9);
  v10 = OUTLINED_FUNCTION_90();
  type metadata accessor for NeuralNetwork.Quantization.Kind(v10);
  OUTLINED_FUNCTION_0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = (uint64_t *)&v33[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x24BDAC7A8](v12);
  v16 = (uint64_t *)&v33[-v15];
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CC50);
  OUTLINED_FUNCTION_0();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = &v33[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v21 = (uint64_t)&v20[*(int *)(v18 + 48)];
  sub_240BE0BF4(v7, (uint64_t)v20, type metadata accessor for NeuralNetwork.Quantization.Kind);
  sub_240BE0BF4(v5, v21, type metadata accessor for NeuralNetwork.Quantization.Kind);
  if (OUTLINED_FUNCTION_363() == 1)
  {
    sub_240BE0BF4((uint64_t)v20, (uint64_t)v14, type metadata accessor for NeuralNetwork.Quantization.Kind);
    if (OUTLINED_FUNCTION_363() == 1)
    {
      OUTLINED_FUNCTION_35_2(v21, v22, type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters);
      sub_240BEAAF8(*v14, *v0);
      if ((v23 & 1) != 0)
      {
        OUTLINED_FUNCTION_15_11();
        sub_240F1C930();
        sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
        if ((sub_240F1CC90() & 1) != 0)
        {
          OUTLINED_FUNCTION_3_2((uint64_t)v0);
          v24 = (uint64_t)v14;
LABEL_14:
          OUTLINED_FUNCTION_3_2(v24);
          OUTLINED_FUNCTION_31(v29, type metadata accessor for NeuralNetwork.Quantization.Kind);
          return 1;
        }
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v0);
      v31 = (uint64_t)v14;
LABEL_17:
      OUTLINED_FUNCTION_3_2(v31);
      OUTLINED_FUNCTION_31(v32, type metadata accessor for NeuralNetwork.Quantization.Kind);
      return 0;
    }
    v25 = type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters;
    v26 = (uint64_t)v14;
  }
  else
  {
    sub_240BE0BF4((uint64_t)v20, (uint64_t)v16, type metadata accessor for NeuralNetwork.Quantization.Kind);
    if (OUTLINED_FUNCTION_363() != 1)
    {
      sub_240BE0B90(v21, (uint64_t)v1, type metadata accessor for NeuralNetwork.Quantization.LinearParameters);
      sub_240BEAAF8(*v16, *v1);
      if ((v27 & 1) != 0)
      {
        OUTLINED_FUNCTION_48_6();
        if ((v28 & 1) != 0)
        {
          OUTLINED_FUNCTION_9_9();
          sub_240F1C930();
          sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
          if ((sub_240F1CC90() & 1) != 0)
          {
            OUTLINED_FUNCTION_3_2((uint64_t)v1);
            v24 = (uint64_t)v16;
            goto LABEL_14;
          }
        }
      }
      OUTLINED_FUNCTION_3_2((uint64_t)v1);
      v31 = (uint64_t)v16;
      goto LABEL_17;
    }
    v25 = type metadata accessor for NeuralNetwork.Quantization.LinearParameters;
    v26 = (uint64_t)v16;
  }
  sub_240BE10B8(v26, v25);
  sub_240BE0B68((uint64_t)v20, &qword_25708CC50);
  return 0;
}

void static NeuralNetwork.Quantization.LinearParameters.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;
  uint64_t v4;

  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_11();
  if ((v2 & 1) != 0)
  {
    OUTLINED_FUNCTION_48_6();
    if ((v3 & 1) != 0)
    {
      v4 = OUTLINED_FUNCTION_9_9();
      OUTLINED_FUNCTION_11_6(*(int *)(v4 + 24));
      OUTLINED_FUNCTION_10_6(*(int *)(v4 + 24));
      sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
      OUTLINED_FUNCTION_5_7();
      OUTLINED_FUNCTION_9_5();
      OUTLINED_FUNCTION_45_6();
    }
  }
  OUTLINED_FUNCTION_13();
}

void static NeuralNetwork.Quantization.LookupTableParameters.== infix(_:_:)()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  OUTLINED_FUNCTION_30_8();
  OUTLINED_FUNCTION_13_4();
  MEMORY[0x24BDAC7A8](v0);
  OUTLINED_FUNCTION_3_7();
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_11_11();
  if ((v2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_15_11();
    OUTLINED_FUNCTION_11_6(*(int *)(v3 + 20));
    OUTLINED_FUNCTION_10_6(*(int *)(v3 + 20));
    sub_240BE18B8(&qword_25708BD88, (uint64_t (*)(uint64_t))MEMORY[0x24BE5BF10], MEMORY[0x24BE5BF20]);
    OUTLINED_FUNCTION_5_7();
    OUTLINED_FUNCTION_9_5();
    OUTLINED_FUNCTION_45_6();
  }
  OUTLINED_FUNCTION_13();
}

uint64_t NeuralNetwork.Quantization.LinearParameters.scale.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240C69910()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Quantization.LinearParameters.scale.setter(v0);
}

void NeuralNetwork.Quantization.LinearParameters.scale.setter(uint64_t a1)
{
  _QWORD *v1;

  swift_bridgeObjectRelease();
  *v1 = a1;
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Quantization.LinearParameters.scale.modify(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

uint64_t NeuralNetwork.Quantization.LinearParameters.bias.getter()
{
  return swift_bridgeObjectRetain();
}

void sub_240C6999C()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  NeuralNetwork.Quantization.LinearParameters.bias.setter(v0);
}

void NeuralNetwork.Quantization.LinearParameters.bias.setter(uint64_t a1)
{
  uint64_t v1;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  OUTLINED_FUNCTION_44();
}

void NeuralNetwork.Quantization.LinearParameters.bias.modify(_QWORD *a1)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 8);
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C69A1C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a1;
  v3 = a1[1];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v2;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 8) = v2;
    OUTLINED_FUNCTION_156();
  }
}

uint64_t type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CCA0);
}

uint64_t type metadata accessor for NeuralNetwork.Quantization.LinearParameters(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CC90);
}

uint64_t sub_240C69A88(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for NeuralNetwork.Quantization(uint64_t a1)
{
  return sub_240BE3274(a1, (uint64_t *)&unk_25708CC70);
}

void NeuralNetwork.Quantization.LinearParameters.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(_QWORD);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  OUTLINED_FUNCTION_22();
  OUTLINED_FUNCTION_15_6();
  OUTLINED_FUNCTION_43_7();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_8_11();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v0, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v8 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v8 + 16) = xmmword_240F1D370;
  *(_QWORD *)(v8 + 32) = 0x656C616373;
  *(_QWORD *)(v8 + 40) = 0xE500000000000000;
  v9 = *v0;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF90);
  *(_QWORD *)(v8 + 48) = v9;
  *(_QWORD *)(v8 + 72) = v10;
  *(_QWORD *)(v8 + 80) = 1935763810;
  v11 = v0[1];
  *(_QWORD *)(v8 + 120) = v10;
  *(_QWORD *)(v8 + 88) = 0xE400000000000000;
  *(_QWORD *)(v8 + 96) = v11;
  v12 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v13, v14, v12);
  OUTLINED_FUNCTION_46_4((uint64_t)v0, *MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 104));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_40_5();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void NeuralNetwork.Quantization.LookupTableParameters.table.modify(_QWORD *a1)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_44();
}

void sub_240C69C50(uint64_t *a1, char a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)a1[1];
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *v3 = v2;
    OUTLINED_FUNCTION_223();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *v3 = v2;
    OUTLINED_FUNCTION_156();
  }
}

void NeuralNetwork.Quantization.LookupTableParameters.customMirror.getter()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  OUTLINED_FUNCTION_22();
  v2 = OUTLINED_FUNCTION_15_6();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_59();
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = OUTLINED_FUNCTION_90();
  type metadata accessor for NeuralNetwork.Quantization.LookupTableParameters(v5);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_48();
  OUTLINED_FUNCTION_50_2((uint64_t)v0, v7, v8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v9 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v9 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v9 + 32) = 0x656C626174;
  *(_QWORD *)(v9 + 40) = 0xE500000000000000;
  v10 = *v0;
  *(_QWORD *)(v9 + 72) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708BF90);
  *(_QWORD *)(v9 + 48) = v10;
  v11 = OUTLINED_FUNCTION_44_1();
  OUTLINED_FUNCTION_18_0(v1, v12, v13, v11);
  OUTLINED_FUNCTION_46_4((uint64_t)v0, *MEMORY[0x24BEE43C0], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 104));
  swift_bridgeObjectRetain();
  OUTLINED_FUNCTION_40_5();
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

void sub_240C69DB8()
{
  sub_240BE18B8(&qword_25708CC58, type metadata accessor for Proto_QuantizationParams, (uint64_t)&unk_240F4DCCC);
}

void sub_240C69DE4()
{
  sub_240BE18B8(&qword_25708CC60, type metadata accessor for Proto_LinearQuantizationParams, (uint64_t)&unk_240F4DC54);
}

void sub_240C69E10()
{
  sub_240BE18B8(&qword_25708CC68, type metadata accessor for Proto_LookUpTableQuantizationParams, (uint64_t)&unk_240F4DBDC);
}

void sub_240C69E40(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Quantization.bitCount.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C69E64(uint64_t *a1)
{
  NeuralNetwork.Quantization.bitCount.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C69E84(_QWORD *a1@<X8>)
{
  NeuralNetwork.Quantization.kind.getter(a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C69EA4(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Quantization.LinearParameters.scale.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C69ECC(uint64_t *a1@<X8>)
{
  *a1 = NeuralNetwork.Quantization.LinearParameters.bias.getter();
  OUTLINED_FUNCTION_44();
}

uint64_t *_s12QuantizationVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int EnumCaseMultiPayload;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  uint64_t v19;
  char *v20;
  uint64_t v21;
  void (*v22)(char *, char *, uint64_t);
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  char *v28;

  v4 = type metadata accessor for Proto_QuantizationParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v6 = v4;
    *a1 = *a2;
    v7 = *(int *)(v4 + 20);
    v8 = (uint64_t *)((char *)a1 + v7);
    v9 = (uint64_t *)((char *)a2 + v7);
    v10 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v10))
    {
      v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
    }
    else
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v8 = *v9;
      if (EnumCaseMultiPayload == 1)
      {
        v14 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
        v15 = (char *)v8 + v14;
        v16 = (char *)v9 + v14;
        v17 = sub_240F1C930();
        v18 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16);
        swift_bridgeObjectRetain();
        v18(v15, v16, v17);
      }
      else
      {
        v8[1] = v9[1];
        v19 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
        v20 = (char *)v8 + v19;
        v28 = (char *)v9 + v19;
        v21 = sub_240F1C930();
        v22 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v22(v20, v28, v21);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v8, 0, 1, v10);
    }
    v23 = *(int *)(v6 + 24);
    v24 = (char *)a1 + v23;
    v25 = (char *)a2 + v23;
    v26 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
  }
  return a1;
}

uint64_t _s12QuantizationVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int EnumCaseMultiPayload;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = type metadata accessor for Proto_QuantizationParams(0);
  v3 = a1 + *(int *)(v2 + 20);
  v4 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
  if (!__swift_getEnumTagSinglePayload(v3, 1, v4))
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    swift_bridgeObjectRelease();
    if (EnumCaseMultiPayload == 1)
    {
      v6 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
    }
    else
    {
      swift_bridgeObjectRelease();
      v6 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
    }
    v7 = v3 + v6;
    v8 = sub_240F1C930();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  }
  v9 = a1 + *(int *)(v2 + 24);
  v10 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 8))(v9, v10);
}

_QWORD *_s12QuantizationVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, char *, uint64_t);
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void (*v19)(char *, char *, uint64_t);
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  char *v25;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_QuantizationParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
      v12 = (char *)v6 + v11;
      v13 = (char *)v7 + v11;
      v14 = sub_240F1C930();
      v15 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 16);
      swift_bridgeObjectRetain();
      v15(v12, v13, v14);
    }
    else
    {
      v6[1] = v7[1];
      v16 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
      v17 = (char *)v6 + v16;
      v25 = (char *)v7 + v16;
      v18 = sub_240F1C930();
      v19 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v19(v17, v25, v18);
    }
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v20 = *(int *)(v4 + 24);
  v21 = (char *)a1 + v20;
  v22 = (char *)a2 + v20;
  v23 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v23 - 8) + 16))(v21, v22, v23);
  return a1;
}

_QWORD *_s12QuantizationVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  void (*v16)(char *, char *, uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  uint64_t v24;
  char *v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  char *v29;
  uint64_t v30;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  char *v37;
  char *v38;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_QuantizationParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v6 = *v7;
      if (EnumCaseMultiPayload == 1)
      {
        v12 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
        v13 = (char *)v6 + v12;
        v14 = (char *)v7 + v12;
        v15 = sub_240F1C930();
        v16 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 16);
        swift_bridgeObjectRetain();
        v16(v13, v14, v15);
      }
      else
      {
        v6[1] = v7[1];
        v24 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
        v25 = (char *)v6 + v24;
        v37 = (char *)v7 + v24;
        v26 = sub_240F1C930();
        v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v27(v25, v37, v26);
      }
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_15;
    }
LABEL_7:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    v18 = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (v18 == 1)
    {
      v19 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
      v20 = (char *)v6 + v19;
      v21 = (char *)v7 + v19;
      v22 = sub_240F1C930();
      v23 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v22 - 8) + 16);
      swift_bridgeObjectRetain();
      v23(v20, v21, v22);
    }
    else
    {
      v6[1] = v7[1];
      v28 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
      v29 = (char *)v6 + v28;
      v38 = (char *)v7 + v28;
      v30 = sub_240F1C930();
      v31 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v31(v29, v38, v30);
    }
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v32 = *(int *)(v4 + 24);
  v33 = (char *)a1 + v32;
  v34 = (char *)a2 + v32;
  v35 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v35 - 8) + 24))(v33, v34, v35);
  return a1;
}

_QWORD *_s12QuantizationVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  int EnumCaseMultiPayload;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  char *v17;
  uint64_t v18;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_QuantizationParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
  if (__swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (EnumCaseMultiPayload == 1)
    {
      v11 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
    }
    else
    {
      v6[1] = v7[1];
      v11 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
    }
    v12 = (char *)v6 + v11;
    v13 = (char *)v7 + v11;
    v14 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, v13, v14);
    swift_storeEnumTagMultiPayload();
    __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
  }
  v15 = *(int *)(v4 + 24);
  v16 = (char *)a1 + v15;
  v17 = (char *)a2 + v15;
  v18 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(v16, v17, v18);
  return a1;
}

_QWORD *_s12QuantizationVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  int EnumTagSinglePayload;
  int v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  char *v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;

  *a1 = *a2;
  v4 = type metadata accessor for Proto_QuantizationParams(0);
  v5 = *(int *)(v4 + 20);
  v6 = (_QWORD *)((char *)a1 + v5);
  v7 = (_QWORD *)((char *)a2 + v5);
  v8 = type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v6, 1, v8);
  v10 = __swift_getEnumTagSinglePayload((uint64_t)v7, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v10)
    {
      EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      *v6 = *v7;
      if (EnumCaseMultiPayload == 1)
      {
        v12 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
      }
      else
      {
        v6[1] = v7[1];
        v12 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
      }
      v13 = (char *)v6 + v12;
      v14 = (char *)v7 + v12;
      v15 = sub_240F1C930();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(v13, v14, v15);
      swift_storeEnumTagMultiPayload();
      __swift_storeEnumTagSinglePayload((uint64_t)v6, 0, 1, v8);
      goto LABEL_15;
    }
LABEL_7:
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708C1E0);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
    goto LABEL_15;
  }
  if (v10)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    goto LABEL_7;
  }
  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)v6, type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType);
    v17 = swift_getEnumCaseMultiPayload();
    *v6 = *v7;
    if (v17 == 1)
    {
      v18 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
    }
    else
    {
      v6[1] = v7[1];
      v18 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
    }
    v19 = (char *)v6 + v18;
    v20 = (char *)v7 + v18;
    v21 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(v19, v20, v21);
    swift_storeEnumTagMultiPayload();
  }
LABEL_15:
  v22 = *(int *)(v4 + 24);
  v23 = (char *)a1 + v22;
  v24 = (char *)a2 + v22;
  v25 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 40))(v23, v24, v25);
  return a1;
}

uint64_t _s12QuantizationVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6AA48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_27_7();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s12QuantizationVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6AA78()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_27_7();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C6AA9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_QuantizationParams);
}

uint64_t *_s12QuantizationV4KindOwCP(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  int EnumCaseMultiPayload;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  void (*v17)(char *, char *, uint64_t);

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v12 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v12 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v7 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
      v8 = (char *)a1 + v7;
      v9 = (char *)a2 + v7;
      v10 = sub_240F1C930();
      v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
      swift_bridgeObjectRetain();
      v11(v8, v9, v10);
    }
    else
    {
      a1[1] = a2[1];
      v13 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
      v14 = (char *)a1 + v13;
      v15 = (char *)a2 + v13;
      v16 = sub_240F1C930();
      v17 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v17(v14, v15, v16);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t _s12QuantizationV4KindOwxx(uint64_t a1)
{
  int EnumCaseMultiPayload;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  swift_bridgeObjectRelease();
  if (EnumCaseMultiPayload == 1)
  {
    v3 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  }
  else
  {
    swift_bridgeObjectRelease();
    v3 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  }
  v4 = a1 + v3;
  v5 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

_QWORD *_s12QuantizationV4KindOwcp(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
    swift_bridgeObjectRetain();
    v9(v6, v7, v8);
  }
  else
  {
    a1[1] = a2[1];
    v10 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = sub_240F1C930();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s12QuantizationV4KindOwca(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for NeuralNetwork.Quantization.Kind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
      v6 = (char *)a1 + v5;
      v7 = (char *)a2 + v5;
      v8 = sub_240F1C930();
      v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
      swift_bridgeObjectRetain();
      v9(v6, v7, v8);
    }
    else
    {
      a1[1] = a2[1];
      v10 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
      v11 = (char *)a1 + v10;
      v12 = (char *)a2 + v10;
      v13 = sub_240F1C930();
      v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v14(v11, v12, v13);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *_s12QuantizationV4KindOwtk(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  *a1 = *a2;
  if (EnumCaseMultiPayload == 1)
  {
    v5 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  }
  else
  {
    a1[1] = a2[1];
    v5 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  }
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *_s12QuantizationV4KindOwta(_QWORD *a1, _QWORD *a2)
{
  int EnumCaseMultiPayload;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;

  if (a1 != a2)
  {
    sub_240BE10B8((uint64_t)a1, type metadata accessor for NeuralNetwork.Quantization.Kind);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    *a1 = *a2;
    if (EnumCaseMultiPayload == 1)
    {
      v5 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
    }
    else
    {
      a1[1] = a2[1];
      v5 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
    }
    v6 = (char *)a1 + v5;
    v7 = (char *)a2 + v5;
    v8 = sub_240F1C930();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_240C6B034()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = type metadata accessor for Proto_LinearQuantizationParams(319);
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for Proto_LookUpTableQuantizationParams(319);
    if (v2 <= 0x3F)
    {
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return result;
}

uint64_t *_s12QuantizationV16LinearParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_LinearQuantizationParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v7 = *(int *)(v4 + 24);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s12QuantizationV16LinearParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s12QuantizationV16LinearParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_240F1C930();
  v9 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v9(v6, v7, v8);
  return a1;
}

_QWORD *_s12QuantizationV16LinearParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_OWORD *_s12QuantizationV16LinearParametersVwtk(_OWORD *a1, _OWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s12QuantizationV16LinearParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_LinearQuantizationParams(0) + 24);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s12QuantizationV16LinearParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6B3D4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_9_9();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s12QuantizationV16LinearParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6B404()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_9_9();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C6B428(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LinearQuantizationParams);
}

uint64_t *_s12QuantizationV21LookupTableParametersVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  void (*v11)(char *, char *, uint64_t);

  v4 = type metadata accessor for Proto_LookUpTableQuantizationParams(0);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = *(int *)(v4 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_240F1C930();
    v11 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16);
    swift_bridgeObjectRetain();
    v11(v8, v9, v10);
  }
  return a1;
}

uint64_t _s12QuantizationV21LookupTableParametersVwxx(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  swift_bridgeObjectRelease();
  v2 = a1 + *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  v3 = sub_240F1C930();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
}

_QWORD *_s12QuantizationV21LookupTableParametersVwcp(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, char *, uint64_t);

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  v8 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16);
  swift_bridgeObjectRetain();
  v8(v5, v6, v7);
  return a1;
}

_QWORD *_s12QuantizationV21LookupTableParametersVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

_QWORD *_s12QuantizationV21LookupTableParametersVwtk(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  v4 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

_QWORD *_s12QuantizationV21LookupTableParametersVwta(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = *(int *)(type metadata accessor for Proto_LookUpTableQuantizationParams(0) + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_240F1C930();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t _s12QuantizationV21LookupTableParametersVwet()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6B6FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_15_11();
  v0 = OUTLINED_FUNCTION_5_0();
  return OUTLINED_FUNCTION_1_0(v0, v1, v2);
}

uint64_t _s12QuantizationV21LookupTableParametersVwst()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_240C6B72C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_15_11();
  v0 = OUTLINED_FUNCTION_3_0();
  return OUTLINED_FUNCTION_35(v0, v1, v2, v3);
}

uint64_t sub_240C6B750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_240BE32A4(a1, a2, a3, type metadata accessor for Proto_LookUpTableQuantizationParams);
}

uint64_t OUTLINED_FUNCTION_2_13()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_8_11()
{
  return type metadata accessor for NeuralNetwork.Quantization.LinearParameters(0);
}

uint64_t OUTLINED_FUNCTION_9_9()
{
  return type metadata accessor for Proto_LinearQuantizationParams(0);
}

void OUTLINED_FUNCTION_11_11()
{
  uint64_t *v0;
  uint64_t *v1;

  sub_240BEAAF8(*v1, *v0);
}

uint64_t OUTLINED_FUNCTION_14_13()
{
  return type metadata accessor for Proto_QuantizationParams.OneOf_QuantizationType(0);
}

uint64_t OUTLINED_FUNCTION_15_11()
{
  return type metadata accessor for Proto_LookUpTableQuantizationParams(0);
}

uint64_t OUTLINED_FUNCTION_27_7()
{
  return type metadata accessor for Proto_QuantizationParams(0);
}

uint64_t OUTLINED_FUNCTION_30_8()
{
  return sub_240F1C930();
}

uint64_t OUTLINED_FUNCTION_40_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_45_6()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_46_4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_48_6()
{
  uint64_t v0;
  uint64_t v1;

  sub_240BEAAF8(*(_QWORD *)(v1 + 8), *(_QWORD *)(v0 + 8));
}

uint64_t sub_240C6B828@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_240C6B840(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Block, a4);
}

uint64_t sub_240C6B834@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  return sub_240C6B840(a1, a2, a3, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, a4);
}

uint64_t sub_240C6B840@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(_QWORD)@<X3>, uint64_t a5@<X8>)
{
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_QWORD *)(a3 + 16) && (v8 = sub_240C66A40(a1, a2), (v9 & 1) != 0))
  {
    v10 = v8;
    v11 = *(_QWORD *)(a3 + 56);
    v12 = a4(0);
    OUTLINED_FUNCTION_61_4();
    sub_240BE0BF4(v11 + v13 * v10, a5, a4);
    v14 = a5;
    v15 = 0;
    v16 = 1;
    v17 = v12;
  }
  else
  {
    a4(0);
    v14 = OUTLINED_FUNCTION_54_7();
  }
  return __swift_storeEnumTagSinglePayload(v14, v15, v16, v17);
}

void sub_240C6B8CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C6B914(a1, a2, a3, (uint64_t)&qword_25708CCC0, (uint64_t)type metadata accessor for MLProgram.Function, (uint64_t)sub_240DAE604, (uint64_t)&qword_25708CCD0, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240C6B8F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  sub_240C6B914(a1, a2, a3, (uint64_t)&qword_25708CBE8, (uint64_t)type metadata accessor for MLProgram.Block, (uint64_t)sub_240DAEDBC, (uint64_t)&qword_25708CBF0, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
    a20);
}

void sub_240C6B914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t *v24;
  void (*v25)(char *, uint64_t, uint64_t);
  void (*v26)(char *, uint64_t, uint64_t);
  uint64_t (*v27)(_QWORD);
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;

  OUTLINED_FUNCTION_22();
  a19 = v21;
  a20 = v22;
  v24 = v23;
  v26 = v25;
  v28 = v27;
  v30 = v29;
  v32 = v31;
  v34 = v33;
  __swift_instantiateConcreteTypeFromMangledName(v35);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v36);
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_62_2();
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v37);
  v39 = (char *)&a9 - v38;
  if (__swift_getEnumTagSinglePayload(v34, 1, v40) == 1)
  {
    OUTLINED_FUNCTION_34_5(v34);
    sub_240C6FA44(v32, v30, v24, v28, v20);
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_34_5(v20);
  }
  else
  {
    sub_240BE0B90(v34, (uint64_t)v39, v28);
    v26(v39, v32, v30);
    OUTLINED_FUNCTION_173();
  }
  OUTLINED_FUNCTION_1();
}

uint64_t static ModelKind.mlProgram(main:)@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCB0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCB8);
  v5 = *(unsigned __int8 *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = (v5 + 32) & ~v5;
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_240F1DA30;
  v8 = (_QWORD *)(v7 + v6);
  v9 = v7 + v6 + *(int *)(v4 + 48);
  *v8 = 1852399981;
  v8[1] = 0xE400000000000000;
  sub_240BE0BF4(a1, v9, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function);
  OUTLINED_FUNCTION_63_2();
  v10 = sub_240F1CC48();
  MLProgram.init(version:functions:)(1, v10, a2);
  type metadata accessor for ModelKind(0);
  return swift_storeEnumTagMultiPayload();
}

uint64_t MLProgram.init(version:functions:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t result;

  type metadata accessor for Proto_MILSpec_Function(0);
  a3[1] = OUTLINED_FUNCTION_32_8();
  a3[2] = 0;
  a3[3] = 0xE000000000000000;
  type metadata accessor for Proto_MILSpec_Value(0);
  a3[4] = OUTLINED_FUNCTION_32_8();
  type metadata accessor for Proto_MILSpec_Program(0);
  _s20MLModelSpecification13NeuralNetworkV5LayerV14CopyParametersVAGycfC_0();
  *a3 = a1;
  sub_240C6ECDC(a2, type metadata accessor for Proto_MILSpec_Function, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, &qword_25708CCE8);
  v7 = v6;
  OUTLINED_FUNCTION_42_2();
  result = swift_bridgeObjectRelease();
  a3[1] = v7;
  return result;
}

uint64_t MLProgram.version.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t MLProgram.version.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*MLProgram.version.modify(_QWORD *a1))(uint64_t result)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = v1;
  return sub_240C3E138;
}

void MLProgram.functions.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_6(*(_QWORD *)(v0 + 8), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  OUTLINED_FUNCTION_122_1();
}

void sub_240C6BC30()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.functions.setter(v0);
}

void MLProgram.functions.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_240C6ECDC(a1, type metadata accessor for Proto_MILSpec_Function, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, &qword_25708CCE8);
  v3 = v2;
  OUTLINED_FUNCTION_173();
  swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = v3;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.functions.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_18_6(*(_QWORD *)(v1 + 8), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  a1[2] = v2;
  *a1 = v4;
  OUTLINED_FUNCTION_12_1();
}

void sub_240C6BD04(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_315();
    sub_240C6ECDC(v3, type metadata accessor for Proto_MILSpec_Function, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, &qword_25708CCE8);
    v5 = v4;
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_50_7();
    *(_QWORD *)(v2 + 8) = v5;
    OUTLINED_FUNCTION_31_4();
  }
  else
  {
    sub_240C6ECDC(*a1, type metadata accessor for Proto_MILSpec_Function, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, &qword_25708CCE8);
    v7 = v6;
    OUTLINED_FUNCTION_173();
    OUTLINED_FUNCTION_50_7();
    *(_QWORD *)(v2 + 8) = v7;
    OUTLINED_FUNCTION_12_1();
  }
}

uint64_t MLProgram.mainFunction.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  sub_240C6EFC4(*(_QWORD *)(v1 + 8), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  sub_240C6B840(1852399981, 0xE400000000000000, v3, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, a1);
  return swift_release();
}

void sub_240C6BE10(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0);
  MEMORY[0x24BDAC7A8](v2);
  v4 = (char *)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_240C5E950(a1, (uint64_t)v4, &qword_25708CCC0);
  MLProgram.mainFunction.setter((uint64_t)v4);
}

void MLProgram.mainFunction.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t vars0;
  uint64_t vars8;

  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v6 = v5 - v4;
  sub_240C5E950(a1, v5 - v4, &qword_25708CCC0);
  sub_240C6EFC4(*(_QWORD *)(v1 + 8), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  sub_240C6B914(v6, 1852399981, 0xE400000000000000, (uint64_t)&qword_25708CCC0, (uint64_t)type metadata accessor for MLProgram.Function, (uint64_t)sub_240DAE604, (uint64_t)&qword_25708CCD0, v8, v11, v7, v13, v14, v15, v16, v17, v18, v19, v20, vars0,
    vars8);
  sub_240C6ECDC(v12, type metadata accessor for Proto_MILSpec_Function, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, &qword_25708CCE8);
  v10 = v9;
  OUTLINED_FUNCTION_42_2();
  OUTLINED_FUNCTION_50_7();
  *(_QWORD *)(v1 + 8) = v10;
  sub_240BE0B68(a1, &qword_25708CCC0);
}

void MLProgram.mainFunction.modify(_QWORD *a1)
{
  uint64_t v1;
  size_t v3;
  void *v4;
  uint64_t v5;

  *a1 = v1;
  v3 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0) - 8) + 64);
  a1[1] = malloc(v3);
  v4 = malloc(v3);
  a1[2] = v4;
  sub_240C6EFC4(*(_QWORD *)(v1 + 8), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  sub_240C6B840(1852399981, 0xE400000000000000, v5, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, (uint64_t)v4);
  swift_release();
  OUTLINED_FUNCTION_12_1();
}

void sub_240C6C054(uint64_t a1, char a2)
{
  void *v2;
  void *v3;

  v2 = *(void **)(a1 + 8);
  v3 = *(void **)(a1 + 16);
  if ((a2 & 1) != 0)
  {
    sub_240C5E950(*(_QWORD *)(a1 + 16), (uint64_t)v2, &qword_25708CCC0);
    MLProgram.mainFunction.setter((uint64_t)v2);
    sub_240BE0B68((uint64_t)v3, &qword_25708CCC0);
  }
  else
  {
    MLProgram.mainFunction.setter(*(_QWORD *)(a1 + 16));
  }
  free(v3);
  free(v2);
}

uint64_t MLProgram.documentation.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 16);
  OUTLINED_FUNCTION_329();
  return v1;
}

void sub_240C6C0EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  MLProgram.documentation.setter(v1, v2);
}

void MLProgram.documentation.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  OUTLINED_FUNCTION_147_0();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_156();
}

void (*MLProgram.documentation.modify(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;

  a1[2] = v1;
  v3 = *(_QWORD *)(v1 + 24);
  *a1 = *(_QWORD *)(v1 + 16);
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return sub_240C6C18C;
}

void sub_240C6C18C(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    OUTLINED_FUNCTION_315();
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    swift_bridgeObjectRelease();
  }
  else
  {
    OUTLINED_FUNCTION_42_2();
    *(_QWORD *)(v3 + 16) = v4;
    *(_QWORD *)(v3 + 24) = v2;
    OUTLINED_FUNCTION_156();
  }
}

void MLProgram.attributes.getter()
{
  uint64_t v0;

  OUTLINED_FUNCTION_18_6(*(_QWORD *)(v0 + 32), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  OUTLINED_FUNCTION_122_1();
}

void sub_240C6C214()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  MLProgram.attributes.setter(v0);
}

void MLProgram.attributes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_240C6ECDC(a1, type metadata accessor for Proto_MILSpec_Value, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, &qword_25708CB60);
  v3 = v2;
  OUTLINED_FUNCTION_173();
  OUTLINED_FUNCTION_84_1();
  *(_QWORD *)(v1 + 32) = v3;
  OUTLINED_FUNCTION_12_1();
}

void MLProgram.attributes.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  a1[1] = v1;
  OUTLINED_FUNCTION_18_6(*(_QWORD *)(v1 + 32), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  a1[2] = v2;
  *a1 = v4;
  OUTLINED_FUNCTION_12_1();
}

void sub_240C6C2E4(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = a1[1];
  if ((a2 & 1) != 0)
  {
    v3 = OUTLINED_FUNCTION_315();
    sub_240C6ECDC(v3, type metadata accessor for Proto_MILSpec_Value, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, &qword_25708CB60);
    v5 = v4;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 32) = v5;
    OUTLINED_FUNCTION_31_4();
  }
  else
  {
    sub_240C6ECDC(*a1, type metadata accessor for Proto_MILSpec_Value, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, &qword_25708CB60);
    v7 = v6;
    OUTLINED_FUNCTION_173();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v2 + 32) = v7;
    OUTLINED_FUNCTION_12_1();
  }
}

uint64_t sub_240C6C380()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  unint64_t v46;
  uint64_t v47;
  _QWORD *v48;
  uint64_t v49;
  char v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  char v66;
  char v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  _QWORD *v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  unint64_t v84;
  _QWORD *v85;
  unint64_t v86;
  char v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char v91;
  uint64_t v92;
  unint64_t v93;
  _QWORD *v94;
  unint64_t v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  unint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v103;
  uint64_t v104;
  _QWORD v105[2];
  uint64_t *v106;
  uint64_t *v107;
  uint64_t *v108;
  uint64_t *v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t *v113;
  uint64_t *v114;
  uint64_t *v115;
  _QWORD *v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  unint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  unint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;

  OUTLINED_FUNCTION_22();
  v126 = v2;
  v127 = v3;
  v111 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CBF8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_85();
  v110 = v5;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v6);
  OUTLINED_FUNCTION_38_0();
  v109 = (uint64_t *)v7;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_38_0();
  v108 = v9;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v10);
  v107 = (_QWORD *)((char *)v105 - v11);
  v117 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCD8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_85();
  v116 = v13;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_38_0();
  v115 = (uint64_t *)v15;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v16);
  OUTLINED_FUNCTION_38_0();
  v114 = v17;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v18);
  v113 = (_QWORD *)((char *)v105 - v19);
  OUTLINED_FUNCTION_18_6(v0[1], (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  v21 = v20;
  v22 = *(_QWORD *)(v20 + 16);
  v106 = v0;
  if (v22)
  {
    v105[1] = v1;
    OUTLINED_FUNCTION_16_10();
    v23 = sub_240F1A2A8(v21);
    v25 = v24;
    v27 = v26 & 1;
    v28 = v125;
    v112 = v21;
    do
    {
      v121 = v23;
      v122 = v22;
      v29 = v117;
      v30 = v28;
      v31 = v113;
      v32 = (uint64_t)v113 + *(int *)(v117 + 48);
      LODWORD(v120) = v27 & 1;
      v33 = sub_240CB74BC(v32, v23, v25, v27 & 1, v21);
      *v31 = v33;
      v31[1] = v34;
      v35 = (uint64_t)v114;
      *v114 = v33;
      *(_QWORD *)(v35 + 8) = v34;
      sub_240BE0BF4(v32, v35 + *(int *)(v29 + 48), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function);
      v36 = v115;
      sub_240C67744(v35, (uint64_t)v115, &qword_25708CCD8);
      OUTLINED_FUNCTION_329();
      v37 = (uint64_t)v31;
      v28 = v30;
      OUTLINED_FUNCTION_15_2(v37);
      OUTLINED_FUNCTION_47_7();
      v38 = *v36;
      v39 = v36[1];
      sub_240F1CCE4();
      OUTLINED_FUNCTION_43_6();
      v118 = v124;
      v119 = v123;
      v40 = *(int *)(v29 + 48);
      v41 = v116;
      v42 = (uint64_t)v116 + v40;
      *v116 = v38;
      v41[1] = v39;
      sub_240BE0BF4((uint64_t)v36 + v40, (uint64_t)v41 + v40, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function);
      sub_240C641CC();
      v44 = v43;
      sub_240BE10B8(v42, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function);
      OUTLINED_FUNCTION_15_2((uint64_t)v36);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        OUTLINED_FUNCTION_12_10();
        v28 = v125;
      }
      v46 = *(_QWORD *)(v28 + 16);
      v45 = *(_QWORD *)(v28 + 24);
      v21 = v112;
      v47 = v121;
      if (v46 >= v45 >> 1)
      {
        sub_240BF0A90((_QWORD *)(v45 > 1), v46 + 1, 1);
        v28 = v125;
      }
      *(_QWORD *)(v28 + 16) = v46 + 1;
      v48 = (_QWORD *)(v28 + 24 * v46);
      v49 = v118;
      v48[4] = v119;
      v48[5] = v49;
      v48[6] = v44;
      v50 = v120;
      v51 = sub_240CB72FC(v47, v25, v120, v21);
      v53 = v52;
      v27 = v54 & 1;
      sub_240C67718(v47, v25, v50);
      v23 = v51;
      v25 = v53;
      v22 = v122 - 1;
    }
    while (v122 != 1);
    sub_240C67718(v51, v53, v27);
    OUTLINED_FUNCTION_36_9();
    v0 = v106;
  }
  else
  {
    OUTLINED_FUNCTION_36_9();
    v28 = MEMORY[0x24BEE4AF8];
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708C088);
  v55 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v55 + 16) = xmmword_240F1DA30;
  *(_QWORD *)(v55 + 32) = 0x6E6F6974636E7566;
  *(_QWORD *)(v55 + 40) = 0xE900000000000073;
  v56 = OUTLINED_FUNCTION_113();
  *(_QWORD *)(v56 + 16) = v28;
  *(_QWORD *)(v55 + 48) = v56 | 0xC000000000000000;
  OUTLINED_FUNCTION_57_6(v56, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  v58 = *(_QWORD *)(v57 + 16);
  v59 = swift_release();
  if (v58)
  {
    OUTLINED_FUNCTION_57_6(v59, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
    v61 = v60;
    v62 = *(_QWORD *)(v60 + 16);
    if (v62)
    {
      v118 = v55;
      OUTLINED_FUNCTION_16_10();
      v63 = sub_240F1A2A8(v61);
      v65 = v64;
      v67 = v66 & 1;
      v68 = v125;
      v119 = v61;
      do
      {
        v122 = v62;
        v69 = v111;
        v70 = v107;
        v71 = (uint64_t)v107 + *(int *)(v111 + 48);
        LODWORD(v121) = v67 & 1;
        v72 = sub_240CB737C(v71, v63, v65, v67 & 1, v61);
        *v70 = v72;
        v70[1] = v73;
        v74 = (uint64_t)v108;
        *v108 = v72;
        *(_QWORD *)(v74 + 8) = v73;
        sub_240BE0BF4(v71, v74 + *(int *)(v69 + 48), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v75 = v109;
        sub_240C67744(v74, (uint64_t)v109, &qword_25708CBF8);
        OUTLINED_FUNCTION_329();
        OUTLINED_FUNCTION_34_5((uint64_t)v70);
        OUTLINED_FUNCTION_47_7();
        v76 = *v75;
        v77 = v75[1];
        sub_240F1CCE4();
        OUTLINED_FUNCTION_43_6();
        v78 = v123;
        v120 = v124;
        v79 = *(int *)(v69 + 48);
        v80 = v110;
        v81 = (uint64_t)v110 + v79;
        *v110 = v76;
        v80[1] = v77;
        sub_240BE0BF4((uint64_t)v75 + v79, (uint64_t)v80 + v79, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v82 = sub_240DD12C8();
        sub_240BE10B8(v81, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        OUTLINED_FUNCTION_34_5((uint64_t)v75);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_12_10();
          v68 = v125;
        }
        v84 = *(_QWORD *)(v68 + 16);
        v83 = *(_QWORD *)(v68 + 24);
        v61 = v119;
        if (v84 >= v83 >> 1)
        {
          sub_240BF0A90((_QWORD *)(v83 > 1), v84 + 1, 1);
          v68 = v125;
        }
        *(_QWORD *)(v68 + 16) = v84 + 1;
        v85 = (_QWORD *)(v68 + 24 * v84);
        v86 = v120;
        v85[4] = v78;
        v85[5] = v86;
        v85[6] = v82;
        v87 = v121;
        v88 = sub_240CB72FC(v63, v65, v121, v61);
        v90 = v89;
        v67 = v91 & 1;
        sub_240C67718(v63, v65, v87);
        v63 = v88;
        v65 = v90;
        v62 = v122 - 1;
      }
      while (v122 != 1);
      sub_240C67718(v88, v90, v67);
      OUTLINED_FUNCTION_36_9();
      v0 = v106;
      v55 = v118;
    }
    else
    {
      OUTLINED_FUNCTION_36_9();
      v68 = MEMORY[0x24BEE4AF8];
    }
    v92 = OUTLINED_FUNCTION_113();
    *(_QWORD *)(v92 + 16) = v68;
    v93 = *(_QWORD *)(v55 + 16);
    if (v93 >= *(_QWORD *)(v55 + 24) >> 1)
    {
      OUTLINED_FUNCTION_56_6();
      v55 = v103;
    }
    *(_QWORD *)(v55 + 16) = v93 + 1;
    v94 = (_QWORD *)(v55 + 24 * v93);
    v94[4] = 0x7475626972747461;
    v94[5] = 0xEA00000000007365;
    v94[6] = v92 | 0xC000000000000000;
  }
  v95 = v0[3];
  v96 = HIBYTE(v95) & 0xF;
  if ((v95 & 0x2000000000000000) == 0)
    v96 = v0[2] & 0xFFFFFFFFFFFFLL;
  if (v96)
  {
    v97 = OUTLINED_FUNCTION_113();
    v123 = 34;
    v124 = 0xE100000000000000;
    swift_bridgeObjectRetain();
    sub_240F1CCE4();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_43_6();
    v98 = v124;
    *(_QWORD *)(v97 + 16) = v123;
    *(_QWORD *)(v97 + 24) = v98;
    v99 = *(_QWORD *)(v55 + 16);
    if (v99 >= *(_QWORD *)(v55 + 24) >> 1)
    {
      OUTLINED_FUNCTION_56_6();
      v55 = v104;
    }
    *(_QWORD *)(v55 + 16) = v99 + 1;
    v100 = v55 + 24 * v99;
    strcpy((char *)(v100 + 32), "documentation");
    *(_WORD *)(v100 + 46) = -4864;
    *(_QWORD *)(v100 + 48) = v97;
  }
  v101 = OUTLINED_FUNCTION_113();
  *(_QWORD *)(v101 + 16) = 0x6D6172676F7250;
  *(_QWORD *)(v101 + 24) = 0xE700000000000000;
  *(_QWORD *)(v101 + 32) = v55;
  return v101 | 0x4000000000000000;
}

uint64_t MLProgram.weightsFileNames()()
{
  uint64_t v0;
  uint64_t v2;

  v2 = MEMORY[0x24BEE4B08];
  sub_240C6CB0C(v0, (uint64_t)&v2);
  return v2;
}

void sub_240C6CB0C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  int64_t v21;
  int64_t v22;
  uint64_t v23;
  uint64_t v24;
  int64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t i;
  BOOL v29;
  unint64_t v30;
  int64_t v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  unint64_t v43;
  int64_t v44;
  unint64_t v45;
  int64_t v46;
  uint64_t v47;
  uint64_t *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  _QWORD *v53;
  int64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _QWORD *v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  char v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t (*v92)(uint64_t);
  uint64_t *v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  int64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  uint64_t v112;
  int64_t v113;
  int64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;

  v112 = a2;
  v104 = type metadata accessor for MLProgram.Value.Representation(0);
  MEMORY[0x24BDAC7A8](v104);
  v96 = (uint64_t)&v93 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = type metadata accessor for MLProgram.Value.BlobFileValue(0);
  MEMORY[0x24BDAC7A8](v4);
  v93 = (uint64_t *)((char *)&v93 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  v100 = type metadata accessor for Proto_MILSpec_Value.OneOf_Value(0);
  v6 = MEMORY[0x24BDAC7A8](v100);
  v95 = (uint64_t)&v93 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v94 = (uint64_t)&v93 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB50);
  MEMORY[0x24BDAC7A8](v9);
  v107 = (uint64_t)&v93 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  MEMORY[0x24BDAC7A8](v11);
  v103 = (char *)&v93 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  MEMORY[0x24BDAC7A8](v13);
  v102 = (uint64_t)&v93 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = type metadata accessor for MLProgram.Value();
  v118 = *(_QWORD *)(v101 - 8);
  MEMORY[0x24BDAC7A8](v101);
  v117 = (uint64_t)&v93 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v99 = type metadata accessor for Proto_MILSpec_Value(0);
  v116 = *(_QWORD *)(v99 - 8);
  MEMORY[0x24BDAC7A8](v99);
  v115 = (uint64_t)&v93 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0);
  MEMORY[0x24BDAC7A8](v17);
  v19 = (char *)&v93 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v106 = a1;
  v20 = *(_QWORD *)(a1 + 8);
  sub_240C6EFC4(v20, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  v22 = 0;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v21 + 64;
  v26 = v24 & *(_QWORD *)(v21 + 64);
  v113 = (unint64_t)(v23 + 63) >> 6;
  v114 = v21;
  if (!v26)
    goto LABEL_5;
LABEL_4:
  v27 = __clz(__rbit64(v26));
  v26 &= v26 - 1;
  for (i = v27 | (v22 << 6); ; i = __clz(__rbit64(v30)) + (v22 << 6))
  {
    v32 = (uint64_t *)(*(_QWORD *)(v114 + 48) + 16 * i);
    v34 = *v32;
    v33 = v32[1];
    swift_bridgeObjectRetain();
    sub_240C6EFC4(v20, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
    sub_240C6B840(v34, v33, v35, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, (uint64_t)v19);
    swift_bridgeObjectRelease();
    swift_release();
    v36 = type metadata accessor for MLProgram.Function();
    if (__swift_getEnumTagSinglePayload((uint64_t)v19, 1, v36) == 1)
      goto LABEL_98;
    sub_240C64E0C();
    sub_240BE10B8((uint64_t)v19, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function);
    if (v26)
      goto LABEL_4;
LABEL_5:
    v29 = __OFADD__(v22++, 1);
    if (v29)
    {
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    if (v22 >= v113)
      goto LABEL_27;
    v30 = *(_QWORD *)(v25 + 8 * v22);
    if (!v30)
      break;
LABEL_19:
    v26 = (v30 - 1) & v30;
  }
  v31 = v22 + 1;
  if (v22 + 1 >= v113)
    goto LABEL_27;
  v30 = *(_QWORD *)(v25 + 8 * v31);
  if (v30)
    goto LABEL_18;
  v31 = v22 + 2;
  if (v22 + 2 >= v113)
    goto LABEL_27;
  v30 = *(_QWORD *)(v25 + 8 * v31);
  if (v30)
    goto LABEL_18;
  v31 = v22 + 3;
  if (v22 + 3 >= v113)
    goto LABEL_27;
  v30 = *(_QWORD *)(v25 + 8 * v31);
  if (v30)
    goto LABEL_18;
  v31 = v22 + 4;
  if (v22 + 4 >= v113)
    goto LABEL_27;
  v30 = *(_QWORD *)(v25 + 8 * v31);
  if (v30)
  {
LABEL_18:
    v22 = v31;
    goto LABEL_19;
  }
  v31 = v22 + 5;
  if (v22 + 5 < v113)
  {
    v30 = *(_QWORD *)(v25 + 8 * v31);
    if (!v30)
    {
      while (1)
      {
        v22 = v31 + 1;
        if (__OFADD__(v31, 1))
          break;
        if (v22 >= v113)
          goto LABEL_27;
        v30 = *(_QWORD *)(v25 + 8 * v22);
        ++v31;
        if (v30)
          goto LABEL_19;
      }
LABEL_96:
      __break(1u);
      goto LABEL_97;
    }
    goto LABEL_18;
  }
LABEL_27:
  swift_release();
  sub_240C6EFC4(*(_QWORD *)(v106 + 32), (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  v37 = 0;
  v39 = *(_QWORD *)(v38 + 64);
  v97 = v38 + 64;
  v105 = v38;
  v40 = 1 << *(_BYTE *)(v38 + 32);
  if (v40 < 64)
    v41 = ~(-1 << v40);
  else
    v41 = -1;
  v42 = v41 & v39;
  v98 = (unint64_t)(v40 + 63) >> 6;
  if ((v41 & v39) == 0)
    goto LABEL_32;
  do
  {
    v110 = (v42 - 1) & v42;
    v111 = v37;
    v43 = __clz(__rbit64(v42)) | (v37 << 6);
LABEL_49:
    v48 = (uint64_t *)(*(_QWORD *)(v105 + 48) + 16 * v43);
    v50 = *v48;
    v49 = v48[1];
    v108 = v50;
    v109 = v49;
    v51 = *(_QWORD *)(v106 + 32);
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v52 = sub_240F1CE64();
    v53 = (_QWORD *)v52;
    v54 = 0;
    v55 = 1 << *(_BYTE *)(v51 + 32);
    v56 = *(_QWORD *)(v51 + 64);
    v113 = v51 + 64;
    if (v55 < 64)
      v57 = ~(-1 << v55);
    else
      v57 = -1;
    v58 = v57 & v56;
    v114 = (unint64_t)(v55 + 63) >> 6;
    v59 = v52 + 64;
    if ((v57 & v56) != 0)
    {
LABEL_53:
      v60 = __clz(__rbit64(v58));
      v58 &= v58 - 1;
      v61 = v60 | (v54 << 6);
      goto LABEL_70;
    }
    while (1)
    {
      v62 = v54 + 1;
      if (__OFADD__(v54, 1))
      {
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v62 >= v114)
        goto LABEL_73;
      v63 = *(_QWORD *)(v113 + 8 * v62);
      ++v54;
      if (!v63)
      {
        v54 = v62 + 1;
        if (v62 + 1 >= v114)
          goto LABEL_73;
        v63 = *(_QWORD *)(v113 + 8 * v54);
        if (!v63)
        {
          v54 = v62 + 2;
          if (v62 + 2 >= v114)
            goto LABEL_73;
          v63 = *(_QWORD *)(v113 + 8 * v54);
          if (!v63)
          {
            v54 = v62 + 3;
            if (v62 + 3 >= v114)
              goto LABEL_73;
            v63 = *(_QWORD *)(v113 + 8 * v54);
            if (!v63)
              break;
          }
        }
      }
LABEL_69:
      v58 = (v63 - 1) & v63;
      v61 = __clz(__rbit64(v63)) + (v54 << 6);
LABEL_70:
      v65 = (uint64_t *)(*(_QWORD *)(v51 + 48) + 16 * v61);
      v67 = *v65;
      v66 = v65[1];
      v68 = v115;
      sub_240BE0BF4(*(_QWORD *)(v51 + 56) + *(_QWORD *)(v116 + 72) * v61, v115, type metadata accessor for Proto_MILSpec_Value);
      v69 = v68;
      v70 = v117;
      sub_240BE0B90(v69, v117, type metadata accessor for Proto_MILSpec_Value);
      *(_QWORD *)(v59 + ((v61 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v61;
      v71 = (_QWORD *)(v53[6] + 16 * v61);
      *v71 = v67;
      v71[1] = v66;
      sub_240BE0B90(v70, v53[7] + *(_QWORD *)(v118 + 72) * v61, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      v72 = v53[2];
      v29 = __OFADD__(v72, 1);
      v73 = v72 + 1;
      if (v29)
      {
        __break(1u);
LABEL_91:
        swift_release();
        return;
      }
      v53[2] = v73;
      swift_bridgeObjectRetain();
      if (v58)
        goto LABEL_53;
    }
    v64 = v62 + 4;
    if (v64 < v114)
    {
      v63 = *(_QWORD *)(v113 + 8 * v64);
      if (!v63)
      {
        while (1)
        {
          v54 = v64 + 1;
          if (__OFADD__(v64, 1))
            goto LABEL_93;
          if (v54 >= v114)
            goto LABEL_73;
          v63 = *(_QWORD *)(v113 + 8 * v54);
          ++v64;
          if (v63)
            goto LABEL_69;
        }
      }
      v54 = v64;
      goto LABEL_69;
    }
LABEL_73:
    if (v53[2])
    {
      v74 = v109;
      swift_bridgeObjectRetain();
      v75 = sub_240C66A40(v108, v74);
      v77 = (uint64_t)v103;
      v76 = v104;
      v78 = v101;
      v79 = v102;
      if ((v80 & 1) != 0)
      {
        sub_240BE0BF4(v53[7] + *(_QWORD *)(v118 + 72) * v75, v102, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v81 = v79;
        v82 = 0;
      }
      else
      {
        v81 = v102;
        v82 = 1;
      }
      __swift_storeEnumTagSinglePayload(v81, v82, 1, v78);
      swift_bridgeObjectRelease();
    }
    else
    {
      v78 = v101;
      v79 = v102;
      __swift_storeEnumTagSinglePayload(v102, 1, 1, v101);
      v77 = (uint64_t)v103;
      v76 = v104;
    }
    swift_release();
    if (__swift_getEnumTagSinglePayload(v79, 1, v78) == 1)
      goto LABEL_99;
    v83 = v107;
    sub_240C5E950(v79 + *(int *)(v99 + 20), v107, &qword_25708CB50);
    v84 = 1;
    if (__swift_getEnumTagSinglePayload(v83, 1, v100) != 1)
    {
      v85 = v94;
      sub_240BE0B90(v107, v94, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
      v86 = v95;
      sub_240BE0BF4(v85, v95, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
      sub_240C77BEC(v86);
      sub_240BE10B8(v85, type metadata accessor for Proto_MILSpec_Value.OneOf_Value);
      v84 = 0;
    }
    __swift_storeEnumTagSinglePayload(v77, v84, 1, v76);
    if (__swift_getEnumTagSinglePayload(v77, 1, v76) == 1)
    {
      sub_240BE0B68(v77, &qword_25708CB10);
      v42 = v110;
      v37 = v111;
    }
    else
    {
      v87 = v96;
      sub_240BE0BF4(v77, v96, type metadata accessor for MLProgram.Value.Representation);
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        v88 = v93;
        sub_240BE0B90(v87, (uint64_t)v93, type metadata accessor for MLProgram.Value.BlobFileValue);
        v89 = *v88;
        v90 = v88[1];
        swift_bridgeObjectRetain();
        sub_240C6FB8C(&v119, v89, v90);
        swift_bridgeObjectRelease();
        v91 = (uint64_t)v88;
        v92 = type metadata accessor for MLProgram.Value.BlobFileValue;
      }
      else
      {
        v91 = v87;
        v92 = type metadata accessor for MLProgram.Value.Representation;
      }
      sub_240BE10B8(v91, v92);
      v42 = v110;
      v37 = v111;
      sub_240BE10B8(v77, type metadata accessor for MLProgram.Value.Representation);
    }
    sub_240BE10B8(v79, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
  }
  while (v42);
LABEL_32:
  v44 = v37 + 1;
  if (__OFADD__(v37, 1))
    goto LABEL_95;
  if (v44 >= v98)
    goto LABEL_91;
  v45 = *(_QWORD *)(v97 + 8 * v44);
  v46 = v37 + 1;
  if (v45)
    goto LABEL_48;
  v46 = v37 + 2;
  if (v37 + 2 >= v98)
    goto LABEL_91;
  v45 = *(_QWORD *)(v97 + 8 * v46);
  if (v45)
    goto LABEL_48;
  v46 = v37 + 3;
  if (v37 + 3 >= v98)
    goto LABEL_91;
  v45 = *(_QWORD *)(v97 + 8 * v46);
  if (v45)
    goto LABEL_48;
  v46 = v37 + 4;
  if (v37 + 4 >= v98)
    goto LABEL_91;
  v45 = *(_QWORD *)(v97 + 8 * v46);
  if (v45)
    goto LABEL_48;
  v46 = v37 + 5;
  if (v37 + 5 >= v98)
    goto LABEL_91;
  v45 = *(_QWORD *)(v97 + 8 * v46);
  if (v45)
    goto LABEL_48;
  v47 = v37 + 6;
  if (v37 + 6 >= v98)
    goto LABEL_91;
  v45 = *(_QWORD *)(v97 + 8 * v47);
  v46 = v37 + 6;
  if (v45)
  {
LABEL_48:
    v110 = (v45 - 1) & v45;
    v111 = v46;
    v43 = __clz(__rbit64(v45)) + (v46 << 6);
    goto LABEL_49;
  }
  while (1)
  {
    v46 = v47 + 1;
    if (__OFADD__(v47, 1))
      break;
    if (v46 >= v98)
      goto LABEL_91;
    v45 = *(_QWORD *)(v97 + 8 * v46);
    ++v47;
    if (v45)
      goto LABEL_48;
  }
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
}

Swift::Void __swiftcall MLProgram.updateWeightsFileName(to:)(Swift::String to)
{
  uint64_t v1;
  void *object;
  uint64_t countAndFlagsBits;

  object = to._object;
  countAndFlagsBits = to._countAndFlagsBits;
  swift_bridgeObjectRetain();
  sub_240C6D624(v1, countAndFlagsBits, (uint64_t)object);
}

uint64_t sub_240C6D624(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t (*v17)();
  uint64_t (*v18)(uint64_t);
  int64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t i;
  BOOL v27;
  int64_t v28;
  unint64_t v29;
  int64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t (*v33)();
  uint64_t (*v34)(uint64_t);
  _QWORD *v35;
  _QWORD *v36;
  unint64_t v37;
  char v38;
  unint64_t v39;
  char v40;
  unint64_t v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  int64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  int64_t v57;
  unint64_t v58;
  int64_t v59;
  uint64_t *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  _QWORD *v64;
  int64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  unint64_t v73;
  int64_t v74;
  uint64_t *v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  char v87;
  unint64_t v88;
  char v89;
  char v90;
  uint64_t v91;
  unint64_t v92;
  char v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  int64_t v100;
  uint64_t result;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  int64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  int64_t v111;
  int64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  int64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  uint64_t v123;
  _QWORD *v124;

  isUniquelyReferenced_nonNull_native = a3;
  v115 = a2;
  v116 = a3;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  v6 = MEMORY[0x24BDAC7A8](v5);
  v104 = (uint64_t)&v103 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v107 = (char *)&v103 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  MEMORY[0x24BDAC7A8](v9);
  v106 = (char *)&v103 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v108 = type metadata accessor for MLProgram.Value();
  v123 = *(_QWORD *)(v108 - 8);
  MEMORY[0x24BDAC7A8](v108);
  v122 = (uint64_t)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for Proto_MILSpec_Value(0);
  v121 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v120 = (uint64_t)&v103 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0);
  MEMORY[0x24BDAC7A8](v14);
  v113 = (uint64_t)&v103 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v117 = a1;
  v16 = *(_QWORD *)(a1 + 8);
  swift_bridgeObjectRetain_n();
  v17 = type metadata accessor for MLProgram.Function;
  v18 = type metadata accessor for Proto_MILSpec_Function;
  v19 = 0;
  sub_240C6EFC4(v16, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  v20 = 0;
  v22 = *(_QWORD *)(v21 + 64);
  v111 = v21 + 64;
  v114 = v21;
  v23 = 1 << *(_BYTE *)(v21 + 32);
  v24 = -1;
  if (v23 < 64)
    v24 = ~(-1 << v23);
  v25 = v24 & v22;
  v112 = (unint64_t)(v23 + 63) >> 6;
  if (!v25)
    goto LABEL_5;
LABEL_4:
  v118 = (v25 - 1) & v25;
  v119 = v20;
  for (i = __clz(__rbit64(v25)) | (v20 << 6); ; i = __clz(__rbit64(v29)) + (v28 << 6))
  {
    v31 = (uint64_t *)(*(_QWORD *)(v114 + 48) + 16 * i);
    isUniquelyReferenced_nonNull_native = *v31;
    v32 = v31[1];
    swift_bridgeObjectRetain();
    v33 = v17;
    v34 = v18;
    sub_240C6EFC4(v16, (uint64_t (*)(_QWORD))v17, v18, &qword_25708CCF0);
    v36 = v35;
    swift_bridgeObjectRetain();
    swift_isUniquelyReferenced_nonNull_native();
    v124 = v36;
    swift_bridgeObjectRetain();
    v37 = sub_240C66A40(isUniquelyReferenced_nonNull_native, v32);
    if (__OFADD__(v36[2], (v38 & 1) == 0))
      goto LABEL_93;
    v39 = v37;
    v40 = v38;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCD0);
    if ((sub_240F1CE34() & 1) != 0)
    {
      v41 = sub_240C66A40(isUniquelyReferenced_nonNull_native, v32);
      if ((v40 & 1) != (v42 & 1))
        goto LABEL_102;
      v39 = v41;
    }
    if ((v40 & 1) == 0)
      goto LABEL_100;
    v43 = v124[7];
    v44 = type metadata accessor for MLProgram.Function();
    v45 = v43 + *(_QWORD *)(*(_QWORD *)(v44 - 8) + 72) * v39;
    v46 = v113;
    v17 = v33;
    sub_240BE0B90(v45, v113, (uint64_t (*)(_QWORD))v33);
    __swift_storeEnumTagSinglePayload(v46, 0, 1, v44);
    swift_bridgeObjectRetain();
    sub_240C65704();
    sub_240C6F7D8();
    sub_240BE0B68(v46, &qword_25708CCC0);
    swift_bridgeObjectRelease();
    v47 = (uint64_t)v124;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v18 = v34;
    sub_240C6ECDC(v47, v34, (uint64_t (*)(_QWORD))v33, &qword_25708CCE8);
    v16 = v48;
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = v117;
    swift_bridgeObjectRelease();
    *(_QWORD *)(isUniquelyReferenced_nonNull_native + 8) = v16;
    v25 = v118;
    v20 = v119;
    if (v118)
      goto LABEL_4;
LABEL_5:
    v27 = __OFADD__(v20, 1);
    v28 = v20 + 1;
    if (v27)
      goto LABEL_95;
    if (v28 >= v112)
      goto LABEL_31;
    v29 = *(_QWORD *)(v111 + 8 * v28);
    if (!v29)
      break;
LABEL_19:
    v118 = (v29 - 1) & v29;
    v119 = v28;
  }
  v30 = v28 + 1;
  if (v28 + 1 >= v112)
    goto LABEL_31;
  v29 = *(_QWORD *)(v111 + 8 * v30);
  if (v29)
    goto LABEL_18;
  v30 = v28 + 2;
  if (v28 + 2 >= v112)
    goto LABEL_31;
  v29 = *(_QWORD *)(v111 + 8 * v30);
  if (v29)
    goto LABEL_18;
  v30 = v28 + 3;
  if (v28 + 3 >= v112)
    goto LABEL_31;
  v29 = *(_QWORD *)(v111 + 8 * v30);
  if (v29)
    goto LABEL_18;
  v30 = v28 + 4;
  if (v28 + 4 >= v112)
    goto LABEL_31;
  v29 = *(_QWORD *)(v111 + 8 * v30);
  if (v29)
    goto LABEL_18;
  v30 = v28 + 5;
  if (v28 + 5 >= v112)
    goto LABEL_31;
  v29 = *(_QWORD *)(v111 + 8 * v30);
  if (v29)
  {
LABEL_18:
    v28 = v30;
    goto LABEL_19;
  }
  while (1)
  {
    v28 = v30 + 1;
    if (__OFADD__(v30, 1))
      goto LABEL_98;
    if (v28 >= v112)
      break;
    v29 = *(_QWORD *)(v111 + 8 * v28);
    ++v30;
    if (v29)
      goto LABEL_19;
  }
LABEL_31:
  swift_release();
  v49 = *(_QWORD *)(v117 + 32);
  sub_240C6EFC4(v49, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  v50 = 0;
  v52 = *(_QWORD *)(v51 + 64);
  v103 = v51 + 64;
  v109 = v51;
  v53 = 1 << *(_BYTE *)(v51 + 32);
  if (v53 < 64)
    v54 = ~(-1 << v53);
  else
    v54 = -1;
  v55 = v54 & v52;
  v105 = (unint64_t)(v53 + 63) >> 6;
  if (!v55)
    goto LABEL_36;
LABEL_35:
  v111 = v50;
  v112 = v19;
  v110 = (v55 - 1) & v55;
  v56 = __clz(__rbit64(v55)) | (v50 << 6);
  while (2)
  {
    v60 = (uint64_t *)(*(_QWORD *)(v109 + 48) + 16 * v56);
    v62 = *v60;
    v61 = v60[1];
    v113 = v62;
    v114 = v61;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v63 = sub_240F1CE64();
    v64 = (_QWORD *)v63;
    v65 = 0;
    v66 = *(_QWORD *)(v49 + 64);
    v118 = v49 + 64;
    v67 = 1 << *(_BYTE *)(v49 + 32);
    if (v67 < 64)
      v68 = ~(-1 << v67);
    else
      v68 = -1;
    v69 = v68 & v66;
    v119 = (unint64_t)(v67 + 63) >> 6;
    v70 = v63 + 64;
    if ((v68 & v66) != 0)
    {
LABEL_53:
      v71 = __clz(__rbit64(v69));
      v69 &= v69 - 1;
      v72 = v71 | (v65 << 6);
      goto LABEL_67;
    }
    while (2)
    {
      v27 = __OFADD__(v65++, 1);
      if (v27)
      {
        __break(1u);
LABEL_93:
        __break(1u);
        goto LABEL_94;
      }
      if (v65 >= v119)
        goto LABEL_74;
      v73 = *(_QWORD *)(v118 + 8 * v65);
      if (v73)
      {
LABEL_66:
        v69 = (v73 - 1) & v73;
        v72 = __clz(__rbit64(v73)) + (v65 << 6);
LABEL_67:
        v75 = (uint64_t *)(*(_QWORD *)(v49 + 48) + 16 * v72);
        v77 = *v75;
        v76 = v75[1];
        v78 = v120;
        isUniquelyReferenced_nonNull_native = (uint64_t)type metadata accessor for Proto_MILSpec_Value;
        sub_240BE0BF4(*(_QWORD *)(v49 + 56) + *(_QWORD *)(v121 + 72) * v72, v120, type metadata accessor for Proto_MILSpec_Value);
        v79 = v78;
        v80 = v122;
        sub_240BE0B90(v79, v122, type metadata accessor for Proto_MILSpec_Value);
        *(_QWORD *)(v70 + ((v72 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v72;
        v81 = (_QWORD *)(v64[6] + 16 * v72);
        *v81 = v77;
        v81[1] = v76;
        sub_240BE0B90(v80, v64[7] + *(_QWORD *)(v123 + 72) * v72, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
        v82 = v64[2];
        v27 = __OFADD__(v82, 1);
        v83 = v82 + 1;
        if (v27)
        {
          __break(1u);
          goto LABEL_91;
        }
        v64[2] = v83;
        swift_bridgeObjectRetain();
        if (v69)
          goto LABEL_53;
        continue;
      }
      break;
    }
    v74 = v65 + 1;
    if (v65 + 1 >= v119)
      goto LABEL_74;
    v73 = *(_QWORD *)(v118 + 8 * v74);
    if (v73)
      goto LABEL_65;
    v74 = v65 + 2;
    if (v65 + 2 >= v119)
      goto LABEL_74;
    v73 = *(_QWORD *)(v118 + 8 * v74);
    if (v73)
      goto LABEL_65;
    v74 = v65 + 3;
    if (v65 + 3 >= v119)
      goto LABEL_74;
    v73 = *(_QWORD *)(v118 + 8 * v74);
    if (v73)
      goto LABEL_65;
    v74 = v65 + 4;
    if (v65 + 4 >= v119)
    {
LABEL_74:
      v84 = v114;
      swift_bridgeObjectRetain_n();
      isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v124 = v64;
      swift_bridgeObjectRetain();
      v85 = v113;
      v86 = sub_240C66A40(v113, v84);
      if (__OFADD__(v64[2], (v87 & 1) == 0))
        goto LABEL_96;
      v88 = v86;
      v89 = v87;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
      v90 = sub_240F1CE34();
      isUniquelyReferenced_nonNull_native = (uint64_t)v106;
      v91 = (uint64_t)v107;
      if ((v90 & 1) != 0)
      {
        v92 = sub_240C66A40(v85, v84);
        if ((v89 & 1) != (v93 & 1))
          goto LABEL_102;
        v88 = v92;
      }
      if ((v89 & 1) == 0)
        goto LABEL_101;
      sub_240BE0B90(v124[7] + *(_QWORD *)(v123 + 72) * v88, isUniquelyReferenced_nonNull_native, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      __swift_storeEnumTagSinglePayload(isUniquelyReferenced_nonNull_native, 0, 1, v108);
      v94 = isUniquelyReferenced_nonNull_native;
      MLProgram.Value.representation.getter(v91);
      v95 = type metadata accessor for MLProgram.Value.Representation(0);
      if (__swift_getEnumTagSinglePayload(v91, 1, v95))
      {
        v96 = v104;
        sub_240C5E950(v91, v104, &qword_25708CB10);
        MLProgram.Value.representation.setter(v96);
        sub_240BE0B68(v91, &qword_25708CB10);
      }
      else
      {
        v97 = v116;
        swift_bridgeObjectRetain();
        sub_240C77F1C(v91, v115, v97);
        MLProgram.Value.representation.setter(v91);
      }
      sub_240C6F7D8();
      sub_240BE0B68(v94, &qword_25708CB18);
      swift_bridgeObjectRelease();
      v98 = (uint64_t)v124;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v19 = v112;
      sub_240C6ECDC(v98, type metadata accessor for Proto_MILSpec_Value, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, &qword_25708CB60);
      v49 = v99;
      swift_bridgeObjectRelease();
      isUniquelyReferenced_nonNull_native = v117;
      swift_bridgeObjectRelease();
      *(_QWORD *)(isUniquelyReferenced_nonNull_native + 32) = v49;
      v55 = v110;
      v50 = v111;
      if (!v110)
      {
LABEL_36:
        v27 = __OFADD__(v50, 1);
        v57 = v50 + 1;
        if (v27)
          goto LABEL_97;
        if (v57 < v105)
        {
          v58 = *(_QWORD *)(v103 + 8 * v57);
          if (!v58)
          {
            v59 = v57 + 1;
            if (v57 + 1 >= v105)
              goto LABEL_91;
            v58 = *(_QWORD *)(v103 + 8 * v59);
            if (v58)
              goto LABEL_47;
            v59 = v57 + 2;
            if (v57 + 2 >= v105)
              goto LABEL_91;
            v58 = *(_QWORD *)(v103 + 8 * v59);
            if (v58)
              goto LABEL_47;
            v59 = v57 + 3;
            if (v57 + 3 >= v105)
              goto LABEL_91;
            v58 = *(_QWORD *)(v103 + 8 * v59);
            if (v58)
              goto LABEL_47;
            v59 = v57 + 4;
            if (v57 + 4 >= v105)
              goto LABEL_91;
            v58 = *(_QWORD *)(v103 + 8 * v59);
            if (v58)
            {
LABEL_47:
              v57 = v59;
            }
            else
            {
              v100 = v57 + 5;
              if (v57 + 5 >= v105)
                goto LABEL_91;
              v58 = *(_QWORD *)(v103 + 8 * v100);
              for (v57 += 5; !v58; ++v100)
              {
                v57 = v100 + 1;
                if (__OFADD__(v100, 1))
                  goto LABEL_99;
                if (v57 >= v105)
                  goto LABEL_91;
                v58 = *(_QWORD *)(v103 + 8 * v57);
              }
            }
          }
          v111 = v57;
          v112 = v19;
          v110 = (v58 - 1) & v58;
          v56 = __clz(__rbit64(v58)) + (v57 << 6);
          continue;
        }
LABEL_91:
        swift_bridgeObjectRelease();
        swift_release();
        return swift_bridgeObjectRelease_n();
      }
      goto LABEL_35;
    }
    break;
  }
  v73 = *(_QWORD *)(v118 + 8 * v74);
  if (v73)
  {
LABEL_65:
    v65 = v74;
    goto LABEL_66;
  }
  while (1)
  {
    v65 = v74 + 1;
    if (__OFADD__(v74, 1))
      break;
    if (v65 >= v119)
      goto LABEL_74;
    v73 = *(_QWORD *)(v118 + 8 * v65);
    ++v74;
    if (v73)
      goto LABEL_66;
  }
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  __break(1u);
LABEL_97:
  __break(1u);
LABEL_98:
  __break(1u);
LABEL_99:
  __break(1u);
LABEL_100:
  swift_bridgeObjectRelease_n();
  v102 = type metadata accessor for MLProgram.Function();
  __swift_storeEnumTagSinglePayload(v113, 1, 1, v102);
  __break(1u);
LABEL_101:
  swift_bridgeObjectRelease_n();
  __swift_storeEnumTagSinglePayload(isUniquelyReferenced_nonNull_native, 1, 1, v108);
  __break(1u);
LABEL_102:
  swift_bridgeObjectRelease_n();
  result = sub_240F1CEF4();
  __break(1u);
  return result;
}

void sub_240C6E188()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)();
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  uint64_t (*v37)(uint64_t);
  _QWORD *v38;
  _QWORD *v39;
  unint64_t v40;
  char v41;
  unint64_t v42;
  char v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t *v74;
  uint64_t v75;
  uint64_t v76;
  _QWORD *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  unint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  unint64_t v85;
  unint64_t v86;
  unint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  unint64_t v98;
  char v99;
  unint64_t v100;
  char v101;
  char v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  unint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t i;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  _QWORD *v139;

  OUTLINED_FUNCTION_22();
  v130 = v0;
  v2 = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB10);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_85();
  v120 = v4;
  OUTLINED_FUNCTION_23_0();
  MEMORY[0x24BDAC7A8](v5);
  v122 = (char *)&v118 - v6;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB18);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v7);
  OUTLINED_FUNCTION_2_0();
  v124 = v8;
  OUTLINED_FUNCTION_101();
  v123 = type metadata accessor for MLProgram.Value();
  v138 = *(_QWORD *)(v123 - 8);
  MEMORY[0x24BDAC7A8](v123);
  OUTLINED_FUNCTION_2_0();
  v137 = v9;
  v10 = OUTLINED_FUNCTION_101();
  v11 = type metadata accessor for Proto_MILSpec_Value(v10);
  v136 = *(_QWORD *)(v11 - 8);
  MEMORY[0x24BDAC7A8](v11);
  OUTLINED_FUNCTION_2_0();
  v135 = v12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC0);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_2_0();
  v129 = v14;
  v132 = v2;
  v15 = *(_QWORD *)(v2 + 8);
  v16 = type metadata accessor for MLProgram.Function;
  v17 = type metadata accessor for Proto_MILSpec_Function;
  v18 = 0;
  sub_240C6EFC4(v15, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  v127 = v19 + 64;
  v131 = v19;
  OUTLINED_FUNCTION_9_4();
  OUTLINED_FUNCTION_60_3();
  v128 = v21;
  if (!v22)
    goto LABEL_3;
LABEL_2:
  OUTLINED_FUNCTION_98_1();
  v133 = v23;
  for (i = v24; ; i = v35)
  {
    OUTLINED_FUNCTION_120_2();
    v36 = v16;
    v37 = v17;
    sub_240C6EFC4(v15, (uint64_t (*)(_QWORD))v16, v17, &qword_25708CCF0);
    v39 = v38;
    OUTLINED_FUNCTION_120_2();
    swift_isUniquelyReferenced_nonNull_native();
    v139 = v39;
    OUTLINED_FUNCTION_120_2();
    OUTLINED_FUNCTION_58_4();
    OUTLINED_FUNCTION_137_1();
    if (v25)
      goto LABEL_98;
    v42 = v40;
    v43 = v41;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCD0);
    if ((OUTLINED_FUNCTION_57_5() & 1) != 0)
    {
      v44 = OUTLINED_FUNCTION_58_4();
      if ((v43 & 1) != (v45 & 1))
        goto LABEL_107;
      v42 = v44;
    }
    if ((v43 & 1) == 0)
      goto LABEL_105;
    v46 = v139[7];
    v47 = OUTLINED_FUNCTION_63_2();
    OUTLINED_FUNCTION_61_4();
    v49 = v46 + v48 * v42;
    v50 = v129;
    v16 = v36;
    sub_240BE0B90(v49, v129, (uint64_t (*)(_QWORD))v36);
    __swift_storeEnumTagSinglePayload(v50, 0, 1, v47);
    sub_240C65F94();
    sub_240C6F7D8();
    sub_240BE0B68(v50, &qword_25708CCC0);
    OUTLINED_FUNCTION_100_1();
    v51 = (uint64_t)v139;
    OUTLINED_FUNCTION_100_1();
    OUTLINED_FUNCTION_100_1();
    v17 = v37;
    sub_240C6ECDC(v51, v37, (uint64_t (*)(_QWORD))v36, &qword_25708CCE8);
    v15 = v52;
    OUTLINED_FUNCTION_173();
    v53 = v132;
    swift_bridgeObjectRelease();
    *(_QWORD *)(v53 + 8) = v15;
    v20 = i;
    if (v133)
      goto LABEL_2;
LABEL_3:
    v25 = __OFADD__(v20, 1);
    v26 = v20 + 1;
    if (v25)
      goto LABEL_100;
    if (v26 >= v128)
      goto LABEL_33;
    if (!*(_QWORD *)(v127 + 8 * v26))
    {
      OUTLINED_FUNCTION_86_1();
      if (v27 == v25)
        goto LABEL_33;
      OUTLINED_FUNCTION_88_1();
      if (!v28)
      {
        OUTLINED_FUNCTION_86_1();
        if (v27 == v25)
          goto LABEL_33;
        OUTLINED_FUNCTION_88_1();
        if (!v29)
        {
          OUTLINED_FUNCTION_86_1();
          if (v27 == v25)
            goto LABEL_33;
          OUTLINED_FUNCTION_88_1();
          if (!v30)
          {
            OUTLINED_FUNCTION_86_1();
            if (v27 == v25)
              goto LABEL_33;
            OUTLINED_FUNCTION_88_1();
            if (!v31)
            {
              OUTLINED_FUNCTION_86_1();
              if (v27 == v25)
                goto LABEL_33;
              OUTLINED_FUNCTION_88_1();
              if (!v33)
                break;
            }
          }
        }
      }
    }
LABEL_21:
    OUTLINED_FUNCTION_125_2();
    v133 = v34;
  }
  while (1)
  {
    v54 = v32 + 1;
    if (__OFADD__(v32, 1))
      goto LABEL_103;
    if (v54 >= v128)
      break;
    ++v32;
    if (*(_QWORD *)(v127 + 8 * v54))
      goto LABEL_21;
  }
LABEL_33:
  v55 = swift_release();
  v56 = *(_QWORD *)(v132 + 32);
  OUTLINED_FUNCTION_57_6(v55, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  v119 = v57 + 64;
  v125 = v57;
  OUTLINED_FUNCTION_13_8();
  OUTLINED_FUNCTION_60_3();
  v121 = v59;
  if (!v60)
    goto LABEL_35;
LABEL_34:
  v127 = v58;
  v128 = v18;
  OUTLINED_FUNCTION_98_1();
  v126 = v61;
  v64 = v62 | (v63 << 6);
  while (2)
  {
    v74 = (uint64_t *)(*(_QWORD *)(v125 + 48) + 16 * v64);
    v76 = *v74;
    v75 = v74[1];
    v131 = v76;
    v129 = v75;
    __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB38);
    v77 = (_QWORD *)sub_240F1CE64();
    v78 = 0;
    v133 = v56 + 64;
    OUTLINED_FUNCTION_13_8();
    v81 = v80 & v79;
    OUTLINED_FUNCTION_60_3();
    i = v82;
    v84 = v83 + 64;
    if (v81)
    {
LABEL_53:
      v85 = __clz(__rbit64(v81));
      v81 &= v81 - 1;
      v86 = v85 | (v78 << 6);
      goto LABEL_71;
    }
    while (1)
    {
      v25 = __OFADD__(v78++, 1);
      if (v25)
      {
        __break(1u);
LABEL_98:
        __break(1u);
        goto LABEL_99;
      }
      if (v78 >= i)
        goto LABEL_78;
      v87 = *(_QWORD *)(v133 + 8 * v78);
      if (!v87)
        break;
LABEL_70:
      v81 = (v87 - 1) & v87;
      v86 = __clz(__rbit64(v87)) + (v78 << 6);
LABEL_71:
      v89 = (uint64_t *)(*(_QWORD *)(v56 + 48) + 16 * v86);
      v91 = *v89;
      v90 = v89[1];
      v92 = v135;
      sub_240BE0BF4(*(_QWORD *)(v56 + 56) + *(_QWORD *)(v136 + 72) * v86, v135, type metadata accessor for Proto_MILSpec_Value);
      v93 = v92;
      v94 = v137;
      sub_240BE0B90(v93, v137, type metadata accessor for Proto_MILSpec_Value);
      *(_QWORD *)(v84 + ((v86 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v86;
      v95 = (_QWORD *)(v77[6] + 16 * v86);
      *v95 = v91;
      v95[1] = v90;
      sub_240BE0B90(v94, v77[7] + *(_QWORD *)(v138 + 72) * v86, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      v96 = v77[2];
      v25 = __OFADD__(v96, 1);
      v97 = v96 + 1;
      if (v25)
      {
        __break(1u);
        goto LABEL_96;
      }
      v77[2] = v97;
      OUTLINED_FUNCTION_120_2();
      if (v81)
        goto LABEL_53;
    }
    OUTLINED_FUNCTION_42_6();
    if (v27 == v25)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v87)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v27 == v25)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v87)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v27 == v25)
      goto LABEL_78;
    OUTLINED_FUNCTION_36_8();
    if (v87)
      goto LABEL_69;
    OUTLINED_FUNCTION_42_6();
    if (v27 == v25)
    {
LABEL_78:
      v18 = v128;
      swift_bridgeObjectRetain_n();
      swift_isUniquelyReferenced_nonNull_native();
      v139 = v77;
      swift_bridgeObjectRetain();
      OUTLINED_FUNCTION_44_7();
      OUTLINED_FUNCTION_137_1();
      if (v25)
        goto LABEL_101;
      v100 = v98;
      v101 = v99;
      __swift_instantiateConcreteTypeFromMangledName(&qword_25708CB40);
      v102 = OUTLINED_FUNCTION_57_5();
      v105 = (uint64_t)v122;
      if ((v102 & 1) != 0)
      {
        v106 = OUTLINED_FUNCTION_44_7();
        if ((v101 & 1) != (v103 & 1))
          goto LABEL_107;
        v100 = v106;
      }
      if ((v101 & 1) == 0)
        goto LABEL_106;
      v107 = v124;
      sub_240BE0B90(v139[7] + *(_QWORD *)(v138 + 72) * v100, v124, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value);
      __swift_storeEnumTagSinglePayload(v107, 0, 1, v123);
      MLProgram.Value.representation.getter(v105);
      v108 = type metadata accessor for MLProgram.Value.Representation(0);
      if (__swift_getEnumTagSinglePayload(v105, 1, v108))
      {
        v109 = v120;
        sub_240C5E950(v105, v120, &qword_25708CB10);
        MLProgram.Value.representation.setter(v109);
        sub_240BE0B68(v105, &qword_25708CB10);
      }
      else
      {
        sub_240C78004();
        MLProgram.Value.representation.setter(v105);
      }
      sub_240C6F7D8();
      sub_240BE0B68(v107, &qword_25708CB18);
      OUTLINED_FUNCTION_12_2();
      v110 = (uint64_t)v139;
      OUTLINED_FUNCTION_12_2();
      OUTLINED_FUNCTION_12_2();
      sub_240C6ECDC(v110, type metadata accessor for Proto_MILSpec_Value, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, &qword_25708CB60);
      v56 = v111;
      OUTLINED_FUNCTION_42_2();
      v112 = v132;
      OUTLINED_FUNCTION_84_1();
      *(_QWORD *)(v112 + 32) = v56;
      v58 = v127;
      if (!v126)
      {
LABEL_35:
        v25 = __OFADD__(v58, 1);
        v65 = v58 + 1;
        if (v25)
          goto LABEL_102;
        if (v65 >= v121)
          goto LABEL_96;
        if (!*(_QWORD *)(v119 + 8 * v65))
        {
          OUTLINED_FUNCTION_100_2();
          if (v27 == v25)
          {
LABEL_96:
            swift_release();
            OUTLINED_FUNCTION_1();
            return;
          }
          OUTLINED_FUNCTION_22_6();
          if (v67)
            goto LABEL_50;
          OUTLINED_FUNCTION_100_2();
          if (v27 == v25)
            goto LABEL_96;
          OUTLINED_FUNCTION_22_6();
          if (v68)
            goto LABEL_50;
          OUTLINED_FUNCTION_100_2();
          if (v27 == v25)
            goto LABEL_96;
          OUTLINED_FUNCTION_22_6();
          if (v69)
            goto LABEL_50;
          OUTLINED_FUNCTION_100_2();
          if (v27 == v25)
            goto LABEL_96;
          OUTLINED_FUNCTION_22_6();
          if (v70)
          {
LABEL_50:
            v65 = v66;
          }
          else
          {
            OUTLINED_FUNCTION_100_2();
            if (v27 == v25)
              goto LABEL_96;
            OUTLINED_FUNCTION_22_6();
            v65 = v113;
            if (!v114)
            {
              do
              {
                v65 = v113 + 1;
                if (__OFADD__(v113, 1))
                  goto LABEL_104;
                if (v65 >= v121)
                  goto LABEL_96;
                ++v113;
              }
              while (!*(_QWORD *)(v119 + 8 * v65));
            }
          }
        }
        v127 = v65;
        v128 = v18;
        OUTLINED_FUNCTION_125_2();
        v126 = v71;
        v64 = v72 + (v73 << 6);
        continue;
      }
      goto LABEL_34;
    }
    break;
  }
  OUTLINED_FUNCTION_36_8();
  if (v87)
  {
LABEL_69:
    v78 = v88;
    goto LABEL_70;
  }
  while (1)
  {
    v78 = v88 + 1;
    if (__OFADD__(v88, 1))
      break;
    if (v78 >= i)
      goto LABEL_78;
    v87 = *(_QWORD *)(v133 + 8 * v78);
    ++v88;
    if (v87)
      goto LABEL_70;
  }
LABEL_99:
  __break(1u);
LABEL_100:
  __break(1u);
LABEL_101:
  __break(1u);
LABEL_102:
  __break(1u);
LABEL_103:
  __break(1u);
LABEL_104:
  __break(1u);
LABEL_105:
  v115 = OUTLINED_FUNCTION_63_2();
  OUTLINED_FUNCTION_18_0(v129, v116, v117, v115);
  __break(1u);
LABEL_106:
  OUTLINED_FUNCTION_18_0(v124, v103, v104, v123);
  __break(1u);
LABEL_107:
  sub_240F1CEF4();
  __break(1u);
}

void MLProgram.customMirror.getter()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(_QWORD);
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_22();
  v2 = v0;
  v3 = sub_240F1CF90();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  OUTLINED_FUNCTION_24_1();
  v7 = v6 - v5;
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCB8);
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v8);
  OUTLINED_FUNCTION_24_1();
  v11 = v10 - v9;
  type metadata accessor for MLProgram();
  OUTLINED_FUNCTION_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_10_3();
  sub_240BE0BF4((uint64_t)v2, v1, v13);
  __swift_instantiateConcreteTypeFromMangledName(&qword_25708BCC0);
  v14 = OUTLINED_FUNCTION_113();
  *(_OWORD *)(v14 + 16) = xmmword_240F1E9E0;
  *(_QWORD *)(v14 + 32) = 0x6E6F6973726576;
  *(_QWORD *)(v14 + 40) = 0xE700000000000000;
  v15 = MEMORY[0x24BEE1768];
  v16 = v2[1];
  *(_QWORD *)(v14 + 48) = *v2;
  *(_QWORD *)(v14 + 72) = v15;
  *(_QWORD *)(v14 + 80) = 0x6E6F6974636E7566;
  *(_QWORD *)(v14 + 88) = 0xE900000000000073;
  OUTLINED_FUNCTION_18_6(v16, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
  v18 = v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CCC8);
  *(_QWORD *)(v14 + 96) = v18;
  *(_QWORD *)(v14 + 120) = v19;
  strcpy((char *)(v14 + 128), "documentation");
  v21 = v2[2];
  v20 = v2[3];
  v22 = MEMORY[0x24BEE0D00];
  *(_WORD *)(v14 + 142) = -4864;
  *(_QWORD *)(v14 + 144) = v21;
  *(_QWORD *)(v14 + 152) = v20;
  *(_QWORD *)(v14 + 168) = v22;
  *(_QWORD *)(v14 + 176) = 0x7475626972747461;
  *(_QWORD *)(v14 + 184) = 0xEA00000000007365;
  v23 = v2[4];
  swift_bridgeObjectRetain();
  sub_240C6EFC4(v23, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Value, type metadata accessor for Proto_MILSpec_Value, &qword_25708CB38);
  v25 = v24;
  *(_QWORD *)(v14 + 216) = __swift_instantiateConcreteTypeFromMangledName(&qword_25708CAF0);
  *(_QWORD *)(v14 + 192) = v25;
  v26 = sub_240F1CF84();
  OUTLINED_FUNCTION_18_0(v11, v27, v28, v26);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v4 + 104))(v7, *MEMORY[0x24BEE43C0], v3);
  sub_240F1CFA8();
  OUTLINED_FUNCTION_1();
}

uint64_t MLProgram.debugDescription.getter()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_240C6C380();
  v1 = sub_240CC4F3C(0, 0, v0);
  swift_release();
  return v1;
}

void sub_240C6ECDC(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(_QWORD), uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t (*v18)(_QWORD);
  uint64_t v19;
  uint64_t (*v20)(_QWORD);
  unint64_t v21;
  uint64_t v22;
  unint64_t i;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _QWORD *v32;
  _QWORD *v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD *v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t (*v47)(_QWORD);
  uint64_t (*v48)(_QWORD);

  v47 = a2;
  v45 = *(_QWORD *)(a2(0) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v7);
  v44 = (char *)&v37 - v8;
  v9 = OUTLINED_FUNCTION_101();
  v48 = a3;
  v43 = *(_QWORD *)(a3(v9) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v10);
  v42 = (uint64_t)&v37 - v11;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_240F1CE64();
  v46 = a1;
  v38 = a1 + 64;
  OUTLINED_FUNCTION_9_4();
  v14 = v13 & v12;
  OUTLINED_FUNCTION_60_3();
  v39 = v17;
  v40 = v16;
  v41 = v16 + 8;
  v18 = v48;
  v19 = (uint64_t)v44;
  v20 = v47;
  if (!v14)
    goto LABEL_3;
LABEL_2:
  v21 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  v22 = v15;
  for (i = v21 | (v15 << 6); ; i = __clz(__rbit64(v25)) + (v26 << 6))
  {
    v28 = (uint64_t *)(*(_QWORD *)(v46 + 48) + 16 * i);
    v29 = *v28;
    v30 = v28[1];
    v31 = v42;
    sub_240BE0BF4(*(_QWORD *)(v46 + 56) + *(_QWORD *)(v43 + 72) * i, v42, v18);
    sub_240BE0BF4(v31, v19, v20);
    swift_bridgeObjectRetain();
    sub_240BE10B8(v31, v18);
    v32 = v40;
    *(_QWORD *)((char *)v41 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v33 = (_QWORD *)(v32[6] + 16 * i);
    *v33 = v29;
    v33[1] = v30;
    sub_240BE0B90(v19, v32[7] + *(_QWORD *)(v45 + 72) * i, v20);
    v34 = v32[2];
    v35 = __OFADD__(v34, 1);
    v36 = v34 + 1;
    if (v35)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v32[2] = v36;
    v15 = v22;
    if (v14)
      goto LABEL_2;
LABEL_3:
    v24 = v15 + 1;
    if (__OFADD__(v15, 1))
      goto LABEL_22;
    if (v24 >= v39)
      goto LABEL_20;
    v25 = *(_QWORD *)(v38 + 8 * v24);
    v26 = v15 + 1;
    if (!v25)
    {
      v26 = v15 + 2;
      if (v15 + 2 >= v39)
        goto LABEL_20;
      v25 = *(_QWORD *)(v38 + 8 * v26);
      if (!v25)
      {
        v26 = v15 + 3;
        if (v15 + 3 >= v39)
          goto LABEL_20;
        v25 = *(_QWORD *)(v38 + 8 * v26);
        if (!v25)
          break;
      }
    }
LABEL_16:
    v14 = (v25 - 1) & v25;
    v22 = v26;
  }
  v27 = v15 + 4;
  if (v15 + 4 >= v39)
  {
LABEL_20:
    OUTLINED_FUNCTION_7_5();
    return;
  }
  v25 = *(_QWORD *)(v38 + 8 * v27);
  if (v25)
  {
    v26 = v15 + 4;
    goto LABEL_16;
  }
  while (1)
  {
    v26 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v26 >= v39)
      goto LABEL_20;
    v25 = *(_QWORD *)(v38 + 8 * v26);
    ++v27;
    if (v25)
      goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

void sub_240C6EF6C(uint64_t a1)
{
  sub_240C6ECDC(a1, type metadata accessor for Proto_MILSpec_Function, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, &qword_25708CCE8);
}

void sub_240C6EF98(uint64_t a1)
{
  sub_240C6EFC4(a1, (uint64_t (*)(_QWORD))type metadata accessor for MLProgram.Function, type metadata accessor for Proto_MILSpec_Function, &qword_25708CCF0);
}

void sub_240C6EFC4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t (*a3)(uint64_t), uint64_t *a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  _QWORD *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t i;
  int64_t v23;
  unint64_t v24;
  int64_t v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  BOOL v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t (*v41)(_QWORD);

  v41 = a2;
  v39 = *(_QWORD *)(a2(0) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v7);
  v38 = (char *)&v33 - v8;
  v9 = OUTLINED_FUNCTION_101();
  v37 = *(_QWORD *)(a3(v9) - 8);
  OUTLINED_FUNCTION_41_4();
  MEMORY[0x24BDAC7A8](v10);
  v12 = (char *)&v33 - v11;
  __swift_instantiateConcreteTypeFromMangledName(a4);
  v13 = (_QWORD *)sub_240F1CE64();
  v14 = 0;
  v40 = a1;
  v34 = a1 + 64;
  OUTLINED_FUNCTION_9_4();
  v17 = v16 & v15;
  v35 = (unint64_t)(v18 + 63) >> 6;
  v36 = v19 + 64;
  v20 = (uint64_t)v38;
  if ((v16 & v15) == 0)
    goto LABEL_3;
LABEL_2:
  v21 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v21 | (v14 << 6); ; i = __clz(__rbit64(v24)) + (v14 << 6))
  {
    v26 = (uint64_t *)(*(_QWORD *)(v40 + 48) + 16 * i);
    v27 = *v26;
    v28 = v26[1];
    sub_240BE0BF4(*(_QWORD *)(v40 + 56) + *(_QWORD *)(v37 + 72) * i, (uint64_t)v12, a3);
    sub_240BE0BF4((uint64_t)v12, v20, a3);
    swift_bridgeObjectRetain();
    sub_240BE10B8((uint64_t)v12, a3);
    *(_QWORD *)(v36 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    v29 = (_QWORD *)(v13[6] + 16 * i);
    *v29 = v27;
    v29[1] = v28;
    sub_240BE0B90(v20, v13[7] + *(_QWORD *)(v39 + 72) * i, v41);
    v30 = v13[2];
    v31 = __OFADD__(v30, 1);
    v32 = v30 + 1;
    if (v31)
    {
      __break(1u);
LABEL_22:
      __break(1u);
      goto LABEL_23;
    }
    v13[2] = v32;
    if (v17)
      goto LABEL_2;
LABEL_3:
    v23 = v14 + 1;
    if (__OFADD__(v14, 1))
      goto LABEL_22;
    if (v23 >= v35)
      goto LABEL_20;
    v24 = *(_QWORD *)(v34 + 8 * v23);
    ++v14;
    if (!v24)
    {
      v14 = v23 + 1;
      if (v23 + 1 >= v35)
        goto LABEL_20;
      v24 = *(_QWORD *)(v34 + 8 * v14);
      if (!v24)
      {
        v14 = v23 + 2;
        if (v23 + 2 >= v35)
          goto LABEL_20;
        v24 = *(_QWORD *)(v34 + 8 * v14);
        if (!v24)
          break;
      }
    }
LABEL_16:
    v17 = (v24 - 1) & v24;
  }
  v25 = v23 + 3;
  if (v25 >= v35)
  {
LABEL_20:
    OUTLINED_FUNCTION_7_5();
    return;
  }
  v24 = *(_QWORD *)(v34 + 8 * v25);
  if (v24)
  {
    v14 = v25;
    goto LABEL_16;
  }
  while (1)
  {
    v14 = v25 + 1;
    if (__OFADD__(v25, 1))
      break;
    if (v14 >= v35)
      goto LABEL_20;
    v24 = *(_QWORD *)(v34 + 8 * v14);
    ++v25;
    if (v24)
      goto LABEL_16;
  }
LABEL_23:
  __break(1u);
}

uint64_t type metadata accessor for MLProgram()
{
  uint64_t result;

  result = qword_254360528;
  if (!qword_254360528)
    return swift_getSingletonMetadata();
  return result;
}

void sub_240C6F274()
{
  uint64_t *v0;

  OUTLINED_FUNCTION_103();
  *v0 = MLProgram.version.getter();
  OUTLINED_FUNCTION_44();
}

void sub_240C6F294(uint64_t *a1)
{
  MLProgram.version.setter(*a1);
  OUTLINED_FUNCTION_44();
}

void sub_240C6F2B4()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_103();
  MLProgram.functions.getter();
  *v0 = v1;
  OUTLINED_FUNCTION_44();
}

void sub_240C6F2D8(uint64_t a1@<X8>)
{
  MLProgram.mainFunction.getter(a1);
  OUTLINED_FUNCTION_44();
}

