uint64_t static FairPlay.WHAPlayer.playerInfoContext(accountID:playerInfoContextRequest:)(uint64_t a1, uint64_t a2, unint64_t a3)
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;

  v15 = *MEMORY[0x24BDAC8D0];
  v11 = 0;
  v13 = a2;
  v14 = a3;
  sub_247753824(a2, a3);
  sub_247753588((uint64_t)&v13);
  if (v3)
  {
    v10 = 4;
    OUTLINED_FUNCTION_13(v4, (unint64_t *)&qword_25444CC30, (uint64_t (*)(uint64_t))sub_247753868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v5 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v5 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v5 + 32) = v3;
    OUTLINED_FUNCTION_26(v5, (unint64_t *)&qword_25444CC10, (uint64_t (*)(void))sub_2477538BC, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEAF028]);
    sub_2477538F8();
    OUTLINED_FUNCTION_1();
    v7 = v3;
    v8 = sub_2477538BC();
    MEMORY[0x249582690](&v10, 0xD000000000000027, 0x80000002478D06D0, v5, &type metadata for FairPlay.Error, v8);
    swift_willThrow();

    sub_247753958(v13, v14);
  }
  else
  {
    v5 = v12;
    sub_247753958(v13, v14);
  }
  return v5;
}

void sub_247750E44(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (**v10)(uint64_t);
  unint64_t v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  v24 = *MEMORY[0x24BDAC8D0];
  v7 = sub_2478B6BC0();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (void (**)(uint64_t))((char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = 0;
  v22 = 0;
  static FairPlay.contextID.getter();
  if (!v3)
  {
    if (a1)
      v11 = a2 - a1;
    else
      v11 = 0;
    if ((v11 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (!HIDWORD(v11))
    {
      woqRTqq9PL5McfBs891();
      v13 = v12;
      if (v12 == sub_2478B6D34())
      {
        v14 = v23;
        if (v23)
        {
          v15 = v22;
          *v10 = j__jEHf8Xzsv8K;
          v10[1] = 0;
          (*(void (**)(void (**)(uint64_t), _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x24BDCDBA8], v7);
          *a3 = MEMORY[0x2495825A0](v14, v15, v10);
          a3[1] = v16;
        }
        else
        {
          __break(1u);
        }
      }
      else
      {
        v17 = sub_2478B6E48();
        v19 = v18;
        v20 = objc_allocWithZone(MEMORY[0x24BDD1540]);
        sub_247752E68(v17, v19, v13, 0);
        swift_willThrow();
      }
      return;
    }
    __break(1u);
  }
}

void static FairPlay.WHAPlayer.extractCloudToken(from:sessionID:)(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

uint64_t sub_247751034()
{
  uint64_t v0;
  uint64_t v1;
  void *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v9;

  v4 = sub_247753B88(v1, v3 & 0xFFFFFFFFFFFFLL, BYTE6(v3), v0, &v9);
  if (v2)
  {
    OUTLINED_FUNCTION_13(v4, (unint64_t *)&qword_25444CC30, (uint64_t (*)(uint64_t))sub_247753868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v5 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v5 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v5 + 32) = v2;
    OUTLINED_FUNCTION_27(v5, (unint64_t *)&qword_25444CC10, (uint64_t (*)(void))sub_2477538BC, v6, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEAF028]);
    sub_2477538F8();
    OUTLINED_FUNCTION_1();
    v7 = v2;
    sub_2477538BC();
    OUTLINED_FUNCTION_21();
  }
  return v9;
}

uint64_t sub_247751210@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (**v11)(uint64_t);
  unint64_t v12;
  int v13;
  int v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  uint64_t v23;
  unsigned int v24;
  _QWORD v25[2];

  v25[1] = *MEMORY[0x24BDAC8D0];
  v8 = sub_2478B6BC0();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (void (**)(uint64_t))((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  v25[0] = 0;
  v24 = 0;
  if (a1)
    v12 = a2 - a1;
  else
    v12 = 0;
  if ((v12 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (HIDWORD(v12))
    goto LABEL_11;
  nXJ7Amk1zyK93(a3, a1, v12, (uint64_t)v25, (uint64_t)&v24);
  v14 = v13;
  result = sub_2478B6D34();
  if (v14 == (_DWORD)result)
  {
    v16 = v25[0];
    if (v25[0])
    {
      v17 = v24;
      *v11 = j__jEHf8Xzsv8K;
      v11[1] = 0;
      (*(void (**)(void (**)(uint64_t), _QWORD, uint64_t))(v9 + 104))(v11, *MEMORY[0x24BDCDBA8], v8);
      result = MEMORY[0x2495825A0](v16, v17, v11);
      *a4 = result;
      a4[1] = v18;
    }
    else
    {
      __break(1u);
    }
  }
  else
  {
    v19 = sub_2478B6E48();
    v21 = v20;
    v22 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    sub_247752E68(v19, v21, v14, 0);
    return swift_willThrow();
  }
  return result;
}

uint64_t FairPlay.WHAStreamer.__allocating_init(accountID:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  FairPlay.WHAStreamer.init(accountID:)(a1);
  return v2;
}

uint64_t FairPlay.WHAStreamer.init(accountID:)(uint64_t a1)
{
  _QWORD *v1;
  void *v2;
  id v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  void (**v9)(uint64_t);
  uint64_t v10;
  uint64_t v11;
  int v12;
  int v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  id v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  _QWORD v33[3];

  v3 = v2;
  v4 = v1;
  v6 = OUTLINED_FUNCTION_23(*MEMORY[0x24BDAC8D0]);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8]();
  v9 = (void (**)(uint64_t))((char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  v4[3] = 0;
  v4[4] = 0;
  v4[5] = 0xF000000000000000;
  v4[2] = a1;
  v33[0] = 3;
  v33[1] = a1;
  v33[2] = 0;
  v32 = 0;
  v30 = 0;
  static FairPlay.contextID.getter();
  if (v2)
  {
LABEL_6:
    v31 = 4;
    OUTLINED_FUNCTION_13(v10, (unint64_t *)&qword_25444CC30, (uint64_t (*)(uint64_t))sub_247753868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v26 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v26 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v26 + 32) = v3;
    OUTLINED_FUNCTION_27(v26, (unint64_t *)&qword_25444CC10, (uint64_t (*)(void))sub_2477538BC, v27, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEAF028]);
    sub_2477538F8();
    OUTLINED_FUNCTION_1();
    v28 = v3;
    sub_2477538BC();
    OUTLINED_FUNCTION_21();
  }
  v11 = v10;
  swift_beginAccess();
  J3NocDTIn(3, v11, (uint64_t)v33);
  v13 = v12;
  swift_endAccess();
  result = sub_2478B6D34();
  if (v13 != (_DWORD)result)
  {
    v22 = sub_2478B6E48();
    v24 = v23;
    v25 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v3 = sub_247752E68(v22, v24, v13, 0);
    v10 = swift_willThrow();
    goto LABEL_6;
  }
  v15 = v32;
  if (v32)
  {
    v16 = v30;
    *v9 = j__jEHf8Xzsv8K;
    v9[1] = 0;
    (*(void (**)(void (**)(uint64_t), _QWORD, uint64_t))(v7 + 104))(v9, *MEMORY[0x24BDCDBA8], v6);
    v17 = MEMORY[0x2495825A0](v15, v16, v9);
    v19 = v18;
    swift_beginAccess();
    v20 = v4[4];
    v21 = v4[5];
    v4[4] = v17;
    v4[5] = v19;
    sub_247753C48(v20, v21);
    return (uint64_t)v4;
  }
  else
  {
    __break(1u);
  }
  return result;
}

_QWORD *FairPlay.WHAStreamer.deinit()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_9();
  if (v0[3])
    TsbHVdUOnzCHizuzrAdwYFpb();
  sub_247753C48(v0[4], v0[5]);
  return v0;
}

uint64_t FairPlay.WHAStreamer.__deallocating_deinit()
{
  FairPlay.WHAStreamer.deinit();
  return swift_deallocClassInstance();
}

uint64_t FairPlay.WHAStreamer.playerInfoContextRequest.getter()
{
  uint64_t v0;
  unint64_t v1;

  OUTLINED_FUNCTION_9();
  v0 = OUTLINED_FUNCTION_10();
  sub_247753C5C(v0, v1);
  return OUTLINED_FUNCTION_10();
}

uint64_t FairPlay.WHAStreamer.playerInfoContextRequest.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  unint64_t v6;

  swift_beginAccess();
  v5 = *(_QWORD *)(v2 + 32);
  v6 = *(_QWORD *)(v2 + 40);
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return sub_247753C48(v5, v6);
}

void FairPlay.WHAStreamer.playerInfoContextRequest.modify()
{
  swift_beginAccess();
  OUTLINED_FUNCTION_12();
}

void FairPlay.WHAStreamer.generateStreamerInfoContext(from:)(uint64_t a1, uint64_t a2)
{
  sub_247752A7C(a1, a2);
}

uint64_t FairPlay.WHAStreamer.Token.dsid.getter()
{
  uint64_t v0;

  return *(_QWORD *)v0;
}

uint64_t FairPlay.WHAStreamer.Token.dsid.setter(uint64_t result)
{
  _QWORD *v1;

  *v1 = result;
  return result;
}

uint64_t (*FairPlay.WHAStreamer.Token.dsid.modify())()
{
  return nullsub_1;
}

void FairPlay.WHAStreamer.Token.playInfo.getter()
{
  uint64_t v0;
  unint64_t v1;

  v0 = OUTLINED_FUNCTION_10();
  sub_247753824(v0, v1);
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_12();
}

void FairPlay.WHAStreamer.Token.playInfo.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  sub_247753958(*(_QWORD *)(v2 + 8), *(_QWORD *)(v2 + 16));
  *(_QWORD *)(v2 + 8) = a1;
  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_28();
}

uint64_t (*FairPlay.WHAStreamer.Token.playInfo.modify())()
{
  return nullsub_1;
}

double FairPlay.WHAStreamer.Token.tokenTTLInSeconds.getter()
{
  uint64_t v0;

  return *(double *)(v0 + 24);
}

void FairPlay.WHAStreamer.Token.tokenTTLInSeconds.setter(double a1)
{
  uint64_t v1;

  *(double *)(v1 + 24) = a1;
}

uint64_t (*FairPlay.WHAStreamer.Token.tokenTTLInSeconds.modify())()
{
  return nullsub_1;
}

void FairPlay.WHAStreamer.Token.storefront.getter()
{
  sub_2478B6DA0();
  OUTLINED_FUNCTION_10();
  OUTLINED_FUNCTION_12();
}

void FairPlay.WHAStreamer.Token.storefront.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  OUTLINED_FUNCTION_28();
}

uint64_t (*FairPlay.WHAStreamer.Token.storefront.modify())()
{
  return nullsub_1;
}

uint64_t sub_24775191C()
{
  unint64_t v0;

  v0 = sub_2478B72C8();
  swift_bridgeObjectRelease();
  if (v0 >= 4)
    return 4;
  else
    return v0;
}

uint64_t sub_247751968(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4 + 4 * byte_2478B79B0[a1]))(1684632420, 0xE400000000000000);
}

unint64_t sub_247751998()
{
  return OUTLINED_FUNCTION_6();
}

uint64_t sub_2477519A4()
{
  return 0x6F726665726F7473;
}

uint64_t sub_2477519C0(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)j__OUTLINED_FUNCTION_4_0 + 4 * byte_2478B79B4[a1]))(1684632420, 0xE400000000000000);
}

unint64_t sub_2477519F0()
{
  return OUTLINED_FUNCTION_6();
}

uint64_t sub_2477519FC()
{
  return 0x6F726665726F7473;
}

void sub_247751A18(char *a1)
{
  sub_24778E938(*a1);
}

void sub_247751A24()
{
  sub_24778EA68();
}

void sub_247751A2C(uint64_t a1)
{
  char *v1;

  sub_24778ED28(a1, *v1);
}

void sub_247751A34()
{
  sub_24778EEF0();
}

uint64_t sub_247751A3C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24775191C();
  *a1 = result;
  return result;
}

void sub_247751A68(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t v3;

  *a1 = sub_247751968(*v1);
  a1[1] = v3;
  OUTLINED_FUNCTION_12();
}

uint64_t sub_247751A8C()
{
  unsigned __int8 *v0;

  return sub_2477519C0(*v0);
}

uint64_t sub_247751A94@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_247751964();
  *a1 = result;
  return result;
}

uint64_t sub_247751AB8()
{
  return 0;
}

void sub_247751AC4(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_247751AD0()
{
  sub_247753CC4();
  return sub_2478B7400();
}

uint64_t sub_247751AF8()
{
  sub_247753CC4();
  return sub_2478B740C();
}

uint64_t FairPlay.WHAStreamer.Token.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v15;
  uint64_t v16;

  sub_247753C70(0, &qword_2576C1728, (uint64_t (*)(void))sub_247753CC4, (uint64_t)&unk_2518E27F0, MEMORY[0x24BEE33E0]);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8]();
  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_247753CC4();
  sub_2478B73DC();
  if (v2)
    return OUTLINED_FUNCTION_16();
  LOBYTE(v15) = 0;
  OUTLINED_FUNCTION_31();
  v6 = sub_2478B7304();
  sub_247753D44();
  OUTLINED_FUNCTION_31();
  sub_2478B72F8();
  OUTLINED_FUNCTION_18();
  OUTLINED_FUNCTION_31();
  sub_2478B72EC();
  v8 = v7;
  OUTLINED_FUNCTION_31();
  v9 = sub_2478B72E0();
  v11 = v10;
  v12 = v9;
  OUTLINED_FUNCTION_3(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_18();
  sub_2478B6DA0();
  OUTLINED_FUNCTION_0();
  *a2 = v6;
  a2[1] = v15;
  a2[2] = v16;
  a2[3] = v8;
  a2[4] = v12;
  a2[5] = v11;
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_0();
  return swift_bridgeObjectRelease();
}

uint64_t sub_247751D48@<X0>(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  return FairPlay.WHAStreamer.Token.init(from:)(a1, a2);
}

uint64_t FairPlay.WHAStreamer.fetchPlayerDelegateInfo(for:machineID:deviceGUID:userAgent:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v12;

  v9[78] = v8;
  v9[77] = v12;
  v9[76] = a8;
  v9[75] = a7;
  v9[74] = a6;
  v9[73] = a5;
  v9[72] = a4;
  v9[71] = a3;
  v9[70] = a2;
  v9[69] = a1;
  v10 = sub_2478B6CF8();
  v9[79] = v10;
  v9[80] = *(_QWORD *)(v10 - 8);
  v9[81] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247751DE4()
{
  _QWORD *v0;
  unint64_t v1;
  uint64_t v2;
  id v3;
  id v4;
  id v5;
  uint64_t v6;
  uint64_t v7;
  SEL *v8;
  void *v9;
  uint64_t (*v10)(uint64_t, uint64_t);
  uint64_t inited;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void *v25;
  id v26;
  id v27;
  id v28;
  id v29;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v37 = v0[81];
  v38 = v0[80];
  v39 = v0[79];
  v31 = v0[78];
  v35 = v0[77];
  v36 = v0[76];
  v34 = v0[75];
  v33 = v0[74];
  v1 = v0[71];
  v2 = v0[70];
  sub_247753D80();
  OUTLINED_FUNCTION_5();
  v3 = sub_24775290C();
  v0[82] = v3;
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE083F8]), sel_initWithBag_, v3);
  v0[83] = v4;
  objc_msgSend(v4, sel_setRequestEncoding_, 2);
  v5 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE08328]), sel_init);
  v0[84] = v5;
  v6 = OUTLINED_FUNCTION_5();
  sub_247753E98(v6, v7, v5, v8);
  sub_247753E98(49, 0xE100000000000000, v5, (SEL *)&selRef_setClientVersion_);
  objc_msgSend(v4, sel_setClientInfo_, v5);
  v9 = (void *)sub_2478B6E24();
  v32 = objc_msgSend(v3, sel_URLForKey_, v9);

  v10 = (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598];
  sub_247753FA4(0, &qword_2576C1750, (uint64_t (*)(uint64_t))sub_247753EEC, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2478B7980;
  *(_QWORD *)(inited + 32) = 0x7265756575716E65;
  *(_QWORD *)(inited + 40) = 0xE900000000000073;
  sub_247753FA4(0, &qword_2576C1760, (uint64_t (*)(uint64_t))sub_247753F48, v10);
  v12 = OUTLINED_FUNCTION_2();
  *(_OWORD *)(v12 + 16) = xmmword_2478B7970;
  v13 = swift_initStackObject();
  *(_OWORD *)(v13 + 16) = xmmword_2478B7990;
  *(_QWORD *)(v13 + 32) = 6515059;
  *(_QWORD *)(v13 + 40) = 0xE300000000000000;
  v14 = MEMORY[0x24BDCDDE8];
  *(_QWORD *)(v13 + 48) = v2;
  *(_QWORD *)(v13 + 56) = v1;
  *(_QWORD *)(v13 + 72) = v14;
  *(_QWORD *)(v13 + 80) = 1684632420;
  *(_QWORD *)(v13 + 88) = 0xE400000000000000;
  v15 = *(_QWORD *)(v31 + 16);
  *(_QWORD *)(v13 + 120) = MEMORY[0x24BEE4568];
  *(_QWORD *)(v13 + 96) = v15;
  sub_247753824(v2, v1);
  v16 = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v12 + 32) = OUTLINED_FUNCTION_11();
  sub_247753FA4(0, &qword_2576C1770, (uint64_t (*)(uint64_t))sub_247753F48, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  *(_QWORD *)(inited + 48) = v12;
  *(_QWORD *)(inited + 72) = v17;
  *(_QWORD *)(inited + 80) = 0x672D726579616C70;
  *(_QWORD *)(inited + 88) = 0xEB00000000646975;
  v0[65] = v33;
  v0[66] = v34;
  sub_247753FF4();
  sub_2478B6F08();
  v18 = sub_2478B6E78();
  v20 = v19;
  OUTLINED_FUNCTION_30();
  *(_QWORD *)(inited + 96) = v18;
  *(_QWORD *)(inited + 104) = v20;
  *(_QWORD *)(inited + 120) = v16;
  *(_QWORD *)(inited + 128) = 0x6D2D726579616C70;
  *(_QWORD *)(inited + 136) = 0xEA00000000006469;
  *(_QWORD *)(inited + 144) = sub_2478B6BE4();
  *(_QWORD *)(inited + 152) = v21;
  *(_QWORD *)(inited + 168) = v16;
  *(_QWORD *)(inited + 176) = 0xD000000000000011;
  *(_QWORD *)(inited + 184) = 0x80000002478D0770;
  *(_QWORD *)(inited + 192) = v36;
  *(_QWORD *)(inited + 200) = v35;
  *(_QWORD *)(inited + 216) = v16;
  *(_QWORD *)(inited + 224) = 1684632935;
  *(_QWORD *)(inited + 232) = 0xE400000000000000;
  sub_2478B6DA0();
  sub_2478B6CE0();
  v22 = sub_2478B6CEC();
  v24 = v23;
  (*(void (**)(uint64_t, uint64_t))(v38 + 8))(v37, v39);
  *(_QWORD *)(inited + 264) = v16;
  *(_QWORD *)(inited + 240) = v22;
  *(_QWORD *)(inited + 248) = v24;
  OUTLINED_FUNCTION_11();
  v25 = (void *)sub_2478B6D4C();
  OUTLINED_FUNCTION_30();
  v26 = objc_msgSend(v4, sel_requestWithMethod_bagURL_parameters_, 4, v32, v25);
  v0[85] = v26;

  v27 = objc_msgSend((id)objc_opt_self(), sel_ephemeralSessionConfiguration);
  v28 = objc_msgSend(objc_allocWithZone(MEMORY[0x24BE08410]), sel_initWithConfiguration_, v27);
  v0[86] = v28;

  v29 = objc_msgSend(v28, sel_dataTaskPromiseWithRequestPromise_, v26);
  v0[87] = v29;
  v0[7] = v0 + 67;
  v0[2] = v0;
  v0[3] = sub_247752320;
  v0[64] = swift_continuation_init();
  v0[60] = MEMORY[0x24BDAC760];
  v0[61] = 0x40000000;
  v0[62] = sub_24775299C;
  v0[63] = &block_descriptor;
  objc_msgSend(v29, sel_resultWithCompletion_, v0 + 60);
  return swift_continuation_await();
}

uint64_t sub_247752320()
{
  uint64_t v0;

  *(_QWORD *)(*(_QWORD *)v0 + 704) = *(_QWORD *)(*(_QWORD *)v0 + 48);
  return swift_task_switch();
}

uint64_t sub_247752380()
{
  uint64_t v0;
  void *v1;
  id v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  void *v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(void);
  void *v30;
  void *v31;
  _QWORD *v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  void *v58;
  uint64_t v59;
  void *v60;
  uint64_t v61;
  void *v62;
  uint64_t v63;
  void *v64;
  void *v65;
  void *v66;
  uint64_t v67;
  void *v68;

  v1 = *(void **)(v0 + 536);

  sub_2478B6B84();
  swift_allocObject();
  sub_2478B6B78();
  sub_247754408(0, &qword_2576C1780, (uint64_t)&type metadata for FairPlay.WHAStreamer.Token, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
  v2 = OUTLINED_FUNCTION_19();
  v3 = sub_2478B6BF0();
  v5 = v4;

  sub_247754030();
  sub_2478B6B6C();
  sub_247753958(v3, v5);
  v6 = *(_QWORD *)(v0 + 544);
  v7 = *(_QWORD *)(v6 + 16);
  if (v7)
  {
    v8 = *(_QWORD *)(*(_QWORD *)(v0 + 624) + 16);
    v9 = (uint64_t *)(v6 + 72);
    while (*(v9 - 5) != v8)
    {
      v9 += 6;
      if (!--v7)
        goto LABEL_5;
    }
    v58 = *(void **)(v0 + 688);
    v62 = *(void **)(v0 + 680);
    v30 = *(void **)(v0 + 672);
    v31 = *(void **)(v0 + 656);
    v32 = *(_QWORD **)(v0 + 552);
    v33 = *(v9 - 4);
    v34 = *(v9 - 3);
    v35 = *(v9 - 2);
    v36 = *v9;
    v65 = *(void **)(v0 + 664);
    v67 = *(v9 - 1);
    sub_247753824(v33, v34);
    sub_2478B6DA0();

    swift_release();
    OUTLINED_FUNCTION_33(v37, v38, v39, v40, v41, v42, v43, v44, v53, (uint64_t)v58, v62);
    OUTLINED_FUNCTION_32(v45, v46, v47, v48, v49, v50, v51, v52, v55, v59, v63, v65);
    OUTLINED_FUNCTION_20();
    *v32 = v8;
    v32[1] = v33;
    v32[2] = v34;
    v32[3] = v35;
    v32[4] = v67;
    v32[5] = v36;
    swift_task_dealloc();
    v28 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
LABEL_5:
    v10 = *(void **)(v0 + 688);
    v60 = *(void **)(v0 + 680);
    v64 = *(void **)(v0 + 672);
    v66 = *(void **)(v0 + 664);
    v68 = *(void **)(v0 + 656);
    *(_BYTE *)(v0 + 713) = 10;
    sub_2478B71A8();
    swift_bridgeObjectRelease();
    MEMORY[0x249582924](v6, &type metadata for FairPlay.WHAStreamer.Token);
    OUTLINED_FUNCTION_15();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_20();
    sub_247753C70(0, (unint64_t *)&qword_25444CC10, (uint64_t (*)(void))sub_2477538BC, (uint64_t)&type metadata for FairPlay.Error, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEAF028]);
    sub_2477538F8();
    OUTLINED_FUNCTION_7();
    v11 = sub_2477538BC();
    MEMORY[0x249582690](v0 + 713, 0xD000000000000029, 0x80000002478D07F0, MEMORY[0x24BEE4AF8], &type metadata for FairPlay.Error, v11);
    swift_willThrow();
    swift_release();

    OUTLINED_FUNCTION_33(v12, v13, v14, v15, v16, v17, v18, v19, v53, v56, v60);
    OUTLINED_FUNCTION_32(v20, v21, v22, v23, v24, v25, v26, v27, v54, v57, v61, v64);

    swift_task_dealloc();
    v28 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v28();
}

uint64_t sub_247752888()
{
  uint64_t v0;
  void *v1;
  void *v2;
  void *v3;
  void *v4;
  void *v5;
  void *v6;

  v1 = *(void **)(v0 + 696);
  v2 = *(void **)(v0 + 688);
  v3 = *(void **)(v0 + 680);
  v4 = *(void **)(v0 + 672);
  v5 = *(void **)(v0 + 664);
  v6 = *(void **)(v0 + 656);
  swift_willThrow();

  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

id sub_24775290C()
{
  void *v0;
  void *v1;
  id v2;

  v0 = (void *)sub_2478B6E24();
  swift_bridgeObjectRelease();
  v1 = (void *)sub_2478B6E24();
  swift_bridgeObjectRelease();
  v2 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bagForProfile_profileVersion_, v0, v1);

  return v2;
}

uint64_t sub_24775299C(uint64_t result, void *a2, void *a3)
{
  uint64_t v3;

  v3 = *(_QWORD *)(result + 32);
  if (a3)
    return sub_2477529E8(v3, (uint64_t)a3);
  if (a2)
    return sub_247752A34(v3, (uint64_t)a2);
  __break(1u);
  return result;
}

uint64_t sub_2477529E8(uint64_t a1, uint64_t a2)
{
  _QWORD *v3;

  sub_247753868();
  swift_allocError();
  *v3 = a2;
  return swift_continuation_throwingResumeWithError();
}

uint64_t sub_247752A34(uint64_t a1, uint64_t a2)
{
  **(_QWORD **)(*(_QWORD *)(a1 + 64) + 40) = a2;
  return swift_continuation_throwingResume();
}

void FairPlay.WHAStreamer.processPlayerDelegateInfo(from:)(uint64_t a1, uint64_t a2)
{
  sub_247752A7C(a1, a2);
}

void sub_247752A7C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X10 }
}

void sub_247752AD4()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned int *);
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10;
  unint64_t v11;
  uint64_t v12;
  char v13;

  OUTLINED_FUNCTION_8();
  v7 = sub_247753DBC(v2, v5 & 0xFFFFFFFFFFFFLL, BYTE6(v5), v3, &v12);
  if (v4)
  {
    v13 = v1;
    OUTLINED_FUNCTION_13(v7, (unint64_t *)&qword_25444CC30, (uint64_t (*)(uint64_t))sub_247753868, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE3598]);
    v8 = OUTLINED_FUNCTION_2();
    *(_OWORD *)(v8 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v8 + 32) = v4;
    OUTLINED_FUNCTION_26(v8, (unint64_t *)&qword_25444CC10, (uint64_t (*)(void))sub_2477538BC, v9, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEAF028]);
    sub_2477538F8();
    OUTLINED_FUNCTION_1();
    v10 = v4;
    v11 = sub_2477538BC();
    MEMORY[0x249582690](&v13, v0, v6, v8, &type metadata for FairPlay.Error, v11);
    swift_willThrow();

  }
}

uint64_t sub_247752CE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned int *)@<X3>, uint64_t *a4@<X8>)
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(uint64_t);
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;

  v9 = OUTLINED_FUNCTION_23(*MEMORY[0x24BDAC8D0]);
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (void (**)(uint64_t))((char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = 0;
  v19 = 0;
  v13 = swift_retain();
  result = a3(v13, a1, a2, &v20, &v19);
  if (!v4)
  {
    v15 = v20;
    if (v20)
    {
      v16 = v19;
      *v12 = j__jEHf8Xzsv8K;
      v12[1] = 0;
      (*(void (**)(void (**)(uint64_t), _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x24BDCDBA8], v9);
      result = MEMORY[0x2495825A0](v15, v16, v12);
      *a4 = result;
      a4[1] = v17;
    }
    else
    {
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_247752E18(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    v2 = 0;
    v3 = (uint64_t *)(a1 + 32);
    do
    {
      v5 = *v3++;
      v4 = v5;
      if ((v5 & ~v2) == 0)
        v4 = 0;
      v2 |= v4;
      --v1;
    }
    while (v1);
  }
  else
  {
    v2 = 0;
  }
  swift_bridgeObjectRelease();
  return v2;
}

id sub_247752E68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void *v4;
  void *v7;
  void *v8;
  id v9;

  v7 = (void *)sub_2478B6E24();
  swift_bridgeObjectRelease();
  if (a4)
  {
    v8 = (void *)sub_2478B6D4C();
    swift_bridgeObjectRelease();
  }
  else
  {
    v8 = 0;
  }
  v9 = objc_msgSend(v4, sel_initWithDomain_code_userInfo_, v7, a3, v8);

  return v9;
}

uint64_t sub_247752F14(uint64_t a1, id *a2)
{
  uint64_t result;

  result = sub_2478B6E30();
  *a2 = 0;
  return result;
}

uint64_t sub_247752F88(uint64_t a1, id *a2)
{
  char v3;

  v3 = sub_2478B6E3C();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_247753004()
{
  uint64_t v0;

  sub_2478B6E48();
  v0 = sub_2478B6E24();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_247753038()
{
  uint64_t *v0;

  return sub_247753468(*v0, (uint64_t (*)(uint64_t))MEMORY[0x24BDCF9E0]);
}

uint64_t sub_247753060@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_247753004();
  *a1 = result;
  return result;
}

uint64_t sub_247753084()
{
  return 0;
}

uint64_t sub_24775308C@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_2477530B8(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2477530B8(uint64_t a1, uint64_t a2)
{
  return a2 | a1;
}

uint64_t sub_2477530C0@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_2477530EC(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_2477530EC(uint64_t a1, uint64_t a2)
{
  return a2 & a1;
}

uint64_t sub_2477530F4@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_247753120(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_247753120(uint64_t a1, uint64_t a2)
{
  return a2 ^ a1;
}

BOOL sub_247753128(_QWORD *a1, uint64_t *a2)
{
  return sub_247753130(a1, *a2);
}

BOOL sub_247753130(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;

  v3 = *v2 & a2;
  if (v3 != a2)
    *v2 |= a2;
  *a1 = a2;
  return v3 != a2;
}

uint64_t sub_24775315C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_24775318C(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_24775318C(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = *v1 & a1;
  if (result)
    *v1 &= ~a1;
  return result;
}

uint64_t sub_2477531B0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  char v4;

  result = sub_2477531E0(*a1);
  *(_QWORD *)a2 = result;
  *(_BYTE *)(a2 + 8) = v4 & 1;
  return result;
}

uint64_t sub_2477531E0(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;

  v2 = *v1;
  *v1 |= a1;
  return v2 & a1;
}

uint64_t sub_2477531F8(uint64_t *a1)
{
  return sub_247753200(*a1);
}

uint64_t sub_247753200(uint64_t result)
{
  _QWORD *v1;

  *v1 |= result;
  return result;
}

uint64_t sub_247753210(uint64_t *a1)
{
  return sub_247753218(*a1);
}

uint64_t sub_247753218(uint64_t result)
{
  _QWORD *v1;

  *v1 &= result;
  return result;
}

uint64_t sub_247753228(uint64_t *a1)
{
  return sub_247753230(*a1);
}

uint64_t sub_247753230(uint64_t result)
{
  _QWORD *v1;

  *v1 ^= result;
  return result;
}

uint64_t sub_247753240@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t result;

  result = sub_24775326C(*a1, *v2);
  *a2 = result;
  return result;
}

uint64_t sub_24775326C(uint64_t a1, uint64_t a2)
{
  return a2 & ~a1;
}

BOOL sub_247753274(uint64_t *a1)
{
  uint64_t *v1;

  return sub_247753280(*a1, *v1);
}

BOOL sub_247753280(uint64_t a1, uint64_t a2)
{
  return (a2 & ~a1) == 0;
}

BOOL sub_24775328C(uint64_t *a1)
{
  uint64_t *v1;

  return sub_247753298(*a1, *v1);
}

BOOL sub_247753298(uint64_t a1, uint64_t a2)
{
  return (a2 & a1) == 0;
}

BOOL sub_2477532A4(uint64_t *a1)
{
  uint64_t *v1;

  return sub_2477532B0(*a1, *v1);
}

BOOL sub_2477532B0(uint64_t a1, uint64_t a2)
{
  return (a1 & ~a2) == 0;
}

BOOL sub_2477532BC()
{
  uint64_t *v0;

  return sub_2477532C4(*v0);
}

BOOL sub_2477532C4(uint64_t a1)
{
  return a1 == 0;
}

uint64_t sub_2477532D0()
{
  return sub_2478B716C();
}

uint64_t sub_2477532E8(uint64_t *a1)
{
  return sub_2477532F0(*a1);
}

uint64_t sub_2477532F0(uint64_t result)
{
  _QWORD *v1;

  *v1 &= ~result;
  return result;
}

void sub_247753300(uint64_t *a1@<X8>)
{
  *a1 = sub_247753084();
  OUTLINED_FUNCTION_12();
}

BOOL sub_247753320(uint64_t *a1, uint64_t *a2)
{
  return sub_24778E51C(*a1, *a2);
}

uint64_t sub_24775332C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_247752E18(a1);
  *a2 = result;
  return result;
}

_QWORD *sub_247753350@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_24775335C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  v2 = sub_2478B6E24();
  result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

void sub_2477533A0(uint64_t *a1@<X8>)
{
  uint64_t v2;

  *a1 = sub_2477533C4();
  a1[1] = v2;
  OUTLINED_FUNCTION_12();
}

uint64_t sub_2477533C8()
{
  sub_247754624(&qword_2576C17F8, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_2478B7C68);
  sub_247754624(qword_2576C1800, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_2478B7C10);
  return sub_2478B72BC();
}

_QWORD *sub_24775344C@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_QWORD *)a2 = *result;
  *(_BYTE *)(a2 + 8) = 0;
  return result;
}

void sub_24775345C(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t sub_247753468(uint64_t a1, uint64_t (*a2)(uint64_t))
{
  uint64_t v3;
  uint64_t v4;

  v3 = sub_2478B6E48();
  v4 = a2(v3);
  OUTLINED_FUNCTION_30();
  return v4;
}

uint64_t sub_24775349C()
{
  sub_2478B6E48();
  sub_2478B6E9C();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2477534DC()
{
  uint64_t v0;

  sub_2478B6E48();
  sub_2478B7394();
  sub_2478B6E9C();
  v0 = sub_2478B73AC();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_24775354C()
{
  uint64_t *v0;

  return sub_247753468(*v0, MEMORY[0x24BEE0CD8]);
}

uint64_t sub_24775356C()
{
  return sub_24775349C();
}

uint64_t sub_247753574()
{
  return sub_2477534DC();
}

void sub_24775357C()
{
  sub_24778E528();
}

void sub_247753588(uint64_t a1)
{
  __asm { BR              X11 }
}

void sub_2477535E8(uint64_t a1@<X8>)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  unsigned __int8 v9;

  v5 = v3;
  LOWORD(v6) = a1;
  BYTE2(v6) = BYTE2(a1);
  HIBYTE(v6) = BYTE3(a1);
  v7 = BYTE4(a1);
  v8 = BYTE5(a1);
  v9 = BYTE6(a1);
  sub_247750E44((uint64_t)&v5, (uint64_t)&v5 + BYTE6(a1), v2);
  v4 = v6 | ((unint64_t)v7 << 32) | ((unint64_t)v8 << 40) | ((unint64_t)v9 << 48);
  *v1 = v5;
  v1[1] = v4;
}

uint64_t sub_247753824(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_retain();
  }
  return swift_retain();
}

unint64_t sub_247753868()
{
  unint64_t result;

  result = qword_25444CC38;
  if (!qword_25444CC38)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, (unint64_t *)&qword_25444CC38);
  }
  return result;
}

unint64_t sub_2477538BC()
{
  unint64_t result;

  result = qword_25444CC18;
  if (!qword_25444CC18)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FairPlay.Error, &type metadata for FairPlay.Error);
    atomic_store(result, (unint64_t *)&qword_25444CC18);
  }
  return result;
}

unint64_t sub_2477538F8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_25444CC08;
  if (!qword_25444CC08)
  {
    sub_247753C70(255, (unint64_t *)&qword_25444CC10, (uint64_t (*)(void))sub_2477538BC, (uint64_t)&type metadata for FairPlay.Error, (uint64_t (*)(uint64_t, uint64_t, uint64_t))MEMORY[0x24BEAF028]);
    result = MEMORY[0x24958320C](MEMORY[0x24BEAF030], v1);
    atomic_store(result, (unint64_t *)&qword_25444CC08);
  }
  return result;
}

uint64_t sub_247753958(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2)
      return result;
    swift_release();
  }
  return swift_release();
}

void sub_24775399C(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = sub_2478B6B3C();
  if (!v6)
    goto LABEL_10;
  v7 = v6;
  v8 = sub_2478B6B54();
  v9 = a1 - v8;
  if (__OFSUB__(a1, v8))
  {
    __break(1u);
    goto LABEL_9;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_9:
    __break(1u);
LABEL_10:
    __break(1u);
    return;
  }
  v12 = sub_2478B6B48();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  sub_247750E44(v7 + v9, v7 + v9 + v13, a3);
}

uint64_t sub_247753A34@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_2478B6B3C();
  v9 = result;
  if (result)
  {
    result = sub_2478B6B54();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  v12 = sub_2478B6B48();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  return sub_247751210(v9, v15, a3, a4);
}

uint64_t sub_247753AD4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned int *)@<X4>, uint64_t *a4@<X8>)
{
  uint64_t result;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  result = sub_2478B6B3C();
  v9 = result;
  if (result)
  {
    result = sub_2478B6B54();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v9 += a1 - result;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
    __break(1u);
    goto LABEL_13;
  }
  v12 = sub_2478B6B48();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  v14 = v9 + v13;
  if (v9)
    v15 = v14;
  else
    v15 = 0;
  sub_247752CE4(v9, v15, a3, a4);
  return OUTLINED_FUNCTION_17();
}

uint64_t sub_247753B88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = a1;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  return sub_247751210((uint64_t)&v6, (uint64_t)&v6 + a3, a4, a5);
}

uint64_t sub_247753C48(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_247753958(a1, a2);
  return a1;
}

uint64_t sub_247753C5C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15)
    return sub_247753824(a1, a2);
  return a1;
}

void sub_247753C70(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  if (!*a2)
  {
    v9 = a3();
    v10 = a5(a1, a4, v9);
    if (!v11)
      atomic_store(v10, a2);
  }
  OUTLINED_FUNCTION_28();
}

unint64_t sub_247753CC4()
{
  unint64_t result;

  result = qword_2576C1730;
  if (!qword_2576C1730)
  {
    result = MEMORY[0x24958320C](&unk_2478B7E80, &unk_2518E27F0);
    atomic_store(result, (unint64_t *)&qword_2576C1730);
  }
  return result;
}

_QWORD *__swift_project_boxed_opaque_existential_1(_QWORD *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
    return (_QWORD *)(*result
                    + ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80)));
  return result;
}

uint64_t __swift_destroy_boxed_opaque_existential_1(uint64_t a1)
{
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(a1 + 24) - 8);
  if ((*(_BYTE *)(v1 + 82) & 2) != 0)
    return swift_release();
  else
    return (*(uint64_t (**)(void))(v1 + 8))();
}

unint64_t sub_247753D44()
{
  unint64_t result;

  result = qword_2576C1738;
  if (!qword_2576C1738)
  {
    result = MEMORY[0x24958320C](MEMORY[0x24BDCDE38], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2576C1738);
  }
  return result;
}

unint64_t sub_247753D80()
{
  unint64_t result;

  result = qword_2576C1748;
  if (!qword_2576C1748)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576C1748);
  }
  return result;
}

uint64_t sub_247753DBC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t (*a4)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned int *)@<X4>, uint64_t *a5@<X8>)
{
  uint64_t v6;
  __int16 v7;
  char v8;
  char v9;
  char v10;
  char v11;
  uint64_t v12;

  v12 = *MEMORY[0x24BDAC8D0];
  v6 = a1;
  v7 = a2;
  v8 = BYTE2(a2);
  v9 = BYTE3(a2);
  v10 = BYTE4(a2);
  v11 = BYTE5(a2);
  sub_247752CE4((uint64_t)&v6, (uint64_t)&v6 + a3, a4, a5);
  return OUTLINED_FUNCTION_17();
}

void sub_247753E98(uint64_t a1, uint64_t a2, void *a3, SEL *a4)
{
  id v6;

  v6 = (id)sub_2478B6E24();
  OUTLINED_FUNCTION_20();
  objc_msgSend(a3, *a4, v6);

}

void sub_247753EEC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576C1758)
  {
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576C1758);
  }
}

void sub_247753F48()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1768)
  {
    v0 = sub_2478B6DDC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1768);
  }
}

void sub_247753FA4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (!*a2)
  {
    v7 = a3(255);
    v8 = a4(a1, v7);
    if (!v9)
      atomic_store(v8, a2);
  }
  OUTLINED_FUNCTION_28();
}

unint64_t sub_247753FF4()
{
  unint64_t result;

  result = qword_2576C1778;
  if (!qword_2576C1778)
  {
    result = MEMORY[0x24958320C](MEMORY[0x24BDCDE28], MEMORY[0x24BDCDDE8]);
    atomic_store(result, (unint64_t *)&qword_2576C1778);
  }
  return result;
}

unint64_t sub_247754030()
{
  unint64_t result;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  result = qword_2576C1788;
  if (!qword_2576C1788)
  {
    sub_247754408(255, &qword_2576C1780, (uint64_t)&type metadata for FairPlay.WHAStreamer.Token, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    v2 = v1;
    v3 = sub_2477540A8();
    result = MEMORY[0x24958320C](MEMORY[0x24BEE12D0], v2, &v3);
    atomic_store(result, (unint64_t *)&qword_2576C1788);
  }
  return result;
}

unint64_t sub_2477540A8()
{
  unint64_t result;

  result = qword_2576C1790;
  if (!qword_2576C1790)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FairPlay.WHAStreamer.Token, &type metadata for FairPlay.WHAStreamer.Token);
    atomic_store(result, (unint64_t *)&qword_2576C1790);
  }
  return result;
}

uint64_t sub_2477540E4(void *a1)
{
  id v1;
  void *v2;
  uint64_t v3;

  v1 = objc_msgSend(a1, sel_responseHeaders);
  if (!v1)
    return 0;
  v2 = v1;
  v3 = sub_2478B6D58();

  return v3;
}

void type metadata accessor for FairPlay.WHAPlayer()
{
  OUTLINED_FUNCTION_34();
}

uint64_t type metadata accessor for FairPlay.WHAStreamer()
{
  return objc_opt_self();
}

uint64_t method lookup function for FairPlay.WHAStreamer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FairPlay.WHAStreamer.__allocating_init(accountID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t _s11WHAStreamerC5TokenVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *a2;
  *a1 = *a2;
  v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t _s11WHAStreamerC5TokenVwxx(uint64_t a1)
{
  sub_247753958(*(_QWORD *)(a1 + 8), *(_QWORD *)(a1 + 16));
  return swift_bridgeObjectRelease();
}

uint64_t _s11WHAStreamerC5TokenVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = *(_QWORD *)(a2 + 16);
  sub_247753824(v4, v5);
  *(_QWORD *)(a1 + 8) = v4;
  *(_QWORD *)(a1 + 16) = v5;
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  sub_2478B6DA0();
  return a1;
}

_QWORD *_s11WHAStreamerC5TokenVwca(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  *a1 = *a2;
  v4 = a2[1];
  v5 = a2[2];
  sub_247753824(v4, v5);
  v6 = a1[1];
  v7 = a1[2];
  a1[1] = v4;
  a1[2] = v5;
  sub_247753958(v6, v7);
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy48_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s11WHAStreamerC5TokenVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v4 = *(_QWORD *)(a2 + 16);
  v5 = *(_QWORD *)(a1 + 8);
  v6 = *(_QWORD *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_QWORD *)(a1 + 16) = v4;
  sub_247753958(v5, v6);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v7 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11WHAStreamerC5TokenVwet(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 48))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 40);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11WHAStreamerC5TokenVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 40) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for FairPlay.WHAStreamer.Token()
{
  OUTLINED_FUNCTION_34();
}

void type metadata accessor for CategoryOptions(uint64_t a1)
{
  sub_247754408(a1, &qword_2576C1798, (uint64_t)&unk_2518E1DC0, MEMORY[0x24BEE4D40]);
}

void type metadata accessor for Category(uint64_t a1)
{
  sub_247754408(a1, &qword_2576C17A0, (uint64_t)&unk_2518E1D98, MEMORY[0x24BEE4D40]);
}

void sub_247754408(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(uint64_t, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(a1, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_12();
}

_BYTE *__swift_memcpy1_1(_BYTE *result, _BYTE *a2)
{
  *result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FacetSpeed(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFD)
  {
    if (a2 + 3 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 3) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 4;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v5 = v6 - 4;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_2477544E0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_24775452C + 4 * byte_2478B79BD[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_247754560 + 4 * byte_2478B79B8[v4]))();
}

uint64_t sub_247754560(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247754568(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247754570);
  return result;
}

uint64_t sub_24775457C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247754584);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_247754588(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247754590(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24775459C(unsigned __int8 *a1)
{
  return *a1;
}

_BYTE *sub_2477545A4(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

void _s11WHAStreamerC5TokenV10CodingKeysOMa()
{
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2477545BC()
{
  unint64_t result;

  result = qword_2576C17A8;
  if (!qword_2576C17A8)
  {
    result = MEMORY[0x24958320C](&unk_2478B7B88, &unk_2518E27F0);
    atomic_store(result, (unint64_t *)&qword_2576C17A8);
  }
  return result;
}

uint64_t sub_2477545F8()
{
  return sub_247754624(&qword_2576C17B0, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_2478B7BD8);
}

uint64_t sub_247754624(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t result;
  uint64_t v6;

  result = *a1;
  if (!result)
  {
    v6 = a2(255);
    result = MEMORY[0x24958320C](a3, v6);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_247754664()
{
  return sub_247754624(&qword_2576C17B8, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_2478B7BB0);
}

uint64_t sub_247754690()
{
  return sub_247754624(&qword_2576C17C0, (uint64_t (*)(uint64_t))type metadata accessor for Category, (uint64_t)&unk_2478B7C40);
}

uint64_t sub_2477546BC()
{
  return sub_247754624(&qword_2576C17C8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_2478B7D20);
}

uint64_t sub_2477546E8()
{
  return sub_247754624(&qword_2576C17D0, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_2478B7CF0);
}

uint64_t sub_247754714()
{
  return sub_247754624(&qword_2576C17D8, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_2478B7D48);
}

uint64_t sub_247754740()
{
  return sub_247754624(&qword_2576C17E0, (uint64_t (*)(uint64_t))type metadata accessor for CategoryOptions, (uint64_t)&unk_2478B7D80);
}

unint64_t sub_247754770()
{
  unint64_t result;

  result = qword_2576C17E8;
  if (!qword_2576C17E8)
  {
    result = MEMORY[0x24958320C](&unk_2478B7AC0, &unk_2518E27F0);
    atomic_store(result, (unint64_t *)&qword_2576C17E8);
  }
  return result;
}

unint64_t sub_2477547B0()
{
  unint64_t result;

  result = qword_2576C17F0;
  if (!qword_2576C17F0)
  {
    result = MEMORY[0x24958320C](&unk_2478B7AE8, &unk_2518E27F0);
    atomic_store(result, (unint64_t *)&qword_2576C17F0);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0()
{
  uint64_t v0;
  unint64_t v1;

  return sub_247753958(v0, v1);
}

uint64_t OUTLINED_FUNCTION_1()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_2()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_3@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v2, v1);
}

uint64_t OUTLINED_FUNCTION_4()
{
  return 0x666E692D79616C70;
}

uint64_t OUTLINED_FUNCTION_5()
{
  return 0x6C6373656E757469;
}

unint64_t OUTLINED_FUNCTION_6()
{
  return 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_7()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_8()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_9()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_10()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_11()
{
  return sub_2478B6D88();
}

void OUTLINED_FUNCTION_13(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t), uint64_t (*a4)(uint64_t, uint64_t))
{
  sub_247753FA4(0, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_14@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t, uint64_t *, unsigned int *);

  return sub_247753AD4(a1, a2, v3, a3);
}

uint64_t OUTLINED_FUNCTION_15()
{
  return sub_2478B6EA8();
}

uint64_t OUTLINED_FUNCTION_16()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_17()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18()
{
  uint64_t v0;
  unint64_t v1;

  return sub_247753824(v0, v1);
}

id OUTLINED_FUNCTION_19()
{
  void *v0;
  uint64_t v1;

  return objc_msgSend(v0, (SEL)(v1 + 1480));
}

uint64_t OUTLINED_FUNCTION_20()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_21()
{
  JUMPOUT(0x249582690);
}

uint64_t OUTLINED_FUNCTION_22()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_23@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 88) = a1;
  return sub_2478B6BC0();
}

void OUTLINED_FUNCTION_26(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_247753C70(0, a2, a3, v5, a5);
}

void OUTLINED_FUNCTION_27(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_247753C70(0, a2, a3, v5, a5);
}

uint64_t OUTLINED_FUNCTION_30()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_32(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, void *a12)
{

}

void OUTLINED_FUNCTION_33(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, void *a11)
{

}

uint64_t sub_247754998()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_247754A1C()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247754AC8();
}

uint64_t sub_247754A74(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = swift_task_dealloc();
  if (!v1)
    v5 = a1;
  return (*(uint64_t (**)(uint64_t))(v4 + 8))(v5);
}

uint64_t sub_247754AC8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);

  v1[3] = v0;
  v1[4] = *(_QWORD *)v0;
  v2 = *(_QWORD *)(*(_QWORD *)v0 + 80);
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 88) + 8);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[5] = AssociatedTypeWitness;
  v1[6] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = swift_task_alloc();
  v1[7] = v5;
  v1[8] = sub_2478B6C5C();
  v1[9] = sub_2478B6C50();
  v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(v3 + 24) + *(_QWORD *)(v3 + 24));
  v6 = (_QWORD *)swift_task_alloc();
  v1[10] = v6;
  *v6 = v1;
  v6[1] = sub_247754BB0;
  return v8(v5, v2, v3);
}

uint64_t sub_247754BB0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 88) = v0;
  swift_task_dealloc();
  sub_247754E48();
  sub_2478B7010();
  return swift_task_switch();
}

uint64_t sub_247754C38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96), v1, v3);
  sub_247754E88();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2478B7970;
  *(_QWORD *)(v0 + 16) = v4;
  swift_retain();
  v8 = sub_2478B6E6C();
  v9 = v6;
  sub_2478B6EA8();
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v9;
  sub_2478B7388();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_247754D4C()
{
  uint64_t v0;

  swift_release();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_247754DB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  return v0;
}

uint64_t sub_247754E0C()
{
  sub_247754DB0();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MetricsManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for MetricsManager);
}

uint64_t sub_247754E3C(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(*(_QWORD *)(a2 + 88) + 8);
}

unint64_t sub_247754E48()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C1898;
  if (!qword_2576C1898)
  {
    v1 = sub_2478B6C5C();
    result = MEMORY[0x24958320C](MEMORY[0x24BEAEFD8], v1);
    atomic_store(result, (unint64_t *)&qword_2576C1898);
  }
  return result;
}

void sub_247754E88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C18A0)
  {
    v0 = sub_2478B7334();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C18A0);
  }
}

uint64_t __swift_instantiateGenericMetadata(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD v6[3];

  v6[0] = a2;
  v6[1] = a3;
  v6[2] = a4;
  return MEMORY[0x249583188](a1, v6, a5);
}

uint64_t TimeVarianceAuthority.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = swift_allocObject();
  sub_2478B6C5C();
  v2 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_4_0(v2);
  OUTLINED_FUNCTION_6_0();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247754F60()
{
  uint64_t v0;

  OUTLINED_FUNCTION_3_0();
  swift_release();
  return OUTLINED_FUNCTION_1_0(*(_QWORD *)(v0 + 24), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t TimeVarianceAuthority.init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = v1;
  sub_2478B6C5C();
  v3 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_4_0(v3);
  OUTLINED_FUNCTION_6_0();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t TimeVarianceAuthority.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t TimeVarianceAuthority.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t sub_247754FF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  *(_QWORD *)(v2 + 16) = a1;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_247755048;
  return TimeVarianceAuthority.__allocating_init(configuration:)(a2);
}

uint64_t sub_247755048(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  v5 = *v2;
  swift_task_dealloc();
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t type metadata accessor for TimeVarianceAuthority()
{
  return objc_opt_self();
}

uint64_t method lookup function for TimeVarianceAuthority()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of TimeVarianceAuthority.__allocating_init(configuration:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))(**(int **)(v1 + 80) + *(_QWORD *)(v1 + 80));
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_247755130;
  return v6(a1);
}

uint64_t sub_247755130(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_0();
  return (*(uint64_t (**)(uint64_t))(v1 + 8))(a1);
}

uint64_t dispatch thunk of Timeline.init(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v9;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a4 + 8) + *(_QWORD *)(a4 + 8));
  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v9;
  *v9 = v4;
  v9[1] = sub_2477551EC;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_2477551EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_0_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_0(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_2_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_3_0()
{
  return swift_release();
}

unint64_t OUTLINED_FUNCTION_4_0(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return sub_247754E48();
}

uint64_t OUTLINED_FUNCTION_5_0()
{
  return sub_2478B6C50();
}

uint64_t OUTLINED_FUNCTION_6_0()
{
  return sub_2478B7010();
}

uint64_t sub_247755280()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_247755310()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247755368();
}

uint64_t sub_247755368()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t AssociatedTypeWitness;
  uint64_t v4;

  v1[3] = v0;
  v1[4] = *v0;
  v2 = *v0;
  v1[5] = *(_QWORD *)(*(_QWORD *)(*v0 + 88) + 8);
  v1[6] = *(_QWORD *)(v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[7] = AssociatedTypeWitness;
  v1[8] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[9] = swift_task_alloc();
  sub_2478B6C5C();
  v1[10] = sub_2478B6C50();
  sub_247754E48();
  v1[11] = sub_2478B7010();
  v1[12] = v4;
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247755424()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t (*v6)(_QWORD);

  v1 = v0[5];
  v2 = v0[3];
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 104);
  v0[13] = v3;
  *(_QWORD *)(v2 + v3) = MEMORY[0x24BEE4AF8];
  v6 = (uint64_t (*)(_QWORD))(**(int **)(v1 + 24) + *(_QWORD *)(v1 + 24));
  v4 = (_QWORD *)swift_task_alloc();
  v0[14] = v4;
  *v4 = v0;
  v4[1] = sub_2477554A8;
  return v6(v0[9]);
}

uint64_t sub_2477554A8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 120) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247755500()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 72);
  v2 = *(_QWORD *)(v0 + 56);
  v3 = *(_QWORD *)(v0 + 64);
  v4 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 96), v1, v2);
  sub_247754E88();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2478B7970;
  *(_QWORD *)(v0 + 16) = v4;
  swift_retain();
  v8 = sub_2478B6E6C();
  v9 = v6;
  sub_2478B6EA8();
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v9;
  sub_2478B7388();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_247755610()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24775567C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v1, AssociatedTypeWitness);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_2477556E8()
{
  sub_24775567C();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for SessionManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for SessionManager);
}

uint64_t sub_247755718()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247754AC8();
}

uint64_t type metadata accessor for DigitalRightsManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for DigitalRightsManager);
}

void Configuration.__allocating_init(storage:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_2478B6C20();
  *(_QWORD *)(v2 + 16) = a1;
  OUTLINED_FUNCTION_12();
}

void Configuration.init(storage:)(uint64_t a1)
{
  uint64_t v1;

  sub_2478B6C20();
  *(_QWORD *)(v1 + 16) = a1;
  OUTLINED_FUNCTION_12();
}

uint64_t Configuration.copy()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_7_0();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = OUTLINED_FUNCTION_21_0();
  sub_2478B6DA0();
  sub_2478B6C20();
  *(_QWORD *)(v2 + 16) = v1;
  return v2;
}

void Configuration.merge(with:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_7_0();
  v3 = *(_QWORD *)(v1 + 16);
  OUTLINED_FUNCTION_7_0();
  v4 = *(_QWORD *)(a1 + 16);
  sub_2478B6DA0();
  sub_2478B6DA0();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v8 = v3;
  sub_247756EB4(v4, (uint64_t)sub_247756E84, 0, isUniquelyReferenced_nonNull_native, &v8);
  v6 = v8;
  swift_bridgeObjectRelease();
  v7 = OUTLINED_FUNCTION_21_0();
  sub_2478B6C20();
  *(_QWORD *)(v7 + 16) = v6;
  OUTLINED_FUNCTION_4_1();
}

uint64_t sub_247755920()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4;
  uint64_t v5;

  *(_QWORD *)&v4 = v0;
  sub_247757EB4();
  sub_2478B6C14();
  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  v2 = swift_retain();
  sub_247755DA4(v2, v1, &v4);
  swift_endAccess();
  swift_release();
  sub_2477570C4();
  if (swift_dynamicCast())
    return v5;
  else
    return 0x746C7561666544;
}

uint64_t sub_2477559F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  unsigned __int8 v11;

  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_9_0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_0();
  return swift_dynamicCast() & v11;
}

void (*sub_247755A70())(id *a1@<X8>)
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  __int128 v10;
  uint64_t v11;

  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_9_0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_0();
  OUTLINED_FUNCTION_24();
  sub_247757F34();
  if (OUTLINED_FUNCTION_2_1())
    return (void (*)(id *@<X8>))v11;
  else
    return sub_247756BC0;
}

void sub_247755AE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_9_0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_0();
  v8 = OUTLINED_FUNCTION_24();
  type metadata accessor for Category(v8);
  if (!OUTLINED_FUNCTION_2_1())
  {
    if (qword_2576C1720 != -1)
      swift_once();
    (id)qword_2576C1F58;

  }
  OUTLINED_FUNCTION_4_1();
}

void sub_247755B94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v10;

  OUTLINED_FUNCTION_23_0();
  OUTLINED_FUNCTION_11_0();
  OUTLINED_FUNCTION_3_1();
  OUTLINED_FUNCTION_0_1();
  v0 = OUTLINED_FUNCTION_10_0();
  OUTLINED_FUNCTION_9_0(v0, v1, v2, v3, v4, v5, v6, v7, v9, v10);
  OUTLINED_FUNCTION_17_0();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_0();
  v8 = OUTLINED_FUNCTION_24();
  type metadata accessor for CategoryOptions(v8);
  OUTLINED_FUNCTION_2_1();
  OUTLINED_FUNCTION_4_1();
}

uint64_t Configuration.subscript.getter@<X0>(_QWORD *a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;
  __int128 v17;

  v8 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a1 + 8);
  v9 = sub_2478B7148();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x24BDAC7A8]();
  v12 = (char *)&v16 - v11;
  sub_247755D50();
  OUTLINED_FUNCTION_7_0();
  v13 = *(_QWORD *)(v4 + 16);
  v14 = swift_retain();
  sub_247755DA4(v14, v13, &v17);
  swift_endAccess();
  swift_release();
  OUTLINED_FUNCTION_15_0();
  if (swift_dynamicCast())
  {
    OUTLINED_FUNCTION_22_0((uint64_t)v12, 0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a4, v12, v8);
  }
  else
  {
    OUTLINED_FUNCTION_22_0((uint64_t)v12, 1);
    (*(void (**)(uint64_t, uint64_t))(a3 + 16))(a2, a3);
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
}

uint64_t sub_247755D50()
{
  sub_247757EB4();
  return sub_2478B6C14();
}

double sub_247755DA4@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  unint64_t v5;
  char v6;
  double result;

  if (*(_QWORD *)(a2 + 16) && (v5 = sub_247756BE0(a1), (v6 & 1) != 0))
  {
    sub_247758324(*(_QWORD *)(a2 + 56) + 32 * v5, (uint64_t)a3);
  }
  else
  {
    result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_247755DF4(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _OWORD *a4@<X8>)
{
  unint64_t v6;
  char v7;

  if (*(_QWORD *)(a3 + 16) && (v6 = sub_247756C4C(a1, a2), (v7 & 1) != 0))
  {
    sub_247757FB0(*(_QWORD *)(a3 + 56) + 48 * v6, (uint64_t)a4);
  }
  else
  {
    a4[1] = 0u;
    a4[2] = 0u;
    *a4 = 0u;
    OUTLINED_FUNCTION_12();
  }
}

uint64_t sub_247755E48()
{
  sub_2477564A0();
  swift_release();
  return swift_bridgeObjectRelease();
}

void sub_247755EAC()
{
  sub_2477564A0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_4_1();
}

void sub_247755EF8()
{
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_17();
  swift_release();
  OUTLINED_FUNCTION_4_1();
}

void sub_247755F40(uint64_t a1)
{
  void *v1;

  OUTLINED_FUNCTION_16_0(a1);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_17();

  OUTLINED_FUNCTION_4_1();
}

void sub_247755F78(uint64_t a1)
{
  OUTLINED_FUNCTION_16_0(a1);
  OUTLINED_FUNCTION_14_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_4_1();
}

uint64_t Configuration.subscript.setter(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v4;

  v4 = *a3;
  sub_247756528();
  OUTLINED_FUNCTION_17();
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*MEMORY[0x24BEE46A8] + v4 + 8) - 8) + 8))(a1);
}

uint64_t sub_24775603C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v6[4];

  v6[0] = a3;
  v6[3] = MEMORY[0x24BEE0D00];
  v6[1] = a4;
  swift_beginAccess();
  sub_2478B6DA0();
  swift_retain();
  sub_247756394((uint64_t)v6, a2);
  return swift_endAccess();
}

uint64_t sub_2477560C8(uint64_t a1, uint64_t a2, char a3)
{
  _BYTE v5[24];
  uint64_t v6;

  v6 = MEMORY[0x24BEE1328];
  v5[0] = a3;
  swift_beginAccess();
  swift_retain();
  sub_247756394((uint64_t)v5, a2);
  return swift_endAccess();
}

uint64_t sub_247756144(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD v8[4];

  v8[3] = sub_247757F34();
  v8[0] = a3;
  v8[1] = a4;
  swift_beginAccess();
  swift_retain();
  swift_retain();
  sub_247756394((uint64_t)v8, a2);
  return swift_endAccess();
}

uint64_t sub_2477561DC(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5;
  id v6;
  _QWORD v8[4];

  type metadata accessor for Category(0);
  v8[3] = v5;
  v8[0] = a3;
  swift_beginAccess();
  v6 = a3;
  swift_retain();
  sub_247756394((uint64_t)v8, a2);
  return swift_endAccess();
}

uint64_t sub_247756264(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  _QWORD v7[4];

  type metadata accessor for CategoryOptions(0);
  v7[3] = v5;
  v7[0] = a3;
  swift_beginAccess();
  swift_retain();
  sub_247756394((uint64_t)v7, a2);
  return swift_endAccess();
}

uint64_t sub_2477562E4(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t *boxed_opaque_existential_0;
  uint64_t v8[3];
  uint64_t v9;

  v9 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a2 + 8);
  v5 = v9;
  boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v8);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(boxed_opaque_existential_0, a3, v5);
  swift_beginAccess();
  swift_retain();
  sub_247756394((uint64_t)v8, (uint64_t)a2);
  return swift_endAccess();
}

void sub_247756394(uint64_t a1, uint64_t a2)
{
  _OWORD v3[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_247757EF4((_OWORD *)a1, v3);
    sub_24775783C(v3, a2);
    swift_release();
  }
  else
  {
    sub_247758494();
    sub_2477575E4(a2, v3);
    swift_release();
    sub_247758494();
  }
}

uint64_t sub_247756418(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __int128 v5;
  _OWORD v7[3];

  if (*(_QWORD *)(a1 + 40))
  {
    v5 = *(_OWORD *)(a1 + 16);
    v7[0] = *(_OWORD *)a1;
    v7[1] = v5;
    v7[2] = *(_OWORD *)(a1 + 32);
    sub_2477578A8(v7, a2, a3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_2477581BC(a1);
    sub_24775770C(a2, a3, v7);
    swift_bridgeObjectRelease();
    return sub_2477581BC((uint64_t)v7);
  }
}

uint64_t sub_2477564A0()
{
  sub_247757EB4();
  return sub_2478B6C08();
}

uint64_t sub_247756528()
{
  sub_247757EB4();
  return sub_2478B6C08();
}

void (*Configuration.subscript.modify(_QWORD *a1, uint64_t a2, _QWORD *a3, uint64_t a4, uint64_t a5))(uint64_t a1, char a2)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  void *v15;

  v11 = malloc(0x48uLL);
  *a1 = v11;
  v11[3] = a5;
  v11[4] = v5;
  v11[1] = a3;
  v11[2] = a4;
  *v11 = a2;
  v12 = *(_QWORD *)(*MEMORY[0x24BEE46A8] + *a3 + 8);
  v11[5] = v12;
  v13 = *(_QWORD *)(v12 - 8);
  v11[6] = v13;
  v14 = *(_QWORD *)(v13 + 64);
  v11[7] = malloc(v14);
  v15 = malloc(v14);
  v11[8] = v15;
  Configuration.subscript.getter(a3, a4, a5, (uint64_t)v15);
  return sub_247756678;
}

void sub_247756678(uint64_t a1, char a2)
{
  _QWORD *v2;
  void *v3;
  void *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;

  v2 = *(_QWORD **)a1;
  v3 = *(void **)(*(_QWORD *)a1 + 56);
  v4 = *(void **)(*(_QWORD *)a1 + 64);
  if ((a2 & 1) != 0)
  {
    v5 = v2[5];
    v6 = v2[6];
    v7 = (uint64_t *)v2[1];
    (*(void (**)(_QWORD, void *, uint64_t))(v6 + 16))(*(_QWORD *)(*(_QWORD *)a1 + 56), v4, v5);
    swift_retain();
    Configuration.subscript.setter((uint64_t)v3, v8, v7);
    (*(void (**)(void *, uint64_t))(v6 + 8))(v4, v5);
  }
  else
  {
    v9 = (uint64_t *)v2[1];
    swift_retain();
    Configuration.subscript.setter((uint64_t)v4, v10, v9);
  }
  free(v4);
  free(v3);
  free(v2);
}

void Configuration.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_6_1(v0);
  OUTLINED_FUNCTION_12();
}

uint64_t Configuration.__deallocating_deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  v0 = OUTLINED_FUNCTION_25();
  OUTLINED_FUNCTION_6_1(v0);
  return swift_deallocClassInstance();
}

void Configuration.playerID.getter()
{
  swift_getKeyPath();
  sub_247755920();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_28();
}

void sub_2477567F4(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Configuration.playerID.getter();
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_24775681C()
{
  sub_2478B6DA0();
  return Configuration.playerID.setter();
}

uint64_t Configuration.playerID.setter()
{
  swift_getKeyPath();
  return sub_247755E48();
}

void Configuration.playerID.modify(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  a1[2] = v1;
  swift_getKeyPath();
  v3 = sub_247755920();
  v5 = v4;
  OUTLINED_FUNCTION_8_0();
  *a1 = v3;
  a1[1] = v5;
  OUTLINED_FUNCTION_28();
}

uint64_t sub_2477568E8(uint64_t a1, char a2)
{
  swift_getKeyPath();
  if ((a2 & 1) == 0)
    return OUTLINED_FUNCTION_20_0();
  sub_2478B6DA0();
  OUTLINED_FUNCTION_20_0();
  return swift_bridgeObjectRelease();
}

uint64_t Configuration.stateRestorationSupported.getter()
{
  return sub_247756A60();
}

uint64_t sub_247756968@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Configuration.stateRestorationSupported.getter();
  *a1 = result & 1;
  return result;
}

void sub_247756994()
{
  Configuration.stateRestorationSupported.setter();
}

void Configuration.stateRestorationSupported.setter()
{
  swift_getKeyPath();
  sub_247755EAC();
  OUTLINED_FUNCTION_12();
}

void Configuration.stateRestorationSupported.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  swift_getKeyPath();
  v3 = sub_2477559F8();
  OUTLINED_FUNCTION_8_0();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_28();
}

void sub_247756A40()
{
  sub_247756B7C();
}

uint64_t Configuration.handoffSupported.getter()
{
  return sub_247756A60();
}

uint64_t sub_247756A60()
{
  char v0;

  swift_getKeyPath();
  v0 = sub_2477559F8();
  OUTLINED_FUNCTION_17();
  return v0 & 1;
}

uint64_t sub_247756A90@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = Configuration.handoffSupported.getter();
  *a1 = result & 1;
  return result;
}

void sub_247756ABC()
{
  Configuration.handoffSupported.setter();
}

void Configuration.handoffSupported.setter()
{
  swift_getKeyPath();
  sub_247755EAC();
  OUTLINED_FUNCTION_12();
}

void Configuration.handoffSupported.modify(uint64_t a1)
{
  uint64_t v1;
  char v3;

  *(_QWORD *)a1 = v1;
  swift_getKeyPath();
  v3 = sub_2477559F8();
  OUTLINED_FUNCTION_8_0();
  *(_BYTE *)(a1 + 8) = v3 & 1;
  OUTLINED_FUNCTION_28();
}

void sub_247756B68()
{
  sub_247756B7C();
}

void sub_247756B7C()
{
  swift_getKeyPath();
  sub_247755EAC();
}

void sub_247756BC0(id *a1@<X8>)
{
  *a1 = sub_247769218();
  OUTLINED_FUNCTION_12();
}

unint64_t sub_247756BE0(uint64_t a1)
{
  uint64_t v2;

  sub_2478B7160();
  v2 = sub_2478B6E00();
  return sub_247756CB0(a1, v2);
}

unint64_t sub_247756C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_2478B7394();
  sub_2478B6E9C();
  v4 = sub_2478B73AC();
  return sub_247756D78(a1, a2, v4);
}

unint64_t sub_247756CB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v3 = -1 << *(_BYTE *)(v2 + 32);
  v4 = a2 & ~v3;
  if (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0)
  {
    v5 = ~v3;
    sub_2478B7160();
    do
    {
      if ((sub_2478B6E18() & 1) != 0)
        break;
      v4 = (v4 + 1) & v5;
    }
    while (((*(_QWORD *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFF8)) >> v4) & 1) != 0);
  }
  return v4;
}

unint64_t sub_247756D78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  uint64_t v12;
  _QWORD *v13;
  BOOL v14;

  v4 = v3 + 64;
  v5 = -1 << *(_BYTE *)(v3 + 32);
  v6 = a3 & ~v5;
  if (((*(_QWORD *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0)
  {
    v9 = *(_QWORD *)(v3 + 48);
    v10 = (_QWORD *)(v9 + 16 * v6);
    v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_2478B734C() & 1) == 0)
    {
      v12 = ~v5;
      do
      {
        v6 = (v6 + 1) & v12;
        if (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
          break;
        v13 = (_QWORD *)(v9 + 16 * v6);
        v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_2478B734C() & 1) == 0);
    }
  }
  return v6;
}

uint64_t sub_247756E58(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_247758324(a3, a1);
  return swift_retain();
}

uint64_t sub_247756E84@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result;

  result = sub_247756E58((uint64_t)(a2 + 1), *a1, (uint64_t)(a1 + 1));
  *a2 = result;
  return result;
}

uint64_t sub_247756EB4(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t *a5)
{
  uint64_t v7;
  uint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  _BOOL8 v12;
  uint64_t v13;
  char v14;
  unint64_t v15;
  char v16;
  _OWORD *v17;
  _QWORD *v18;
  uint64_t v19;
  BOOL v20;
  uint64_t v21;
  uint64_t result;
  _OWORD v23[2];
  _OWORD v24[2];
  uint64_t v25;
  __int128 v26;
  uint64_t v27;

  sub_247757C0C(a1, a2, a3, &v27);
  sub_2478B6DA0();
  swift_retain();
  sub_247757C48((uint64_t)&v25);
  v7 = v25;
  if (!v25)
  {
LABEL_14:
    swift_release();
    swift_bridgeObjectRelease();
    sub_247758360();
    return swift_release();
  }
  while (1)
  {
    sub_247757EF4(&v26, v24);
    v8 = *a5;
    v10 = sub_247756BE0(v7);
    v11 = *(_QWORD *)(v8 + 16);
    v12 = (v9 & 1) == 0;
    v13 = v11 + v12;
    if (__OFADD__(v11, v12))
      break;
    v14 = v9;
    if (*(_QWORD *)(v8 + 24) >= v13)
    {
      if ((a4 & 1) != 0)
      {
        if ((v9 & 1) != 0)
          goto LABEL_9;
      }
      else
      {
        sub_247758368(0, &qword_2576C1A18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
        sub_2478B7268();
        if ((v14 & 1) != 0)
          goto LABEL_9;
      }
    }
    else
    {
      sub_2477572CC(v13, a4 & 1);
      v15 = sub_247756BE0(v7);
      if ((v14 & 1) != (v16 & 1))
        goto LABEL_17;
      v10 = v15;
      if ((v14 & 1) != 0)
      {
LABEL_9:
        sub_247758324((uint64_t)v24, (uint64_t)v23);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v24);
        swift_release();
        v17 = (_OWORD *)(*(_QWORD *)(*a5 + 56) + 32 * v10);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
        sub_247757EF4(v23, v17);
        goto LABEL_13;
      }
    }
    v18 = (_QWORD *)*a5;
    *(_QWORD *)(*a5 + 8 * (v10 >> 6) + 64) |= 1 << v10;
    *(_QWORD *)(v18[6] + 8 * v10) = v7;
    sub_247757EF4(v24, (_OWORD *)(v18[7] + 32 * v10));
    v19 = v18[2];
    v20 = __OFADD__(v19, 1);
    v21 = v19 + 1;
    if (v20)
      goto LABEL_16;
    v18[2] = v21;
LABEL_13:
    sub_247757C48((uint64_t)&v25);
    v7 = v25;
    a4 = 1;
    if (!v25)
      goto LABEL_14;
  }
  __break(1u);
LABEL_16:
  __break(1u);
LABEL_17:
  sub_2478B7160();
  result = sub_2478B737C();
  __break(1u);
  return result;
}

void sub_2477570C4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C19F8)
  {
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C19F8);
  }
}

uint64_t __swift_storeEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a4 - 8) + 56))();
}

uint64_t sub_24775711C()
{
  uint64_t v0;

  return sub_2477562E4(*(_QWORD *)(v0 + 32), *(_QWORD **)(v0 + 40), *(_QWORD *)(v0 + 48));
}

void sub_24775713C(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  Configuration.playerID.getter();
  *a1 = v2;
  a1[1] = v3;
  OUTLINED_FUNCTION_12();
}

void sub_247757164(_BYTE *a1@<X8>)
{
  *a1 = Configuration.stateRestorationSupported.getter() & 1;
  OUTLINED_FUNCTION_12();
}

void sub_24775718C()
{
  Configuration.stateRestorationSupported.setter();
  OUTLINED_FUNCTION_12();
}

void sub_2477571AC(_BYTE *a1@<X8>)
{
  *a1 = Configuration.handoffSupported.getter() & 1;
  OUTLINED_FUNCTION_12();
}

void sub_2477571D4()
{
  Configuration.handoffSupported.setter();
  OUTLINED_FUNCTION_12();
}

uint64_t dispatch thunk of static ConfigurationKey.defaultValue.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t sub_2477571FC()
{
  return type metadata accessor for Configuration();
}

uint64_t type metadata accessor for Configuration()
{
  uint64_t result;

  result = qword_2576C1A00;
  if (!qword_2576C1A00)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24775723C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2478B6C2C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for Configuration()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of Configuration.__allocating_init(storage:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t sub_2477572CC(uint64_t a1, char a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  _QWORD *v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  _OWORD *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  char v27;
  unint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  uint64_t v33;
  _OWORD v34[2];

  v3 = v2;
  v5 = *v2;
  sub_247758368(0, &qword_2576C1A78, MEMORY[0x24BEE30A0]);
  v6 = a2;
  v7 = sub_2478B72A4();
  v8 = v7;
  if (*(_QWORD *)(v5 + 16))
  {
    v9 = 1 << *(_BYTE *)(v5 + 32);
    v33 = v5 + 64;
    if (v9 < 64)
      v10 = ~(-1 << v9);
    else
      v10 = -1;
    v11 = v10 & *(_QWORD *)(v5 + 64);
    v32 = (unint64_t)(v9 + 63) >> 6;
    v12 = v7 + 64;
    result = swift_retain();
    v14 = 0;
    if (!v11)
      goto LABEL_7;
LABEL_6:
    v15 = __clz(__rbit64(v11));
    v11 &= v11 - 1;
    for (i = v15 | (v14 << 6); ; i = __clz(__rbit64(v19)) + (v14 << 6))
    {
      v21 = *(_QWORD *)(*(_QWORD *)(v5 + 48) + 8 * i);
      v22 = (_OWORD *)(*(_QWORD *)(v5 + 56) + 32 * i);
      if ((v6 & 1) != 0)
      {
        sub_247757EF4(v22, v34);
      }
      else
      {
        sub_247758324((uint64_t)v22, (uint64_t)v34);
        swift_retain();
      }
      sub_2478B7160();
      result = sub_2478B6E00();
      v23 = -1 << *(_BYTE *)(v8 + 32);
      v24 = result & ~v23;
      v25 = v24 >> 6;
      if (((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6))) == 0)
      {
        v27 = 0;
        v28 = (unint64_t)(63 - v23) >> 6;
        while (++v25 != v28 || (v27 & 1) == 0)
        {
          v29 = v25 == v28;
          if (v25 == v28)
            v25 = 0;
          v27 |= v29;
          v30 = *(_QWORD *)(v12 + 8 * v25);
          if (v30 != -1)
          {
            v26 = __clz(__rbit64(~v30)) + (v25 << 6);
            goto LABEL_31;
          }
        }
        __break(1u);
LABEL_42:
        __break(1u);
LABEL_43:
        __break(1u);
        return result;
      }
      v26 = __clz(__rbit64((-1 << v24) & ~*(_QWORD *)(v12 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
LABEL_31:
      *(_QWORD *)(v12 + ((v26 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v26;
      *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v26) = v21;
      result = (uint64_t)sub_247757EF4(v34, (_OWORD *)(*(_QWORD *)(v8 + 56) + 32 * v26));
      ++*(_QWORD *)(v8 + 16);
      if (v11)
        goto LABEL_6;
LABEL_7:
      v17 = v14 + 1;
      if (__OFADD__(v14, 1))
        goto LABEL_42;
      if (v17 >= v32)
        break;
      v18 = (_QWORD *)(v5 + 64);
      v19 = *(_QWORD *)(v33 + 8 * v17);
      ++v14;
      if (!v19)
      {
        v14 = v17 + 1;
        if (v17 + 1 >= v32)
          goto LABEL_33;
        v19 = *(_QWORD *)(v33 + 8 * v14);
        if (!v19)
        {
          v20 = v17 + 2;
          if (v20 >= v32)
          {
LABEL_33:
            swift_release();
            if ((v6 & 1) == 0)
              goto LABEL_40;
            goto LABEL_36;
          }
          v19 = *(_QWORD *)(v33 + 8 * v20);
          if (!v19)
          {
            while (1)
            {
              v14 = v20 + 1;
              if (__OFADD__(v20, 1))
                goto LABEL_43;
              if (v14 >= v32)
                goto LABEL_33;
              v19 = *(_QWORD *)(v33 + 8 * v14);
              ++v20;
              if (v19)
                goto LABEL_18;
            }
          }
          v14 = v20;
        }
      }
LABEL_18:
      v11 = (v19 - 1) & v19;
    }
    swift_release();
    v18 = (_QWORD *)(v5 + 64);
    if ((v6 & 1) == 0)
      goto LABEL_40;
LABEL_36:
    v31 = 1 << *(_BYTE *)(v5 + 32);
    if (v31 >= 64)
      sub_247791B40(0, (unint64_t)(v31 + 63) >> 6, v18);
    else
      *v18 = -1 << v31;
    *(_QWORD *)(v5 + 16) = 0;
  }
LABEL_40:
  result = swift_release();
  *v3 = v8;
  return result;
}

double sub_2477575E4@<D0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t *v3;
  unint64_t v6;
  char v7;
  double result;
  uint64_t v9;

  v3 = v2;
  sub_2478B6DA0();
  v6 = sub_247756BE0(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if ((a1 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v9 = *v3;
    *v3 = 0x8000000000000000;
    sub_247758368(0, &qword_2576C1A18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
    sub_2478B725C();
    swift_release();
    sub_247757EF4((_OWORD *)(*(_QWORD *)(v9 + 56) + 32 * v6), a2);
    sub_2478B7160();
    sub_2478B7274();
    *v3 = v9;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    *a2 = 0u;
    a2[1] = 0u;
  }
  return result;
}

double sub_24775770C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X8>)
{
  uint64_t *v3;
  uint64_t *v4;
  unint64_t v8;
  char v9;
  _OWORD *v10;
  __int128 v11;
  double result;
  uint64_t v13;

  v4 = v3;
  sub_2478B6DA0();
  v8 = sub_247756C4C(a1, a2);
  LOBYTE(a2) = v9;
  swift_bridgeObjectRelease();
  if ((a2 & 1) != 0)
  {
    swift_isUniquelyReferenced_nonNull_native();
    v13 = *v4;
    *v4 = 0x8000000000000000;
    sub_247758210();
    sub_2478B725C();
    swift_bridgeObjectRelease();
    v10 = (_OWORD *)(*(_QWORD *)(v13 + 56) + 48 * v8);
    v11 = v10[1];
    *a3 = *v10;
    a3[1] = v11;
    a3[2] = v10[2];
    sub_247757FF4();
    sub_2478B7274();
    *v4 = v13;
    swift_bridgeObjectRelease();
  }
  else
  {
    result = 0.0;
    a3[1] = 0u;
    a3[2] = 0u;
    *a3 = 0u;
  }
  return result;
}

uint64_t sub_24775783C(_OWORD *a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v6;

  swift_isUniquelyReferenced_nonNull_native();
  v6 = *v2;
  *v2 = 0x8000000000000000;
  sub_247757924(a1, a2);
  *v2 = v6;
  return swift_bridgeObjectRelease();
}

uint64_t sub_2477578A8(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v8;

  swift_isUniquelyReferenced_nonNull_native();
  v8 = *v3;
  *v3 = 0x8000000000000000;
  sub_247757A3C(a1, a2, a3);
  *v3 = v8;
  return swift_bridgeObjectRelease();
}

_OWORD *sub_247757924(_OWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD **v3;
  _QWORD *v6;
  unint64_t v7;
  char v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  _QWORD *v13;
  _OWORD *v14;
  _OWORD *result;

  v3 = (_QWORD **)v2;
  v6 = (_QWORD *)*v2;
  v7 = sub_247756BE0(a2);
  if (__OFADD__(v6[2], (v8 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v9 = v7;
  v10 = v8;
  sub_247758368(0, &qword_2576C1A18, (uint64_t (*)(uint64_t, uint64_t, uint64_t, _QWORD))MEMORY[0x24BEE2E90]);
  if ((sub_2478B725C() & 1) == 0)
    goto LABEL_5;
  v11 = sub_247756BE0(a2);
  if ((v10 & 1) != (v12 & 1))
  {
LABEL_9:
    sub_2478B7160();
    result = (_OWORD *)sub_2478B737C();
    __break(1u);
    return result;
  }
  v9 = v11;
LABEL_5:
  v13 = *v3;
  if ((v10 & 1) != 0)
  {
    v14 = (_OWORD *)(v13[7] + 32 * v9);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
    return sub_247757EF4(a1, v14);
  }
  else
  {
    sub_247757B4C(v9, a2, a1, v13);
    return (_OWORD *)swift_retain();
  }
}

uint64_t sub_247757A3C(_OWORD *a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD **v4;
  _QWORD *v8;
  unint64_t v9;
  char v10;
  unint64_t v11;
  char v12;
  unint64_t v13;
  char v14;
  _QWORD *v15;
  uint64_t result;

  v4 = (_QWORD **)v3;
  v8 = (_QWORD *)*v3;
  v9 = sub_247756C4C(a2, a3);
  if (__OFADD__(v8[2], (v10 & 1) == 0))
  {
    __break(1u);
    goto LABEL_9;
  }
  v11 = v9;
  v12 = v10;
  sub_247758210();
  if ((sub_2478B725C() & 1) == 0)
    goto LABEL_5;
  v13 = sub_247756C4C(a2, a3);
  if ((v12 & 1) != (v14 & 1))
  {
LABEL_9:
    result = sub_2478B737C();
    __break(1u);
    return result;
  }
  v11 = v13;
LABEL_5:
  v15 = *v4;
  if ((v12 & 1) != 0)
    return sub_247758274((uint64_t)a1, v15[7] + 48 * v11);
  sub_247757BB0(v11, a2, a3, a1, v15);
  return sub_2478B6DA0();
}

_OWORD *sub_247757B4C(unint64_t a1, uint64_t a2, _OWORD *a3, _QWORD *a4)
{
  _OWORD *result;
  uint64_t v6;
  BOOL v7;
  uint64_t v8;

  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(_QWORD *)(a4[6] + 8 * a1) = a2;
  result = sub_247757EF4(a3, (_OWORD *)(a4[7] + 32 * a1));
  v6 = a4[2];
  v7 = __OFADD__(v6, 1);
  v8 = v6 + 1;
  if (v7)
    __break(1u);
  else
    a4[2] = v8;
  return result;
}

unint64_t sub_247757BB0(unint64_t result, uint64_t a2, uint64_t a3, _OWORD *a4, _QWORD *a5)
{
  _QWORD *v5;
  _OWORD *v6;
  __int128 v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;

  a5[(result >> 6) + 8] |= 1 << result;
  v5 = (_QWORD *)(a5[6] + 16 * result);
  *v5 = a2;
  v5[1] = a3;
  v6 = (_OWORD *)(a5[7] + 48 * result);
  v7 = a4[1];
  *v6 = *a4;
  v6[1] = v7;
  v6[2] = a4[2];
  v8 = a5[2];
  v9 = __OFADD__(v8, 1);
  v10 = v8 + 1;
  if (v9)
    __break(1u);
  else
    a5[2] = v10;
  return result;
}

uint64_t sub_247757C0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = -1 << *(_BYTE *)(a1 + 32);
  *a4 = a1;
  v7 = *(_QWORD *)(a1 + 64);
  result = a1 + 64;
  v6 = v7;
  a4[1] = result;
  a4[2] = ~v4;
  if (-v4 < 64)
    v8 = ~(-1 << -(char)v4);
  else
    v8 = -1;
  a4[3] = 0;
  a4[4] = v8 & v6;
  a4[5] = a2;
  a4[6] = a3;
  return result;
}

void sub_247757C48(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  uint64_t v6;
  int64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  int64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  void (*v17)(_OWORD *);
  _OWORD v18[2];
  uint64_t v19;
  _OWORD v20[2];
  uint64_t v21;
  _OWORD v22[2];
  uint64_t v23;

  v3 = *v1;
  v4 = v1[1];
  v6 = v1[2];
  v5 = v1[3];
  v7 = v5;
  v8 = v1[4];
  if (v8)
  {
    v9 = (v8 - 1) & v8;
    v10 = __clz(__rbit64(v8)) | (v5 << 6);
LABEL_3:
    v11 = *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v10);
    sub_247758324(*(_QWORD *)(v3 + 56) + 32 * v10, (uint64_t)v22 + 8);
    *(_QWORD *)&v22[0] = v11;
    swift_retain();
    goto LABEL_23;
  }
  v12 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    return;
  }
  v13 = (unint64_t)(v6 + 64) >> 6;
  if (v12 < v13)
  {
    v14 = *(_QWORD *)(v4 + 8 * v12);
    if (v14)
    {
LABEL_7:
      v9 = (v14 - 1) & v14;
      v10 = __clz(__rbit64(v14)) + (v12 << 6);
      v7 = v12;
      goto LABEL_3;
    }
    v15 = v5 + 2;
    v7 = v5 + 1;
    if (v5 + 2 < v13)
    {
      v14 = *(_QWORD *)(v4 + 8 * v15);
      if (v14)
      {
LABEL_10:
        v12 = v15;
        goto LABEL_7;
      }
      v7 = v5 + 2;
      if (v5 + 3 < v13)
      {
        v14 = *(_QWORD *)(v4 + 8 * (v5 + 3));
        if (v14)
        {
          v12 = v5 + 3;
          goto LABEL_7;
        }
        v15 = v5 + 4;
        v7 = v5 + 3;
        if (v5 + 4 < v13)
        {
          v14 = *(_QWORD *)(v4 + 8 * v15);
          if (v14)
            goto LABEL_10;
          v12 = v5 + 5;
          v7 = v5 + 4;
          if (v5 + 5 < v13)
          {
            v14 = *(_QWORD *)(v4 + 8 * v12);
            if (v14)
              goto LABEL_7;
            v7 = v13 - 1;
            v16 = v5 + 6;
            while (v16 < v13)
            {
              v14 = *(_QWORD *)(v4 + 8 * v16++);
              if (v14)
              {
                v12 = v16 - 1;
                goto LABEL_7;
              }
            }
          }
        }
      }
    }
  }
  v9 = 0;
  v23 = 0;
  memset(v22, 0, sizeof(v22));
LABEL_23:
  *v1 = v3;
  v1[1] = v4;
  v1[2] = v6;
  v1[3] = v7;
  v1[4] = v9;
  v17 = (void (*)(_OWORD *))v1[5];
  sub_2477583CC((uint64_t)v22, (uint64_t)v20);
  if (*(_QWORD *)&v20[0])
  {
    v18[0] = v20[0];
    v18[1] = v20[1];
    v19 = v21;
    v17(v18);
    sub_247758494();
  }
  else
  {
    *(_QWORD *)(a1 + 32) = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
  }
}

uint64_t sub_247757E1C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_24775603C(a1, a2, *a3, a3[1]);
}

uint64_t sub_247757E38(uint64_t a1, uint64_t a2, char *a3)
{
  return sub_2477560C8(a1, a2, *a3);
}

uint64_t sub_247757E50(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_247756144(a1, a2, *a3, a3[1]);
}

uint64_t sub_247757E6C(uint64_t a1, uint64_t a2, void **a3)
{
  return sub_2477561DC(a1, a2, *a3);
}

uint64_t sub_247757E84(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_247756264(a1, a2, *a3);
}

uint64_t sub_247757E9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = OUTLINED_FUNCTION_19_0();
  return sub_247757E84(v0, v1, v2);
}

unint64_t sub_247757EB4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C1A10;
  if (!qword_2576C1A10)
  {
    v1 = type metadata accessor for Configuration();
    result = MEMORY[0x24958320C](&protocol conformance descriptor for Configuration, v1);
    atomic_store(result, (unint64_t *)&qword_2576C1A10);
  }
  return result;
}

_OWORD *sub_247757EF4(_OWORD *a1, _OWORD *a2)
{
  __int128 v2;

  v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_247757F04()
{
  uint64_t v0;
  uint64_t v1;
  void **v2;

  v0 = OUTLINED_FUNCTION_19_0();
  return sub_247757E6C(v0, v1, v2);
}

uint64_t sub_247757F1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = OUTLINED_FUNCTION_19_0();
  return sub_247757E50(v0, v1, v2);
}

unint64_t sub_247757F34()
{
  unint64_t result;

  result = qword_2576C1A20;
  if (!qword_2576C1A20)
  {
    sub_247757F74();
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_2576C1A20);
  }
  return result;
}

unint64_t sub_247757F74()
{
  unint64_t result;

  result = qword_2576C1A28;
  if (!qword_2576C1A28)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_2576C1A28);
  }
  return result;
}

uint64_t sub_247757FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247757FF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_247757FF4()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576C1A30)
  {
    sub_24775807C();
    sub_247753FA4(255, &qword_2576C1A48, (uint64_t (*)(uint64_t))sub_2477580E0, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1250]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576C1A30);
  }
}

void sub_24775807C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1A38)
  {
    sub_247758170(255, &qword_2576C1A40);
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1A38);
  }
}

void sub_2477580E0()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576C1A50)
  {
    sub_247758170(255, &qword_2576C1A58);
    sub_247758170(255, &qword_2576C1A60);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576C1A50);
  }
}

uint64_t sub_247758170(uint64_t a1, unint64_t *a2)
{
  uint64_t result;

  result = *a2;
  if (!*a2)
  {
    result = swift_getExistentialTypeMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_2477581BC(uint64_t a1)
{
  uint64_t v2;

  sub_247753FA4(0, &qword_2576C1A68, (uint64_t (*)(uint64_t))sub_247757FF4, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_247758210()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1A70)
  {
    sub_247757FF4();
    v0 = sub_2478B7280();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1A70);
  }
}

uint64_t sub_247758274(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247757FF4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_2477582B8()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;

  v0 = OUTLINED_FUNCTION_19_0();
  return sub_247757E38(v0, v1, v2);
}

uint64_t sub_2477582D0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t *v2;

  v0 = OUTLINED_FUNCTION_19_0();
  return sub_247757E1C(v0, v1, v2);
}

uint64_t *__swift_allocate_boxed_opaque_existential_0(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_247758324(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_247758360()
{
  return swift_release();
}

void sub_247758368(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_2478B7160();
    v7 = a3(a1, v6, MEMORY[0x24BEE4AD8] + 8, MEMORY[0x24BEE20F8]);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t sub_2477583CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247753FA4(0, &qword_2576C1A80, (uint64_t (*)(uint64_t))sub_247758428, (uint64_t (*)(uint64_t, uint64_t))MEMORY[0x24BEE1C68]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_247758428()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576C1A88)
  {
    sub_2478B7160();
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576C1A88);
  }
}

void sub_247758494()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t v2;

  v0 = OUTLINED_FUNCTION_24();
  v2 = v1(v0);
  OUTLINED_FUNCTION_6_1(v2);
  OUTLINED_FUNCTION_12();
}

uint64_t sub_2477584B8()
{
  return sub_2477582B8();
}

uint64_t OUTLINED_FUNCTION_0_1()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_2_1()
{
  return swift_dynamicCast();
}

uint64_t OUTLINED_FUNCTION_3_1()
{
  return sub_2478B6C14();
}

uint64_t OUTLINED_FUNCTION_6_1(uint64_t a1)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 8))(v1, a1);
}

uint64_t OUTLINED_FUNCTION_7_0()
{
  return swift_beginAccess();
}

uint64_t OUTLINED_FUNCTION_8_0()
{
  return swift_release();
}

double OUTLINED_FUNCTION_9_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10)
{
  uint64_t v10;

  return sub_247755DA4(a1, v10, &a10);
}

uint64_t OUTLINED_FUNCTION_10_0()
{
  return swift_retain();
}

unint64_t OUTLINED_FUNCTION_11_0()
{
  return sub_247757EB4();
}

uint64_t OUTLINED_FUNCTION_14_0()
{
  return sub_2477564A0();
}

void OUTLINED_FUNCTION_15_0()
{
  sub_2477570C4();
}

uint64_t OUTLINED_FUNCTION_16_0(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 40) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_17_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_19_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 16);
}

uint64_t OUTLINED_FUNCTION_20_0()
{
  return sub_247755E48();
}

uint64_t OUTLINED_FUNCTION_21_0()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_22_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_24()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_25()
{
  return sub_2478B6C2C();
}

uint64_t static FairPlay.generateAnisetteMachineData(account:)(uint64_t a1, char a2)
{
  uint64_t v4;
  void (**v5)(uint64_t);
  uint64_t v6;
  int v7;
  int v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  id v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  unint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[2];

  v28[1] = *MEMORY[0x24BDAC8D0];
  sub_2478B6BC0();
  MEMORY[0x24BDAC7A8]();
  v5 = (void (**)(uint64_t))((char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v27 = 0;
  v28[0] = 0;
  v26 = 0;
  if ((a2 & 1) != 0)
    v6 = -1;
  else
    v6 = a1;
  qi864985u0(v6, (uint64_t)v28, (uint64_t)&v26 + 4, (uint64_t)&v27, (uint64_t)&v26);
  v8 = v7;
  result = sub_2478B6D34();
  if (v8 != (_DWORD)result)
  {
    v15 = sub_2478B6E48();
    v17 = v16;
    v18 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v19 = sub_247752E68(v15, v17, v8, 0);
    swift_willThrow();
    v25 = 3;
    sub_247758860();
    v20 = swift_allocObject();
    *(_OWORD *)(v20 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v20 + 32) = v19;
    sub_2477588B4();
    sub_2477538F8();
    swift_allocError();
    v13 = v21;
    v22 = v19;
    v23 = sub_2477538BC();
    MEMORY[0x249582690](&v25, 0xD000000000000031, 0x80000002478D09B0, v20, &type metadata for FairPlay.Error, v23);
    swift_willThrow();

    return v13;
  }
  v10 = v28[0];
  if (v28[0])
  {
    v11 = HIDWORD(v26);
    *v5 = j__jk24uiwqrg;
    v5[1] = 0;
    OUTLINED_FUNCTION_0_2();
    result = MEMORY[0x2495825A0](v10, v11, v5);
    v12 = v27;
    if (v27)
    {
      v13 = result;
      v14 = v26;
      *v5 = j__jk24uiwqrg;
      v5[1] = 0;
      OUTLINED_FUNCTION_0_2();
      MEMORY[0x2495825A0](v12, v14, v5);
      return v13;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void sub_247758860()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25444CC30)
  {
    sub_247753868();
    v0 = sub_2478B7334();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25444CC30);
  }
}

void sub_2477588B4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_25444CC10)
  {
    sub_2477538BC();
    v0 = sub_2478B6CC8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_25444CC10);
  }
}

uint64_t OUTLINED_FUNCTION_0_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(v1, v2, v0);
}

void sub_24775891C()
{
  sub_2478B6FEC();
  OUTLINED_FUNCTION_12();
}

uint64_t FacetBuilding.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void (*v22)(uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t AssociatedConformanceWitness;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_204();
  v34 = v1;
  v35 = v2;
  v28 = v3;
  v29 = v0;
  v27 = v4;
  v31 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8]();
  OUTLINED_FUNCTION_201();
  v30 = v6 - v5;
  OUTLINED_FUNCTION_255();
  OUTLINED_FUNCTION_251();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_251();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_10();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_198();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v8 = swift_getAssociatedConformanceWitness();
  v25 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  MEMORY[0x24BDAC7A8]();
  v10 = (char *)&v24 - v9;
  v24 = type metadata accessor for ContentRegistration(0, AssociatedTypeWitness, v8, v11);
  v12 = *(_QWORD *)(v24 - 8);
  MEMORY[0x24BDAC7A8]();
  v14 = (char *)&v24 - v13;
  v15 = swift_checkMetadataState();
  v16 = *(_QWORD *)(v15 - 8);
  MEMORY[0x24BDAC7A8]();
  v18 = (char *)&v24 - v17;
  v32 = 0;
  v33 = 0xE000000000000000;
  v19 = v28;
  v20 = v29;
  (*(void (**)(uint64_t))(v27 + 40))(v28);
  (*(void (**)(uint64_t))(AssociatedConformanceWitness + 24))(v15);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v18, v15);
  OUTLINED_FUNCTION_239((uint64_t)v10, (uint64_t)v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v24);
  OUTLINED_FUNCTION_143();
  sub_2478B7340();
  v21 = OUTLINED_FUNCTION_143();
  v22(v21);
  OUTLINED_FUNCTION_238();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 16))(v30, v20, v19);
  OUTLINED_FUNCTION_87();
  sub_2478B6E84();
  sub_2478B6EA8();
  OUTLINED_FUNCTION_34_0();
  return v32;
}

uint64_t FacetBuilding.availability.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_233(a1, a2, a3);
  OUTLINED_FUNCTION_109();
  v3[6] = OUTLINED_FUNCTION_83();
  v3[7] = OUTLINED_FUNCTION_175();
  v4 = OUTLINED_FUNCTION_13_0();
  v5 = OUTLINED_FUNCTION_173(v4);
  v6 = OUTLINED_FUNCTION_75(v5);
  v3[12] = OUTLINED_FUNCTION_227(v6);
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247758CF4()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_80();
  v1 = OUTLINED_FUNCTION_132();
  v0[13] = v1;
  OUTLINED_FUNCTION_94();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[14] = v2;
    OUTLINED_FUNCTION_219(v2);
    OUTLINED_FUNCTION_44();
    return sub_24775907C(v3, v4, v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_128();
    v8 = OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_77(v8, v9, v10, v11);
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_43();
    v0[17] = OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v12, MEMORY[0x24BEAEFD8]);
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_84();
    return OUTLINED_FUNCTION_45();
  }
}

uint64_t sub_247758DC4()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247758E00()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v0);
}

uint64_t sub_247758E38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_203();
  FacetBuildingPlan.__allocating_init(system:)(v0);
  *(_QWORD *)(v1 + 144) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 152) = v3;
  v4 = OUTLINED_FUNCTION_202(v3, (uint64_t)sub_247758E8C);
  return OUTLINED_FUNCTION_81(v4, v5, v6);
}

uint64_t sub_247758E8C()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v5 = *v0;
  v1 = v5;
  v2 = *v0;
  OUTLINED_FUNCTION_41(&v5);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 160) = v3;
  *v3 = v2;
  v3[1] = sub_247758EE4;
  return OUTLINED_FUNCTION_106((uint64_t)v3);
}

uint64_t sub_247758EE4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  OUTLINED_FUNCTION_25_0();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    return OUTLINED_FUNCTION_2_0();
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v3;
    v4 = OUTLINED_FUNCTION_165(v3);
    return sub_24775907C(v4, v5, v6, v7);
  }
}

uint64_t sub_247758F44()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v1 + 184) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247758F90()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_259();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v0);
}

uint64_t sub_247758FC4()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247759000()
{
  uint64_t v0;

  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247759038()
{
  uint64_t v0;

  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for FacetBuildingPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FacetBuildingPlan);
}

uint64_t sub_24775907C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[30] = a4;
  v5[31] = v4;
  v5[28] = a2;
  v5[29] = a3;
  v5[27] = a1;
  OUTLINED_FUNCTION_36(a1, &qword_2576C1AC8, MEMORY[0x24BEAF010]);
  v5[32] = v6;
  v5[33] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_43();
  v5[34] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v7, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v5[35] = v8;
  v5[36] = v9;
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_247759114()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  char v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  _BOOL8 v14;
  char v15;
  _QWORD *v16;
  uint64_t v18;
  _QWORD *v19;

  OUTLINED_FUNCTION_49();
  v1 = *(_QWORD *)(v0 + 248);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136)) == 1)
  {
    v2 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 112));
    v3 = *(_QWORD *)(v2 + 16);
    v4 = (_QWORD *)MEMORY[0x24BEE4AF8];
    if (v3)
    {
      v19 = (_QWORD *)MEMORY[0x24BEE4AF8];
      sub_2478B6DA0();
      sub_247791C6C(0, v3, 0);
      v5 = v2 + 32;
      v4 = v19;
      do
      {
        sub_2477680F0(v5, v0 + 144);
        __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 144), *(_QWORD *)(v0 + 168));
        sub_2478B71B4();
        __swift_destroy_boxed_opaque_existential_1(v0 + 144);
        v6 = *(_QWORD *)(v0 + 200);
        v7 = *(_QWORD *)(v0 + 208);
        if ((OUTLINED_FUNCTION_189() & 1) == 0)
        {
          v8 = (char *)OUTLINED_FUNCTION_115();
          sub_247791C6C(v8, v9, v10);
          v4 = v19;
        }
        v12 = v4[2];
        v11 = v4[3];
        if (v12 >= v11 >> 1)
        {
          v14 = OUTLINED_FUNCTION_140(v11);
          sub_247791C6C((char *)v14, v12 + 1, 1);
          v4 = v19;
        }
        v4[2] = v12 + 1;
        v13 = &v4[2 * v12];
        v13[4] = v6;
        v13[5] = v7;
        v5 += 40;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    sub_2478B71B4();
    v15 = sub_24775BE04(*(_QWORD *)(v0 + 184), *(_QWORD *)(v0 + 192), v4);
    OUTLINED_FUNCTION_30();
    swift_bridgeObjectRelease();
    if ((v15 & 1) != 0)
    {
      v16 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 296) = v16;
      *v16 = v0;
      v16[1] = sub_2477593E0;
      return OUTLINED_FUNCTION_48(v0 + 96, *(_QWORD *)(v0 + 224), *(_QWORD *)(v0 + 232), *(_QWORD *)(v0 + 240));
    }
    OUTLINED_FUNCTION_187();
    sub_247761A80();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 320) = 5;
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_51();
  }
  else
  {
    OUTLINED_FUNCTION_187();
    sub_247761A80();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 321) = 1;
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_234();
    OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_51();
    OUTLINED_FUNCTION_234();
  }
  v18 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_36(v18, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_220();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_18_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477593E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_208();
  *(_QWORD *)(v0 + 304) = v2;
  *(_QWORD *)(v0 + 312) = v1;
  OUTLINED_FUNCTION_256();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775942C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, char a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,_QWORD *a22,uint64_t a23,uint64_t a24)
{
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char v38;
  char *v39;
  int64_t v40;
  char v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v44;
  _BOOL8 v45;
  uint64_t (*v46)(void);
  uint64_t v48;

  OUTLINED_FUNCTION_49();
  a23 = v25;
  a24 = v26;
  a22 = v24;
  v27 = v24[38];
  swift_release();
  v24[17] = v27;
  v28 = *(_QWORD *)(v27 + 16);
  v29 = MEMORY[0x24BEE4AF8];
  if (v28)
  {
    v30 = v24[38];
    v48 = MEMORY[0x24BEE4AF8];
    sub_247791C50(0, v28, 0);
    v31 = v30 + 32;
    do
    {
      v32 = OUTLINED_FUNCTION_241();
      sub_247767BA0(v32, v33, (void (*)(_QWORD))sub_2477580E0);
      v34 = v24[10];
      v35 = v24[11];
      __swift_project_boxed_opaque_existential_1(v24 + 7, v34);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v35 + 24))(&a11, v34, v35);
      sub_2477638D8((uint64_t)(v24 + 2), (uint64_t (*)(_QWORD))sub_2477580E0);
      v36 = a11;
      v37 = a12;
      v38 = a13;
      v29 = v48;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v39 = (char *)OUTLINED_FUNCTION_115();
        sub_247791C50(v39, v40, v41);
        v29 = v48;
      }
      v43 = *(_QWORD *)(v29 + 16);
      v42 = *(_QWORD *)(v29 + 24);
      if (v43 >= v42 >> 1)
      {
        v45 = OUTLINED_FUNCTION_140(v42);
        sub_247791C50((char *)v45, v43 + 1, 1);
        v29 = v48;
      }
      *(_QWORD *)(v29 + 16) = v43 + 1;
      v44 = v29 + 24 * v43;
      *(_QWORD *)(v44 + 32) = v36;
      *(_QWORD *)(v44 + 40) = v37;
      *(_BYTE *)(v44 + 48) = v38;
      v31 += 80;
      --v28;
    }
    while (v28);
  }
  sub_24775C960((char *)v29, v24[27]);
  OUTLINED_FUNCTION_30();
  sub_2477638D8((uint64_t)(v24 + 12), (uint64_t (*)(_QWORD))sub_247757FF4);
  OUTLINED_FUNCTION_39();
  v46 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_18_0(v46);
}

uint64_t sub_247759590()
{
  uint64_t v0;

  swift_release();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

void FacetBuildingPlan.__allocating_init(system:)(uint64_t a1)
{
  swift_allocObject();
  FacetBuildingPlan.init(system:)(a1);
  OUTLINED_FUNCTION_12();
}

uint64_t FacetBuildingPlan.addFacet<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v4[14] = a3;
  v4[15] = v3;
  v4[12] = a1;
  v4[13] = a2;
  v4[16] = *(_QWORD *)(a2 - 8);
  v4[17] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_43();
  v4[18] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v5, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v4[19] = v6;
  v4[20] = v7;
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775967C()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;

  v1 = OUTLINED_FUNCTION_180(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 96), *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 128) + 16));
  OUTLINED_FUNCTION_206(v1, &qword_2576C1AB0);
  if (swift_dynamicCast())
  {
    v2 = (__int128 *)OUTLINED_FUNCTION_87();
    sub_24775B884(v2, v3);
    v4 = *(_QWORD *)(v0 + 40);
    v5 = *(_QWORD *)(v0 + 48);
    v6 = (_QWORD *)OUTLINED_FUNCTION_10();
    v8 = __swift_project_boxed_opaque_existential_1(v6, v7);
    v9 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 168) = v9;
    *v9 = v0;
    v9[1] = sub_247759794;
    return sub_24775B89C((uint64_t)v8, *(_QWORD **)(v0 + 120), *(_QWORD *)(v0 + 104), v4, *(_QWORD *)(v0 + 112), v5);
  }
  else
  {
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    *(_QWORD *)(v0 + 88) = 0;
    swift_release();
    sub_24776800C(v0 + 56, &qword_2576C1AB8);
    swift_task_dealloc();
    return (*(uint64_t (**)(void))(v0 + 8))();
  }
}

uint64_t sub_247759794()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_41(&v2);
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_2477597D4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_114();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FacetBuildingPlan.optimize()(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2[78] = v1;
  v3 = *v1;
  v2[79] = v3;
  OUTLINED_FUNCTION_36(a1, &qword_2576C1AC8, MEMORY[0x24BEAF010]);
  v2[80] = v4;
  v2[81] = OUTLINED_FUNCTION_13_0();
  v5 = *(_QWORD *)(v3 + 80);
  v2[82] = v5;
  v2[83] = *(_QWORD *)(v5 - 8);
  v2[84] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_43();
  v2[85] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v6, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v2[86] = v7;
  v2[87] = v8;
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_2477598BC()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t isUniquelyReferenced_nonNull_native;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_85();
  v1 = *(uint64_t **)(v0 + 624);
  v2 = *v1;
  v3 = *(_QWORD *)(*v1 + 136);
  *(_QWORD *)(v0 + 704) = v3;
  if ((*((_BYTE *)v1 + v3) & 1) == 0)
  {
    v6 = *(_QWORD *)(v0 + 656);
    v7 = *(_QWORD *)(v0 + 632);
    v8 = *(_QWORD *)(v2 + 120);
    *(_QWORD *)(v0 + 712) = v8;
    v9 = (uint64_t *)((char *)v1 + v8);
    OUTLINED_FUNCTION_7_0();
    v10 = OUTLINED_FUNCTION_197();
    sub_24775CCC4(v10);
    OUTLINED_FUNCTION_89();
    sub_2478B6F68();
    v11 = swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_206(v11, &qword_2576C1AD8);
    *(_QWORD *)(v0 + 616) = type metadata accessor for FacetCollection(255, v6, *(_QWORD *)(v7 + 88), v12);
    *(_QWORD *)(v0 + 720) = swift_getExtendedExistentialTypeMetadata();
    OUTLINED_FUNCTION_198();
    *(_QWORD *)(v0 + 728) = sub_2478B7244();
    OUTLINED_FUNCTION_89();
    OUTLINED_FUNCTION_7_0();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v14 = *v9;
    if ((_DWORD)isUniquelyReferenced_nonNull_native)
    {
      sub_247761834(0, *(_QWORD *)(v14 + 16), (uint64_t)&unk_2576C1EB8, &qword_2576C1A58, (uint64_t)&protocol descriptor for FacetElement, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_247791BA8);
    }
    else
    {
      OUTLINED_FUNCTION_207(isUniquelyReferenced_nonNull_native, *(_QWORD *)(v14 + 24) >> 1);
      *v9 = v15;
      OUTLINED_FUNCTION_89();
    }
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_162();
    v16 = OUTLINED_FUNCTION_229();
    OUTLINED_FUNCTION_214();
    *(_QWORD *)(v0 + 608) = v16;
    OUTLINED_FUNCTION_172();
  }
  swift_release();
  sub_247761A80();
  sub_2478B6CA4();
  OUTLINED_FUNCTION_29();
  *(_BYTE *)(v0 + 816) = 6;
  OUTLINED_FUNCTION_160();
  OUTLINED_FUNCTION_234();
  v4 = OUTLINED_FUNCTION_29();
  OUTLINED_FUNCTION_36(v4, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_220();
  swift_task_dealloc();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_20_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247759EB0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 752) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 664));
  if (v1)
    OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_262();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247759F28()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  BOOL v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t (*v40)(void);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  OUTLINED_FUNCTION_85();
  v1 = v0 + 53;
  v2 = v0[89];
  v3 = v0[78];
  v4 = v0[56];
  v5 = v0[57];
  __swift_project_boxed_opaque_existential_1(v0 + 53, v4);
  v0[41] = v4;
  v0[42] = v5;
  v47 = (uint64_t)(v0 + 38);
  __swift_allocate_boxed_opaque_existential_1Tm(v0 + 38);
  v6 = *(_QWORD *)(*(_QWORD *)(v4 - 8) + 16);
  ((void (*)(void))v6)();
  v7 = *(_QWORD *)(v3 + v2);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v3 + v2) = v7;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    goto LABEL_33;
  while (1)
  {
    v48 = (uint64_t)v1;
    v10 = *(_QWORD *)(v7 + 16);
    v9 = *(_QWORD *)(v7 + 24);
    if (v10 >= v9 >> 1)
    {
      v44 = v0[89];
      v45 = v0[78];
      OUTLINED_FUNCTION_140(v9);
      sub_247761C30();
      *(_QWORD *)(v45 + v44) = v46;
    }
    v11 = v0[91];
    v12 = v0[90];
    v13 = (uint64_t *)(v0[78] + v0[89]);
    v14 = swift_task_alloc();
    OUTLINED_FUNCTION_211();
    ((void (*)(void))v6)();
    sub_24776375C(v10, v14, v13, v4, v5, (uint64_t (*)(uint64_t *, uint64_t))sub_24775B884);
    OUTLINED_FUNCTION_50();
    __swift_destroy_boxed_opaque_existential_1(v47);
    v1 = (uint64_t *)v48;
    __swift_destroy_boxed_opaque_existential_1(v48);
    v15 = v0[76];
    if (v15 != MEMORY[0x2495829A8](v11, v12))
    {
      v27 = OUTLINED_FUNCTION_179();
      OUTLINED_FUNCTION_232();
      if ((v27 & 1) != 0)
      {
        OUTLINED_FUNCTION_230();
        OUTLINED_FUNCTION_192(v27 + 40 * v15 + 32);
        OUTLINED_FUNCTION_162();
        OUTLINED_FUNCTION_209();
      }
      result = sub_2478B71CC();
      __break(1u);
LABEL_35:
      __break(1u);
      return result;
    }
    v16 = v0[78];
    OUTLINED_FUNCTION_20();
    v17 = *(_QWORD *)(*(_QWORD *)v16 + 112);
    v18 = *(_QWORD **)(*(_QWORD *)(v16 + v17) + 16);
    OUTLINED_FUNCTION_7_0();
    sub_2477637E0();
    OUTLINED_FUNCTION_176();
    swift_endAccess();
    OUTLINED_FUNCTION_236();
    if (v19)
    {
      OUTLINED_FUNCTION_86();
      result = OUTLINED_FUNCTION_7_0();
      v0[98] = 0;
      v21 = v0[95];
      if (*(_QWORD *)(v21 + 16))
      {
        OUTLINED_FUNCTION_136(v21);
        __swift_project_boxed_opaque_existential_1(v18, v0[36]);
        v22 = (_QWORD *)swift_task_alloc();
        v0[99] = (uint64_t)v22;
        v23 = OUTLINED_FUNCTION_103(v22);
        return OUTLINED_FUNCTION_53(v23, v24, v25, v26);
      }
      goto LABEL_35;
    }
    OUTLINED_FUNCTION_168();
    v28 = (uint64_t *)(v0[78] + *(_QWORD *)(*(_QWORD *)v0[78] + 128));
    OUTLINED_FUNCTION_7_0();
    v29 = OUTLINED_FUNCTION_133();
    sub_24775CCC4(v29);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_261();
    OUTLINED_FUNCTION_34_0();
    v6 = OUTLINED_FUNCTION_237();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_7_0();
    v30 = OUTLINED_FUNCTION_222();
    v31 = *v28;
    if ((v30 & 1) != 0)
    {
      OUTLINED_FUNCTION_158(v30, *(_QWORD *)(v31 + 16), (uint64_t)&qword_2576C1EA0, &qword_2576C1AF8, (uint64_t)&protocol descriptor for FacetElementRequest, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2477930D4);
    }
    else
    {
      OUTLINED_FUNCTION_207(v30, *(_QWORD *)(v31 + 24) >> 1);
      *v28 = v32;
      OUTLINED_FUNCTION_30();
    }
    OUTLINED_FUNCTION_117();
    v33 = *(_QWORD *)(v6 + 16);
    if (!v33)
      break;
    v47 = v6;
    OUTLINED_FUNCTION_79();
    v5 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      OUTLINED_FUNCTION_146();
      v4 = OUTLINED_FUNCTION_22_1();
      sub_247758170(0, &qword_2576C1AF8);
      v34 = OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_100();
      if (v35)
        break;
      if (!OUTLINED_FUNCTION_189() || (uint64_t)v28 > *(_QWORD *)(v5 + 24) >> 1)
      {
        OUTLINED_FUNCTION_102();
        sub_247761C30();
        v5 = v36;
      }
      if (*(_QWORD *)(v34 + 16))
      {
        OUTLINED_FUNCTION_101();
        if (v37 != v35)
          goto LABEL_31;
        OUTLINED_FUNCTION_28_0();
        if (v48)
        {
          v38 = *(_QWORD *)(v5 + 16);
          v35 = __OFADD__(v38, v48);
          v39 = v38 + v48;
          if (v35)
            goto LABEL_32;
          *(_QWORD *)(v5 + 16) = v39;
        }
      }
      else if (v48)
      {
        goto LABEL_30;
      }
      OUTLINED_FUNCTION_30();
      v11 += 40;
      if (!--v33)
      {
        OUTLINED_FUNCTION_212();
        goto LABEL_28;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    v41 = v0[89];
    v42 = v0[78];
    OUTLINED_FUNCTION_115();
    sub_247761C30();
    v7 = v43;
    *(_QWORD *)(v42 + v41) = v43;
  }
  OUTLINED_FUNCTION_34_0();
LABEL_28:
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_144();
  *(_BYTE *)(v11 + v17) = 1;
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  v40 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_20_1(v40);
}

uint64_t sub_24775A454()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_208();
  *(_QWORD *)(v0 + 800) = v2;
  *(_QWORD *)(v0 + 808) = v1;
  OUTLINED_FUNCTION_256();
  if (v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_262();
  return OUTLINED_FUNCTION_2_0();
}

void sub_24775A4B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(void);
  __int128 *v35;

  OUTLINED_FUNCTION_49();
  v2 = v0 + 96;
  v3 = (_QWORD *)(v0 + 264);
  v4 = *(_QWORD *)(v0 + 800);
  *(_QWORD *)(v0 + 136) = v4;
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v35 = (__int128 *)(v0 + 384);
    v1 = v4 + 32;
    sub_2478B6DA0();
    v6 = MEMORY[0x24BEE4AF8];
    do
    {
      sub_247767BA0(v1, v0 + 16, (void (*)(_QWORD))sub_2477580E0);
      __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
      OUTLINED_FUNCTION_92();
      sub_2477638D8(v0 + 16, (uint64_t (*)(_QWORD))sub_2477580E0);
      if (*(_QWORD *)(v0 + 208))
      {
        OUTLINED_FUNCTION_249((__int128 *)(v0 + 184));
        sub_24775B884((__int128 *)(v0 + 344), (uint64_t)v35);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          OUTLINED_FUNCTION_115();
          sub_247761C30();
          v6 = v9;
        }
        v8 = *(_QWORD *)(v6 + 16);
        v7 = *(_QWORD *)(v6 + 24);
        if (v8 >= v7 >> 1)
        {
          OUTLINED_FUNCTION_188(v7);
          sub_247761C30();
          v6 = v10;
        }
        *(_QWORD *)(v6 + 16) = v8 + 1;
        sub_24775B884(v35, v6 + 40 * v8 + 32);
      }
      else
      {
        sub_24776800C(v0 + 184, &qword_2576C1AF0);
      }
      v1 += 80;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    v3 = (_QWORD *)(v0 + 264);
    v2 = v0 + 96;
  }
  v11 = *(_QWORD *)(v0 + 768);
  v12 = *(_QWORD *)(v0 + 784) + 1;
  sub_24775BD04();
  sub_2477638D8(v2, (uint64_t (*)(_QWORD))sub_247757FF4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  if (v12 != v11)
  {
    v18 = *(_QWORD *)(v0 + 784) + 1;
    *(_QWORD *)(v0 + 784) = v18;
    v19 = *(_QWORD *)(v0 + 760);
    if (v18 < *(_QWORD *)(v19 + 16))
    {
      sub_2477680F0(v19 + 40 * v18 + 32, (uint64_t)v3);
      v20 = *(_QWORD *)(v0 + 296);
      __swift_project_boxed_opaque_existential_1(v3, *(_QWORD *)(v0 + 288));
      v21 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 792) = v21;
      *v21 = v0;
      v21[1] = sub_24775A454;
      OUTLINED_FUNCTION_244();
      OUTLINED_FUNCTION_48(v22, v23, v24, v20);
      return;
    }
    goto LABEL_38;
  }
  swift_bridgeObjectRelease();
  swift_release();
  v13 = (uint64_t *)(*(_QWORD *)(v0 + 624) + *(_QWORD *)(**(_QWORD **)(v0 + 624) + 128));
  OUTLINED_FUNCTION_7_0();
  v14 = OUTLINED_FUNCTION_133();
  sub_24775CCC4(v14);
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_261();
  OUTLINED_FUNCTION_34_0();
  v15 = OUTLINED_FUNCTION_237();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_7_0();
  v16 = OUTLINED_FUNCTION_222();
  v17 = *v13;
  if ((v16 & 1) != 0)
  {
    OUTLINED_FUNCTION_158(v16, *(_QWORD *)(v17 + 16), (uint64_t)&qword_2576C1EA0, &qword_2576C1AF8, (uint64_t)&protocol descriptor for FacetElementRequest, (uint64_t (*)(uint64_t, uint64_t, uint64_t))sub_2477930D4);
  }
  else
  {
    OUTLINED_FUNCTION_207(v16, *(_QWORD *)(v17 + 24) >> 1);
    *v13 = v25;
    OUTLINED_FUNCTION_30();
  }
  OUTLINED_FUNCTION_117();
  v26 = *(_QWORD *)(v15 + 16);
  if (v26)
  {
    OUTLINED_FUNCTION_79();
    v27 = MEMORY[0x24BEE4AF8];
    while (1)
    {
      OUTLINED_FUNCTION_146();
      OUTLINED_FUNCTION_22_1();
      sub_247758170(0, &qword_2576C1AF8);
      v28 = OUTLINED_FUNCTION_69();
      OUTLINED_FUNCTION_20();
      OUTLINED_FUNCTION_100();
      if (v29)
        break;
      if (!OUTLINED_FUNCTION_189() || (uint64_t)v13 > *(_QWORD *)(v27 + 24) >> 1)
      {
        OUTLINED_FUNCTION_102();
        sub_247761C30();
        v27 = v30;
      }
      if (*(_QWORD *)(v28 + 16))
      {
        OUTLINED_FUNCTION_101();
        if (v31 != v29)
          goto LABEL_36;
        OUTLINED_FUNCTION_28_0();
        if (v1)
        {
          v32 = *(_QWORD *)(v27 + 16);
          v29 = __OFADD__(v32, v1);
          v33 = v32 + v1;
          if (v29)
            goto LABEL_37;
          *(_QWORD *)(v27 + 16) = v33;
        }
      }
      else if (v1)
      {
        goto LABEL_35;
      }
      OUTLINED_FUNCTION_30();
      v5 += 40;
      if (!--v26)
      {
        OUTLINED_FUNCTION_212();
        goto LABEL_33;
      }
    }
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    return;
  }
  OUTLINED_FUNCTION_34_0();
LABEL_33:
  OUTLINED_FUNCTION_98();
  OUTLINED_FUNCTION_144();
  *(_BYTE *)(v5 + v2) = 1;
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  v34 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  OUTLINED_FUNCTION_18_0(v34);
}

uint64_t sub_24775A96C()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_247();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775A9AC()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_247();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FacetBuilding.value.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_233(a1, a2, a3);
  OUTLINED_FUNCTION_109();
  v3[6] = OUTLINED_FUNCTION_83();
  v3[7] = OUTLINED_FUNCTION_175();
  v4 = OUTLINED_FUNCTION_13_0();
  v5 = OUTLINED_FUNCTION_173(v4);
  v6 = OUTLINED_FUNCTION_75(v5);
  v3[12] = OUTLINED_FUNCTION_227(v6);
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24775AA64()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_80();
  v1 = OUTLINED_FUNCTION_132();
  v0[13] = v1;
  OUTLINED_FUNCTION_94();
  if (v1)
  {
    v2 = (_QWORD *)swift_task_alloc();
    v0[14] = v2;
    OUTLINED_FUNCTION_219(v2);
    OUTLINED_FUNCTION_44();
    return sub_24775AD74(v3, v4, v5, v6);
  }
  else
  {
    OUTLINED_FUNCTION_128();
    v8 = OUTLINED_FUNCTION_127();
    OUTLINED_FUNCTION_77(v8, v9, v10, v11);
    OUTLINED_FUNCTION_99();
    OUTLINED_FUNCTION_94();
    OUTLINED_FUNCTION_43();
    v0[17] = OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v12, MEMORY[0x24BEAEFD8]);
    OUTLINED_FUNCTION_6_0();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_84();
    return OUTLINED_FUNCTION_45();
  }
}

uint64_t sub_24775AB34()
{
  OUTLINED_FUNCTION_70();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24775AB70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_203();
  FacetBuildingPlan.__allocating_init(system:)(v0);
  *(_QWORD *)(v1 + 144) = v2;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 152) = v3;
  v4 = OUTLINED_FUNCTION_202(v3, (uint64_t)sub_24775ABC4);
  return OUTLINED_FUNCTION_81(v4, v5, v6);
}

uint64_t sub_24775ABC4()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;

  v5 = *v0;
  v1 = v5;
  v2 = *v0;
  OUTLINED_FUNCTION_41(&v5);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 160) = v3;
  *v3 = v2;
  v3[1] = sub_24775AC1C;
  return OUTLINED_FUNCTION_106((uint64_t)v3);
}

uint64_t sub_24775AC1C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_25_0();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    return OUTLINED_FUNCTION_2_0();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 176) = v4;
    *v4 = v2;
    v4[1] = sub_24775AC80;
    return FacetBuildingPlan.execute()();
  }
}

uint64_t sub_24775AC80()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    return OUTLINED_FUNCTION_2_0();
  }
  else
  {
    v4 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 192) = v4;
    v5 = OUTLINED_FUNCTION_165(v4);
    return sub_24775AD74(v5, v6, v7, v8);
  }
}

uint64_t sub_24775ACF0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v1 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24775AD3C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_147();
  OUTLINED_FUNCTION_90();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775AD74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5[26] = a4;
  v5[27] = v4;
  v5[24] = a2;
  v5[25] = a3;
  v5[23] = a1;
  v5[28] = *v4;
  OUTLINED_FUNCTION_36(a1, &qword_2576C1AC8, MEMORY[0x24BEAF010]);
  v5[29] = v6;
  v5[30] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_43();
  v5[31] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v7, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v5[32] = v8;
  v5[33] = v9;
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775AE14()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 216);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 136)) == 1)
  {
    if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152)) == 1)
    {
      v2 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 272) = v2;
      *v2 = v0;
      v2[1] = sub_24775AFD8;
      return sub_24775BEC8(v0 + 64, *(_QWORD *)(v0 + 192), *(_QWORD *)(v0 + 200), *(_QWORD *)(v0 + 208));
    }
    OUTLINED_FUNCTION_182();
    sub_247761A80();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 312) = 3;
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_51();
  }
  else
  {
    OUTLINED_FUNCTION_182();
    sub_247761A80();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 314) = 2;
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_51();
  }
  v4 = OUTLINED_FUNCTION_31_0();
  OUTLINED_FUNCTION_36(v4, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
  OUTLINED_FUNCTION_177();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_30_0();
  OUTLINED_FUNCTION_220();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_46(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775AFD8(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v6 = *v2;
  v4 = v6;
  OUTLINED_FUNCTION_97(&v6);
  *(_QWORD *)(v4 + 280) = v1;
  swift_task_dealloc();
  if (!v1)
    *(_QWORD *)(v4 + 288) = a1;
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775B03C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int *v13;

  v1 = *(_QWORD *)(v0 + 288);
  *(_QWORD *)(v0 + 104) = v1;
  sub_247767FA8(v0 + 64, v0 + 16);
  *(_QWORD *)(v0 + 56) = v1;
  if (*(_QWORD *)(v0 + 40))
  {
    v2 = *(_QWORD *)(v0 + 224);
    OUTLINED_FUNCTION_249((__int128 *)(v0 + 16));
    v3 = *(_QWORD *)(v0 + 136);
    v4 = *(_QWORD *)(v0 + 144);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 112), v3);
    v5 = *(int **)(v4 + 48);
    OUTLINED_FUNCTION_255();
    swift_getAssociatedConformanceWitness();
    *(_QWORD *)(v0 + 176) = swift_getAssociatedTypeWitness();
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 152));
    v7 = v6;
    v13 = (int *)((char *)v5 + *v5);
    v8 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 296) = v8;
    v9 = *(_QWORD *)(v2 + 80);
    v10 = *(_QWORD *)(v2 + 88);
    *v8 = v0;
    v8[1] = sub_24775B294;
    return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t))v13)(v7, *(_QWORD *)(v0 + 216), v9, v10, v3, v4);
  }
  else
  {
    swift_release();
    sub_24776800C(v0 + 16, (unint64_t *)&qword_2576C1A38);
    sub_247761A80();
    sub_2478B6CA4();
    OUTLINED_FUNCTION_29();
    *(_BYTE *)(v0 + 313) = 4;
    OUTLINED_FUNCTION_160();
    OUTLINED_FUNCTION_24_0();
    sub_2478B6C74();
    v12 = OUTLINED_FUNCTION_29();
    OUTLINED_FUNCTION_36(v12, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    sub_247763954();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_221();
    sub_2478B6CB0();
    OUTLINED_FUNCTION_223();
    sub_2477638D8(v0 + 64, (uint64_t (*)(_QWORD))sub_247757FF4);
    OUTLINED_FUNCTION_178();
    return OUTLINED_FUNCTION_46(*(uint64_t (**)(void))(v0 + 8));
  }
}

uint64_t sub_24775B294()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775B2E0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_111();
  swift_release();
  sub_2477638D8(v0 + 64, (uint64_t (*)(_QWORD))sub_247757FF4);
  OUTLINED_FUNCTION_96();
  swift_dynamicCast();
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_190();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_57(v1);
}

uint64_t sub_24775B370()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775B3A0()
{
  uint64_t v0;

  swift_release();
  sub_2477638D8(v0 + 64, (uint64_t (*)(_QWORD))sub_247757FF4);
  __swift_deallocate_boxed_opaque_existential_0(v0 + 152);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_178();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FacetBuildingPlan.execute()()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1[6] = v0;
  v1[7] = OUTLINED_FUNCTION_43();
  v1[8] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v2, MEMORY[0x24BEAEFD8]);
  v1[9] = v3;
  sub_2478B7010();
  OUTLINED_FUNCTION_167();
  v1[10] = v4;
  v1[11] = v5;
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775B478()
{
  uint64_t v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_217(0, &qword_2576C1AF8);
  *(_QWORD *)(v0 + 96) = sub_2478B6C50();
  sub_247763844(0, &qword_2576C1B38);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  *v1 = v0;
  v1[1] = sub_24775B558;
  return sub_2478B72D4();
}

uint64_t sub_24775B558()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 112) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_release();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775B5B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);

  v1 = *(_QWORD *)(v0 + 48);
  swift_release();
  v2 = *(_QWORD *)(v0 + 40);
  v3 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 128));
  OUTLINED_FUNCTION_7_0();
  *v3 = v2;
  swift_bridgeObjectRelease();
  *(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 152)) = 1;
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_71(v4);
}

uint64_t sub_24775B624()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_88();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

unint64_t FacetBuildingError.domainName.getter()
{
  OUTLINED_FUNCTION_234();
  return 0xD000000000000012;
}

SonicKit::FacetBuildingError_optional __swiftcall FacetBuildingError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;
  char v3;
  char v4;

  v2 = 1;
  switch(rawValue)
  {
    case 'e':
      break;
    case 'f':
      v2 = 2;
      break;
    case 'g':
      v2 = 3;
      break;
    case 'h':
      v2 = 4;
      break;
    case 'i':
      v2 = 5;
      break;
    case 'j':
      v2 = 6;
      break;
    default:
      if (rawValue == 203)
        v3 = 9;
      else
        v3 = 10;
      if (rawValue == 202)
        v4 = 8;
      else
        v4 = v3;
      if (rawValue == 201)
        v2 = 7;
      else
        v2 = v4;
      if (!rawValue)
        v2 = 0;
      break;
  }
  *v1 = v2;
  return (SonicKit::FacetBuildingError_optional)rawValue;
}

uint64_t FacetBuildingError.rawValue.getter()
{
  char *v0;

  return qword_2478B8918[*v0];
}

BOOL sub_24775B714(char *a1, char *a2)
{
  return sub_24778E8F0(*a1, *a2);
}

void sub_24775B720()
{
  sub_24778EA90();
}

void sub_24775B728()
{
  sub_24778EDC8();
}

void sub_24775B730()
{
  sub_24778EE94();
}

SonicKit::FacetBuildingError_optional sub_24775B738(Swift::Int *a1)
{
  return FacetBuildingError.init(rawValue:)(*a1);
}

uint64_t sub_24775B740@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FacetBuildingError.rawValue.getter();
  *a1 = result;
  return result;
}

void sub_24775B768(_BYTE *a1@<X8>)
{
  *a1 = 0;
}

uint64_t FacetBuildingPlanner.__allocating_init()()
{
  return swift_allocObject();
}

uint64_t FacetBuildingPlanner.init()()
{
  uint64_t v0;

  return v0;
}

uint64_t FacetBuildingPlanner.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t FacetBuildingPlanner.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

void FacetBuildingPlan.init(system:)(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v2 = v1;
  v4 = *v2;
  v5 = MEMORY[0x24BEE4AF8];
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 112)) = MEMORY[0x24BEE4AF8];
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 120)) = v5;
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 128)) = v5;
  *((_BYTE *)v2 + *(_QWORD *)(*v2 + 136)) = 0;
  v6 = *(_QWORD *)(*v2 + 144);
  sub_247757FF4();
  *(uint64_t *)((char *)v2 + v6) = sub_2478B6D88();
  *((_BYTE *)v2 + *(_QWORD *)(*v2 + 152)) = 0;
  v7 = *(_QWORD *)(v4 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  OUTLINED_FUNCTION_180((uint64_t)v2 + *(_QWORD *)(*v2 + 96), a1, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 16));
  v9 = (*(uint64_t (**)(uint64_t))(*(_QWORD *)(v4 + 88) + 64))(v7);
  OUTLINED_FUNCTION_138(*(uint64_t (**)(uint64_t, uint64_t))(v8 + 8));
  *(uint64_t *)((char *)v2 + *(_QWORD *)(*v2 + 104)) = v9;
  OUTLINED_FUNCTION_195();
}

uint64_t sub_24775B884(__int128 *a1, uint64_t a2)
{
  __int128 v2;
  __int128 v3;

  v2 = *a1;
  v3 = a1[1];
  *(_QWORD *)(a2 + 32) = *((_QWORD *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t sub_24775B89C(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  _QWORD *v6;
  uint64_t (*v7)(uint64_t);
  uint64_t v8;

  v6[16] = a4;
  v6[17] = a6;
  v6[14] = a1;
  v6[15] = a2;
  v6[18] = *a2;
  v6[19] = *(_QWORD *)(a4 - 8);
  v6[20] = swift_task_alloc();
  sub_2478B6C5C();
  v7 = (uint64_t (*)(uint64_t))MEMORY[0x24BEAEFD0];
  v6[21] = sub_2478B6C50();
  sub_247767D7C((unint64_t *)&qword_2576C1898, v7, MEMORY[0x24BEAEFD8]);
  v6[22] = sub_2478B7010();
  v6[23] = v8;
  return swift_task_switch();
}

void sub_24775B954()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t (*v9)(uint64_t *, uint64_t);
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;

  OUTLINED_FUNCTION_181();
  v1 = v0[20];
  v12 = v0[19];
  v3 = v0[16];
  v2 = v0[17];
  v4 = v0[14];
  v5 = v0[15] + *(_QWORD *)(*(_QWORD *)v0[15] + 112);
  sub_24776196C();
  sub_247761A38(*(_QWORD *)(*(_QWORD *)v5 + 16));
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v1, v4, v3);
  OUTLINED_FUNCTION_251();
  sub_24776375C(v6, v7, v8, v3, v2, v9);
  v10 = OUTLINED_FUNCTION_241();
  v0[24] = v11(v10);
  v0[13] = v3;
  v0[25] = swift_getExtendedExistentialTypeMetadata();
  v0[12] = OUTLINED_FUNCTION_229();
  OUTLINED_FUNCTION_172();
}

uint64_t sub_24775BB2C()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  OUTLINED_FUNCTION_41(&v2);
  return OUTLINED_FUNCTION_4_2();
}

void sub_24775BB6C()
{
  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_172();
}

void sub_24775BC98()
{
  OUTLINED_FUNCTION_7_0();
  sub_2478B6DA0();
  sub_24775BD04();
}

void sub_24775BD04()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;

  OUTLINED_FUNCTION_204();
  v3 = *(_QWORD *)(v1 + 16);
  v4 = *v0;
  v5 = *(_QWORD *)(*v0 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v6 = v2;
  v7 = v1;
  if (!OUTLINED_FUNCTION_200() || v5 + v3 > *(_QWORD *)(v4 + 24) >> 1)
  {
    sub_247761C30();
    v4 = v8;
  }
  if (!*(_QWORD *)(v7 + 16))
  {
    if (!v3)
      goto LABEL_11;
    goto LABEL_13;
  }
  if ((*(_QWORD *)(v4 + 24) >> 1) - *(_QWORD *)(v4 + 16) < v3)
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  sub_247758170(0, v6);
  OUTLINED_FUNCTION_198();
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_11:
    OUTLINED_FUNCTION_34_0();
    *v0 = v4;
    OUTLINED_FUNCTION_112();
    return;
  }
  v9 = *(_QWORD *)(v4 + 16);
  v10 = __OFADD__(v9, v3);
  v11 = v9 + v3;
  if (!v10)
  {
    *(_QWORD *)(v4 + 16) = v11;
    goto LABEL_11;
  }
LABEL_15:
  __break(1u);
}

uint64_t sub_24775BE04(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t result;
  _QWORD *v9;
  uint64_t i;
  uint64_t v11;
  BOOL v12;

  v3 = a3[2];
  if (!v3)
    return 0;
  if (a3[4] == a1 && a3[5] == a2)
    return 1;
  result = sub_2478B734C();
  if ((result & 1) != 0)
    return 1;
  if (v3 == 1)
    return 0;
  v9 = a3 + 7;
  for (i = 1; ; ++i)
  {
    v11 = i + 1;
    if (__OFADD__(i, 1))
      break;
    v12 = *(v9 - 1) == a1 && *v9 == a2;
    if (v12 || (sub_2478B734C() & 1) != 0)
      return 1;
    result = 0;
    v9 += 2;
    if (v11 == v3)
      return result;
  }
  __break(1u);
  return result;
}

uint64_t sub_24775BEC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  _QWORD *v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;

  v5[101] = v4;
  v5[100] = a4;
  v5[99] = a3;
  v5[98] = a2;
  v5[97] = a1;
  v5[102] = *v4;
  sub_2478B6C5C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEAEFD0];
  v5[103] = sub_2478B6C50();
  sub_247767D7C((unint64_t *)&qword_2576C1898, v6, MEMORY[0x24BEAEFD8]);
  v5[104] = sub_2478B7010();
  v5[105] = v7;
  return swift_task_switch();
}

uint64_t sub_24775BF74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _OWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t (*v25)(uint64_t);
  uint64_t v26;
  uint64_t v27;
  uint64_t (*v28)(uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  OUTLINED_FUNCTION_49();
  v17 = v16[101];
  v16[106] = *(_QWORD *)(v16[100] + 16);
  sub_2478B71B4();
  v16[107] = *(_QWORD *)(*(_QWORD *)v17 + 144);
  OUTLINED_FUNCTION_7_0();
  v18 = OUTLINED_FUNCTION_87();
  sub_247755DF4(v18, v19, v20, v21);
  OUTLINED_FUNCTION_34_0();
  if (!v16[29])
  {
    v23 = v16[99];
    sub_247767F74((uint64_t)(v16 + 24), (uint64_t)&qword_2576C1A68, (uint64_t)sub_247757FF4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_247763890);
    OUTLINED_FUNCTION_117();
    OUTLINED_FUNCTION_169();
    v24 = OUTLINED_FUNCTION_143();
    v16[108] = v25(v24);
    sub_2478B6DA0();
    v16[94] = v23;
    v16[109] = swift_getExtendedExistentialTypeMetadata();
    v26 = OUTLINED_FUNCTION_229();
    OUTLINED_FUNCTION_20();
    v16[95] = v26;
    OUTLINED_FUNCTION_172();
  }
  v22 = v16[97];
  OUTLINED_FUNCTION_253((uint64_t)(v16 + 24));
  OUTLINED_FUNCTION_117();
  swift_release();
  sub_24776803C((uint64_t)(v16 + 12), (uint64_t)(v16 + 18));
  sub_24776803C((uint64_t)(v16 + 18), v22);
  OUTLINED_FUNCTION_174();
  return v28(v27, v28, v29, v30, v31, v32, v33, v34, a9, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_24775C2BC()
{
  __int128 *v0;
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_89();
  OUTLINED_FUNCTION_134(v0);
  v3 = v1[58];
  __swift_project_boxed_opaque_existential_1(v2, v1[57]);
  OUTLINED_FUNCTION_104(*(_QWORD *)(v3 + 40));
  v4 = (_QWORD *)swift_task_alloc();
  v1[113] = (uint64_t)v4;
  OUTLINED_FUNCTION_153(v4, (uint64_t)sub_24775C32C);
  OUTLINED_FUNCTION_174();
  return v10(v5, v6, v7, v8, v9);
}

uint64_t sub_24775C32C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *v1;
  OUTLINED_FUNCTION_208();
  *(_QWORD *)(v2 + 912) = v3;
  *(_QWORD *)(v2 + 920) = v0;
  OUTLINED_FUNCTION_256();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_20();
    v4 = OUTLINED_FUNCTION_10();
    OUTLINED_FUNCTION_257(v4, v5);
  }
  return swift_task_switch();
}

uint64_t sub_24775C3CC()
{
  uint64_t v0;
  uint64_t v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  char v11;
  char *v12;
  int64_t v13;
  char v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v17;
  _BOOL8 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t *v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  _QWORD *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;
  _QWORD *v45;
  char **v47;
  uint64_t *v48;
  __int128 v49;
  uint64_t v50;
  _QWORD *v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v47 = (char **)(v0 + 768);
  v1 = *(_QWORD *)(v0 + 912);
  v2 = *(_QWORD *)(v1 + 16);
  v3 = MEMORY[0x24BEE4AF8];
  if (v2)
  {
    v53 = v0 + 16;
    *(_QWORD *)(v0 + 744) = MEMORY[0x24BEE4AF8];
    v48 = (uint64_t *)(v0 + 744);
    sub_247791C50(0, v2, 0);
    v4 = v1 + 32;
    v51 = (_QWORD *)(v0 + 56);
    do
    {
      sub_247767BA0(v4, v53, (void (*)(_QWORD))sub_2477580E0);
      v5 = *(_QWORD *)(v0 + 80);
      v6 = *(_QWORD *)(v0 + 88);
      __swift_project_boxed_opaque_existential_1(v51, v5);
      (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v5, v6);
      v7 = OUTLINED_FUNCTION_157();
      sub_2477638D8(v7, v8);
      v9 = *(_QWORD *)(v0 + 688);
      v10 = *(_QWORD *)(v0 + 696);
      v11 = *(_BYTE *)(v0 + 704);
      v3 = *(_QWORD *)(v0 + 744);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v12 = (char *)OUTLINED_FUNCTION_115();
        sub_247791C50(v12, v13, v14);
        v3 = *v48;
      }
      v16 = *(_QWORD *)(v3 + 16);
      v15 = *(_QWORD *)(v3 + 24);
      if (v16 >= v15 >> 1)
      {
        v18 = OUTLINED_FUNCTION_140(v15);
        sub_247791C50((char *)v18, v16 + 1, 1);
        v3 = *v48;
      }
      *(_QWORD *)(v3 + 16) = v16 + 1;
      v17 = v3 + 24 * v16;
      *(_QWORD *)(v17 + 32) = v9;
      *(_QWORD *)(v17 + 40) = v10;
      *(_BYTE *)(v17 + 48) = v11;
      v4 += 80;
      --v2;
      v0 = v55;
    }
    while (v2);
  }
  v19 = *(_QWORD *)(v0 + 920);
  *(_QWORD *)(v0 + 768) = v3;
  OUTLINED_FUNCTION_197();
  sub_24776208C(v47);
  v20 = *(_QWORD *)(v0 + 768);
  if (v19)
  {
    OUTLINED_FUNCTION_194();
    return swift_release();
  }
  else
  {
    v54 = v0 + 512;
    if (*(_QWORD *)(v20 + 16))
    {
      v22 = *(_QWORD *)(v20 + 32);
      v23 = *(_QWORD *)(v20 + 40);
      v24 = *(_BYTE *)(v20 + 48);
      sub_247763A00(v22, v23, v24);
    }
    else
    {
      v24 = 0;
      v23 = 0x80000002478D0A20;
      v22 = 0xD000000000000011;
    }
    v25 = *(_BYTE *)(v55 + 657);
    v26 = *(_QWORD *)(v55 + 896);
    v27 = *(_QWORD *)(v55 + 888);
    swift_release();
    OUTLINED_FUNCTION_89();
    *(_QWORD *)(v55 + 640) = v22;
    *(_QWORD *)(v55 + 648) = v23;
    *(_BYTE *)(v55 + 656) = v24;
    *(_QWORD *)(v55 + 664) = v27;
    *(_QWORD *)(v55 + 672) = v26;
    *(_BYTE *)(v55 + 680) = v25;
    static FacetAvailability.< infix(_:_:)();
    if ((v28 & 1) != 0)
    {
      v52 = v24;
      v29 = (uint64_t *)(v55 + 912);
      v30 = *(_BYTE *)(v55 + 657);
      swift_bridgeObjectRelease();
      v31 = OUTLINED_FUNCTION_143();
      sub_247763BE8(v31, v32, v30);
      v49 = *(_OWORD *)(v55 + 456);
      v33 = *(_QWORD *)(v55 + 456);
      v34 = (_QWORD *)(v0 + 432);
      v35 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 432), v33);
      *(_OWORD *)(v55 + 496) = v49;
      __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v55 + 472));
      OUTLINED_FUNCTION_239(v36, (uint64_t)v35, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16));
      sub_24776800C(v54, (unint64_t *)&qword_2576C1A38);
      sub_24776803C(v55 + 472, v54);
      v37 = v22;
    }
    else
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_257(v22, v23);
      v52 = *(_BYTE *)(v55 + 657);
      v23 = *(_QWORD *)(v55 + 896);
      v29 = (uint64_t *)(v55 + 880);
      v37 = *(_QWORD *)(v55 + 888);
      v34 = (_QWORD *)(v0 + 432);
    }
    v38 = *v29;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    v39 = *(_QWORD *)(v55 + 760);
    v40 = OUTLINED_FUNCTION_143();
    if (v39 == MEMORY[0x2495829A8](v40))
    {
      v50 = *(_QWORD *)(v55 + 776);
      swift_bridgeObjectRelease();
      sub_247763BE8(v37, v23, v52);
      OUTLINED_FUNCTION_88();
      sub_247767FA8(v54, v55 + 384);
      *(_QWORD *)(v55 + 424) = v38;
      sub_2478B6DA0();
      sub_2478B71B4();
      v41 = *(_QWORD *)(v55 + 728);
      v42 = *(_QWORD *)(v55 + 736);
      sub_247767FA8(v55 + 384, v55 + 288);
      *(_QWORD *)(v55 + 328) = v38;
      sub_24776803C(v55 + 288, v55 + 240);
      *(_QWORD *)(v55 + 280) = v38;
      OUTLINED_FUNCTION_7_0();
      sub_247756418(v55 + 240, v41, v42);
      swift_endAccess();
      sub_24776800C(v54, (unint64_t *)&qword_2576C1A38);
      OUTLINED_FUNCTION_253(v55 + 384);
      sub_24776803C(v55 + 336, v50);
      OUTLINED_FUNCTION_194();
      __asm { BR              X1 }
    }
    *(_BYTE *)(v55 + 657) = v52;
    *(_QWORD *)(v55 + 896) = v23;
    *(_QWORD *)(v55 + 888) = v37;
    *(_QWORD *)(v55 + 880) = v38;
    OUTLINED_FUNCTION_242();
    OUTLINED_FUNCTION_108();
    if ((v23 & 1) != 0)
    {
      sub_2477680F0(*(_QWORD *)(v55 + 864) + 40 * v39 + 32, v55 + 552);
      sub_2478B6DA0();
      OUTLINED_FUNCTION_244();
      MEMORY[0x2495829B4]();
      OUTLINED_FUNCTION_20();
      sub_24775B884((__int128 *)(v55 + 552), (uint64_t)v34);
      v44 = *(_QWORD *)(v55 + 464);
      __swift_project_boxed_opaque_existential_1(v34, *(_QWORD *)(v55 + 456));
      OUTLINED_FUNCTION_104(*(_QWORD *)(v44 + 40));
      v45 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v55 + 904) = v45;
      OUTLINED_FUNCTION_153(v45, (uint64_t)sub_24775C32C);
      OUTLINED_FUNCTION_194();
      __asm { BR              X5 }
    }
    OUTLINED_FUNCTION_244();
    result = sub_2478B71CC();
    __break(1u);
  }
  return result;
}

uint64_t sub_24775C900()
{
  uint64_t v0;

  swift_release();
  sub_24776800C(v0 + 512, (unint64_t *)&qword_2576C1A38);
  OUTLINED_FUNCTION_114();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24775C960@<X0>(char *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t result;
  char *v7;

  v7 = a1;
  sub_2478B6DA0();
  sub_24776208C(&v7);
  if (*((_QWORD *)v7 + 2))
  {
    v4 = *((_QWORD *)v7 + 4);
    v3 = *((_QWORD *)v7 + 5);
    v5 = v7[48];
    sub_247763A00(v4, v3, v5);
  }
  else
  {
    v5 = 0;
    v3 = 0x80000002478D0A20;
    v4 = 0xD000000000000011;
  }
  result = swift_release();
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v3;
  *(_BYTE *)(a2 + 16) = v5;
  return result;
}

void Collection<>.worst.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  char v5;

  v4 = OUTLINED_FUNCTION_225();
  if (*(_QWORD *)(v4 + 16))
  {
    v2 = *(_QWORD *)(v4 + 32);
    v1 = *(_QWORD *)(v4 + 40);
    v5 = *(_BYTE *)(v4 + 48);
    OUTLINED_FUNCTION_191();
  }
  else
  {
    v5 = 0;
    OUTLINED_FUNCTION_235();
  }
  OUTLINED_FUNCTION_30();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v1;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_130();
}

uint64_t sub_24775CA7C(_QWORD *a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  _OWORD v5[2];
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2478B71B4();
  v2 = (uint64_t *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 144));
  swift_beginAccess();
  sub_247755DF4(v7, v8, *v2, v5);
  swift_bridgeObjectRelease();
  v3 = v6;
  if (v6)
    sub_2478B6DA0();
  sub_247767F74((uint64_t)v5, (uint64_t)&qword_2576C1A68, (uint64_t)sub_247757FF4, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_247763890);
  swift_endAccess();
  return v3;
}

BOOL sub_24775CB44(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 < a1;
}

uint64_t sub_24775CB54()
{
  char v0;

  static FacetAvailability.< infix(_:_:)();
  return v0 & 1;
}

uint64_t sub_24775CB8C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[80];
  _BYTE __src[80];
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_247791C34(0, v1, 0);
    v4 = a1 + 32;
    do
    {
      sub_247767BA0(v4, (uint64_t)v8, (void (*)(_QWORD))sub_247767BDC);
      sub_247767BDC();
      sub_2477580E0();
      swift_dynamicCast();
      v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247791C34(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_247791C34((_QWORD *)(v5 > 1), v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      memcpy((void *)(v2 + 80 * v6 + 32), __src, 0x50uLL);
      v4 += 80;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24775CCC4(uint64_t a1)
{
  unint64_t *v1;
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  int64_t v7;
  char v8;
  unint64_t v9;
  unint64_t v10;
  _BYTE v12[40];
  __int128 v13;
  uint64_t v14;

  v3 = *(_QWORD *)(a1 + 16);
  v4 = MEMORY[0x24BEE4AF8];
  if (v3)
  {
    OUTLINED_FUNCTION_110();
    v14 = v4;
    sub_247791DC4(0, v3, 0);
    v5 = v2 + 32;
    do
    {
      sub_2477680F0(v5, (uint64_t)v12);
      sub_247758170(0, v1);
      OUTLINED_FUNCTION_217(0, &qword_2576C1AD8);
      swift_dynamicCast();
      v4 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        v6 = (_QWORD *)OUTLINED_FUNCTION_115();
        sub_247791DC4(v6, v7, v8);
        v4 = v14;
      }
      v10 = *(_QWORD *)(v4 + 16);
      v9 = *(_QWORD *)(v4 + 24);
      if (v10 >= v9 >> 1)
      {
        sub_247791DC4((_QWORD *)(v9 > 1), v10 + 1, 1);
        v4 = v14;
      }
      *(_QWORD *)(v4 + 16) = v10 + 1;
      sub_24775B884(&v13, v4 + 40 * v10 + 32);
      v5 += 40;
      --v3;
    }
    while (v3);
  }
  return v4;
}

uint64_t sub_24775CE0C(uint64_t a1)
{
  int64_t v1;
  uint64_t v2;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  _BYTE v8[40];
  __int128 v9;
  uint64_t v10;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x24BEE4AF8];
  if (v1)
  {
    v10 = MEMORY[0x24BEE4AF8];
    sub_247791D90(0, v1, 0);
    v4 = a1 + 32;
    do
    {
      sub_2477680F0(v4, (uint64_t)v8);
      sub_247758170(0, &qword_2576C1AD8);
      sub_247758170(0, &qword_2576C1AF8);
      swift_dynamicCast();
      v2 = v10;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_247791D90(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v10;
      }
      v6 = *(_QWORD *)(v2 + 16);
      v5 = *(_QWORD *)(v2 + 24);
      if (v6 >= v5 >> 1)
      {
        sub_247791D90((_QWORD *)(v5 > 1), v6 + 1, 1);
        v2 = v10;
      }
      *(_QWORD *)(v2 + 16) = v6 + 1;
      sub_24775B884(&v9, v2 + 40 * v6 + 32);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_24775CF6C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t);
  uint64_t v7;
  uint64_t v8;

  v3[29] = a2;
  v3[30] = a3;
  v3[28] = a1;
  sub_247767DF8();
  v3[31] = v4;
  v3[32] = *(_QWORD *)(v4 - 8);
  v3[33] = swift_task_alloc();
  sub_247763890(0, &qword_2576C1E88, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
  v3[34] = swift_task_alloc();
  v3[35] = swift_task_alloc();
  v5 = sub_2478B6C5C();
  v6 = (uint64_t (*)(uint64_t))MEMORY[0x24BEAEFD0];
  v3[36] = v5;
  v3[37] = sub_2478B6C50();
  sub_247767D7C((unint64_t *)&qword_2576C1898, v6, MEMORY[0x24BEAEFD8]);
  v3[38] = v7;
  v3[39] = sub_2478B7010();
  v3[40] = v8;
  return swift_task_switch();
}

uint64_t sub_24775D078()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;

  OUTLINED_FUNCTION_49();
  v1 = (uint64_t *)(*(_QWORD *)(v0 + 240) + *(_QWORD *)(**(_QWORD **)(v0 + 240) + 128));
  v2 = OUTLINED_FUNCTION_7_0();
  v3 = *v1;
  v4 = *(_QWORD *)(v3 + 16);
  if (v4)
  {
    v5 = v3 + 32;
    v6 = sub_2478B7028();
    sub_2478B6DA0();
    do
    {
      v8 = *(_QWORD *)(v0 + 272);
      v7 = *(_QWORD *)(v0 + 280);
      __swift_storeEnumTagSinglePayload(v7, 1, 1, v6);
      OUTLINED_FUNCTION_192(v5);
      v9 = OUTLINED_FUNCTION_118();
      *(_QWORD *)(v9 + 16) = 0;
      *(_QWORD *)(v9 + 24) = 0;
      sub_24775B884((__int128 *)(v0 + 56), v9 + 32);
      sub_247767F18(v7, v8);
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v8, 1, v6);
      v11 = *(_QWORD *)(v0 + 272);
      if (EnumTagSinglePayload == 1)
      {
        sub_247767F74(*(_QWORD *)(v0 + 272), (uint64_t)&qword_2576C1E88, (uint64_t)MEMORY[0x24BEE6990], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_247763890);
      }
      else
      {
        sub_2478B701C();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v11, v6);
      }
      if (*(_QWORD *)(v9 + 16))
      {
        swift_getObjectType();
        swift_unknownObjectRetain();
        v12 = sub_2478B7010();
        v14 = v13;
        swift_unknownObjectRelease();
      }
      else
      {
        v12 = 0;
        v14 = 0;
      }
      v15 = **(_QWORD **)(v0 + 232);
      sub_247758170(0, &qword_2576C1AF8);
      v16 = v14 | v12;
      if (v14 | v12)
      {
        v16 = v0 + 136;
        *(_QWORD *)(v0 + 136) = 0;
        *(_QWORD *)(v0 + 144) = 0;
        *(_QWORD *)(v0 + 152) = v12;
        *(_QWORD *)(v0 + 160) = v14;
      }
      v17 = *(_QWORD *)(v0 + 280);
      *(_QWORD *)(v0 + 192) = 1;
      *(_QWORD *)(v0 + 200) = v16;
      *(_QWORD *)(v0 + 208) = v15;
      swift_task_create();
      swift_release();
      sub_247767F74(v17, (uint64_t)&qword_2576C1E88, (uint64_t)MEMORY[0x24BEE6990], (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_247763890);
      v5 += 40;
      --v4;
    }
    while (v4);
    v2 = swift_bridgeObjectRelease();
  }
  v18 = OUTLINED_FUNCTION_206(v2, &qword_2576C1AF8);
  OUTLINED_FUNCTION_206(v18, (unint64_t *)&qword_25444CC38);
  OUTLINED_FUNCTION_198();
  sub_2478B7040();
  *(_QWORD *)(v0 + 328) = sub_2478B6C50();
  v19 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 336) = v19;
  *v19 = v0;
  v19[1] = sub_24775D350;
  OUTLINED_FUNCTION_174();
  return sub_2478B704C();
}

uint64_t sub_24775D350()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_41(v2);
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88();
  }
  else
  {
    *(_QWORD *)(v0 + 344) = MEMORY[0x24BEE4AF8];
    swift_release();
  }
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775D3C4()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  _QWORD *v7;
  uint64_t (*v8)(void);
  uint64_t v9;
  uint64_t v10;

  OUTLINED_FUNCTION_111();
  v1 = *(_QWORD *)(v0 + 344);
  if (*(_QWORD *)(v0 + 120))
  {
    sub_24775B884((__int128 *)(v0 + 96), v0 + 16);
    v2 = OUTLINED_FUNCTION_200();
    v3 = *(_QWORD *)(v0 + 344);
    if ((v2 & 1) == 0)
    {
      OUTLINED_FUNCTION_115();
      sub_247761C30();
      v3 = v9;
    }
    v4 = *(_QWORD *)(v3 + 16);
    if (v4 >= *(_QWORD *)(v3 + 24) >> 1)
    {
      sub_247761C30();
      v3 = v10;
    }
    *(_QWORD *)(v0 + 352) = v3;
    *(_QWORD *)(v3 + 16) = v4 + 1;
    sub_24775B884((__int128 *)(v0 + 16), v3 + 40 * v4 + 32);
    *(_QWORD *)(v0 + 360) = sub_2478B6C50();
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 368) = v5;
    *v5 = v0;
    v5[1] = sub_24775D55C;
    return sub_2478B704C();
  }
  else
  {
    v7 = *(_QWORD **)(v0 + 224);
    (*(void (**)(_QWORD, _QWORD))(*(_QWORD *)(v0 + 256) + 8))(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 248));
    OUTLINED_FUNCTION_88();
    *v7 = v1;
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_213();
    v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_57(v8);
  }
}

uint64_t sub_24775D55C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_41(v2);
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88();
  }
  else
  {
    *(_QWORD *)(v0 + 344) = *(_QWORD *)(v0 + 352);
    swift_release();
  }
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775D5C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 256);
  v2 = *(_QWORD *)(v0 + 264);
  v3 = *(_QWORD *)(v0 + 248);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v2, v3);
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_71(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775D61C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a4;
  return swift_task_switch();
}

uint64_t sub_24775D634()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v8)(void);

  v1 = v0[2];
  sub_2477680F0(v0[3], v1);
  v2 = *(_QWORD *)(v1 + 24);
  v3 = *(_QWORD *)(v1 + 32);
  v4 = OUTLINED_FUNCTION_87();
  __swift_mutable_project_boxed_opaque_existential_1(v4, v5);
  v6 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  v0[4] = v6;
  *v6 = v0;
  v6[1] = sub_24775D698;
  return OUTLINED_FUNCTION_82(v2, v3, v8);
}

uint64_t sub_24775D698()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v2 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24775D6E4()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(*(_QWORD *)(v0 + 16));
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FacetBuildingPlan.deinit()
{
  uint64_t v0;

  OUTLINED_FUNCTION_122(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8));
  swift_release();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  return v0;
}

uint64_t FacetBuildingPlan.__deallocating_deinit()
{
  FacetBuildingPlan.deinit();
  return swift_deallocClassInstance();
}

uint64_t FacetBuilder.id.getter()
{
  sub_2478B6DA0();
  return OUTLINED_FUNCTION_10();
}

uint64_t FacetBuilder.facet.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_62(a1, a2);
}

uint64_t FacetBuilder.facet.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_63(a2, a1);
}

uint64_t (*FacetBuilder.facet.modify())()
{
  return nullsub_1;
}

void FacetBuilder.init<A>(facet:elements:transform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t TupleTypeMetadata;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  uint64_t v53;
  _QWORD *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t (*v58)();
  void (*v59)(char *, uint64_t, uint64_t);
  uint64_t v60;
  uint64_t v61;
  uint64_t (**v62)();
  uint64_t (*v63)(uint64_t);
  uint64_t (**v64)(uint64_t);
  _QWORD v65[2];
  uint64_t v66;
  uint64_t v67;
  void (*v68)(char *, uint64_t, uint64_t);
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;

  OUTLINED_FUNCTION_204();
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v69 = v27;
  v70 = v28;
  v30 = v29;
  v32 = v31;
  v73 = a21;
  v34 = v33;
  v35 = (uint64_t *)(v33 & 0xFFFFFFFFFFFFFFFELL);
  v36 = *(_QWORD *)(v23 - 8);
  MEMORY[0x24BDAC7A8](v29);
  v71 = v37;
  v72 = (char *)v65 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = type metadata accessor for FacetBuilder(0, v39, v40, v38);
  v42 = (char *)v32 + *(int *)(v41 + 36);
  v68 = *(void (**)(char *, uint64_t, uint64_t))(v36 + 16);
  v68(v42, v30, v24);
  sub_2478B71B4();
  v76 = v74;
  v77 = v75;
  v43 = OUTLINED_FUNCTION_238();
  if (v26 == 1)
  {
    TupleTypeMetadata = *v35;
  }
  else
  {
    MEMORY[0x24BDAC7A8](v43);
    OUTLINED_FUNCTION_201();
    if (v26)
    {
      v47 = (_QWORD *)(v46 - v45);
      v48 = v26;
      do
      {
        v49 = *v35++;
        *v47++ = v49;
        --v48;
      }
      while (v48);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
  }
  v74 = TupleTypeMetadata;
  swift_getMetatypeMetadata();
  sub_2478B6E6C();
  sub_2478B6EA8();
  OUTLINED_FUNCTION_89();
  v50 = v77;
  *v32 = v76;
  v32[1] = v50;
  v51 = (_QWORD *)OUTLINED_FUNCTION_118();
  v51[4] = OUTLINED_FUNCTION_171((uint64_t)v51);
  v51[5] = v22;
  v52 = OUTLINED_FUNCTION_246();
  v53 = v69;
  v51[6] = v52;
  v51[7] = v53;
  v51[8] = v70;
  v66 = v41;
  v67 = v30;
  v54 = (uint64_t *)((char *)v32 + *(int *)(v41 + 40));
  *v54 = &unk_2576C1B48;
  v54[1] = v51;
  v55 = v72;
  v68(v72, v30, v24);
  v56 = *(unsigned __int8 *)(v36 + 80);
  v65[1] = v34;
  v70 = v36;
  v57 = (v56 + 56) & ~v56;
  v71 = v56 | 7;
  v58 = (uint64_t (*)())swift_allocObject();
  *((_QWORD *)v58 + 4) = OUTLINED_FUNCTION_171((uint64_t)v58);
  *((_QWORD *)v58 + 5) = v22;
  *((_QWORD *)v58 + 6) = OUTLINED_FUNCTION_246();
  v59 = *(void (**)(char *, uint64_t, uint64_t))(v70 + 32);
  OUTLINED_FUNCTION_243((uint64_t)v58 + v57);
  v61 = v66;
  v60 = v67;
  v62 = (uint64_t (**)())((char *)v32 + *(int *)(v66 + 44));
  *v62 = sub_247763ADC;
  v62[1] = v58;
  v59(v55, v60, v24);
  v63 = (uint64_t (*)(uint64_t))swift_allocObject();
  *((_QWORD *)v63 + 2) = v26;
  *((_QWORD *)v63 + 3) = v24;
  *((_QWORD *)v63 + 4) = swift_allocateMetadataPack();
  *((_QWORD *)v63 + 5) = v22;
  *((_QWORD *)v63 + 6) = OUTLINED_FUNCTION_246();
  OUTLINED_FUNCTION_243((uint64_t)v63 + v57);
  v64 = (uint64_t (**)(uint64_t))((char *)v32 + *(int *)(v61 + 48));
  *v64 = sub_247763B58;
  v64[1] = v63;
  OUTLINED_FUNCTION_112();
}

uint64_t sub_24775DA98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  unint64_t v9;
  uint64_t AssociatedTypeWitness;
  unint64_t v11;
  uint64_t v13;
  unint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t (*v17)(uint64_t);
  uint64_t v18;
  uint64_t v20;

  v8[10] = a8;
  v8[11] = v20;
  v8[8] = a6;
  v8[9] = a7;
  v8[6] = a4;
  v8[7] = a5;
  v8[4] = a2;
  v8[5] = a3;
  v8[3] = a1;
  v9 = a7 & 0xFFFFFFFFFFFFFFFELL;
  if (a5 == 1)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v11 = 16;
  }
  else
  {
    v11 = (8 * a5 + 15) & 0xFFFFFFFFFFFFFFF0;
    v13 = swift_task_alloc();
    if (a5)
    {
      v14 = v20 & 0xFFFFFFFFFFFFFFFELL;
      v15 = (uint64_t *)v13;
      v16 = a5;
      do
      {
        v9 += 8;
        v14 += 8;
        *v15++ = swift_getAssociatedTypeWitness();
        --v16;
      }
      while (v16);
    }
    AssociatedTypeWitness = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v8[12] = v11;
  v8[13] = AssociatedTypeWitness;
  v8[14] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8[15] = swift_task_alloc();
  sub_2478B6C5C();
  v17 = (uint64_t (*)(uint64_t))MEMORY[0x24BEAEFD0];
  v8[16] = sub_2478B6C50();
  sub_247767D7C((unint64_t *)&qword_2576C1898, v17, MEMORY[0x24BEAEFD8]);
  v8[17] = sub_2478B7010();
  v8[18] = v18;
  return swift_task_switch();
}

uint64_t sub_24775DC34()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t (*v9)(_QWORD, uint64_t);
  _QWORD *v10;
  uint64_t (*v12)(_QWORD, uint64_t);

  v0[2] = 0;
  v1 = v0[7];
  v2 = swift_task_alloc();
  v0[19] = v2;
  if (v1)
  {
    v3 = 0;
    v4 = v0[9] & 0xFFFFFFFFFFFFFFFELL;
    v5 = 32;
    do
    {
      v6 = v0[7];
      if (v6 == 1)
        v7 = 0;
      else
        v7 = *(_DWORD *)(v0[13] + v5);
      v8 = v0[15] + v7;
      sub_24775DE24(*(_QWORD *)(v4 + 8 * v3), v0[4], v0 + 2);
      *(_QWORD *)(v2 + 8 * v3++) = v8;
      v5 += 16;
    }
    while (v3 != v6);
  }
  OUTLINED_FUNCTION_104(v0[5]);
  v12 = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v0[20] = v10;
  *v10 = v0;
  v10[1] = sub_24775DD48;
  return v12(v0[3], v2);
}

uint64_t sub_24775DD48()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_25_0();
  if (!v1)
    OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 112));
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775DD94()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v0);
}

uint64_t sub_24775DDCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 112);
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775DE24(uint64_t a1, uint64_t a2, unint64_t *a3)
{
  uint64_t result;
  unint64_t v6;
  _BYTE v7[32];

  result = swift_beginAccess();
  v6 = *a3;
  if ((*a3 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_6;
  }
  if (v6 >= *(_QWORD *)(a2 + 16))
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_247758324(a2 + 32 * v6 + 32, (uint64_t)v7);
  swift_getAssociatedTypeWitness();
  swift_dynamicCast();
  result = swift_beginAccess();
  if (!__OFADD__(*a3, 1))
  {
    ++*a3;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_24775DF10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;

  v16 = MEMORY[0x24BEE4AF8];
  if (a2)
  {
    v12 = 0;
    v13 = a4 & 0xFFFFFFFFFFFFFFFELL;
    v14 = a6 & 0xFFFFFFFFFFFFFFFELL;
    do
    {
      sub_24775DFD4(*(_QWORD *)(v13 + 8 * v12), &v16, a1, a2, a3, a4, *(_QWORD *)(v13 + 8 * v12), a5, a6, *(_QWORD *)(v14 + 8 * v12));
      ++v12;
    }
    while (a2 != v12);
  }
  swift_beginAccess();
  return v16;
}

uint64_t sub_24775DFD4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v14 = ((uint64_t (*)(void))MEMORY[0x24BDAC7A8])();
  v16 = (char *)&v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = *(_QWORD *)(v17 - 8);
  v18 = MEMORY[0x24BDAC7A8](v14);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v22 = (char *)&v29 - v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v16, v24, v25);
  v30 = a10;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 48))(v16, a5, a8, a7, v30);
  swift_beginAccess();
  sub_24776196C();
  v26 = *(_QWORD *)(*a2 + 16);
  sub_247761A38(v26);
  v27 = v31;
  (*(void (**)(char *, char *, uint64_t))(v31 + 16))(v20, v22, a7);
  sub_24776375C(v26, (uint64_t)v20, a2, a7, v30, (uint64_t (*)(uint64_t *, uint64_t))sub_24775B884);
  return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v22, a7);
}

uint64_t sub_24775E190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v19;

  v19 = MEMORY[0x24BEE4AF8];
  if (a3)
  {
    v13 = 0;
    v14 = a5 & 0xFFFFFFFFFFFFFFFELL;
    v15 = a7 & 0xFFFFFFFFFFFFFFFELL;
    while (1)
    {
      sub_24775E278(*(_QWORD *)(v14 + 8 * v13), a1, a2, &v19, a3, a4, a5, *(_QWORD *)(v14 + 8 * v13), a6, a7, *(_QWORD *)(v15 + 8 * v13));
      if (v7)
        return swift_bridgeObjectRelease();
      if (a3 == ++v13)
        goto LABEL_5;
    }
  }
  else
  {
LABEL_5:
    swift_beginAccess();
    return v19;
  }
}

uint64_t sub_24775E278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  void (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  uint64_t v36;
  char *v37;
  uint64_t *v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  char v63;
  __int128 v64;
  __int128 v65;
  __int128 v66;
  uint64_t v67;
  __int128 v68;
  __int128 v69;
  __int128 v70;
  uint64_t v71;
  uint64_t v72;

  v47 = a7;
  v51 = a6;
  v44 = a4;
  v50 = a3;
  sub_247763900(0, &qword_2576C1AC8, MEMORY[0x24BEAF010]);
  v45 = v15;
  v16 = MEMORY[0x24BDAC7A8](v15);
  v46 = (char *)&v41 - v17;
  v43 = *(_QWORD *)(a8 - 8);
  v18 = MEMORY[0x24BDAC7A8](v16);
  v41 = (char *)&v41 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v18);
  v42 = (char *)&v41 - v20;
  v54 = sub_2478B7148();
  v52 = *(_QWORD *)(v54 - 8);
  v21 = MEMORY[0x24BDAC7A8](v54);
  v48 = (char *)&v41 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v21);
  v53 = (char *)&v41 - v23;
  v72 = a2;
  v24 = (_QWORD *)swift_allocObject();
  v24[2] = a5;
  v24[3] = a6;
  v24[4] = swift_allocateMetadataPack();
  v24[5] = a8;
  v24[6] = a9;
  v24[7] = swift_allocateWitnessTablePack();
  v24[8] = a11;
  sub_247767C88();
  sub_247767D7C(&qword_2576C1E78, (uint64_t (*)(uint64_t))sub_247767C88, MEMORY[0x24BEE25B0]);
  sub_2478B6DA0();
  sub_2478B72B0();
  swift_release();
  swift_bridgeObjectRelease();
  v64 = v68;
  v65 = v69;
  v66 = v70;
  v67 = v71;
  v55 = a5;
  v56 = v51;
  v57 = v47;
  v58 = a8;
  v59 = a9;
  v60 = a10;
  v47 = a11;
  v61 = a11;
  v62 = v50;
  sub_247763844(255, &qword_2576C1E68);
  sub_247767D38(&qword_2576C1E70, &qword_2576C1E68);
  v25 = v54;
  v26 = sub_2478B7238();
  v27 = MEMORY[0x24BEE2B40];
  MEMORY[0x24958320C](MEMORY[0x24BEE2B40], v26);
  v28 = sub_2478B7298();
  MEMORY[0x24958320C](MEMORY[0x24BEE2FF8], v28);
  v29 = sub_2478B7238();
  MEMORY[0x24958320C](v27, v29);
  v30 = v53;
  v31 = (uint64_t)v48;
  v32 = v49;
  sub_2478B6F14();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v52 + 16))(v31, v30, v25);
  if (__swift_getEnumTagSinglePayload(v31, 1, a8) == 1)
  {
    v33 = *(void (**)(uint64_t, uint64_t))(v52 + 8);
    v34 = v54;
    v33(v31, v54);
    sub_247761A80();
    sub_2478B6CA4();
    sub_2478B6C98();
    v63 = 7;
    sub_2478B6C68();
    sub_2478B6C98();
    sub_2478B6C8C();
    sub_2478B6C98();
    sub_2478B6C74();
    sub_2478B6C98();
    sub_247763900(0, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    sub_247763954();
    swift_allocError();
    sub_2478B6CB0();
    swift_willThrow();
    return ((uint64_t (*)(char *, uint64_t))v33)(v53, v34);
  }
  else
  {
    v51 = v32;
    v36 = v43;
    v37 = v42;
    (*(void (**)(char *, uint64_t, uint64_t))(v43 + 32))(v42, v31, a8);
    v38 = v44;
    swift_beginAccess();
    sub_24776196C();
    v39 = *(_QWORD *)(*v38 + 16);
    sub_247761A38(v39);
    v40 = (uint64_t)v41;
    (*(void (**)(char *, char *, uint64_t))(v36 + 16))(v41, v37, a8);
    sub_24776375C(v39, v40, v38, a8, v47, (uint64_t (*)(uint64_t *, uint64_t))sub_24775B884);
    (*(void (**)(char *, uint64_t))(v36 + 8))(v37, a8);
    return (*(uint64_t (**)(char *, uint64_t))(v52 + 8))(v53, v54);
  }
}

uint64_t sub_24775E900@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  int v5;
  _BYTE v7[40];

  sub_2477680F0(a1, (uint64_t)v7);
  sub_247758170(0, &qword_2576C1A58);
  v5 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v5 ^ 1u, 1, a2);
}

uint64_t FacetBuilder.addElements<A>(to:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = v2;
  v3[2] = a1;
  return OUTLINED_FUNCTION_107();
}

uint64_t sub_24775E988()
{
  _QWORD *v0;
  uint64_t v1;

  v0[5] = (*(uint64_t (**)(void))(v0[4] + *(int *)(v0[3] + 44)))();
  OUTLINED_FUNCTION_43();
  v0[6] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v1, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775EA04()
{
  uint64_t v0;

  swift_release();
  sub_24775BC98();
  OUTLINED_FUNCTION_34_0();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t FacetBuilder.availability<A>(in:)(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3[15] = a2;
  v3[16] = v2;
  v3[14] = a1;
  v3[17] = *a1;
  return OUTLINED_FUNCTION_107();
}

uint64_t sub_24775EA60()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v1 = v0[14];
  v2 = (_QWORD *)(v0[16] + *(int *)(v0[15] + 48));
  v0[18] = *v2;
  v0[19] = v2[1];
  v0[20] = *(_QWORD *)(*(_QWORD *)v1 + 120);
  OUTLINED_FUNCTION_43();
  v0[21] = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v3, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775EAF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[20];
  v2 = v0[14];
  swift_release();
  OUTLINED_FUNCTION_7_0();
  v0[22] = *(_QWORD *)(v2 + v1);
  sub_2478B6DA0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775EB4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;

  v1 = (*(uint64_t (**)(_QWORD))(v0 + 144))(*(_QWORD *)(v0 + 176));
  *(_QWORD *)(v0 + 184) = v1;
  swift_bridgeObjectRelease();
  *(_QWORD *)(v0 + 104) = MEMORY[0x24BEE4AF8];
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 192) = v2;
  if (v2)
  {
    *(_QWORD *)(v0 + 200) = 0;
    OUTLINED_FUNCTION_135(*(_QWORD *)(v0 + 184));
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v3;
    v4 = OUTLINED_FUNCTION_121(v3, (uint64_t)sub_24775EC84);
    return sub_24775EE04(v4, v5, v6, v7, v8, v9, v10);
  }
  else
  {
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_7_0();
    v12 = OUTLINED_FUNCTION_250();
    OUTLINED_FUNCTION_30();
    return (*(uint64_t (**)(uint64_t))(v0 + 8))(v12);
  }
}

uint64_t sub_24775EC84()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24775ECE0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v1 = *(_QWORD *)(v0 + 192);
  v2 = *(_QWORD *)(v0 + 200) + 1;
  OUTLINED_FUNCTION_16();
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_7_0();
    v3 = OUTLINED_FUNCTION_250();
    OUTLINED_FUNCTION_30();
    return OUTLINED_FUNCTION_59(v3, *(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v5 = *(_QWORD *)(v0 + 200) + 1;
    *(_QWORD *)(v0 + 200) = v5;
    OUTLINED_FUNCTION_135(*(_QWORD *)(v0 + 184) + 40 * v5);
    __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
    v6 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 208) = v6;
    v7 = OUTLINED_FUNCTION_121(v6, (uint64_t)sub_24775EC84);
    return sub_24775EE04(v7, v8, v9, v10, v11, v12, v13);
  }
}

uint64_t sub_24775EDD0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24775EE04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  uint64_t (*v18)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v19;

  v7[27] = a6;
  v7[28] = v19;
  v7[25] = a1;
  v7[26] = a3;
  v12 = type metadata accessor for FacetElementAvailability(0, a6, v19, a4);
  v7[29] = v12;
  v7[30] = *(_QWORD *)(v12 - 8);
  v13 = swift_task_alloc();
  v7[31] = v13;
  v7[32] = sub_2478B6C5C();
  v7[33] = sub_2478B6C50();
  v15 = a2 + *(int *)(type metadata accessor for FacetBuilder(0, a4, a7, v14) + 36);
  v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(v19 + 64)
                                                                            + *(_QWORD *)(v19 + 64));
  v16 = (_QWORD *)swift_task_alloc();
  v7[34] = v16;
  *v16 = v7;
  v16[1] = sub_24775EF18;
  return v18(v13, v15, a4, a7, a6);
}

uint64_t sub_24775EF18()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v1 + 280) = v0;
  swift_task_dealloc();
  sub_247767D7C((unint64_t *)&qword_2576C1898, (uint64_t (*)(uint64_t))MEMORY[0x24BEAEFD0], MEMORY[0x24BEAEFD8]);
  sub_2478B7010();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775EFA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t);
  uint64_t (*v8)(void);
  __int128 v10;

  OUTLINED_FUNCTION_85();
  v1 = *(_QWORD *)(v0 + 240);
  v2 = *(_QWORD *)(v0 + 232);
  v3 = *(uint64_t **)(v0 + 208);
  v10 = *(_OWORD *)(v0 + 216);
  swift_release();
  *(_OWORD *)(v0 + 120) = v10;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 96));
  (*(void (**)(void))(*(_QWORD *)(v10 - 8) + 16))();
  *(_QWORD *)(v0 + 160) = v2;
  *(_QWORD *)(v0 + 168) = MEMORY[0x24958320C](&protocol conformance descriptor for FacetElementAvailability<A>, v2);
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 136));
  (*(void (**)(void))(v1 + 16))();
  sub_24775B884((__int128 *)(v0 + 96), v0 + 16);
  sub_24775B884((__int128 *)(v0 + 136), v0 + 56);
  OUTLINED_FUNCTION_7_0();
  sub_2477619F0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_247761B14);
  v4 = *(_QWORD *)(*v3 + 16);
  sub_247761AD4(v4, (uint64_t (*)(BOOL))sub_247761B14);
  v5 = *v3;
  *(_QWORD *)(v5 + 16) = v4 + 1;
  memcpy((void *)(v5 + 80 * v4 + 32), (const void *)(v0 + 16), 0x50uLL);
  v6 = OUTLINED_FUNCTION_157();
  v7(v6);
  OUTLINED_FUNCTION_14_1();
  v8 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_20_1(v8);
}

uint64_t sub_24775F0CC()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t FacetBuilder.value<A>(in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  v4[75] = v3;
  v4[74] = a3;
  v4[73] = a2;
  v4[72] = a1;
  OUTLINED_FUNCTION_36(a1, &qword_2576C1AC8, MEMORY[0x24BEAF010]);
  v4[76] = v5;
  v4[77] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24775F15C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = *(_QWORD *)(v0 + 592);
  *(_DWORD *)(v0 + 556) = *(_DWORD *)(v1 + 36);
  v2 = *(_QWORD *)(v1 + 16);
  *(_QWORD *)(v0 + 624) = v2;
  *(_QWORD *)(v0 + 240) = v2;
  v3 = *(_QWORD *)(v1 + 24);
  *(_QWORD *)(v0 + 632) = v3;
  *(_QWORD *)(v0 + 248) = v3;
  __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)(v0 + 216));
  OUTLINED_FUNCTION_248(v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 16));
  OUTLINED_FUNCTION_43();
  *(_QWORD *)(v0 + 640) = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v5, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775F200()
{
  uint64_t v0;

  swift_release();
  *(_QWORD *)(v0 + 648) = sub_24775CA7C((_QWORD *)(v0 + 216));
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_0();
}

void sub_24775F248()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  __int128 *v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  _BOOL8 v12;
  int64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  _QWORD *v28;
  uint64_t v29;
  uint64_t v30;
  __int128 *v31;
  _OWORD *v32;
  _OWORD *v33;
  _QWORD *v34;

  v1 = *(_QWORD *)(v0 + 648);
  if (!v1)
  {
    sub_247761A80();
    OUTLINED_FUNCTION_32_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 553) = 9;
    OUTLINED_FUNCTION_56();
    OUTLINED_FUNCTION_31_0();
    sub_2478B6C74();
    v16 = OUTLINED_FUNCTION_21_1();
    OUTLINED_FUNCTION_36(v16, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_177();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_30_0();
    OUTLINED_FUNCTION_223();
    goto LABEL_16;
  }
  v2 = v0 + 96;
  v31 = (__int128 *)(v0 + 176);
  v33 = (_OWORD *)(v0 + 376);
  v34 = (_QWORD *)(v0 + 296);
  v32 = (_OWORD *)(v0 + 440);
  v3 = sub_247761D60(0, *(_QWORD *)(v1 + 16), 0, MEMORY[0x24BEE4AF8]);
  v4 = 0;
  v5 = *(_QWORD *)(v1 + 16);
  for (*(_QWORD *)(v0 + 656) = v5; ; v5 = *(_QWORD *)(v0 + 656))
  {
    *(_QWORD *)(v0 + 664) = v3;
    if (v4 == v5)
    {
      *(_OWORD *)(v0 + 64) = 0u;
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
    }
    else
    {
      v6 = *(_QWORD *)(v0 + 648);
      if (v4 >= *(_QWORD *)(v6 + 16))
      {
        __break(1u);
        return;
      }
      sub_247767BA0(v6 + 80 * v4 + 32, v0 + 16, (void (*)(_QWORD))sub_2477580E0);
      v5 = v4 + 1;
    }
    *(_QWORD *)(v0 + 672) = v5;
    sub_247763B8C(v0 + 16, v2);
    if (!*(_QWORD *)(v0 + 120))
    {
      OUTLINED_FUNCTION_166();
      OUTLINED_FUNCTION_129();
      v17 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 696) = v17;
      *v17 = v0;
      v17[1] = sub_24775FCBC;
      OUTLINED_FUNCTION_163();
      __asm { BR              X2 }
    }
    v7 = v2;
    v8 = (__int128 *)v2;
    v9 = (_QWORD *)(v0 + 256);
    OUTLINED_FUNCTION_210(v8);
    sub_24775B884((__int128 *)(v0 + 136), (uint64_t)v34);
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_54();
    if (!*(_BYTE *)(v0 + 552))
    {
      OUTLINED_FUNCTION_216();
      v19 = *(_QWORD *)(v0 + 544);
      v20 = *(_QWORD *)(v0 + 536);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247761A80();
      sub_2478B6CA4();
      OUTLINED_FUNCTION_29();
      *(_BYTE *)(v0 + 554) = 4;
      OUTLINED_FUNCTION_160();
      OUTLINED_FUNCTION_24_0();
      sub_2478B6C74();
      OUTLINED_FUNCTION_29();
      *(_QWORD *)(v0 + 560) = v20;
      *(_QWORD *)(v0 + 568) = v19;
      sub_2478B6C80();
      sub_247763BE8(v20, v19, 0);
      v21 = OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_36(v21, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
      sub_247763954();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_221();
      sub_2478B6CB0();
      OUTLINED_FUNCTION_223();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
LABEL_16:
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_163();
      __asm { BR              X0 }
    }
    OUTLINED_FUNCTION_170();
    OUTLINED_FUNCTION_54();
    if (!*(_QWORD *)(v0 + 432))
      break;
    sub_247757EF4((_OWORD *)(v0 + 408), v33);
    sub_247758324((uint64_t)v33, (uint64_t)v32);
    v11 = *(_QWORD *)(v3 + 16);
    v10 = *(_QWORD *)(v3 + 24);
    if (v11 >= v10 >> 1)
    {
      v12 = OUTLINED_FUNCTION_188(v10);
      v3 = sub_247761D60(v12, v13, v14, v15);
    }
    v2 = v7;
    *(_QWORD *)(v3 + 16) = v11 + 1;
    sub_247757EF4(v32, (_OWORD *)(v3 + 32 * v11 + 32));
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v33);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v34);
    __swift_destroy_boxed_opaque_existential_1(v0 + 256);
    v4 = *(_QWORD *)(v0 + 672);
  }
  sub_247767F74(v0 + 408, (uint64_t)&qword_2576C19F8, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_247767B5C);
  __swift_project_boxed_opaque_existential_1(v34, *(_QWORD *)(v0 + 320));
  OUTLINED_FUNCTION_92();
  if (*(_QWORD *)(v0 + 200))
  {
    OUTLINED_FUNCTION_210(v31);
    v23 = *(_QWORD *)(v0 + 280);
    v24 = __swift_project_boxed_opaque_existential_1(v9, v23);
    v25 = *(_QWORD *)(v0 + 360);
    v26 = __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 336), v25);
    v27 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 680) = v27;
    OUTLINED_FUNCTION_164(v27);
    sub_24775FD90(v0 + 504, (uint64_t)v24, (uint64_t)v26, v28, v29, v30, v23, v25);
  }
  else
  {
    sub_24776800C((uint64_t)v31, &qword_2576C1AF0);
    OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_163();
  }
}

uint64_t sub_24775F79C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 688) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_0();
}

void sub_24775F7F8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL8 v24;
  __int128 *v25;
  uint64_t v26;
  _QWORD *v27;
  _OWORD *v28;

  v27 = (_QWORD *)(v0 + 256);
  v28 = (_OWORD *)(v0 + 440);
  v1 = v0 + 472;
  v2 = *(_QWORD *)(v0 + 664);
  v26 = v0 + 504;
  sub_247758324(v0 + 504, v0 + 472);
  v4 = *(_QWORD *)(v2 + 16);
  v3 = *(_QWORD *)(v2 + 24);
  v5 = v4 + 1;
  v6 = *(_QWORD *)(v0 + 664);
  if (v4 >= v3 >> 1)
  {
LABEL_19:
    v24 = OUTLINED_FUNCTION_140(v3);
    v6 = OUTLINED_FUNCTION_240(v24, v5);
  }
  *(_QWORD *)(v6 + 16) = v5;
  sub_247757EF4((_OWORD *)v1, (_OWORD *)(v6 + 32 * v4 + 32));
  __swift_destroy_boxed_opaque_existential_1(v26);
  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  v4 = v0 + 256;
  while (1)
  {
    __swift_destroy_boxed_opaque_existential_1(v0 + 296);
    __swift_destroy_boxed_opaque_existential_1(v4);
    v1 = *(_QWORD *)(v0 + 672);
    *(_QWORD *)(v0 + 664) = v6;
    if (v1 == *(_QWORD *)(v0 + 656))
    {
      *(_OWORD *)(v0 + 64) = 0u;
      *(_OWORD *)(v0 + 80) = 0u;
      *(_OWORD *)(v0 + 32) = 0u;
      *(_OWORD *)(v0 + 48) = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
    }
    else
    {
      v3 = *(_QWORD *)(v0 + 648);
      if (v1 >= *(_QWORD *)(v3 + 16))
      {
        __break(1u);
        goto LABEL_19;
      }
      sub_247767BA0(v3 + 80 * v1++ + 32, v0 + 16, (void (*)(_QWORD))sub_2477580E0);
    }
    *(_QWORD *)(v0 + 672) = v1;
    sub_247763B8C(v0 + 16, v0 + 96);
    if (!*(_QWORD *)(v0 + 120))
    {
      OUTLINED_FUNCTION_166();
      OUTLINED_FUNCTION_129();
      v8 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 696) = v8;
      *v8 = v0;
      v8[1] = sub_24775FCBC;
      OUTLINED_FUNCTION_199();
      __asm { BR              X2 }
    }
    OUTLINED_FUNCTION_210((__int128 *)(v0 + 96));
    OUTLINED_FUNCTION_134((__int128 *)(v0 + 136));
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_54();
    if (!*(_BYTE *)(v0 + 552))
    {
      OUTLINED_FUNCTION_216();
      v10 = *(_QWORD *)(v0 + 544);
      v11 = *(_QWORD *)(v0 + 536);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_247761A80();
      sub_2478B6CA4();
      OUTLINED_FUNCTION_29();
      *(_BYTE *)(v0 + 554) = 4;
      OUTLINED_FUNCTION_160();
      OUTLINED_FUNCTION_24_0();
      OUTLINED_FUNCTION_211();
      sub_2478B6C74();
      OUTLINED_FUNCTION_29();
      *(_QWORD *)(v0 + 560) = v11;
      *(_QWORD *)(v0 + 568) = v10;
      sub_2478B6C80();
      sub_247763BE8(v11, v10, 0);
      v12 = OUTLINED_FUNCTION_29();
      OUTLINED_FUNCTION_36(v12, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
      sub_247763954();
      OUTLINED_FUNCTION_1();
      OUTLINED_FUNCTION_221();
      sub_2478B6CB0();
      swift_willThrow();
      __swift_destroy_boxed_opaque_existential_1(v0 + 296);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
      OUTLINED_FUNCTION_159();
      OUTLINED_FUNCTION_199();
      __asm { BR              X0 }
    }
    OUTLINED_FUNCTION_145();
    OUTLINED_FUNCTION_54();
    if (!*(_QWORD *)(v0 + 432))
      break;
    sub_247757EF4((_OWORD *)(v0 + 408), (_OWORD *)(v0 + 376));
    sub_247758324(v0 + 376, (uint64_t)v28);
    v5 = *(_QWORD *)(v6 + 16);
    v7 = *(_QWORD *)(v6 + 24);
    if (v5 >= v7 >> 1)
      v6 = OUTLINED_FUNCTION_240(v7 > 1, v5 + 1);
    v4 = v0 + 256;
    *(_QWORD *)(v6 + 16) = v5 + 1;
    sub_247757EF4(v28, (_OWORD *)(v6 + 32 * v5 + 32));
    __swift_destroy_boxed_opaque_existential_1(v0 + 376);
  }
  sub_247767F74(v0 + 408, (uint64_t)&qword_2576C19F8, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))sub_247767B5C);
  OUTLINED_FUNCTION_145();
  v25 = (__int128 *)(v0 + 176);
  OUTLINED_FUNCTION_92();
  if (*(_QWORD *)(v0 + 200))
  {
    OUTLINED_FUNCTION_134(v25);
    v14 = *(_QWORD *)(v0 + 280);
    v15 = __swift_project_boxed_opaque_existential_1(v27, v14);
    v16 = *(_QWORD *)(v0 + 360);
    v17 = (_QWORD *)OUTLINED_FUNCTION_241();
    v19 = __swift_project_boxed_opaque_existential_1(v17, v18);
    v20 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 680) = v20;
    OUTLINED_FUNCTION_164(v20);
    sub_24775FD90(v26, (uint64_t)v15, (uint64_t)v19, v21, v22, v23, v14, v16);
  }
  else
  {
    sub_24776800C((uint64_t)v25, &qword_2576C1AF0);
    OUTLINED_FUNCTION_131();
    OUTLINED_FUNCTION_154();
    OUTLINED_FUNCTION_199();
  }
}

uint64_t sub_24775FCBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 704) = v1;
  swift_task_dealloc();
  if (v1)
  {
    OUTLINED_FUNCTION_17_1();
    return OUTLINED_FUNCTION_2_0();
  }
  else
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_50();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_5_1(v4);
  }
}

uint64_t sub_24775FD1C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 336);
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_114();
  OUTLINED_FUNCTION_159();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775FD60()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_159();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24775FD90(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;

  *(_QWORD *)(v8 + 232) = v14;
  *(_OWORD *)(v8 + 216) = v13;
  *(_QWORD *)(v8 + 200) = a7;
  *(_QWORD *)(v8 + 208) = a8;
  *(_QWORD *)(v8 + 184) = a5;
  *(_QWORD *)(v8 + 192) = a6;
  *(_QWORD *)(v8 + 168) = a2;
  *(_QWORD *)(v8 + 176) = a4;
  *(_QWORD *)(v8 + 160) = a1;
  *(_QWORD *)(v8 + 240) = *a4;
  sub_247763900(0, &qword_2576C1AC8, MEMORY[0x24BEAF010]);
  *(_QWORD *)(v8 + 248) = v10;
  *(_QWORD *)(v8 + 256) = swift_task_alloc();
  *(_QWORD *)(v8 + 264) = *(_QWORD *)(a8 - 8);
  *(_QWORD *)(v8 + 272) = swift_task_alloc();
  v11 = sub_2478B7148();
  *(_QWORD *)(v8 + 280) = v11;
  *(_QWORD *)(v8 + 288) = *(_QWORD *)(v11 - 8);
  *(_QWORD *)(v8 + 296) = swift_task_alloc();
  *(_QWORD *)(v8 + 304) = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24775FE7C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 312) = *(_QWORD *)(**(_QWORD **)(v0 + 176) + 128);
  OUTLINED_FUNCTION_43();
  *(_QWORD *)(v0 + 320) = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_38((unint64_t *)&qword_2576C1898, v1, MEMORY[0x24BEAEFD8]);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24775FEF0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[39];
  v2 = v0[22];
  swift_release();
  OUTLINED_FUNCTION_7_0();
  v0[41] = *(_QWORD *)(v2 + v1);
  sub_2478B6DA0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

void sub_24775FF4C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  __int128 v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v1 = *(_QWORD *)(v0 + 232);
  v2 = *(_QWORD *)(v0 + 240);
  v4 = *(_QWORD *)(v0 + 216);
  v3 = *(_QWORD *)(v0 + 224);
  v5 = *(_QWORD *)(v0 + 200);
  v6 = *(_QWORD *)(v0 + 208);
  v7 = *(_QWORD *)(v0 + 192);
  v15 = v5;
  v16 = v7;
  v17 = *(_QWORD *)(v0 + 168);
  *(_QWORD *)(v0 + 152) = *(_QWORD *)(v0 + 328);
  v8 = (_QWORD *)OUTLINED_FUNCTION_118();
  v8[2] = v7;
  v9 = *(_QWORD *)(v2 + 80);
  v8[3] = v9;
  v8[4] = v5;
  v8[5] = v6;
  v8[6] = v4;
  v10 = v4;
  v11 = *(_QWORD *)(v2 + 88);
  v8[7] = v11;
  v8[8] = v3;
  v8[9] = v1;
  sub_247767A38();
  sub_247767D7C(&qword_2576C1E48, (uint64_t (*)(uint64_t))sub_247767A38, MEMORY[0x24BEE25B0]);
  sub_2478B72B0();
  swift_release();
  swift_bridgeObjectRelease();
  *(_OWORD *)(v0 + 72) = *(_OWORD *)(v0 + 16);
  v12 = *(_QWORD *)(v0 + 64);
  v13 = *(_OWORD *)(v0 + 48);
  *(_OWORD *)(v0 + 88) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v0 + 104) = v13;
  *(_QWORD *)(v0 + 120) = v12;
  v14 = (_QWORD *)swift_task_alloc();
  v14[2] = v16;
  v14[3] = v9;
  v14[4] = v15;
  v14[5] = v6;
  v14[6] = v10;
  v14[7] = v11;
  v14[8] = v3;
  v14[9] = v1;
  v14[10] = v17;
  sub_247763844(255, &qword_2576C1B38);
  sub_247767D38(&qword_2576C1E40, &qword_2576C1B38);
  sub_2478B7238();
  OUTLINED_FUNCTION_252();
}

void sub_247760118()
{
  sub_2478B7298();
  OUTLINED_FUNCTION_252();
}

void sub_247760138()
{
  sub_2478B7238();
  OUTLINED_FUNCTION_252();
}

uint64_t sub_247760158()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  int *v12;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  sub_2478B6F14();
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_239(v16, v14, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v15 + 16));
  if (__swift_getEnumTagSinglePayload(v16, 1, v1) != 1)
  {
    v7 = *(_QWORD *)(v0 + 216);
    v8 = *(_QWORD *)(v0 + 224);
    v9 = *(_QWORD *)(v0 + 192);
    v10 = *(uint64_t **)(v0 + 160);
    (*(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(v0 + 264) + 32))(*(_QWORD *)(v0 + 272), *(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 208));
    type metadata accessor for FacetBuilder(0, v9, v7, v11);
    v12 = *(int **)(v8 + 80);
    v10[3] = swift_getAssociatedTypeWitness();
    __swift_allocate_boxed_opaque_existential_1Tm(v10);
    v17 = (char *)v12 + *v12;
    v13 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 336) = v13;
    *v13 = v0;
    v13[1] = sub_2477603B8;
    *(_QWORD *)(v2 + 16) = *(_QWORD *)(v0 + 224);
    __asm { BR              X8 }
  }
  v3 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 288) + 8);
  ((void (*)(_QWORD, _QWORD))v3)(*(_QWORD *)(v0 + 296), *(_QWORD *)(v0 + 280));
  sub_247761A80();
  sub_2478B6CA4();
  sub_2478B6C98();
  *(_BYTE *)(v0 + 352) = 8;
  OUTLINED_FUNCTION_198();
  sub_2478B6C68();
  OUTLINED_FUNCTION_234();
  v4 = sub_2478B6C98();
  OUTLINED_FUNCTION_36(v4, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
  sub_247763954();
  OUTLINED_FUNCTION_1();
  OUTLINED_FUNCTION_221();
  OUTLINED_FUNCTION_211();
  sub_2478B6CB0();
  swift_willThrow();
  v5 = OUTLINED_FUNCTION_157();
  v3(v5);
  swift_task_dealloc();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2477603B8()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v1 + 344) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247760404()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = v0[36];
  (*(void (**)(_QWORD, _QWORD))(v0[33] + 8))(v0[34], v0[26]);
  OUTLINED_FUNCTION_138(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_213();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v2);
}

uint64_t sub_247760470()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);

  v1 = *(_QWORD *)(v0 + 160);
  OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 264));
  v2 = OUTLINED_FUNCTION_87();
  v3(v2);
  __swift_deallocate_boxed_opaque_existential_0(v1);
  swift_task_dealloc();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477604E8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X4>, uint64_t a3@<X8>)
{
  int v5;
  _BYTE v7[40];

  sub_2477680F0(a1, (uint64_t)v7);
  sub_247758170(0, &qword_2576C1AF8);
  v5 = swift_dynamicCast();
  return __swift_storeEnumTagSinglePayload(a3, v5 ^ 1u, 1, a2);
}

uint64_t sub_247760560(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_2477605BC;
  return FacetBuilder.addElements<A>(to:)(a1, a4);
}

uint64_t sub_2477605BC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477605E0(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 16) = v7;
  *v7 = v4;
  v7[1] = sub_24776063C;
  return FacetBuilder.availability<A>(in:)(a1, a4);
}

uint64_t sub_24776063C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_0();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_59(v4, *(uint64_t (**)(void))(v2 + 8));
}

uint64_t sub_247760670(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v9;

  v9 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v9;
  *v9 = v5;
  v9[1] = sub_2477605BC;
  return FacetBuilder.value<A>(in:)(a1, a2, a5);
}

void FacetElementAvailability.availability.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  char v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_119();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_68(v3, v4, v8);
  v5 = OUTLINED_FUNCTION_254();
  if (v5)
  {
    if (v5 == 1)
    {
      v6 = *(_BYTE *)(v1 + 16);
      *(_OWORD *)v0 = *(_OWORD *)v1;
      *(_BYTE *)(v0 + 16) = v6;
      __swift_destroy_boxed_opaque_existential_1(v1 + 24);
    }
    else
    {
      v7 = *(_QWORD *)(v1 + 8);
      *(_QWORD *)v0 = *(_QWORD *)v1;
      *(_QWORD *)(v0 + 8) = v7;
      *(_BYTE *)(v0 + 16) = 0;
    }
  }
  else
  {
    *(_OWORD *)v0 = xmmword_2478B8970;
    *(_BYTE *)(v0 + 16) = 3;
    OUTLINED_FUNCTION_76();
  }
  OUTLINED_FUNCTION_28();
}

void FacetElementAvailability.value.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int EnumCaseMultiPayload;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;

  OUTLINED_FUNCTION_119();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_201();
  v5 = v4 - v3;
  OUTLINED_FUNCTION_180(v4 - v3, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 16));
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      sub_247763BE8(*(_QWORD *)v5, *(_QWORD *)(v5 + 8), *(_BYTE *)(v5 + 16));
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
      __swift_destroy_boxed_opaque_existential_1(v5 + 24);
    }
    else
    {
      OUTLINED_FUNCTION_138(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
      *(_OWORD *)v0 = 0u;
      *(_OWORD *)(v0 + 16) = 0u;
    }
  }
  else
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    *(_QWORD *)(v0 + 24) = AssociatedTypeWitness;
    __swift_allocate_boxed_opaque_existential_1Tm((uint64_t *)v0);
    OUTLINED_FUNCTION_180(v9, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32));
  }
  OUTLINED_FUNCTION_28();
}

void FacetElementAvailability.request.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  OUTLINED_FUNCTION_119();
  MEMORY[0x24BDAC7A8](v2);
  OUTLINED_FUNCTION_68(v3, v4, v6);
  v5 = OUTLINED_FUNCTION_254();
  if (v5)
  {
    if (v5 == 1)
    {
      sub_247763BE8(*(_QWORD *)v1, *(_QWORD *)(v1 + 8), *(_BYTE *)(v1 + 16));
      sub_24775B884((__int128 *)(v1 + 24), v0);
    }
    else
    {
      OUTLINED_FUNCTION_76();
      OUTLINED_FUNCTION_169();
    }
  }
  else
  {
    OUTLINED_FUNCTION_169();
    OUTLINED_FUNCTION_76();
  }
  OUTLINED_FUNCTION_28();
}

void FacetElementRequest.split()(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;

  sub_247761760(a1, a1);
  v2 = *(_QWORD *)(a1 - 8);
  swift_allocObject();
  sub_2478B6F5C();
  OUTLINED_FUNCTION_248(v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 16));
  sub_2478B6FEC();
  OUTLINED_FUNCTION_28();
}

uint64_t sub_247760930()
{
  return sub_247760AA0() & 1;
}

void static FacetAvailability.< infix(_:_:)()
{
  OUTLINED_FUNCTION_258();
  __asm { BR              X9 }
}

void sub_247760978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  BOOL v7;

  if (v4)
  {
    sub_2478B6DA0();
    v5 = OUTLINED_FUNCTION_260();
    OUTLINED_FUNCTION_257(v5, v6);
    OUTLINED_FUNCTION_205();
  }
  else
  {
    v7 = v1 == v0 && v3 == v2;
    if (v7 || (OUTLINED_FUNCTION_113() & 1) != 0)
    {
      OUTLINED_FUNCTION_8_1();
    }
    else
    {
      sub_2478B734C();
      OUTLINED_FUNCTION_8_1();
    }
  }
  OUTLINED_FUNCTION_195();
}

void Collection<>.best.getter(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = OUTLINED_FUNCTION_225();
  v5 = *(_QWORD *)(v4 + 16);
  if (v5)
  {
    v6 = v4 + 24 * v5;
    v2 = *(_QWORD *)(v6 + 8);
    v1 = *(_QWORD *)(v6 + 16);
    v7 = *(_BYTE *)(v6 + 24);
    OUTLINED_FUNCTION_191();
  }
  else
  {
    v7 = 0;
    OUTLINED_FUNCTION_235();
  }
  OUTLINED_FUNCTION_30();
  *(_QWORD *)a1 = v2;
  *(_QWORD *)(a1 + 8) = v1;
  *(_BYTE *)(a1 + 16) = v7;
  OUTLINED_FUNCTION_130();
}

uint64_t sub_247760AA0()
{
  char v0;

  static FacetAvailability.< infix(_:_:)();
  return v0 & 1;
}

uint64_t Facet.availableValue.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  v4[7] = a3;
  v4[8] = v3;
  v4[5] = a1;
  v4[6] = a2;
  v5 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  v4[9] = v5;
  v6 = OUTLINED_FUNCTION_47(v5);
  return OUTLINED_FUNCTION_27_0(v6, v7, v8, v9);
}

uint64_t sub_247760B4C()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v1 + 80) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247760B98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);
  uint64_t (*v8)(_QWORD, _QWORD, _QWORD);

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  if (*(_BYTE *)(v0 + 32))
  {
    sub_247763BE8(v1, v2, *(_BYTE *)(v0 + 32));
    v3 = (_QWORD *)OUTLINED_FUNCTION_9_1();
    *(_QWORD *)(v0 + 88) = v3;
    *v3 = v0;
    v3[1] = sub_247760C38;
    return v8(*(_QWORD *)(v0 + 40), *(_QWORD *)(v0 + 48), *(_QWORD *)(v0 + 56));
  }
  else
  {
    sub_247763BE8(v1, v2, 0);
    v5 = *(_QWORD *)(v0 + 40);
    v6 = OUTLINED_FUNCTION_215();
    __swift_storeEnumTagSinglePayload(v5, 1, 1, v6);
    v7 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_3_2(v7);
  }
}

uint64_t sub_247760C38()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_123();
  *(_QWORD *)(v1 + 96) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247760C84()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  v1 = *(_QWORD *)(v0 + 40);
  v2 = OUTLINED_FUNCTION_215();
  __swift_storeEnumTagSinglePayload(v1, 0, 1, v2);
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v3);
}

uint64_t sub_247760CCC()
{
  return OUTLINED_FUNCTION_155();
}

uint64_t sub_247760CD4()
{
  return OUTLINED_FUNCTION_155();
}

uint64_t FacetCollection.contentRegistration.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_61();
  v0 = OUTLINED_FUNCTION_228();
  OUTLINED_FUNCTION_161(v0, v1, v2, v3);
  v4 = OUTLINED_FUNCTION_72();
  return OUTLINED_FUNCTION_74(v4, v5, v6, v7);
}

uint64_t FacetCollection.contentRegistration.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_148();
  OUTLINED_FUNCTION_150();
  OUTLINED_FUNCTION_61();
  v0 = OUTLINED_FUNCTION_228();
  OUTLINED_FUNCTION_161(v0, v1, v2, v3);
  v4 = OUTLINED_FUNCTION_87();
  return OUTLINED_FUNCTION_74(v4, v5, v6, v7);
}

uint64_t (*FacetCollection.contentRegistration.modify())()
{
  return nullsub_1;
}

uint64_t FacetCollection.environment.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_96();
  v0 = OUTLINED_FUNCTION_72();
  return OUTLINED_FUNCTION_33_0(v0, v1, v2, v3);
}

uint64_t FacetCollection.environment.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_96();
  v0 = OUTLINED_FUNCTION_87();
  return OUTLINED_FUNCTION_33_0(v0, v1, v2, v3);
}

uint64_t (*FacetCollection.environment.modify())()
{
  return nullsub_1;
}

uint64_t FacetCollection.system.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_62(a1, a2);
}

uint64_t FacetCollection.system.setter(uint64_t a1, uint64_t a2)
{
  return OUTLINED_FUNCTION_63(a2, a1);
}

uint64_t (*FacetCollection.system.modify())()
{
  return nullsub_1;
}

uint64_t FacetCollection.plan.getter()
{
  return swift_retain();
}

void FacetCollection.plan.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 44);
  swift_release();
  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_28();
}

uint64_t (*FacetCollection.plan.modify())()
{
  return nullsub_1;
}

uint64_t FacetCollection.contentID.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_11_1();
  OUTLINED_FUNCTION_64();
  OUTLINED_FUNCTION_66();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_67();
  OUTLINED_FUNCTION_65();
  OUTLINED_FUNCTION_96();
  v0 = OUTLINED_FUNCTION_72();
  return OUTLINED_FUNCTION_33_0(v0, v1, v2, v3);
}

uint64_t FacetCollection.init(contentRegistration:environment:system:plan:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  int *v11;
  uint64_t v12;
  uint64_t AssociatedConformanceWitness;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t AssociatedTypeWitness;
  uint64_t result;
  uint64_t v19;

  v11 = (int *)type metadata accessor for FacetCollection(0, a5, a6, a4);
  v19 = v11[11];
  v12 = OUTLINED_FUNCTION_151();
  OUTLINED_FUNCTION_151();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v15 = type metadata accessor for ContentRegistration(0, v12, AssociatedConformanceWitness, v14);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 32))(a7, a1, v15);
  v16 = a7 + v11[9];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(v16, a2, AssociatedTypeWitness);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(a7 + v11[10], a3, a5);
  *(_QWORD *)(a7 + v19) = a4;
  return result;
}

BOOL static FacetSpeed.< infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 < *a2;
}

BOOL static FacetSpeed.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

void static FacetAvailability.== infix(_:_:)()
{
  OUTLINED_FUNCTION_258();
  __asm { BR              X9 }
}

void sub_247761338()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  if (v5)
  {
    sub_2478B6DA0();
    v6 = OUTLINED_FUNCTION_260();
    sub_247763BE8(v6, v7, v4);
    OUTLINED_FUNCTION_205();
  }
  else
  {
    if (v1 != v0 || v3 != v2)
      OUTLINED_FUNCTION_113();
    OUTLINED_FUNCTION_8_1();
  }
  OUTLINED_FUNCTION_195();
}

uint64_t sub_2477613D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24776148C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_2477613EC);
}

BOOL sub_2477613DC(unsigned __int8 a1, unsigned __int8 a2)
{
  return a2 >= a1;
}

BOOL sub_2477613EC()
{
  char v0;

  static FacetAvailability.< infix(_:_:)();
  return (v0 & 1) == 0;
}

uint64_t sub_247761428(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24776148C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_247761444);
}

BOOL sub_247761434(unsigned __int8 a1, unsigned __int8 a2)
{
  return a1 >= a2;
}

BOOL sub_247761444()
{
  char v0;

  static FacetAvailability.< infix(_:_:)();
  return (v0 & 1) == 0;
}

uint64_t sub_247761480(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24776148C(a1, a2, a3, a4, (uint64_t (*)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))sub_24775CB54);
}

uint64_t sub_24776148C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD, _QWORD, _QWORD, _QWORD, _QWORD, _QWORD))
{
  return a5(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(unsigned __int8 *)(a1 + 16), *(_QWORD *)a2, *(_QWORD *)(a2 + 8), *(unsigned __int8 *)(a2 + 16));
}

void FacetAvailability.description.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2477614FC()
{
  uint64_t v1;

  OUTLINED_FUNCTION_116();
  sub_2478B6EA8();
  OUTLINED_FUNCTION_226();
  OUTLINED_FUNCTION_238();
  return v1;
}

uint64_t FacetSpeed.hash(into:)()
{
  return sub_2478B73A0();
}

uint64_t FacetSpeed.hashValue.getter()
{
  sub_2478B7394();
  sub_2478B73A0();
  return sub_2478B73AC();
}

uint64_t sub_247761610()
{
  sub_2478B7394();
  sub_2478B73A0();
  return sub_2478B73AC();
}

BOOL sub_247761654(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_2477613DC(*a1, *a2);
}

BOOL sub_247761660(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_247761434(*a1, *a2);
}

BOOL sub_24776166C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24775CB44(*a1, *a2);
}

void NetworkReachability.facetAvailability.getter()
{
  __asm { BR              X10 }
}

uint64_t sub_2477616B4()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_116();
  sub_2478B71A8();
  OUTLINED_FUNCTION_234();
  sub_2478B6EA8();
  result = OUTLINED_FUNCTION_226();
  *(_QWORD *)v0 = v2;
  *(_QWORD *)(v0 + 8) = v3;
  *(_BYTE *)(v0 + 16) = 0;
  return result;
}

void sub_247761760(uint64_t a1, uint64_t a2)
{
  if (dynamic_cast_existential_0_class_conditional(a2))
  {
    sub_247767B5C(0, &qword_2576C1E30, MEMORY[0x24BEE4AD0] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    OUTLINED_FUNCTION_12();
  }
  else
  {
    sub_2478B7334();
  }
}

void sub_2477617B8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  unint64_t *v5;
  _QWORD *v6;
  size_t v7;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (v2)
  {
    OUTLINED_FUNCTION_84();
    sub_247763844(v4, v5);
    v6 = (_QWORD *)OUTLINED_FUNCTION_118();
    v7 = _swift_stdlib_malloc_size(v6);
    v6[2] = a1;
    v6[3] = 2 * ((uint64_t)(v7 - 32) / 40);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t sub_247761834(uint64_t result, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  uint64_t *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  if (result < 0)
  {
    __break(1u);
    goto LABEL_15;
  }
  v8 = *v6;
  v9 = *(_QWORD *)(*v6 + 16);
  if (v9 < a2)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v10 = result;
  v11 = a2 - result;
  if (__OFSUB__(a2, result))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (__OFSUB__(0, v11))
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  if (__OFADD__(v9, result - a2))
  {
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  if (!OUTLINED_FUNCTION_200() || v9 - v11 > *(_QWORD *)(v8 + 24) >> 1)
  {
    sub_247761C30();
    v8 = v14;
  }
  v15 = v8 + 32 + 40 * v10;
  OUTLINED_FUNCTION_217(0, a4);
  OUTLINED_FUNCTION_143();
  result = swift_arrayDestroy();
  if (!v11)
    goto LABEL_13;
  v16 = *(_QWORD *)(v8 + 16);
  if (__OFSUB__(v16, a2))
    goto LABEL_19;
  result = a6(v8 + 32 + 40 * a2, v16 - a2, v15);
  v17 = *(_QWORD *)(v8 + 16);
  v18 = __OFADD__(v17, -v11);
  v19 = v17 - v11;
  if (!v18)
  {
    *(_QWORD *)(v8 + 16) = v19;
LABEL_13:
    *v6 = v8;
    return result;
  }
LABEL_20:
  __break(1u);
  return result;
}

void sub_24776196C()
{
  uint64_t *v0;
  uint64_t v1;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v3;

  v1 = *v0;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *v0 = v1;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_247761C30();
    *v0 = v3;
  }
}

void sub_2477619E4()
{
  sub_2477619F0((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_247761F70);
}

void sub_2477619F0(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1;
  v4 = OUTLINED_FUNCTION_200();
  *v1 = v3;
  if (!(_DWORD)v4)
    *v1 = a1(v4, *(_QWORD *)(v3 + 16) + 1, 1, v3);
  OUTLINED_FUNCTION_28();
}

void sub_247761A38(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  if (a1 + 1 > (uint64_t)(v2 >> 1))
  {
    OUTLINED_FUNCTION_140(v2);
    sub_247761C30();
    *(_QWORD *)v1 = v3;
  }
}

unint64_t sub_247761A80()
{
  unint64_t result;

  result = qword_2576C1AD0;
  if (!qword_2576C1AD0)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FacetBuildingError, &type metadata for FacetBuildingError);
    atomic_store(result, (unint64_t *)&qword_2576C1AD0);
  }
  return result;
}

uint64_t type metadata accessor for FacetCollection(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FacetCollection);
}

uint64_t sub_247761AC8(uint64_t a1)
{
  return sub_247761AD4(a1, (uint64_t (*)(BOOL))sub_247761F70);
}

uint64_t sub_247761AD4(uint64_t result, uint64_t (*a2)(BOOL))
{
  uint64_t v2;
  unint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v2 + 24);
  if (result + 1 > (uint64_t)(v3 >> 1))
  {
    result = a2(v3 > 1);
    *(_QWORD *)v2 = result;
  }
  return result;
}

uint64_t sub_247761B14(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_247763890(0, &qword_2576C1E58, (uint64_t (*)(uint64_t))sub_247767BDC);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    sub_247791B5C((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_247767BDC();
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_247761C30()
{
  int64_t v0;
  uint64_t v1;
  unint64_t *v2;
  void (*v3)(uint64_t, uint64_t, _QWORD *);
  void (*v4)(uint64_t, uint64_t, _QWORD *);
  unint64_t *v5;
  unint64_t *v6;
  uint64_t v7;
  char v8;
  char v9;
  char v10;
  unint64_t v11;
  int64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  size_t v16;

  OUTLINED_FUNCTION_204();
  v4 = v3;
  v6 = v5;
  v7 = v1;
  v9 = v8;
  if ((v10 & 1) != 0)
  {
    v11 = *(_QWORD *)(v1 + 24);
    v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < v0)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= v0)
        v12 = v0;
    }
  }
  else
  {
    v12 = v0;
  }
  v13 = *(_QWORD *)(v1 + 16);
  if (v12 <= v13)
    v14 = *(_QWORD *)(v1 + 16);
  else
    v14 = v12;
  if (v14)
  {
    sub_247763844(0, v2);
    v15 = (_QWORD *)OUTLINED_FUNCTION_118();
    v16 = _swift_stdlib_malloc_size(v15);
    v15[2] = v13;
    v15[3] = 2 * ((uint64_t)(v16 - 32) / 40);
  }
  else
  {
    v15 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v9 & 1) != 0)
  {
    v4(v7 + 32, v13, v15 + 4);
    *(_QWORD *)(v7 + 16) = 0;
  }
  else
  {
    sub_247758170(0, v6);
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_34_0();
}

uint64_t sub_247761D60(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_247767B5C(0, (unint64_t *)&qword_2576C18A0, MEMORY[0x24BEE4AD8] + 8, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 32);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    sub_247791BD0((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_247761E70(char a1, int64_t a2, char a3, uint64_t a4)
{
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;
  char *v12;
  uint64_t v13;
  char *v14;

  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_247763890(0, &qword_2576C1E20, (uint64_t (*)(uint64_t))sub_247767958);
    v10 = (_QWORD *)OUTLINED_FUNCTION_118();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  if ((a1 & 1) != 0)
  {
    OUTLINED_FUNCTION_244();
    sub_247791BF0(v12, v13, v14);
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_247767958();
    OUTLINED_FUNCTION_211();
    swift_arrayInitWithCopy();
  }
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_195();
}

uint64_t sub_247761F70(uint64_t result, int64_t a2, char a3, uint64_t a4)
{
  char v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  size_t v11;

  v5 = result;
  if ((a3 & 1) != 0)
  {
    v6 = *(_QWORD *)(a4 + 24);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *(_QWORD *)(a4 + 16);
  if (v7 <= v8)
    v9 = *(_QWORD *)(a4 + 16);
  else
    v9 = v7;
  if (v9)
  {
    sub_247763890(0, &qword_2576C1E08, (uint64_t (*)(uint64_t))sub_2477678D4);
    v10 = swift_allocObject();
    v11 = _swift_stdlib_malloc_size((const void *)v10);
    *(_QWORD *)(v10 + 16) = v8;
    *(_QWORD *)(v10 + 24) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    sub_247791C14((char *)(a4 + 32), v8, (char *)(v10 + 32));
    *(_QWORD *)(a4 + 16) = 0;
  }
  else
  {
    sub_247767914();
    swift_arrayInitWithCopy();
  }
  swift_bridgeObjectRelease();
  return v10;
}

void sub_24776208C(char **a1)
{
  char *v2;
  uint64_t v3;
  uint64_t v4[2];

  v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v2 = sub_247763720((uint64_t)v2);
  v3 = *((_QWORD *)v2 + 2);
  v4[0] = (uint64_t)(v2 + 32);
  v4[1] = v3;
  sub_2477620F4(v4);
  *a1 = v2;
}

void sub_2477620F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  char *v13;
  char *v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  BOOL v26;
  unint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  BOOL v36;
  uint64_t v37;
  char v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  char *v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  unint64_t v59;
  char *v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  unint64_t v66;
  uint64_t *v67;
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;

  v3 = a1[1];
  if (sub_2478B7328() < v3)
  {
    if (v3 < -1)
      goto LABEL_97;
    v71 = v1;
    v67 = a1;
    if (v3 <= 1)
    {
      v4 = MEMORY[0x24BEE4AF8];
      v70 = (char *)(MEMORY[0x24BEE4AF8] + 32);
      if (v3 != 1)
      {
        v12 = *(_QWORD *)(MEMORY[0x24BEE4AF8] + 16);
        v7 = (char *)MEMORY[0x24BEE4AF8];
LABEL_63:
        v68 = v4;
        if (v12 < 2)
        {
LABEL_74:
          swift_bridgeObjectRelease();
          *(_QWORD *)(v68 + 16) = 0;
          swift_bridgeObjectRelease();
          return;
        }
        v61 = *v67;
        while (1)
        {
          v62 = v12 - 2;
          if (v12 < 2)
            goto LABEL_93;
          if (!v61)
          {
            __break(1u);
            JUMPOUT(0x247762D3CLL);
          }
          v63 = *(_QWORD *)&v7[16 * v62 + 32];
          v64 = *(_QWORD *)&v7[16 * v12 + 24];
          sub_247763024((char *)(v61 + 24 * v63), (char *)(v61 + 24 * *(_QWORD *)&v7[16 * v12 + 16]), v61 + 24 * v64, v70);
          if (v71)
            goto LABEL_75;
          if (v64 < v63)
            goto LABEL_94;
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v7 = sub_24776370C((uint64_t)v7);
          if (v62 >= *((_QWORD *)v7 + 2))
            goto LABEL_95;
          v65 = &v7[16 * v62 + 32];
          *(_QWORD *)v65 = v63;
          *((_QWORD *)v65 + 1) = v64;
          v66 = *((_QWORD *)v7 + 2);
          if (v12 > v66)
            goto LABEL_96;
          memmove(&v7[16 * v12 + 16], &v7[16 * v12 + 32], 16 * (v66 - v12));
          *((_QWORD *)v7 + 2) = v66 - 1;
          v12 = v66 - 1;
          if (v66 <= 2)
            goto LABEL_74;
        }
      }
    }
    else
    {
      v4 = sub_2478B6F98();
      *(_QWORD *)(v4 + 16) = v3 / 2;
      v70 = (char *)(v4 + 32);
    }
    v68 = v4;
    v5 = 0;
    v6 = *a1;
    v7 = (char *)MEMORY[0x24BEE4AF8];
    v69 = v3;
    v73 = *a1;
    while (1)
    {
      v8 = v5 + 1;
      if (v5 + 1 < v3)
        __asm { BR              X8 }
      if (v8 < v5)
        goto LABEL_92;
      v9 = v5;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v7 = sub_247763604(0, *((_QWORD *)v7 + 2) + 1, 1, v7);
      v11 = *((_QWORD *)v7 + 2);
      v10 = *((_QWORD *)v7 + 3);
      v12 = v11 + 1;
      v6 = v73;
      v72 = v8;
      if (v11 >= v10 >> 1)
      {
        v60 = sub_247763604((char *)(v10 > 1), v11 + 1, 1, v7);
        v6 = v73;
        v7 = v60;
      }
      *((_QWORD *)v7 + 2) = v12;
      v13 = v7 + 32;
      v14 = &v7[16 * v11 + 32];
      *(_QWORD *)v14 = v9;
      *((_QWORD *)v14 + 1) = v72;
      if (v11)
        break;
      v12 = 1;
LABEL_60:
      v3 = v69;
      v5 = v72;
      v4 = v68;
      if (v72 >= v69)
        goto LABEL_63;
    }
    while (1)
    {
      v15 = v12 - 1;
      if (v12 >= 4)
      {
        v20 = &v13[16 * v12];
        v21 = *((_QWORD *)v20 - 8);
        v22 = *((_QWORD *)v20 - 7);
        v26 = __OFSUB__(v22, v21);
        v23 = v22 - v21;
        if (v26)
          goto LABEL_81;
        v25 = *((_QWORD *)v20 - 6);
        v24 = *((_QWORD *)v20 - 5);
        v26 = __OFSUB__(v24, v25);
        v18 = v24 - v25;
        v19 = v26;
        if (v26)
          goto LABEL_82;
        v27 = v12 - 2;
        v28 = &v13[16 * v12 - 32];
        v30 = *(_QWORD *)v28;
        v29 = *((_QWORD *)v28 + 1);
        v26 = __OFSUB__(v29, v30);
        v31 = v29 - v30;
        if (v26)
          goto LABEL_83;
        v26 = __OFADD__(v18, v31);
        v32 = v18 + v31;
        if (v26)
          goto LABEL_85;
        if (v32 >= v23)
        {
          v50 = &v13[16 * v15];
          v52 = *(_QWORD *)v50;
          v51 = *((_QWORD *)v50 + 1);
          v26 = __OFSUB__(v51, v52);
          v53 = v51 - v52;
          if (v26)
            goto LABEL_91;
          v43 = v18 < v53;
          goto LABEL_49;
        }
      }
      else
      {
        if (v12 != 3)
        {
          v44 = *((_QWORD *)v7 + 4);
          v45 = *((_QWORD *)v7 + 5);
          v26 = __OFSUB__(v45, v44);
          v37 = v45 - v44;
          v38 = v26;
          goto LABEL_43;
        }
        v17 = *((_QWORD *)v7 + 4);
        v16 = *((_QWORD *)v7 + 5);
        v26 = __OFSUB__(v16, v17);
        v18 = v16 - v17;
        v19 = v26;
      }
      if ((v19 & 1) != 0)
        goto LABEL_84;
      v27 = v12 - 2;
      v33 = &v13[16 * v12 - 32];
      v35 = *(_QWORD *)v33;
      v34 = *((_QWORD *)v33 + 1);
      v36 = __OFSUB__(v34, v35);
      v37 = v34 - v35;
      v38 = v36;
      if (v36)
        goto LABEL_86;
      v39 = &v13[16 * v15];
      v41 = *(_QWORD *)v39;
      v40 = *((_QWORD *)v39 + 1);
      v26 = __OFSUB__(v40, v41);
      v42 = v40 - v41;
      if (v26)
        goto LABEL_88;
      if (__OFADD__(v37, v42))
        goto LABEL_90;
      if (v37 + v42 >= v18)
      {
        v43 = v18 < v42;
LABEL_49:
        if (v43)
          v15 = v27;
        goto LABEL_51;
      }
LABEL_43:
      if ((v38 & 1) != 0)
        goto LABEL_87;
      v46 = &v13[16 * v15];
      v48 = *(_QWORD *)v46;
      v47 = *((_QWORD *)v46 + 1);
      v26 = __OFSUB__(v47, v48);
      v49 = v47 - v48;
      if (v26)
        goto LABEL_89;
      if (v49 < v37)
        goto LABEL_60;
LABEL_51:
      v54 = v15 - 1;
      if (v15 - 1 >= v12)
      {
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
LABEL_86:
        __break(1u);
LABEL_87:
        __break(1u);
LABEL_88:
        __break(1u);
LABEL_89:
        __break(1u);
LABEL_90:
        __break(1u);
LABEL_91:
        __break(1u);
LABEL_92:
        __break(1u);
LABEL_93:
        __break(1u);
LABEL_94:
        __break(1u);
LABEL_95:
        __break(1u);
LABEL_96:
        __break(1u);
        __break(1u);
LABEL_97:
        __break(1u);
LABEL_98:
        __break(1u);
        __break(1u);
        __break(1u);
        JUMPOUT(0x247762D28);
      }
      if (!v6)
      {
        __break(1u);
        JUMPOUT(0x247762D34);
      }
      v55 = &v13[16 * v54];
      v56 = *(_QWORD *)v55;
      v57 = &v13[16 * v15];
      v58 = *((_QWORD *)v57 + 1);
      sub_247763024((char *)(v6 + 24 * *(_QWORD *)v55), (char *)(v6 + 24 * *(_QWORD *)v57), v6 + 24 * v58, v70);
      if (v71)
      {
LABEL_75:
        swift_bridgeObjectRelease();
        *(_QWORD *)(v68 + 16) = 0;
        swift_bridgeObjectRelease();
        return;
      }
      if (v58 < v56)
        goto LABEL_78;
      if (v15 > *((_QWORD *)v7 + 2))
        goto LABEL_79;
      *(_QWORD *)v55 = v56;
      *(_QWORD *)&v13[16 * v54 + 8] = v58;
      v59 = *((_QWORD *)v7 + 2);
      if (v15 >= v59)
        goto LABEL_80;
      v71 = 0;
      v12 = v59 - 1;
      memmove(&v13[16 * v15], v57 + 16, 16 * (v59 - 1 - v15));
      *((_QWORD *)v7 + 2) = v59 - 1;
      v6 = v73;
      if (v59 <= 2)
        goto LABEL_60;
    }
  }
  if (v3 < 0)
    goto LABEL_98;
  if (v3)
    sub_247762D6C(0, v3, 1, (uint64_t)a1);
}

void sub_247762D6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a3 != a2)
    __asm { BR              X8 }
}

uint64_t sub_247763024(char *a1, char *a2, unint64_t a3, char *a4)
{
  char *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v11;
  char *v12;

  v4 = a2;
  v6 = a2 - a1;
  v7 = (a2 - a1) / 24;
  v8 = a3 - (_QWORD)a2;
  v9 = (uint64_t)(a3 - (_QWORD)a2) / 24;
  if (v7 >= v9)
  {
    sub_247791B84(a2, (uint64_t)(a3 - (_QWORD)a2) / 24, a4);
    v11 = a4;
    v12 = &a4[24 * v9];
    if (a1 < v4 && v8 >= 24)
      __asm { BR              X8 }
  }
  else
  {
    sub_247791B84(a1, (a2 - a1) / 24, a4);
    v11 = a4;
    v12 = &a4[24 * v7];
    if ((unint64_t)v4 < a3 && v6 >= 24)
      __asm { BR              X8 }
    v4 = a1;
  }
  if (v4 != v11 || v4 >= &v11[24 * ((v12 - v11) / 24)])
    memmove(v4, v11, 24 * ((v12 - v11) / 24));
  return 1;
}

void sub_2477633BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, unint64_t a11, uint64_t a12, unint64_t a13, __int128 *a14, uint64_t a15, __int128 *a16)
{
  __int128 *v16;
  unsigned int v17;
  unint64_t v18;
  uint64_t v19;
  __int128 *v20;
  unint64_t v21;
  uint64_t v22;
  __int128 *v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unint64_t v27;
  unint64_t v29;
  __int128 *v30;
  BOOL v31;
  uint64_t v32;
  __int128 *v33;
  BOOL v34;
  BOOL v35;
  __int128 v36;
  char v38;

  if (v17)
  {
    sub_2478B6DA0();
    sub_247763A00(v22, v24, v17);
    sub_247763BE8(v19, v25, v26);
    sub_247763BE8(v22, v24, v17);
    v27 = a13;
    v31 = v26 >= v17;
    v29 = a11;
    v30 = a14;
    if (!v31)
      goto LABEL_3;
  }
  else
  {
    v32 = v24;
    v33 = v16;
    v34 = v19 == v22 && v25 == v32;
    if (v34 || (sub_2478B734C() & 1) != 0)
    {
      sub_247763A00(v19, v25, 0);
      sub_247763A00(v22, v32, 0);
      sub_247763BE8(v19, v25, 0);
      sub_247763BE8(v22, v32, 0);
      v27 = a13;
      v30 = a14;
      a16 = v33;
      v29 = a11;
    }
    else
    {
      v38 = sub_2478B734C();
      sub_247763A00(v19, v25, 0);
      sub_247763A00(v22, v32, 0);
      sub_247763BE8(v19, v25, 0);
      sub_247763BE8(v22, v32, 0);
      v27 = a13;
      v30 = a14;
      a16 = v33;
      v29 = a11;
      if ((v38 & 1) != 0)
      {
LABEL_3:
        v31 = v30 != (__int128 *)v21 || v18 >= v21;
        v23 = v20;
        v21 = (unint64_t)v20;
        if (!v31)
          goto LABEL_20;
        goto LABEL_19;
      }
    }
  }
  v35 = v30 != a16 || v18 >= (unint64_t)a16;
  a16 = v23;
  if (!v35)
  {
LABEL_20:
    if (v21 <= v29 || (unint64_t)a16 <= v27)
      JUMPOUT(0x2477630CCLL);
    JUMPOUT(0x247763380);
  }
LABEL_19:
  v36 = *v23;
  *(_QWORD *)(v18 + 16) = *((_QWORD *)v23 + 2);
  *(_OWORD *)v18 = v36;
  goto LABEL_20;
}

char *sub_247763604(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_247763890(0, &qword_2576C1EA8, (uint64_t (*)(uint64_t))sub_2477680A0);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v12, v13, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_24776370C(uint64_t a1)
{
  return sub_247763604(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

char *sub_247763720(uint64_t a1)
{
  return sub_247791F14(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_24776375C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(uint64_t *, uint64_t))
{
  uint64_t v10;
  uint64_t v12[5];

  v12[3] = a4;
  v12[4] = a5;
  __swift_allocate_boxed_opaque_existential_1Tm(v12);
  (*(void (**)(void))(*(_QWORD *)(a4 - 8) + 32))();
  v10 = *a3;
  *(_QWORD *)(v10 + 16) = a1 + 1;
  return a6(v12, v10 + 40 * a1 + 32);
}

void sub_2477637E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1AE0)
  {
    sub_247757FF4();
    v0 = sub_2478B6DDC();
    if (!v1)
      atomic_store(v0, &qword_2576C1AE0);
  }
}

void sub_247763844(uint64_t a1, unint64_t *a2)
{
  uint64_t v3;
  unint64_t *v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  if (!*a2)
  {
    OUTLINED_FUNCTION_84();
    v5 = sub_247758170(v3, v4);
    v6 = OUTLINED_FUNCTION_231(v5);
    if (!v7)
      atomic_store(v6, a2);
  }
  OUTLINED_FUNCTION_28();
}

void sub_247763890(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v4 = a3(255);
    v5 = OUTLINED_FUNCTION_231(v4);
    if (!v6)
      atomic_store(v5, a2);
  }
  OUTLINED_FUNCTION_28();
}

void sub_2477638D8(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;

  v2 = a2(0);
  OUTLINED_FUNCTION_6_1(v2);
  OUTLINED_FUNCTION_12();
}

void sub_247763900(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_247761A80();
    v7 = a3(a1, &type metadata for FacetBuildingError, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_28();
}

unint64_t sub_247763954()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C1B08;
  if (!qword_2576C1B08)
  {
    sub_247763900(255, &qword_2576C1B00, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    result = MEMORY[0x24958320C](MEMORY[0x24BEAF030], v1);
    atomic_store(result, (unint64_t *)&qword_2576C1B08);
  }
  return result;
}

uint64_t sub_2477639A4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_78(v1);
  *v2 = v0;
  v2[1] = sub_247768144;
  OUTLINED_FUNCTION_251();
  return sub_24775CF6C(v3, v4, v5);
}

uint64_t sub_247763A00(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return sub_2478B6DA0();
  return result;
}

uint64_t type metadata accessor for FacetBuilder(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FacetBuilder);
}

uint64_t sub_247763A20()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247763A44()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = swift_task_alloc();
  v2 = (_QWORD *)OUTLINED_FUNCTION_78(v1);
  *v2 = v0;
  v2[1] = sub_2477605BC;
  OUTLINED_FUNCTION_44();
  return sub_24775DA98(v3, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_247763ADC()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0[3];
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  return sub_24775DF10((uint64_t)v0 + ((v2 + 56) & ~v2), v0[2], v1, v0[4], v0[5], v0[6]);
}

uint64_t objectdestroy_21Tm()
{
  uint64_t v0;

  OUTLINED_FUNCTION_122(*(_QWORD *)(*(_QWORD *)(v0 + 24) - 8));
  return swift_deallocObject();
}

uint64_t sub_247763B58(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v1[3];
  v3 = *(unsigned __int8 *)(*(_QWORD *)(v2 - 8) + 80);
  return sub_24775E190(a1, (uint64_t)v1 + ((v3 + 56) & ~v3), v1[2], v2, v1[4], v1[5], v1[6]);
}

uint64_t sub_247763B8C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247763890(0, &qword_2576C1B70, (uint64_t (*)(uint64_t))sub_2477580E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_247763BE8(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if (!a3)
    return swift_bridgeObjectRelease();
  return result;
}

void __swift_allocate_boxed_opaque_existential_1Tm(uint64_t *a1)
{
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
    *a1 = swift_allocBox();
  OUTLINED_FUNCTION_12();
}

unint64_t sub_247763C38()
{
  unint64_t result;

  result = qword_2576C1B88;
  if (!qword_2576C1B88)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FacetBuildingError, &type metadata for FacetBuildingError);
    atomic_store(result, (unint64_t *)&qword_2576C1B88);
  }
  return result;
}

unint64_t sub_247763C78()
{
  unint64_t result;

  result = qword_2576C1B90[0];
  if (!qword_2576C1B90[0])
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FacetBuildingError, &type metadata for FacetBuildingError);
    atomic_store(result, qword_2576C1B90);
  }
  return result;
}

unint64_t sub_247763CB8()
{
  unint64_t result;

  result = qword_25444CC28;
  if (!qword_25444CC28)
  {
    result = MEMORY[0x24958320C](MEMORY[0x24BEE17C8], MEMORY[0x24BEE1768]);
    atomic_store(result, (unint64_t *)&qword_25444CC28);
  }
  return result;
}

uint64_t sub_247763CF4(uint64_t a1, uint64_t a2)
{
  return *(_QWORD *)(a2 + 24);
}

unint64_t sub_247763D00()
{
  unint64_t result;

  result = qword_2576C1BB0;
  if (!qword_2576C1BB0)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FacetAvailability, &type metadata for FacetAvailability);
    atomic_store(result, (unint64_t *)&qword_2576C1BB0);
  }
  return result;
}

unint64_t sub_247763D40()
{
  unint64_t result;

  result = qword_2576C1BB8;
  if (!qword_2576C1BB8)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FacetSpeed, &type metadata for FacetSpeed);
    atomic_store(result, (unint64_t *)&qword_2576C1BB8);
  }
  return result;
}

uint64_t dispatch thunk of Facet.availability.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_110();
  v0 = OUTLINED_FUNCTION_7_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_47(v1);
  return OUTLINED_FUNCTION_27_0(v2, v3, v4, v5);
}

uint64_t dispatch thunk of Facet.value.getter()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_110();
  v0 = OUTLINED_FUNCTION_7_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_47(v1);
  return OUTLINED_FUNCTION_27_0(v2, v3, v4, v5);
}

uint64_t dispatch thunk of FacetBuilding.builders.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t getEnumTagSinglePayload for FacetBuildingError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF7)
  {
    if (a2 + 9 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 9) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 10;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xA;
  v5 = v6 - 10;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FacetBuildingError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 9 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 9) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF7)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF6)
    return ((uint64_t (*)(void))((char *)&loc_247763EDC + 4 * byte_2478B8303[v4]))();
  *a1 = a2 + 9;
  return ((uint64_t (*)(void))((char *)sub_247763F10 + 4 * byte_2478B82FE[v4]))();
}

uint64_t sub_247763F10(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247763F18(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247763F20);
  return result;
}

uint64_t sub_247763F2C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247763F34);
  *(_BYTE *)result = a2 + 9;
  return result;
}

uint64_t sub_247763F38(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247763F40(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for FacetBuildingError()
{
  OUTLINED_FUNCTION_34();
}

uint64_t type metadata accessor for FacetBuildingPlanner()
{
  return objc_opt_self();
}

uint64_t method lookup function for FacetBuildingPlanner()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FacetBuildingPlanner.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

uint64_t sub_247763F8C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for FacetBuildingPlan()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of FacetBuildingPlan.__allocating_init(system:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 160))();
}

uint64_t dispatch thunk of _FacetBuilder.addElements<A>(to:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_186();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_93(v1, (uint64_t)sub_247768144);
  return OUTLINED_FUNCTION_37(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of _FacetBuilder.availability<A>(in:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_186();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_93(v1, (uint64_t)sub_2477640D8);
  return OUTLINED_FUNCTION_37(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_2477640D8(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_59(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t dispatch thunk of _FacetBuilder.value<A>(in:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_142();
  v0 = OUTLINED_FUNCTION_9_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_73(v1);
  return OUTLINED_FUNCTION_58(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_247764144()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24776414C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_2477641D4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t, uint64_t);
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  _QWORD *v21;
  _QWORD *v22;
  uint64_t v23;

  v3 = a1;
  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  v7 = *(_QWORD *)(v5 + 64) + 7;
  if (v6 > 7
    || (*(_DWORD *)(v5 + 80) & 0x100000) != 0
    || ((((((v7 + ((v6 + 16) & ~v6)) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16 > 0x18)
  {
    v10 = *a2;
    *a1 = *a2;
    v3 = (uint64_t *)(v10 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
  }
  else
  {
    v11 = a2[1];
    *v3 = *a2;
    v3[1] = v11;
    v12 = ((unint64_t)v3 + v6 + 16) & ~v6;
    v13 = ((unint64_t)a2 + v6 + 16) & ~v6;
    v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    sub_2478B6DA0();
    v14(v12, v13, v4);
    v15 = (_QWORD *)((v7 + v12) & 0xFFFFFFFFFFFFFFF8);
    v16 = (_QWORD *)((v7 + v13) & 0xFFFFFFFFFFFFFFF8);
    v17 = v16[1];
    *v15 = *v16;
    v15[1] = v17;
    v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
    v20 = v19[1];
    *v18 = *v19;
    v18[1] = v20;
    v21 = (_QWORD *)(((unint64_t)v18 + 23) & 0xFFFFFFFFFFFFFFF8);
    v22 = (_QWORD *)(((unint64_t)v19 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = v22[1];
    *v21 = *v22;
    v21[1] = v23;
    swift_retain();
    swift_retain();
  }
  swift_retain();
  return v3;
}

uint64_t sub_247764308(uint64_t a1, uint64_t a2)
{
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))((a1
                                                                                            + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80)
                                                                                            + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 80));
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_247764390(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t, uint64_t);
  uint64_t v11;
  _QWORD *v12;
  _QWORD *v13;
  uint64_t v14;
  _QWORD *v15;
  _QWORD *v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  sub_2478B6DA0();
  v10(v8, v9, v5);
  v11 = *(_QWORD *)(v6 + 64) + 7;
  v12 = (_QWORD *)((v11 + v8) & 0xFFFFFFFFFFFFFFF8);
  v13 = (_QWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  v14 = v13[1];
  *v12 = *v13;
  v12[1] = v14;
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = (_QWORD *)(((unint64_t)v13 + 23) & 0xFFFFFFFFFFFFFFF8);
  v17 = v16[1];
  *v15 = *v16;
  v15[1] = v17;
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v16 + 23) & 0xFFFFFFFFFFFFFFF8);
  v20 = v19[1];
  *v18 = *v19;
  v18[1] = v20;
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_247764464(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  uint64_t v19;

  *a1 = *a2;
  a1[1] = a2[1];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v6 + 24))(v8, v9);
  v10 = *(_QWORD *)(v6 + 64) + 7;
  v11 = (_QWORD *)((v10 + v8) & 0xFFFFFFFFFFFFFFF8);
  v12 = (_QWORD *)((v10 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = v12[1];
  *v11 = *v12;
  v11[1] = v13;
  swift_retain();
  swift_release();
  v14 = (_QWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFFFF8);
  v15 = (_QWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v16 = v15[1];
  *v14 = *v15;
  v14[1] = v16;
  swift_retain();
  swift_release();
  v17 = (_QWORD *)(((unint64_t)v14 + 23) & 0xFFFFFFFFFFFFFFF8);
  v18 = (_QWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8);
  v19 = v18[1];
  *v17 = *v18;
  v17[1] = v19;
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *sub_247764564(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _OWORD *v9;
  _OWORD *v10;
  _OWORD *v11;
  _OWORD *v12;

  *a1 = *a2;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(unsigned __int8 *)(v4 + 80);
  v6 = ((unint64_t)a1 + v5 + 16) & ~v5;
  v7 = ((unint64_t)a2 + v5 + 16) & ~v5;
  (*(void (**)(uint64_t, uint64_t))(v4 + 32))(v6, v7);
  v8 = *(_QWORD *)(v4 + 64) + 7;
  v9 = (_OWORD *)((v8 + v6) & 0xFFFFFFFFFFFFFFF8);
  v10 = (_OWORD *)((v8 + v7) & 0xFFFFFFFFFFFFFFF8);
  *v9 = *v10;
  v11 = (_OWORD *)(((unint64_t)v9 + 23) & 0xFFFFFFFFFFFFF8);
  v12 = (_OWORD *)(((unint64_t)v10 + 23) & 0xFFFFFFFFFFFFFFF8);
  *v11 = *v12;
  *(_OWORD *)(((unint64_t)v11 + 23) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFF8);
  return a1;
}

_QWORD *sub_247764604(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD *v12;
  uint64_t v13;
  unint64_t v14;
  _OWORD *v15;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v8 = *(unsigned __int8 *)(v7 + 80);
  v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t))(v7 + 40))(v9, v10);
  v11 = *(_QWORD *)(v7 + 64) + 7;
  v12 = (_OWORD *)((v11 + v9) & 0xFFFFFFFFFFFFFFF8);
  v13 = v11 + v10;
  v14 = (v13 & 0xFFFFFFFFFFFFFFF8) + 23;
  *v12 = *(_OWORD *)(v13 & 0xFFFFFFFFFFFFFFF8);
  swift_release();
  v15 = (_OWORD *)(((unint64_t)v12 + 23) & 0xFFFFFFFFFFFFFFF8);
  v14 &= 0xFFFFFFFFFFFFF8uLL;
  *v15 = *(_OWORD *)v14;
  swift_release();
  *(_OWORD *)(((unint64_t)v15 + 23) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)((v14 + 23) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2477646D4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  unsigned int v10;
  uint64_t v11;
  unint64_t v13;

  v4 = *(_QWORD *)(a3 + 16);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(unsigned int *)(v5 + 84);
  if (v6 <= 0x7FFFFFFF)
    v7 = 0x7FFFFFFF;
  else
    v7 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v8 = *(unsigned __int8 *)(v5 + 80);
  if (v7 >= a2)
  {
    if ((v6 & 0x80000000) != 0)
    {
      return __swift_getEnumTagSinglePayload((a1 + v8 + 16) & ~v8, v6, v4);
    }
    else
    {
      v13 = *(_QWORD *)(a1 + 8);
      if (v13 >= 0xFFFFFFFF)
        LODWORD(v13) = -1;
      return (v13 + 1);
    }
  }
  else
  {
    if (((((((((*(_QWORD *)(v5 + 64) + ((v8 + 16) & ~v8) + 7) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
         + 16) & 0xFFFFFFF8) != 0)
      v9 = 2;
    else
      v9 = a2 - v7 + 1;
    if (v9 >= 0x10000)
      v10 = 4;
    else
      v10 = 2;
    if (v9 < 0x100)
      v10 = 1;
    if (v9 >= 2)
      v11 = v10;
    else
      v11 = 0;
    return ((uint64_t (*)(void))((char *)&loc_247764770 + 4 * byte_2478B8308[v11]))();
  }
}

uint64_t __swift_getEnumTagSinglePayload(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(a3 - 8) + 48))();
}

void sub_2477647F8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  unsigned int v6;
  size_t v7;
  unsigned int v8;
  int v9;
  int v10;
  unsigned int v11;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  if (*(_DWORD *)(v5 + 84) <= 0x7FFFFFFFu)
    v6 = 0x7FFFFFFF;
  else
    v6 = *(_DWORD *)(v5 + 84);
  v7 = ((((((*(_QWORD *)(v5 + 64)
           + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))
           + 7) & 0xFFFFFFFFFFFFFFF8)
         + 23) & 0xFFFFFFFFFFFFFFF8)
       + 23) & 0xFFFFFFFFFFFFFFF8)
     + 16;
  if (v6 >= a3)
  {
    v10 = 0;
  }
  else
  {
    if (((((((*(_DWORD *)(v5 + 64) + ((*(unsigned __int8 *)(v5 + 80) + 16) & ~*(unsigned __int8 *)(v5 + 80)) + 7) & 0xFFFFFFF8)
           + 23) & 0xFFFFFFF8)
         + 23) & 0xFFFFFFF8) == 0xFFFFFFF0)
      v8 = a3 - v6 + 1;
    else
      v8 = 2;
    if (v8 >= 0x10000)
      v9 = 4;
    else
      v9 = 2;
    if (v8 < 0x100)
      v9 = 1;
    if (v8 >= 2)
      v10 = v9;
    else
      v10 = 0;
  }
  if (a2 > v6)
  {
    if ((_DWORD)v7)
    {
      v11 = ~v6 + a2;
      bzero(a1, v7);
      *a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X12 }
}

uint64_t sub_247764908@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t result;

  *((_BYTE *)v5 + v6) = 0;
  if ((_DWORD)a1)
  {
    if ((a2 & 0x80000000) != 0)
    {
      return __swift_storeEnumTagSinglePayload(((unint64_t)v5 + v4 + 16) & a4, a1, a2, a3);
    }
    else if ((a1 & 0x80000000) != 0)
    {
      *v5 = a1 ^ 0x80000000;
      v5[1] = 0;
    }
    else
    {
      v5[1] = (a1 - 1);
    }
  }
  return result;
}

uint64_t sub_247764998()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_2477649A0()
{
  uint64_t result;
  unint64_t v1;

  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_247764A28(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  __int128 v14;
  uint64_t v15;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 0x40uLL)
    v6 = 64;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    v9 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = v9 + ((unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8);
    swift_retain();
  }
  else
  {
    v10 = *(unsigned __int8 *)(a2 + v6);
    if (v10 >= 3)
      v10 = *(_DWORD *)a2 + 3;
    if (v10 == 2)
    {
      v15 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v15;
      *(_BYTE *)(a1 + v6) = 2;
      sub_2478B6DA0();
    }
    else if (v10 == 1)
    {
      v11 = *(_QWORD *)a2;
      v12 = *(_QWORD *)(a2 + 8);
      v13 = *(_BYTE *)(a2 + 16);
      sub_247763A00(*(_QWORD *)a2, v12, v13);
      *(_QWORD *)a1 = v11;
      *(_QWORD *)(a1 + 8) = v12;
      *(_BYTE *)(a1 + 16) = v13;
      v14 = *(_OWORD *)(a2 + 48);
      *(_OWORD *)(a1 + 48) = v14;
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 24, a2 + 24);
      *(_BYTE *)(a1 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_BYTE *)(a1 + v6) = 0;
    }
  }
  return a1;
}

uint64_t sub_247764B68(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unsigned int v5;
  uint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = *(_QWORD *)(v3 + 64);
  if (v4 <= 0x40)
    v4 = 64;
  v5 = *(unsigned __int8 *)(a1 + v4);
  if (v5 >= 3)
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    __asm { BR              X14 }
  }
  if (v5 == 2)
    return swift_bridgeObjectRelease();
  if (v5 != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  sub_247763BE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
  return __swift_destroy_boxed_opaque_existential_1(a1 + 24);
}

uint64_t sub_247764C70(uint64_t a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  __int128 v12;
  uint64_t v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 0x40uLL)
    v6 = 64;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 2)
  {
    v13 = a2[1];
    *(_QWORD *)a1 = *a2;
    *(_QWORD *)(a1 + 8) = v13;
    *(_BYTE *)(a1 + v6) = 2;
    sub_2478B6DA0();
  }
  else if (v7 == 1)
  {
    v9 = *a2;
    v10 = a2[1];
    v11 = *((_BYTE *)a2 + 16);
    sub_247763A00(*a2, v10, v11);
    *(_QWORD *)a1 = v9;
    *(_QWORD *)(a1 + 8) = v10;
    *(_BYTE *)(a1 + 16) = v11;
    v12 = *((_OWORD *)a2 + 3);
    *(_OWORD *)(a1 + 48) = v12;
    (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 24, (uint64_t)(a2 + 3));
    *(_BYTE *)(a1 + v6) = 1;
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    *(_BYTE *)(a1 + v6) = 0;
  }
  return a1;
}

uint64_t sub_247764DCC(uint64_t a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t v14;

  if ((uint64_t *)a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 0x40uLL)
      v6 = 64;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = *(unsigned __int8 *)(a1 + v6);
    if (v7 >= 3)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v7 == 1)
    {
      sub_247763BE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    v9 = *((unsigned __int8 *)a2 + v6);
    if (v9 >= 3)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 2)
    {
      *(_QWORD *)a1 = *a2;
      *(_QWORD *)(a1 + 8) = a2[1];
      *(_BYTE *)(a1 + v6) = 2;
      sub_2478B6DA0();
    }
    else if (v9 == 1)
    {
      v11 = *a2;
      v12 = a2[1];
      v13 = *((_BYTE *)a2 + 16);
      sub_247763A00(*a2, v12, v13);
      *(_QWORD *)a1 = v11;
      *(_QWORD *)(a1 + 8) = v12;
      *(_BYTE *)(a1 + 16) = v13;
      v14 = a2[6];
      *(_QWORD *)(a1 + 48) = v14;
      *(_QWORD *)(a1 + 56) = a2[7];
      (**(void (***)(uint64_t, uint64_t))(v14 - 8))(a1 + 24, (uint64_t)(a2 + 3));
      *(_BYTE *)(a1 + v6) = 1;
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      *(_BYTE *)(a1 + v6) = 0;
    }
  }
  return a1;
}

_OWORD *sub_247764FF4(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  char v11;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  if (*(_QWORD *)(v5 + 64) <= 0x40uLL)
    v6 = 64;
  else
    v6 = *(_QWORD *)(v5 + 64);
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 3)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 2)
  {
    *a1 = *a2;
    v11 = 2;
  }
  else if (v7 == 1)
  {
    v9 = a2[1];
    *a1 = *a2;
    a1[1] = v9;
    v10 = a2[3];
    a1[2] = a2[2];
    a1[3] = v10;
    v11 = 1;
  }
  else
  {
    (*(void (**)(_OWORD *, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    v11 = 0;
  }
  *((_BYTE *)a1 + v6) = v11;
  return a1;
}

uint64_t sub_247765110(uint64_t a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  __int128 v11;
  __int128 v12;
  char v13;

  if ((_OWORD *)a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    if (*(_QWORD *)(v5 + 64) <= 0x40uLL)
      v6 = 64;
    else
      v6 = *(_QWORD *)(v5 + 64);
    v7 = *(unsigned __int8 *)(a1 + v6);
    if (v7 >= 3)
    {
      if (v6 <= 3)
        v8 = v6;
      else
        v8 = 4;
      __asm { BR              X12 }
    }
    if (v7 == 2)
    {
      swift_bridgeObjectRelease();
    }
    else if (v7 == 1)
    {
      sub_247763BE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
      __swift_destroy_boxed_opaque_existential_1(a1 + 24);
    }
    else
    {
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    v9 = *((unsigned __int8 *)a2 + v6);
    if (v9 >= 3)
    {
      if (v6 <= 3)
        v10 = v6;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 2)
    {
      *(_OWORD *)a1 = *a2;
      v13 = 2;
    }
    else if (v9 == 1)
    {
      v11 = a2[1];
      *(_OWORD *)a1 = *a2;
      *(_OWORD *)(a1 + 16) = v11;
      v12 = a2[3];
      *(_OWORD *)(a1 + 32) = a2[2];
      *(_OWORD *)(a1 + 48) = v12;
      v13 = 1;
    }
    else
    {
      (*(void (**)(uint64_t, _OWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
      v13 = 0;
    }
    *(_BYTE *)(a1 + v6) = v13;
  }
  return a1;
}

uint64_t sub_2477652F4(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  char v7;
  int v8;
  unsigned int v10;
  int v11;
  unsigned int v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = 64;
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) > 0x40uLL)
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (!a2)
    return 0;
  if (a2 < 0xFE)
    goto LABEL_21;
  v6 = v5 + 1;
  v7 = 8 * (v5 + 1);
  if ((v5 + 1) <= 3)
  {
    v10 = ((a2 + ~(-1 << v7) - 253) >> v7) + 1;
    if (HIWORD(v10))
    {
      v8 = *(_DWORD *)(a1 + v6);
      if (!v8)
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 > 0xFF)
    {
      v8 = *(unsigned __int16 *)(a1 + v6);
      if (!*(_WORD *)(a1 + v6))
        goto LABEL_21;
      goto LABEL_14;
    }
    if (v10 < 2)
    {
LABEL_21:
      v12 = *(unsigned __int8 *)(a1 + v5);
      if (v12 >= 3)
        return (v12 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v8 = *(unsigned __int8 *)(a1 + v6);
  if (!*(_BYTE *)(a1 + v6))
    goto LABEL_21;
LABEL_14:
  v11 = (v8 - 1) << v7;
  if (v6 > 3)
    v11 = 0;
  if ((_DWORD)v6)
  {
    if (v6 > 3)
      LODWORD(v6) = 4;
    __asm { BR              X11 }
  }
  return (v11 + 254);
}

void sub_247765434(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v6 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v6 <= 0x40)
    v6 = 64;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if (a3 < 0xFE)
  {
    v9 = 0;
  }
  else if (v7 <= 3)
  {
    v11 = ((a3 + ~(-1 << v8) - 253) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v10 = a2 - 254;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v12 = v10 & ~(-1 << v8);
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *(_WORD *)a1 = v12;
        a1[2] = BYTE2(v12);
      }
      else if ((_DWORD)v7 == 2)
      {
        *(_WORD *)a1 = v12;
      }
      else
      {
        *a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_2477655F4(uint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64);
  if (v2 <= 0x40)
    v2 = 64;
  result = *(unsigned __int8 *)(a1 + v2);
  if (result >= 3)
  {
    if (v2 <= 3)
      v4 = v2;
    else
      v4 = 4;
    __asm { BR              X12 }
  }
  return result;
}

void sub_2477656B0(_BYTE *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  if (*(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64) <= 0x40uLL)
    v5 = 64;
  else
    v5 = *(_QWORD *)(*(_QWORD *)(AssociatedTypeWitness - 8) + 64);
  if (a2 > 2)
  {
    v6 = a2 - 3;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 3;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 3;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t type metadata accessor for FacetElementAvailability(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for FacetElementAvailability);
}

uint64_t dispatch thunk of FacetElement.init<A>(facet:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of FacetElement.prepare(in:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  OUTLINED_FUNCTION_110();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247768144;
  v2 = OUTLINED_FUNCTION_241();
  return v4(v2);
}

uint64_t dispatch thunk of FacetElement.availability<A>(of:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_142();
  v0 = OUTLINED_FUNCTION_9_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_73(v1);
  return OUTLINED_FUNCTION_58(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of FacetElement.contains<A>(facet:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 72))();
}

uint64_t dispatch thunk of FacetElement.value<A, B>(from:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  uint64_t (*v28)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v29;

  OUTLINED_FUNCTION_85();
  v29 = v10;
  v12 = v11;
  v14 = v13;
  v16 = v15;
  v18 = v17;
  v20 = v19;
  v22 = v21;
  v24 = v23;
  v25 = OUTLINED_FUNCTION_7_1();
  v26 = (_QWORD *)OUTLINED_FUNCTION_78(v25);
  *v26 = v9;
  v26[1] = sub_247768144;
  return v28(v24, v22, v20, v18, v16, v14, v12, v29, a9);
}

uint64_t dispatch thunk of FacetElementRequest.perform()(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t (*v7)(void);

  v5 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_247768144;
  return OUTLINED_FUNCTION_82(a1, a2, v7);
}

uint64_t dispatch thunk of FacetElementRequest.split()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of FacetElementRequest.hasResponse<A>(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 32))();
}

uint64_t sub_247765944()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24776594C()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  uint64_t result;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  result = type metadata accessor for ContentRegistration(319, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  if (v4 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v5 <= 0x3F)
    {
      result = swift_checkMetadataState();
      if (v6 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_247765B00(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  unint64_t v22;
  int v23;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(uint64_t *, uint64_t *, uint64_t);
  uint64_t *v29;
  uint64_t *v30;
  uint64_t *v31;
  unsigned int v32;
  BOOL v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  _QWORD *v39;
  _QWORD *v40;
  unint64_t v41;
  unint64_t v42;
  unint64_t v43;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t AssociatedTypeWitness;

  v3 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v4 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  v7 = v6 & 0xF8 | 7;
  v50 = v5 + v7;
  v8 = (v5 + v7) & ~v7;
  v49 = v5 + 7;
  v9 = (v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  v10 = v9 + 8;
  v11 = v9 + 16;
  if (v10 > v11)
    v11 = v10;
  if (v11 <= 8)
    v12 = 8;
  else
    v12 = v11;
  v13 = v8 + v12;
  v14 = swift_getAssociatedTypeWitness();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(_DWORD *)(v15 + 80);
  v17 = v16;
  v18 = v13 + v16 + 1;
  v51 = v3;
  v19 = *(_QWORD *)(v3 - 8);
  v20 = *(_DWORD *)(v19 + 80);
  v21 = v20;
  v22 = v16 | (unint64_t)v20 | v7;
  v23 = (v16 | v6 | v20) & 0x100000;
  if (v22 == 7
    && v23 == 0
    && ((*(_QWORD *)(v19 + 64)
       + 7
       + ((*(_QWORD *)(v15 + 64) + v20 + (v18 & ~v17)) & ~(unint64_t)v20)) & 0xFFFFFFFFFFFFFFF8)
     + 8 <= 0x18)
  {
    v45 = *(_QWORD *)(v15 + 64) + v20;
    v46 = *(_QWORD *)(v19 + 64) + 7;
    v47 = *(_QWORD *)(v3 - 8);
    v48 = v14;
    v27 = ~v7;
    v28 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v4 + 16);
    v29 = a1;
    v28(a1, a2, AssociatedTypeWitness);
    v30 = (uint64_t *)(((unint64_t)a1 + v50) & v27);
    v31 = (uint64_t *)(((unint64_t)a2 + v50) & v27);
    v32 = *((unsigned __int8 *)v31 + v12);
    v33 = v32 < 3 || (v12 & 0xFFFFFFF8) == 0;
    v34 = v12;
    if (!v33)
      v32 = *(_DWORD *)v31 + 3;
    v35 = ~v17;
    v36 = ~v21;
    if (v32 == 2)
    {
      v38 = v34;
      v28(v30, v31, AssociatedTypeWitness);
      v39 = (_QWORD *)(((unint64_t)v30 + v49) & 0xFFFFFFFFFFFFFFF8);
      v40 = (_QWORD *)(((unint64_t)v31 + v49) & 0xFFFFFFFFFFFFFFF8);
      *v39 = *v40;
      v39[1] = v40[1];
      *((_BYTE *)v30 + v38) = 2;
    }
    else
    {
      if (v32 == 1)
      {
        v37 = v34;
        v28(v30, v31, AssociatedTypeWitness);
        *(_QWORD *)(((unint64_t)v30 + v49) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v31 + v49) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v30 + v37) = 1;
LABEL_26:
        v41 = ((unint64_t)a2 + v18) & v35;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v15 + 16))(((unint64_t)a1 + v18) & v35, v41, v48);
        v42 = (v45 + (((unint64_t)a1 + v18) & v35)) & v36;
        v43 = (v45 + v41) & v36;
        (*(void (**)(unint64_t, unint64_t, uint64_t))(v47 + 16))(v42, v43, v51);
        *(_QWORD *)((v46 + v42) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v46 + v43) & 0xFFFFFFFFFFFFF8);
        goto LABEL_27;
      }
      *v30 = *v31;
      *((_BYTE *)v30 + v34) = 0;
    }
    sub_2478B6DA0();
    goto LABEL_26;
  }
  v26 = *a2;
  *a1 = *a2;
  v29 = (uint64_t *)(v26 + ((v22 + 16) & ~v22));
LABEL_27:
  swift_retain();
  return v29;
}

uint64_t sub_247765EB4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v22;

  v3 = *(_QWORD *)(a2 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v9 = v7 + v8;
  v22 = a1;
  v10 = (_DWORD *)((v7 + v8 + a1) & ~v8);
  v11 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 16;
  if (v12 > v13)
    v13 = v12;
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = v13;
  v15 = *((unsigned __int8 *)v10 + v14);
  if (v15 >= 3 && (v14 & 0xFFFFFFF8) != 0)
    v15 = *v10 + 3;
  v17 = ~v8;
  if (v15 == 2)
  {
    v6((uint64_t)v10, AssociatedTypeWitness);
    goto LABEL_15;
  }
  if (v15 != 1)
  {
LABEL_15:
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  v6((uint64_t)v10, AssociatedTypeWitness);
LABEL_16:
  v18 = swift_getAssociatedTypeWitness();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = (v22 + v14 + (v9 & v17) + *(unsigned __int8 *)(v19 + 80) + 1) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  (*(void (**)(unint64_t, uint64_t))(v19 + 8))(v20, v18);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))((v20 + *(_QWORD *)(v19 + 64) + *(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v3 - 8) + 80), v3);
  return swift_release();
}

uint64_t sub_247766144(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v21;
  _QWORD *v22;
  _QWORD *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
  v8(a1, a2, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v11 = v9 + v10;
  v36 = a2;
  v37 = a1;
  v12 = (_QWORD *)((v9 + v10 + a1) & ~v10);
  v13 = (_DWORD *)((v9 + v10 + a2) & ~v10);
  v14 = v9 + 7;
  v15 = (v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 16;
  if (v16 > v17)
    v17 = v16;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  v19 = *((unsigned __int8 *)v13 + v18);
  if (v19 >= 3 && (v18 & 0xFFFFFFF8) != 0)
    v19 = *v13 + 3;
  v21 = ~v10;
  if (v19 == 2)
  {
    v8((uint64_t)v12, (uint64_t)v13, AssociatedTypeWitness);
    v22 = (_QWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFFFF8);
    v23 = (_QWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    v22[1] = v23[1];
    *((_BYTE *)v12 + v18) = 2;
LABEL_16:
    sub_2478B6DA0();
    goto LABEL_17;
  }
  if (v19 != 1)
  {
    *v12 = *(_QWORD *)v13;
    *((_BYTE *)v12 + v18) = 0;
    goto LABEL_16;
  }
  v8((uint64_t)v12, (uint64_t)v13, AssociatedTypeWitness);
  *(_QWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFF8);
  *((_BYTE *)v12 + v18) = 1;
LABEL_17:
  v24 = swift_getAssociatedTypeWitness();
  v25 = *(_QWORD *)(v24 - 8);
  v26 = *(unsigned __int8 *)(v25 + 80);
  v27 = (v11 & v21) + v26 + (v18 | 1);
  v28 = (v27 + v37) & ~v26;
  v29 = (v27 + v36) & ~v26;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v25 + 16))(v28, v29, v24);
  v30 = *(_QWORD *)(v5 - 8);
  v31 = *(unsigned __int8 *)(v30 + 80);
  v32 = *(_QWORD *)(v25 + 64) + v31;
  v33 = (v32 + v28) & ~v31;
  v34 = (v32 + v29) & ~v31;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v30 + 16))(v33, v34, v5);
  *(_QWORD *)((*(_QWORD *)(v30 + 64) + 7 + v33) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v30 + 64) + 7 + v34) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return v37;
}

uint64_t sub_247766460(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v21;
  _QWORD *v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v5 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v10 = v8 + v9;
  v39 = a2;
  v40 = a1;
  v11 = ~v9;
  v12 = (_DWORD *)((v8 + v9 + a1) & ~v9);
  v13 = (_DWORD *)((v8 + v9 + a2) & ~v9);
  v14 = v8 + 7;
  v15 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 16;
  if (v16 > v17)
    v17 = v16;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  if (v12 != v13)
  {
    v19 = *((unsigned __int8 *)v12 + v18);
    if ((v18 & 0xFFFFFFF8) != 0 && v19 >= 3)
      v19 = *v12 + 3;
    v38 = v11;
    if (v19 == 2)
    {
      (*(void (**)(_DWORD *, uint64_t))(v7 + 8))(v12, AssociatedTypeWitness);
    }
    else if (v19 == 1)
    {
      (*(void (**)(_DWORD *, uint64_t))(v7 + 8))(v12, AssociatedTypeWitness);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_18:
    v21 = *((unsigned __int8 *)v13 + v18);
    if ((v18 & 0xFFFFFFF8) != 0 && v21 >= 3)
      v21 = *v13 + 3;
    if (v21 == 2)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v7 + 16))(v12, v13, AssociatedTypeWitness);
      v23 = (_QWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFFFF8);
      v24 = (_QWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFFFF8);
      *v23 = *v24;
      v23[1] = v24[1];
      *((_BYTE *)v12 + v18) = 2;
    }
    else
    {
      if (v21 == 1)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v7 + 16))(v12, v13, AssociatedTypeWitness);
        *(_QWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v12 + v18) = 1;
LABEL_30:
        v11 = v38;
        goto LABEL_31;
      }
      *(_QWORD *)v12 = *(_QWORD *)v13;
      *((_BYTE *)v12 + v18) = 0;
    }
    sub_2478B6DA0();
    goto LABEL_30;
  }
LABEL_31:
  v25 = v10 & v11;
  v26 = swift_getAssociatedTypeWitness();
  v27 = *(_QWORD *)(v26 - 8);
  v28 = *(unsigned __int8 *)(v27 + 80);
  v29 = v25 + v28 + (v18 | 1);
  v30 = (v29 + v40) & ~v28;
  v31 = (v29 + v39) & ~v28;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v27 + 24))(v30, v31, v26);
  v32 = *(_QWORD *)(v5 - 8);
  v33 = *(unsigned __int8 *)(v32 + 80);
  v34 = *(_QWORD *)(v27 + 64) + v33;
  v35 = (v34 + v30) & ~v33;
  v36 = (v34 + v31) & ~v33;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v32 + 24))(v35, v36, v5);
  *(_QWORD *)((*(_QWORD *)(v32 + 64) + 7 + v35) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v32 + 64)
                                                                                       + 7
                                                                                       + v36) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return v40;
}

uint64_t sub_247766804(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v5 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  v36 = v5;
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32);
  v8(a1, a2, AssociatedTypeWitness);
  v9 = *(_QWORD *)(v7 + 64);
  v10 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v11 = v9 + v10;
  v37 = a1;
  v12 = (_QWORD *)((v9 + v10 + a1) & ~v10);
  v35 = a2;
  v13 = (_DWORD *)((v9 + v10 + a2) & ~v10);
  v14 = v9 + 7;
  v15 = (v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 16;
  if (v16 > v17)
    v17 = v16;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  v19 = *((unsigned __int8 *)v13 + v18);
  if (v19 >= 3 && (v18 & 0xFFFFFFF8) != 0)
    v19 = *v13 + 3;
  v21 = ~v10;
  if (v19 == 2)
  {
    v8((uint64_t)v12, (uint64_t)v13, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFF8);
    v22 = 2;
  }
  else if (v19 == 1)
  {
    v8((uint64_t)v12, (uint64_t)v13, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFF8);
    v22 = 1;
  }
  else
  {
    v22 = 0;
    *v12 = *(_QWORD *)v13;
  }
  *((_BYTE *)v12 + v18) = v22;
  v23 = swift_getAssociatedTypeWitness();
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (v11 & v21) + v25 + (v18 | 1);
  v27 = (v26 + v37) & ~v25;
  v28 = (v26 + v35) & ~v25;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 32))(v27, v28, v23);
  v29 = *(_QWORD *)(v36 - 8);
  v30 = *(unsigned __int8 *)(v29 + 80);
  v31 = *(_QWORD *)(v24 + 64) + v30;
  v32 = (v31 + v27) & ~v30;
  v33 = (v31 + v28) & ~v30;
  (*(void (**)(uint64_t, uint64_t))(v29 + 32))(v32, v33);
  *(_QWORD *)((*(_QWORD *)(v29 + 64) + 7 + v32) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v29 + 64) + 7 + v33) & 0xFFFFFFFFFFFFF8);
  return v37;
}

uint64_t sub_247766B14(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _DWORD *v12;
  _DWORD *v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unsigned int v19;
  unsigned int v21;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v5 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, AssociatedTypeWitness);
  v8 = *(_QWORD *)(v7 + 64);
  v9 = *(_DWORD *)(v7 + 80) & 0xF8 | 7;
  v10 = v8 + v9;
  v38 = a2;
  v39 = a1;
  v11 = ~v9;
  v12 = (_DWORD *)((v8 + v9 + a1) & ~v9);
  v13 = (_DWORD *)((v8 + v9 + a2) & ~v9);
  v14 = v8 + 7;
  v15 = (v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  v16 = v15 + 8;
  v17 = v15 + 16;
  if (v16 > v17)
    v17 = v16;
  if (v17 <= 8)
    v18 = 8;
  else
    v18 = v17;
  if (v12 != v13)
  {
    v19 = *((unsigned __int8 *)v12 + v18);
    if ((v18 & 0xFFFFFFF8) != 0 && v19 >= 3)
      v19 = *v12 + 3;
    v37 = v11;
    if (v19 == 2)
    {
      (*(void (**)(_DWORD *, uint64_t))(v7 + 8))(v12, AssociatedTypeWitness);
    }
    else if (v19 == 1)
    {
      (*(void (**)(_DWORD *, uint64_t))(v7 + 8))(v12, AssociatedTypeWitness);
LABEL_18:
      v21 = *((unsigned __int8 *)v13 + v18);
      if ((v18 & 0xFFFFFFF8) != 0 && v21 >= 3)
        v21 = *v13 + 3;
      if (v21 == 2)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v7 + 32))(v12, v13, AssociatedTypeWitness);
        *(_OWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFF8);
        v23 = 2;
      }
      else if (v21 == 1)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v7 + 32))(v12, v13, AssociatedTypeWitness);
        *(_QWORD *)(((unint64_t)v12 + v14) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v13 + v14) & 0xFFFFFFFFFFFFF8);
        v23 = 1;
      }
      else
      {
        v23 = 0;
        *(_QWORD *)v12 = *(_QWORD *)v13;
      }
      v11 = v37;
      *((_BYTE *)v12 + v18) = v23;
      goto LABEL_30;
    }
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
LABEL_30:
  v24 = v10 & v11;
  v25 = swift_getAssociatedTypeWitness();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = *(unsigned __int8 *)(v26 + 80);
  v28 = v24 + v27 + (v18 | 1);
  v29 = (v28 + v39) & ~v27;
  v30 = (v28 + v38) & ~v27;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 40))(v29, v30, v25);
  v31 = *(_QWORD *)(v5 - 8);
  v32 = *(unsigned __int8 *)(v31 + 80);
  v33 = *(_QWORD *)(v26 + 64) + v32;
  v34 = (v33 + v29) & ~v32;
  v35 = (v33 + v30) & ~v32;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 40))(v34, v35, v5);
  *(_QWORD *)((*(_QWORD *)(v31 + 64) + 7 + v34) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)((*(_QWORD *)(v31 + 64)
                                                                                       + 7
                                                                                       + v35) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return v39;
}

uint64_t sub_247766EA0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;
  unsigned int v31;
  unint64_t v32;
  uint64_t AssociatedTypeWitness;

  v4 = *(_QWORD *)(a3 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  v10 = v8 + 16;
  if (v9 > v10)
    v10 = v9;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  if (v6 <= 0xFD)
    v12 = 253;
  else
    v12 = *(_DWORD *)(v5 + 84);
  v13 = swift_getAssociatedTypeWitness();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = *(unsigned int *)(v14 + 84);
  if (v15 <= v12)
    v16 = v12;
  else
    v16 = *(_DWORD *)(v14 + 84);
  v17 = *(_QWORD *)(v4 - 8);
  v18 = *(unsigned int *)(v17 + 84);
  if (v18 > v16)
    v16 = *(_DWORD *)(v17 + 84);
  if (v16 <= 0x7FFFFFFE)
    v16 = 2147483646;
  if (!a2)
    return 0;
  v19 = v13;
  v20 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v21 = *(unsigned __int8 *)(v14 + 80);
  v22 = v21 + ((v7 + v20) & ~v20) + v11 + 1;
  v23 = *(unsigned __int8 *)(v17 + 80);
  v24 = *(_QWORD *)(v14 + 64) + v23;
  v25 = *(_QWORD *)(v17 + 64) + 7;
  v26 = a1;
  if (v16 < a2)
  {
    if (((((v25 + ((v24 + (v22 & ~v21)) & ~v23)) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v27 = 2;
    else
      v27 = a2 - v16 + 1;
    if (v27 >= 0x10000)
      v28 = 4;
    else
      v28 = 2;
    if (v27 < 0x100)
      v28 = 1;
    if (v27 >= 2)
      v29 = v28;
    else
      v29 = 0;
    __asm { BR              X5 }
  }
  if (v12 == v16)
  {
    if (v6 >= 0xFD)
    {
      v18 = v6;
      v19 = AssociatedTypeWitness;
      return __swift_getEnumTagSinglePayload(v26, v18, v19);
    }
    v31 = *(unsigned __int8 *)(((v7 + v20 + a1) & ~v20) + v11);
    if (v31 >= 3)
      return (v31 ^ 0xFF) + 1;
    else
      return 0;
  }
  else
  {
    v26 = (v22 + a1) & ~v21;
    if ((_DWORD)v15 == v16)
    {
      v18 = v15;
      return __swift_getEnumTagSinglePayload(v26, v18, v19);
    }
    v26 = (v24 + v26) & ~v23;
    if ((_DWORD)v18 == v16)
    {
      v19 = v4;
      return __swift_getEnumTagSinglePayload(v26, v18, v19);
    }
    v32 = *(_QWORD *)((v25 + v26) & 0xFFFFFFFFFFFFF8);
    if (v32 >= 0xFFFFFFFF)
      LODWORD(v32) = -1;
    if ((v32 + 1) >= 2)
      return v32;
    else
      return 0;
  }
}

void sub_247767220(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  unsigned int v18;
  int v19;
  int v20;
  unsigned int v21;

  v5 = *(_QWORD *)(a4 + 16);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  v10 = v8 + 16;
  if (v9 > v10)
    v10 = v9;
  if (v10 <= 8)
    v11 = 8;
  else
    v11 = v10;
  if (*(_DWORD *)(v6 + 84) <= 0xFDu)
    v12 = 253;
  else
    v12 = *(_DWORD *)(v6 + 84);
  v13 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  if (*(_DWORD *)(v13 + 84) <= v12)
    v14 = v12;
  else
    v14 = *(_DWORD *)(v13 + 84);
  v15 = *(_QWORD *)(v5 - 8);
  if (*(_DWORD *)(v15 + 84) > v14)
    v14 = *(_DWORD *)(v15 + 84);
  if (v14 <= 0x7FFFFFFE)
    v14 = 2147483646;
  v16 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v17 = ((*(_QWORD *)(v15 + 64)
        + 7
        + ((*(_QWORD *)(v13 + 64)
          + *(unsigned __int8 *)(v15 + 80)
          + ((((v7 + v16) & ~v16) + *(unsigned __int8 *)(v13 + 80) + (v11 | 1)) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80))) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80))) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v14 >= a3)
  {
    v20 = 0;
  }
  else
  {
    if (((*(_DWORD *)(v15 + 64)
         + 7
         + ((*(_DWORD *)(v13 + 64)
           + *(unsigned __int8 *)(v15 + 80)
           + (((((_DWORD)v7 + (_DWORD)v16) & ~(_DWORD)v16) + *(unsigned __int8 *)(v13 + 80) + (v11 | 1)) & ~*(unsigned __int8 *)(v13 + 80))) & ~*(unsigned __int8 *)(v15 + 80))) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v18 = a3 - v14 + 1;
    else
      v18 = 2;
    if (v18 >= 0x10000)
      v19 = 4;
    else
      v19 = 2;
    if (v18 < 0x100)
      v19 = 1;
    if (v18 >= 2)
      v20 = v19;
    else
      v20 = 0;
  }
  if (a2 > v14)
  {
    if ((_DWORD)v17)
    {
      v21 = ~v14 + a2;
      bzero(a1, v17);
      *a1 = v21;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

void sub_2477674E4(size_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X6>, uint64_t a5@<X8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21)
{
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  int v38;
  _QWORD *v39;
  uint64_t v40;

  *(_BYTE *)(v31 + v33) = 0;
  if ((_DWORD)a4)
  {
    if (v29 == v21)
    {
      if (v32 >= 0xFD)
      {
        v35 = v31;
        v36 = a4;
        a2 = v32;
        a3 = v40;
LABEL_11:
        __swift_storeEnumTagSinglePayload(v35, v36, a2, a3);
        return;
      }
      v37 = (void *)((v22 + v31) & v26);
      if (a4 > 0xFD)
      {
        if (a1 <= 3)
          v38 = a1;
        else
          v38 = 4;
        bzero(v37, a1);
        __asm { BR              X10 }
      }
      *((_BYTE *)v37 + v34) = -(char)a4;
    }
    else
    {
      v35 = (v25 + v31) & v28;
      if ((_DWORD)a5 == v21)
      {
        v36 = a4;
        a2 = a5;
        goto LABEL_11;
      }
      v35 = (v24 + v35) & v27;
      if ((_DWORD)a2 == v21)
      {
        v36 = a4;
        a3 = v30;
        goto LABEL_11;
      }
      v39 = (_QWORD *)((v23 + v35) & 0xFFFFFFFFFFFFFFF8);
      if (a4 > 0x7FFFFFFE)
      {
        *v39 = 0;
        *(_DWORD *)v39 = a4 - 0x7FFFFFFF;
      }
      else
      {
        *v39 = a4;
      }
    }
  }
}

void sub_24776762C()
{
  __int16 v0;
  _WORD *v1;

  *v1 = v0;
}

void sub_247767634()
{
  int v0;
  uint64_t v1;

  *(_WORD *)v1 = v0;
  *(_BYTE *)(v1 + 2) = BYTE2(v0);
}

uint64_t destroy for FacetAvailability(uint64_t a1)
{
  return sub_247763BE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void _s8SonicKit17FacetAvailabilityOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_247763A00(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  OUTLINED_FUNCTION_28();
}

uint64_t assignWithCopy for FacetAvailability(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_247763A00(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_247763BE8(v6, v7, v8);
  return a1;
}

__n128 __swift_memcpy17_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for FacetAvailability(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_247763BE8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for FacetAvailability(uint64_t a1, unsigned int a2)
{
  int v2;
  unsigned int v3;

  if (a2)
  {
    if (a2 >= 0xFD && *(_BYTE *)(a1 + 17))
    {
      v2 = *(_DWORD *)a1 + 252;
    }
    else
    {
      v3 = *(unsigned __int8 *)(a1 + 16);
      if (v3 <= 3)
        v2 = -1;
      else
        v2 = v3 ^ 0xFF;
    }
  }
  else
  {
    v2 = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FacetAvailability(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 253;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFD)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_2477677F0(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_2477677F8(uint64_t result, char a2)
{
  *(_BYTE *)(result + 16) = a2;
  return result;
}

void type metadata accessor for FacetAvailability()
{
  OUTLINED_FUNCTION_34();
}

uint64_t storeEnumTagSinglePayload for FacetSpeed(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_247767858 + 4 * byte_2478B8365[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_24776788C + 4 * byte_2478B8360[v4]))();
}

uint64_t sub_24776788C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247767894(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24776789CLL);
  return result;
}

uint64_t sub_2477678A8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2477678B0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_2477678B4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2477678BC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for FacetSpeed()
{
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2477678D4()
{
  unint64_t result;

  result = qword_2576C1E10;
  if (!qword_2576C1E10)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_2576C1E10);
  }
  return result;
}

unint64_t sub_247767914()
{
  unint64_t result;

  result = qword_2576C1E18;
  if (!qword_2576C1E18)
  {
    result = swift_getFunctionTypeMetadata0();
    atomic_store(result, (unint64_t *)&qword_2576C1E18);
  }
  return result;
}

void sub_247767958()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1E28)
  {
    sub_247758170(255, (unint64_t *)&qword_25444CC38);
    v0 = sub_2478B73C4();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1E28);
  }
}

uint64_t dynamic_cast_existential_0_class_conditional(uint64_t a1)
{
  if (swift_isClassType())
    return a1;
  else
    return 0;
}

uint64_t sub_2477679FC()
{
  return OUTLINED_FUNCTION_149();
}

uint64_t sub_247767A08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2477604E8(a1, *(_QWORD *)(v2 + 40), a2);
}

void sub_247767A38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1E38)
  {
    sub_247763844(255, &qword_2576C1B38);
    sub_247767D38(&qword_2576C1E40, &qword_2576C1B38);
    v0 = sub_2478B71C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1E38);
  }
}

uint64_t sub_247767AE8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0[9] + 32))(v0[10], v0[4], v0[8], v0[5]) & 1;
}

uint64_t __swift_deallocate_boxed_opaque_existential_0(uint64_t result)
{
  if ((*(_DWORD *)(*(_QWORD *)(*(_QWORD *)(result + 24) - 8) + 80) & 0x20000) != 0)
    JUMPOUT(0x2495832B4);
  return result;
}

void sub_247767B5C(uint64_t a1, unint64_t *a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t))
{
  unint64_t v5;
  uint64_t v6;

  if (!*a2)
  {
    v5 = a4(0, a3);
    if (!v6)
      atomic_store(v5, a2);
  }
}

void sub_247767BA0(uint64_t a1, uint64_t a2, void (*a3)(_QWORD))
{
  uint64_t v3;
  void (*v4)(uint64_t);

  a3(0);
  v3 = OUTLINED_FUNCTION_10();
  v4(v3);
  OUTLINED_FUNCTION_12();
}

void sub_247767BDC()
{
  unint64_t TupleTypeMetadata2;
  uint64_t v1;

  if (!qword_2576C1E50)
  {
    sub_247758170(255, &qword_2576C1A58);
    sub_247758170(255, &qword_2576C1A60);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    if (!v1)
      atomic_store(TupleTypeMetadata2, (unint64_t *)&qword_2576C1E50);
  }
}

uint64_t sub_247767C68()
{
  return OUTLINED_FUNCTION_149();
}

uint64_t sub_247767C74@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_24775E900(a1, *(_QWORD *)(v2 + 40), a2);
}

void sub_247767C88()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1E60)
  {
    sub_247763844(255, &qword_2576C1E68);
    sub_247767D38(&qword_2576C1E70, &qword_2576C1E68);
    v0 = sub_2478B71C0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1E60);
  }
}

void sub_247767D38(unint64_t *a1, unint64_t *a2)
{
  uint64_t v3;

  if (!*a1)
  {
    sub_247763844(255, a2);
    atomic_store(MEMORY[0x24958320C](MEMORY[0x24BEE12C8], v3), a1);
  }
  OUTLINED_FUNCTION_12();
}

void sub_247767D7C(unint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t a3)
{
  uint64_t v5;

  if (!*a1)
  {
    v5 = a2(255);
    atomic_store(MEMORY[0x24958320C](a3, v5), a1);
  }
  OUTLINED_FUNCTION_12();
}

uint64_t sub_247767DB8()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD, _QWORD))(v0[8] + 72))(v0[9], v0[3], v0[6], v0[5]) & 1;
}

void sub_247767DF8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1E80)
  {
    sub_247758170(255, &qword_2576C1AF8);
    sub_247758170(255, (unint64_t *)&qword_25444CC38);
    v0 = sub_2478B7058();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1E80);
  }
}

uint64_t sub_247767E84()
{
  uint64_t v0;

  swift_unknownObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocObject();
}

uint64_t sub_247767EB0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;

  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(_QWORD *)(v1 + 24);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_78(v6);
  *v7 = v2;
  v7[1] = sub_247768144;
  return sub_24775D61C(a1, v4, v5, v1 + 32);
}

uint64_t sub_247767F18(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247763890(0, &qword_2576C1E88, (uint64_t (*)(uint64_t))MEMORY[0x24BEE6990]);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_247767F74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD, uint64_t, uint64_t, uint64_t (*)(void)))
{
  uint64_t v4;

  v4 = a4(0, a2, a3, MEMORY[0x24BEE1C68]);
  OUTLINED_FUNCTION_6_1(v4);
  OUTLINED_FUNCTION_12();
}

uint64_t sub_247767FA8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247763844(0, (unint64_t *)&qword_2576C1A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24776800C(uint64_t a1, unint64_t *a2)
{
  uint64_t v2;

  sub_247763844(0, a2);
  OUTLINED_FUNCTION_6_1(v2);
  OUTLINED_FUNCTION_12();
}

uint64_t sub_24776803C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247763844(0, (unint64_t *)&qword_2576C1A38);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void sub_2477680A0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1EB0)
  {
    v0 = sub_2478B713C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C1EB0);
  }
}

void sub_2477680F0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v2;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v2 - 8))(a2, a1);
  OUTLINED_FUNCTION_12();
}

uint64_t OUTLINED_FUNCTION_0_3()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_2_2()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_3_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_4_2()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_5_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_7_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_8_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  sub_247763A00(v0, v2, 0);
  sub_247763A00(v1, v3, 0);
  sub_247763BE8(v1, v3, 0);
  return sub_247763BE8(v0, v2, 0);
}

uint64_t OUTLINED_FUNCTION_9_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_10_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_11_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_13_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_14_1()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_16_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_18_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_20_1(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_21_1()
{
  return sub_2478B6C98();
}

uint64_t OUTLINED_FUNCTION_22_1()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;

  v3 = *(_QWORD *)(v0 + 168);
  v2 = *(_QWORD *)(v0 + 176);
  __swift_project_boxed_opaque_existential_1(v1, v3);
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 24))(v3, v2);
}

uint64_t OUTLINED_FUNCTION_24_0()
{
  return sub_2478B6C98();
}

uint64_t OUTLINED_FUNCTION_25_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 168) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_26_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_27_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_28_0()
{
  return swift_arrayInitWithCopy();
}

uint64_t OUTLINED_FUNCTION_29()
{
  return sub_2478B6C98();
}

uint64_t OUTLINED_FUNCTION_30_0()
{
  return sub_2478B6CB0();
}

uint64_t OUTLINED_FUNCTION_31_0()
{
  return sub_2478B6C98();
}

uint64_t OUTLINED_FUNCTION_32_0()
{
  return sub_2478B6CA4();
}

uint64_t OUTLINED_FUNCTION_33_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_34_0()
{
  return swift_bridgeObjectRelease();
}

void OUTLINED_FUNCTION_35()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_36(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  sub_247763900(0, a2, a3);
}

uint64_t OUTLINED_FUNCTION_37(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

void OUTLINED_FUNCTION_38(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t (*v3)(uint64_t);

  sub_247767D7C(a1, v3, a3);
}

uint64_t OUTLINED_FUNCTION_39()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_40()
{
  return sub_2478B6C50();
}

uint64_t OUTLINED_FUNCTION_41@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_43()
{
  return sub_2478B6C5C();
}

uint64_t OUTLINED_FUNCTION_45()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_46(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_47(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24775BEC8(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_50()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_51()
{
  return sub_2478B6C74();
}

uint64_t OUTLINED_FUNCTION_52(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_53(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_24775BEC8(a1, a2, a3, a4);
}

uint64_t OUTLINED_FUNCTION_54()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_56()
{
  return sub_2478B6C68();
}

uint64_t OUTLINED_FUNCTION_57(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_59(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_61()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_62@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v3 + v2);
}

uint64_t OUTLINED_FUNCTION_63@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 40))(v3 + v2, a2);
}

uint64_t OUTLINED_FUNCTION_64()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_65()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_66()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_67()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_68@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 16))((char *)&a3 - ((a2 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v3);
}

uint64_t OUTLINED_FUNCTION_69()
{
  return sub_2478B7244();
}

uint64_t OUTLINED_FUNCTION_70()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 120) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_71(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_72()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_73(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

uint64_t OUTLINED_FUNCTION_74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

uint64_t OUTLINED_FUNCTION_75(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  *(_QWORD *)(v1 + 80) = *(_QWORD *)(a1 - 8);
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_76()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_77(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 128) = type metadata accessor for FacetBuildingPlan(0, v5, a1, a4);
  return v8(v7, v6);
}

uint64_t OUTLINED_FUNCTION_78(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_79()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_80()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(v0 + 32) + 40))(*(_QWORD *)(v0 + 24));
}

uint64_t OUTLINED_FUNCTION_81(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FacetBuildingPlan.addFacet<A>(_:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_82(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  return a3();
}

uint64_t OUTLINED_FUNCTION_83()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_86()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 776) = *(_QWORD *)(**(_QWORD **)(v0 + 624) + 128);
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_87()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_88()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_89()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_90()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_92()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v1, v2);
}

uint64_t OUTLINED_FUNCTION_93@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_94()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v0, v1);
}

uint64_t OUTLINED_FUNCTION_96()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_97(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
}

uint64_t OUTLINED_FUNCTION_99()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 40))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_100()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_103(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_104@<X0>(uint64_t a1@<X8>)
{
  return *(unsigned int *)(a1 + 4);
}

uint64_t OUTLINED_FUNCTION_106(uint64_t a1)
{
  return FacetBuildingPlan.optimize()(a1);
}

uint64_t OUTLINED_FUNCTION_107()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_108()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_109()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_113()
{
  return sub_2478B734C();
}

uint64_t OUTLINED_FUNCTION_114()
{
  uint64_t v0;

  return __swift_destroy_boxed_opaque_existential_1(v0);
}

uint64_t OUTLINED_FUNCTION_115()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_117()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_118()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_120@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 120);
}

uint64_t OUTLINED_FUNCTION_121@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *a1 = v3;
  a1[1] = a2;
  *(_QWORD *)(v5 + 16) = v4;
  return v2;
}

uint64_t OUTLINED_FUNCTION_122@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 8))();
}

void OUTLINED_FUNCTION_123()
{
  _QWORD *v0;
  _QWORD *v1;

  *v0 = *v1;
}

uint64_t OUTLINED_FUNCTION_127()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_129()
{
  uint64_t v0;
  uint64_t v1;

  return *(unsigned int *)(*(_QWORD *)(v1 + *(int *)(v0 + 40)) + 4);
}

uint64_t OUTLINED_FUNCTION_132()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v1 + 48))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_133()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_134(__int128 *a1)
{
  uint64_t v1;

  return sub_24775B884(a1, v1);
}

void OUTLINED_FUNCTION_135(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2477680F0(a1 + 32, v1);
}

void OUTLINED_FUNCTION_136(uint64_t a1@<X8>)
{
  uint64_t v1;

  sub_2477680F0(a1 + 32, v1 + 264);
}

uint64_t OUTLINED_FUNCTION_137(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t OUTLINED_FUNCTION_138@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_139(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

BOOL OUTLINED_FUNCTION_140@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_141(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t OUTLINED_FUNCTION_143()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_144()
{
  sub_24775BD04();
}

_QWORD *OUTLINED_FUNCTION_145()
{
  uint64_t v0;
  _QWORD *v1;

  return __swift_project_boxed_opaque_existential_1(v1, v0);
}

void OUTLINED_FUNCTION_146()
{
  uint64_t v0;
  uint64_t v1;

  sub_2477680F0(v1, v0);
}

uint64_t OUTLINED_FUNCTION_147()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_148()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_149()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_150()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_151()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_152@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 672);
}

uint64_t OUTLINED_FUNCTION_153@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 808);
}

uint64_t OUTLINED_FUNCTION_154()
{
  return sub_2478B728C();
}

uint64_t OUTLINED_FUNCTION_155()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t OUTLINED_FUNCTION_157()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_158(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t a5, uint64_t (*a6)(uint64_t, uint64_t, uint64_t))
{
  return sub_247761834(0, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_159()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_160()
{
  return sub_2478B6C68();
}

uint64_t OUTLINED_FUNCTION_161(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return type metadata accessor for ContentRegistration(0, v4, a1, a4);
}

uint64_t OUTLINED_FUNCTION_162()
{
  return sub_2478B6DA0();
}

_QWORD *OUTLINED_FUNCTION_164(_QWORD *result)
{
  uint64_t v1;
  uint64_t v2;

  *result = v2;
  result[1] = v1;
  return result;
}

uint64_t OUTLINED_FUNCTION_165(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_166()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_168()
{
  return swift_release();
}

double OUTLINED_FUNCTION_169()
{
  uint64_t v0;
  double result;

  *(_QWORD *)(v0 + 32) = 0;
  result = 0.0;
  *(_OWORD *)v0 = 0u;
  *(_OWORD *)(v0 + 16) = 0u;
  return result;
}

_QWORD *OUTLINED_FUNCTION_170()
{
  _QWORD *v0;
  uint64_t v1;

  return __swift_project_boxed_opaque_existential_1(v0, *(_QWORD *)(v1 + 320));
}

uint64_t OUTLINED_FUNCTION_171(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v1;
  return swift_allocateMetadataPack();
}

void OUTLINED_FUNCTION_172()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_173(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 64) = a1;
  return swift_checkMetadataState();
}

uint64_t OUTLINED_FUNCTION_175()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_176()
{
  return sub_2478B6D7C();
}

unint64_t OUTLINED_FUNCTION_177()
{
  return sub_247763954();
}

uint64_t OUTLINED_FUNCTION_178()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_179()
{
  return sub_2478B6FA4();
}

uint64_t OUTLINED_FUNCTION_180@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_182()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_183()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_247763BE8(v1, v2, 3);
  return v0;
}

uint64_t OUTLINED_FUNCTION_184()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_247763BE8(v1, v2, 1);
  return v0;
}

uint64_t OUTLINED_FUNCTION_185()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_247763BE8(v1, v2, 2);
  return v0;
}

uint64_t OUTLINED_FUNCTION_187()
{
  return swift_release();
}

BOOL OUTLINED_FUNCTION_188@<W0>(unint64_t a1@<X8>)
{
  return a1 > 1;
}

uint64_t OUTLINED_FUNCTION_189()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_190()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_191()
{
  char v0;
  uint64_t v1;
  uint64_t v2;

  return sub_247763A00(v2, v1, v0);
}

void OUTLINED_FUNCTION_192(uint64_t a1)
{
  uint64_t v1;

  sub_2477680F0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_193()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_197()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_198()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_200()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_202@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *a1 = v2;
  a1[1] = a2;
  return *(_QWORD *)(v2 + 40);
}

uint64_t OUTLINED_FUNCTION_203()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_205()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  return sub_247763BE8(v0, v1, v2);
}

uint64_t OUTLINED_FUNCTION_206(uint64_t a1, unint64_t *a2)
{
  return sub_247758170(0, a2);
}

void OUTLINED_FUNCTION_207(uint64_t a1, uint64_t a2)
{
  sub_2477617B8(0, a2);
}

void OUTLINED_FUNCTION_208()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

void OUTLINED_FUNCTION_209()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_210(__int128 *a1)
{
  uint64_t v1;

  return sub_24775B884(a1, v1);
}

uint64_t OUTLINED_FUNCTION_212()
{
  return swift_bridgeObjectRelease_n();
}

uint64_t OUTLINED_FUNCTION_213()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_214()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_215()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_217(uint64_t a1, unint64_t *a2)
{
  return sub_247758170(a1, a2);
}

void OUTLINED_FUNCTION_218()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_219(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_220()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_221()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_222()
{
  return swift_isUniquelyReferenced_nonNull_native();
}

uint64_t OUTLINED_FUNCTION_223()
{
  return swift_willThrow();
}

uint64_t OUTLINED_FUNCTION_225()
{
  return sub_2478B6F2C();
}

uint64_t OUTLINED_FUNCTION_226()
{
  return sub_2478B7250();
}

uint64_t OUTLINED_FUNCTION_227(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_228()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_229()
{
  return sub_2478B6F44();
}

uint64_t OUTLINED_FUNCTION_231(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  return v1(v2, a1);
}

uint64_t OUTLINED_FUNCTION_232()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_233(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = result;
  v4[3] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_236()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t result;

  result = *(_QWORD *)(v1 + v2);
  *(_QWORD *)(v0 + 760) = result;
  *(_QWORD *)(v0 + 768) = *(_QWORD *)(result + 16);
  return result;
}

uint64_t OUTLINED_FUNCTION_237()
{
  uint64_t v0;

  return sub_24775CE0C(v0);
}

uint64_t OUTLINED_FUNCTION_238()
{
  return sub_2478B6EA8();
}

uint64_t OUTLINED_FUNCTION_239@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_240(uint64_t a1, int64_t a2)
{
  uint64_t v2;

  return sub_247761D60(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_241()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_242()
{
  return sub_2478B6FA4();
}

uint64_t OUTLINED_FUNCTION_243(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, v2, v1);
}

uint64_t OUTLINED_FUNCTION_245()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_246()
{
  return swift_allocateWitnessTablePack();
}

uint64_t OUTLINED_FUNCTION_247()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_248@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return a2(a1, v3, v2);
}

uint64_t OUTLINED_FUNCTION_249(__int128 *a1)
{
  uint64_t v1;

  return sub_24775B884(a1, v1);
}

uint64_t OUTLINED_FUNCTION_250()
{
  uint64_t v0;

  return sub_24775CB8C(*(_QWORD *)(v0 + 104));
}

void OUTLINED_FUNCTION_252()
{
  JUMPOUT(0x24958320CLL);
}

uint64_t OUTLINED_FUNCTION_253(uint64_t a1)
{
  uint64_t v1;

  return sub_24776803C(a1, v1);
}

uint64_t OUTLINED_FUNCTION_254()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_255()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_256()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_257(uint64_t a1, uint64_t a2)
{
  char v2;

  return sub_247763BE8(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_259()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_260()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;

  sub_247763A00(v0, v2, v3);
  return v1;
}

uint64_t OUTLINED_FUNCTION_261()
{
  return sub_2478B6F68();
}

uint64_t sub_2477691B4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247754AC8();
}

uint64_t type metadata accessor for Renderer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Renderer);
}

id sub_247769218()
{
  return objc_msgSend((id)objc_opt_self(), sel_sharedInstance);
}

void Configuration.audioSession.getter()
{
  void (*v0)(id *@<X8>);
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  v0 = sub_247755A70();
  v2 = v1;
  swift_release();
  v3 = OUTLINED_FUNCTION_0_4();
  *(_QWORD *)(v3 + 16) = v0;
  *(_QWORD *)(v3 + 24) = v2;
  OUTLINED_FUNCTION_28();
}

uint64_t sub_24776929C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  Configuration.audioSession.getter();
  v3 = v2;
  result = swift_allocObject();
  *(_QWORD *)(result + 16) = sub_24776937C;
  *(_QWORD *)(result + 24) = v3;
  *a1 = sub_247769870;
  a1[1] = result;
  return result;
}

uint64_t sub_2477692F4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *a1;
  v2 = a1[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v1;
  *(_QWORD *)(v3 + 24) = v2;
  swift_retain();
  return Configuration.audioSession.setter((uint64_t)sub_24776988C, v3);
}

uint64_t sub_247769358()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24776937C()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t Configuration.audioSession.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getKeyPath();
  v4 = OUTLINED_FUNCTION_0_4();
  *(_QWORD *)(v4 + 16) = a1;
  *(_QWORD *)(v4 + 24) = a2;
  swift_retain();
  sub_247755EF8();
  return OUTLINED_FUNCTION_1_1();
}

void sub_247769414(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(uint64_t (**)(void))(v1 + 16))();
  OUTLINED_FUNCTION_12();
}

void Configuration.audioSession.modify(uint64_t (**a1)())
{
  uint64_t (*v1)();
  void (*v3)(id *@<X8>);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  a1[2] = v1;
  swift_getKeyPath();
  v3 = sub_247755A70();
  v5 = v4;
  OUTLINED_FUNCTION_8_0();
  v6 = OUTLINED_FUNCTION_0_4();
  *(_QWORD *)(v6 + 16) = v3;
  *(_QWORD *)(v6 + 24) = v5;
  *a1 = sub_24776988C;
  a1[1] = (uint64_t (*)())v6;
  OUTLINED_FUNCTION_28();
}

uint64_t sub_2477694A0(uint64_t *a1, char a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v4 = *a1;
  v3 = a1[1];
  swift_getKeyPath();
  v5 = OUTLINED_FUNCTION_0_4();
  *(_QWORD *)(v5 + 16) = v4;
  *(_QWORD *)(v5 + 24) = v3;
  if ((a2 & 1) != 0)
  {
    swift_retain_n();
    OUTLINED_FUNCTION_6_2();
    swift_release();
  }
  else
  {
    swift_retain();
    OUTLINED_FUNCTION_6_2();
  }
  return OUTLINED_FUNCTION_1_1();
}

id sub_247769544()
{
  qword_2576C1F58 = *MEMORY[0x24BDB15A8];
  return (id)qword_2576C1F58;
}

uint64_t Configuration.audioSessionCategory.getter()
{
  return sub_2477696F8((uint64_t)&unk_2478B8A10, (uint64_t (*)(void))sub_247755AE8);
}

uint64_t sub_247769570@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Configuration.audioSessionCategory.getter();
  *a1 = result;
  return result;
}

void sub_247769598(uint64_t *a1@<X8>)
{
  *a1 = Configuration.audioSessionCategory.getter();
  OUTLINED_FUNCTION_12();
}

void sub_2477695BC(id *a1)
{
  Configuration.audioSessionCategory.setter(*a1);
}

void Configuration.audioSessionCategory.setter(void *a1)
{
  id v2;

  swift_getKeyPath();
  v2 = a1;
  sub_247755F40((uint64_t)v2);
  OUTLINED_FUNCTION_2_3(v2);
}

void Configuration.audioSessionCategory.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  swift_getKeyPath();
  sub_247755AE8();
  v4 = v3;
  OUTLINED_FUNCTION_8_0();
  *a1 = v4;
  OUTLINED_FUNCTION_28();
}

void sub_247769678(void **a1, char a2)
{
  void *v3;
  id v4;
  id v5;
  void *v6;

  v3 = *a1;
  swift_getKeyPath();
  v4 = v3;
  v6 = v4;
  if ((a2 & 1) != 0)
  {
    v5 = v4;
    sub_247755F40((uint64_t)v5);

  }
  else
  {
    sub_247755F40((uint64_t)v4);
  }
  OUTLINED_FUNCTION_2_3(v6);
}

uint64_t Configuration.audioSessionOptions.getter()
{
  return sub_2477696F8((uint64_t)&unk_2478B8A38, (uint64_t (*)(void))sub_247755B94);
}

uint64_t sub_2477696F8(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3;

  swift_getKeyPath();
  v3 = a2();
  OUTLINED_FUNCTION_8_0();
  return v3;
}

uint64_t sub_247769734@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = Configuration.audioSessionOptions.getter();
  *a1 = result;
  return result;
}

void sub_24776975C(uint64_t *a1@<X8>)
{
  *a1 = Configuration.audioSessionOptions.getter();
  OUTLINED_FUNCTION_12();
}

void sub_247769780(uint64_t *a1)
{
  Configuration.audioSessionOptions.setter(*a1);
}

void sub_2477697A4(uint64_t *a1)
{
  Configuration.audioSessionOptions.setter(*a1);
  OUTLINED_FUNCTION_12();
}

void Configuration.audioSessionOptions.setter(uint64_t a1)
{
  swift_getKeyPath();
  sub_247755F78(a1);
}

void Configuration.audioSessionOptions.modify(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  a1[1] = v1;
  swift_getKeyPath();
  sub_247755B94();
  v4 = v3;
  OUTLINED_FUNCTION_8_0();
  *a1 = v4;
  OUTLINED_FUNCTION_28();
}

void sub_247769840(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  swift_getKeyPath();
  sub_247755F78(v1);
  OUTLINED_FUNCTION_12();
}

uint64_t OUTLINED_FUNCTION_0_4()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_1_1()
{
  return swift_release();
}

void OUTLINED_FUNCTION_2_3(id a1)
{

}

void OUTLINED_FUNCTION_6_2()
{
  sub_247755EF8();
}

uint64_t sub_2477698C8()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247754AC8();
}

uint64_t type metadata accessor for ContentManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentManager);
}

uint64_t sub_24776992C()
{
  uint64_t result;
  unint64_t v1;

  swift_getAssociatedTypeWitness();
  result = sub_2478B7148();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_2477699BC()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247769A14();
}

uint64_t sub_247769A14()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1[6] = v0;
  v1[7] = *v0;
  v2 = *v0;
  v1[8] = *(_QWORD *)(*(_QWORD *)(*v0 + 88) + 8);
  v1[9] = *(_QWORD *)(v2 + 80);
  v1[10] = swift_getAssociatedTypeWitness();
  v3 = sub_2478B7148();
  v1[11] = v3;
  v1[12] = *(_QWORD *)(v3 - 8);
  v1[13] = swift_task_alloc();
  sub_2478B6C5C();
  v1[14] = sub_2478B6C50();
  sub_247754E48();
  v1[15] = sub_2478B7010();
  v1[16] = v4;
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247769AE0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(_QWORD);

  v1 = v0[10];
  v2 = v0[8];
  v3 = v0[6];
  v4 = *(_QWORD *)(*(_QWORD *)v3 + 96);
  v0[17] = v4;
  __swift_storeEnumTagSinglePayload(v3 + v4, 1, 1, v1);
  v7 = (uint64_t (*)(_QWORD))(**(int **)(v2 + 24) + *(_QWORD *)(v2 + 24));
  v5 = (_QWORD *)swift_task_alloc();
  v0[18] = v5;
  *v5 = v0;
  v5[1] = sub_247769B6C;
  return v7(v0[13]);
}

uint64_t sub_247769B6C()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 152) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247769BC4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 136);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(_QWORD *)(v0 + 88);
  v4 = *(_QWORD *)(v0 + 96);
  v5 = *(_QWORD *)(v0 + 80);
  v6 = *(_QWORD *)(v0 + 48);
  swift_release();
  __swift_storeEnumTagSinglePayload(v2, 0, 1, v5);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 40))(v6 + v1, v2, v3);
  swift_endAccess();
  sub_247754E88();
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_2478B7970;
  sub_2478B71A8();
  *(_QWORD *)(v0 + 40) = v6;
  swift_retain();
  v8 = sub_2478B6E6C();
  v10 = v9;
  swift_bridgeObjectRelease();
  sub_2478B6EA8();
  sub_2478B7418();
  sub_2478B6EA8();
  swift_bridgeObjectRelease();
  sub_2478B6EA8();
  *(_QWORD *)(v7 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v7 + 32) = v8;
  *(_QWORD *)(v7 + 40) = v10;
  sub_2478B7388();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 48));
}

uint64_t sub_247769D84()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_247769DCC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 96);
  swift_getAssociatedTypeWitness();
  v2 = sub_2478B7148();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_247769E34()
{
  sub_247769DCC();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AccountManager(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AccountManager);
}

unint64_t ContentPlanningError.domainName.getter()
{
  OUTLINED_FUNCTION_234();
  return 0xD000000000000014;
}

SonicKit::ContentPlanningError_optional __swiftcall ContentPlanningError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 8;
  if ((unint64_t)rawValue < 8)
    v2 = rawValue;
  *v1 = v2;
  return (SonicKit::ContentPlanningError_optional)rawValue;
}

uint64_t ContentPlanningError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

BOOL sub_247769EA0(char *a1, char *a2)
{
  return sub_24778E8E0(*a1, *a2);
}

uint64_t sub_247769EAC()
{
  unsigned __int8 *v0;

  return sub_24778EAC4(*v0);
}

uint64_t sub_247769EB4(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_2477930DC(a1, *v1);
}

uint64_t sub_247769EBC(uint64_t a1)
{
  unsigned __int8 *v1;

  return sub_24778EE54(a1, *v1);
}

SonicKit::ContentPlanningError_optional sub_247769EC4(Swift::Int *a1)
{
  return ContentPlanningError.init(rawValue:)(*a1);
}

void sub_247769ECC(uint64_t *a1@<X8>)
{
  *a1 = ContentPlanningError.rawValue.getter();
  OUTLINED_FUNCTION_12();
}

uint64_t static ContentManagementPlan.withPlan<A>(in:buildPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[8] = a6;
  v7[9] = a7;
  v7[6] = a4;
  v7[7] = a5;
  v7[4] = a2;
  v7[5] = a3;
  v7[3] = a1;
  v7[10] = *(_QWORD *)(a5 - 8);
  v7[11] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247769F34()
{
  uint64_t *v0;
  _QWORD *v1;

  OUTLINED_FUNCTION_36_0(v0[10]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[12] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_247769FA0;
  return sub_24776A0F8((uint64_t)(v0 + 2), v0[11], v0[7], v0[9]);
}

uint64_t sub_247769FA0()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247769FD4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  (*(void (**)(uint64_t))(v0 + 40))(v0 + 16);
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v1;
  OUTLINED_FUNCTION_419();
  type metadata accessor for ContentManagementPlan(v2, v3, v4, v5);
  *v1 = v0;
  v1[1] = sub_24776A050;
  return sub_24776A1CC();
}

uint64_t sub_24776A050()
{
  OUTLINED_FUNCTION_246_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24776A08C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_50();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v0);
}

uint64_t sub_24776A0B8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_122(*(_QWORD *)(*(_QWORD *)(v0 + 64) - 8));
  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24776A0F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[4] = a3;
  v4[5] = a4;
  v4[2] = a1;
  v4[3] = a2;
  v4[6] = *(_QWORD *)(a3 - 8);
  v4[7] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_24776A150()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;

  OUTLINED_FUNCTION_431();
  v2 = *(_QWORD *)(v0 + 48);
  v1 = *(_QWORD *)(v0 + 56);
  v4 = *(uint64_t **)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 24);
  type metadata accessor for ContentManagementPlan.Execution(0, *(_QWORD *)(v0 + 32), *(_QWORD *)(v0 + 40), v5);
  v6 = OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_180(v6, v7, v8);
  v9 = sub_24776A270(v1);
  OUTLINED_FUNCTION_235_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  *v4 = v9;
  OUTLINED_FUNCTION_14_1();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24776A1CC()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 16) = v0;
  return swift_task_switch();
}

uint64_t sub_24776A1E4()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 24) = v1;
  *v1 = v0;
  v1[1] = sub_24776A230;
  return sub_24776A710();
}

uint64_t sub_24776A230()
{
  uint64_t v0;

  OUTLINED_FUNCTION_108_0();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t type metadata accessor for ContentManagementPlan(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentManagementPlan);
}

uint64_t sub_24776A270(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  sub_24776A2AC(a1);
  return v2;
}

uint64_t sub_24776A2AC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 104);
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  OUTLINED_FUNCTION_481();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_400();
  OUTLINED_FUNCTION_476();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_299();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_398();
  v4 = OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_425();
  v5 = OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  swift_getAssociatedConformanceWitness();
  sub_2478B70DC();
  *(_QWORD *)(v1 + v2) = OUTLINED_FUNCTION_133_0();
  v6 = OUTLINED_FUNCTION_137_0();
  v7 = OUTLINED_FUNCTION_360();
  OUTLINED_FUNCTION_355();
  v8 = sub_2478B6F8C();
  OUTLINED_FUNCTION_334(v8);
  v10 = *(_QWORD *)(v9 + 120);
  sub_2478B6FEC();
  OUTLINED_FUNCTION_485();
  OUTLINED_FUNCTION_358();
  OUTLINED_FUNCTION_289();
  *(_QWORD *)(v1 + v10) = OUTLINED_FUNCTION_133_0();
  OUTLINED_FUNCTION_309();
  v30 = sub_2478B7148();
  v11 = OUTLINED_FUNCTION_158_0();
  OUTLINED_FUNCTION_334(v11);
  OUTLINED_FUNCTION_309();
  v12 = sub_2478B6F8C();
  OUTLINED_FUNCTION_334(v12);
  type metadata accessor for ContentRegistration(0, v4, v5, v13);
  v14 = OUTLINED_FUNCTION_158_0();
  OUTLINED_FUNCTION_334(v14);
  v16 = *(_QWORD *)(v15 + 152);
  OUTLINED_FUNCTION_461(255, v3, v6);
  OUTLINED_FUNCTION_461(255, v3, v7);
  OUTLINED_FUNCTION_358();
  swift_getTupleTypeMetadata3();
  *(_QWORD *)(v1 + v16) = OUTLINED_FUNCTION_133_0();
  v17 = *(_QWORD *)(*(_QWORD *)v1 + 160);
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_478();
  type metadata accessor for FacetCollection(v18, v19, v20, v21);
  swift_getFunctionTypeMetadata1();
  OUTLINED_FUNCTION_414();
  OUTLINED_FUNCTION_94_0();
  *(_QWORD *)(v1 + v17) = OUTLINED_FUNCTION_133_0();
  v22 = *(_QWORD *)(*(_QWORD *)v1 + 168);
  OUTLINED_FUNCTION_461(255, v3, v30);
  OUTLINED_FUNCTION_94_0();
  *(_QWORD *)(v1 + v22) = OUTLINED_FUNCTION_133_0();
  v23 = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 176)) = MEMORY[0x24BEE4AF8];
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184)) = v23;
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_133_0();
  v24 = sub_2478B6D88();
  OUTLINED_FUNCTION_334(v24);
  v26 = *(_QWORD *)(v25 + 200);
  OUTLINED_FUNCTION_309();
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_133_0();
  swift_getAssociatedConformanceWitness();
  *(_QWORD *)(v1 + v26) = sub_2478B6D88();
  OUTLINED_FUNCTION_309();
  OUTLINED_FUNCTION_289();
  OUTLINED_FUNCTION_133_0();
  v27 = sub_2478B6D88();
  OUTLINED_FUNCTION_334(v27);
  *(_BYTE *)(v1 + *(_QWORD *)(v28 + 216)) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1, v3);
  return v1;
}

uint64_t sub_24776A710()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t AssociatedTypeWitness;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v35;

  OUTLINED_FUNCTION_85();
  v1[117] = v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 80);
  v1[118] = v3;
  v4 = *(_QWORD *)(v2 + 88);
  v1[119] = v4;
  OUTLINED_FUNCTION_256_0();
  v1[120] = OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_385();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5 = OUTLINED_FUNCTION_137_0();
  v1[121] = v5;
  v6 = OUTLINED_FUNCTION_191_0();
  v1[122] = v6;
  v7 = OUTLINED_FUNCTION_256_0();
  v1[123] = v7;
  OUTLINED_FUNCTION_406();
  v35 = sub_2478B7148();
  v1[124] = v35;
  v8 = OUTLINED_FUNCTION_309();
  v11 = type metadata accessor for ContentManagementPlan.Link(v8, v9, v10, v4);
  v1[125] = v11;
  v1[126] = *(_QWORD *)(v11 - 8);
  v1[127] = OUTLINED_FUNCTION_13_0();
  v13 = type metadata accessor for FacetCollection(0, v3, v4, v12);
  v1[128] = v13;
  v1[129] = *(_QWORD *)(v13 - 8);
  v1[130] = swift_task_alloc();
  v1[131] = swift_task_alloc();
  OUTLINED_FUNCTION_357();
  v14 = sub_2478B7148();
  v1[132] = v14;
  v1[133] = *(_QWORD *)(v14 - 8);
  v1[134] = OUTLINED_FUNCTION_298();
  v1[135] = OUTLINED_FUNCTION_298();
  v1[136] = OUTLINED_FUNCTION_298();
  v15 = OUTLINED_FUNCTION_256_0();
  v1[137] = v15;
  OUTLINED_FUNCTION_421();
  v16 = sub_2478B7148();
  v1[138] = v16;
  v1[139] = *(_QWORD *)(v16 - 8);
  v1[140] = OUTLINED_FUNCTION_13_0();
  v1[141] = *(_QWORD *)(v15 - 8);
  v1[142] = OUTLINED_FUNCTION_298();
  v1[143] = OUTLINED_FUNCTION_298();
  v1[144] = OUTLINED_FUNCTION_298();
  v1[145] = *(_QWORD *)(v3 - 8);
  v17 = OUTLINED_FUNCTION_13_0();
  v1[146] = v17;
  OUTLINED_FUNCTION_142_0(v17, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v1[147] = v18;
  v1[148] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_483();
  OUTLINED_FUNCTION_355();
  v19 = OUTLINED_FUNCTION_94_0();
  v1[149] = v19;
  v20 = *(_QWORD *)(v19 - 8);
  v1[150] = v20;
  v1[151] = *(_QWORD *)(v20 + 64);
  v1[152] = OUTLINED_FUNCTION_17_2();
  v1[153] = OUTLINED_FUNCTION_17_2();
  v1[154] = OUTLINED_FUNCTION_17_2();
  v1[155] = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_355();
  v21 = sub_2478B7148();
  v1[156] = v21;
  v1[157] = *(_QWORD *)(v21 - 8);
  v1[158] = OUTLINED_FUNCTION_17_2();
  v1[159] = OUTLINED_FUNCTION_17_2();
  v1[160] = OUTLINED_FUNCTION_17_2();
  v1[161] = OUTLINED_FUNCTION_17_2();
  v1[162] = OUTLINED_FUNCTION_17_2();
  v1[163] = OUTLINED_FUNCTION_17_2();
  v1[164] = OUTLINED_FUNCTION_17_2();
  v1[165] = OUTLINED_FUNCTION_17_2();
  v1[166] = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_406();
  v22 = sub_2478B6FEC();
  v1[167] = v22;
  v1[168] = type metadata accessor for ContentManagementPlan.Link(255, v3, v22, v4);
  v23 = OUTLINED_FUNCTION_94_0();
  v1[169] = v23;
  v24 = *(_QWORD *)(v23 - 8);
  v1[170] = v24;
  v1[171] = *(_QWORD *)(v24 + 64);
  v1[172] = OUTLINED_FUNCTION_409();
  v1[173] = OUTLINED_FUNCTION_409();
  v1[174] = OUTLINED_FUNCTION_409();
  v1[175] = OUTLINED_FUNCTION_409();
  OUTLINED_FUNCTION_508();
  v25 = sub_2478B7148();
  v1[176] = v25;
  v1[177] = *(_QWORD *)(v25 - 8);
  v1[178] = OUTLINED_FUNCTION_17_2();
  v1[179] = OUTLINED_FUNCTION_17_2();
  v1[180] = OUTLINED_FUNCTION_17_2();
  v1[181] = OUTLINED_FUNCTION_17_2();
  v1[182] = OUTLINED_FUNCTION_17_2();
  v1[183] = OUTLINED_FUNCTION_17_2();
  v1[184] = OUTLINED_FUNCTION_17_2();
  v1[185] = OUTLINED_FUNCTION_17_2();
  v1[186] = OUTLINED_FUNCTION_17_2();
  v26 = swift_checkMetadataState();
  v1[187] = v26;
  v1[188] = *(_QWORD *)(v26 - 8);
  v1[189] = OUTLINED_FUNCTION_17_2();
  v1[190] = OUTLINED_FUNCTION_17_2();
  v1[191] = OUTLINED_FUNCTION_17_2();
  v1[192] = *(_QWORD *)(v35 - 8);
  v1[193] = OUTLINED_FUNCTION_17_2();
  v1[194] = OUTLINED_FUNCTION_17_2();
  v1[195] = OUTLINED_FUNCTION_17_2();
  v1[196] = OUTLINED_FUNCTION_17_2();
  v1[197] = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_414();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[198] = AssociatedTypeWitness;
  v28 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[199] = v28;
  v1[200] = *(_QWORD *)(v28 + 64);
  v1[201] = OUTLINED_FUNCTION_17_2();
  v1[202] = OUTLINED_FUNCTION_17_2();
  v30 = type metadata accessor for ContentRegistration(255, v5, v6, v29);
  v1[203] = v30;
  OUTLINED_FUNCTION_358();
  v31 = sub_2478B7148();
  v1[204] = v31;
  v1[205] = *(_QWORD *)(v31 - 8);
  v1[206] = OUTLINED_FUNCTION_17_2();
  v1[207] = OUTLINED_FUNCTION_17_2();
  v1[208] = OUTLINED_FUNCTION_17_2();
  v32 = *(_QWORD *)(v7 - 8);
  v1[209] = v32;
  v1[210] = *(_QWORD *)(v32 + 64);
  v1[211] = OUTLINED_FUNCTION_17_2();
  v1[212] = OUTLINED_FUNCTION_17_2();
  v1[213] = OUTLINED_FUNCTION_17_2();
  v1[214] = OUTLINED_FUNCTION_17_2();
  v1[215] = OUTLINED_FUNCTION_17_2();
  v1[216] = OUTLINED_FUNCTION_17_2();
  v1[217] = OUTLINED_FUNCTION_17_2();
  v1[218] = OUTLINED_FUNCTION_17_2();
  v1[219] = OUTLINED_FUNCTION_17_2();
  v1[220] = OUTLINED_FUNCTION_17_2();
  v33 = *(_QWORD *)(v30 - 8);
  v1[221] = v33;
  v1[222] = *(_QWORD *)(v33 + 64);
  v1[223] = OUTLINED_FUNCTION_17_2();
  v1[224] = OUTLINED_FUNCTION_17_2();
  v1[225] = OUTLINED_FUNCTION_17_2();
  v1[226] = OUTLINED_FUNCTION_17_2();
  v1[227] = OUTLINED_FUNCTION_17_2();
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_375();
  return swift_task_switch();
}

uint64_t sub_24776AD04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  __int128 v8;

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_373();
  if (!v0)
  {
    v4 = *(_QWORD *)(v1 + 936);
    v5 = *(_QWORD *)(*(_QWORD *)v4 + 104);
    *(_QWORD *)(v1 + 1824) = v5;
    v6 = (_QWORD *)(v4 + v5);
    v8 = *(_OWORD *)(v1 + 944);
    OUTLINED_FUNCTION_7_0();
    *(_QWORD *)(v1 + 808) = *v6;
    OUTLINED_FUNCTION_403();
    OUTLINED_FUNCTION_267();
    OUTLINED_FUNCTION_347();
    *(_QWORD *)(v1 + 1832) = *(_QWORD *)(swift_getAssociatedConformanceWitness() + 8);
    OUTLINED_FUNCTION_452();
    OUTLINED_FUNCTION_410();
    *(_QWORD *)(v1 + 720) = sub_2478B6D40();
    *(_OWORD *)(OUTLINED_FUNCTION_219_0() + 16) = v8;
    OUTLINED_FUNCTION_482();
    *(_QWORD *)(v1 + 1840) = sub_2478B70DC();
    v7 = OUTLINED_FUNCTION_507();
    MEMORY[0x24958320C](MEMORY[0x24BEE12C8], v7);
    sub_2478B6F20();
    OUTLINED_FUNCTION_31_1();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_QWORD *)(v1 + 736) = *(_QWORD *)(v1 + 744);
    OUTLINED_FUNCTION_252();
  }
  OUTLINED_FUNCTION_317();
  OUTLINED_FUNCTION_118_0();
  swift_task_dealloc();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_223_0();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_168_0();
  OUTLINED_FUNCTION_167_0();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_135_0();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_418();
  return OUTLINED_FUNCTION_1_2(v2);
}

uint64_t sub_24776B0A4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  *(_QWORD *)(v0 + 1848) = sub_2478B6FF8();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 1856) = v1;
  *v1 = v0;
  v1[1] = sub_24776B100;
  OUTLINED_FUNCTION_44();
  return sub_247772D30(v2);
}

uint64_t sub_24776B100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  OUTLINED_FUNCTION_16_1();
  *(_QWORD *)(v0 + 1864) = v2;
  *(_QWORD *)(v0 + 1872) = v1;
  swift_task_dealloc();
  if (!v1)
    swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

void sub_24776B168()
{
  _QWORD *v0;
  uint64_t v1;

  OUTLINED_FUNCTION_181();
  v1 = v0[117];
  MEMORY[0x249582984](v0[233], v0[203]);
  v0[235] = *(_QWORD *)(*(_QWORD *)v1 + 200);
  OUTLINED_FUNCTION_7_0();
  v0[236] = *(_QWORD *)(OUTLINED_FUNCTION_390() + 16);
  OUTLINED_FUNCTION_322();
  v0[237] = sub_2478B6DDC();
  sub_2478B6D7C();
  swift_endAccess();
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_472();
  OUTLINED_FUNCTION_178_0();
  OUTLINED_FUNCTION_349();
}

uint64_t sub_24776C188()
{
  OUTLINED_FUNCTION_431();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24776C1D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  __int128 v5;

  v1 = *(_QWORD *)(v0 + 1968);
  v5 = *(_OWORD *)(v0 + 1952);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 2000) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 944);
  *(_OWORD *)(v2 + 32) = v5;
  *(_QWORD *)(v2 + 48) = v1;
  v3 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v0 + 2008) = v3;
  *v3 = v0;
  v3[1] = sub_24776C270;
  return OUTLINED_FUNCTION_194_0(*(_QWORD *)(v0 + 1560), (uint64_t)&unk_2576C23D0, v2, *(_QWORD *)(v0 + 992), *(_QWORD *)(v0 + 1496), *(_QWORD *)(v0 + 960), (uint64_t (*)(void))v5);
}

uint64_t sub_24776C270(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t *a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  uint64_t **v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_111();
  a17 = v20;
  a18 = v21;
  a16 = (uint64_t *)v19;
  a16 = *v19;
  v22 = a16;
  OUTLINED_FUNCTION_97(&a16);
  v22[252] = v18;
  swift_task_dealloc();
  if (v18)
  {
    v23 = v22[191];
    v24 = v22[188];
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_192_0(v23, *(uint64_t (**)(uint64_t, uint64_t))(v24 + 8));
    OUTLINED_FUNCTION_30();
  }
  else
  {
    OUTLINED_FUNCTION_122(v22[188]);
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_190();
  }
  OUTLINED_FUNCTION_17_1();
  OUTLINED_FUNCTION_382();
  return swift_task_switch();
}

void sub_24776C328()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_181();
  v1 = (void (*)(uint64_t, uint64_t))v0[247];
  v2 = v0[195];
  v3 = v0[124];
  OUTLINED_FUNCTION_228_0(v0[197], v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[192] + 16));
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_356();
  sub_2478B6FC8();
  OUTLINED_FUNCTION_221_0();
  v1(v2, v3);
  OUTLINED_FUNCTION_253_0();
}

uint64_t sub_24776CF04()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2088) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_495();
  }
  else
  {
    sub_247779F88(*(_QWORD *)(v0 + 2064), *(_QWORD *)(v0 + 2072), *(_BYTE *)(v0 + 133), (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

void sub_24776CF78()
{
  uint64_t v0;

  OUTLINED_FUNCTION_181();
  *(_QWORD *)(v0 + 824) = *(_QWORD *)(v0 + 920);
  OUTLINED_FUNCTION_295();
}

void sub_24776CFC0()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_425();
  sub_2478B6FBC();
  OUTLINED_FUNCTION_141_0(v0, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
  OUTLINED_FUNCTION_435();
}

uint64_t sub_24776D6A8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_495();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24776D704()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(uint64_t);
  uint64_t (**v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(void);
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  __n128 *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  __n128 v26;
  uint64_t v27;
  __int128 v28;

  OUTLINED_FUNCTION_181();
  v4 = *(_QWORD *)(v1 + 1552);
  v5 = *(_QWORD *)(v1 + 984);
  OUTLINED_FUNCTION_24_1(v4, 1, v5);
  if (v14)
  {
    (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 1536) + 8))(v4, *(_QWORD *)(v1 + 992));
  }
  else
  {
    v6 = *(_QWORD *)(v1 + 1744);
    v0 = *(_QWORD *)(v1 + 1672);
    v2 = *(void (**)(uint64_t))(v1 + 1336);
    OUTLINED_FUNCTION_180(v6, v4, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 32));
    OUTLINED_FUNCTION_211();
    v7();
    sub_2478B6FC8();
    (*(void (**)(uint64_t, uint64_t))(v0 + 8))(v6, v5);
  }
  OUTLINED_FUNCTION_122(*(_QWORD *)(v1 + 1200));
  v8 = *(_QWORD *)(v1 + 696);
  v9 = *(_QWORD *)(v1 + 2136);
  if (v8 != MEMORY[0x2495829A8](*(_QWORD *)(v1 + 2104), *(_QWORD *)(v1 + 2112)))
  {
    v10 = OUTLINED_FUNCTION_170_0();
    OUTLINED_FUNCTION_165_0();
    if ((v10 & 1) != 0)
    {
      OUTLINED_FUNCTION_103_0();
    }
    else
    {
      v24 = *(_QWORD *)(v1 + 1208);
      result = OUTLINED_FUNCTION_152_0();
      if (v24 != 8)
      {
        __break(1u);
        return result;
      }
      v25 = *(_QWORD *)(v1 + 1200);
      *(_QWORD *)(v1 + 688) = result;
      OUTLINED_FUNCTION_36_0(v25);
      OUTLINED_FUNCTION_131_0();
    }
    OUTLINED_FUNCTION_106_0(*(_QWORD *)(v1 + 1280), *(_QWORD *)(v1 + 1240));
    OUTLINED_FUNCTION_162();
    OUTLINED_FUNCTION_188_0();
  }
  v11 = *(_QWORD *)(v1 + 1280);
  v12 = *(_QWORD *)(v1 + 1192);
  v13 = 1;
  __swift_storeEnumTagSinglePayload(v11, 1, 1, v12);
  OUTLINED_FUNCTION_24_1(v11, 1, v12);
  if (!v14)
  {
    OUTLINED_FUNCTION_496();
    v15 = *(_QWORD *)(v1 + 1128);
    v3 = *(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v1 + 1096);
    OUTLINED_FUNCTION_412();
    v27 = v16;
    OUTLINED_FUNCTION_489();
    OUTLINED_FUNCTION_470();
    *(_QWORD *)&v28 = v1 + 832;
    v2 = *(void (**)(uint64_t))(v15 + 32);
    v17 = OUTLINED_FUNCTION_384();
    v2(v17);
    v18 = (__n128 *)OUTLINED_FUNCTION_28_1();
    OUTLINED_FUNCTION_249_0(v18, *(__n128 *)(v11 + v27), v26);
    v19 = OUTLINED_FUNCTION_407();
    v2(v19);
    v13 = 0;
    *(_QWORD *)v0 = sub_24777E08C;
    *(_QWORD *)(v0 + 8) = v18;
  }
  OUTLINED_FUNCTION_157_0();
  OUTLINED_FUNCTION_24_1(v11, 1, (uint64_t)v3);
  if (v14)
  {
    OUTLINED_FUNCTION_260_0();
    *(_QWORD *)(v1 + 2144) = *((_QWORD *)*v3 + 17);
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_177_0();
    OUTLINED_FUNCTION_452();
    OUTLINED_FUNCTION_411();
    OUTLINED_FUNCTION_447();
    OUTLINED_FUNCTION_178_0();
    *(_QWORD *)(v1 + 704) = v2;
    OUTLINED_FUNCTION_295();
  }
  OUTLINED_FUNCTION_136_0();
  OUTLINED_FUNCTION_204_0(v12, v11, v3[4]);
  *(_OWORD *)((char *)v2 + v13) = v28;
  sub_2478B7034();
  if (v9)
  {
    OUTLINED_FUNCTION_222_0();
    OUTLINED_FUNCTION_237_0();
    OUTLINED_FUNCTION_119_0();
    OUTLINED_FUNCTION_317();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_368();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_223_0();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_167_0();
    OUTLINED_FUNCTION_266();
    OUTLINED_FUNCTION_265();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_107_0();
    return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v1 + 8));
  }
  else
  {
    v21 = (_QWORD *)swift_task_alloc();
    OUTLINED_FUNCTION_226_0(v21);
    OUTLINED_FUNCTION_518();
    return OUTLINED_FUNCTION_8_2(v22, v23);
  }
}

uint64_t sub_24776DBA4()
{
  OUTLINED_FUNCTION_431();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24776DBF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v10)(void);

  v1 = *(_QWORD *)(v0 + 2152);
  v2 = OUTLINED_FUNCTION_225_0();
  *(_QWORD *)(v0 + 2200) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 944);
  *(_QWORD *)(v2 + 32) = v1;
  v3 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 2208) = v3;
  *v3 = v0;
  v3[1] = sub_24776DC80;
  v4 = OUTLINED_FUNCTION_514();
  return OUTLINED_FUNCTION_194_0(v4, v5, v2, v6, v7, v8, v10);
}

uint64_t sub_24776DC80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _QWORD *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  void (*v25)(uint64_t, uint64_t);

  OUTLINED_FUNCTION_314();
  a15 = v18;
  a16 = v19;
  a14 = v17;
  a14 = (_QWORD *)*v17;
  v20 = a14;
  OUTLINED_FUNCTION_97(&a14);
  v20[277] = v16;
  swift_task_dealloc();
  if (v16)
  {
    v21 = v20[190];
    v22 = v20[188];
    swift_task_dealloc();
    OUTLINED_FUNCTION_235_0(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30();
  }
  else
  {
    v23 = v20[190];
    v24 = v20[187];
    v25 = *(void (**)(uint64_t, uint64_t))(v20[188] + 8);
    v20[278] = v25;
    v25(v23, v24);
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_50();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_150_0();
}

void sub_24776DD30()
{
  uint64_t v0;

  OUTLINED_FUNCTION_181();
  *(_OWORD *)(OUTLINED_FUNCTION_219_0() + 16) = *(_OWORD *)(v0 + 944);
  OUTLINED_FUNCTION_410();
  OUTLINED_FUNCTION_7_0();
  sub_2478B6DAC();
  OUTLINED_FUNCTION_221_0();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_177_0();
  OUTLINED_FUNCTION_472();
  OUTLINED_FUNCTION_349();
}

uint64_t sub_24776E24C()
{
  OUTLINED_FUNCTION_431();
  OUTLINED_FUNCTION_259_0();
  OUTLINED_FUNCTION_214_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24776E29C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t (*v3)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v0 + 2240) = v1;
  *v1 = v0;
  v1[1] = sub_24776E328;
  return v3();
}

uint64_t sub_24776E328()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2248) = v1;
  swift_task_dealloc();
  OUTLINED_FUNCTION_376();
  if (v1)
    OUTLINED_FUNCTION_495();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24776E384()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t);

  OUTLINED_FUNCTION_181();
  v1 = *(_QWORD *)(v0 + 2248);
  sub_2478B7034();
  *(_QWORD *)(v0 + 2256) = v1;
  if (v1)
  {
    OUTLINED_FUNCTION_237_0();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_223_0();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_135_0();
    return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = *(_QWORD *)(v0 + 1168);
    v4 = *(_QWORD *)(v0 + 1160);
    v5 = *(_QWORD *)(v0 + 936) + *(_QWORD *)(v0 + 2160);
    v6 = OUTLINED_FUNCTION_355();
    *(_QWORD *)(v0 + 2264) = type metadata accessor for FacetBuildingPlan(v6, v7, v8, v9);
    v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16);
    *(_QWORD *)(v0 + 2272) = v10;
    OUTLINED_FUNCTION_228_0(v3, v5, v10);
    *(_QWORD *)(v0 + 2280) = sub_2478B6C50();
    OUTLINED_FUNCTION_422();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_84();
    return OUTLINED_FUNCTION_45();
  }
}

uint64_t sub_24776E56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 1168);
  swift_release();
  FacetBuildingPlan.__allocating_init(system:)(v1);
  *(_QWORD *)(v0 + 2288) = v2;
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

void sub_24776E5B4()
{
  _QWORD *v0;

  OUTLINED_FUNCTION_181();
  v0[95] = *(_QWORD *)(v0[117] + v0[253]);
  sub_2478B6FEC();
  OUTLINED_FUNCTION_310();
  OUTLINED_FUNCTION_295();
}

uint64_t sub_24776F434()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2352) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

void sub_24776F494()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(uint64_t, _QWORD *);

  OUTLINED_FUNCTION_181();
  v1 = v0[123];
  v2 = v0[106];
  v0[295] = v2;
  OUTLINED_FUNCTION_241_0();
  v3 = sub_2478B6F44();
  OUTLINED_FUNCTION_20();
  v0[105] = v3;
  if (v3 == MEMORY[0x2495829A8](v2, v1))
  {
    OUTLINED_FUNCTION_286();
    swift_bridgeObjectRelease();
    v4 = OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_302(v4, v5, v6, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  }
  v7 = sub_2478B6FA4();
  OUTLINED_FUNCTION_388();
  OUTLINED_FUNCTION_486();
  if ((v7 & 1) != 0)
  {
    OUTLINED_FUNCTION_10_2(v0[213], v0[295], v0[209]);
  }
  else
  {
    v8 = v0[210];
    v9 = OUTLINED_FUNCTION_152_0();
    if (v8 != 8)
    {
      __break(1u);
      JUMPOUT(0x24776FE50);
    }
    v10 = OUTLINED_FUNCTION_363(v9);
    v11(v10, v0 + 108);
    OUTLINED_FUNCTION_131_0();
  }
  OUTLINED_FUNCTION_183_0();
  OUTLINED_FUNCTION_230_0();
}

uint64_t sub_24776FE58()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24776FE8C()
{
  uint64_t v0;
  char v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_181();
  v4 = *(_QWORD *)(v0 + 2376);
  v5 = *(_QWORD *)(v0 + 2384) + 1;
  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  if (v5 == v4)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 1032));
    OUTLINED_FUNCTION_198_0();
    OUTLINED_FUNCTION_273();
  }
  v6 = *(_QWORD *)(v0 + 2392);
  v7 = *(_QWORD *)(v0 + 2384) + 1;
  v8 = *(_QWORD *)(v0 + 2368);
  *(_QWORD *)(v0 + 2384) = v7;
  sub_24777DEE0(v8 + 40 * v7 + 32, v0 + 16);
  sub_2478B7034();
  *(_QWORD *)(v0 + 2392) = v6;
  if (v6)
  {
    OUTLINED_FUNCTION_378();
    v19 = *(_QWORD *)(v0 + 1696);
    v18 = *(_QWORD *)(v0 + 1672);
    v9 = *(_QWORD *)(v0 + 1048);
    v10 = *(_QWORD *)(v0 + 1032);
    OUTLINED_FUNCTION_212_0();
    OUTLINED_FUNCTION_8_0();
    sub_247779F88(v3, v2, v1, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
    OUTLINED_FUNCTION_212_0();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_202_0(v9, *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8));
    OUTLINED_FUNCTION_233_0(v19, *(uint64_t (**)(uint64_t, uint64_t))(v18 + 8));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1(v0 + 16);
    OUTLINED_FUNCTION_281();
    OUTLINED_FUNCTION_389();
    OUTLINED_FUNCTION_7_2();
    OUTLINED_FUNCTION_368();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_223_0();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_167_0();
    OUTLINED_FUNCTION_266();
    OUTLINED_FUNCTION_265();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_107_0();
    return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v12 = (_QWORD *)OUTLINED_FUNCTION_428();
    __swift_project_boxed_opaque_existential_1(v12, v13);
    v14 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 2400) = v14;
    v15 = OUTLINED_FUNCTION_301(v14, (uint64_t)sub_24776FE58);
    return OUTLINED_FUNCTION_40_0(v15, v16, v17);
  }
}

void sub_24777048C()
{
  OUTLINED_FUNCTION_30();
  JUMPOUT(0x247770494);
}

uint64_t sub_2477707AC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2440) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24777080C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int EnumTagSinglePayload;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t (*v15)(uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t (*v20)(void);
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  OUTLINED_FUNCTION_181();
  v2 = *(_QWORD *)(v0 + 1544);
  v3 = *(_QWORD *)(v0 + 984);
  OUTLINED_FUNCTION_24_1(v2, 1, v3);
  if (v4)
  {
    OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 1008));
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_198_0();
    goto LABEL_4;
  }
  v5 = *(_QWORD *)(v0 + 1888);
  v6 = *(_QWORD *)(v0 + 1688);
  v7 = *(_QWORD *)(v0 + 1072);
  v8 = *(_QWORD *)(v0 + 1024);
  v9 = *(_QWORD *)(v0 + 936) + *(_QWORD *)(v0 + 2304);
  OUTLINED_FUNCTION_204_0(v6, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v0 + 1672) + 32));
  OUTLINED_FUNCTION_7_0();
  MEMORY[0x2495827BC](v6, *(_QWORD *)v9, v3, v8, v5);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v7, 1, v8);
  v11 = *(_QWORD *)(v0 + 2424);
  if (EnumTagSinglePayload == 1)
  {
    v26 = *(_QWORD *)(v0 + 1688);
    v12 = *(_QWORD *)(v0 + 1072);
    v13 = *(_QWORD *)(v0 + 1064);
    v27 = *(_QWORD *)(v0 + 1008);
    v29 = *(_QWORD *)(v0 + 1672);
    v30 = *(_QWORD *)(v0 + 1000);
    v31 = *(_QWORD *)(v0 + 1016);
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_212_0();
    OUTLINED_FUNCTION_141_0(v12, *(uint64_t (**)(uint64_t, uint64_t))(v13 + 8));
    OUTLINED_FUNCTION_117();
    sub_24777986C();
    OUTLINED_FUNCTION_283();
    OUTLINED_FUNCTION_479();
    *(_BYTE *)(v0 + 131) = 3;
    OUTLINED_FUNCTION_400();
    sub_2478B6C68();
    OUTLINED_FUNCTION_379();
    OUTLINED_FUNCTION_234();
    OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_400();
    sub_2478B6C74();
    OUTLINED_FUNCTION_315();
    v14 = OUTLINED_FUNCTION_479();
    OUTLINED_FUNCTION_142_0(v14, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_290();
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_212_0();
    swift_release();
    OUTLINED_FUNCTION_138_0(v26, *(uint64_t (**)(uint64_t, uint64_t))(v29 + 8));
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v31, v30);
LABEL_10:
    OUTLINED_FUNCTION_4_3();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_167_0();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_135_0();
    v20 = (uint64_t (*)(void))OUTLINED_FUNCTION_418();
    return OUTLINED_FUNCTION_1_2(v20);
  }
  v15 = *(uint64_t (**)(uint64_t))(v0 + 2416);
  v16 = *(_QWORD *)(v0 + 1040);
  OUTLINED_FUNCTION_159_0(*(uint64_t (**)(uint64_t))(*(_QWORD *)(v0 + 1032) + 32));
  OUTLINED_FUNCTION_117();
  v17 = v15(v16);
  *(_QWORD *)(v0 + 2448) = v17;
  v18 = *(_QWORD *)(v17 + 16);
  *(_QWORD *)(v0 + 2456) = v18;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_172_0(*(_QWORD *)(v0 + 2440));
    OUTLINED_FUNCTION_141_0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    OUTLINED_FUNCTION_202_0(v11, *(uint64_t (**)(uint64_t, uint64_t))(v0 + 576));
    OUTLINED_FUNCTION_192_0(v6, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
LABEL_4:
    OUTLINED_FUNCTION_218_0();
  }
  v19 = *(_QWORD *)(v0 + 2440);
  *(_QWORD *)(v0 + 2464) = 0;
  OUTLINED_FUNCTION_451(v17 + 32);
  sub_2478B7034();
  *(_QWORD *)(v0 + 2472) = v19;
  if (v19)
  {
    OUTLINED_FUNCTION_145_0();
    OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_202_0(v7, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_141_0(v28, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
    OUTLINED_FUNCTION_377();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_114();
    goto LABEL_10;
  }
  __swift_project_boxed_opaque_existential_1((_QWORD *)(v0 + 56), *(_QWORD *)(v0 + 80));
  v22 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 2480) = v22;
  v23 = OUTLINED_FUNCTION_300(v22, (uint64_t)sub_247770E10);
  return OUTLINED_FUNCTION_40_0(v23, v24, v25);
}

uint64_t sub_247770E10()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247770E44()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_181();
  v5 = v0[307];
  v6 = v0[308] + 1;
  OUTLINED_FUNCTION_114();
  if (v6 == v5)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_172_0(v0[309]);
    OUTLINED_FUNCTION_141_0(v5, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_202_0((uint64_t)(v0 + 7), *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
    OUTLINED_FUNCTION_192_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
    OUTLINED_FUNCTION_218_0();
  }
  v7 = v0[309];
  v8 = v0[308] + 1;
  v0[308] = v8;
  OUTLINED_FUNCTION_451(v0[306] + 40 * v8 + 32);
  sub_2478B7034();
  v0[309] = v7;
  if (v7)
  {
    OUTLINED_FUNCTION_145_0();
    OUTLINED_FUNCTION_8_0();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_202_0(v2, *(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    OUTLINED_FUNCTION_141_0(v15, *(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
    OUTLINED_FUNCTION_377();
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_114();
    OUTLINED_FUNCTION_458();
    OUTLINED_FUNCTION_4_3();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_167_0();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_135_0();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_418();
    return OUTLINED_FUNCTION_1_2(v9);
  }
  else
  {
    __swift_project_boxed_opaque_existential_1(v0 + 7, v0[10]);
    v11 = (_QWORD *)swift_task_alloc();
    v0[310] = v11;
    v12 = OUTLINED_FUNCTION_300(v11, (uint64_t)sub_247770E10);
    return OUTLINED_FUNCTION_40_0(v12, v13, v14);
  }
}

uint64_t sub_24777123C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2496) = v1;
  swift_task_dealloc();
  if (v1)
    swift_release();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247771294()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v3;

  OUTLINED_FUNCTION_181();
  v1 = *(_QWORD *)(v0 + 2496);
  sub_2478B7034();
  if (v1)
  {
    OUTLINED_FUNCTION_163_0();
    OUTLINED_FUNCTION_458();
    OUTLINED_FUNCTION_2_4();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_223_0();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_135_0();
    return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    v3 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v0 + 2504) = v3;
    *v3 = v0;
    v3[1] = sub_247771440;
    OUTLINED_FUNCTION_44();
    return FacetBuildingPlan.execute()();
  }
}

uint64_t sub_247771440()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 2512) = v1;
  swift_task_dealloc();
  swift_release();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247771498()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(void);
  uint64_t v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_181();
  v1 = *(uint64_t **)(v0 + 936);
  v2 = *v1;
  v3 = *(_QWORD **)((char *)v1 + *(_QWORD *)(*v1 + 176));
  *(_QWORD *)(v0 + 2520) = v3;
  v4 = v3[2];
  *(_QWORD *)(v0 + 2528) = v4;
  if (v4)
  {
    *(_QWORD *)(v0 + 2536) = *(_QWORD *)(v2 + 184);
    v5 = *(_QWORD *)(v0 + 2512);
    *(_QWORD *)(v0 + 2544) = 0;
    v7 = v3[4];
    v6 = v3[5];
    *(_QWORD *)(v0 + 2552) = v6;
    sub_2478B6DA0();
    OUTLINED_FUNCTION_8();
    sub_2478B7034();
    *(_QWORD *)(v0 + 2560) = v5;
    if (v5)
    {
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_17();
      OUTLINED_FUNCTION_88();
      OUTLINED_FUNCTION_2_4();
      OUTLINED_FUNCTION_39_0();
      OUTLINED_FUNCTION_34_1();
      OUTLINED_FUNCTION_39();
      OUTLINED_FUNCTION_29_0();
      OUTLINED_FUNCTION_31_1();
      OUTLINED_FUNCTION_213();
      OUTLINED_FUNCTION_190();
      OUTLINED_FUNCTION_14_1();
      OUTLINED_FUNCTION_50();
      OUTLINED_FUNCTION_223_0();
      OUTLINED_FUNCTION_93_0();
      OUTLINED_FUNCTION_87_0();
      OUTLINED_FUNCTION_43_0();
      OUTLINED_FUNCTION_86_0();
      OUTLINED_FUNCTION_85_0();
      OUTLINED_FUNCTION_84_0();
      OUTLINED_FUNCTION_83_0();
      OUTLINED_FUNCTION_82_0();
      OUTLINED_FUNCTION_81_0();
      OUTLINED_FUNCTION_80_0();
      OUTLINED_FUNCTION_79_0();
      OUTLINED_FUNCTION_78_0();
      OUTLINED_FUNCTION_77_0();
      OUTLINED_FUNCTION_76_0();
      OUTLINED_FUNCTION_75_0();
      OUTLINED_FUNCTION_74_0();
      OUTLINED_FUNCTION_73_0();
      OUTLINED_FUNCTION_72_0();
      OUTLINED_FUNCTION_71_0();
      OUTLINED_FUNCTION_70_0();
      OUTLINED_FUNCTION_69_0();
      OUTLINED_FUNCTION_68_0();
      OUTLINED_FUNCTION_67_0();
      OUTLINED_FUNCTION_66_0();
      OUTLINED_FUNCTION_65_0();
      OUTLINED_FUNCTION_64_0();
      OUTLINED_FUNCTION_63_0();
      OUTLINED_FUNCTION_62_0();
      OUTLINED_FUNCTION_61_0();
      OUTLINED_FUNCTION_60();
      OUTLINED_FUNCTION_59_0();
      OUTLINED_FUNCTION_58_0();
      OUTLINED_FUNCTION_57_0();
      OUTLINED_FUNCTION_56_0();
      OUTLINED_FUNCTION_55();
      OUTLINED_FUNCTION_54_0();
      OUTLINED_FUNCTION_53_0();
      OUTLINED_FUNCTION_52_0();
      OUTLINED_FUNCTION_51_0();
      OUTLINED_FUNCTION_50_0();
      OUTLINED_FUNCTION_49_0();
      OUTLINED_FUNCTION_48_0();
      OUTLINED_FUNCTION_47_0();
      OUTLINED_FUNCTION_46_0();
      OUTLINED_FUNCTION_45_0();
      OUTLINED_FUNCTION_44_0();
      OUTLINED_FUNCTION_92_0();
      OUTLINED_FUNCTION_91();
      OUTLINED_FUNCTION_101_0();
      OUTLINED_FUNCTION_97_0();
      OUTLINED_FUNCTION_105();
      OUTLINED_FUNCTION_102_0();
      OUTLINED_FUNCTION_107_0();
      OUTLINED_FUNCTION_112_0();
      OUTLINED_FUNCTION_135_0();
      return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v0 + 8));
    }
    else
    {
      v10 = OUTLINED_FUNCTION_219_0();
      *(_QWORD *)(v0 + 2568) = v10;
      *(_QWORD *)(v10 + 16) = v7;
      *(_QWORD *)(v10 + 24) = v6;
      v11 = (_QWORD *)swift_task_alloc();
      *(_QWORD *)(v0 + 2576) = v11;
      *v11 = v0;
      v11[1] = sub_247771920;
      return OUTLINED_FUNCTION_208_0();
    }
  }
  else
  {
    OUTLINED_FUNCTION_190_0();
    OUTLINED_FUNCTION_517();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_223_0();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_135_0();
    OUTLINED_FUNCTION_179_0();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_1_2(v9);
  }
}

uint64_t sub_247771920()
{
  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108_0();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24777195C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  __int128 v21;

  OUTLINED_FUNCTION_181();
  v1 = v0[317];
  v2 = v0[117];
  v3 = *(_QWORD *)(v2 + v1);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)(v2 + v1) = v3;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v15 = v0[317];
    v16 = v0[117];
    OUTLINED_FUNCTION_449(0, *(_QWORD *)(v3 + 16) + 1);
    v3 = v17;
    *(_QWORD *)(v16 + v15) = v17;
  }
  v6 = *(_QWORD *)(v3 + 16);
  v5 = *(_QWORD *)(v3 + 24);
  if (v6 >= v5 >> 1)
  {
    v18 = v0[317];
    v19 = v0[117];
    OUTLINED_FUNCTION_449(v5 > 1, v6 + 1);
    v3 = v20;
    *(_QWORD *)(v19 + v18) = v20;
  }
  v7 = v0[316];
  v8 = v0[318] + 1;
  *(_QWORD *)(v3 + 16) = v6 + 1;
  sub_24777DE9C((uint64_t)(v0 + 12), v3 + 40 * v6 + 32);
  swift_release();
  if (v8 == v7)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_190_0();
    OUTLINED_FUNCTION_517();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_167_0();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_112_0();
    OUTLINED_FUNCTION_179_0();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_1_2(v9);
  }
  v10 = v0[320];
  v11 = v0[318] + 1;
  v0[318] = v11;
  v21 = *(_OWORD *)(v0[315] + 16 * v11 + 32);
  v0[319] = *((_QWORD *)&v21 + 1);
  OUTLINED_FUNCTION_310();
  sub_2478B7034();
  v0[320] = v10;
  if (v10)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_17();
    OUTLINED_FUNCTION_3_3();
    OUTLINED_FUNCTION_39_0();
    OUTLINED_FUNCTION_34_1();
    OUTLINED_FUNCTION_29_0();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_31_1();
    OUTLINED_FUNCTION_213();
    OUTLINED_FUNCTION_190();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_93_0();
    OUTLINED_FUNCTION_87_0();
    OUTLINED_FUNCTION_43_0();
    OUTLINED_FUNCTION_86_0();
    OUTLINED_FUNCTION_85_0();
    OUTLINED_FUNCTION_84_0();
    OUTLINED_FUNCTION_83_0();
    OUTLINED_FUNCTION_82_0();
    OUTLINED_FUNCTION_81_0();
    OUTLINED_FUNCTION_80_0();
    OUTLINED_FUNCTION_79_0();
    OUTLINED_FUNCTION_78_0();
    OUTLINED_FUNCTION_77_0();
    OUTLINED_FUNCTION_76_0();
    OUTLINED_FUNCTION_75_0();
    OUTLINED_FUNCTION_74_0();
    OUTLINED_FUNCTION_73_0();
    OUTLINED_FUNCTION_72_0();
    OUTLINED_FUNCTION_71_0();
    OUTLINED_FUNCTION_70_0();
    OUTLINED_FUNCTION_69_0();
    OUTLINED_FUNCTION_68_0();
    OUTLINED_FUNCTION_67_0();
    OUTLINED_FUNCTION_66_0();
    OUTLINED_FUNCTION_65_0();
    OUTLINED_FUNCTION_64_0();
    OUTLINED_FUNCTION_63_0();
    OUTLINED_FUNCTION_62_0();
    OUTLINED_FUNCTION_61_0();
    OUTLINED_FUNCTION_60();
    OUTLINED_FUNCTION_59_0();
    OUTLINED_FUNCTION_58_0();
    OUTLINED_FUNCTION_57_0();
    OUTLINED_FUNCTION_56_0();
    OUTLINED_FUNCTION_55();
    OUTLINED_FUNCTION_168_0();
    OUTLINED_FUNCTION_167_0();
    OUTLINED_FUNCTION_54_0();
    OUTLINED_FUNCTION_53_0();
    OUTLINED_FUNCTION_52_0();
    OUTLINED_FUNCTION_51_0();
    OUTLINED_FUNCTION_50_0();
    OUTLINED_FUNCTION_49_0();
    OUTLINED_FUNCTION_48_0();
    OUTLINED_FUNCTION_47_0();
    OUTLINED_FUNCTION_46_0();
    OUTLINED_FUNCTION_45_0();
    OUTLINED_FUNCTION_44_0();
    OUTLINED_FUNCTION_92_0();
    OUTLINED_FUNCTION_91();
    OUTLINED_FUNCTION_101_0();
    OUTLINED_FUNCTION_97_0();
    OUTLINED_FUNCTION_105();
    OUTLINED_FUNCTION_102_0();
    OUTLINED_FUNCTION_107_0();
    OUTLINED_FUNCTION_112_0();
    v9 = (uint64_t (*)(void))v0[1];
    return OUTLINED_FUNCTION_1_2(v9);
  }
  v13 = OUTLINED_FUNCTION_219_0();
  v0[321] = v13;
  *(_OWORD *)(v13 + 16) = v21;
  v14 = (_QWORD *)swift_task_alloc();
  v0[322] = v14;
  *v14 = v0;
  v14[1] = sub_247771920;
  return OUTLINED_FUNCTION_208_0();
}

uint64_t sub_247771E90()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 1872));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_247771FCC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2016));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_247772100()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_181();
  v1 = OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 1360));
  OUTLINED_FUNCTION_427(v1, v2, v3, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2088));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v4);
}

uint64_t sub_24777225C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 1200));
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2136));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_2477723A0()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2216));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_2477724D4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2248));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_247772608()
{
  char v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_286();
  OUTLINED_FUNCTION_462();
  OUTLINED_FUNCTION_88();
  sub_247779F88(v3, v1, v0, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v2 + 2352));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v4);
}

uint64_t sub_247772760()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_181();
  v1 = v0[127];
  v2 = v0[126];
  swift_release();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_235_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_0_5(v0[305]);
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v3);
}

uint64_t sub_2477728BC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_462();
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2496));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_2477729F4()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_462();
  OUTLINED_FUNCTION_0_5(*(_QWORD *)(v0 + 2512));
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39_0();
  OUTLINED_FUNCTION_34_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_93_0();
  OUTLINED_FUNCTION_87_0();
  OUTLINED_FUNCTION_43_0();
  OUTLINED_FUNCTION_86_0();
  OUTLINED_FUNCTION_85_0();
  OUTLINED_FUNCTION_84_0();
  OUTLINED_FUNCTION_83_0();
  OUTLINED_FUNCTION_82_0();
  OUTLINED_FUNCTION_81_0();
  OUTLINED_FUNCTION_80_0();
  OUTLINED_FUNCTION_79_0();
  OUTLINED_FUNCTION_78_0();
  OUTLINED_FUNCTION_77_0();
  OUTLINED_FUNCTION_76_0();
  OUTLINED_FUNCTION_75_0();
  OUTLINED_FUNCTION_74_0();
  OUTLINED_FUNCTION_73_0();
  OUTLINED_FUNCTION_72_0();
  OUTLINED_FUNCTION_71_0();
  OUTLINED_FUNCTION_70_0();
  OUTLINED_FUNCTION_69_0();
  OUTLINED_FUNCTION_68_0();
  OUTLINED_FUNCTION_67_0();
  OUTLINED_FUNCTION_66_0();
  OUTLINED_FUNCTION_65_0();
  OUTLINED_FUNCTION_64_0();
  OUTLINED_FUNCTION_63_0();
  OUTLINED_FUNCTION_62_0();
  OUTLINED_FUNCTION_61_0();
  OUTLINED_FUNCTION_60();
  OUTLINED_FUNCTION_59_0();
  OUTLINED_FUNCTION_58_0();
  OUTLINED_FUNCTION_57_0();
  OUTLINED_FUNCTION_56_0();
  OUTLINED_FUNCTION_55();
  OUTLINED_FUNCTION_54_0();
  OUTLINED_FUNCTION_53_0();
  OUTLINED_FUNCTION_52_0();
  OUTLINED_FUNCTION_51_0();
  OUTLINED_FUNCTION_50_0();
  OUTLINED_FUNCTION_49_0();
  OUTLINED_FUNCTION_48_0();
  OUTLINED_FUNCTION_47_0();
  OUTLINED_FUNCTION_46_0();
  OUTLINED_FUNCTION_45_0();
  OUTLINED_FUNCTION_44_0();
  OUTLINED_FUNCTION_92_0();
  OUTLINED_FUNCTION_91();
  OUTLINED_FUNCTION_101_0();
  OUTLINED_FUNCTION_97_0();
  OUTLINED_FUNCTION_105();
  OUTLINED_FUNCTION_102_0();
  OUTLINED_FUNCTION_107_0();
  OUTLINED_FUNCTION_112_0();
  OUTLINED_FUNCTION_135_0();
  OUTLINED_FUNCTION_179_0();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_128_0();
  return OUTLINED_FUNCTION_1_2(v1);
}

uint64_t sub_247772B2C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t result;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  v2 = sub_2478B70DC();
  sub_2478B6DA0();
  sub_2478B6DA0();
  MEMORY[0x24958320C](MEMORY[0x24BEE1718], v2);
  result = sub_2478B70B8();
  *a1 = result;
  return result;
}

uint64_t sub_247772D30(uint64_t a1)
{
  uint64_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;

  v2[11] = a1;
  v2[12] = v1;
  v3 = *v1;
  v2[13] = *(_QWORD *)(*v1 + 88);
  v2[14] = *(_QWORD *)(v3 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v2[15] = AssociatedTypeWitness;
  v2[16] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v2[17] = swift_task_alloc();
  return swift_task_switch();
}

void sub_247772DB4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t KeyPath;
  _QWORD *v6;

  v1 = v0[11];
  v2 = v0[13];
  v3 = v0[14];
  v0[18] = OUTLINED_FUNCTION_390();
  OUTLINED_FUNCTION_482();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_162_0();
  v0[19] = OUTLINED_FUNCTION_137_0();
  v0[20] = OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  swift_getAssociatedConformanceWitness();
  v0[6] = sub_2478B6D40();
  OUTLINED_FUNCTION_360();
  v0[5] = OUTLINED_FUNCTION_133_0();
  v0[7] = v1;
  v4 = (_QWORD *)swift_task_alloc();
  *v4 = v3;
  v4[1] = v2;
  KeyPath = swift_getKeyPath();
  OUTLINED_FUNCTION_50();
  v6 = (_QWORD *)OUTLINED_FUNCTION_225_0();
  v6[2] = v3;
  v6[3] = v2;
  v6[4] = KeyPath;
  OUTLINED_FUNCTION_357();
  OUTLINED_FUNCTION_325();
  v0[21] = OUTLINED_FUNCTION_356();
  OUTLINED_FUNCTION_287();
  sub_2478B6DA0();
  OUTLINED_FUNCTION_295();
}

uint64_t sub_247772FCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;

  v15 = sub_2478B6D1C();
  v17 = v16;
  v19 = v18;
  OUTLINED_FUNCTION_212_0();
  OUTLINED_FUNCTION_50();
  v14[2] = v15;
  v14[3] = v17;
  v14[4] = v19;
  v20 = OUTLINED_FUNCTION_219_0();
  *(_QWORD *)(v20 + 16) = a13;
  *(_QWORD *)(v20 + 24) = a14;
  OUTLINED_FUNCTION_421();
  OUTLINED_FUNCTION_395();
  sub_2478B6D28();
  sub_2478B6D10();
  OUTLINED_FUNCTION_14_1();
  v21 = v14[3];
  v14[22] = v14[2];
  v14[23] = v21;
  v22 = v14[4];
  v14[24] = v22;
  swift_retain();
  OUTLINED_FUNCTION_310();
  swift_retain();
  if (sub_2478B71FC())
  {
    v23 = v14[12];
    v14[25] = *(_QWORD *)(v14[13] + 72);
    v14[26] = *(_QWORD *)(*(_QWORD *)v23 + 96);
    sub_2478B722C();
    v24 = v14[8];
    v14[27] = 1;
    v26 = v14[13];
    v25 = v14[14];
    v14[9] = v24;
    v27 = (_QWORD *)OUTLINED_FUNCTION_225_0();
    v27[2] = v25;
    v27[3] = v26;
    v27[4] = a11;
    OUTLINED_FUNCTION_252();
  }
  OUTLINED_FUNCTION_386();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_17();
  v14[32] = *(_QWORD *)(*(_QWORD *)v22 + 96);
  v14[33] = MEMORY[0x38];
  OUTLINED_FUNCTION_43();
  v28 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_510(v28);
  OUTLINED_FUNCTION_240_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  OUTLINED_FUNCTION_257_0();
  return swift_task_switch();
}

uint64_t sub_2477731D4()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v1 + 248) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_247773230()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  OUTLINED_FUNCTION_49();
  v3 = v1[27];
  if (v3 == sub_2478B71FC())
  {
    OUTLINED_FUNCTION_386();
    OUTLINED_FUNCTION_88();
    OUTLINED_FUNCTION_17();
    v1[32] = *(_QWORD *)(*(_QWORD *)v2 + 96);
    v1[33] = *(_QWORD *)(v0 + 56);
    OUTLINED_FUNCTION_43();
    v4 = OUTLINED_FUNCTION_40();
    OUTLINED_FUNCTION_510(v4);
    OUTLINED_FUNCTION_240_0();
    OUTLINED_FUNCTION_126();
    OUTLINED_FUNCTION_84();
    return swift_task_switch();
  }
  else
  {
    v6 = v1[27];
    result = sub_2478B722C();
    v7 = v1[8];
    v1[27] = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      v9 = v1[13];
      v8 = v1[14];
      v1[9] = v7;
      v10 = (_QWORD *)OUTLINED_FUNCTION_225_0();
      v10[2] = v8;
      v10[3] = v9;
      v10[4] = v1 + 6;
      OUTLINED_FUNCTION_252();
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_2477733D0()
{
  _QWORD *v0;
  void (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_431();
  v1 = (void (*)(uint64_t, uint64_t))v0[33];
  v3 = v0[13];
  v2 = v0[14];
  swift_release();
  v1(v2, v3);
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247773434()
{
  uint64_t v0;
  int8x16_t *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v9)(uint64_t, unint64_t, unint64_t, void *, int8x16_t *, uint64_t, _QWORD, _QWORD);

  v1 = (int8x16_t *)OUTLINED_FUNCTION_225_0();
  *(_QWORD *)(v0 + 280) = v1;
  v1[1] = vextq_s8(*(int8x16_t *)(v0 + 104), *(int8x16_t *)(v0 + 104), 8uLL);
  v1[2].i64[0] = v0 + 40;
  v2 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 288) = v2;
  OUTLINED_FUNCTION_414();
  type metadata accessor for ContentRegistration(v3, v4, v5, v6);
  v7 = OUTLINED_FUNCTION_134_0();
  *v2 = v0;
  v2[1] = sub_247773500;
  return v9(v0 + 80, 0xD000000000000012, 0x80000002478D10B0, &unk_2576C2410, v1, v7, *(_QWORD *)(v0 + 120), *(_QWORD *)(v0 + 144));
}

uint64_t sub_247773500()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v1 + 296) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_122(*(_QWORD *)(v1 + 128));
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_247773564()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 80);
  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_497();
  OUTLINED_FUNCTION_445();
  OUTLINED_FUNCTION_444();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_50();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v1);
}

uint64_t sub_2477735B8()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_497();
  OUTLINED_FUNCTION_445();
  OUTLINED_FUNCTION_444();
  OUTLINED_FUNCTION_443();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_293(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247773608()
{
  uint64_t v0;

  OUTLINED_FUNCTION_353();
  OUTLINED_FUNCTION_497();
  OUTLINED_FUNCTION_445();
  OUTLINED_FUNCTION_444();
  OUTLINED_FUNCTION_443();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_293(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247773644(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t TupleTypeMetadata2;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  _QWORD v11[2];

  v11[0] = a2;
  v11[1] = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v9 = (char *)v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))((char *)v11 - v8, a1, AssociatedTypeWitness);
  (*(void (**)(char *, _QWORD, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(&v9[*(int *)(TupleTypeMetadata2 + 48)], v11[0], v5);
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  LOBYTE(v5) = sub_2478B70C4();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, TupleTypeMetadata2);
  return v5 & 1;
}

uint64_t sub_2477738BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;

  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  return swift_task_switch();
}

uint64_t sub_2477738E0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(void);
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_373();
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_417();
    return OUTLINED_FUNCTION_35_0(v2);
  }
  else
  {
    OUTLINED_FUNCTION_325();
    OUTLINED_FUNCTION_287();
    swift_getAssociatedTypeWitness();
    v4 = OUTLINED_FUNCTION_287();
    v5 = OUTLINED_FUNCTION_505();
    v6 = (_QWORD *)OUTLINED_FUNCTION_258_0();
    v1[9] = (uint64_t)v6;
    *v6 = v1;
    v6[1] = sub_2477739F4;
    return OUTLINED_FUNCTION_194_0(v1[2], v1[4], v1[5], v1[6], v5, v4, v7);
  }
}

uint64_t sub_2477739F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_108_0();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247773A28(uint64_t a1, uint64_t *a2)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3[3] = a1;
  v3[4] = v2;
  v5 = a2[3];
  sub_247758170(255, (unint64_t *)&qword_25444CC38);
  OUTLINED_FUNCTION_508();
  v6 = sub_2478B73C4();
  v3[5] = v6;
  v3[6] = *(_QWORD *)(v6 - 8);
  v3[7] = swift_task_alloc();
  v3[8] = swift_task_alloc();
  v7 = type metadata accessor for ContentManagementPlan.Link.Mode(0, a2[2], v5, a2[4]);
  v3[9] = v7;
  v3[10] = *(_QWORD *)(v7 - 8);
  v3[11] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_247773AE4()
{
  _QWORD *v0;
  int EnumCaseMultiPayload;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(void);
  uint64_t (*v11)(_QWORD);

  OUTLINED_FUNCTION_204_0(v0[11], v0[4], *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[10] + 16));
  OUTLINED_FUNCTION_87();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  v2 = v0[11];
  if (EnumCaseMultiPayload == 1)
  {
    v4 = v0[7];
    v3 = v0[8];
    v5 = v0[5];
    v6 = v0[6];
    v7 = v0[3];
    OUTLINED_FUNCTION_228_0(v3, v2, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    OUTLINED_FUNCTION_228_0(v4, v3, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 16));
    sub_247775DA0(v5, (uint64_t)(v0 + 2), v7);
    OUTLINED_FUNCTION_122(v0[6]);
    OUTLINED_FUNCTION_440();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    v9 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return v9();
  }
  else
  {
    v0[12] = *(_QWORD *)(v2 + 8);
    v8 = (_QWORD *)OUTLINED_FUNCTION_9_1();
    v0[13] = v8;
    *v8 = v0;
    v8[1] = sub_247773C10;
    return v11(v0[3]);
  }
}

uint64_t sub_247773C10()
{
  OUTLINED_FUNCTION_246_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247773C4C()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_440();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v0);
}

uint64_t sub_247773C84()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_439();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_195_0(*(uint64_t (**)(void))(v0 + 8));
}

BOOL sub_247773CC4(uint64_t a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _BOOL8 v16;
  uint64_t v18;

  v18 = a1;
  v3 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for ContentRegistration(255, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  v8 = sub_2478B7148();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8](v8);
  v11 = (char *)&v18 - v10;
  v12 = (uint64_t *)((char *)a2 + *(_QWORD *)(v3 + 200));
  swift_beginAccess();
  v13 = *v12;
  v14 = swift_getAssociatedTypeWitness();
  v15 = swift_getAssociatedConformanceWitness();
  MEMORY[0x2495827BC](v18, v13, v14, v7, *(_QWORD *)(v15 + 16));
  swift_endAccess();
  v16 = __swift_getEnumTagSinglePayload((uint64_t)v11, 1, v7) == 1;
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  return v16;
}

uint64_t sub_247773EE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  int *v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v6 = *(int **)(AssociatedConformanceWitness + 48);
  v7 = swift_checkMetadataState();
  v10 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))((char *)v6 + *v6);
  v8 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v8;
  *v8 = v3;
  v8[1] = sub_24777400C;
  return v10(a3, 1, v7, AssociatedConformanceWitness);
}

uint64_t sub_24777400C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_513(v5);
  if (v1)
    return OUTLINED_FUNCTION_195_0(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = a1;
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_247774060()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_276(*(_QWORD *)(v0 + 32));
}

uint64_t sub_24777406C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;
  uint64_t v7;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7 = type metadata accessor for ContentRegistration(0, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a2, a1, v7);
}

uint64_t sub_2477741A0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v3[15] = a2;
  v3[16] = a3;
  v4 = *a3;
  v5 = *(_QWORD *)(*a3 + 88);
  v3[17] = v5;
  v6 = *(_QWORD *)(v4 + 80);
  v3[18] = v6;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v3[19] = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3[20] = AssociatedTypeWitness;
  v3[21] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v3[22] = swift_task_alloc();
  v8 = type metadata accessor for ContentManagementPlan.Link(0, v6, AssociatedTypeWitness, v5);
  v3[23] = v8;
  v3[24] = *(_QWORD *)(v8 - 8);
  v3[25] = swift_task_alloc();
  v9 = sub_2478B6FEC();
  v3[26] = type metadata accessor for ContentManagementPlan.Link(255, v6, v9, v5);
  v3[27] = swift_getTupleTypeMetadata3();
  v10 = sub_2478B7148();
  v3[28] = v10;
  v3[29] = *(_QWORD *)(v10 - 8);
  v3[30] = swift_task_alloc();
  v3[31] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_2477743D8()
{
  uint64_t v0;
  _QWORD *v1;
  char v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char v13;
  uint64_t (*v14)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t result;
  _QWORD *v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_85();
  v4 = (_QWORD *)(v1[16] + *(_QWORD *)(*(_QWORD *)v1[16] + 152));
  OUTLINED_FUNCTION_7_0();
  v1[32] = *v4;
  sub_2478B6DA0();
  v5 = OUTLINED_FUNCTION_285();
  v1[12] = v5;
  if (v5 != MEMORY[0x2495829A8](v1[32], v1[27]))
  {
    v6 = OUTLINED_FUNCTION_170_0();
    OUTLINED_FUNCTION_165_0();
    if ((v6 & 1) != 0)
    {
      OUTLINED_FUNCTION_36_0(*(_QWORD *)(v1[27] - 8));
    }
    else
    {
      v21 = v1[27];
      result = sub_2478B71CC();
      v22 = *(_QWORD *)(v21 - 8);
      if (*(_QWORD *)(v22 + 64) != 8)
      {
        __break(1u);
        return result;
      }
      v1[13] = result;
      OUTLINED_FUNCTION_36_0(v22);
      OUTLINED_FUNCTION_512();
    }
    OUTLINED_FUNCTION_129_0();
    OUTLINED_FUNCTION_144_0();
  }
  OUTLINED_FUNCTION_210_0();
  __swift_storeEnumTagSinglePayload(v7, v8, v9, v10);
  v11 = v1[31];
  v12 = v1[27];
  OUTLINED_FUNCTION_159_0(*(uint64_t (**)(uint64_t))(v1[29] + 32));
  OUTLINED_FUNCTION_24_1(v11, 1, v12);
  if (v13)
  {
    OUTLINED_FUNCTION_316();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_190();
    v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_20_1(v14);
  }
  OUTLINED_FUNCTION_99_0();
  OUTLINED_FUNCTION_373();
  if (v0)
  {
    v15 = v1[24];
    v16 = v1[25];
    OUTLINED_FUNCTION_214();
    OUTLINED_FUNCTION_89();
    sub_247779F88(v3, v12, v2, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
    OUTLINED_FUNCTION_233_0(v16, *(uint64_t (**)(uint64_t, uint64_t))(v15 + 8));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_190();
    v14 = (uint64_t (*)(void))OUTLINED_FUNCTION_417();
    return OUTLINED_FUNCTION_20_1(v14);
  }
  OUTLINED_FUNCTION_370();
  v18 = (_QWORD *)swift_task_alloc();
  v1[39] = v18;
  *v18 = v1;
  v18[1] = sub_2477745FC;
  v19 = OUTLINED_FUNCTION_514();
  return OUTLINED_FUNCTION_196(v19, v20);
}

uint64_t sub_2477745FC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_97(v3);
  *(_QWORD *)(v1 + 320) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_34_0();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_17_1();
    return OUTLINED_FUNCTION_0_3();
  }
  else
  {
    *(_QWORD *)(v1 + 328) = *(_QWORD *)(v1 + 112);
    v5 = (_QWORD *)swift_task_alloc();
    *(_QWORD *)(v1 + 336) = v5;
    *v5 = v2;
    v5[1] = sub_2477746A0;
    return sub_247773A28(*(_QWORD *)(v1 + 176), *(uint64_t **)(v1 + 184));
  }
}

uint64_t sub_2477746A0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v9)(_QWORD, _QWORD, _QWORD *, uint64_t, uint64_t);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v3);
  v0[43] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_178_0();
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_17_1();
    return OUTLINED_FUNCTION_150_0();
  }
  else
  {
    v0[2] = v0[35];
    v5 = v0 + 2;
    v5[1] = v5[34];
    *((_OWORD *)v5 + 1) = *(_OWORD *)(v5 + 35);
    v6 = OUTLINED_FUNCTION_390();
    OUTLINED_FUNCTION_508();
    v7 = swift_checkMetadataState();
    v8 = (_QWORD *)OUTLINED_FUNCTION_258_0();
    v5[42] = v8;
    *v8 = v2;
    v8[1] = sub_2477747AC;
    return v9(v5[39], v5[20], v5, v7, v6);
  }
}

uint64_t sub_2477747AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t *a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t **v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t *v20;
  uint64_t v21;
  uint64_t v22;

  OUTLINED_FUNCTION_314();
  a15 = v18;
  a16 = v19;
  a14 = (uint64_t *)v17;
  a14 = *v17;
  v20 = a14;
  OUTLINED_FUNCTION_97(&a14);
  v20[45] = v16;
  swift_task_dealloc();
  if (v16)
  {
    v22 = v20[21];
    v21 = v20[22];
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_235_0(v21, *(uint64_t (**)(uint64_t, uint64_t))(v22 + 8));
    OUTLINED_FUNCTION_30();
  }
  else
  {
    OUTLINED_FUNCTION_122(v20[21]);
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_20();
    OUTLINED_FUNCTION_34_0();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_150_0();
}

uint64_t sub_24777484C()
{
  _QWORD *v0;
  char v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  uint64_t (*v16)(void);
  uint64_t v17;
  uint64_t v18;
  uint64_t result;
  _QWORD *v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;

  OUTLINED_FUNCTION_85();
  v3 = OUTLINED_FUNCTION_519();
  sub_247779F88(v3, v4, v5, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  OUTLINED_FUNCTION_119_0();
  v6 = v0[12];
  v7 = v0[45];
  if (v6 != MEMORY[0x2495829A8](v0[32], v0[27]))
  {
    v8 = sub_2478B6FA4();
    sub_2478B6F74();
    if ((v8 & 1) != 0)
    {
      OUTLINED_FUNCTION_36_0(*(_QWORD *)(v0[27] - 8));
    }
    else
    {
      v23 = v0[27];
      result = sub_2478B71CC();
      v24 = *(_QWORD *)(v23 - 8);
      if (*(_QWORD *)(v24 + 64) != 8)
      {
        __break(1u);
        return result;
      }
      v0[13] = result;
      OUTLINED_FUNCTION_36_0(v24);
      OUTLINED_FUNCTION_512();
    }
    OUTLINED_FUNCTION_129_0();
    OUTLINED_FUNCTION_87();
    OUTLINED_FUNCTION_218();
  }
  OUTLINED_FUNCTION_210_0();
  __swift_storeEnumTagSinglePayload(v9, v10, v11, v12);
  v13 = v0[31];
  v14 = v0[27];
  OUTLINED_FUNCTION_159_0(*(uint64_t (**)(uint64_t))(v0[29] + 32));
  OUTLINED_FUNCTION_24_1(v13, 1, v14);
  if (v15)
  {
    OUTLINED_FUNCTION_316();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39();
    OUTLINED_FUNCTION_190();
    v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_20_1(v16);
  }
  OUTLINED_FUNCTION_99_0();
  sub_2478B7034();
  if (v7)
  {
    v17 = v0[24];
    v18 = v0[25];
    OUTLINED_FUNCTION_214();
    OUTLINED_FUNCTION_89();
    sub_247779F88(v2, v14, v1, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
    OUTLINED_FUNCTION_233_0(v18, *(uint64_t (**)(uint64_t, uint64_t))(v17 + 8));
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_371();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_190();
    v16 = (uint64_t (*)(void))OUTLINED_FUNCTION_417();
    return OUTLINED_FUNCTION_20_1(v16);
  }
  OUTLINED_FUNCTION_370();
  v20 = (_QWORD *)swift_task_alloc();
  v0[39] = v20;
  *v20 = v0;
  v20[1] = sub_2477745FC;
  v21 = OUTLINED_FUNCTION_514();
  return OUTLINED_FUNCTION_196(v21, v22);
}

uint64_t sub_247774A5C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 192));
  OUTLINED_FUNCTION_427(v1, v2, v3, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  OUTLINED_FUNCTION_275();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247774ABC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  char v3;

  v1 = OUTLINED_FUNCTION_519();
  sub_247779F88(v1, v2, v3, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_275();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247774B10()
{
  uint64_t v0;

  OUTLINED_FUNCTION_314();
  sub_247779F88(*(_QWORD *)(v0 + 264), *(_QWORD *)(v0 + 272), *(_BYTE *)(v0 + 89), (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  OUTLINED_FUNCTION_140_0();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_30();
  OUTLINED_FUNCTION_275();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_35_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247774B80(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;

  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return swift_task_switch();
}

uint64_t sub_247774B9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(void);
  _QWORD *v4;
  uint64_t (*v5)(_QWORD);

  OUTLINED_FUNCTION_373();
  if (v0)
  {
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_417();
    return OUTLINED_FUNCTION_195_0(v2);
  }
  else
  {
    v4 = (_QWORD *)OUTLINED_FUNCTION_9_1();
    *(_QWORD *)(v1 + 40) = v4;
    *v4 = v1;
    v4[1] = sub_247774C0C;
    return v5(*(_QWORD *)(v1 + 16));
  }
}

uint64_t sub_247774C0C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108_0();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_247774C38()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  OUTLINED_FUNCTION_204();
  v20 = v0;
  v23 = v1;
  v24 = v2;
  v22 = v3;
  v25 = v4;
  v5 = *v0;
  OUTLINED_FUNCTION_256_0();
  OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_199_0();
  v21 = OUTLINED_FUNCTION_261_0();
  OUTLINED_FUNCTION_420(v21, v6, v21);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v19 - v8);
  v10 = *(_QWORD *)(v5 + 120);
  v11 = v0;
  v12 = (_QWORD *)((char *)v0 + v10);
  OUTLINED_FUNCTION_7_0();
  v13 = *v12;
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_467();
  OUTLINED_FUNCTION_485();
  OUTLINED_FUNCTION_242_0();
  v14 = OUTLINED_FUNCTION_289();
  v15 = MEMORY[0x249582984](v13, v14);
  OUTLINED_FUNCTION_243_0();
  v26 = v22;
  v27 = v23;
  v28 = v24;
  OUTLINED_FUNCTION_7_0();
  sub_2478B6FEC();
  OUTLINED_FUNCTION_242_0();
  OUTLINED_FUNCTION_197();
  sub_2478B6FC8();
  swift_endAccess();
  v16 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(v16 + 16) = v11;
  *(_QWORD *)(v16 + 24) = v15;
  *v9 = &unk_2576C2388;
  v9[1] = v16;
  OUTLINED_FUNCTION_303();
  v17 = swift_checkMetadataState();
  OUTLINED_FUNCTION_504((uint64_t)v9, v18, v17);
  OUTLINED_FUNCTION_310();
  OUTLINED_FUNCTION_112();
}

uint64_t sub_247774E94(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v3[8] = *a2;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v3[9] = v4;
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247774F0C()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_207_0();
  if (v0)
  {
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_110_0();
    OUTLINED_FUNCTION_164_0();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_344();
    sub_2478B7148();
    OUTLINED_FUNCTION_331();
    OUTLINED_FUNCTION_221_0();
    OUTLINED_FUNCTION_50();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  }
  else
  {
    OUTLINED_FUNCTION_490();
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_21_1();
    OUTLINED_FUNCTION_268();
    v1 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_142_0(v1, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_50();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_352();
  }
  return OUTLINED_FUNCTION_1_2(v2);
}

uint64_t sub_2477750AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t (*v5)(uint64_t);

  type metadata accessor for ContentManagementPlan.Link.Mode(0, a2, a3, a4);
  v4 = OUTLINED_FUNCTION_87();
  return v5(v4);
}

void sub_2477750E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedConformanceWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  OUTLINED_FUNCTION_204();
  v20 = v1;
  v21 = v2;
  v3 = OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_121_0();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v19 = type metadata accessor for ContentRegistration(255, v3, AssociatedConformanceWitness, v5);
  v18 = OUTLINED_FUNCTION_420(v19, v6, v19);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (uint64_t *)((char *)&v18 - v8);
  OUTLINED_FUNCTION_421();
  v10 = OUTLINED_FUNCTION_336();
  v11 = *(_QWORD *)(v10 - 8);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v12);
  OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_7_0();
  v13 = sub_2478B6DA0();
  v14 = MEMORY[0x249582984](v13, v10);
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_337(AssociatedConformanceWitness, v20, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 16));
  OUTLINED_FUNCTION_7_0();
  sub_2478B6FEC();
  OUTLINED_FUNCTION_464();
  swift_endAccess();
  v15 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(v15 + 16) = v0;
  *(_QWORD *)(v15 + 24) = v14;
  *v9 = &unk_2576C2378;
  v9[1] = v15;
  OUTLINED_FUNCTION_303();
  v16 = swift_checkMetadataState();
  OUTLINED_FUNCTION_504((uint64_t)v9, v17, v16);
  swift_retain();
  OUTLINED_FUNCTION_112();
}

uint64_t sub_247775300(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v3[8] = *a2;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v3[9] = v4;
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247775378()
{
  char v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_85();
  OUTLINED_FUNCTION_207_0();
  if (v0)
  {
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_110_0();
    OUTLINED_FUNCTION_110_0();
    swift_getAssociatedConformanceWitness();
    OUTLINED_FUNCTION_404();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_96_0();
    swift_getAssociatedConformanceWitness();
    v1 = OUTLINED_FUNCTION_421();
    type metadata accessor for ContentRegistration(v1, v2, v3, v4);
    sub_2478B7004();
    OUTLINED_FUNCTION_221_0();
    OUTLINED_FUNCTION_50();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  }
  else
  {
    OUTLINED_FUNCTION_490();
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_21_1();
    OUTLINED_FUNCTION_268();
    OUTLINED_FUNCTION_234();
    v5 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_142_0(v5, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_50();
    v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_352();
  }
  return OUTLINED_FUNCTION_20_1(v6);
}

uint64_t sub_247775504()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;
  _QWORD v11[2];
  char v12;
  uint64_t v13;

  v1 = *v0;
  OUTLINED_FUNCTION_7_0();
  v9 = *(_QWORD *)(v1 + 80);
  v10 = *(_QWORD *)(v1 + 88);
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_325();
  OUTLINED_FUNCTION_287();
  OUTLINED_FUNCTION_405();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_405();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_292();
  OUTLINED_FUNCTION_292();
  OUTLINED_FUNCTION_143();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_394();
  swift_getAssociatedConformanceWitness();
  v2 = sub_2478B70DC();
  v3 = OUTLINED_FUNCTION_383();
  v4 = MEMORY[0x249582984](v3, v2);
  OUTLINED_FUNCTION_320();
  v5 = sub_2478B6FEC();
  OUTLINED_FUNCTION_162();
  MEMORY[0x24958320C](MEMORY[0x24BEE12C8], v5);
  v13 = sub_2478B70E8();
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_356();
  sub_2478B6FC8();
  swift_endAccess();
  v6 = OUTLINED_FUNCTION_118();
  *(_QWORD *)(v6 + 16) = v0;
  *(_QWORD *)(v6 + 24) = v4;
  v11[0] = &unk_2576C2368;
  v11[1] = v6;
  v12 = 0;
  swift_getAssociatedTypeWitness();
  v7 = OUTLINED_FUNCTION_134_0();
  sub_2477750AC((uint64_t)v11, v9, v7, v10);
  return OUTLINED_FUNCTION_310();
}

uint64_t sub_24777578C(uint64_t a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;

  v3[6] = a2;
  v3[7] = a3;
  v3[5] = a1;
  v3[8] = *a2;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v3[9] = v4;
  v3[10] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247775804()
{
  char v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  OUTLINED_FUNCTION_181();
  OUTLINED_FUNCTION_207_0();
  if (v0)
  {
    OUTLINED_FUNCTION_7_0();
    OUTLINED_FUNCTION_110_0();
    OUTLINED_FUNCTION_164_0();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_96_0();
    OUTLINED_FUNCTION_122_0();
    OUTLINED_FUNCTION_121_0();
    OUTLINED_FUNCTION_344();
    OUTLINED_FUNCTION_134_0();
    OUTLINED_FUNCTION_331();
    OUTLINED_FUNCTION_221_0();
    OUTLINED_FUNCTION_50();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  }
  else
  {
    OUTLINED_FUNCTION_490();
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_21_1();
    OUTLINED_FUNCTION_268();
    v1 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_142_0(v1, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_50();
    v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_352();
  }
  return OUTLINED_FUNCTION_1_2(v2);
}

void sub_24777599C()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  char *v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD v24[2];

  OUTLINED_FUNCTION_204();
  v1 = v0;
  v3 = v2;
  v5 = v4;
  v7 = v6;
  v24[1] = v8;
  v9 = (_QWORD *)*v0;
  v11 = v9[10];
  v10 = v9[11];
  type metadata accessor for ContentManagementPlan.Link.Mode(0, v11, v2, v10);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v12);
  v14 = (_QWORD *)((char *)v24 - v13);
  v15 = (char *)v1 + v9[22];
  v24[0] = *(_QWORD *)(*(_QWORD *)v15 + 16);
  v16 = (_QWORD *)OUTLINED_FUNCTION_118();
  v16[2] = v11;
  v16[3] = v3;
  v16[4] = v10;
  v16[5] = v7;
  v16[6] = v5;
  swift_retain();
  sub_2477619E4();
  v17 = *(_QWORD *)(*(_QWORD *)v15 + 16);
  sub_247761AC8(v17);
  v18 = *(_QWORD *)v15;
  *(_QWORD *)(v18 + 16) = v17 + 1;
  v19 = v18 + 16 * v17;
  *(_QWORD *)(v19 + 32) = &unk_2576C2398;
  *(_QWORD *)(v19 + 40) = v16;
  v20 = (_QWORD *)OUTLINED_FUNCTION_118();
  v20[2] = v3;
  v20[3] = v1;
  v20[4] = v24[0];
  *v14 = &unk_2576C23A8;
  v14[1] = v20;
  OUTLINED_FUNCTION_143();
  OUTLINED_FUNCTION_303();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_335(v21, v22, v23);
  OUTLINED_FUNCTION_310();
  OUTLINED_FUNCTION_112();
}

uint64_t sub_247775ABC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t v7;
  _QWORD *v8;
  uint64_t (*v10)(uint64_t);

  v5[2] = a1;
  v5[3] = a5;
  v5[4] = *(_QWORD *)(a5 - 8);
  v7 = swift_task_alloc();
  v5[5] = v7;
  v10 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v8 = (_QWORD *)swift_task_alloc();
  v5[6] = v8;
  *v8 = v5;
  v8[1] = sub_247775B48;
  return v10(v7);
}

uint64_t sub_247775B48()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v4)(void);
  uint64_t v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t *boxed_opaque_existential_0;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_513(v3);
  if (v0)
  {
    swift_task_dealloc();
    v4 = *(uint64_t (**)(void))(v2 + 8);
  }
  else
  {
    v6 = v1[4];
    v5 = v1[5];
    v7 = (uint64_t *)v1[2];
    v7[3] = v1[3];
    boxed_opaque_existential_0 = __swift_allocate_boxed_opaque_existential_0(v7);
    OUTLINED_FUNCTION_204_0((uint64_t)boxed_opaque_existential_0, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 32));
    OUTLINED_FUNCTION_50();
    v4 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  }
  return OUTLINED_FUNCTION_5_1(v4);
}

uint64_t sub_247775BB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[14] = a3;
  v4[15] = a4;
  v4[12] = a1;
  v4[13] = a2;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v4[16] = v5;
  v4[17] = swift_task_alloc();
  return swift_task_switch();
}

void sub_247775C24()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);
  _OWORD *v7;
  _OWORD *v8;

  OUTLINED_FUNCTION_314();
  v1 = *(_QWORD *)(v0 + 104);
  if (*(_BYTE *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 216)) != 1)
  {
    sub_24777986C();
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 49) = 1;
    OUTLINED_FUNCTION_307();
    OUTLINED_FUNCTION_234();
    v5 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_142_0(v5, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_220();
    goto LABEL_7;
  }
  v2 = *(_QWORD *)(v0 + 112);
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    v3 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184));
    if (*(_QWORD *)(v3 + 16) > v2)
    {
      v4 = sub_24777DC80(v3 + 40 * v2 + 32, v0 + 16);
      if ((*(_BYTE *)(v0 + 48) & 1) == 0)
      {
        v7 = (_OWORD *)OUTLINED_FUNCTION_87();
        sub_247757EF4(v7, v8);
        swift_dynamicCast();
        OUTLINED_FUNCTION_39();
        v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
        goto LABEL_9;
      }
      *(_QWORD *)(v0 + 88) = *(_QWORD *)(v0 + 16);
      OUTLINED_FUNCTION_206(v4, (unint64_t *)&qword_25444CC38);
      swift_willThrowTypedImpl();
LABEL_7:
      swift_task_dealloc();
      v6 = (uint64_t (*)(void))OUTLINED_FUNCTION_352();
LABEL_9:
      OUTLINED_FUNCTION_35_0(v6);
      return;
    }
  }
  __break(1u);
}

uint64_t sub_247775DA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  if (swift_getEnumCaseMultiPayload() != 1)
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 32))(a3, v3);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 32))(a2, v3, *(_QWORD *)(a1 + 24));
  return swift_willThrowTypedImpl();
}

uint64_t sub_247775E34()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 40);
  v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

uint64_t sub_247775FF0(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t AssociatedTypeWitness;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  uint64_t v16;
  void (*v17)(char *, uint64_t);
  _QWORD v19[2];
  uint64_t *v20;
  uint64_t v21;

  v20 = a4;
  v21 = a3;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v19[1] = swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2478B6FEC();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v8 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v9 = MEMORY[0x24BDAC7A8](TupleTypeMetadata2);
  v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v9);
  v13 = (char *)v19 - v12;
  v14 = *a2;
  v15 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16);
  v15((char *)v19 - v12, a1, AssociatedTypeWitness);
  *(_QWORD *)&v13[*(int *)(TupleTypeMetadata2 + 48)] = v14;
  v16 = *v20;
  v15(v11, v21, AssociatedTypeWitness);
  *(_QWORD *)&v11[*(int *)(TupleTypeMetadata2 + 48)] = v16;
  swift_getAssociatedConformanceWitness();
  sub_2478B6DA0();
  sub_2478B6DA0();
  LOBYTE(v15) = sub_2478B6E0C();
  v17 = *(void (**)(char *, uint64_t))(v8 + 8);
  v17(v11, TupleTypeMetadata2);
  v17(v13, TupleTypeMetadata2);
  return v15 & 1;
}

BOOL sub_2477762FC()
{
  char v0;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedConformanceWitness();
  sub_2478B6DA0();
  v0 = sub_2478B70C4();
  swift_bridgeObjectRelease();
  return (v0 & 1) == 0;
}

uint64_t sub_2477764CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE v16[16];
  uint64_t v17;
  uint64_t v18;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v22 = a1;
  v20 = a4;
  v21 = a5;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v8 = sub_2478B70DC();
  v9 = MEMORY[0x24958320C](MEMORY[0x24BEE1728], v8);
  v22 = sub_247784004((void (*)(char *, uint64_t))sub_24777E070, (uint64_t)v19, v8, AssociatedTypeWitness, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v10);
  sub_2478B6FEC();
  sub_2478B6FEC();
  sub_2478B6FC8();
  v22 = a1;
  v17 = a4;
  v18 = a5;
  v11 = swift_getAssociatedTypeWitness();
  v22 = sub_247784004((void (*)(char *, uint64_t))sub_24777E094, (uint64_t)v16, v8, v11, MEMORY[0x24BEE4078], v9, MEMORY[0x24BEE40A8], v12);
  swift_getAssociatedConformanceWitness();
  sub_2478B70DC();
  v13 = sub_2478B6FEC();
  MEMORY[0x24958320C](MEMORY[0x24BEE12C8], v13);
  return sub_2478B70D0();
}

uint64_t sub_24777679C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_2477768F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5[8] = a4;
  v5[9] = a5;
  v5[6] = a2;
  v5[7] = a3;
  v5[5] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5[10] = AssociatedTypeWitness;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v5[11] = swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v5[12] = AssociatedConformanceWitness;
  v5[13] = type metadata accessor for ContentRegistration.SourceInfo(0, AssociatedTypeWitness, AssociatedConformanceWitness, v8);
  v5[14] = swift_task_alloc();
  v10 = type metadata accessor for ContentRegistration(0, AssociatedTypeWitness, AssociatedConformanceWitness, v9);
  v5[15] = v10;
  v5[16] = *(_QWORD *)(v10 - 8);
  v5[17] = swift_task_alloc();
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v11 = swift_getAssociatedTypeWitness();
  v5[20] = v11;
  v12 = sub_2478B7148();
  v5[21] = v12;
  v5[22] = *(_QWORD *)(v12 - 8);
  v5[23] = swift_task_alloc();
  v5[24] = *(_QWORD *)(v11 - 8);
  v5[25] = swift_task_alloc();
  v5[26] = swift_task_alloc();
  v5[27] = swift_task_alloc();
  return swift_task_switch();
}

void sub_247776B24()
{
  _QWORD *v0;
  _QWORD *v1;

  v1 = (_QWORD *)v0[7];
  v0[2] = OUTLINED_FUNCTION_158_0();
  v0[28] = *v1;
  swift_getAssociatedTypeWitness();
  v0[29] = OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_177_0();
  v0[3] = OUTLINED_FUNCTION_472();
  OUTLINED_FUNCTION_349();
}

uint64_t sub_247776DBC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v1 + 288) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    OUTLINED_FUNCTION_30();
    OUTLINED_FUNCTION_34_0();
  }
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

#error "247776F48: call analysis failed (funcsize=90)"

uint64_t sub_247776FA8()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 304) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247777008()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;

  OUTLINED_FUNCTION_16_1();
  OUTLINED_FUNCTION_97(v2);
  *(_QWORD *)(v0 + 320) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

void sub_247777068()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_49();
  v1 = v0[27];
  v2 = v0[24];
  v3 = v0[18];
  v4 = v0[16];
  OUTLINED_FUNCTION_387(*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 16));
  OUTLINED_FUNCTION_506();
  OUTLINED_FUNCTION_465();
  OUTLINED_FUNCTION_233_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_192_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_328();
}

void sub_2477771F0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(void);

  OUTLINED_FUNCTION_49();
  v1 = v0[26];
  v2 = v0[24];
  v3 = v0[19];
  v4 = v0[16];
  OUTLINED_FUNCTION_481();
  v5();
  OUTLINED_FUNCTION_506();
  OUTLINED_FUNCTION_465();
  OUTLINED_FUNCTION_233_0(v3, *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8));
  OUTLINED_FUNCTION_202_0(v1, *(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  OUTLINED_FUNCTION_328();
}

uint64_t sub_247777380()
{
  uint64_t v0;

  OUTLINED_FUNCTION_434();
  OUTLINED_FUNCTION_160_0();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_34_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477773D8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_434();
  OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_160_0();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_34_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24777744C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_434();
  OUTLINED_FUNCTION_122(*(_QWORD *)(v0 + 128));
  OUTLINED_FUNCTION_119_0();
  OUTLINED_FUNCTION_160_0();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_213();
  OUTLINED_FUNCTION_31_1();
  OUTLINED_FUNCTION_29_0();
  OUTLINED_FUNCTION_34_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477774BC()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_341();
  OUTLINED_FUNCTION_348();
  OUTLINED_FUNCTION_482();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_403();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_341();
  v0 = OUTLINED_FUNCTION_348();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 32);
  OUTLINED_FUNCTION_357();
  v2 = swift_checkMetadataState();
  return v1(v2, v0);
}

uint64_t sub_2477775F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_122(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8));
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  OUTLINED_FUNCTION_193();
  return v0;
}

uint64_t sub_2477776C8()
{
  sub_2477775F4();
  return swift_deallocClassInstance();
}

uint64_t sub_2477776EC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);
  uint64_t v19[3];
  char v20;
  uint64_t v21;

  v19[0] = a2;
  v3 = a1[3];
  sub_247758170(255, (unint64_t *)&qword_25444CC38);
  OUTLINED_FUNCTION_421();
  v4 = sub_2478B73C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  OUTLINED_FUNCTION_416();
  v8 = v6 - v7;
  MEMORY[0x24BDAC7A8](v9);
  v11 = (char *)v19 - v10;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v12);
  v13 = type metadata accessor for ContentManagementPlan.Link.Mode(0, a1[2], v3, a1[4]);
  v14 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_415();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v14 + 16))(v3, v19[2], v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = OUTLINED_FUNCTION_400();
    v17(v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 16))(v8, v11, v4);
    sub_247775DA0(v4, (uint64_t)&v21, v19[0]);
    return OUTLINED_FUNCTION_372();
  }
  else
  {
    (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v3, v13);
    sub_24777986C();
    OUTLINED_FUNCTION_476();
    sub_2478B6CA4();
    sub_2478B6C98();
    v20 = 4;
    sub_2478B6C68();
    OUTLINED_FUNCTION_234();
    sub_2478B6C98();
    sub_2477798A8(0, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    sub_247779904();
    swift_allocError();
    sub_2478B6CB0();
    return swift_willThrow();
  }
}

void ContentManagementPlan.after<A, each B>(_:operation:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t v6;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t MetadataPack;
  uint64_t *v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  uint64_t v53;

  OUTLINED_FUNCTION_204();
  v4 = v3;
  v5 = v1;
  v7 = (uint64_t *)(v6 & 0xFFFFFFFFFFFFFFFELL);
  v53 = v2;
  v8 = v3;
  v50 = v10;
  v51 = v9;
  v48 = v11;
  v49 = v12;
  v47 = v6;
  if (v3 == 1)
  {
    v13 = type metadata accessor for ContentManagementPlan.Link(0, *(_QWORD *)(v2 + 16), *v7, *(_QWORD *)(v2 + 24));
  }
  else
  {
    v52 = &v44;
    MEMORY[0x24BDAC7A8](v1);
    if (v4)
    {
      v15 = v7;
      v16 = (uint64_t *)((char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
      v17 = v8;
      do
      {
        ++v15;
        v18 = OUTLINED_FUNCTION_405();
        *v16++ = OUTLINED_FUNCTION_291(v18, v19, v20);
        --v17;
      }
      while (v17);
    }
    v4 = v8;
    v13 = OUTLINED_FUNCTION_327();
  }
  v52 = (uint64_t *)v13;
  v45 = *(_QWORD *)(v13 - 8);
  MEMORY[0x24BDAC7A8](v13);
  v44 = v21;
  v22 = (char *)&v44 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v46 = *v0;
  if (v4)
  {
    v23 = *(_QWORD *)(v53 + 24);
    v24 = (int *)(v52 + 4);
    v25 = v4;
    do
    {
      if (v4 == 1)
        v26 = 0;
      else
        v26 = *v24;
      ++v7;
      v27 = *v5++;
      v28 = &v22[v26];
      v29 = OUTLINED_FUNCTION_508();
      v32 = type metadata accessor for ContentManagementPlan.Link(v29, v30, v31, v23);
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 16))(v28, v27, v32);
      v24 += 4;
      --v25;
      v4 = v8;
    }
    while (v25);
  }
  v33 = v45;
  v34 = (*(unsigned __int8 *)(v45 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v45 + 80);
  v35 = (v44 + v34 + 7) & 0xFFFFFFFFFFFFFFF8;
  v36 = (char *)swift_allocObject();
  v37 = v53;
  v38 = *(_QWORD *)(v53 + 16);
  *((_QWORD *)v36 + 2) = v4;
  *((_QWORD *)v36 + 3) = v38;
  MetadataPack = swift_allocateMetadataPack();
  v41 = v51;
  v40 = v52;
  *((_QWORD *)v36 + 4) = MetadataPack;
  *((_QWORD *)v36 + 5) = v41;
  *((_QWORD *)v36 + 6) = *(_QWORD *)(v37 + 24);
  (*(void (**)(char *, char *, uint64_t *))(v33 + 32))(&v36[v34], v22, v40);
  v42 = &v36[v35];
  v43 = v49;
  *(_QWORD *)v42 = v48;
  *((_QWORD *)v42 + 1) = v43;
  *(_QWORD *)&v36[(v35 + 23) & 0xFFFFFFFFFFFFFFF8] = v46;
  swift_retain();
  OUTLINED_FUNCTION_8();
  OUTLINED_FUNCTION_398();
  sub_24777599C();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_112();
}

uint64_t type metadata accessor for ContentManagementPlan.Link(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentManagementPlan.Link);
}

uint64_t sub_247777BA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t *v12;
  uint64_t TupleTypeMetadata;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  int *v19;
  uint64_t v20;
  int v21;
  uint64_t v23;
  uint64_t v24;

  v8[9] = v23;
  v8[10] = v24;
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a3;
  v8[4] = a4;
  v12 = (uint64_t *)(a8 & 0xFFFFFFFFFFFFFFFELL);
  v8[2] = a1;
  if (a6 == 1)
  {
    TupleTypeMetadata = type metadata accessor for ContentManagementPlan.Link(0, a7, *v12, v24);
  }
  else
  {
    v14 = swift_task_alloc();
    if (a6)
    {
      v15 = (uint64_t *)v14;
      v16 = a6;
      do
      {
        v17 = *v12++;
        *v15++ = type metadata accessor for ContentManagementPlan.Link(255, a7, v17, v24);
        --v16;
      }
      while (v16);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v8[11] = TupleTypeMetadata;
  v8[12] = *(_QWORD *)(TupleTypeMetadata - 8);
  v8[13] = swift_task_alloc();
  v18 = (_QWORD *)swift_task_alloc();
  v8[14] = v18;
  if (a6)
  {
    v19 = (int *)(TupleTypeMetadata + 32);
    v20 = a6;
    do
    {
      if (a6 == 1)
        v21 = 0;
      else
        v21 = *v19;
      *v18++ = a2 + v21;
      v19 += 4;
      --v20;
    }
    while (v20);
  }
  return swift_task_switch();
}

uint64_t sub_247777D0C()
{
  uint64_t *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;

  if (v0[6])
  {
    v1 = 0;
    v2 = v0[8] & 0xFFFFFFFFFFFFFFFELL;
    v3 = 32;
    do
    {
      v4 = v0[6];
      if (v4 == 1)
        v5 = 0;
      else
        v5 = *(_DWORD *)(v0[11] + v3);
      v6 = *(_QWORD *)(v0[14] + 8 * v1);
      v7 = v0[13] + v5;
      v8 = type metadata accessor for ContentManagementPlan.Link(0, v0[7], *(_QWORD *)(v2 + 8 * v1), v0[10]);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(v7, v6, v8);
      ++v1;
      v3 += 16;
    }
    while (v1 != v4);
  }
  v9 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v9;
  *v9 = v0;
  v9[1] = sub_247777DFC;
  return sub_247778108(v0[2], v0[13], v0[3], v0[4], v0[5], v0[6], v0[7], v0[8]);
}

uint64_t sub_247777DFC()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;

  OUTLINED_FUNCTION_35();
  *v2 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247777E4C()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_193_0(*(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v1);
}

uint64_t sub_247777E84()
{
  uint64_t v0;

  OUTLINED_FUNCTION_193_0(*(_QWORD *)(v0 + 96));
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

void sub_247777EC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  OUTLINED_FUNCTION_204();
  a19 = v21;
  a20 = v22;
  v23 = *(_QWORD *)(v20 + 16);
  v24 = *(_QWORD *)(v20 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (v23 == 1)
  {
    v25 = OUTLINED_FUNCTION_358();
    v28 = OUTLINED_FUNCTION_291(v25, v26, v27);
  }
  else
  {
    MEMORY[0x24BDAC7A8](v22);
    v30 = (v29 + 15) & 0xFFFFFFFFFFFFFFF0;
    if (v23)
    {
      v31 = (uint64_t *)((char *)&a9 - v30);
      v32 = v23;
      do
      {
        v24 += 8;
        v33 = OUTLINED_FUNCTION_299();
        *v31++ = OUTLINED_FUNCTION_291(v33, v34, v35);
        --v32;
      }
      while (v32);
    }
    v28 = OUTLINED_FUNCTION_327();
  }
  OUTLINED_FUNCTION_122(*(_QWORD *)(v28 - 8));
  OUTLINED_FUNCTION_523();
  swift_release();
  OUTLINED_FUNCTION_414();
  swift_deallocObject();
  OUTLINED_FUNCTION_112();
}

uint64_t sub_247777FC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  v2 = *(_QWORD *)(v0 + 16);
  v3 = *(_QWORD *)(v0 + 32) & 0xFFFFFFFFFFFFFFFELL;
  if (v2 == 1)
  {
    v4 = OUTLINED_FUNCTION_358();
    OUTLINED_FUNCTION_446(v4, v5, v6);
  }
  else
  {
    v7 = OUTLINED_FUNCTION_104_0();
    if (v2)
    {
      v8 = (uint64_t *)v7;
      v9 = v2;
      do
      {
        v3 += 8;
        v10 = OUTLINED_FUNCTION_299();
        *v8++ = OUTLINED_FUNCTION_446(v10, v11, v12);
        --v9;
      }
      while (v9);
    }
    OUTLINED_FUNCTION_327();
    OUTLINED_FUNCTION_29_0();
  }
  v13 = swift_task_alloc();
  v14 = (_QWORD *)OUTLINED_FUNCTION_78(v13);
  *v14 = v1;
  v14[1] = sub_24777E0AC;
  OUTLINED_FUNCTION_375();
  return sub_247777BA0(v15, v16, v17, v18, v19, v20, v21, v22);
}

uint64_t sub_247778108(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  _QWORD *v8;
  uint64_t *v12;
  uint64_t TupleTypeMetadata;
  unint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;
  uint64_t v31;

  v8[10] = v30;
  v8[11] = v31;
  v8[8] = a7;
  v8[9] = a8;
  v8[6] = a5;
  v8[7] = a6;
  v8[4] = a3;
  v8[5] = a4;
  v12 = (uint64_t *)(a8 & 0xFFFFFFFFFFFFFFFELL);
  v8[3] = a1;
  if (a6 == 1)
  {
    TupleTypeMetadata = *v12;
    v14 = 16;
  }
  else
  {
    v14 = (8 * a6 + 15) & 0xFFFFFFFFFFFFFFF0;
    v15 = swift_task_alloc();
    if (a6)
    {
      v16 = v12;
      v17 = (_QWORD *)v15;
      v18 = a6;
      do
      {
        v19 = *v16++;
        *v17++ = v19;
        --v18;
      }
      while (v18);
    }
    TupleTypeMetadata = swift_getTupleTypeMetadata();
    swift_task_dealloc();
  }
  v8[12] = v14;
  v8[13] = TupleTypeMetadata;
  v8[14] = *(_QWORD *)(TupleTypeMetadata - 8);
  v8[15] = swift_task_alloc();
  v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  v20 = swift_task_alloc();
  v8[18] = v20;
  if (a6)
  {
    v21 = v20;
    v22 = 0;
    do
    {
      if (a6 == 1)
      {
        v23 = 0;
      }
      else
      {
        v24 = a2;
        v25 = v14;
        v26 = swift_task_alloc();
        v27 = 0;
        do
        {
          *(_QWORD *)(v26 + 8 * v27) = type metadata accessor for ContentManagementPlan.Link(255, a7, v12[v27], v31);
          ++v27;
        }
        while (a6 != v27);
        v28 = swift_getTupleTypeMetadata();
        swift_task_dealloc();
        v23 = *(_DWORD *)(v28 + 16 * v22 + 32);
        v14 = v25;
        a2 = v24;
      }
      *(_QWORD *)(v21 + 8 * v22++) = a2 + v23;
    }
    while (v22 != a6);
  }
  return swift_task_switch();
}

void sub_2477782E4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  unint64_t v27;
  uint64_t v28;

  if (v0[7])
  {
    v1 = 0;
    v27 = v0[9] & 0xFFFFFFFFFFFFFFFELL;
    v2 = 32;
    do
    {
      v3 = *(_QWORD *)(v27 + 8 * v1);
      v4 = v0[11];
      v5 = v0[8];
      v28 = *(_QWORD *)(v0[18] + 8 * v1);
      OUTLINED_FUNCTION_394();
      v9 = *(_QWORD *)(OUTLINED_FUNCTION_446(v6, v7, v8) - 8);
      v10 = OUTLINED_FUNCTION_104_0();
      OUTLINED_FUNCTION_228_0(v10, v28, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 16));
      OUTLINED_FUNCTION_87();
      sub_2477786C4(v5, v3, v4, v11);
      v12 = v0[7];
      OUTLINED_FUNCTION_141_0(v10, *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8));
      ++v1;
      OUTLINED_FUNCTION_50();
      v2 += 16;
    }
    while (v1 != v12);
    v13 = v0[7] == 0;
  }
  else
  {
    v13 = 1;
  }
  v14 = v0[17];
  v16 = v0[14];
  v15 = v0[15];
  v17 = v0[13];
  v0[2] = v0[6];
  v18 = swift_task_alloc();
  v0[19] = v18;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
  if (!v13)
  {
    v19 = 0;
    v20 = v0[9] & 0xFFFFFFFFFFFFFFFELL;
    v21 = 32;
    do
    {
      v22 = v0[7];
      v23 = v0[16];
      if (v22 == 1)
      {
        LODWORD(v24) = 0;
      }
      else
      {
        v24 = *(int *)(v0[13] + v21);
        v23 += v24;
      }
      (*(void (**)(uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)(v20 + 8 * v19) - 8) + 16))(v23, v0[15] + (int)v24);
      *(_QWORD *)(v18 + 8 * v19++) = v23;
      v21 += 16;
    }
    while (v19 != v22);
  }
  v25 = (_QWORD *)swift_task_alloc();
  v0[20] = v25;
  *v25 = v0;
  v25[1] = sub_247778574;
  OUTLINED_FUNCTION_257_0();
  __asm { BR              X3 }
}

uint64_t sub_247778574()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  void (*v5)(uint64_t, uint64_t);
  uint64_t v6;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_97(v2);
  v1[21] = v0;
  swift_task_dealloc();
  if (!v0)
  {
    v3 = v1[16];
    v4 = v1[13];
    v5 = *(void (**)(uint64_t, uint64_t))(v1[14] + 8);
    v1[22] = v5;
    v5(v3, v4);
    v6 = OUTLINED_FUNCTION_87();
    ((void (*)(uint64_t))v5)(v6);
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_2477785EC()
{
  uint64_t v0;
  uint64_t (*v1)(void);

  OUTLINED_FUNCTION_314();
  (*(void (**)(_QWORD, _QWORD))(v0 + 176))(*(_QWORD *)(v0 + 136), *(_QWORD *)(v0 + 104));
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  OUTLINED_FUNCTION_213();
  v1 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_35_0(v1);
}

uint64_t sub_247778648()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(_QWORD);
  uint64_t v4;

  OUTLINED_FUNCTION_314();
  v1 = *(_QWORD *)(v0 + 120);
  v2 = *(_QWORD *)(v0 + 104);
  v3 = *(void (**)(_QWORD))(*(_QWORD *)(v0 + 112) + 8);
  ((void (*)(_QWORD, uint64_t))v3)(*(_QWORD *)(v0 + 128), v2);
  ((void (*)(uint64_t, uint64_t))v3)(v1, v2);
  v4 = OUTLINED_FUNCTION_157();
  v3(v4);
  OUTLINED_FUNCTION_50();
  swift_task_dealloc();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  OUTLINED_FUNCTION_190();
  return OUTLINED_FUNCTION_35_0(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477786C4@<X0>(uint64_t a1@<X2>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t *v5;

  v5 = (uint64_t *)type metadata accessor for ContentManagementPlan.Link(0, a1, a2, a3);
  return sub_2477776EC(v5, a4);
}

uint64_t ContentManagementPlan.after<A>(operation:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t *v4;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v9 = *v4;
  v10 = (_QWORD *)OUTLINED_FUNCTION_118();
  v11 = *(_QWORD *)(a3 + 24);
  v10[2] = *(_QWORD *)(a3 + 16);
  v10[3] = a4;
  v10[4] = v11;
  v10[5] = a1;
  v10[6] = a2;
  v10[7] = v9;
  swift_retain();
  OUTLINED_FUNCTION_8();
  sub_24777599C();
  return swift_release();
}

uint64_t sub_2477787A4(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v6;
  uint64_t (*v8)(uint64_t, uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v8 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v6;
  *v6 = v4;
  v6[1] = sub_247778818;
  return v8(a1, v4 + 16);
}

uint64_t sub_247778818()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_244_0();
  if (!v0)
    return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247778854()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_247778860()
{
  OUTLINED_FUNCTION_454();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247778888()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  int *v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_111();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  OUTLINED_FUNCTION_312(v1);
  OUTLINED_FUNCTION_403();
  OUTLINED_FUNCTION_382();
  return sub_2477787A4(v2, v3, v4, v5);
}

uint64_t sub_2477788F4()
{
  uint64_t v0;

  OUTLINED_FUNCTION_35();
  OUTLINED_FUNCTION_108_0();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ContentManagementPlan.after(operation:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;
  char v11;
  char v12;

  v7 = *v3;
  v8 = OUTLINED_FUNCTION_118();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(a3 + 16);
  *(_QWORD *)(v8 + 32) = a1;
  *(_QWORD *)(v8 + 40) = a2;
  *(_QWORD *)(v8 + 48) = v7;
  swift_retain();
  OUTLINED_FUNCTION_8();
  sub_24777599C();
  swift_release();
  return sub_247779F88(v10, v11, v12, (uint64_t (*)(uint64_t, _QWORD))sub_247778AF8);
}

uint64_t sub_2477789CC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v4 + 16) = a4;
  v7 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v4 + 24) = v5;
  *v5 = v4;
  v5[1] = sub_247778A30;
  return v7(v4 + 16);
}

uint64_t sub_247778A30()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_244_0();
  if (!v0)
    return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v1 + 8));
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_247778A6C()
{
  swift_release();
  OUTLINED_FUNCTION_454();
  return swift_deallocObject();
}

uint64_t sub_247778A94()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;

  OUTLINED_FUNCTION_431();
  OUTLINED_FUNCTION_491();
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_78(v3);
  v5 = OUTLINED_FUNCTION_312(v4);
  return sub_2477789CC(v5, v1, v2, v0);
}

void sub_247778AF8(id a1, char a2)
{
  if ((a2 & 1) != 0)

}

void ContentManagementPlan.find(firstMatching:in:)()
{
  sub_247774C38();
  OUTLINED_FUNCTION_12();
}

void ContentManagementPlan.find(contentID:)()
{
  sub_2477750E4();
  OUTLINED_FUNCTION_12();
}

void ContentManagementPlan.import(identifiers:in:)()
{
  sub_247775504();
  OUTLINED_FUNCTION_12();
}

void ContentManagementPlan.prepare(content:in:facets:)()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  OUTLINED_FUNCTION_204();
  v40 = v1;
  v41 = v2;
  v4 = v3;
  v36 = v3;
  v6 = v5;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  OUTLINED_FUNCTION_414();
  OUTLINED_FUNCTION_175_0();
  v38 = v9;
  v39 = v8;
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_347();
  OUTLINED_FUNCTION_404();
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_166_0();
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_261_0();
  v10 = OUTLINED_FUNCTION_299();
  v13 = type metadata accessor for ContentManagementPlan.Link(v10, v11, v12, v9);
  v14 = OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_483();
  OUTLINED_FUNCTION_357();
  v15 = OUTLINED_FUNCTION_94_0();
  MEMORY[0x24BDAC7A8](v15);
  OUTLINED_FUNCTION_416();
  v18 = v16 - v17;
  v20 = MEMORY[0x24BDAC7A8](v19);
  v22 = (char *)&v35 - v21;
  v37 = *v0;
  v23 = v18 + *(int *)(v20 + 48);
  v24 = (_QWORD *)(v18 + *(int *)(v20 + 64));
  v25 = *(_QWORD *)(v13 - 8);
  OUTLINED_FUNCTION_239(v18, v6, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 16));
  v26 = *(_QWORD *)(v14 - 8);
  OUTLINED_FUNCTION_337(v23, v40, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 16));
  *v24 = v4;
  v27 = v41;
  v24[1] = v41;
  OUTLINED_FUNCTION_239((uint64_t)v22, v18, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v25 + 32));
  OUTLINED_FUNCTION_337((uint64_t)&v22[*(int *)(v15 + 48)], v23, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v26 + 32));
  v28 = &v22[*(int *)(v15 + 64)];
  v29 = (_QWORD *)OUTLINED_FUNCTION_28_1();
  v30 = v38;
  v29[2] = v39;
  v29[3] = v30;
  v29[4] = v36;
  v29[5] = v27;
  *(_QWORD *)v28 = sub_247778E0C;
  *((_QWORD *)v28 + 1) = v29;
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_211();
  type metadata accessor for FacetCollection(v31, v32, v33, v34);
  swift_getFunctionTypeMetadata1();
  swift_retain();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_464();
  OUTLINED_FUNCTION_453();
  OUTLINED_FUNCTION_112();
}

{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  _QWORD *v29;
  uint64_t v30;
  void *v31;
  char v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  int v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  OUTLINED_FUNCTION_204();
  v1 = v0;
  v44 = v3;
  v45 = v2;
  v43 = v4;
  v6 = v5;
  v8 = *(_QWORD *)(v7 + 16);
  v9 = *(_QWORD *)(v7 + 24);
  OUTLINED_FUNCTION_292();
  v40 = v9;
  v41 = v8;
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_467();
  v10 = OUTLINED_FUNCTION_299();
  v42 = type metadata accessor for ContentManagementPlan.Link(v10, v11, v12, v9);
  v13 = OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_483();
  OUTLINED_FUNCTION_358();
  v14 = OUTLINED_FUNCTION_94_0();
  MEMORY[0x24BDAC7A8](v14);
  OUTLINED_FUNCTION_416();
  v16 = MEMORY[0x24BDAC7A8](v15);
  v18 = (char *)&v37 - v17;
  v19 = *v6;
  v20 = v6[1];
  v21 = *((unsigned __int8 *)v6 + 16);
  v39 = *v1;
  v23 = v22 + *(int *)(v16 + 48);
  v24 = (_QWORD *)(v22 + *(int *)(v16 + 64));
  *(_QWORD *)v22 = v19;
  *(_QWORD *)(v22 + 8) = v20;
  v25 = v19;
  *(_BYTE *)(v22 + 16) = v21;
  v38 = v21;
  v26 = *(_QWORD *)(v13 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v26 + 16))(v23, v43, v13);
  v27 = v44;
  *v24 = v45;
  v24[1] = v27;
  *(_QWORD *)v18 = v25;
  *((_QWORD *)v18 + 1) = v20;
  v18[16] = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 32))(&v18[*(int *)(v14 + 48)], v23, v13);
  v28 = &v18[*(int *)(v14 + 64)];
  v29 = (_QWORD *)OUTLINED_FUNCTION_28_1();
  v30 = v40;
  v29[2] = v41;
  v29[3] = v30;
  v29[4] = v45;
  v29[5] = v27;
  *(_QWORD *)v28 = sub_24777E104;
  *((_QWORD *)v28 + 1) = v29;
  OUTLINED_FUNCTION_7_0();
  v31 = (void *)OUTLINED_FUNCTION_428();
  sub_247779158(v31, v32, v38);
  OUTLINED_FUNCTION_342();
  OUTLINED_FUNCTION_322();
  type metadata accessor for FacetCollection(v33, v34, v35, v36);
  swift_getFunctionTypeMetadata1();
  swift_retain();
  OUTLINED_FUNCTION_476();
  OUTLINED_FUNCTION_94_0();
  OUTLINED_FUNCTION_134_0();
  sub_2478B6FC8();
  OUTLINED_FUNCTION_453();
  OUTLINED_FUNCTION_112();
}

void sub_247778E0C(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = (*(uint64_t (**)(void))(v1 + 32))();
  OUTLINED_FUNCTION_12();
}

void sub_247778E30()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C20C8)
  {
    sub_247758170(255, &qword_2576C20D0);
    v0 = sub_2478B6FEC();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C20C8);
  }
}

id sub_247779158(void *a1, char a2, char a3)
{
  if ((a3 & 1) != 0)
    return sub_24777916C(a1, a2 & 1);
  else
    return (id)swift_retain();
}

id sub_24777916C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)sub_2478B6DA0();
}

void ContentManagementPlan.relate(content:to:as:)()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  OUTLINED_FUNCTION_204();
  v1 = v0;
  v3 = v2;
  v25 = v4;
  v7 = *(_QWORD *)(v5 + 16);
  v6 = *(_QWORD *)(v5 + 24);
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_110_0();
  OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  v8 = OUTLINED_FUNCTION_336();
  v9 = type metadata accessor for ContentManagementPlan.Link(255, v7, v8, v6);
  OUTLINED_FUNCTION_404();
  v10 = sub_2478B6FEC();
  OUTLINED_FUNCTION_333(v10);
  OUTLINED_FUNCTION_309();
  swift_getTupleTypeMetadata3();
  OUTLINED_FUNCTION_100_0();
  v12 = MEMORY[0x24BDAC7A8](v11);
  v14 = *(void **)v3;
  v15 = *(_QWORD *)(v3 + 8);
  LOBYTE(v3) = *(_BYTE *)(v3 + 16);
  v16 = *v1;
  v22 = v1[1];
  v17 = v1[3];
  v23 = v1[2];
  v24 = v16;
  v18 = (char *)&v21 + *(int *)(v12 + 48) - v13;
  v19 = (uint64_t *)((char *)&v21 + *(int *)(v12 + 64) - v13);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 16))((char *)&v21 - v13, v25, v9);
  *(_QWORD *)v18 = v14;
  *((_QWORD *)v18 + 1) = v15;
  v18[16] = v3;
  v20 = v22;
  *v19 = v24;
  v19[1] = v20;
  v19[2] = v23;
  v19[3] = v17;
  OUTLINED_FUNCTION_7_0();
  sub_247779158(v14, v15, v3);
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_242_0();
  OUTLINED_FUNCTION_241_0();
  OUTLINED_FUNCTION_410();
  sub_2478B6FC8();
  OUTLINED_FUNCTION_453();
  OUTLINED_FUNCTION_112();
}

{
  uint64_t v0;
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  __int128 v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)();
  _QWORD *v37;
  _QWORD v38[12];
  _QWORD v39[5];
  __int128 v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t v46;
  uint64_t v47;
  char v48;

  OUTLINED_FUNCTION_204();
  v33 = v0;
  v2 = v1;
  v32 = v3;
  v5 = v4;
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_256_0();
  OUTLINED_FUNCTION_488();
  OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_162_0();
  v8 = OUTLINED_FUNCTION_484();
  OUTLINED_FUNCTION_306();
  type metadata accessor for ContentManagementPlan.Link.Mode(v9, v10, v11, v12);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v13);
  v15 = (char *)&v28 - v14;
  v31 = OUTLINED_FUNCTION_291(0, v7, v8);
  v16 = *(_QWORD *)(v31 - 8);
  OUTLINED_FUNCTION_169_0();
  v18 = MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v28 - v19;
  v30 = *v2;
  v21 = *((_QWORD *)v2 + 2);
  v28 = *((_QWORD *)v2 + 3);
  v29 = v21;
  v39[2] = v7;
  v39[3] = v6;
  v39[4] = v5;
  v38[8] = v7;
  v38[9] = v6;
  v38[10] = sub_24777E0A8;
  v38[11] = v39;
  OUTLINED_FUNCTION_206(v18, (unint64_t *)&qword_25444CC38);
  OUTLINED_FUNCTION_487((void (*)(_BYTE *))sub_24777A264, (uint64_t)v15);
  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_306();
  sub_2477750AC(v22, v23, v24, v25);
  v38[2] = v7;
  v38[3] = v6;
  v38[4] = v32;
  v34 = v7;
  v35 = v6;
  v36 = sub_24777A28C;
  v37 = v38;
  v26 = OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_487((void (*)(_BYTE *))sub_24777E0D4, (uint64_t)&v43);
  *(_QWORD *)&v40 = v43;
  *((_QWORD *)&v40 + 1) = v44;
  LOBYTE(v41) = 1;
  OUTLINED_FUNCTION_335((uint64_t)&v40, v7, v26);
  v27 = v46;
  LOBYTE(v6) = v47;
  LOBYTE(v7) = v48;
  v43 = v46;
  v44 = v47;
  v45 = v48;
  v40 = v30;
  v41 = v29;
  v42 = v28;
  ContentManagementPlan.relate(content:to:as:)();
  sub_247779F88(v27, v6, v7, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  (*(void (**)(char *, uint64_t))(v16 + 8))(v20, v31);
  OUTLINED_FUNCTION_112();
}

{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(uint64_t);

  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_405();
  OUTLINED_FUNCTION_256_0();
  OUTLINED_FUNCTION_323();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_429();
  v0 = OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_343();
  OUTLINED_FUNCTION_396();
  type metadata accessor for ContentManagementPlan.Link.Mode(v1, v2, v3, v4);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v5);
  OUTLINED_FUNCTION_498();
  OUTLINED_FUNCTION_396();
  type metadata accessor for ContentManagementPlan.Link(v6, v7, v8, v9);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v10);
  OUTLINED_FUNCTION_415();
  OUTLINED_FUNCTION_206(v11, (unint64_t *)&qword_25444CC38);
  sub_247779E6C((void (*)(_BYTE *))sub_24777E0EC, v0);
  OUTLINED_FUNCTION_429();
  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_396();
  sub_2477750AC(v12, v13, v14, v15);
  ContentManagementPlan.relate(content:to:as:)();
  v16 = OUTLINED_FUNCTION_384();
  v17(v16);
  OUTLINED_FUNCTION_112();
}

{
  uint64_t v0;
  __int128 *v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  _QWORD v31[2];
  uint64_t v32;
  uint64_t v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  char v47;

  OUTLINED_FUNCTION_204();
  v38 = v0;
  v2 = v1;
  v37 = v3;
  v5 = v4;
  v7 = *(_QWORD *)(v0 + 16);
  v6 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_234_0();
  swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_488();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_325();
  OUTLINED_FUNCTION_322();
  OUTLINED_FUNCTION_287();
  OUTLINED_FUNCTION_398();
  OUTLINED_FUNCTION_256_0();
  OUTLINED_FUNCTION_211();
  OUTLINED_FUNCTION_323();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2478B7148();
  v9 = OUTLINED_FUNCTION_355();
  v12 = OUTLINED_FUNCTION_291(v9, v10, v11);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x24BDAC7A8](v12);
  v14 = OUTLINED_FUNCTION_498();
  v31[1] = type metadata accessor for ContentManagementPlan.Link.Mode(v14, v7, AssociatedTypeWitness, v6);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v15);
  v17 = (_QWORD *)((char *)v31 - v16);
  v18 = OUTLINED_FUNCTION_291(0, v7, AssociatedTypeWitness);
  v35 = *(_QWORD *)(v18 - 8);
  v36 = v18;
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v19);
  v31[0] = (char *)v31 - v20;
  v34 = *v2;
  v21 = *((_QWORD *)v2 + 2);
  v32 = *((_QWORD *)v2 + 3);
  v33 = v21;
  OUTLINED_FUNCTION_180((uint64_t)&protocol requirements base descriptor for ContentStorageOperations, v5, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 16));
  v22 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v23 = swift_allocObject();
  *(_QWORD *)(v23 + 16) = v7;
  *(_QWORD *)(v23 + 24) = v6;
  OUTLINED_FUNCTION_180(v23 + v22, (uint64_t)&protocol requirements base descriptor for ContentStorageOperations, *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 32));
  *v17 = &unk_2576C2118;
  v17[1] = v23;
  OUTLINED_FUNCTION_303();
  v24 = v31[0];
  v25 = OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_335(v25, v26, AssociatedTypeWitness);
  v27 = (_QWORD *)OUTLINED_FUNCTION_118();
  v27[2] = v7;
  v27[3] = v6;
  v27[4] = v37;
  *(_QWORD *)&v39 = &unk_2576C2128;
  *((_QWORD *)&v39 + 1) = v27;
  LOBYTE(v40) = 0;
  v28 = OUTLINED_FUNCTION_360();
  OUTLINED_FUNCTION_335((uint64_t)&v39, v7, v28);
  v29 = v45;
  v30 = v46;
  LOBYTE(v6) = v47;
  v42 = v45;
  v43 = v46;
  v44 = v47;
  v39 = v34;
  v40 = v33;
  v41 = v32;
  OUTLINED_FUNCTION_183_0();
  ContentManagementPlan.relate(content:to:as:)();
  sub_247779F88(v29, v30, v6, (uint64_t (*)(uint64_t, _QWORD))sub_247779F9C);
  (*(void (**)(uint64_t, uint64_t))(v35 + 8))(v24, v36);
  OUTLINED_FUNCTION_112();
}

uint64_t ContentManagementPlan.find(firstMatching:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  _QWORD *v6;
  uint64_t v7;

  v6[6] = a1;
  v6[7] = a2;
  v7 = *v5;
  v6[8] = a5;
  v6[9] = v7;
  OUTLINED_FUNCTION_17_1();
  return swift_task_switch();
}

void sub_2477793A4()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_85();
  v1 = *(_QWORD *)(v0 + 56);
  OUTLINED_FUNCTION_7_0();
  *(_QWORD *)(v0 + 40) = v1;
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_189_0();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_361();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_347();
  OUTLINED_FUNCTION_322();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_241_0();
  OUTLINED_FUNCTION_242_0();
  OUTLINED_FUNCTION_252();
}

uint64_t sub_247779544()
{
  uint64_t (*v0)(void);

  sub_2478B6D70();
  OUTLINED_FUNCTION_20();
  OUTLINED_FUNCTION_243_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_20_1(v0);
}

uint64_t ContentManagementPlan.facets(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v4[5] = a1;
  v4[6] = a2;
  OUTLINED_FUNCTION_142_0(a1, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v4[7] = v6;
  v4[8] = OUTLINED_FUNCTION_13_0();
  v7 = *(_QWORD *)(a3 + 16);
  v4[9] = v7;
  v8 = *(_QWORD *)(a3 + 24);
  v4[10] = v8;
  v10 = type metadata accessor for FacetCollection(255, v7, v8, v9);
  v11 = OUTLINED_FUNCTION_393(v10);
  v4[12] = v11;
  v4[13] = *(_QWORD *)(v11 - 8);
  v12 = OUTLINED_FUNCTION_13_0();
  v13 = *v3;
  v4[14] = v12;
  v4[15] = v13;
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247779608()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_181();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_406();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_121_0();
  OUTLINED_FUNCTION_309();
  OUTLINED_FUNCTION_173_0();
  swift_getAssociatedConformanceWitness();
  OUTLINED_FUNCTION_474();
  MEMORY[0x2495827BC]();
  OUTLINED_FUNCTION_24_1(v1, 1, v2);
  if (v3)
  {
    OUTLINED_FUNCTION_193_0(*(_QWORD *)(v0 + 104));
    OUTLINED_FUNCTION_350();
    sub_24777986C();
    OUTLINED_FUNCTION_326();
    OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_318();
    OUTLINED_FUNCTION_215_0();
    sub_2478B6C74();
    v4 = OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_142_0(v4, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    sub_247779904();
    OUTLINED_FUNCTION_1();
    OUTLINED_FUNCTION_319();
    swift_willThrow();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_236_0();
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_1_2(v5);
  }
}

unint64_t sub_24777986C()
{
  unint64_t result;

  result = qword_2576C20F0;
  if (!qword_2576C20F0)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for ContentPlanningError, &type metadata for ContentPlanningError);
    atomic_store(result, (unint64_t *)&qword_2576C20F0);
  }
  return result;
}

void sub_2477798A8(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_24777986C();
    v7 = a3(a1, &type metadata for ContentPlanningError, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_247779904()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C2100;
  if (!qword_2576C2100)
  {
    sub_2477798A8(255, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    result = MEMORY[0x24958320C](MEMORY[0x24BEAF030], v1);
    atomic_store(result, (unint64_t *)&qword_2576C2100);
  }
  return result;
}

uint64_t ContentManagementPlan.find(contentID:)()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  OUTLINED_FUNCTION_431();
  v1[5] = v2;
  v1[6] = v3;
  OUTLINED_FUNCTION_142_0(v2, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v1[7] = v4;
  v1[8] = OUTLINED_FUNCTION_13_0();
  v1[9] = OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_299();
  OUTLINED_FUNCTION_325();
  OUTLINED_FUNCTION_287();
  v1[10] = swift_getAssociatedConformanceWitness();
  v5 = OUTLINED_FUNCTION_406();
  v9 = type metadata accessor for ContentRegistration(v5, v6, v7, v8);
  v10 = OUTLINED_FUNCTION_393(v9);
  v1[12] = v10;
  v1[13] = *(_QWORD *)(v10 - 8);
  v11 = OUTLINED_FUNCTION_13_0();
  v12 = *v0;
  v1[14] = v11;
  v1[15] = v12;
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247779A9C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  OUTLINED_FUNCTION_181();
  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 88);
  OUTLINED_FUNCTION_7_0();
  OUTLINED_FUNCTION_267();
  OUTLINED_FUNCTION_347();
  OUTLINED_FUNCTION_394();
  MEMORY[0x2495827BC]();
  OUTLINED_FUNCTION_24_1(v1, 1, v2);
  if (v3)
  {
    OUTLINED_FUNCTION_193_0(*(_QWORD *)(v0 + 104));
    OUTLINED_FUNCTION_350();
    sub_24777986C();
    OUTLINED_FUNCTION_395();
    sub_2478B6CA4();
    OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_318();
    OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_143();
    sub_2478B6C74();
    v4 = OUTLINED_FUNCTION_215_0();
    OUTLINED_FUNCTION_142_0(v4, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    sub_247779904();
    OUTLINED_FUNCTION_1();
    sub_2478B6CB0();
    swift_willThrow();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_50();
    return OUTLINED_FUNCTION_1_2(*(uint64_t (**)(void))(v0 + 8));
  }
  else
  {
    OUTLINED_FUNCTION_236_0();
    OUTLINED_FUNCTION_350();
    OUTLINED_FUNCTION_50();
    OUTLINED_FUNCTION_14_1();
    v5 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
    return OUTLINED_FUNCTION_1_2(v5);
  }
}

uint64_t ContentManagementPlan.prepare(content:in:facets:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  char v11;
  uint64_t (*v12)(uint64_t, _QWORD);
  uint64_t v14;
  uint64_t v15;
  char v16;

  v14 = *(_QWORD *)(a5 + 24);
  OUTLINED_FUNCTION_404();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_203_0();
  OUTLINED_FUNCTION_394();
  OUTLINED_FUNCTION_347();
  OUTLINED_FUNCTION_173_0();
  OUTLINED_FUNCTION_166_0();
  OUTLINED_FUNCTION_344();
  v5 = OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_206(v5, (unint64_t *)&qword_25444CC38);
  sub_247779E6C((void (*)(_BYTE *))sub_247779E34, (uint64_t)&v15);
  OUTLINED_FUNCTION_211();
  sub_2477750AC(v6, v7, v8, v14);
  v9 = v16;
  ContentManagementPlan.prepare(content:in:facets:)();
  v10 = OUTLINED_FUNCTION_515();
  return sub_247779F88(v10, v11, v9, v12);
}

uint64_t sub_247779E34@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 32))();
  *a1 = result;
  return result;
}

uint64_t sub_247779E6C@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  _BYTE v11[16];

  MEMORY[0x24BDAC7A8](a1);
  v5 = &v11[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = sub_2478B73C4();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x24BDAC7A8](v6);
  v9 = &v11[-v8];
  a1(v5);
  swift_storeEnumTagMultiPayload();
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v9, v6);
}

uint64_t sub_247779F88(uint64_t a1, char a2, char a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  if ((a3 & 1) != 0)
    return a4(a1, a2 & 1);
  else
    return swift_release();
}

void sub_247779F9C(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t type metadata accessor for ContentManagementPlan.Link.Mode(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentManagementPlan.Link.Mode);
}

uint64_t sub_24777A264()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_24777A28C()
{
  return sub_2478B6DA0();
}

uint64_t ContentManagementPlan.relate(content:to:as:)()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t (*v8)(uint64_t, _QWORD);
  _QWORD v10[2];
  char v11;
  uint64_t v12;
  uint64_t v13;
  char v14;

  OUTLINED_FUNCTION_482();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_343();
  v0 = OUTLINED_FUNCTION_134_0();
  OUTLINED_FUNCTION_206(v0, (unint64_t *)&qword_25444CC38);
  sub_247779E6C((void (*)(_BYTE *))sub_24777E0D4, (uint64_t)v10);
  OUTLINED_FUNCTION_395();
  sub_2477750AC(v1, v2, v3, v4);
  v5 = v14;
  v10[0] = v12;
  v10[1] = v13;
  v11 = v14;
  ContentManagementPlan.relate(content:to:as:)();
  v6 = OUTLINED_FUNCTION_488();
  return sub_247779F88(v6, v7, v5, v8);
}

uint64_t sub_24777A6D0()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);

  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_405();
  OUTLINED_FUNCTION_292();
  OUTLINED_FUNCTION_515();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_292();
  OUTLINED_FUNCTION_306();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v0 = OUTLINED_FUNCTION_87();
  return v1(v0);
}

uint64_t sub_24777A7E4()
{
  return sub_24777A6D0();
}

uint64_t ContentManagementPlan.link(contentID:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _BYTE v18[16];
  uint64_t v19;
  uint64_t v20;
  uint64_t (*v21)@<X0>(uint64_t@<X8>);
  char *v22;
  char v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v4 = *(_QWORD *)(a2 + 16);
  v3 = *(_QWORD *)(a2 + 24);
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_322();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_484();
  OUTLINED_FUNCTION_261_0();
  OUTLINED_FUNCTION_385();
  type metadata accessor for ContentManagementPlan.Link.Mode(v5, v6, v7, v8);
  OUTLINED_FUNCTION_100_0();
  MEMORY[0x24BDAC7A8](v9);
  v11 = &v18[-v10];
  v24 = v4;
  v25 = v3;
  v26 = a1;
  v19 = v4;
  v20 = v3;
  v21 = sub_24777AB08;
  v22 = &v23;
  v12 = OUTLINED_FUNCTION_505();
  OUTLINED_FUNCTION_206(v12, (unint64_t *)&qword_25444CC38);
  sub_247779E6C((void (*)(_BYTE *))sub_24777E0EC, (uint64_t)v11);
  OUTLINED_FUNCTION_448();
  OUTLINED_FUNCTION_476();
  return sub_2477750AC(v13, v14, v15, v16);
}

uint64_t sub_24777A9BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;

  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v4 = sub_2478B7148();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
}

uint64_t sub_24777AB08@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_24777A9BC(*(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_24777ADF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;

  v4[2] = a1;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v4[3] = v7;
  v4[4] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4[5] = swift_getAssociatedTypeWitness();
  v8 = sub_2478B7148();
  v4[6] = v8;
  v4[7] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v4[8] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v4[9] = v10;
  v11 = (uint64_t *)type metadata accessor for ContentManagementPlan.Link(0, a3, v8, a4);
  *v10 = v4;
  v10[1] = sub_24777AFE4;
  return sub_247773A28(v9, v11);
}

uint64_t sub_24777AFE4()
{
  OUTLINED_FUNCTION_245_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24777B020()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_24_1(*(_QWORD *)(v0 + 64), 1, *(_QWORD *)(v0 + 40));
  if (v1)
  {
    OUTLINED_FUNCTION_193_0(*(_QWORD *)(v0 + 56));
    sub_24777986C();
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 88) = 6;
    OUTLINED_FUNCTION_307();
    OUTLINED_FUNCTION_234();
    v2 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_142_0(v2, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_441();
    OUTLINED_FUNCTION_50();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_352();
  }
  else
  {
    OUTLINED_FUNCTION_262_0();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  }
  return OUTLINED_FUNCTION_35_0(v3);
}

uint64_t sub_24777B100()
{
  uint64_t v0;

  swift_task_dealloc();
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24777B138()
{
  uint64_t v0;
  uint64_t AssociatedTypeWitness;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_204();
  OUTLINED_FUNCTION_292();
  OUTLINED_FUNCTION_61();
  OUTLINED_FUNCTION_234_0();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  sub_2478B7148();
  OUTLINED_FUNCTION_474();
  v6 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for ContentManagementPlan.Link(v2, v3, v4, v5) - 8) + 80);
  v7 = (v6 + 32) & ~v6;
  OUTLINED_FUNCTION_474();
  type metadata accessor for ContentManagementPlan.Link.Mode(v8, v9, v10, v11);
  if (OUTLINED_FUNCTION_466() == 1)
  {
    sub_247758170(255, (unint64_t *)&qword_25444CC38);
    sub_2478B73C4();
    if (OUTLINED_FUNCTION_466() == 1)
    {

    }
    else if (!__swift_getEnumTagSinglePayload(v0 + v7, 1, AssociatedTypeWitness))
    {
      (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8))(v0 + v7, AssociatedTypeWitness);
    }
  }
  else
  {
    swift_release();
  }
  return swift_deallocObject();
}

uint64_t sub_24777B318()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  OUTLINED_FUNCTION_434();
  v2 = *(_QWORD *)(v0 + 24);
  OUTLINED_FUNCTION_299();
  OUTLINED_FUNCTION_199_0();
  OUTLINED_FUNCTION_157();
  OUTLINED_FUNCTION_162_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_343();
  OUTLINED_FUNCTION_261_0();
  v3 = OUTLINED_FUNCTION_355();
  type metadata accessor for ContentManagementPlan.Link(v3, v4, v5, v2);
  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_78(v6);
  *v7 = v1;
  v7[1] = sub_24777E0AC;
  OUTLINED_FUNCTION_514();
  OUTLINED_FUNCTION_385();
  return sub_24777ADF8(v8, v9, v10, v11);
}

uint64_t sub_24777B460(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[5] = a3;
  v4[6] = a4;
  v4[3] = a1;
  v4[4] = a2;
  return swift_task_switch();
}

uint64_t sub_24777B47C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_181();
  v2 = v0[5];
  v1 = v0[6];
  v0[2] = v0[4];
  v3 = OUTLINED_FUNCTION_219_0();
  v0[7] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  v4 = (_QWORD *)swift_task_alloc();
  v0[8] = v4;
  OUTLINED_FUNCTION_175_0();
  OUTLINED_FUNCTION_149_0();
  OUTLINED_FUNCTION_110_0();
  OUTLINED_FUNCTION_164_0();
  OUTLINED_FUNCTION_122_0();
  OUTLINED_FUNCTION_96_0();
  OUTLINED_FUNCTION_336();
  OUTLINED_FUNCTION_404();
  v5 = sub_2478B7148();
  OUTLINED_FUNCTION_333(v5);
  v6 = OUTLINED_FUNCTION_134_0();
  MEMORY[0x24958320C](MEMORY[0x24BEE12C8], v6);
  *v4 = v0;
  v4[1] = sub_24777B5EC;
  OUTLINED_FUNCTION_44();
  return sub_2478B6EFC();
}

uint64_t sub_24777B5EC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v4;

  OUTLINED_FUNCTION_156();
  OUTLINED_FUNCTION_97(v4);
  *(_QWORD *)(v2 + 72) = v1;
  swift_task_dealloc();
  if (!v1)
  {
    *(_QWORD *)(v2 + 80) = a1;
    swift_task_dealloc();
  }
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24777B64C()
{
  uint64_t v0;

  return OUTLINED_FUNCTION_276(*(_QWORD *)(v0 + 80));
}

uint64_t sub_24777B658()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24777B684()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_24777B6A8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_78(v4);
  v6 = OUTLINED_FUNCTION_312(v5);
  return sub_24777B460(v6, v3, v1, v2);
}

unint64_t sub_24777B70C()
{
  unint64_t result;

  result = qword_2576C2130;
  if (!qword_2576C2130)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for ContentPlanningError, &type metadata for ContentPlanningError);
    atomic_store(result, (unint64_t *)&qword_2576C2130);
  }
  return result;
}

unint64_t sub_24777B74C()
{
  unint64_t result;

  result = qword_2576C2138[0];
  if (!qword_2576C2138[0])
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for ContentPlanningError, &type metadata for ContentPlanningError);
    atomic_store(result, qword_2576C2138);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ContentPlanningError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF9)
  {
    if (a2 + 7 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 7) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 8;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v5 = v6 - 8;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for ContentPlanningError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_24777B85C + 4 * byte_2478B8B15[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_24777B890 + 4 * byte_2478B8B10[v4]))();
}

uint64_t sub_24777B890(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24777B898(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24777B8A0);
  return result;
}

uint64_t sub_24777B8AC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24777B8B4);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_24777B8B8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24777B8C0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for ContentPlanningError()
{
  return &type metadata for ContentPlanningError;
}

uint64_t sub_24777B8DC()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
    return swift_initClassMetadata2();
  return result;
}

uint64_t type metadata accessor for ContentManagementPlan.Execution(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentManagementPlan.Execution);
}

uint64_t sub_24777B984(uint64_t *a1)
{
  uint64_t result;
  unint64_t v2;

  result = type metadata accessor for ContentManagementPlan.Link.Mode(319, a1[2], a1[3], a1[4]);
  if (v2 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_24777B9F8(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = 16;
  if (v3 + 1 > 0x10)
    v4 = v3 + 1;
  v5 = *((unsigned __int8 *)a1 + v4);
  if (v5 < 2)
  {
    if (v5 == 1)
    {
      v7 = *((unsigned __int8 *)a1 + v3);
      if (v7 < 2)
      {
        if (v7 == 1)

        else
          (*(void (**)(void))(v2 + 8))();
      }
      else
      {
        if (v3 <= 3)
          v8 = v3;
        else
          v8 = 4;
        ((void (*)(void))((char *)&loc_24777BAC8 + 4 * byte_2478B8B1F[v8]))();
      }
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    ((void (*)(void))((char *)&loc_24777BA50 + 4 * byte_2478B8B1A[v6]))();
  }
}

_QWORD *sub_24777BB28(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if ((unint64_t)(v5 + 1) > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = *(unsigned __int8 *)(a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    v9 = *(unsigned __int8 *)(a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v12 = *(id *)a2;
      v13 = *(id *)a2;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 16))(a1);
      v14 = 0;
    }
    *((_BYTE *)a1 + v5) = v14;
    *((_BYTE *)a1 + v6) = 1;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 8);
    *a1 = *(_QWORD *)a2;
    a1[1] = v11;
    *((_BYTE *)a1 + v6) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_24777BCB0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    if ((unint64_t)(v7 + 1) > 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      v11 = *(unsigned __int8 *)(a1 + v7);
      if (v11 >= 2)
      {
        if (v7 <= 3)
          v12 = v7;
        else
          v12 = 4;
        __asm { BR              X12 }
      }
      if (v11 == 1)

      else
        (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    }
    else
    {
      swift_release();
    }
    v13 = *(unsigned __int8 *)(a2 + v8);
    if (v13 >= 2)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v15 = *(unsigned __int8 *)(a2 + v7);
      if (v15 >= 2)
      {
        if (v7 <= 3)
          v16 = v7;
        else
          v16 = 4;
        __asm { BR              X12 }
      }
      if (v15 == 1)
      {
        v18 = *(void **)a2;
        v19 = v18;
        *(_QWORD *)a1 = v18;
        v20 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
        v20 = 0;
      }
      *(_BYTE *)(a1 + v7) = v20;
      *(_BYTE *)(a1 + v8) = 1;
    }
    else
    {
      v17 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v17;
      *(_BYTE *)(a1 + v8) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_24777BF70(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  char v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if ((unint64_t)(v5 + 1) > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 32))(a1);
      v12 = 0;
    }
    *((_BYTE *)a1 + v5) = v12;
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *((_BYTE *)a1 + v6) = v11;
  return a1;
}

id *sub_24777C0EC(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    if ((unint64_t)(v7 + 1) > 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      v11 = *((unsigned __int8 *)a1 + v7);
      if (v11 >= 2)
      {
        if (v7 <= 3)
          v12 = v7;
        else
          v12 = 4;
        __asm { BR              X12 }
      }
      if (v11 == 1)

      else
        (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    }
    else
    {
      swift_release();
    }
    v13 = *((unsigned __int8 *)a2 + v8);
    if (v13 >= 2)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v15 = *((unsigned __int8 *)a2 + v7);
      if (v15 >= 2)
      {
        if (v7 <= 3)
          v16 = v7;
        else
          v16 = 4;
        __asm { BR              X12 }
      }
      if (v15 == 1)
      {
        *a1 = *a2;
        v18 = 1;
      }
      else
      {
        (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
        v18 = 0;
      }
      *((_BYTE *)a1 + v7) = v18;
      v17 = 1;
    }
    else
    {
      v17 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *((_BYTE *)a1 + v8) = v17;
  }
  return a1;
}

uint64_t sub_24777C3A0(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = 16;
  if (v3 + 1 > 0x10)
    v4 = v3 + 1;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 2)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 255);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24777C474 + 4 * byte_2478B8B60[(v5 - 1)]))();
}

void sub_24777C4C0(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  if (v5 + 1 > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v7 <= 3)
  {
    v11 = ((a3 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v12 = v10 & ~(-1 << v8);
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v7 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_24777C674()
{
  uint64_t result;
  unint64_t v1;

  sub_247758170(255, (unint64_t *)&qword_25444CC38);
  result = sub_2478B73C4();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

char *sub_24777C714(char *a1, id *a2, uint64_t a3)
{
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  char *v9;
  unsigned int v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  char *v14;
  char *v15;
  char *v16;
  char v17;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if ((unint64_t)(v5 + 1) > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = *(_DWORD *)(v4 + 80);
  if ((v7 & 0x1000F8) != 0 || (unint64_t)(v6 + 1) > 0x18)
  {
    v9 = (char *)*a2;
    *(_QWORD *)v3 = *a2;
    v3 = &v9[(unsigned __int16)((v7 & 0xF8) + 23) & (unsigned __int16)~(v7 & 0xF8) & 0x1F8];
LABEL_25:
    swift_retain();
    return v3;
  }
  v10 = *((unsigned __int8 *)a2 + v6);
  if (v10 >= 2)
  {
    if (v6 <= 3)
      v11 = v6;
    else
      v11 = 4;
    __asm { BR              X13 }
  }
  if (v10 != 1)
  {
    v14 = (char *)a2[1];
    *(_QWORD *)v3 = *a2;
    *((_QWORD *)v3 + 1) = v14;
    v3[v6] = 0;
    goto LABEL_25;
  }
  v12 = *((unsigned __int8 *)a2 + v5);
  if (v12 >= 2)
  {
    if (v5 <= 3)
      v13 = v5;
    else
      v13 = 4;
    __asm { BR              X13 }
  }
  if (v12 == 1)
  {
    v15 = (char *)*a2;
    v16 = (char *)*a2;
    *(_QWORD *)v3 = v15;
    v17 = 1;
  }
  else
  {
    (*(void (**)(char *))(v4 + 16))(a1);
    v17 = 0;
  }
  v3[v5] = v17;
  v3[v6] = 1;
  return v3;
}

void sub_24777C8C0(id *a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;

  v2 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v3 = *(_QWORD *)(v2 + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = 16;
  if (v3 + 1 > 0x10)
    v4 = v3 + 1;
  v5 = *((unsigned __int8 *)a1 + v4);
  if (v5 < 2)
  {
    if (v5 == 1)
    {
      v7 = *((unsigned __int8 *)a1 + v3);
      if (v7 < 2)
      {
        if (v7 == 1)

        else
          (*(void (**)(void))(v2 + 8))();
      }
      else
      {
        if (v3 <= 3)
          v8 = v3;
        else
          v8 = 4;
        ((void (*)(void))((char *)&loc_24777C990 + 4 * byte_2478B8B7D[v8]))();
      }
    }
    else
    {
      swift_release();
    }
  }
  else
  {
    if (v4 <= 3)
      v6 = v4;
    else
      v6 = 4;
    ((void (*)(void))((char *)&loc_24777C918 + 4 * byte_2478B8B78[v6]))();
  }
}

_QWORD *sub_24777C9F0(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  id v12;
  id v13;
  char v14;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if ((unint64_t)(v5 + 1) > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = *(unsigned __int8 *)(a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    v9 = *(unsigned __int8 *)(a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      v12 = *(id *)a2;
      v13 = *(id *)a2;
      *a1 = v12;
      v14 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 16))(a1);
      v14 = 0;
    }
    *((_BYTE *)a1 + v5) = v14;
    *((_BYTE *)a1 + v6) = 1;
  }
  else
  {
    v11 = *(_QWORD *)(a2 + 8);
    *a1 = *(_QWORD *)a2;
    a1[1] = v11;
    *((_BYTE *)a1 + v6) = 0;
    swift_retain();
  }
  return a1;
}

uint64_t sub_24777CB78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  char v20;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    if ((unint64_t)(v7 + 1) > 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    v9 = *(unsigned __int8 *)(a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      v11 = *(unsigned __int8 *)(a1 + v7);
      if (v11 >= 2)
      {
        if (v7 <= 3)
          v12 = v7;
        else
          v12 = 4;
        __asm { BR              X12 }
      }
      if (v11 == 1)

      else
        (*(void (**)(uint64_t, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    }
    else
    {
      swift_release();
    }
    v13 = *(unsigned __int8 *)(a2 + v8);
    if (v13 >= 2)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v15 = *(unsigned __int8 *)(a2 + v7);
      if (v15 >= 2)
      {
        if (v7 <= 3)
          v16 = v7;
        else
          v16 = 4;
        __asm { BR              X12 }
      }
      if (v15 == 1)
      {
        v18 = *(void **)a2;
        v19 = v18;
        *(_QWORD *)a1 = v18;
        v20 = 1;
      }
      else
      {
        (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
        v20 = 0;
      }
      *(_BYTE *)(a1 + v7) = v20;
      *(_BYTE *)(a1 + v8) = 1;
    }
    else
    {
      v17 = *(_QWORD *)(a2 + 8);
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *(_QWORD *)(a1 + 8) = v17;
      *(_BYTE *)(a1 + v8) = 0;
      swift_retain();
    }
  }
  return a1;
}

_QWORD *sub_24777CE38(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  char v11;
  char v12;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  if (*(_QWORD *)(v4 + 64) <= 8uLL)
    v5 = 8;
  else
    v5 = *(_QWORD *)(v4 + 64);
  if ((unint64_t)(v5 + 1) > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = *((unsigned __int8 *)a2 + v6);
  if (v7 >= 2)
  {
    if (v6 <= 3)
      v8 = v6;
    else
      v8 = 4;
    __asm { BR              X13 }
  }
  if (v7 == 1)
  {
    v9 = *((unsigned __int8 *)a2 + v5);
    if (v9 >= 2)
    {
      if (v5 <= 3)
        v10 = v5;
      else
        v10 = 4;
      __asm { BR              X13 }
    }
    if (v9 == 1)
    {
      *a1 = *a2;
      v12 = 1;
    }
    else
    {
      (*(void (**)(_QWORD *))(v4 + 32))(a1);
      v12 = 0;
    }
    *((_BYTE *)a1 + v5) = v12;
    v11 = 1;
  }
  else
  {
    v11 = 0;
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *((_BYTE *)a1 + v6) = v11;
  return a1;
}

id *sub_24777CFB4(id *a1, id *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  char v18;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 24);
    v6 = *(_QWORD *)(v5 - 8);
    if (*(_QWORD *)(v6 + 64) <= 8uLL)
      v7 = 8;
    else
      v7 = *(_QWORD *)(v6 + 64);
    if ((unint64_t)(v7 + 1) > 0x10)
      v8 = v7 + 1;
    else
      v8 = 16;
    v9 = *((unsigned __int8 *)a1 + v8);
    if (v9 >= 2)
    {
      if (v8 <= 3)
        v10 = v8;
      else
        v10 = 4;
      __asm { BR              X12 }
    }
    if (v9 == 1)
    {
      v11 = *((unsigned __int8 *)a1 + v7);
      if (v11 >= 2)
      {
        if (v7 <= 3)
          v12 = v7;
        else
          v12 = 4;
        __asm { BR              X12 }
      }
      if (v11 == 1)

      else
        (*(void (**)(id *, _QWORD))(v6 + 8))(a1, *(_QWORD *)(a3 + 24));
    }
    else
    {
      swift_release();
    }
    v13 = *((unsigned __int8 *)a2 + v8);
    if (v13 >= 2)
    {
      if (v8 <= 3)
        v14 = v8;
      else
        v14 = 4;
      __asm { BR              X12 }
    }
    if (v13 == 1)
    {
      v15 = *((unsigned __int8 *)a2 + v7);
      if (v15 >= 2)
      {
        if (v7 <= 3)
          v16 = v7;
        else
          v16 = 4;
        __asm { BR              X12 }
      }
      if (v15 == 1)
      {
        *a1 = *a2;
        v18 = 1;
      }
      else
      {
        (*(void (**)(id *, id *, uint64_t))(v6 + 32))(a1, a2, v5);
        v18 = 0;
      }
      *((_BYTE *)a1 + v7) = v18;
      v17 = 1;
    }
    else
    {
      v17 = 0;
      *(_OWORD *)a1 = *(_OWORD *)a2;
    }
    *((_BYTE *)a1 + v8) = v17;
  }
  return a1;
}

uint64_t sub_24777D268(uint64_t a1, unsigned int a2, uint64_t a3)
{
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  int v7;
  unsigned int v9;
  int v10;
  unsigned int v11;

  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v3 <= 8)
    v3 = 8;
  v4 = 16;
  if (v3 + 1 > 0x10)
    v4 = v3 + 1;
  if (!a2)
    return 0;
  if (a2 < 0xFF)
    goto LABEL_23;
  v5 = v4 + 1;
  v6 = 8 * (v4 + 1);
  if ((v4 + 1) <= 3)
  {
    v9 = ((a2 + ~(-1 << v6) - 254) >> v6) + 1;
    if (HIWORD(v9))
    {
      v7 = *(_DWORD *)(a1 + v5);
      if (!v7)
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 > 0xFF)
    {
      v7 = *(unsigned __int16 *)(a1 + v5);
      if (!*(_WORD *)(a1 + v5))
        goto LABEL_23;
      goto LABEL_16;
    }
    if (v9 < 2)
    {
LABEL_23:
      v11 = *(unsigned __int8 *)(a1 + v4);
      if (v11 >= 2)
        return (v11 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v7 = *(unsigned __int8 *)(a1 + v5);
  if (!*(_BYTE *)(a1 + v5))
    goto LABEL_23;
LABEL_16:
  v10 = (v7 - 1) << v6;
  if (v5 > 3)
    v10 = 0;
  if (!(_DWORD)v5)
    return (v10 + 255);
  if (v5 > 3)
    LODWORD(v5) = 4;
  return ((uint64_t (*)(void))((char *)&loc_24777D33C + 4 * byte_2478B8BBE[(v5 - 1)]))();
}

void sub_24777D388(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unint64_t v5;
  uint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 24) - 8) + 64);
  if (v5 <= 8)
    v5 = 8;
  if (v5 + 1 > 0x10)
    v6 = v5 + 1;
  else
    v6 = 16;
  v7 = v6 + 1;
  v8 = 8 * (v6 + 1);
  if (a3 < 0xFF)
  {
    v9 = 0;
  }
  else if (v7 <= 3)
  {
    v11 = ((a3 + ~(-1 << v8) - 254) >> v8) + 1;
    if (HIWORD(v11))
    {
      v9 = 4u;
    }
    else if (v11 >= 0x100)
    {
      v9 = 2;
    }
    else
    {
      v9 = v11 > 1;
    }
  }
  else
  {
    v9 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v10 = a2 - 255;
  if (v7 < 4)
  {
    if ((_DWORD)v6 != -1)
    {
      v12 = v10 & ~(-1 << v8);
      bzero(a1, v7);
      if ((_DWORD)v7 == 3)
      {
        *a1 = v12;
        *((_BYTE *)a1 + 2) = BYTE2(v12);
      }
      else if ((_DWORD)v7 == 2)
      {
        *a1 = v12;
      }
      else
      {
        *(_BYTE *)a1 = v12;
      }
    }
  }
  else
  {
    bzero(a1, v6 + 1);
    *(_DWORD *)a1 = v10;
  }
  __asm { BR              X10 }
}

uint64_t sub_24777D53C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 64);
  if (v2 <= 8)
    v2 = 8;
  v3 = 16;
  if (v2 + 1 > 0x10)
    v3 = v2 + 1;
  if (*(unsigned __int8 *)(a1 + v3) < 2u)
    return *(unsigned __int8 *)(a1 + v3);
  if (v3 <= 3)
    v4 = v3;
  else
    v4 = 4;
  return ((uint64_t (*)(void))((char *)&loc_24777D594 + 4 * byte_2478B8BCC[v4]))();
}

void sub_24777D5DC(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v4;
  size_t v5;
  unsigned int v6;
  unsigned int v7;
  int v8;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 24) - 8) + 64);
  if (v4 <= 8)
    v4 = 8;
  if (v4 + 1 > 0x10)
    v5 = v4 + 1;
  else
    v5 = 16;
  if (a2 > 1)
  {
    v6 = a2 - 2;
    if (v5 < 4)
    {
      v7 = v6 >> (8 * v5);
      v8 = v6 & ~(-1 << (8 * v5));
      a1[v5] = v7 + 2;
      bzero(a1, v5);
      if ((_DWORD)v5 == 3)
      {
        *(_WORD *)a1 = v8;
        a1[2] = BYTE2(v8);
      }
      else if ((_DWORD)v5 == 2)
      {
        *(_WORD *)a1 = v8;
      }
      else
      {
        *a1 = v8;
      }
    }
    else
    {
      a1[v5] = 2;
      bzero(a1, v5);
      *(_DWORD *)a1 = v6;
    }
  }
  else
  {
    a1[v5] = a2;
  }
}

uint64_t sub_24777D6B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;

  v4[2] = a1;
  sub_2477798A8(0, &qword_2576C20E8, MEMORY[0x24BEAF010]);
  v4[3] = v7;
  v4[4] = swift_task_alloc();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v4[5] = swift_getAssociatedTypeWitness();
  v8 = sub_2478B7148();
  v4[6] = v8;
  v4[7] = *(_QWORD *)(v8 - 8);
  v9 = swift_task_alloc();
  v4[8] = v9;
  v10 = (_QWORD *)swift_task_alloc();
  v4[9] = v10;
  v11 = (uint64_t *)type metadata accessor for ContentManagementPlan.Link(0, a3, v8, a4);
  *v10 = v4;
  v10[1] = sub_24777D8A0;
  return sub_247773A28(v9, v11);
}

uint64_t sub_24777D8A0()
{
  OUTLINED_FUNCTION_245_0();
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_4_2();
}

uint64_t sub_24777D8DC()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_24_1(*(_QWORD *)(v0 + 64), 1, *(_QWORD *)(v0 + 40));
  if (v1)
  {
    OUTLINED_FUNCTION_193_0(*(_QWORD *)(v0 + 56));
    sub_24777986C();
    OUTLINED_FUNCTION_139_0();
    OUTLINED_FUNCTION_21_1();
    *(_BYTE *)(v0 + 88) = 6;
    OUTLINED_FUNCTION_307();
    OUTLINED_FUNCTION_234();
    v2 = OUTLINED_FUNCTION_31_0();
    OUTLINED_FUNCTION_142_0(v2, &qword_2576C20F8, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    OUTLINED_FUNCTION_217_0();
    OUTLINED_FUNCTION_33_1();
    OUTLINED_FUNCTION_89_0();
    OUTLINED_FUNCTION_220();
    OUTLINED_FUNCTION_441();
    OUTLINED_FUNCTION_50();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_352();
  }
  else
  {
    OUTLINED_FUNCTION_262_0();
    OUTLINED_FUNCTION_14_1();
    OUTLINED_FUNCTION_39();
    v3 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  }
  return OUTLINED_FUNCTION_35_0(v3);
}

void sub_24777D9BC()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C2340)
  {
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, &qword_2576C2340);
  }
}

uint64_t sub_24777DA04()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v2 = *(_QWORD *)(v0 + 16);
  v1 = *(_QWORD *)(v0 + 24);
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_78(v3);
  v5 = OUTLINED_FUNCTION_521(v4);
  return sub_24777D6B4(v5, v6, v2, v1);
}

uint64_t sub_24777DA60()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24777DA84()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24777578C(v2, v3, v4);
}

uint64_t sub_24777DAD0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_247775300(v2, v3, v4);
}

uint64_t sub_24777DB1C()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_247774E94(v2, v3, v4);
}

uint64_t sub_24777DB68()
{
  OUTLINED_FUNCTION_454();
  return swift_deallocObject();
}

uint64_t sub_24777DB88(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t);
  uint64_t v20;

  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_491();
  v11 = swift_task_alloc();
  v12 = (_QWORD *)OUTLINED_FUNCTION_78(v11);
  *v12 = v10;
  v12[1] = sub_24777E0AC;
  OUTLINED_FUNCTION_382();
  return v19(v13, v14, v15, v16, v17, v18, v19, v20, a9, a10);
}

uint64_t sub_24777DBFC()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24777DC20()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  v1 = v0[2];
  v2 = v0[3];
  v3 = v0[4];
  v4 = swift_task_alloc();
  v5 = (_QWORD *)OUTLINED_FUNCTION_78(v4);
  v6 = OUTLINED_FUNCTION_312(v5);
  return sub_247775BB4(v6, v2, v3, v1);
}

uint64_t sub_24777DC80(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247767958();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_24777DCC4@<X0>(uint64_t *a1@<X8>)
{
  return sub_247772B2C(a1);
}

uint64_t sub_24777DCDC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_247773644(a1, a2, *(_QWORD *)(v2 + 32)) & 1;
}

uint64_t sub_24777DCFC()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  OUTLINED_FUNCTION_111();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  OUTLINED_FUNCTION_521(v1);
  OUTLINED_FUNCTION_382();
  return sub_2477738BC(v2, v3, v4, v5, v6, v7, v8);
}

BOOL sub_24777DD6C(uint64_t a1)
{
  uint64_t *v1;

  return sub_247773CC4(a1, v1);
}

uint64_t sub_24777DD88()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_442();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_313(v1);
  return sub_247773EE8(v2, v3, v4);
}

uint64_t sub_24777DDD8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24777406C(a1, a2);
}

uint64_t sub_24777DDF0(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v6;
  _QWORD *v7;

  v6 = swift_task_alloc();
  v7 = (_QWORD *)OUTLINED_FUNCTION_78(v6);
  *v7 = v3;
  v7[1] = sub_24777E0AC;
  return sub_2477741A0(a1, a2, v2);
}

uint64_t sub_24777DE50()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_247774B80(v2, v3, v4);
}

uint64_t sub_24777DE9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_247767958();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_24777DEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  v3 = *(_QWORD *)(a1 + 24);
  *(_QWORD *)(a2 + 24) = v3;
  *(_QWORD *)(a2 + 32) = *(_QWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_24777DF24()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 32))(&v2);
  return v2;
}

uint64_t sub_24777DF54()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24777DF7C()
{
  return 16;
}

__n128 sub_24777DF88(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t sub_24777DF94()
{
  return swift_getAtKeyPath();
}

uint64_t sub_24777DFBC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  return sub_247775FF0(a1, a2, a3, a4) & 1;
}

BOOL sub_24777DFD8()
{
  return sub_2477762FC();
}

uint64_t sub_24777DFF8(uint64_t a1)
{
  uint64_t *v1;

  return sub_2477764CC(a1, v1[4], v1[5], v1[2], v1[3]);
}

uint64_t sub_24777E004()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_442();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_313(v1);
  return sub_2477768F0(v2, v3, v4, v5, v6);
}

uint64_t sub_24777E054()
{
  return sub_2477774BC();
}

uint64_t sub_24777E070@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_24777679C(a1, a2);
}

uint64_t sub_24777E094()
{
  return sub_24777E054();
}

uint64_t sub_24777E0D4@<X0>(uint64_t *a1@<X8>)
{
  return sub_247779E34(a1);
}

uint64_t sub_24777E0EC()
{
  return sub_24777A264();
}

uint64_t OUTLINED_FUNCTION_0_5@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  *(_QWORD *)(v2 - 88) = a1;
  v3 = v1[161];
  *(_QWORD *)(v2 - 256) = v1[162];
  *(_QWORD *)(v2 - 248) = v3;
  v4 = v1[159];
  *(_QWORD *)(v2 - 240) = v1[160];
  *(_QWORD *)(v2 - 232) = v4;
  v5 = v1[155];
  *(_QWORD *)(v2 - 224) = v1[158];
  *(_QWORD *)(v2 - 216) = v5;
  v6 = v1[153];
  *(_QWORD *)(v2 - 208) = v1[154];
  *(_QWORD *)(v2 - 200) = v6;
  v7 = v1[148];
  *(_QWORD *)(v2 - 192) = v1[152];
  *(_QWORD *)(v2 - 184) = v7;
  v8 = v1[144];
  *(_QWORD *)(v2 - 176) = v1[146];
  *(_QWORD *)(v2 - 168) = v8;
  v9 = v1[142];
  *(_QWORD *)(v2 - 160) = v1[143];
  *(_QWORD *)(v2 - 152) = v9;
  v10 = v1[136];
  *(_QWORD *)(v2 - 144) = v1[140];
  *(_QWORD *)(v2 - 136) = v10;
  v11 = v1[134];
  *(_QWORD *)(v2 - 128) = v1[135];
  *(_QWORD *)(v2 - 120) = v11;
  v12 = v1[130];
  *(_QWORD *)(v2 - 112) = v1[131];
  *(_QWORD *)(v2 - 104) = v12;
  *(_QWORD *)(v2 - 96) = v1[127];
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_1_2(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_2_4()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v2 = v0[160];
  *(_QWORD *)(v1 - 256) = v0[161];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[158];
  *(_QWORD *)(v1 - 240) = v0[159];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[154];
  *(_QWORD *)(v1 - 224) = v0[155];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[152];
  *(_QWORD *)(v1 - 208) = v0[153];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[146];
  *(_QWORD *)(v1 - 192) = v0[148];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[143];
  *(_QWORD *)(v1 - 176) = v0[144];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[140];
  *(_QWORD *)(v1 - 160) = v0[142];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[135];
  *(_QWORD *)(v1 - 144) = v0[136];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[131];
  *(_QWORD *)(v1 - 128) = v0[134];
  *(_QWORD *)(v1 - 120) = v10;
  v11 = v0[127];
  *(_QWORD *)(v1 - 112) = v0[130];
  *(_QWORD *)(v1 - 104) = v11;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_3()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[159];
  *(_QWORD *)(v1 - 256) = v0[160];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[155];
  *(_QWORD *)(v1 - 240) = v0[158];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[153];
  *(_QWORD *)(v1 - 224) = v0[154];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[148];
  *(_QWORD *)(v1 - 208) = v0[152];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[144];
  *(_QWORD *)(v1 - 192) = v0[146];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[142];
  *(_QWORD *)(v1 - 176) = v0[143];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[136];
  *(_QWORD *)(v1 - 160) = v0[140];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[134];
  *(_QWORD *)(v1 - 144) = v0[135];
  *(_QWORD *)(v1 - 136) = v9;
  v10 = v0[130];
  *(_QWORD *)(v1 - 128) = v0[131];
  *(_QWORD *)(v1 - 120) = v10;
  *(_QWORD *)(v1 - 112) = v0[127];
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_4_3()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = v0[159];
  *(_QWORD *)(v1 - 256) = v0[160];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[155];
  *(_QWORD *)(v1 - 240) = v0[158];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[153];
  *(_QWORD *)(v1 - 224) = v0[154];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[148];
  *(_QWORD *)(v1 - 208) = v0[152];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[144];
  *(_QWORD *)(v1 - 192) = v0[146];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[142];
  *(_QWORD *)(v1 - 176) = v0[143];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[136];
  *(_QWORD *)(v1 - 160) = v0[140];
  *(_QWORD *)(v1 - 152) = v8;
  v9 = v0[134];
  *(_QWORD *)(v1 - 144) = v0[135];
  *(_QWORD *)(v1 - 136) = v9;
  *(_QWORD *)(v1 - 128) = v0[131];
  v10 = v0[127];
  *(_QWORD *)(v1 - 112) = v0[130];
  *(_QWORD *)(v1 - 104) = v10;
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_6_3()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v2 = v0[152];
  *(_QWORD *)(v1 - 256) = v0[153];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[146];
  *(_QWORD *)(v1 - 240) = v0[148];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[143];
  *(_QWORD *)(v1 - 224) = v0[144];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[140];
  *(_QWORD *)(v1 - 208) = v0[142];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[135];
  *(_QWORD *)(v1 - 192) = v0[136];
  *(_QWORD *)(v1 - 184) = v6;
}

void OUTLINED_FUNCTION_7_2()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v2 = v0[154];
  *(_QWORD *)(v1 - 256) = v0[155];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[152];
  *(_QWORD *)(v1 - 240) = v0[153];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[146];
  *(_QWORD *)(v1 - 224) = v0[148];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[143];
  *(_QWORD *)(v1 - 208) = v0[144];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[140];
  *(_QWORD *)(v1 - 192) = v0[142];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[135];
  *(_QWORD *)(v1 - 176) = v0[136];
  *(_QWORD *)(v1 - 168) = v7;
}

uint64_t OUTLINED_FUNCTION_8_2(uint64_t a1, uint64_t *a2)
{
  return sub_247773A28(a1, a2);
}

uint64_t OUTLINED_FUNCTION_10_2@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, unint64_t))(a3 + 16))(a1, a2+ ((*(unsigned __int8 *)(a3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(a3 + 80))+ *(_QWORD *)(a3 + 72) * v3);
}

uint64_t OUTLINED_FUNCTION_17_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_23_1()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 1456);
  v2 = *(_QWORD *)(v0 + 1352);
  v3 = *(_QWORD *)(v0 + 1128);
  v4 = *(_QWORD *)(v0 + 1096);
  *(_QWORD *)(v0 + 2312) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 2320) = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(v0 + 134) = *(_BYTE *)(v1 + 16);
  v5 = v1 + *(int *)(v2 + 48);
  v6 = (_QWORD *)(v1 + *(int *)(v2 + 64));
  *(_QWORD *)(v0 + 2328) = *v6;
  *(_QWORD *)(v0 + 2336) = v6[1];
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v5, v4);
}

uint64_t OUTLINED_FUNCTION_24_1(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return __swift_getEnumTagSinglePayload(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_25_1(uint64_t a1)
{
  return FacetBuildingPlan.optimize()(a1);
}

uint64_t OUTLINED_FUNCTION_28_1()
{
  return swift_allocObject();
}

uint64_t OUTLINED_FUNCTION_29_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_31_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_32_1()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = v0[127];
  v2 = v0[126];
  v3 = (_QWORD *)(v0[162] + *(int *)(v0[149] + 64));
  v0[302] = *v3;
  v0[303] = v3[1];
  return (*(uint64_t (**)(uint64_t))(v2 + 32))(v1);
}

uint64_t OUTLINED_FUNCTION_33_1()
{
  return swift_allocError();
}

uint64_t OUTLINED_FUNCTION_34_1()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_35_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_36_0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 16))();
}

uint64_t OUTLINED_FUNCTION_37_0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  v4 = (_QWORD *)(a1 + *(int *)(a2 + 64));
  *(_QWORD *)(v3 + 2416) = *v4;
  *(_QWORD *)(v3 + 2424) = v4[1];
  return (*(uint64_t (**)(void))(v2 + 32))();
}

uint64_t OUTLINED_FUNCTION_39_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_40_0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return FacetBuildingPlan.addFacet<A>(_:)(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_43_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_44_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_45_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_46_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_47_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_48_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_49_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_50_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_51_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_52_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_53_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_54_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_55()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_56_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_57_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_58_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_59_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_60()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_61_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_62_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_63_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_64_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_65_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_66_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_67_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_68_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_69_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_70_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_71_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_72_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_73_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_74_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_75_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_76_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_77_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_78_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_79_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_80_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_81_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_82_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_83_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_84_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_85_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_86_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_87_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_89_0()
{
  return sub_2478B6CB0();
}

uint64_t OUTLINED_FUNCTION_90_0()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_91()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_92_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_93_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_94_0()
{
  return swift_getTupleTypeMetadata3();
}

uint64_t OUTLINED_FUNCTION_95()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t (*v2)(uint64_t, uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v1[265];
  v3 = v1[162];
  v4 = v1[161];
  v5 = v1[156];
  __swift_storeEnumTagSinglePayload(v4, v0, 1, v1[149]);
  return v2(v3, v4, v5);
}

uint64_t OUTLINED_FUNCTION_96_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_97_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_99_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;

  v1 = *(_QWORD *)(v0 + 248);
  v2 = *(_QWORD *)(v0 + 216);
  v4 = *(_QWORD *)(v0 + 192);
  v3 = *(_QWORD *)(v0 + 200);
  v5 = v1 + *(int *)(v2 + 48);
  *(_QWORD *)(v0 + 264) = *(_QWORD *)v5;
  *(_QWORD *)(v0 + 272) = *(_QWORD *)(v5 + 8);
  *(_BYTE *)(v0 + 89) = *(_BYTE *)(v5 + 16);
  v6 = (_QWORD *)(v1 + *(int *)(v2 + 64));
  *(_QWORD *)(v0 + 280) = *v6;
  *(_QWORD *)(v0 + 288) = v6[1];
  *(_QWORD *)(v0 + 296) = v6[2];
  *(_QWORD *)(v0 + 304) = v6[3];
  return (*(uint64_t (**)(uint64_t))(v4 + 32))(v3);
}

uint64_t OUTLINED_FUNCTION_101_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_102_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_103_0()
{
  uint64_t v0;
  _QWORD *v1;

  return (*(uint64_t (**)(_QWORD, unint64_t, _QWORD))(v1[150] + 16))(v1[155], v1[263]+ ((*(unsigned __int8 *)(v1[150] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1[150] + 80))+ *(_QWORD *)(v1[150] + 72) * v0, v1[149]);
}

uint64_t OUTLINED_FUNCTION_104_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_105()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_106_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v2 + 1200) + 32))(a1, a2, *(_QWORD *)(v2 + 1192));
}

uint64_t OUTLINED_FUNCTION_107_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_108_0()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_110_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_112_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_114_0()
{
  uint64_t v0;
  uint64_t v1;
  __int128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  __int128 v9;

  v2 = *(__int128 **)(v0 + 1424);
  v3 = *(_QWORD *)(v0 + 1384);
  v4 = *(_QWORD *)(v0 + 1352);
  v5 = *(_QWORD *)(v0 + 1128);
  v6 = *(_QWORD *)(v0 + 1096);
  v7 = (uint64_t)v2 + *(int *)(v4 + 48);
  v8 = *((_BYTE *)v2 + 16);
  v9 = *v2;
  *(_OWORD *)(v1 - 112) = *(_OWORD *)(v0 + 944);
  *(_OWORD *)v3 = v9;
  *(_BYTE *)(v3 + 16) = v8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v3 + *(int *)(v4 + 48), v7, v6);
}

uint64_t OUTLINED_FUNCTION_116_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v2 + 1424);
  v4 = *(_QWORD *)(v2 + 1352);
  __swift_storeEnumTagSinglePayload(v3, a2, 1, v4);
  return __swift_getEnumTagSinglePayload(v3, 1, v4);
}

void OUTLINED_FUNCTION_118_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v2 = v0[158];
  *(_QWORD *)(v1 - 256) = v0[159];
  *(_QWORD *)(v1 - 248) = v2;
  v3 = v0[154];
  *(_QWORD *)(v1 - 240) = v0[155];
  *(_QWORD *)(v1 - 232) = v3;
  v4 = v0[152];
  *(_QWORD *)(v1 - 224) = v0[153];
  *(_QWORD *)(v1 - 216) = v4;
  v5 = v0[146];
  *(_QWORD *)(v1 - 208) = v0[148];
  *(_QWORD *)(v1 - 200) = v5;
  v6 = v0[143];
  *(_QWORD *)(v1 - 192) = v0[144];
  *(_QWORD *)(v1 - 184) = v6;
  v7 = v0[140];
  *(_QWORD *)(v1 - 176) = v0[142];
  *(_QWORD *)(v1 - 168) = v7;
  v8 = v0[135];
  *(_QWORD *)(v1 - 160) = v0[136];
  *(_QWORD *)(v1 - 152) = v8;
}

uint64_t OUTLINED_FUNCTION_119_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_120_0()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_121_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_122_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_123_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v5 = *(_QWORD *)(v3 + 1248);
  __swift_storeEnumTagSinglePayload(v2, v1, 1, *(_QWORD *)(v3 + 1192));
  return v4(v0, v2, v5);
}

uint64_t OUTLINED_FUNCTION_124()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32))(v0 + *(int *)(v3 + 48), v2, v1);
}

uint64_t OUTLINED_FUNCTION_126_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 1264);
  v3 = *(_QWORD *)(v0 + 1224);
  v4 = *(_QWORD *)(v0 + 1008);
  v5 = *(_QWORD *)(v0 + 1000);
  *(_QWORD *)(v1 - 112) = *(int *)(*(_QWORD *)(v0 + 1192) + 64);
  *(_QWORD *)(v1 - 104) = v5;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 32);
  *(_OWORD *)(v1 - 128) = *(_OWORD *)(v0 + 944);
  return v6(v3, v2);
}

uint64_t OUTLINED_FUNCTION_127_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t);

  v2 = *(_QWORD *)(v0 + 1264);
  v3 = *(_QWORD *)(v0 + 1224);
  v4 = *(_QWORD *)(v0 + 1008);
  v5 = *(_QWORD *)(v0 + 1000);
  *(_QWORD *)(v1 - 120) = *(int *)(*(_QWORD *)(v0 + 1192) + 64);
  *(_QWORD *)(v1 - 112) = v5;
  v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 32);
  *(_OWORD *)(v1 - 144) = *(_OWORD *)(v0 + 944);
  return v6(v3, v2);
}

uint64_t OUTLINED_FUNCTION_128_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_129_0()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_131_0()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_132_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 952);
  *(_QWORD *)(v0 + 2160) = *(_QWORD *)(**(_QWORD **)(v0 + 936) + 96);
  *(_QWORD *)(v0 + 2168) = *(_QWORD *)(v1 + 56);
  return sub_2478B6C5C();
}

uint64_t OUTLINED_FUNCTION_133_0()
{
  return sub_2478B6F8C();
}

uint64_t OUTLINED_FUNCTION_134_0()
{
  return sub_2478B6FEC();
}

uint64_t OUTLINED_FUNCTION_135_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_136_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);

  v2 = v0[152];
  v3 = *(uint64_t (**)(uint64_t))(v0[126] + 32);
  *(_OWORD *)(v1 - 112) = *(_OWORD *)(v0[166] + *(int *)(v0[149] + 64));
  return v3(v2);
}

uint64_t OUTLINED_FUNCTION_137_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_138_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_139_0()
{
  return sub_2478B6CA4();
}

uint64_t OUTLINED_FUNCTION_140_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_141_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

void OUTLINED_FUNCTION_142_0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  sub_2477798A8(0, a2, a3);
}

void OUTLINED_FUNCTION_144_0()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_145_0()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = v0[301];
  v3 = v0[211];
  *(_QWORD *)(v1 - 112) = v0[127];
  *(_QWORD *)(v1 - 104) = v2;
  *(_QWORD *)(v1 - 136) = v0[125];
  *(_QWORD *)(v1 - 128) = v3;
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_146_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, unint64_t))(v2 + 16))(a1, a2+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v3);
}

uint64_t OUTLINED_FUNCTION_147_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  __int128 v10;
  char v11;
  uint64_t v12;

  v10 = *(_OWORD *)(v3 + v7);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v9 - 112);
  *(_OWORD *)(a1 + 32) = v10;
  v11 = *(_BYTE *)(v6 + 16);
  v12 = v2 + *(int *)(v1 + 48);
  *(_OWORD *)v2 = *(_OWORD *)v6;
  *(_BYTE *)(v2 + 16) = v11;
  return v8(v12, v5, v4);
}

uint64_t OUTLINED_FUNCTION_148_0@<X0>(uint64_t a1@<X8>)
{
  return (*(uint64_t (**)(void))(a1 + 32))();
}

uint64_t OUTLINED_FUNCTION_149_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_150_0()
{
  return swift_task_switch();
}

uint64_t OUTLINED_FUNCTION_151_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_152_0()
{
  return sub_2478B71CC();
}

uint64_t OUTLINED_FUNCTION_154_0(__n128 *a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);

  a1[1] = a3;
  a1[2] = a2;
  return v5(v3, v4);
}

void OUTLINED_FUNCTION_156()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_157_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(uint64_t, uint64_t, uint64_t);

  v2 = v1[166];
  v3 = v1[165];
  v4 = v1[157];
  v5 = v1[156];
  __swift_storeEnumTagSinglePayload(v3, v0, 1, v1[149]);
  v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 32);
  v1[265] = (uint64_t)v6;
  return v6(v2, v3, v5);
}

uint64_t OUTLINED_FUNCTION_158_0()
{
  return sub_2478B6F8C();
}

uint64_t OUTLINED_FUNCTION_159_0@<X0>(uint64_t (*a1)(uint64_t)@<X8>)
{
  uint64_t v1;

  return a1(v1);
}

uint64_t OUTLINED_FUNCTION_160_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_162_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_163_0()
{
  return swift_release_n();
}

uint64_t OUTLINED_FUNCTION_164_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_165_0()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_166_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_167_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_168_0()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_170_0()
{
  return sub_2478B6FA4();
}

uint64_t OUTLINED_FUNCTION_172_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = a1;
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_173_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_175_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_176_0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;

  v6 = *(_QWORD *)(v5 - 104);
  v7 = *(_OWORD *)(v1 + *(_QWORD *)(v5 - 112));
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(v5 - 128);
  *(_OWORD *)(a1 + 32) = v7;
  return v3(v2, v4, v6);
}

uint64_t OUTLINED_FUNCTION_177_0()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_178_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_179_0()
{
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_180_0()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 1488);
  *(_QWORD *)(v0 + 2064) = *(_QWORD *)v1;
  *(_QWORD *)(v0 + 2072) = *(_QWORD *)(v1 + 8);
  *(_BYTE *)(v0 + 133) = *(_BYTE *)(v1 + 16);
}

uint64_t OUTLINED_FUNCTION_183_0()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_184_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_185_0(__n128 *a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(uint64_t, uint64_t, uint64_t);
  char v9;
  uint64_t v10;

  a1[1] = a3;
  a1[2] = a2;
  v9 = *(_BYTE *)(v7 + 16);
  v10 = v4 + *(int *)(v3 + 48);
  *(_OWORD *)v4 = *(_OWORD *)v7;
  *(_BYTE *)(v4 + 16) = v9;
  return v8(v10, v6, v5);
}

uint64_t OUTLINED_FUNCTION_186_0()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_188_0()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_189_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_190_0()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 2288);
}

uint64_t OUTLINED_FUNCTION_191_0()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_192_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_193_0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return (*(uint64_t (**)(uint64_t))(a1 + 8))(v1);
}

uint64_t OUTLINED_FUNCTION_194_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_195_0(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_196(uint64_t a1, uint64_t *a2)
{
  return sub_247773A28(a1, a2);
}

uint64_t OUTLINED_FUNCTION_197_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 280) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 184);
}

uint64_t OUTLINED_FUNCTION_198_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_199_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_200_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t (*a7)(void))
{
  return a7();
}

uint64_t OUTLINED_FUNCTION_202_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_203_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_204_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_205_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t, uint64_t);

  return v3(a1, a2, v2);
}

uint64_t OUTLINED_FUNCTION_206_0()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 40) = *(_QWORD *)(v0 + 16);
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_208_0()
{
  return sub_2478B73B8();
}

void OUTLINED_FUNCTION_209_0()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_212_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_213_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD, _QWORD))(v0[129] + 32))(v0[131], v0[135], v0[128]);
}

uint64_t OUTLINED_FUNCTION_214_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_215_0()
{
  return sub_2478B6C98();
}

unint64_t OUTLINED_FUNCTION_217_0()
{
  return sub_247779904();
}

void OUTLINED_FUNCTION_218_0()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_219_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_220_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_221_0()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_222_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_223_0()
{
  return swift_task_dealloc();
}

__n128 OUTLINED_FUNCTION_224()
{
  uint64_t v0;

  return *(__n128 *)v0;
}

uint64_t OUTLINED_FUNCTION_225_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_226_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 2128) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 1552);
}

uint64_t OUTLINED_FUNCTION_227_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 2432) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 1544);
}

uint64_t OUTLINED_FUNCTION_228_0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

void OUTLINED_FUNCTION_229_0()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 640) = v3;
  *(_QWORD *)(v1 + 648) = v0;
  *(_BYTE *)(v1 + 656) = v2;
}

void OUTLINED_FUNCTION_230_0()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_233_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_234_0()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_235_0@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v2;

  return a2(a1, v2);
}

uint64_t OUTLINED_FUNCTION_236_0()
{
  _QWORD *v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v0[11] - 8) + 32))(v0[5], v0[14]);
}

uint64_t OUTLINED_FUNCTION_237_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_240_0()
{
  return sub_2478B7010();
}

uint64_t OUTLINED_FUNCTION_241_0()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_242_0()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_243_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_244_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 32) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_245_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 80) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_246_0()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_248_0(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_249_0(__n128 *a1, __n128 a2, __n128 a3)
{
  uint64_t v3;
  uint64_t (*v4)(uint64_t, uint64_t);
  uint64_t v5;

  a1[1] = a3;
  a1[2] = a2;
  return v4(v3, v5);
}

uint64_t OUTLINED_FUNCTION_250_0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>, __n128 a3@<Q0>)
{
  unsigned __int8 v3;
  uint64_t v4;
  uint64_t v5;
  __n128 *v6;

  *v6 = a3;
  v6[1].n128_u8[0] = v3;
  return (*(uint64_t (**)(char *, uint64_t, uint64_t))(a2 + 32))((char *)v6 + *(int *)(v4 + 48), a1, v5);
}

uint64_t OUTLINED_FUNCTION_252_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v1 + 32))(v0 + *(int *)(v4 + 48), v3, v2);
}

void OUTLINED_FUNCTION_253_0()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_254_0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v0 + 256) = v1;
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_255_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_256_0()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_258_0()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_259_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_260_0()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_261_0()
{
  return sub_2478B7148();
}

uint64_t OUTLINED_FUNCTION_262_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(*(_QWORD *)(v2 + 16), v0, v1);
}

id OUTLINED_FUNCTION_264()
{
  char v0;
  char v1;
  void *v2;

  return sub_247779158(v2, v0, v1);
}

uint64_t OUTLINED_FUNCTION_265()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_266()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_267()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_268()
{
  uint64_t v0;
  char v1;

  *(_BYTE *)(v0 + 88) = v1;
  return sub_2478B6C68();
}

uint64_t OUTLINED_FUNCTION_269(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_270()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  *(_QWORD *)v2 = v4;
  *(_QWORD *)(v2 + 8) = v1;
  *(_BYTE *)(v2 + 16) = v3;
  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t OUTLINED_FUNCTION_271()
{
  return sub_2478B6C98();
}

void OUTLINED_FUNCTION_273()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_274()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v0, v1, 1, v2);
  return __swift_getEnumTagSinglePayload(v0, 1, v2);
}

uint64_t OUTLINED_FUNCTION_275()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_276@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = a1;
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t OUTLINED_FUNCTION_277()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(v1, v0);
}

uint64_t OUTLINED_FUNCTION_278()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_279()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_280()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_281()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1816);
}

uint64_t OUTLINED_FUNCTION_282(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  _QWORD *v10;

  *v10 = a10;
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_283()
{
  return sub_2478B6CA4();
}

void OUTLINED_FUNCTION_284()
{
  JUMPOUT(0x2495829B4);
}

uint64_t OUTLINED_FUNCTION_285()
{
  return sub_2478B6F44();
}

uint64_t OUTLINED_FUNCTION_287()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_288(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 2432) = a1;
  *a1 = v2;
  a1[1] = v1;
  return *(_QWORD *)(v2 + 1544);
}

uint64_t OUTLINED_FUNCTION_289()
{
  return swift_getTupleTypeMetadata2();
}

uint64_t OUTLINED_FUNCTION_290()
{
  return sub_2478B6CB0();
}

uint64_t OUTLINED_FUNCTION_291(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return type metadata accessor for ContentManagementPlan.Link(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_292()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_293(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_294()
{
  return sub_2478B6C98();
}

void OUTLINED_FUNCTION_295()
{
  JUMPOUT(0x24958320CLL);
}

uint64_t OUTLINED_FUNCTION_298()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_299()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_300@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_301@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

void OUTLINED_FUNCTION_302(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  char v4;
  char v5;
  uint64_t v6;

  sub_247779F88(v6, v5, v4, a4);
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_303()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t OUTLINED_FUNCTION_304()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);

  v1 = v0[196];
  v2 = v0[124];
  v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0[192] + 8);
  v0[247] = v3;
  return v3(v1, v2);
}

uint64_t OUTLINED_FUNCTION_307()
{
  return sub_2478B6C68();
}

uint64_t OUTLINED_FUNCTION_309()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_310()
{
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_312(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_313(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

unint64_t OUTLINED_FUNCTION_315()
{
  return 0xD000000000000010;
}

uint64_t OUTLINED_FUNCTION_316()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_317()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1816);
}

uint64_t OUTLINED_FUNCTION_318()
{
  uint64_t v0;

  *(_BYTE *)(v0 + 128) = 5;
  return sub_2478B6C68();
}

uint64_t OUTLINED_FUNCTION_319()
{
  return sub_2478B6CB0();
}

uint64_t OUTLINED_FUNCTION_320()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_321(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return __swift_storeEnumTagSinglePayload(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_323()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_325()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_326()
{
  return sub_2478B6CA4();
}

uint64_t OUTLINED_FUNCTION_327()
{
  return swift_getTupleTypeMetadata();
}

void OUTLINED_FUNCTION_328()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_330@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_331()
{
  return sub_2478B7004();
}

uint64_t OUTLINED_FUNCTION_332()
{
  return swift_getFunctionTypeMetadata1();
}

uint64_t OUTLINED_FUNCTION_333(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return type metadata accessor for ContentManagementPlan.Link(255, v2, a1, v1);
}

uint64_t OUTLINED_FUNCTION_334(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + v1) = result;
  return result;
}

uint64_t OUTLINED_FUNCTION_335(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_2477750AC(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_336()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_337@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t (*a3)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v3;

  return a3(a1, a2, v3);
}

uint64_t OUTLINED_FUNCTION_338()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_340()
{
  return sub_2478B6FA4();
}

uint64_t OUTLINED_FUNCTION_341()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_342()
{
  sub_247778E30();
}

uint64_t OUTLINED_FUNCTION_343()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_344()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_345()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_346()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + 2408) = *(_QWORD *)(v1 + v0);
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_347()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_348()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_349()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_350()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_351()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_352()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_353()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_354(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  return sub_247784004(a1, v8, v10, v9, a5, a6, a7, a8);
}

uint64_t OUTLINED_FUNCTION_355()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_356()
{
  return sub_2478B6FEC();
}

uint64_t OUTLINED_FUNCTION_357()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_358()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_359()
{
  return swift_checkMetadataState();
}

uint64_t OUTLINED_FUNCTION_360()
{
  return sub_2478B6FEC();
}

uint64_t OUTLINED_FUNCTION_361()
{
  return sub_2478B6FEC();
}

void OUTLINED_FUNCTION_362(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 696) = a1;
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_363(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = *(_QWORD *)(v1 + 1704);
  *(_QWORD *)(v1 + 864) = a1;
  return result;
}

uint64_t OUTLINED_FUNCTION_364(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2152) = a1;
  return sub_2478B7034();
}

unint64_t OUTLINED_FUNCTION_365(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2184) = a1;
  return sub_247754E48();
}

uint64_t OUTLINED_FUNCTION_367()
{
  return sub_2478B71CC();
}

uint64_t OUTLINED_FUNCTION_368()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 120) = *(_QWORD *)(v0 + 1016);
  return swift_task_dealloc();
}

void OUTLINED_FUNCTION_370()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 72) = v3;
  *(_QWORD *)(v1 + 80) = v0;
  *(_BYTE *)(v1 + 88) = v2;
}

uint64_t OUTLINED_FUNCTION_371()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_372()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8))(v2, v1);
}

uint64_t OUTLINED_FUNCTION_373()
{
  return sub_2478B7034();
}

uint64_t OUTLINED_FUNCTION_376()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 2224))(*(_QWORD *)(v0 + 1512), *(_QWORD *)(v0 + 1496));
}

uint64_t OUTLINED_FUNCTION_377()
{
  uint64_t v0;
  uint64_t v1;

  return (*(uint64_t (**)(_QWORD, _QWORD))(v0 + 8))(*(_QWORD *)(v1 - 112), *(_QWORD *)(v1 - 136));
}

unint64_t OUTLINED_FUNCTION_379()
{
  return 0xD000000000000014;
}

uint64_t OUTLINED_FUNCTION_380()
{
  return sub_2478B7034();
}

uint64_t OUTLINED_FUNCTION_381()
{
  return sub_2478B7034();
}

uint64_t OUTLINED_FUNCTION_383()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_384()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_386()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_387@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return a1(v2, v1, v3);
}

uint64_t OUTLINED_FUNCTION_388()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_390()
{
  return swift_getAssociatedConformanceWitness();
}

void OUTLINED_FUNCTION_391()
{
  uint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  *(_QWORD *)(v1 + 664) = v3;
  *(_QWORD *)(v1 + 672) = v0;
  *(_BYTE *)(v1 + 680) = v2;
}

uint64_t OUTLINED_FUNCTION_392(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 2112) = a1;
  return sub_2478B6F44();
}

uint64_t OUTLINED_FUNCTION_393(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return sub_2478B7148();
}

uint64_t OUTLINED_FUNCTION_397()
{
  return sub_2478B6FA4();
}

uint64_t OUTLINED_FUNCTION_400()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_401()
{
  return sub_2478B7034();
}

void OUTLINED_FUNCTION_402()
{
  JUMPOUT(0x24958320CLL);
}

uint64_t OUTLINED_FUNCTION_404()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_405()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_406()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_407()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_409()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_410()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_411()
{
  return sub_2478B6F80();
}

uint64_t OUTLINED_FUNCTION_417()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_418()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t OUTLINED_FUNCTION_420(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return type metadata accessor for ContentManagementPlan.Link.Mode(0, v4, a3, v3);
}

uint64_t OUTLINED_FUNCTION_421()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_422()
{
  return sub_2478B7010();
}

uint64_t OUTLINED_FUNCTION_423()
{
  return sub_2478B6F80();
}

uint64_t OUTLINED_FUNCTION_424()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t, uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v3;

  return v1(v0, v3, v2);
}

uint64_t OUTLINED_FUNCTION_425()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_427(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, _QWORD))
{
  char v4;
  char v5;
  uint64_t v6;

  return sub_247779F88(v6, v4, v5, a4);
}

uint64_t OUTLINED_FUNCTION_428()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_429()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_435()
{
  JUMPOUT(0x2495829A8);
}

uint64_t OUTLINED_FUNCTION_436()
{
  return sub_2478B7034();
}

uint64_t OUTLINED_FUNCTION_437(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_438(uint64_t a1)
{
  uint64_t v1;

  return __swift_getEnumTagSinglePayload(a1, 1, v1);
}

uint64_t OUTLINED_FUNCTION_439()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_440()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_441()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_443()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_444()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_445()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_446(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return type metadata accessor for ContentManagementPlan.Link(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_447()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_448()
{
  return swift_storeEnumTagMultiPayload();
}

void OUTLINED_FUNCTION_449(char a1, int64_t a2)
{
  uint64_t v2;

  sub_247761E70(a1, a2, 1, v2);
}

uint64_t OUTLINED_FUNCTION_450()
{
  return sub_2478B6FA4();
}

uint64_t OUTLINED_FUNCTION_451(uint64_t a1)
{
  uint64_t v1;

  return sub_24777DEE0(a1, v1);
}

uint64_t OUTLINED_FUNCTION_452()
{
  return sub_2478B6DA0();
}

uint64_t OUTLINED_FUNCTION_453()
{
  return swift_endAccess();
}

uint64_t OUTLINED_FUNCTION_454()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_455()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = *(_QWORD *)(v0 + 2360);
  *(_DWORD *)(v1 - 120) = *(unsigned __int8 *)(v0 + 134);
  return result;
}

uint64_t OUTLINED_FUNCTION_457()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 1400);
}

uint64_t OUTLINED_FUNCTION_459()
{
  return sub_2478B6D70();
}

uint64_t OUTLINED_FUNCTION_461(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return type metadata accessor for ContentManagementPlan.Link(a1, a2, a3, v3);
}

uint64_t OUTLINED_FUNCTION_462()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_463()
{
  return sub_2478B6FC8();
}

uint64_t OUTLINED_FUNCTION_464()
{
  return sub_2478B6FC8();
}

uint64_t OUTLINED_FUNCTION_465()
{
  return sub_2478B6FC8();
}

uint64_t OUTLINED_FUNCTION_466()
{
  return swift_getEnumCaseMultiPayload();
}

uint64_t OUTLINED_FUNCTION_467()
{
  return sub_2478B6FEC();
}

uint64_t OUTLINED_FUNCTION_468()
{
  return sub_2478B6C74();
}

uint64_t OUTLINED_FUNCTION_469()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_470()
{
  uint64_t (*v0)(uint64_t, uint64_t);
  uint64_t v1;
  uint64_t v2;

  return v0(v2, v1);
}

uint64_t OUTLINED_FUNCTION_471()
{
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_472()
{
  return sub_2478B6F44();
}

uint64_t OUTLINED_FUNCTION_473()
{
  return sub_2478B6DDC();
}

uint64_t OUTLINED_FUNCTION_477()
{
  return sub_2478B7034();
}

uint64_t OUTLINED_FUNCTION_479()
{
  return sub_2478B6C98();
}

uint64_t OUTLINED_FUNCTION_480()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_482()
{
  return 255;
}

unint64_t OUTLINED_FUNCTION_483()
{
  return sub_247767914();
}

uint64_t OUTLINED_FUNCTION_484()
{
  return swift_getAssociatedTypeWitness();
}

void OUTLINED_FUNCTION_485()
{
  sub_24777D9BC();
}

uint64_t OUTLINED_FUNCTION_486()
{
  return sub_2478B6F74();
}

uint64_t OUTLINED_FUNCTION_487@<X0>(void (*a1)(_BYTE *)@<X0>, uint64_t a2@<X8>)
{
  return sub_247779E6C(a1, a2);
}

uint64_t OUTLINED_FUNCTION_488()
{
  uint64_t v0;

  return v0;
}

__n128 OUTLINED_FUNCTION_489()
{
  __n128 *v0;
  uint64_t v1;
  __n128 result;

  result = v0[59];
  *(__n128 *)(v1 - 160) = result;
  return result;
}

unint64_t OUTLINED_FUNCTION_490()
{
  return sub_24777986C();
}

_QWORD *OUTLINED_FUNCTION_493@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

_QWORD *OUTLINED_FUNCTION_494@<X0>(_QWORD *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *result = v2;
  result[1] = a2;
  return result;
}

uint64_t OUTLINED_FUNCTION_495()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_497()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_498()
{
  return 0;
}

uint64_t OUTLINED_FUNCTION_500()
{
  return sub_2478B7034();
}

uint64_t OUTLINED_FUNCTION_501()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_502()
{
  return sub_2478B6C98();
}

uint64_t OUTLINED_FUNCTION_503()
{
  return sub_2478B71E4();
}

uint64_t OUTLINED_FUNCTION_504(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;

  return sub_2477750AC(a1, v4, a3, v3);
}

uint64_t OUTLINED_FUNCTION_505()
{
  return swift_checkMetadataState();
}

uint64_t OUTLINED_FUNCTION_506()
{
  return sub_2478B6FEC();
}

uint64_t OUTLINED_FUNCTION_507()
{
  return sub_2478B6FEC();
}

uint64_t OUTLINED_FUNCTION_508()
{
  return 0;
}

unint64_t OUTLINED_FUNCTION_509(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 1992) = a1;
  return sub_247754E48();
}

unint64_t OUTLINED_FUNCTION_510(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 272) = a1;
  return sub_247754E48();
}

uint64_t OUTLINED_FUNCTION_511()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  __swift_storeEnumTagSinglePayload(v0, 0, 1, v2);
  return v1;
}

uint64_t OUTLINED_FUNCTION_512()
{
  return swift_unknownObjectRelease();
}

uint64_t OUTLINED_FUNCTION_513@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_514()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_515()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_517()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 96) = *(_QWORD *)(v0 + 1016);
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_519()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 264);
}

uint64_t OUTLINED_FUNCTION_521(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = v1;
  return v2;
}

uint64_t OUTLINED_FUNCTION_523()
{
  return swift_release();
}

uint64_t sub_2477806BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC8SonicKit15SessionDocument___observationRegistrar;
  v2 = sub_2478B6C2C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_24778070C()
{
  return type metadata accessor for SessionDocument();
}

uint64_t type metadata accessor for SessionDocument()
{
  uint64_t result;

  result = qword_2576C2420;
  if (!qword_2576C2420)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_24778074C()
{
  uint64_t result;
  unint64_t v1;

  result = sub_2478B6C2C();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t AssetLoadResult.asset.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_6(*(_QWORD *)(a1 + 16), a2);
}

uint64_t AssetLoadResult.asset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_1_3(v2, *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40), a1);
}

uint64_t (*AssetLoadResult.asset.modify())()
{
  return nullsub_1;
}

uint64_t AssetLoadResult.selection.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return OUTLINED_FUNCTION_0_6(*(_QWORD *)(a1 + 24), a2);
}

uint64_t AssetLoadResult.selection.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return OUTLINED_FUNCTION_1_3(v2 + *(int *)(a2 + 36), *(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 40), a1);
}

uint64_t (*AssetLoadResult.selection.modify())()
{
  return nullsub_1;
}

uint64_t AssetLoadResult.init(asset:selection:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v9;
  uint64_t v10;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a5, a1);
  v10 = a5 + *(int *)(type metadata accessor for AssetLoadResult(0, a3, a4, v9) + 36);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(v10, a2, a4);
}

uint64_t type metadata accessor for AssetLoadResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AssetLoadResult);
}

uint64_t dispatch thunk of RendererBehavior.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(**(int **)(a5 + 48) + *(_QWORD *)(a5 + 48));
  v11 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_247780938;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t sub_247780938()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_247780980()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_247780A0C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v12;
  int v13;
  uint64_t v16;
  uint64_t v17;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = v8;
  v10 = *(_QWORD *)(v6 + 64) + v8;
  v11 = *(_DWORD *)(v6 + 80) | v8;
  v12 = v11;
  v13 = v11 & 0x100000;
  if (v12 > 7 || v13 != 0 || (v10 & (unint64_t)~v9) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v16 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v16 + ((v12 + 16) & ~v12));
    swift_retain();
  }
  else
  {
    v17 = ~v9;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v10) & v17, ((unint64_t)a2 + v10) & v17, v5);
  }
  return v4;
}

uint64_t sub_247780ADC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_247780B34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_247780BA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_247780C0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_247780C78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_247780CE4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;
  char v17;
  int v18;
  unsigned int v19;
  int v20;
  int v21;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(a3 + 24);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = *(_QWORD *)(v6 - 8);
  v10 = *(unsigned int *)(v9 + 84);
  if (v10 <= v8)
    v11 = *(_DWORD *)(v7 + 84);
  else
    v11 = *(_DWORD *)(v9 + 84);
  if (!a2)
    return 0;
  v12 = *(_QWORD *)(v7 + 64);
  v13 = *(unsigned __int8 *)(v9 + 80);
  v14 = v12 + v13;
  v15 = a2 - v11;
  if (a2 <= v11)
    goto LABEL_23;
  v16 = (v14 & ~v13) + *(_QWORD *)(v9 + 64);
  v17 = 8 * v16;
  if (v16 <= 3)
  {
    v19 = ((v15 + ~(-1 << v17)) >> v17) + 1;
    if (HIWORD(v19))
    {
      v18 = *(_DWORD *)(a1 + v16);
      if (!v18)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 > 0xFF)
    {
      v18 = *(unsigned __int16 *)(a1 + v16);
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v19 < 2)
    {
LABEL_23:
      if (v11)
      {
        if (v8 >= v10)
        {
          v10 = v8;
        }
        else
        {
          a1 = (v14 + a1) & ~v13;
          v5 = v6;
        }
        return __swift_getEnumTagSinglePayload(a1, v10, v5);
      }
      return 0;
    }
  }
  v18 = *(unsigned __int8 *)(a1 + v16);
  if (!*(_BYTE *)(a1 + v16))
    goto LABEL_23;
LABEL_14:
  v20 = (v18 - 1) << v17;
  if (v16 > 3)
    v20 = 0;
  if (!(_DWORD)v16)
    return v11 + v20 + 1;
  if (v16 <= 3)
    v21 = v16;
  else
    v21 = 4;
  return ((uint64_t (*)(void))((char *)&loc_247780DC0 + 4 * byte_2478B8ED0[v21 - 1]))();
}

void sub_247780E34(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  char v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  v9 = 8 * v8;
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v12 = ((a3 - v7 + ~(-1 << v9)) >> v9) + 1;
      if (HIWORD(v12))
      {
        v10 = 4u;
      }
      else if (v12 >= 0x100)
      {
        v10 = 2;
      }
      else
      {
        v10 = v12 > 1;
      }
    }
    else
    {
      v10 = 1u;
    }
  }
  else
  {
    v10 = 0;
  }
  if (v7 < a2)
  {
    v11 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v13 = v11 & ~(-1 << v9);
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v13;
          *((_BYTE *)a1 + 2) = BYTE2(v13);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v13;
        }
        else
        {
          *(_BYTE *)a1 = v13;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v11;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X14 }
}

uint64_t OUTLINED_FUNCTION_0_6@<X0>(uint64_t a1@<X2>, uint64_t a2@<X8>)
{
  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(a1 - 8) + 16))(a2);
}

uint64_t OUTLINED_FUNCTION_1_3@<X0>(uint64_t a1@<X0>, uint64_t (*a2)(uint64_t, uint64_t)@<X3>, uint64_t a3@<X8>)
{
  return a2(a1, a3);
}

ValueMetadata *type metadata accessor for MediaRemoteCommandSystem()
{
  return &type metadata for MediaRemoteCommandSystem;
}

uint64_t sub_247781054()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  swift_getAssociatedTypeWitness();
  result = sub_2478B7148();
  if (v1 <= 0x3F)
  {
    result = swift_getAssociatedTypeWitness();
    if (v2 <= 0x3F)
    {
      result = swift_initClassMetadata2();
      if (!result)
        return 0;
    }
  }
  return result;
}

uint64_t sub_247781124()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_24778117C();
}

uint64_t sub_24778117C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t v5;

  v1[3] = v0;
  v1[4] = *v0;
  v2 = *v0;
  v3 = *(_QWORD *)(*v0 + 88);
  v1[5] = v3;
  v1[6] = *(_QWORD *)(v3 + 8);
  v1[7] = *(_QWORD *)(v2 + 80);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v1[8] = AssociatedTypeWitness;
  v1[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v1[10] = swift_task_alloc();
  sub_2478B6C5C();
  v1[11] = sub_2478B6C50();
  sub_247754E48();
  v1[12] = sub_2478B7010();
  v1[13] = v5;
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24778123C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedTypeWitness;
  _QWORD *v6;
  uint64_t (*v8)(_QWORD);

  v1 = v0[6];
  v2 = v0[3];
  v3 = *(_QWORD *)(*(_QWORD *)v2 + 96);
  v0[14] = v3;
  v4 = v2 + v3;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v0[15] = AssociatedTypeWitness;
  __swift_storeEnumTagSinglePayload(v4, 1, 1, AssociatedTypeWitness);
  v8 = (uint64_t (*)(_QWORD))(**(int **)(v1 + 24) + *(_QWORD *)(v1 + 24));
  v6 = (_QWORD *)swift_task_alloc();
  v0[16] = v6;
  *v6 = v0;
  v6[1] = sub_2477812F0;
  return v8(v0[10]);
}

uint64_t sub_2477812F0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 136) = v0;
  swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247781348()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 80);
  v2 = *(_QWORD *)(v0 + 64);
  v3 = *(_QWORD *)(v0 + 72);
  v4 = *(_QWORD *)(v0 + 24);
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v4 + *(_QWORD *)(*(_QWORD *)v4 + 104), v1, v2);
  sub_247754E88();
  v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2478B7970;
  *(_QWORD *)(v0 + 16) = v4;
  swift_retain();
  v8 = sub_2478B6E6C();
  v9 = v6;
  sub_2478B6EA8();
  *(_QWORD *)(v5 + 56) = MEMORY[0x24BEE0D00];
  *(_QWORD *)(v5 + 32) = v8;
  *(_QWORD *)(v5 + 40) = v9;
  sub_2478B7388();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return (*(uint64_t (**)(_QWORD))(v0 + 8))(*(_QWORD *)(v0 + 24));
}

uint64_t sub_247781458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 112);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = sub_2478B7148();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2 + v1, v3);
  swift_deallocPartialClassInstance();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_2477814E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t AssociatedTypeWitness;

  swift_getAssociatedTypeWitness();
  v1 = sub_2478B7148();
  OUTLINED_FUNCTION_6_1(v1);
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  OUTLINED_FUNCTION_6_1(AssociatedTypeWitness);
  return v0;
}

uint64_t sub_24778157C()
{
  sub_2477814E8();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for Publisher(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for Publisher);
}

uint64_t AVFoundationRenderer.__allocating_init(dataSource:)(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  AVFoundationRenderer.init(dataSource:)(a1);
  return v2;
}

uint64_t AVFoundationRenderer.init(dataSource:)(uint64_t a1)
{
  uint64_t v1;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v1 + 80) - 8) + 32))(v1 + *(_QWORD *)(*(_QWORD *)v1 + 96), a1);
  return v1;
}

uint64_t AVFoundationRenderer.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;

  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  v5 = *v3;
  v4[6] = *v3;
  v6 = *(_QWORD *)(v5 + 80);
  v4[7] = v6;
  v4[8] = *(_QWORD *)(v6 - 8);
  v4[9] = swift_task_alloc();
  return swift_task_switch();
}

uint64_t sub_247781684()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t (*v5)(_QWORD, _QWORD, _QWORD, _QWORD, uint64_t);

  v1 = v0[6];
  (*(void (**)(_QWORD, _QWORD, _QWORD))(v0[8] + 16))(v0[9], v0[5] + *(_QWORD *)(*(_QWORD *)v0[5] + 96), v0[7]);
  v2 = *(_QWORD *)(v1 + 88);
  v3 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  v0[10] = v3;
  *v3 = v0;
  v3[1] = sub_247781708;
  return v5(v0[2], v0[3], v0[4], v0[7], v2);
}

uint64_t sub_247781708()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(*v1 + 72);
  v3 = *(_QWORD *)(*v1 + 56);
  v4 = *(_QWORD *)(*v1 + 64);
  v5 = *v1;
  *(_QWORD *)(v5 + 88) = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  if (v0)
    return swift_task_switch();
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v5 + 8))();
}

uint64_t sub_2477817A8()
{
  uint64_t v0;

  swift_task_dealloc();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t AVFoundationRenderer.deinit()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 80) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 96));
  return v0;
}

uint64_t AVFoundationRenderer.__deallocating_deinit()
{
  AVFoundationRenderer.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_247781828(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;

  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2477605BC;
  return AVFoundationRenderer.asset(for:in:)(a1, a2, a3);
}

uint64_t AVFoundationAsset.recipe.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t AVFoundationAsset.recipe.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*AVFoundationAsset.recipe.modify())()
{
  return nullsub_1;
}

uint64_t AVFoundationAsset.cacheEntry.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_2477818E8(v2 + *(int *)(a1 + 36), a2);
}

uint64_t sub_2477818E8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24778192C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void sub_24778192C()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C2550[0])
  {
    sub_2478B6D04();
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, qword_2576C2550);
  }
}

uint64_t AVFoundationAsset.cacheEntry.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_24778198C(a1, v2 + *(int *)(a2 + 36));
}

uint64_t sub_24778198C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24778192C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t (*AVFoundationAsset.cacheEntry.modify())()
{
  return nullsub_1;
}

id AVFoundationAsset.avAsset.getter(uint64_t a1)
{
  uint64_t v1;

  return *(id *)(v1 + *(int *)(a1 + 40));
}

void AVFoundationAsset.avAsset.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 40);

  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_28();
}

uint64_t (*AVFoundationAsset.avAsset.modify())()
{
  return nullsub_1;
}

uint64_t AVFoundationAsset.drmSession.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 44);
  v5 = sub_2478B7148();
  return OUTLINED_FUNCTION_3_4(a2, v4, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 16));
}

uint64_t AVFoundationAsset.drmSession.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a2 + 44);
  v5 = sub_2478B7148();
  return OUTLINED_FUNCTION_3_4(v4, a1, v5, *(uint64_t (**)(void))(*(_QWORD *)(v5 - 8) + 40));
}

uint64_t (*AVFoundationAsset.drmSession.modify())()
{
  return nullsub_1;
}

uint64_t AVFoundationAsset.downloadTask.getter()
{
  return swift_retain();
}

void AVFoundationAsset.downloadTask.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;

  v4 = *(int *)(a2 + 48);
  swift_release();
  *(_QWORD *)(v2 + v4) = a1;
  OUTLINED_FUNCTION_28();
}

uint64_t (*AVFoundationAsset.downloadTask.modify())()
{
  return nullsub_1;
}

uint64_t AVFoundationAsset.init(recipe:cacheEntry:avAsset:drmSession:downloadTask:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  int *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t result;

  v14 = (int *)type metadata accessor for AVFoundationAsset(0, a6, a7, a4);
  v15 = a8 + v14[9];
  v16 = sub_2478B6D04();
  __swift_storeEnumTagSinglePayload(v15, 1, 1, v16);
  v17 = a8 + v14[11];
  __swift_storeEnumTagSinglePayload(v17, 1, 1, a7);
  v18 = v14[12];
  *(_QWORD *)(a8 + v18) = 0;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a6 - 8) + 32))(a8, a1, a6);
  sub_24778198C(a2, v15);
  *(_QWORD *)(a8 + v14[10]) = a3;
  v19 = sub_2478B7148();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 40))(v17, a4, v19);
  result = swift_release();
  *(_QWORD *)(a8 + v18) = a5;
  return result;
}

uint64_t type metadata accessor for AVFoundationAsset(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AVFoundationAsset);
}

uint64_t sub_247781C34()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t sub_247781C4C()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for AVFoundationRenderer(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AVFoundationRenderer);
}

uint64_t method lookup function for AVFoundationRenderer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of AVFoundationRenderer.__allocating_init(dataSource:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

void sub_247781CDC()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  swift_checkMetadataState();
  if (v0 <= 0x3F)
  {
    sub_24778192C();
    if (v1 <= 0x3F)
    {
      sub_2478B7148();
      if (v2 <= 0x3F)
        swift_initStructMetadata();
    }
  }
}

uint64_t *sub_247781D98(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  size_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  int v19;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  void *v25;
  const void *v26;
  int EnumTagSinglePayload;
  _QWORD *v28;
  void **v29;
  void *v30;
  void *v31;
  const void *v32;
  id v33;
  size_t __n;
  unint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(v7 + 64);
  v39 = sub_2478B6D04();
  v9 = *(_QWORD *)(v39 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10;
  v12 = v8 + v10;
  if (*(_DWORD *)(v9 + 84))
    v13 = *(_QWORD *)(v9 + 64);
  else
    v13 = *(_QWORD *)(v9 + 64) + 1;
  v14 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v15 = *(_DWORD *)(v14 + 80);
  v16 = v15;
  if (*(_DWORD *)(v14 + 84))
    v17 = *(_QWORD *)(v14 + 64);
  else
    v17 = *(_QWORD *)(v14 + 64) + 1;
  v18 = v15 | *(_DWORD *)(v7 + 80) & 0xF8 | v10;
  v19 = (v15 | v10 | *(_DWORD *)(v7 + 80)) & 0x100000;
  if (v18 > 7
    || v19 != 0
    || ((v17
       + 7
       + ((((v13 + (v12 & ~v11) + 7) & 0xFFFFFFFFFFFFFFF8) + v15 + 8) & ~(unint64_t)v15)) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    v22 = *a2;
    *a1 = *a2;
    v23 = (uint64_t *)(v22 + (((v18 | 7) + 16) & ~(unint64_t)(v18 | 7)));
  }
  else
  {
    v37 = *(_QWORD *)(a3 + 24);
    v38 = v17 + 7;
    v24 = ~v11;
    __n = v17;
    v36 = ~(unint64_t)v15;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v25 = (void *)(((unint64_t)a1 + v12) & v24);
    v26 = (const void *)(((unint64_t)a2 + v12) & v24);
    EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v39);
    v23 = a1;
    if (EnumTagSinglePayload)
    {
      memcpy(v25, v26, v13);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v25, v26, v39);
      __swift_storeEnumTagSinglePayload((uint64_t)v25, 0, 1, v39);
    }
    v28 = (_QWORD *)(((unint64_t)v25 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    v29 = (void **)(((unint64_t)v26 + v13 + 7) & 0xFFFFFFFFFFFFFFF8);
    v30 = *v29;
    *v28 = *v29;
    v31 = (void *)(((unint64_t)v28 + v16 + 8) & v36);
    v32 = (const void *)(((unint64_t)v29 + v16 + 8) & v36);
    v33 = v30;
    if (__swift_getEnumTagSinglePayload((uint64_t)v32, 1, v37))
    {
      memcpy(v31, v32, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v14 + 16))(v31, v32, v37);
      __swift_storeEnumTagSinglePayload((uint64_t)v31, 0, 1, v37);
    }
    *(_QWORD *)(((unint64_t)v31 + v38) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v32 + v38) & 0xFFFFFFFFFFFFF8);
  }
  swift_retain();
  return v23;
}

uint64_t sub_247781FE8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  id *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = sub_2478B6D04();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = (v5 + a1 + *(unsigned __int8 *)(v7 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
  if (!__swift_getEnumTagSinglePayload(v8, 1, v6))
    (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v8, v6);
  v9 = v8 + *(_QWORD *)(v7 + 64);
  if (!*(_DWORD *)(v7 + 84))
    ++v9;
  v10 = (id *)((v9 + 7) & 0xFFFFFFFFFFFFFFF8);

  v11 = *(_QWORD *)(a2 + 24);
  v12 = *(_QWORD *)(v11 - 8);
  v13 = ((unint64_t)v10 + *(unsigned __int8 *)(v12 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  if (!__swift_getEnumTagSinglePayload(v13, 1, v11))
    (*(void (**)(unint64_t, uint64_t))(v12 + 8))(v13, v11);
  return swift_release();
}

uint64_t sub_2477820F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  _QWORD *v18;
  void **v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  id v26;
  int v27;
  size_t v28;
  size_t v29;
  size_t v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_2478B6D04();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v7 + v10 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (void **)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v19;
  *v18 = *v19;
  v21 = *(_QWORD *)(a3 + 24);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v18 + v23 + 8) & ~v23);
  v25 = (const void *)(((unint64_t)v19 + v23 + 8) & ~v23);
  v26 = v20;
  if (__swift_getEnumTagSinglePayload((uint64_t)v25, 1, v21))
  {
    v27 = *(_DWORD *)(v22 + 84);
    v28 = *(_QWORD *)(v22 + 64);
    if (v27)
      v29 = v28;
    else
      v29 = v28 + 1;
    memcpy(v24, v25, v29);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v22 + 16))(v24, v25, v21);
    __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v21);
    v27 = *(_DWORD *)(v22 + 84);
    v28 = *(_QWORD *)(v22 + 64);
  }
  if (v27)
    v30 = v28;
  else
    v30 = v28 + 1;
  *(_QWORD *)(((unint64_t)v24 + v30 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v25 + v30 + 7) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  return a1;
}

uint64_t sub_2477822A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int EnumTagSinglePayload;
  int v15;
  size_t v16;
  uint64_t v17;
  void **v18;
  void **v19;
  void *v20;
  void *v21;
  id v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  const void *v27;
  int v28;
  size_t v29;
  uint64_t v30;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_2478B6D04();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v7 + v10 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v16);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  v18 = (void **)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (void **)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v19;
  v21 = *v18;
  *v18 = *v19;
  v22 = v20;

  v23 = *(_QWORD *)(a3 + 24);
  v24 = *(_QWORD *)(v23 - 8);
  v25 = *(unsigned __int8 *)(v24 + 80);
  v26 = (void *)(((unint64_t)v18 + v25 + 8) & ~v25);
  v27 = (const void *)(((unint64_t)v19 + v25 + 8) & ~v25);
  LODWORD(v19) = __swift_getEnumTagSinglePayload((uint64_t)v26, 1, v23);
  v28 = __swift_getEnumTagSinglePayload((uint64_t)v27, 1, v23);
  if ((_DWORD)v19)
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 16))(v26, v27, v23);
      __swift_storeEnumTagSinglePayload((uint64_t)v26, 0, 1, v23);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v28)
    {
      (*(void (**)(void *, const void *, uint64_t))(v24 + 24))(v26, v27, v23);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v24 + 8))(v26, v23);
  }
  if (*(_DWORD *)(v24 + 84))
    v29 = *(_QWORD *)(v24 + 64);
  else
    v29 = *(_QWORD *)(v24 + 64) + 1;
  memcpy(v26, v27, v29);
LABEL_22:
  if (*(_DWORD *)(v24 + 84))
    v30 = *(_QWORD *)(v24 + 64);
  else
    v30 = *(_QWORD *)(v24 + 64) + 1;
  *(_QWORD *)(((unint64_t)v26 + v30 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v27 + v30 + 7) & 0xFFFFFFFFFFFFF8);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_2477824FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  _QWORD *v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  const void *v24;
  int v25;
  size_t v26;
  size_t v27;
  size_t v28;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_2478B6D04();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v7 + v10 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if (__swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = (_QWORD *)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (_QWORD *)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  *v18 = *v19;
  v20 = *(_QWORD *)(a3 + 24);
  v21 = *(_QWORD *)(v20 - 8);
  v22 = *(unsigned __int8 *)(v21 + 80);
  v23 = (void *)(((unint64_t)v18 + v22 + 8) & ~v22);
  v24 = (const void *)(((unint64_t)v19 + v22 + 8) & ~v22);
  if (__swift_getEnumTagSinglePayload((uint64_t)v24, 1, v20))
  {
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
    if (v25)
      v27 = v26;
    else
      v27 = v26 + 1;
    memcpy(v23, v24, v27);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v21 + 32))(v23, v24, v20);
    __swift_storeEnumTagSinglePayload((uint64_t)v23, 0, 1, v20);
    v25 = *(_DWORD *)(v21 + 84);
    v26 = *(_QWORD *)(v21 + 64);
  }
  if (v25)
    v28 = v26;
  else
    v28 = v26 + 1;
  *(_QWORD *)(((unint64_t)v23 + v28 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_2477826A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int EnumTagSinglePayload;
  int v15;
  size_t v16;
  uint64_t v17;
  void **v18;
  void **v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  void *v24;
  const void *v25;
  int v26;
  size_t v27;
  uint64_t v28;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_2478B6D04();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = v7 + v10;
  v12 = (void *)((v7 + v10 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  EnumTagSinglePayload = __swift_getEnumTagSinglePayload((uint64_t)v12, 1, v8);
  v15 = __swift_getEnumTagSinglePayload((uint64_t)v13, 1, v8);
  if (EnumTagSinglePayload)
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
      __swift_storeEnumTagSinglePayload((uint64_t)v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(void *, const void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v16 = *(_QWORD *)(v9 + 64);
  else
    v16 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v16);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  v18 = (void **)(((unint64_t)v12 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v19 = (void **)(((unint64_t)v13 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
  v20 = *v18;
  *v18 = *v19;

  v21 = *(_QWORD *)(a3 + 24);
  v22 = *(_QWORD *)(v21 - 8);
  v23 = *(unsigned __int8 *)(v22 + 80);
  v24 = (void *)(((unint64_t)v18 + v23 + 8) & ~v23);
  v25 = (const void *)(((unint64_t)v19 + v23 + 8) & ~v23);
  LODWORD(v19) = __swift_getEnumTagSinglePayload((uint64_t)v24, 1, v21);
  v26 = __swift_getEnumTagSinglePayload((uint64_t)v25, 1, v21);
  if ((_DWORD)v19)
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 32))(v24, v25, v21);
      __swift_storeEnumTagSinglePayload((uint64_t)v24, 0, 1, v21);
      goto LABEL_22;
    }
  }
  else
  {
    if (!v26)
    {
      (*(void (**)(void *, const void *, uint64_t))(v22 + 40))(v24, v25, v21);
      goto LABEL_22;
    }
    (*(void (**)(void *, uint64_t))(v22 + 8))(v24, v21);
  }
  if (*(_DWORD *)(v22 + 84))
    v27 = *(_QWORD *)(v22 + 64);
  else
    v27 = *(_QWORD *)(v22 + 64) + 1;
  memcpy(v24, v25, v27);
LABEL_22:
  if (*(_DWORD *)(v22 + 84))
    v28 = *(_QWORD *)(v22 + 64);
  else
    v28 = *(_QWORD *)(v22 + 64) + 1;
  *(_QWORD *)(((unint64_t)v24 + v28 + 7) & 0xFFFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v25 + v28 + 7) & 0xFFFFFFFFFFFFF8);
  swift_release();
  return a1;
}

uint64_t sub_2477828F4(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v30;
  unint64_t *v31;
  unint64_t v32;
  unsigned int EnumTagSinglePayload;

  v6 = *(_QWORD *)(a3 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int *)(v7 + 84);
  v9 = sub_2478B6D04();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(unsigned int *)(v10 + 84);
  if ((_DWORD)v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= v8)
    v13 = v8;
  else
    v13 = v12;
  v14 = *(_QWORD *)(a3 + 24);
  v15 = *(_QWORD *)(v14 - 8);
  v16 = *(unsigned int *)(v15 + 84);
  v17 = v16 - 1;
  if (!(_DWORD)v16)
    v17 = 0;
  if (v13 > v17)
    v17 = v13;
  if (v17 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v17;
  v19 = *(_QWORD *)(v10 + 64);
  if (!(_DWORD)v11)
    ++v19;
  if ((_DWORD)v16)
    v20 = 7;
  else
    v20 = 8;
  if (!a2)
    return 0;
  v21 = *(unsigned __int8 *)(v10 + 80);
  v22 = *(_QWORD *)(v7 + 64) + v21;
  v23 = v19 + 7;
  v24 = *(unsigned __int8 *)(v15 + 80);
  v25 = v24 + 8;
  if (v18 < a2)
  {
    if (((((v20 + *(_QWORD *)(v15 + 64) + ((v25 + ((v23 + (v22 & ~v21)) & 0xFFFFFFFFFFFFFFF8)) & ~v24)) & 0xFFFFFFFFFFFFFFF8)
         + 8) & 0xFFFFFFF8) != 0)
      v26 = 2;
    else
      v26 = a2 - v18 + 1;
    if (v26 >= 0x10000)
      v27 = 4;
    else
      v27 = 2;
    if (v26 < 0x100)
      v27 = 1;
    if (v26 >= 2)
      v28 = v27;
    else
      v28 = 0;
    __asm { BR              X6 }
  }
  if ((_DWORD)v8 == v18)
    return __swift_getEnumTagSinglePayload(a1, v8, v6);
  v30 = (v22 + a1) & ~v21;
  if (v12 == v18)
  {
    if (v11 >= 2)
    {
      v14 = v9;
      goto LABEL_45;
    }
    return 0;
  }
  v31 = (unint64_t *)((v23 + v30) & 0xFFFFFFFFFFFFFFF8);
  if ((v17 & 0x80000000) != 0)
  {
    if (v16 >= 2)
    {
      v30 = ((unint64_t)v31 + v25) & ~v24;
      v11 = v16;
LABEL_45:
      EnumTagSinglePayload = __swift_getEnumTagSinglePayload(v30, v11, v14);
      if (EnumTagSinglePayload >= 2)
        return EnumTagSinglePayload - 1;
      else
        return 0;
    }
    return 0;
  }
  v32 = *v31;
  if (v32 >= 0xFFFFFFFF)
    LODWORD(v32) = -1;
  return (v32 + 1);
}

void sub_247782B14(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  size_t v24;
  unsigned int v25;
  int v26;
  unsigned int v27;

  v8 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  v10 = 0;
  v11 = *(_QWORD *)(sub_2478B6D04() - 8);
  v12 = *(_DWORD *)(v11 + 84);
  v13 = v12 - 1;
  if (!v12)
    v13 = 0;
  if (v13 <= v9)
    v14 = v9;
  else
    v14 = v13;
  v15 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v16 = *(_DWORD *)(v15 + 84);
  v17 = v16 - 1;
  if (!v16)
    v17 = 0;
  if (v14 <= v17)
    v14 = v17;
  if (v14 <= 0x7FFFFFFF)
    v18 = 0x7FFFFFFF;
  else
    v18 = v14;
  v19 = *(unsigned __int8 *)(v11 + 80);
  v20 = *(_QWORD *)(v11 + 64);
  if (!v12)
    ++v20;
  v21 = *(unsigned __int8 *)(v15 + 80);
  v22 = *(_QWORD *)(v15 + 64);
  v23 = 7;
  if (!v16)
    v23 = 8;
  v24 = ((v23 + v22 + ((v21 + 8 + ((v20 + 7 + ((*(_QWORD *)(v8 + 64) + v19) & ~v19)) & 0xFFFFFFFFFFFFFFF8)) & ~v21)) & 0xFFFFFFFFFFFFFFF8)
      + 8;
  if (v18 < a3)
  {
    if ((((_DWORD)v23
         + (_DWORD)v22
         + (((_DWORD)v21 + 8 + (((_DWORD)v20 + 7 + ((*(_DWORD *)(v8 + 64) + (_DWORD)v19) & ~(_DWORD)v19)) & 0xFFFFFFF8)) & ~(_DWORD)v21)) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v25 = a3 - v18 + 1;
    else
      v25 = 2;
    if (v25 >= 0x10000)
      v26 = 4;
    else
      v26 = 2;
    if (v25 < 0x100)
      v26 = 1;
    if (v25 >= 2)
      v10 = v26;
    else
      v10 = 0;
  }
  if (a2 > v18)
  {
    if ((_DWORD)v24)
    {
      v27 = ~v18 + a2;
      bzero(a1, v24);
      *a1 = v27;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X4 }
}

uint64_t sub_247782C98@<X0>(uint64_t result@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v19;

  *(_BYTE *)(v13 + v16) = 0;
  if ((_DWORD)v12)
  {
    if ((_DWORD)v15 == v7)
    {
      result = v13;
      v17 = v12;
      a2 = v15;
      a3 = v14;
      return __swift_storeEnumTagSinglePayload(result, v17, a2, a3);
    }
    result &= v9 + v13;
    if (v5 == v7)
    {
      v17 = (v12 + 1);
      a2 = v4;
      a3 = a4;
      return __swift_storeEnumTagSinglePayload(result, v17, a2, a3);
    }
    v18 = (_QWORD *)((v8 + result) & 0xFFFFFFFFFFFFFFF8);
    if (v6 < 0)
    {
      if (a2 >= 2)
      {
        result = ((unint64_t)v18 + v10) & v11;
        v17 = (v12 + 1);
        return __swift_storeEnumTagSinglePayload(result, v17, a2, a3);
      }
    }
    else
    {
      if ((v12 & 0x80000000) != 0)
        v19 = v12 ^ 0x80000000;
      else
        v19 = (v12 - 1);
      *v18 = v19;
    }
  }
  return result;
}

uint64_t dispatch thunk of AVFoundationRendererDataSource.asset(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v11;
  uint64_t (*v13)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v11 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v5 + 16) = v11;
  *v11 = v5;
  v11[1] = sub_2477605BC;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t OUTLINED_FUNCTION_3_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void))
{
  return a4();
}

void static FairPlay.contextID.getter()
{
  void *v0;
  uint64_t v1;
  id v2;
  unint64_t v3;
  char v4;
  int v5;
  uint64_t v6;

  v6 = *MEMORY[0x24BDAC8D0];
  v5 = 0;
  sub_247783258(0xD000000000000027, 0x80000002478D1110, (uint64_t)&v5);
  if (v0)
  {
    v4 = 1;
    sub_247758860();
    v1 = swift_allocObject();
    *(_OWORD *)(v1 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v1 + 32) = v0;
    sub_2477588B4();
    sub_2477538F8();
    swift_allocError();
    v2 = v0;
    v3 = sub_2477538BC();
    MEMORY[0x249582690](&v4, 0xD000000000000023, 0x80000002478D1140, v1, &type metadata for FairPlay.Error, v3);
    swift_willThrow();

  }
}

void sub_247782F38()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  id v6;

  OUTLINED_FUNCTION_0_7();
  if (v2)
    v4 = v3 - v2;
  else
    v4 = 0;
  if ((v4 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(v4))
  {
LABEL_10:
    __break(1u);
    return;
  }
  OflR7BMjGok3A7mYQFt9(*(_QWORD *)(v0 + 24), v2, v4, 0, 0, v1);
  if (v5 != sub_2478B6D34())
  {
    sub_2478B6E48();
    v6 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_3_5();
  }
  swift_release();
  OUTLINED_FUNCTION_2_5();
}

void sub_247782FE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;
  id v7;

  OUTLINED_FUNCTION_0_7();
  if (v3)
    v5 = v4 - v3;
  else
    v5 = 0;
  if ((v5 & 0x8000000000000000) != 0)
  {
    __break(1u);
    goto LABEL_10;
  }
  if (HIDWORD(v5))
  {
LABEL_10:
    __break(1u);
    return;
  }
  TBGzuU3p5n1n(*(_QWORD *)(v0 + 24), v3, v5, v2, v1);
  if (v6 != sub_2478B6D34())
  {
    sub_2478B6E48();
    v7 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    OUTLINED_FUNCTION_1_4();
    OUTLINED_FUNCTION_3_5();
  }
  swift_release();
  OUTLINED_FUNCTION_2_5();
}

SonicKit::FairPlay::Error_optional __swiftcall FairPlay.Error.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  if ((unint64_t)rawValue > 0x10)
    v2 = 11;
  else
    v2 = byte_2478B926E[rawValue];
  *v1 = v2;
  return (SonicKit::FairPlay::Error_optional)rawValue;
}

uint64_t FairPlay.Error.rawValue.getter()
{
  char *v0;

  return qword_2478B9280[*v0];
}

BOOL sub_2477830C0(char *a1, char *a2)
{
  return sub_24778E8BC(*a1, *a2);
}

void sub_2477830CC()
{
  sub_24778EAC8();
}

void sub_2477830D4()
{
  sub_24778ECFC();
}

void sub_2477830DC()
{
  sub_24778EF18();
}

SonicKit::FairPlay::Error_optional sub_2477830E4(Swift::Int *a1)
{
  return FairPlay.Error.init(rawValue:)(*a1);
}

uint64_t sub_2477830EC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = FairPlay.Error.rawValue.getter();
  *a1 = result;
  return result;
}

uint64_t sub_247783110(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  id v19;
  _QWORD v20[2];

  v8 = sub_2478B6E60();
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x24BDAC7A8]();
  v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20[0] = a2;
  v20[1] = a3;
  sub_2478B6E54();
  sub_247783F58();
  v12 = sub_2478B7154();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  if (v12)
    v13 = v12 + 32;
  else
    v13 = 0;
  v14 = XtCqEf5X(0, a1, v13, a4);
  swift_bridgeObjectRelease();
  result = sub_2478B6D34();
  if (v14 != (_DWORD)result)
  {
    v16 = sub_2478B6E48();
    v18 = v17;
    v19 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    sub_247752E68(v16, v18, v14, 0);
    return swift_willThrow();
  }
  return result;
}

uint64_t sub_247783258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  id v22;
  uint64_t v23;
  id v24;
  unint64_t v25;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _QWORD v30[4];

  v28 = a2;
  v30[3] = *MEMORY[0x24BDAC8D0];
  v5 = sub_2478B6CF8();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x24BDAC7A8]();
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v30, 0, 24);
  sub_2478B6CE0();
  v9 = sub_2478B6CEC();
  v11 = v10;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if ((v11 & 0x1000000000000000) != 0)
    goto LABEL_7;
  if ((v11 & 0x2000000000000000) != 0)
  {
LABEL_8:
    v29[0] = v9;
    v29[1] = v11 & 0xFFFFFFFFFFFFFFLL;
    v13 = HIBYTE(v11) & 0xF;
    v12 = v29;
  }
  else
  {
    while (1)
    {
      if ((v9 & 0x1000000000000000) != 0)
      {
        v12 = (_QWORD *)((v11 & 0xFFFFFFFFFFFFFFFLL) + 32);
        v13 = v9 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v12 = (_QWORD *)sub_2478B71D8();
        if ((v13 & 0x8000000000000000) != 0)
          __break(1u);
      }
      if (!HIDWORD(v13))
        break;
      __break(1u);
LABEL_7:
      v9 = sub_247783978();
      v15 = v14;
      swift_bridgeObjectRelease();
      v11 = v15;
      if ((v15 & 0x2000000000000000) != 0)
        goto LABEL_8;
    }
  }
  zxcm2Qme0x((uint64_t)v12, v13, (uint64_t)v30);
  v17 = v16;
  if (v16 == sub_2478B6D34())
  {
    sub_247783110((uint64_t)v30, a1, v28, a3);
  }
  else
  {
    v18 = sub_2478B6E48();
    v20 = v19;
    v21 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v22 = sub_247752E68(v18, v20, v17, 0);
    swift_willThrow();
    LOBYTE(v29[0]) = 2;
    sub_247758860();
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v23 + 32) = v22;
    sub_2477588B4();
    sub_2477538F8();
    swift_allocError();
    v24 = v22;
    v25 = sub_2477538BC();
    MEMORY[0x249582690](v29, 0, 0xE000000000000000, v23, &type metadata for FairPlay.Error, v25);
    swift_willThrow();

  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2477834F0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  _QWORD *v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  id v22;
  id v23;
  uint64_t v24;
  id v25;
  unint64_t v26;
  _QWORD v27[2];
  _QWORD v28[4];

  v28[3] = *MEMORY[0x24BDAC8D0];
  v2 = sub_2478B6CF8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x24BDAC7A8](v2);
  v5 = (char *)v27 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  memset(v28, 0, 24);
  sub_2478B6CE0();
  v6 = sub_2478B6CEC();
  v8 = v7;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  if ((v8 & 0x1000000000000000) != 0)
    goto LABEL_7;
  if ((v8 & 0x2000000000000000) != 0)
  {
LABEL_8:
    v27[0] = v6;
    v27[1] = v8 & 0xFFFFFFFFFFFFFFLL;
    v10 = HIBYTE(v8) & 0xF;
    v9 = v27;
  }
  else
  {
    while (1)
    {
      if ((v6 & 0x1000000000000000) != 0)
      {
        v9 = (_QWORD *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
        v10 = v6 & 0xFFFFFFFFFFFFLL;
      }
      else
      {
        v9 = (_QWORD *)sub_2478B71D8();
        if ((v10 & 0x8000000000000000) != 0)
          __break(1u);
      }
      if (!HIDWORD(v10))
        break;
      __break(1u);
LABEL_7:
      v6 = sub_247783978();
      v12 = v11;
      swift_bridgeObjectRelease();
      v8 = v12;
      if ((v12 & 0x2000000000000000) != 0)
        goto LABEL_8;
    }
  }
  zxcm2Qme0x((uint64_t)v9, v10, (uint64_t)v28);
  v14 = v13;
  if (v13 == sub_2478B6D34())
  {
    v15 = MEMORY[0x2495825D0]((char *)v28 + 4, LODWORD(v28[0]));
    v17 = v16;
    result = swift_bridgeObjectRelease();
    *a1 = v15;
    a1[1] = v17;
  }
  else
  {
    v19 = sub_2478B6E48();
    v21 = v20;
    v22 = objc_allocWithZone(MEMORY[0x24BDD1540]);
    v23 = sub_247752E68(v19, v21, v14, 0);
    swift_willThrow();
    LOBYTE(v27[0]) = 2;
    sub_247758860();
    v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_2478B7970;
    *(_QWORD *)(v24 + 32) = v23;
    sub_2477588B4();
    sub_2477538F8();
    swift_allocError();
    v25 = v23;
    v26 = sub_2477538BC();
    MEMORY[0x249582690](v27, 0, 0xE000000000000000, v24, &type metadata for FairPlay.Error, v26);
    swift_willThrow();

    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t static FairPlay.hardwareInfo.getter()
{
  uint64_t v0;
  uint64_t result;
  uint64_t v2;

  result = sub_2477834F0(&v2);
  if (!v0)
    return v2;
  return result;
}

unint64_t sub_247783798()
{
  unint64_t result;

  result = qword_2576C26A0;
  if (!qword_2576C26A0)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FairPlay.Error, &type metadata for FairPlay.Error);
    atomic_store(result, (unint64_t *)&qword_2576C26A0);
  }
  return result;
}

unint64_t sub_2477837D8()
{
  unint64_t result;

  result = qword_25444CC20;
  if (!qword_25444CC20)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for FairPlay.Error, &type metadata for FairPlay.Error);
    atomic_store(result, (unint64_t *)&qword_25444CC20);
  }
  return result;
}

ValueMetadata *type metadata accessor for FairPlay()
{
  return &type metadata for FairPlay;
}

uint64_t getEnumTagSinglePayload for FairPlay.Error(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xF6)
  {
    if (a2 + 10 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 10) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 11;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0xB;
  v5 = v6 - 11;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for FairPlay.Error(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 10 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 10) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF6)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF5)
    return ((uint64_t (*)(void))((char *)&loc_2477838F8 + 4 * byte_2478B9145[v4]))();
  *a1 = a2 + 10;
  return ((uint64_t (*)(void))((char *)sub_24778392C + 4 * asc_2478B9140[v4]))();
}

uint64_t sub_24778392C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247783934(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24778393CLL);
  return result;
}

uint64_t sub_247783948(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247783950);
  *(_BYTE *)result = a2 + 10;
  return result;
}

uint64_t sub_247783954(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24778395C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for FairPlay.Error()
{
  return &type metadata for FairPlay.Error;
}

uint64_t sub_247783978()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  uint64_t v4;

  v0 = sub_2477839D4();
  v4 = sub_247783A08(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_2477839D4()
{
  return sub_2478B6EF0();
}

uint64_t sub_247783A08(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  _QWORD v14[3];

  if ((a4 & 0x1000000000000000) != 0)
  {
    v9 = sub_247783B4C(a1, a2, a3, a4);
    if (v9)
    {
      v10 = v9;
      v11 = sub_247783C38(v9, 0);
      v12 = sub_247783C98((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4);
      sub_2478B6DA0();
      swift_bridgeObjectRelease();
      if (v12 != v10)
      {
        __break(1u);
        goto LABEL_9;
      }
    }
    else
    {
      v11 = (_QWORD *)MEMORY[0x24BEE4AF8];
    }
    v13 = MEMORY[0x249582864](v11 + 4, v11[2]);
    swift_release();
    return v13;
  }
  else
  {
    if ((a4 & 0x2000000000000000) == 0)
    {
      if ((a3 & 0x1000000000000000) != 0)
LABEL_12:
        JUMPOUT(0x249582864);
LABEL_9:
      sub_2478B71D8();
      goto LABEL_12;
    }
    v14[0] = a3;
    v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
    return MEMORY[0x249582864]((char *)v14 + (a1 >> 16), (a2 >> 16) - (a1 >> 16));
  }
}

unint64_t sub_247783B4C(unint64_t result, unint64_t a2, unint64_t a3, unint64_t a4)
{
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;

  v7 = result;
  v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0)
    LOBYTE(v8) = 1;
  v9 = 4 << v8;
  if ((result & 0xC) == 4 << v8)
  {
    result = sub_247783E98(result, a3, a4);
    v7 = result;
  }
  if ((a2 & 0xC) == v9)
  {
    result = sub_247783E98(a2, a3, a4);
    a2 = result;
    if ((a4 & 0x1000000000000000) == 0)
      return (a2 >> 16) - (v7 >> 16);
  }
  else if ((a4 & 0x1000000000000000) == 0)
  {
    return (a2 >> 16) - (v7 >> 16);
  }
  v10 = HIBYTE(a4) & 0xF;
  if ((a4 & 0x2000000000000000) == 0)
    v10 = a3 & 0xFFFFFFFFFFFFLL;
  if (v10 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v10 >= a2 >> 16)
  {
    return sub_2478B6ECC();
  }
  __break(1u);
  return result;
}

_QWORD *sub_247783C38(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;
  size_t v5;

  if (a2 <= a1)
    v2 = a1;
  else
    v2 = a2;
  if (!v2)
    return (_QWORD *)MEMORY[0x24BEE4AF8];
  sub_247783F10();
  v4 = (_QWORD *)swift_allocObject();
  v5 = _swift_stdlib_malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

unint64_t sub_247783C98(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  _QWORD *v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v18;
  char v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v26;
  unint64_t v27;
  _QWORD v28[2];

  v9 = (_QWORD *)result;
  if (!a2)
    goto LABEL_5;
  if (!a3)
  {
    v12 = a4;
    v11 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
    goto LABEL_38;
  v10 = a5 >> 14;
  v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    v11 = 0;
    v12 = a4;
LABEL_35:
    *v9 = a4;
    v9[1] = a5;
    v9[2] = a6;
    v9[3] = a7;
    v9[4] = v12;
    return v11;
  }
  v11 = 0;
  v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0)
    LOBYTE(v14) = 1;
  v15 = 4 << v14;
  v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0)
    v16 = a6 & 0xFFFFFFFFFFFFLL;
  v23 = v16;
  v26 = a3 - 1;
  v12 = a4;
  while (1)
  {
    result = v12;
    if ((v12 & 0xC) == v15)
      result = sub_247783E98(v12, a6, a7);
    if (result >> 14 < v27 || result >> 14 >= v10)
      break;
    if ((a7 & 0x1000000000000000) != 0)
    {
      result = sub_2478B6ED8();
      v19 = result;
    }
    else
    {
      v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        v19 = *((_BYTE *)v28 + v18);
      }
      else
      {
        result = v21;
        if ((a6 & 0x1000000000000000) == 0)
          result = sub_2478B71D8();
        v19 = *(_BYTE *)(result + v18);
      }
    }
    if ((v12 & 0xC) == v15)
    {
      result = sub_247783E98(v12, a6, a7);
      v12 = result;
      if ((a7 & 0x1000000000000000) == 0)
      {
LABEL_27:
        v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
        goto LABEL_31;
      }
    }
    else if ((a7 & 0x1000000000000000) == 0)
    {
      goto LABEL_27;
    }
    if (v23 <= v12 >> 16)
      goto LABEL_37;
    v12 = sub_2478B6EB4();
LABEL_31:
    *(_BYTE *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      v11 = a3;
      goto LABEL_35;
    }
    ++v11;
    if (v10 == v12 >> 14)
      goto LABEL_35;
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_247783E98(unint64_t a1, uint64_t a2, uint64_t a3)
{
  char v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v3 = a1;
  v4 = (unsigned __int16)a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    v10 = sub_2478B6EE4();
    v11 = v10 + (v4 << 16);
    v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v13 = v12;
    return v13 | 4;
  }
  else
  {
    v5 = MEMORY[0x249582894](15, a1 >> 16);
    v6 = v5 + (v4 << 16);
    v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4)
      v8 = v7;
    return v8 | 8;
  }
}

void sub_247783F10()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C26A8)
  {
    v0 = sub_2478B7334();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C26A8);
  }
}

unint64_t sub_247783F58()
{
  unint64_t result;

  result = qword_25444CC48;
  if (!qword_25444CC48)
  {
    result = MEMORY[0x24958320C](MEMORY[0x24BEE0D50], MEMORY[0x24BEE0D00]);
    atomic_store(result, (unint64_t *)&qword_25444CC48);
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_7()
{
  return swift_beginAccess();
}

id OUTLINED_FUNCTION_1_4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return sub_247752E68(v0, v2, v1, 0);
}

uint64_t OUTLINED_FUNCTION_3_5()
{
  return swift_willThrow();
}

uint64_t sub_247784004(void (*a1)(char *, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v10;
  uint64_t AssociatedTypeWitness;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t result;
  char *v25;
  char *v26;
  void (*v27)(char *, _QWORD);
  uint64_t v28;
  uint64_t v29;
  void (*v30)(uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48[40];
  uint64_t v49;

  v36 = a5;
  v37 = a8;
  v43 = a1;
  v44 = a2;
  v35 = *(_QWORD *)(a5 - 8);
  MEMORY[0x24BDAC7A8](a1);
  OUTLINED_FUNCTION_52_1();
  v45 = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v12 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v13 = MEMORY[0x24BDAC7A8](AssociatedTypeWitness);
  v40 = (char *)&v31 - v14;
  MEMORY[0x24BDAC7A8](v13);
  OUTLINED_FUNCTION_52_1();
  v39 = v15;
  v16 = swift_getAssociatedTypeWitness();
  v38 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x24BDAC7A8](v16);
  v34 = (char *)&v31 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v17);
  v20 = (char *)&v31 - v19;
  v41 = v8;
  v21 = a6;
  v22 = sub_2478B7100();
  if (!v22)
    return sub_2478B6F8C();
  v23 = v22;
  v32 = v16;
  v49 = sub_2478B7214();
  v42 = sub_2478B7220();
  sub_2478B71F0();
  v33 = v20;
  result = sub_2478B70F4();
  if (v23 < 0)
  {
    __break(1u);
  }
  else
  {
    v46 = v21;
    v25 = v40;
    v26 = v33;
    while (1)
    {
      v27 = (void (*)(char *, _QWORD))sub_2478B7130();
      (*(void (**)(char *))(v12 + 16))(v25);
      v27(v48, 0);
      v28 = v47;
      v43(v25, v45);
      if (v28)
        break;
      v47 = 0;
      OUTLINED_FUNCTION_38_0();
      sub_2478B7208();
      sub_2478B710C();
      if (!--v23)
      {
        (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v34, v26, v32);
        sub_2478B7178();
        v29 = OUTLINED_FUNCTION_10();
        v30(v29);
        return v49;
      }
    }
    OUTLINED_FUNCTION_38_0();
    (*(void (**)(char *, uint64_t))(v38 + 8))(v26, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 32))(v37, v45, v36);
  }
  return result;
}

uint64_t ContentRegistration.rawIdentifiers.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t EnumCaseMultiPayload;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD v21[2];

  v6 = *(_QWORD *)(a1 + 16);
  v7 = *(_QWORD *)(a1 + 24);
  v8 = type metadata accessor for ContentRegistration.SourceInfo(0, v6, v7, a4);
  MEMORY[0x24BDAC7A8](v8);
  v10 = (_QWORD *)((char *)v21 - v9);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)v21 - v9, v4 + *(int *)(a1 + 36), v8);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if ((_DWORD)EnumCaseMultiPayload)
  {
    if ((_DWORD)EnumCaseMultiPayload == 1)
    {
      OUTLINED_FUNCTION_6_4();
      v13 = OUTLINED_FUNCTION_133_0();
      v14 = OUTLINED_FUNCTION_6_4();
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v14 - 8) + 8))(v10, v14);
    }
    else
    {
      v19 = OUTLINED_FUNCTION_6_4();
      sub_24777D9BC();
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_6_4();
      v13 = OUTLINED_FUNCTION_133_0();
      (*(void (**)(_QWORD *, uint64_t))(*(_QWORD *)(v19 - 8) + 8))(v10, v19);
    }
  }
  else
  {
    v21[1] = *v10;
    MEMORY[0x24BDAC7A8](EnumCaseMultiPayload);
    v21[-2] = v6;
    v21[-1] = v7;
    OUTLINED_FUNCTION_6_4();
    v15 = sub_2478B6FEC();
    v16 = OUTLINED_FUNCTION_6_4();
    v17 = MEMORY[0x24958320C](MEMORY[0x24BEE12E0], v15);
    v13 = sub_247784004((void (*)(char *, uint64_t))sub_247786A84, (uint64_t)&v21[-4], v15, v16, MEMORY[0x24BEE4078], v17, MEMORY[0x24BEE40A8], v18);
    swift_bridgeObjectRelease();
  }
  return v13;
}

uint64_t type metadata accessor for ContentRegistration.SourceInfo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentRegistration.SourceInfo);
}

uint64_t ContentRegistration.init(id:sourceInfo:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 32))(a5, a1, AssociatedTypeWitness);
  v12 = a5 + *(int *)(type metadata accessor for ContentRegistration(0, a3, a4, v11) + 36);
  v14 = type metadata accessor for ContentRegistration.SourceInfo(0, a3, a4, v13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 32))(v12, a2, v14);
}

uint64_t ContentManagerBehavior.withPlan<A>(buildPlan:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t v9;
  uint64_t v10;

  v7[7] = a6;
  v7[8] = v6;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  v7[2] = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[9] = AssociatedTypeWitness;
  v7[10] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[11] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_43();
  v7[12] = OUTLINED_FUNCTION_5_0();
  sub_247754E48();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v7[13] = v9;
  v7[14] = v10;
  return OUTLINED_FUNCTION_2_0();
}

{
  uint64_t v6;
  _QWORD *v7;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v7[6] = a6;
  v7[7] = v6;
  v7[4] = a3;
  v7[5] = a4;
  v7[2] = a1;
  v7[3] = a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v7[8] = AssociatedTypeWitness;
  v7[9] = *(_QWORD *)(AssociatedTypeWitness - 8);
  v7[10] = OUTLINED_FUNCTION_13_0();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v7[11] = AssociatedConformanceWitness;
  v11 = type metadata accessor for ContentManagementPlan.Link(0, AssociatedTypeWitness, a5, AssociatedConformanceWitness);
  v7[12] = v11;
  v7[13] = *(_QWORD *)(v11 - 8);
  v7[14] = OUTLINED_FUNCTION_13_0();
  OUTLINED_FUNCTION_43();
  v7[15] = OUTLINED_FUNCTION_5_0();
  sub_247754E48();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v7[16] = v12;
  v7[17] = v13;
  return OUTLINED_FUNCTION_150_0();
}

uint64_t sub_24778465C()
{
  uint64_t *v0;
  _QWORD *v1;
  uint64_t AssociatedConformanceWitness;

  (*(void (**)(uint64_t, uint64_t))(v0[7] + 40))(v0[5], v0[7]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[15] = (uint64_t)v1;
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *v1 = v0;
  v1[1] = sub_247784704;
  return static ContentManagementPlan.withPlan<A>(in:buildPlan:)(v0[2], v0[11], v0[3], v0[4], v0[9], v0[6], AssociatedConformanceWitness);
}

uint64_t sub_247784704()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_44_1();
  v2 = *(_QWORD *)(v1 + 80);
  OUTLINED_FUNCTION_97(v3);
  *(_QWORD *)(v1 + 128) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_150_0();
}

uint64_t sub_247784768()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_50();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v0);
}

uint64_t sub_247784794()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477848A8()
{
  uint64_t *v0;
  _QWORD *v1;

  (*(void (**)(uint64_t))(v0[6] + 40))(v0[5]);
  v1 = (_QWORD *)swift_task_alloc();
  v0[18] = (uint64_t)v1;
  *v1 = v0;
  v1[1] = sub_24778491C;
  return static ContentManagementPlan.withPlan<A>(in:buildPlan:)(v0[14], v0[10], v0[3], v0[4], v0[8], v0[12], v0[11]);
}

uint64_t sub_24778491C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;
  _QWORD *v6;

  OUTLINED_FUNCTION_44_1();
  v3 = *(_QWORD *)(v2 + 72);
  OUTLINED_FUNCTION_97(v4);
  *(_QWORD *)(v2 + 152) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8));
  if (v0)
    return OUTLINED_FUNCTION_150_0();
  v6 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 160) = v6;
  *v6 = v1;
  v6[1] = sub_2477849BC;
  return sub_247773A28(*(_QWORD *)(v2 + 16), *(uint64_t **)(v2 + 96));
}

uint64_t sub_2477849BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  OUTLINED_FUNCTION_44_1();
  v2 = *(_QWORD *)(v1 + 104);
  OUTLINED_FUNCTION_97(v3);
  *(_QWORD *)(v1 + 168) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_24_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  return OUTLINED_FUNCTION_150_0();
}

uint64_t sub_247784A20()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v0);
}

uint64_t sub_247784A58()
{
  uint64_t v0;

  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_247784A8C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_55_0();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ContentManagerBehavior.firstContentID(matching:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = v6;
  OUTLINED_FUNCTION_12_0(a1, a2, a3, a4, a5);
  v8 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_32_2(v8);
  v9 = OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_42(v9, v10);
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247784B00()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (__n128 *)OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_33_2(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(v0 + 104) = swift_task_alloc();
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_39_1();
  OUTLINED_FUNCTION_56_1();
  v11 = OUTLINED_FUNCTION_48_1((uint64_t)sub_247784C18);
  return OUTLINED_FUNCTION_13_2(v11, (uint64_t)sub_247786AAC, v1, v12, v13, v14);
}

uint64_t sub_247784C18()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_3();
  if (!v0)
    OUTLINED_FUNCTION_59_1();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247784C5C()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_37_1();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v0);
}

uint64_t sub_247784C80()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_1();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_247784CB0()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ContentManagementPlan(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  ContentManagementPlan.find(firstMatching:in:)();
}

uint64_t ContentManagerBehavior.import(identifiers:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  OUTLINED_FUNCTION_43();
  v6[8] = OUTLINED_FUNCTION_5_0();
  sub_247754E48();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v6[9] = v7;
  v6[10] = v8;
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247784DC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v11;

  v1 = *(_QWORD *)(v0 + 32);
  v11 = *(_OWORD *)(v0 + 16);
  v2 = swift_task_alloc();
  *(_QWORD *)(v0 + 88) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v2 + 32) = v11;
  *(_QWORD *)(v2 + 48) = v1;
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v3;
  *v3 = v0;
  v3[1] = sub_247784E5C;
  OUTLINED_FUNCTION_50_1();
  return ContentManagerBehavior.withPlan<A>(buildPlan:)(v4, v5, v6, v7, v8, v9);
}

uint64_t sub_247784E5C()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_97(&v4);
  *(_QWORD *)(v2 + 104) = v0;
  swift_task_dealloc();
  if (!v0)
    swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247784EBC()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v0);
}

uint64_t sub_247784EE4()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_247784F18()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ContentManagementPlan(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  ContentManagementPlan.import(identifiers:in:)();
  sub_247788C14(v3, v4, v5);
}

uint64_t ContentManagerBehavior.import(identifier:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = v6;
  OUTLINED_FUNCTION_12_0(a1, a2, a3, a4, a5);
  v8 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_32_2(v8);
  v9 = OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_42(v9, v10);
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247785020()
{
  uint64_t v0;
  uint64_t v1;
  __n128 *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __n128 v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v2 = (__n128 *)OUTLINED_FUNCTION_30_1();
  OUTLINED_FUNCTION_33_2(v2, v3, v4, v5, v6, v7, v8, v9, v10);
  *(_QWORD *)(v0 + 104) = swift_task_alloc();
  OUTLINED_FUNCTION_29_1();
  OUTLINED_FUNCTION_27_1();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_11_2();
  OUTLINED_FUNCTION_8_3();
  OUTLINED_FUNCTION_39_1();
  OUTLINED_FUNCTION_56_1();
  v11 = OUTLINED_FUNCTION_48_1((uint64_t)sub_247785138);
  return OUTLINED_FUNCTION_13_2(v11, (uint64_t)sub_247786ACC, v1, v12, v13, v14);
}

uint64_t sub_247785138()
{
  uint64_t v0;

  OUTLINED_FUNCTION_7_3();
  if (!v0)
    OUTLINED_FUNCTION_59_1();
  return OUTLINED_FUNCTION_2_0();
}

void sub_24778517C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v18;
  uint64_t v19;
  char v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  v10 = swift_getAssociatedTypeWitness();
  sub_247761760(v10, v10);
  v11 = *(_QWORD *)(v10 - 8);
  swift_allocObject();
  sub_2478B6F5C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v12, a2, v10);
  sub_24775891C();
  v14 = type metadata accessor for ContentManagementPlan(0, AssociatedTypeWitness, AssociatedConformanceWitness, v13);
  ContentManagementPlan.import(identifiers:in:)();
  swift_bridgeObjectRelease();
  v15 = swift_allocObject();
  *(_QWORD *)(v15 + 16) = a5;
  *(_QWORD *)(v15 + 24) = a6;
  *(_QWORD *)(v15 + 32) = v18;
  *(_QWORD *)(v15 + 40) = v19;
  *(_BYTE *)(v15 + 48) = v20;
  sub_247779158(v18, v19, v20);
  swift_getAssociatedTypeWitness();
  v16 = sub_2478B7148();
  ContentManagementPlan.after<A>(operation:)((uint64_t)&unk_2576C2830, v15, v14, v16);
  swift_release();
  sub_247788C14(v18, v19, v20);
}

uint64_t sub_247785440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v5;
  uint64_t v9;
  _QWORD *v10;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v13;
  uint64_t *v14;

  *(_QWORD *)(v5 + 56) = a1;
  *(_QWORD *)(v5 + 64) = sub_2478B6C5C();
  v9 = sub_2478B6C50();
  *(_QWORD *)(v5 + 16) = a3;
  *(_QWORD *)(v5 + 72) = v9;
  *(_QWORD *)(v5 + 24) = a4;
  *(_BYTE *)(v5 + 32) = a5 & 1;
  v10 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v5 + 80) = v10;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  v13 = sub_2478B6FEC();
  *(_QWORD *)(v5 + 88) = v13;
  v14 = (uint64_t *)type metadata accessor for ContentManagementPlan.Link(0, AssociatedTypeWitness, v13, AssociatedConformanceWitness);
  *v10 = v5;
  v10[1] = sub_247785658;
  return sub_247773A28(v5 + 40, v14);
}

uint64_t sub_247785658()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v4 = *v1;
  v2 = v4;
  OUTLINED_FUNCTION_97(&v4);
  *(_QWORD *)(v2 + 96) = v0;
  swift_task_dealloc();
  sub_247754E48();
  OUTLINED_FUNCTION_6_0();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_2477856D8()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t (*v2)(void);

  v1 = v0[11];
  swift_release();
  v0[6] = v0[5];
  MEMORY[0x24958320C](MEMORY[0x24BEE12E0], v1);
  sub_2478B7118();
  swift_bridgeObjectRelease();
  v2 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_5_1(v2);
}

uint64_t sub_247785748()
{
  uint64_t v0;

  OUTLINED_FUNCTION_37_1();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ContentManagerBehavior.import(identifiers:in:environment:preparing:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;

  v9[9] = a8;
  v9[10] = v8;
  v9[7] = a6;
  v9[8] = a7;
  OUTLINED_FUNCTION_12_0(a1, a2, a3, a4, a5);
  v10 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_51_1(v10);
  v9[12] = OUTLINED_FUNCTION_6_0();
  v9[13] = v11;
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_2477857BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v1 = *(_QWORD *)(v0 + 56);
  v2 = *(_QWORD *)(v0 + 32);
  v3 = OUTLINED_FUNCTION_53_1();
  *(_QWORD *)(v0 + 112) = v3;
  v4 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 64);
  *(_OWORD *)(v3 + 32) = v13;
  *(_QWORD *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 56) = v4;
  *(_QWORD *)(v3 + 72) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v5;
  *v5 = v0;
  v5[1] = sub_24778584C;
  OUTLINED_FUNCTION_50_1();
  return OUTLINED_FUNCTION_25_2(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_24778584C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_1();
  if (!v0)
    swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

void sub_247785894()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;
  void *v3;
  char v4;
  char v5;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ContentManagementPlan(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  ContentManagementPlan.import(identifiers:in:)();
  ContentManagementPlan.prepare(content:in:facets:)();
  sub_247788C14(v3, v4, v5);
}

uint64_t ContentManagerBehavior.prepare(content:in:facets:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v7 + 56) = a6;
  *(_QWORD *)(v7 + 64) = v6;
  OUTLINED_FUNCTION_12_0(a1, a2, a3, a4, a5);
  v8 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_32_2(v8);
  v9 = OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_42(v9, v10);
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_2477859DC()
{
  uint64_t v0;
  _OWORD *v1;
  __int128 v2;
  __int128 v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = (_OWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 96) = v1;
  v2 = *(_OWORD *)(v0 + 32);
  v3 = *(_OWORD *)(v0 + 16);
  v1[1] = *(_OWORD *)(v0 + 48);
  v1[2] = v3;
  v1[3] = v2;
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 104) = v4;
  *v4 = v0;
  v4[1] = sub_247784C18;
  OUTLINED_FUNCTION_50_1();
  return ContentManagerBehavior.withPlan<A>(buildPlan:)(v5, v6, v7, v8, v9, v10);
}

uint64_t sub_247785A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v11;
  uint64_t v12;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v12 = type metadata accessor for ContentManagementPlan(0, AssociatedTypeWitness, AssociatedConformanceWitness, v11);
  return ContentManagementPlan.prepare(content:in:facets:)(a2, a3, a4, a5, v12);
}

uint64_t ContentManagerBehavior.relateContent(_:to:as:)(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v6 + 32) = a4;
  *(_QWORD *)(v6 + 40) = a5;
  *(_QWORD *)(v6 + 16) = a1;
  *(_QWORD *)(v6 + 24) = a2;
  v7 = *a3;
  v8 = a3[1];
  *(_QWORD *)(v6 + 48) = v5;
  *(_QWORD *)(v6 + 56) = v7;
  *(_QWORD *)(v6 + 64) = v8;
  *(_OWORD *)(v6 + 72) = *((_OWORD *)a3 + 1);
  OUTLINED_FUNCTION_43();
  v9 = OUTLINED_FUNCTION_5_0();
  OUTLINED_FUNCTION_51_1(v9);
  *(_QWORD *)(v6 + 96) = OUTLINED_FUNCTION_6_0();
  *(_QWORD *)(v6 + 104) = v10;
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247785B80()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  __int128 v13;

  v2 = *(_QWORD *)(v0 + 72);
  v1 = *(_QWORD *)(v0 + 80);
  v3 = OUTLINED_FUNCTION_53_1();
  *(_QWORD *)(v0 + 112) = v3;
  v4 = *(_OWORD *)(v0 + 16);
  *(_OWORD *)(v3 + 16) = *(_OWORD *)(v0 + 32);
  *(_OWORD *)(v3 + 32) = v4;
  *(_OWORD *)(v3 + 48) = v13;
  *(_QWORD *)(v3 + 64) = v2;
  *(_QWORD *)(v3 + 72) = v1;
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 120) = v5;
  *v5 = v0;
  v5[1] = sub_247785C04;
  OUTLINED_FUNCTION_50_1();
  return OUTLINED_FUNCTION_25_2(v6, v7, v8, v9, v10, v11);
}

uint64_t sub_247785C04()
{
  uint64_t v0;

  OUTLINED_FUNCTION_19_1();
  if (!v0)
    swift_task_dealloc();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_247785C4C()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v0);
}

uint64_t sub_247785C74()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_50();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

void sub_247785CA8()
{
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v2;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ContentManagementPlan(0, AssociatedTypeWitness, AssociatedConformanceWitness, v2);
  ContentManagementPlan.relate(content:to:as:)();
}

uint64_t ContentManagerBehavior.facets(for:in:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  _QWORD *v6;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v6[6] = a5;
  v6[7] = v5;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  OUTLINED_FUNCTION_137_0();
  v6[8] = OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_137_0();
  v6[9] = OUTLINED_FUNCTION_191_0();
  OUTLINED_FUNCTION_137_0();
  OUTLINED_FUNCTION_191_0();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v9 = swift_getAssociatedTypeWitness();
  v6[10] = v9;
  v6[11] = *(_QWORD *)(v9 - 8);
  v6[12] = OUTLINED_FUNCTION_13_0();
  v10 = swift_checkMetadataState();
  v6[13] = v10;
  v6[14] = *(_QWORD *)(v10 - 8);
  v6[15] = OUTLINED_FUNCTION_13_0();
  v11 = swift_checkMetadataState();
  v6[16] = v11;
  v6[17] = *(_QWORD *)(v11 - 8);
  v6[18] = OUTLINED_FUNCTION_34_2();
  v6[19] = swift_task_alloc();
  v13 = type metadata accessor for ContentRegistration(0, AssociatedTypeWitness, AssociatedConformanceWitness, v12);
  v6[20] = v13;
  v6[21] = *(_QWORD *)(v13 - 8);
  v6[22] = OUTLINED_FUNCTION_34_2();
  v6[23] = swift_task_alloc();
  OUTLINED_FUNCTION_43();
  v6[24] = OUTLINED_FUNCTION_5_0();
  sub_247754E48();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_167();
  v6[25] = v14;
  v6[26] = v15;
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247785F8C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void (*v7)(uint64_t, uint64_t);
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v11;
  uint64_t (*v12)(_QWORD, void *, _QWORD *, _QWORD, _QWORD, _QWORD);

  v1 = v0[16];
  v2 = v0[17];
  v3 = v0[8];
  v11 = v0[9];
  v4 = v0[6];
  v5 = v0[5];
  v6 = v0[3];
  v7 = *(void (**)(uint64_t, uint64_t))(v4 + 40);
  v0[27] = v7;
  v7(v5, v4);
  (*(void (**)(uint64_t, uint64_t))(v3 + 56))(v1, v3);
  OUTLINED_FUNCTION_24_2(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8));
  v8 = (_QWORD *)swift_task_alloc();
  v0[28] = v8;
  v8[2] = v5;
  v8[3] = v4;
  v8[4] = v6;
  v12 = (uint64_t (*)(_QWORD, void *, _QWORD *, _QWORD, _QWORD, _QWORD))(**(int **)(v11 + 32)
                                                                                 + *(_QWORD *)(v11 + 32));
  v9 = (_QWORD *)swift_task_alloc();
  v0[29] = v9;
  *v9 = v0;
  v9[1] = sub_247786098;
  return v12(v0[23], &unk_2576C2700, v8, v0[20], v0[13], v0[9]);
}

uint64_t sub_247786098()
{
  uint64_t v0;
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v7;

  v2 = (_QWORD *)*v1;
  v7 = v2;
  v4 = v2[14];
  v3 = v2[15];
  v5 = v2[13];
  OUTLINED_FUNCTION_97(&v7);
  v2[30] = v0;
  swift_task_dealloc();
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v3, v5);
  OUTLINED_FUNCTION_14_1();
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_24778611C()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t (*v10)(void);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(uint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;

  v1 = v0[23];
  v2 = v0[21];
  v3 = v0[22];
  v4 = v0[20];
  v5 = v0[18];
  v17 = v0[16];
  v7 = v0[11];
  v6 = v0[12];
  v8 = v0[10];
  v15 = (void (*)(uint64_t, uint64_t))v0[27];
  v16 = v0[8];
  v13 = v0[6];
  v9 = v0[4];
  v12 = v0[5];
  v14 = v0[2];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v3, v1, v4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(v6, v9, v8);
  v15(v12, v13);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v4);
  FacetCollection.init(contentRegistration:environment:system:plan:)(v3, v6, v5, 0, v17, v16, v14);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  OUTLINED_FUNCTION_14_1();
  v10 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return v10();
}

uint64_t sub_24778624C()
{
  uint64_t v0;

  swift_release();
  OUTLINED_FUNCTION_50();
  OUTLINED_FUNCTION_14_1();
  OUTLINED_FUNCTION_39();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  return OUTLINED_FUNCTION_5_1(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_2477862C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  _QWORD *v10;
  _QWORD *v13;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v10[2] = sub_2478B6C5C();
  v10[3] = sub_2478B6C50();
  v13 = (_QWORD *)swift_task_alloc();
  v10[4] = v13;
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  swift_getAssociatedTypeWitness();
  swift_getAssociatedConformanceWitness();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  *v13 = v10;
  v13[1] = sub_247786430;
  return ContentRegistrationStorageOperations.registration(for:)(a1, a3, AssociatedTypeWitness, AssociatedConformanceWitness, v16, v17, v18, v19, a9, a10);
}

uint64_t sub_247786430()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 40) = v0;
  swift_task_dealloc();
  sub_247754E48();
  sub_2478B7010();
  return swift_task_switch();
}

uint64_t sub_2477864B8()
{
  uint64_t (*v0)(void);

  swift_release();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_26_0();
  return OUTLINED_FUNCTION_3_2(v0);
}

uint64_t sub_2477864E0()
{
  uint64_t v0;

  swift_release();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t ContentRegistration.id.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  OUTLINED_FUNCTION_47_1();
  v0 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_3_4(v0, v1, v2, v3);
}

uint64_t ContentRegistration.id.setter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(void);

  swift_getAssociatedTypeWitness();
  v0 = OUTLINED_FUNCTION_41_0();
  return OUTLINED_FUNCTION_3_4(v0, v1, v2, v3);
}

uint64_t (*ContentRegistration.id.modify())()
{
  return nullsub_1;
}

uint64_t ContentRegistration.SourceInfo.caseDescription.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char *v3;
  int EnumCaseMultiPayload;
  uint64_t v5;
  uint64_t AssociatedTypeWitness;
  uint64_t v8;

  v1 = *(_QWORD *)(a1 - 8);
  MEMORY[0x24BDAC7A8](a1);
  v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v1 + 16))(v3);
  OUTLINED_FUNCTION_10();
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v5 = OUTLINED_FUNCTION_47_1();
      (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v3, v5);
      return 0x6F686563616C702ELL;
    }
    else
    {
      AssociatedTypeWitness = swift_getAssociatedTypeWitness();
      sub_24777D9BC();
      swift_getTupleTypeMetadata2();
      swift_bridgeObjectRelease();
      OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 8));
      return 0x636572696465722ELL;
    }
  }
  else
  {
    OUTLINED_FUNCTION_49_1(*(uint64_t (**)(uint64_t, uint64_t))(v1 + 8));
    return 0x6566696C6175712ELL;
  }
}

uint64_t ContentRegistration.sourceInfo.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  type metadata accessor for ContentRegistration.SourceInfo(0, *(_QWORD *)(a1 + 16), *(_QWORD *)(a1 + 24), a4);
  v4 = OUTLINED_FUNCTION_10();
  return OUTLINED_FUNCTION_3_4(v4, v5, v6, v7);
}

uint64_t ContentRegistration.sourceInfo.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  type metadata accessor for ContentRegistration.SourceInfo(0, *(_QWORD *)(a2 + 16), *(_QWORD *)(a2 + 24), a4);
  v4 = OUTLINED_FUNCTION_41_0();
  return OUTLINED_FUNCTION_3_4(v4, v5, v6, v7);
}

uint64_t (*ContentRegistration.sourceInfo.modify())()
{
  return nullsub_1;
}

uint64_t sub_24778676C()
{
  uint64_t AssociatedConformanceWitness;
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;

  swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  v1 = *(uint64_t (**)(uint64_t, uint64_t))(AssociatedConformanceWitness + 32);
  v2 = swift_checkMetadataState();
  return v1(v2, AssociatedConformanceWitness);
}

BOOL static NetworkReachability.Obstacle.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t NetworkReachability.Obstacle.hash(into:)()
{
  return sub_2478B73A0();
}

uint64_t NetworkReachability.Obstacle.hashValue.getter()
{
  sub_2478B7394();
  sub_2478B73A0();
  return sub_2478B73AC();
}

BOOL NetworkReachability.shouldAttemptNetworkRequest.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 8) > 0x3Fu;
}

uint64_t RelationshipKey.rawValue.getter()
{
  sub_2478B6DA0();
  return OUTLINED_FUNCTION_10();
}

void RelationshipKey.rawValue.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  swift_bridgeObjectRelease();
  *v2 = a1;
  v2[1] = a2;
  OUTLINED_FUNCTION_28();
}

uint64_t (*RelationshipKey.rawValue.modify())()
{
  return nullsub_1;
}

uint64_t RelationshipKey.version.getter()
{
  sub_2478B6DA0();
  return OUTLINED_FUNCTION_10();
}

void RelationshipKey.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  OUTLINED_FUNCTION_28();
}

uint64_t (*RelationshipKey.version.modify())()
{
  return nullsub_1;
}

SonicKit::RelationshipKey __swiftcall RelationshipKey.init(rawValue:)(Swift::String rawValue)
{
  Swift::String *v1;
  SonicKit::RelationshipKey result;

  *v1 = rawValue;
  v1[1]._countAndFlagsBits = 0;
  v1[1]._object = 0;
  result.rawValue = rawValue;
  return result;
}

SonicKit::RelationshipKey __swiftcall RelationshipKey.init(rawValue:version:)(Swift::String rawValue, Swift::String version)
{
  Swift::String *v2;
  SonicKit::RelationshipKey result;

  *v2 = rawValue;
  v2[1] = version;
  result.version.value = version;
  result.rawValue = rawValue;
  return result;
}

SonicKit::RelationshipKey __swiftcall RelationshipKey.with(version:)(Swift::String version)
{
  Swift::String *v1;
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  void *v5;
  uint64_t v6;
  void *v7;
  SonicKit::RelationshipKey result;

  v3 = (void *)v2[1];
  v1->_countAndFlagsBits = *v2;
  v1->_object = v3;
  v1[1] = version;
  sub_2478B6DA0();
  v4 = sub_2478B6DA0();
  result.version.value._object = v7;
  result.version.value._countAndFlagsBits = v6;
  result.rawValue._object = v5;
  result.rawValue._countAndFlagsBits = v4;
  return result;
}

uint64_t RelationshipKey.unversioned.getter@<X0>(_QWORD *a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  a1[2] = 0;
  a1[3] = 0;
  return sub_2478B6DA0();
}

double sub_2477869DC@<D0>(Swift::String *a1@<X0>, uint64_t a2@<X8>)
{
  double result;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;

  RelationshipKey.init(rawValue:)(*a1);
  *(_QWORD *)a2 = v4;
  *(_QWORD *)(a2 + 8) = v5;
  result = *(double *)&v6;
  *(_OWORD *)(a2 + 16) = v6;
  return result;
}

uint64_t sub_247786A20@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = RelationshipKey.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_247786A44()
{
  sub_24778EAFC();
}

uint64_t sub_247786A50()
{
  return sub_24778EDF4();
}

void sub_247786A5C()
{
  sub_24778EE58();
}

uint64_t sub_247786A68(uint64_t *a1, uint64_t *a2)
{
  return sub_24778E914(*a1, a1[1], a1[2], a1[3], *a2, a2[1]);
}

uint64_t sub_247786A84()
{
  return sub_24778676C();
}

uint64_t type metadata accessor for ContentRegistration(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ContentRegistration);
}

void sub_247786AAC()
{
  sub_247784CB0();
}

void sub_247786ABC()
{
  sub_247784F18();
}

void sub_247786ACC(uint64_t a1)
{
  uint64_t *v1;

  sub_24778517C(a1, v1[4], v1[5], v1[6], v1[2], v1[3]);
}

void sub_247786ADC()
{
  OUTLINED_FUNCTION_43_1();
  sub_247785894();
}

uint64_t sub_247786AFC(uint64_t a1)
{
  uint64_t *v1;

  return sub_247785A5C(a1, v1[4], v1[5], v1[6], v1[7]);
}

void sub_247786B0C()
{
  OUTLINED_FUNCTION_43_1();
  sub_247785CA8();
}

uint64_t sub_247786B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v12 = v10[2];
  v13 = v10[3];
  v14 = v10[4];
  v15 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v11 + 16) = v15;
  v16 = OUTLINED_FUNCTION_521(v15);
  return sub_2477862C0(v16, v17, v14, v12, v13, v18, v19, v20, a9, a10);
}

uint64_t sub_247786B9C()
{
  return *(_QWORD *)(swift_getAssociatedConformanceWitness() + 16);
}

unint64_t sub_247786BCC()
{
  unint64_t result;

  result = qword_2576C2708;
  if (!qword_2576C2708)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for NetworkReachability.Obstacle, &type metadata for NetworkReachability.Obstacle);
    atomic_store(result, (unint64_t *)&qword_2576C2708);
  }
  return result;
}

unint64_t sub_247786C0C()
{
  unint64_t result;

  result = qword_2576C2710[0];
  if (!qword_2576C2710[0])
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for RelationshipKey, &type metadata for RelationshipKey);
    atomic_store(result, qword_2576C2710);
  }
  return result;
}

uint64_t sub_247786C48(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t result;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;

  v2 = *(_QWORD *)(a1 + 16);
  v1 = *(_QWORD *)(a1 + 24);
  result = swift_getAssociatedTypeWitness();
  if (v5 <= 0x3F)
  {
    result = type metadata accessor for ContentRegistration.SourceInfo(319, v2, v1, v4);
    if (v6 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_247786CF8(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t *, uint64_t *, uint64_t);
  _QWORD *v19;
  uint64_t *v20;
  unsigned int v21;
  _QWORD *v23;
  _QWORD *v24;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80);
  v8 = v7 & 0xF8 | 7;
  v9 = ~v8;
  v10 = v6 + 7;
  v11 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 16;
  if (v12 > v13)
    v13 = v12;
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = v13;
  if ((v7 & 0x1000F8) == 0 && ((((v6 + v8) & ~v8) + v14) | 1uLL) <= 0x18)
  {
    v17 = AssociatedTypeWitness;
    v18 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(v5 + 16);
    v18(a1, a2, AssociatedTypeWitness);
    v19 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & v9);
    v20 = (uint64_t *)(((unint64_t)a2 + v6 + 7) & v9);
    v21 = *((unsigned __int8 *)v20 + v14);
    if ((v14 & 0xFFFFFFF8) != 0 && v21 >= 3)
      v21 = *(_DWORD *)v20 + 3;
    if (v21 == 2)
    {
      v18((uint64_t *)(((unint64_t)a1 + v6 + 7) & v9), v20, v17);
      v23 = (_QWORD *)(((unint64_t)v19 + v10) & 0xFFFFFFFFFFFFFFF8);
      v24 = (_QWORD *)(((unint64_t)v20 + v10) & 0xFFFFFFFFFFFFFFF8);
      *v23 = *v24;
      v23[1] = v24[1];
      *((_BYTE *)v19 + v14) = 2;
    }
    else
    {
      if (v21 == 1)
      {
        v18((uint64_t *)(((unint64_t)a1 + v6 + 7) & v9), v20, v17);
        *(_QWORD *)(((unint64_t)v19 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v20 + v10) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v19 + v14) = 1;
        return a1;
      }
      *v19 = *v20;
      *((_BYTE *)v19 + v14) = 0;
    }
    sub_2478B6DA0();
    return a1;
  }
  v16 = *a2;
  *a1 = *a2;
  a1 = (uint64_t *)(v16 + ((v8 + 16) & v9));
  swift_retain();
  return a1;
}

uint64_t sub_247786EB0(uint64_t a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  void (*v15)(uint64_t, uint64_t);

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v15 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v15(a1, AssociatedTypeWitness);
  v4 = *(_QWORD *)(v3 + 64);
  v5 = *(_DWORD *)(v3 + 80) & 0xF8 | 7;
  v6 = (_DWORD *)((v4 + a1 + v5) & ~v5);
  v7 = (v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 16;
  if (v8 > v9)
    v9 = v8;
  v10 = 8;
  if (v9 > 8)
    v10 = v9;
  v11 = *((unsigned __int8 *)v6 + v10);
  v12 = v10 & 0xFFFFFFF8;
  if (v11 >= 3 && v12 != 0)
    v11 = *v6 + 3;
  if (v11 == 2)
  {
    v15((uint64_t)v6, AssociatedTypeWitness);
  }
  else if (v11 == 1)
  {
    return ((uint64_t (*)(_DWORD *, uint64_t))v15)(v6, AssociatedTypeWitness);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_247786FC8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  _QWORD *v18;
  _QWORD *v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v9 = (_QWORD *)((v7 + v8 + a1) & ~v8);
  v10 = (_DWORD *)((v7 + v8 + a2) & ~v8);
  v11 = v7 + 7;
  v12 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 16;
  if (v13 > v14)
    v14 = v13;
  if (v14 <= 8)
    v15 = 8;
  else
    v15 = v14;
  v16 = *((unsigned __int8 *)v10 + v15);
  if (v16 >= 3 && (v15 & 0xFFFFFFF8) != 0)
    v16 = *v10 + 3;
  if (v16 == 2)
  {
    v6((uint64_t)v9, (uint64_t)v10, AssociatedTypeWitness);
    v18 = (_QWORD *)(((unint64_t)v9 + v11) & 0xFFFFFFFFFFFFFFF8);
    v19 = (_QWORD *)(((unint64_t)v10 + v11) & 0xFFFFFFFFFFFFFFF8);
    *v18 = *v19;
    v18[1] = v19[1];
    *((_BYTE *)v9 + v15) = 2;
LABEL_16:
    sub_2478B6DA0();
    return a1;
  }
  if (v16 != 1)
  {
    *v9 = *(_QWORD *)v10;
    *((_BYTE *)v9 + v15) = 0;
    goto LABEL_16;
  }
  v6((uint64_t)v9, (uint64_t)v10, AssociatedTypeWitness);
  *(_QWORD *)(((unint64_t)v9 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + v11) & 0xFFFFFFFFFFFFF8);
  *((_BYTE *)v9 + v15) = 1;
  return a1;
}

uint64_t sub_247787130(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v17;
  _QWORD *v19;
  _QWORD *v20;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v8 = (_DWORD *)((v6 + v7 + a1) & ~v7);
  v9 = (_DWORD *)((v6 + v7 + a2) & ~v7);
  if (v8 != v9)
  {
    v10 = v6 + 7;
    v11 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v12 = v11 + 8;
    v13 = v11 + 16;
    if (v12 > v13)
      v13 = v12;
    if (v13 <= 8)
      v14 = 8;
    else
      v14 = v13;
    v15 = *((unsigned __int8 *)v8 + v14);
    if ((v14 & 0xFFFFFFF8) != 0 && v15 >= 3)
      v15 = *v8 + 3;
    if (v15 == 2)
    {
      (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
    }
    else if (v15 == 1)
    {
      (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
      goto LABEL_18;
    }
    swift_bridgeObjectRelease();
LABEL_18:
    v17 = *((unsigned __int8 *)v9 + v14);
    if ((v14 & 0xFFFFFFF8) != 0 && v17 >= 3)
      v17 = *v9 + 3;
    if (v17 == 2)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 16))(v8, v9, AssociatedTypeWitness);
      v19 = (_QWORD *)(((unint64_t)v8 + v10) & 0xFFFFFFFFFFFFFFF8);
      v20 = (_QWORD *)(((unint64_t)v9 + v10) & 0xFFFFFFFFFFFFFFF8);
      *v19 = *v20;
      v19[1] = v20[1];
      *((_BYTE *)v8 + v14) = 2;
    }
    else
    {
      if (v17 == 1)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 16))(v8, v9, AssociatedTypeWitness);
        *(_QWORD *)(((unint64_t)v8 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v9 + v10) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)v8 + v14) = 1;
        return a1;
      }
      *(_QWORD *)v8 = *(_QWORD *)v9;
      *((_BYTE *)v8 + v14) = 0;
    }
    sub_2478B6DA0();
  }
  return a1;
}

uint64_t sub_24778730C(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  _QWORD *v9;
  _DWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unsigned int v16;
  char v18;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32);
  v6(a1, a2, AssociatedTypeWitness);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v9 = (_QWORD *)((v7 + v8 + a1) & ~v8);
  v10 = (_DWORD *)((v7 + v8 + a2) & ~v8);
  v11 = v7 + 7;
  v12 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v13 = v12 + 8;
  v14 = v12 + 16;
  if (v13 > v14)
    v14 = v13;
  if (v14 <= 8)
    v15 = 8;
  else
    v15 = v14;
  v16 = *((unsigned __int8 *)v10 + v15);
  if (v16 >= 3 && (v15 & 0xFFFFFFF8) != 0)
    v16 = *v10 + 3;
  if (v16 == 2)
  {
    v6((uint64_t)v9, (uint64_t)v10, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)v9 + v11) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v10 + v11) & 0xFFFFFFFFFFFFF8);
    v18 = 2;
  }
  else if (v16 == 1)
  {
    v6((uint64_t)v9, (uint64_t)v10, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)v9 + v11) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v10 + v11) & 0xFFFFFFFFFFFFF8);
    v18 = 1;
  }
  else
  {
    v18 = 0;
    *v9 = *(_QWORD *)v10;
  }
  *((_BYTE *)v9 + v15) = v18;
  return a1;
}

uint64_t sub_247787464(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  _DWORD *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  unsigned int v15;
  unsigned int v17;
  char v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 40))(a1, a2, AssociatedTypeWitness);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v8 = (_DWORD *)((v6 + v7 + a1) & ~v7);
  v9 = (_DWORD *)((v6 + v7 + a2) & ~v7);
  if (v8 == v9)
    return a1;
  v10 = v6 + 7;
  v11 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v12 = v11 + 8;
  v13 = v11 + 16;
  if (v12 > v13)
    v13 = v12;
  if (v13 <= 8)
    v14 = 8;
  else
    v14 = v13;
  v15 = *((unsigned __int8 *)v8 + v14);
  if ((v14 & 0xFFFFFFF8) != 0 && v15 >= 3)
    v15 = *v8 + 3;
  if (v15 == 2)
  {
    (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
    goto LABEL_17;
  }
  if (v15 != 1)
  {
LABEL_17:
    swift_bridgeObjectRelease();
    goto LABEL_18;
  }
  (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(v8, AssociatedTypeWitness);
LABEL_18:
  v17 = *((unsigned __int8 *)v9 + v14);
  if ((v14 & 0xFFFFFFF8) != 0 && v17 >= 3)
    v17 = *v9 + 3;
  if (v17 == 2)
  {
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 32))(v8, v9, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)v8 + v10) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v9 + v10) & 0xFFFFFFFFFFFFF8);
    v19 = 2;
  }
  else if (v17 == 1)
  {
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 32))(v8, v9, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)v8 + v10) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)v9 + v10) & 0xFFFFFFFFFFFFF8);
    v19 = 1;
  }
  else
  {
    v19 = 0;
    *(_QWORD *)v8 = *(_QWORD *)v9;
  }
  *((_BYTE *)v8 + v14) = v19;
  return a1;
}

uint64_t sub_247787630(uint64_t a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unsigned int v17;
  int v18;
  unsigned int v19;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(unsigned int *)(v5 + 84);
  v7 = *(_QWORD *)(v5 + 64);
  v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  v10 = v8 + 16;
  if (v9 > v10)
    v10 = v9;
  v11 = 8;
  if (v10 > 8)
    v11 = v10;
  if (v6 <= 0xFD)
    v12 = 253;
  else
    v12 = *(_DWORD *)(v5 + 84);
  if (!a2)
    return 0;
  v13 = *(_DWORD *)(v5 + 80) & 0xF8 | 7;
  v14 = v7 + v13;
  if (a2 > v12)
  {
    v15 = ((v14 & ~v13) + v11) | 1;
    if (v15 > 3)
      goto LABEL_31;
    v17 = ((a2 - v12 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
    if (HIWORD(v17))
    {
      if (!*(_DWORD *)(a1 + v15))
        goto LABEL_24;
      goto LABEL_19;
    }
    if (v17 > 0xFF)
    {
      if (!*(_WORD *)(a1 + v15))
        goto LABEL_24;
      goto LABEL_19;
    }
    if (v17 >= 2)
    {
LABEL_31:
      if (!*(_BYTE *)(a1 + v15))
        goto LABEL_24;
LABEL_19:
      if (v15 <= 3)
        v18 = ((v14 & ~(_DWORD)v13) + v11) | 1;
      else
        v18 = 4;
      __asm { BR              X12 }
    }
  }
LABEL_24:
  if (v6 >= 0xFD)
    return __swift_getEnumTagSinglePayload(a1, v6, AssociatedTypeWitness);
  v19 = *(unsigned __int8 *)(((v14 + a1) & ~v13) + v11);
  if (v19 >= 3)
    return (v19 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_2477877D4(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unsigned int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  size_t v15;
  char v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  int v20;

  v6 = *(_QWORD *)(swift_getAssociatedTypeWitness() - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = (v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  v9 = v8 + 8;
  v10 = v8 + 16;
  if (v9 > v10)
    v10 = v9;
  if (v10 <= 8)
    v10 = 8;
  v13 = v6 + 80;
  v12 = *(_DWORD *)(v6 + 80);
  v11 = *(_DWORD *)(v13 + 4);
  if (v11 <= 0xFD)
    v14 = 253;
  else
    v14 = v11;
  v15 = ((v7 + (v12 & 0xF8 | 7)) & ~(v12 & 0xF8 | 7)) + (v10 | 1);
  v16 = 8 * v15;
  if (a3 <= v14)
  {
    v17 = 0;
  }
  else if (v15 <= 3)
  {
    v19 = ((a3 - v14 + ~(-1 << v16)) >> v16) + 1;
    if (HIWORD(v19))
    {
      v17 = 4u;
    }
    else if (v19 >= 0x100)
    {
      v17 = 2;
    }
    else
    {
      v17 = v19 > 1;
    }
  }
  else
  {
    v17 = 1u;
  }
  if (v14 < a2)
  {
    v18 = ~v14 + a2;
    if (v15 < 4)
    {
      v20 = v18 & ~(-1 << v16);
      bzero(a1, v15);
      if ((_DWORD)v15 == 1)
      {
        *a1 = v20;
      }
      else
      {
        *(_WORD *)a1 = v20;
        a1[2] = BYTE2(v20);
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v18;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X13 }
}

uint64_t sub_247787A6C()
{
  uint64_t result;
  unint64_t v1;
  char v2;
  char v3;
  uint64_t v4;
  char *v5;
  char *v6;

  v4 = MEMORY[0x24BEE0158] + 64;
  result = swift_getAssociatedTypeWitness();
  if (v1 <= 0x3F)
  {
    swift_getTupleTypeLayout2();
    v5 = &v3;
    swift_getTupleTypeLayout2();
    v6 = &v2;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

_QWORD *sub_247787B34(_QWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  unsigned int v14;
  _QWORD *v16;
  _QWORD *v17;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 16;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = *(_DWORD *)(v5 + 80);
  if ((v11 & 0x1000F8) == 0 && (v10 | 1uLL) <= 0x18)
  {
    v14 = *((unsigned __int8 *)a2 + v10);
    if ((v10 & 0xFFFFFFF8) != 0 && v14 >= 3)
      v14 = *a2 + 3;
    if (v14 == 2)
    {
      (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v16 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      v17 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v16 = *v17;
      v16[1] = v17[1];
      *((_BYTE *)a1 + v10) = 2;
    }
    else
    {
      if (v14 == 1)
      {
        (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)a1 + v10) = 1;
        return a1;
      }
      *a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + v10) = 0;
    }
    sub_2478B6DA0();
    return a1;
  }
  v13 = *(_QWORD *)a2;
  *a1 = *(_QWORD *)a2;
  a1 = (_QWORD *)(v13 + ((unsigned __int16)((v11 & 0xF8) + 23) & (unsigned __int16)~(v11 & 0xF8) & 0x1F8));
  swift_retain();
  return a1;
}

uint64_t sub_247787CA8(_DWORD *a1)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v3 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v4 = (*(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v4 + 8;
  v6 = v4 + 16;
  if (v5 > v6)
    v6 = v5;
  v7 = 8;
  if (v6 > 8)
    v7 = v6;
  v8 = *((unsigned __int8 *)a1 + v7);
  v9 = v7 & 0xFFFFFFF8;
  if (v8 >= 3 && v9 != 0)
    v8 = *a1 + 3;
  if (v8 == 2)
  {
    (*(void (**)(_DWORD *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  }
  else if (v8 == 1)
  {
    return (*(uint64_t (**)(_DWORD *, uint64_t))(v3 + 8))(a1, AssociatedTypeWitness);
  }
  return swift_bridgeObjectRelease();
}

_QWORD *sub_247787D78(_QWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  _QWORD *v13;
  _QWORD *v14;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 16;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 3 && (v10 & 0xFFFFFFF8) != 0)
    v11 = *a2 + 3;
  if (v11 == 2)
  {
    (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
    v13 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    v14 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v13 = *v14;
    v13[1] = v14[1];
    *((_BYTE *)a1 + v10) = 2;
LABEL_16:
    sub_2478B6DA0();
    return a1;
  }
  if (v11 != 1)
  {
    *a1 = *(_QWORD *)a2;
    *((_BYTE *)a1 + v10) = 0;
    goto LABEL_16;
  }
  (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
  *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
  *((_BYTE *)a1 + v10) = 1;
  return a1;
}

_DWORD *sub_247787EAC(_DWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v13;
  _QWORD *v15;
  _QWORD *v16;

  if (a1 != a2)
  {
    AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
    v6 = *(_QWORD *)(v5 + 64);
    v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
    v8 = v7 + 8;
    v9 = v7 + 16;
    if (v8 > v9)
      v9 = v8;
    if (v9 <= 8)
      v10 = 8;
    else
      v10 = v9;
    v11 = *((unsigned __int8 *)a1 + v10);
    if (v11 >= 3 && (v10 & 0xFFFFFFF8) != 0)
      v11 = *a1 + 3;
    if (v11 == 2)
    {
      (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    }
    else if (v11 == 1)
    {
      (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
      goto LABEL_17;
    }
    swift_bridgeObjectRelease();
LABEL_17:
    v13 = *((unsigned __int8 *)a2 + v10);
    if ((v10 & 0xFFFFFFF8) != 0 && v13 >= 3)
      v13 = *a2 + 3;
    if (v13 == 2)
    {
      (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
      v15 = (_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      v16 = (_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFFFF8);
      *v15 = *v16;
      v15[1] = v16[1];
      *((_BYTE *)a1 + v10) = 2;
    }
    else
    {
      if (v13 == 1)
      {
        (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 16))(a1, a2, AssociatedTypeWitness);
        *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
        *((_BYTE *)a1 + v10) = 1;
        return a1;
      }
      *(_QWORD *)a1 = *(_QWORD *)a2;
      *((_BYTE *)a1 + v10) = 0;
    }
    sub_2478B6DA0();
  }
  return a1;
}

_QWORD *sub_247788068(_QWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  char v13;

  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 16;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = *((unsigned __int8 *)a2 + v10);
  if (v11 >= 3 && (v10 & 0xFFFFFFF8) != 0)
    v11 = *a2 + 3;
  if (v11 == 2)
  {
    (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v13 = 2;
  }
  else if (v11 == 1)
  {
    (*(void (**)(_QWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v13 = 1;
  }
  else
  {
    v13 = 0;
    *a1 = *(_QWORD *)a2;
  }
  *((_BYTE *)a1 + v10) = v13;
  return a1;
}

_DWORD *sub_24778818C(_DWORD *a1, _DWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unsigned int v11;
  unsigned int v13;
  char v15;

  if (a1 == a2)
    return a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(_QWORD *)(AssociatedTypeWitness - 8);
  v6 = *(_QWORD *)(v5 + 64);
  v7 = (v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  v8 = v7 + 8;
  v9 = v7 + 16;
  if (v8 > v9)
    v9 = v8;
  if (v9 <= 8)
    v10 = 8;
  else
    v10 = v9;
  v11 = *((unsigned __int8 *)a1 + v10);
  if (v11 >= 3 && (v10 & 0xFFFFFFF8) != 0)
    v11 = *a1 + 3;
  if (v11 == 2)
  {
    (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
    goto LABEL_16;
  }
  if (v11 != 1)
  {
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  (*(void (**)(_DWORD *, uint64_t))(v5 + 8))(a1, AssociatedTypeWitness);
LABEL_17:
  v13 = *((unsigned __int8 *)a2 + v10);
  if ((v10 & 0xFFFFFFF8) != 0 && v13 >= 3)
    v13 = *a2 + 3;
  if (v13 == 2)
  {
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_OWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v15 = 2;
  }
  else if (v13 == 1)
  {
    (*(void (**)(_DWORD *, _DWORD *, uint64_t))(v5 + 32))(a1, a2, AssociatedTypeWitness);
    *(_QWORD *)(((unint64_t)a1 + v6 + 7) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)(((unint64_t)a2 + v6 + 7) & 0xFFFFFFFFFFFFF8);
    v15 = 1;
  }
  else
  {
    v15 = 0;
    *(_QWORD *)a1 = *(_QWORD *)a2;
  }
  *((_BYTE *)a1 + v10) = v15;
  return a1;
}

uint64_t sub_247788338(uint64_t a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unsigned int v9;
  unsigned int v10;

  v4 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v4 + 8;
  v6 = v4 + 16;
  if (v5 > v6)
    v6 = v5;
  if (v6 <= 8)
    v6 = 8;
  if (!a2)
    return 0;
  if (a2 >= 0xFE)
  {
    v7 = v6 | 1;
    if ((v6 | 1) > 3)
      goto LABEL_25;
    v9 = (a2 + ~(-1 << (8 * (v6 | 1))) - 253) >> (8 * (v6 | 1));
    if (v9 > 0xFFFE)
    {
      if (!*(_DWORD *)(a1 + v7))
        goto LABEL_20;
      goto LABEL_16;
    }
    if (v9 > 0xFE)
    {
      if (!*(_WORD *)(a1 + v7))
        goto LABEL_20;
      goto LABEL_16;
    }
    if (v9)
    {
LABEL_25:
      if (!*(_BYTE *)(a1 + v7))
        goto LABEL_20;
LABEL_16:
      if (v7 > 3)
        LODWORD(v7) = 4;
      __asm { BR              X11 }
    }
  }
LABEL_20:
  v10 = *(unsigned __int8 *)(a1 + v6);
  if (v10 >= 3)
    return (v10 ^ 0xFF) + 1;
  else
    return 0;
}

void sub_247788488(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  size_t v9;
  char v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;

  v6 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v7 = v6 + 8;
  v8 = v6 + 16;
  if (v7 > v8)
    v8 = v7;
  if (v8 <= 8)
    v8 = 8;
  v9 = v8 | 1;
  v10 = 8 * (v8 | 1);
  if (a3 < 0xFE)
  {
    v11 = 0;
  }
  else if (v9 <= 3)
  {
    v13 = (a3 + ~(-1 << v10) - 253) >> v10;
    if (v13 > 0xFFFE)
    {
      v11 = 4u;
    }
    else if (v13 >= 0xFF)
    {
      v11 = 2;
    }
    else
    {
      v11 = v13 != 0;
    }
  }
  else
  {
    v11 = 1u;
  }
  if (a2 <= 0xFD)
    __asm { BR              X11 }
  v12 = a2 - 254;
  if (v9 < 4)
  {
    v14 = v12 & ~(-1 << v10);
    bzero(a1, v9);
    *a1 = v14;
  }
  else
  {
    bzero(a1, v8 | 1);
    *(_DWORD *)a1 = v12;
  }
  __asm { BR              X10 }
}

uint64_t sub_247788638(_DWORD *a1)
{
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  uint64_t result;
  uint64_t v6;

  v2 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v3 = v2 + 8;
  v4 = v2 + 16;
  if (v3 > v4)
    v4 = v3;
  if (v4 <= 8)
    v4 = 8;
  result = *((unsigned __int8 *)a1 + v4);
  v6 = v4 & 0xFFFFFFF8;
  if (result >= 3 && v6 != 0)
    return (*a1 + 3);
  return result;
}

void sub_2477886BC(unsigned int *a1, unsigned int a2)
{
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  size_t v7;
  char v8;
  unsigned int v9;

  v4 = (*(_QWORD *)(*(_QWORD *)(swift_getAssociatedTypeWitness() - 8) + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  v5 = v4 + 8;
  v6 = v4 + 16;
  if (v5 > v6)
    v6 = v5;
  if (v6 <= 8)
    v7 = 8;
  else
    v7 = v6;
  if (a2 > 2)
  {
    if ((_DWORD)v7)
      v8 = 3;
    else
      v8 = a2;
    if ((_DWORD)v7)
      v9 = a2 - 3;
    else
      v9 = 0;
    *((_BYTE *)a1 + v7) = v8;
    bzero(a1, v7);
    *a1 = v9;
  }
  else
  {
    *((_BYTE *)a1 + v7) = a2;
  }
}

uint64_t dispatch thunk of static ContentID.newContentID()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ContentQualifiedIdentifier.raw.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t __swift_memcpy9_8(uint64_t result, uint64_t *a2)
{
  uint64_t v2;

  v2 = *a2;
  *(_BYTE *)(result + 8) = *((_BYTE *)a2 + 8);
  *(_QWORD *)result = v2;
  return result;
}

uint64_t getEnumTagSinglePayload for NetworkReachability(uint64_t a1, unsigned int a2)
{
  unsigned int v2;

  if (a2)
  {
    if (a2 >= 0x7D && *(_BYTE *)(a1 + 9))
    {
      v2 = *(_DWORD *)a1 + 124;
    }
    else
    {
      v2 = ((*(unsigned __int8 *)(a1 + 8) >> 6) & 0xFFFFFF83 | (4 * ((*(unsigned __int8 *)(a1 + 8) >> 1) & 0x1F))) ^ 0x7F;
      if (v2 >= 0x7C)
        v2 = -1;
    }
  }
  else
  {
    v2 = -1;
  }
  return v2 + 1;
}

uint64_t storeEnumTagSinglePayload for NetworkReachability(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7C)
  {
    *(_BYTE *)(result + 8) = 0;
    *(_QWORD *)result = a2 - 125;
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 9) = 1;
  }
  else
  {
    if (a3 >= 0x7D)
      *(_BYTE *)(result + 9) = 0;
    if (a2)
    {
      *(_QWORD *)result = 0;
      *(_BYTE *)(result + 8) = 2 * (((-a2 >> 2) & 0x1F) - 32 * a2);
    }
  }
  return result;
}

uint64_t sub_24778881C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8) >> 6;
}

uint64_t sub_247788828(uint64_t result)
{
  *(_BYTE *)(result + 8) &= 0x3Fu;
  return result;
}

uint64_t sub_247788838(uint64_t result, char a2)
{
  *(_BYTE *)(result + 8) = *(_BYTE *)(result + 8) & 1 | (a2 << 6);
  return result;
}

void type metadata accessor for NetworkReachability()
{
  OUTLINED_FUNCTION_34();
}

uint64_t storeEnumTagSinglePayload for NetworkReachability.Obstacle(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_2477888A4 + 4 * byte_2478B9305[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_2477888D8 + 4 * byte_2478B9300[v4]))();
}

uint64_t sub_2477888D8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2477888E0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2477888E8);
  return result;
}

uint64_t sub_2477888F4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2477888FCLL);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_247788900(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247788908(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for NetworkReachability.Obstacle()
{
  OUTLINED_FUNCTION_34();
}

uint64_t getEnumTagSinglePayload for NetworkReachability.Speed(uint64_t a1, int a2)
{
  if (a2 && *(_BYTE *)(a1 + 9))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for NetworkReachability.Speed(uint64_t result, int a2, int a3)
{
  char v3;

  if (a2)
  {
    *(_QWORD *)result = 0;
    *(_BYTE *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 1;
    if (!a3)
      return result;
    v3 = 1;
  }
  else
  {
    if (!a3)
      return result;
    v3 = 0;
  }
  *(_BYTE *)(result + 9) = v3;
  return result;
}

uint64_t sub_247788970(uint64_t a1)
{
  if (*(_BYTE *)(a1 + 8))
    return (*(_DWORD *)a1 + 1);
  else
    return 0;
}

uint64_t sub_24778898C(uint64_t result, int a2)
{
  char v2;

  if (a2)
  {
    *(_QWORD *)result = (a2 - 1);
    v2 = 1;
  }
  else
  {
    v2 = 0;
  }
  *(_BYTE *)(result + 8) = v2;
  return result;
}

void type metadata accessor for NetworkReachability.Speed()
{
  OUTLINED_FUNCTION_34();
}

uint64_t dispatch thunk of ContentEnvironment.reachability(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ContentRawIdentifier.identifierType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ContentIDLookup.lookup(firstMatching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ContentIDLookup.lookup(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ContentRawIdentifierQualifier.qualify(raw:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_14_2();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_35_1(v1, (uint64_t)sub_247755130);
  return OUTLINED_FUNCTION_27_0(v2, v3, v4, v5);
}

uint64_t dispatch thunk of ContentQualifiedIdentifierQualifier.requalify(previously:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(void);

  v1 = (_QWORD *)OUTLINED_FUNCTION_14_2();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_35_1(v1, (uint64_t)sub_247788CE8);
  return OUTLINED_FUNCTION_27_0(v2, v3, v4, v5);
}

uint64_t destroy for RelationshipKey()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for RelationshipKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  sub_2478B6DA0();
  sub_2478B6DA0();
  return a1;
}

_QWORD *assignWithCopy for RelationshipKey(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy32_8(_OWORD *a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

_QWORD *assignWithTake for RelationshipKey(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for RelationshipKey(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 32))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for RelationshipKey(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for RelationshipKey()
{
  OUTLINED_FUNCTION_34();
}

void sub_247788C14(void *a1, char a2, char a3)
{
  if ((a3 & 1) != 0)
    sub_247779F9C(a1, a2 & 1);
  else
    swift_release();
}

uint64_t sub_247788C28()
{
  uint64_t v0;

  sub_247788C14(*(void **)(v0 + 32), *(_QWORD *)(v0 + 40), *(_BYTE *)(v0 + 48));
  return swift_deallocObject();
}

uint64_t sub_247788C50()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(_BYTE *)(v0 + 48);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v5;
  v6 = OUTLINED_FUNCTION_521(v5);
  return sub_247785440(v6, v7, v2, v3, v4);
}

uint64_t OUTLINED_FUNCTION_6_4()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_7_3()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 112) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_8_3()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_11_2()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_12_0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  _QWORD *v5;

  v5[5] = a4;
  v5[6] = a5;
  v5[3] = a2;
  v5[4] = a3;
  v5[2] = a1;
  return sub_2478B6C5C();
}

uint64_t OUTLINED_FUNCTION_13_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ContentManagerBehavior.withPlan<A>(buildPlan:)(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_14_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_19_1()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 128) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_24_2@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

uint64_t OUTLINED_FUNCTION_25_2(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return ContentManagerBehavior.withPlan<A>(buildPlan:)(a1, a2, a3, a4, a5, a6);
}

uint64_t OUTLINED_FUNCTION_27_1()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_29_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_30_1()
{
  return swift_task_alloc();
}

unint64_t OUTLINED_FUNCTION_32_2(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return sub_247754E48();
}

__n128 OUTLINED_FUNCTION_33_2(__n128 *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, __n128 a9)
{
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  unint64_t v12;
  __n128 result;

  *(_QWORD *)(v11 + 96) = a1;
  a1[1].n128_u64[0] = v12;
  a1[1].n128_u64[1] = v10;
  result = a9;
  a1[2] = a9;
  a1[3].n128_u64[0] = v9;
  return result;
}

uint64_t OUTLINED_FUNCTION_34_2()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_35_1@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = a2;
  return v3;
}

uint64_t OUTLINED_FUNCTION_37_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_38_0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v0, v1);
}

uint64_t OUTLINED_FUNCTION_39_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_41_0()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_42(uint64_t result, uint64_t a2)
{
  uint64_t v2;

  *(_QWORD *)(v2 + 80) = result;
  *(_QWORD *)(v2 + 88) = a2;
  return result;
}

void OUTLINED_FUNCTION_44_1()
{
  _QWORD *v0;
  uint64_t v1;

  *(_QWORD *)(v1 - 8) = *v0;
}

uint64_t OUTLINED_FUNCTION_47_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_48_1@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;

  *v1 = v2;
  v1[1] = a1;
  return *(_QWORD *)(v2 + 16);
}

uint64_t OUTLINED_FUNCTION_49_1@<X0>(uint64_t (*a1)(uint64_t, uint64_t)@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  return a1(v1, v2);
}

unint64_t OUTLINED_FUNCTION_51_1(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return sub_247754E48();
}

uint64_t OUTLINED_FUNCTION_53_1()
{
  return swift_task_alloc();
}

uint64_t OUTLINED_FUNCTION_55_0()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_56_1()
{
  return sub_2478B7148();
}

uint64_t OUTLINED_FUNCTION_59_1()
{
  return swift_task_dealloc();
}

uint64_t PlaybackEngine.__allocating_init<A>(configuration:specification:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;

  v7 = OUTLINED_FUNCTION_118();
  PlaybackEngine.init<A>(configuration:specification:)(a1, v8, a3, a4);
  return v7;
}

uint64_t PlaybackEngine.init<A>(configuration:specification:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _QWORD *v12;
  uint64_t v14;

  sub_247789098();
  MEMORY[0x24BDAC7A8](v8);
  v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_2478B7028();
  *(_OWORD *)(v4 + 16) = 0u;
  *(_OWORD *)(v4 + 32) = 0u;
  *(_QWORD *)(v4 + 48) = 0;
  __swift_storeEnumTagSinglePayload((uint64_t)v10, 1, 1, v11);
  v12 = (_QWORD *)OUTLINED_FUNCTION_118();
  v12[2] = 0;
  v12[3] = 0;
  v12[4] = a3;
  v12[5] = a4;
  v12[6] = v4;
  v12[7] = a1;
  swift_retain();
  sub_24778B4F0((uint64_t)v10, (uint64_t)&unk_2576C2840, (uint64_t)v12);
  swift_release();
  return v4;
}

void sub_247789098()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C1E88)
  {
    sub_2478B7028();
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, &qword_2576C1E88);
  }
}

uint64_t sub_2477890EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  _QWORD *v11;

  v7[22] = a6;
  v7[23] = a7;
  v7[21] = a4;
  swift_retain();
  v11 = (_QWORD *)swift_task_alloc();
  v7[24] = v11;
  *v11 = v7;
  v11[1] = sub_247789178;
  return sub_247789418((uint64_t)(v7 + 2), a5, a6, a7);
}

uint64_t sub_247789178()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(*(_QWORD *)v1 + 200) = v0;
  swift_task_dealloc();
  OUTLINED_FUNCTION_17_1();
  return swift_task_switch();
}

uint64_t sub_2477891D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  _OWORD *v6;
  __int128 v7;
  __int128 v8;

  v5 = *(_QWORD *)(v4 + 168);
  *(_QWORD *)(v4 + 104) = type metadata accessor for PlaybackEngine.Components(0, *(_QWORD *)(v4 + 176), *(_QWORD *)(v4 + 184), a4);
  *(_QWORD *)(v4 + 112) = &off_2518E1600;
  v6 = (_OWORD *)OUTLINED_FUNCTION_118();
  *(_QWORD *)(v4 + 80) = v6;
  v7 = *(_OWORD *)(v4 + 32);
  v6[1] = *(_OWORD *)(v4 + 16);
  v6[2] = v7;
  v8 = *(_OWORD *)(v4 + 64);
  v6[3] = *(_OWORD *)(v4 + 48);
  v6[4] = v8;
  swift_beginAccess();
  sub_24778BEF8(v4 + 80, v5 + 16);
  swift_endAccess();
  return (*(uint64_t (**)(void))(v4 + 8))();
}

uint64_t sub_24778927C()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = v0[25];
  sub_2478B71A8();
  v0[18] = 0;
  v0[19] = 0xE000000000000000;
  sub_2478B6EA8();
  v0[20] = v1;
  sub_247758170(0, (unint64_t *)&qword_25444CC38);
  sub_2478B7250();
  return sub_2478B728C();
}

uint64_t sub_247789364()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_247789398()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;

  OUTLINED_FUNCTION_111();
  v3 = v2;
  v4 = v0[4];
  v5 = v0[5];
  v6 = v0[2];
  v7 = v0[3];
  v9 = v0[6];
  v8 = v0[7];
  v10 = swift_task_alloc();
  v11 = (_QWORD *)OUTLINED_FUNCTION_78(v10);
  *v11 = v1;
  v11[1] = sub_2477551EC;
  return sub_2477890EC(v3, v6, v7, v9, v8, v4, v5);
}

uint64_t sub_247789418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;
  uint64_t v5;

  v4[658] = a4;
  v4[657] = a3;
  v4[656] = a2;
  v4[655] = a1;
  sub_2478B6C5C();
  v4[659] = sub_2478B6C50();
  sub_247754E48();
  v4[660] = sub_2478B7010();
  v4[661] = v5;
  return OUTLINED_FUNCTION_2_2();
}

uint64_t sub_247789490()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v1 = OUTLINED_FUNCTION_0_4();
  v0[662] = v1;
  OUTLINED_FUNCTION_40_1(v1);
  v2 = OUTLINED_FUNCTION_18_1();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AccountManager(255, v2, AssociatedConformanceWitness, v4);
  swift_asyncLet_begin();
  v5 = OUTLINED_FUNCTION_0_4();
  v0[663] = v5;
  OUTLINED_FUNCTION_40_1(v5);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_20_2();
  v6 = OUTLINED_FUNCTION_29_2();
  type metadata accessor for ContentManager(v6, v7, v8, v9);
  swift_asyncLet_begin();
  v10 = OUTLINED_FUNCTION_0_4();
  v0[664] = v10;
  OUTLINED_FUNCTION_40_1(v10);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_20_2();
  v11 = OUTLINED_FUNCTION_29_2();
  type metadata accessor for DigitalRightsManager(v11, v12, v13, v14);
  OUTLINED_FUNCTION_35_2();
  v15 = OUTLINED_FUNCTION_0_4();
  v0[665] = v15;
  OUTLINED_FUNCTION_40_1(v15);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_20_2();
  v16 = OUTLINED_FUNCTION_29_2();
  type metadata accessor for MetricsManager(v16, v17, v18, v19);
  OUTLINED_FUNCTION_35_2();
  v20 = OUTLINED_FUNCTION_0_4();
  v0[666] = v20;
  OUTLINED_FUNCTION_40_1(v20);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_20_2();
  v21 = OUTLINED_FUNCTION_29_2();
  type metadata accessor for Renderer(v21, v22, v23, v24);
  OUTLINED_FUNCTION_35_2();
  v25 = OUTLINED_FUNCTION_0_4();
  v0[667] = v25;
  OUTLINED_FUNCTION_40_1(v25);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_20_2();
  v26 = OUTLINED_FUNCTION_29_2();
  type metadata accessor for SessionManager(v26, v27, v28, v29);
  OUTLINED_FUNCTION_35_2();
  v30 = OUTLINED_FUNCTION_0_4();
  v0[668] = v30;
  OUTLINED_FUNCTION_40_1(v30);
  OUTLINED_FUNCTION_18_1();
  OUTLINED_FUNCTION_20_2();
  v31 = OUTLINED_FUNCTION_29_2();
  type metadata accessor for ErrorResolver(v31, v32, v33, v34);
  OUTLINED_FUNCTION_35_2();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_2477897D0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 5352) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return swift_task_switch();
}

uint64_t sub_247789808()
{
  uint64_t v0;

  *(_QWORD *)(v0 + 5360) = *(_QWORD *)(v0 + 5200);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_14_3();
}

uint64_t sub_247789850()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 5368) = v0;
  return swift_task_switch();
}

uint64_t sub_247789878()
{
  _QWORD *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  v1 = v0[658];
  v2 = v0[657];
  v0[672] = v0[653];
  v3 = OUTLINED_FUNCTION_0_4();
  v0[673] = v3;
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  OUTLINED_FUNCTION_39_2();
  swift_retain();
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Publisher(255, AssociatedTypeWitness, AssociatedConformanceWitness, v6);
  swift_asyncLet_begin();
  return swift_asyncLet_get_throwing();
}

uint64_t sub_2477899A0()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 5392) = v0;
  if (v0)
    return swift_asyncLet_finish();
  else
    return swift_task_switch();
}

uint64_t sub_2477899DC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52_2();
  *(_QWORD *)(v0 + 5400) = *(_QWORD *)(v0 + 5232);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_14_3();
}

uint64_t sub_247789A24()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 5408) = v0;
  if (!v0)
    return OUTLINED_FUNCTION_0_3();
  OUTLINED_FUNCTION_22_2();
  swift_release();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789A7C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52_2();
  *(_QWORD *)(v0 + 5416) = *(_QWORD *)(v0 + 5216);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_14_3();
}

uint64_t sub_247789AC8()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 5424) = v0;
  if (!v0)
    return OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_22_2();
  swift_release();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_46_1();
}

uint64_t sub_247789B38()
{
  uint64_t v0;

  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 5432) = *(_QWORD *)(v0 + 5176);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_14_3();
}

uint64_t sub_247789B74()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_314();
  *(_QWORD *)(v1 + 5440) = v0;
  if (!v0)
    return swift_task_switch();
  OUTLINED_FUNCTION_22_2();
  swift_release();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_247789BEC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52_2();
  *(_QWORD *)(v0 + 5448) = *(_QWORD *)(v0 + 5192);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_14_3();
}

uint64_t sub_247789C34()
{
  uint64_t v0;
  uint64_t v1;

  *(_QWORD *)(v1 + 5456) = v0;
  if (!v0)
    return OUTLINED_FUNCTION_2_2();
  OUTLINED_FUNCTION_22_2();
  swift_release();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_46_1();
}

uint64_t sub_247789CC0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_52_2();
  *(_QWORD *)(v0 + 5464) = *(_QWORD *)(v0 + 5184);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_14_3();
}

uint64_t sub_247789D08()
{
  uint64_t v0;
  uint64_t v1;

  OUTLINED_FUNCTION_111();
  *(_QWORD *)(v1 + 5472) = v0;
  if (!v0)
    return swift_task_switch();
  OUTLINED_FUNCTION_22_2();
  swift_release();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_1_5();
  return swift_asyncLet_finish();
}

uint64_t sub_247789DA8()
{
  uint64_t v0;

  OUTLINED_FUNCTION_48_2();
  *(_QWORD *)(v0 + 5480) = *(_QWORD *)(v0 + 5208);
  OUTLINED_FUNCTION_39_2();
  OUTLINED_FUNCTION_30_2();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789DE4()
{
  return swift_task_switch();
}

uint64_t sub_247789DF8()
{
  OUTLINED_FUNCTION_50_2();
  swift_release();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789E30()
{
  return swift_task_switch();
}

uint64_t sub_247789E44()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789E74()
{
  return swift_task_switch();
}

uint64_t sub_247789E88()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789EB8()
{
  return swift_task_switch();
}

uint64_t sub_247789ECC()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789EFC()
{
  return swift_task_switch();
}

uint64_t sub_247789F10()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789F40()
{
  return swift_task_switch();
}

uint64_t sub_247789F54()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789F84()
{
  return swift_task_switch();
}

uint64_t sub_247789F98()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_247789FC8()
{
  return swift_task_switch();
}

uint64_t sub_247789FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v1 = *(_QWORD *)(v0 + 5480);
  v2 = *(_QWORD *)(v0 + 5448);
  v3 = *(_QWORD *)(v0 + 5432);
  v4 = *(_QWORD *)(v0 + 5416);
  v8 = *(_QWORD *)(v0 + 5376);
  v9 = *(_QWORD *)(v0 + 5400);
  v5 = *(_QWORD *)(v0 + 5360);
  v10 = *(_QWORD *)(v0 + 5464);
  v6 = *(_QWORD **)(v0 + 5240);
  swift_release();
  OUTLINED_FUNCTION_17();
  swift_release();
  swift_release();
  OUTLINED_FUNCTION_88();
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_338();
  swift_release();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_27_2();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  *v6 = v9;
  v6[1] = v5;
  v6[2] = v4;
  v6[3] = v1;
  v6[4] = v3;
  v6[5] = v2;
  v6[6] = v10;
  v6[7] = v8;
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24778A124()
{
  return swift_task_switch();
}

uint64_t sub_24778A138()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A168()
{
  return swift_task_switch();
}

uint64_t sub_24778A17C()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A1AC()
{
  return swift_task_switch();
}

uint64_t sub_24778A1C0()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A1F0()
{
  return swift_task_switch();
}

uint64_t sub_24778A204()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A234()
{
  return swift_task_switch();
}

uint64_t sub_24778A248()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A278()
{
  return swift_task_switch();
}

uint64_t sub_24778A28C()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A2BC()
{
  return swift_task_switch();
}

uint64_t sub_24778A2D0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_314();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_17();
  sub_24778C16C(0);
  return OUTLINED_FUNCTION_71(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24778A338()
{
  OUTLINED_FUNCTION_50_2();
  swift_release();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A370()
{
  return swift_task_switch();
}

uint64_t sub_24778A384()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A3B4()
{
  return swift_task_switch();
}

uint64_t sub_24778A3C8()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A3F8()
{
  return swift_task_switch();
}

uint64_t sub_24778A40C()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A43C()
{
  return swift_task_switch();
}

uint64_t sub_24778A450()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A480()
{
  return swift_task_switch();
}

uint64_t sub_24778A494()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A4C4()
{
  return swift_task_switch();
}

uint64_t sub_24778A4D8()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A508()
{
  return swift_task_switch();
}

uint64_t sub_24778A51C()
{
  uint64_t v0;

  OUTLINED_FUNCTION_314();
  swift_release();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_51_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_41_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_17();
  sub_24778C16C(0);
  return OUTLINED_FUNCTION_71(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24778A58C()
{
  return swift_task_switch();
}

uint64_t sub_24778A5A0()
{
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_24778A5D8()
{
  return swift_task_switch();
}

uint64_t sub_24778A5EC()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A61C()
{
  return swift_task_switch();
}

uint64_t sub_24778A630()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A660()
{
  return swift_task_switch();
}

uint64_t sub_24778A674()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A6A4()
{
  return swift_task_switch();
}

uint64_t sub_24778A6B8()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A6E8()
{
  return swift_task_switch();
}

uint64_t sub_24778A6FC()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A72C()
{
  return swift_task_switch();
}

uint64_t sub_24778A740()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A770()
{
  return swift_task_switch();
}

uint64_t sub_24778A784()
{
  uint64_t (*v0)(void);

  swift_release();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_42_0((uint64_t)&unk_2576C28E8);
  return OUTLINED_FUNCTION_25_3(v0);
}

uint64_t sub_24778A80C()
{
  return swift_task_switch();
}

uint64_t sub_24778A820()
{
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_24778A858()
{
  return swift_task_switch();
}

uint64_t sub_24778A86C()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A89C()
{
  return swift_task_switch();
}

uint64_t sub_24778A8B0()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A8E0()
{
  return swift_task_switch();
}

uint64_t sub_24778A8F4()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A924()
{
  return swift_task_switch();
}

uint64_t sub_24778A938()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A968()
{
  return swift_task_switch();
}

uint64_t sub_24778A97C()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A9AC()
{
  return swift_task_switch();
}

uint64_t sub_24778A9C0()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778A9F0()
{
  return swift_task_switch();
}

uint64_t sub_24778AA04()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_111();
  swift_release();
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_42_0((uint64_t)&unk_2576C28E8);
  return OUTLINED_FUNCTION_57(v0);
}

uint64_t sub_24778AA90()
{
  return swift_task_switch();
}

uint64_t sub_24778AAA4()
{
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_24778AADC()
{
  return swift_task_switch();
}

uint64_t sub_24778AAF0()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AB20()
{
  return swift_task_switch();
}

uint64_t sub_24778AB34()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AB64()
{
  return swift_task_switch();
}

uint64_t sub_24778AB78()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778ABA8()
{
  return swift_task_switch();
}

uint64_t sub_24778ABBC()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778ABEC()
{
  return swift_task_switch();
}

uint64_t sub_24778AC00()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AC30()
{
  return swift_task_switch();
}

uint64_t sub_24778AC44()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AC74()
{
  return swift_task_switch();
}

uint64_t sub_24778AC88()
{
  uint64_t v0;

  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_88();
  swift_release();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_17();
  sub_24778C16C((uint64_t)&unk_2576C28E8);
  return OUTLINED_FUNCTION_25_3(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24778AD1C()
{
  return swift_task_switch();
}

uint64_t sub_24778AD30()
{
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_24778AD68()
{
  return swift_task_switch();
}

uint64_t sub_24778AD7C()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778ADAC()
{
  return swift_task_switch();
}

uint64_t sub_24778ADC0()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778ADF0()
{
  return swift_task_switch();
}

uint64_t sub_24778AE04()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AE34()
{
  return swift_task_switch();
}

uint64_t sub_24778AE48()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AE78()
{
  return swift_task_switch();
}

uint64_t sub_24778AE8C()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AEBC()
{
  return swift_task_switch();
}

uint64_t sub_24778AED0()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778AF00()
{
  return swift_task_switch();
}

uint64_t sub_24778AF14()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_88();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_42_0((uint64_t)&unk_2576C28E8);
  return OUTLINED_FUNCTION_25_3(v0);
}

uint64_t sub_24778AFA8()
{
  return swift_task_switch();
}

uint64_t sub_24778AFBC()
{
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_24778AFF4()
{
  return swift_task_switch();
}

uint64_t sub_24778B008()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B038()
{
  return swift_task_switch();
}

uint64_t sub_24778B04C()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B07C()
{
  return swift_task_switch();
}

uint64_t sub_24778B090()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B0C0()
{
  return swift_task_switch();
}

uint64_t sub_24778B0D4()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B104()
{
  return swift_task_switch();
}

uint64_t sub_24778B118()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B148()
{
  return swift_task_switch();
}

uint64_t sub_24778B15C()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B18C()
{
  return swift_task_switch();
}

uint64_t sub_24778B1A0()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_111();
  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_88();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_42_0((uint64_t)&unk_2576C28E8);
  return OUTLINED_FUNCTION_57(v0);
}

uint64_t sub_24778B238()
{
  return swift_task_switch();
}

uint64_t sub_24778B24C()
{
  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_13_3();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_7_4();
}

uint64_t sub_24778B284()
{
  return swift_task_switch();
}

uint64_t sub_24778B298()
{
  OUTLINED_FUNCTION_12_1();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B2C8()
{
  return swift_task_switch();
}

uint64_t sub_24778B2DC()
{
  OUTLINED_FUNCTION_8_4();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B30C()
{
  return swift_task_switch();
}

uint64_t sub_24778B320()
{
  OUTLINED_FUNCTION_3_6();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B350()
{
  return swift_task_switch();
}

uint64_t sub_24778B364()
{
  OUTLINED_FUNCTION_11_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B394()
{
  return swift_task_switch();
}

uint64_t sub_24778B3A8()
{
  OUTLINED_FUNCTION_9_2();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B3D8()
{
  return swift_task_switch();
}

uint64_t sub_24778B3EC()
{
  OUTLINED_FUNCTION_10_3();
  OUTLINED_FUNCTION_1_5();
  return OUTLINED_FUNCTION_0_8();
}

uint64_t sub_24778B41C()
{
  return swift_task_switch();
}

uint64_t sub_24778B430()
{
  uint64_t (*v0)(void);

  OUTLINED_FUNCTION_31_2();
  OUTLINED_FUNCTION_17();
  OUTLINED_FUNCTION_88();
  swift_release();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_338();
  swift_release();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_45_1();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  OUTLINED_FUNCTION_19_2();
  OUTLINED_FUNCTION_27_2();
  OUTLINED_FUNCTION_338();
  OUTLINED_FUNCTION_15_1();
  OUTLINED_FUNCTION_8_0();
  v0 = (uint64_t (*)(void))OUTLINED_FUNCTION_42_0((uint64_t)&unk_2576C28E8);
  return v0();
}

uint64_t sub_24778B4F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_2478B7028();
  if (__swift_getEnumTagSinglePayload(a1, 1, v6) == 1)
  {
    sub_24778BD3C(a1, (uint64_t (*)(_QWORD))sub_247789098);
  }
  else
  {
    sub_2478B701C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(a1, v6);
  }
  if (*(_QWORD *)(a3 + 16))
  {
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_2478B7010();
    swift_unknownObjectRelease();
  }
  v7 = swift_allocObject();
  *(_QWORD *)(v7 + 16) = a2;
  *(_QWORD *)(v7 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_24778B634(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for AccountManager(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_2477699BC();
}

uint64_t sub_24778B6E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_6();
  if (v1)
    return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = v0;
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24778B728(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ContentManager(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_2477698C8();
}

uint64_t sub_24778B7D8(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for DigitalRightsManager(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_247755718();
}

uint64_t sub_24778B888(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for MetricsManager(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_247754A1C();
}

uint64_t sub_24778B938(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Renderer(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_2477691B4();
}

uint64_t sub_24778B9E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for SessionManager(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_247755310();
}

uint64_t sub_24778BA98(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for ErrorResolver(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778BB48;
  return sub_24778E0C4();
}

uint64_t sub_24778BB48()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  OUTLINED_FUNCTION_2_6();
  if (v1)
    return OUTLINED_FUNCTION_10_1(*(uint64_t (**)(void))(v3 + 8));
  *(_QWORD *)(v2 + 32) = v0;
  OUTLINED_FUNCTION_17_1();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24778BB8C()
{
  uint64_t v0;

  **(_QWORD **)(v0 + 16) = *(_QWORD *)(v0 + 32);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24778BBA4(uint64_t a1)
{
  uint64_t v1;
  uint64_t AssociatedTypeWitness;
  uint64_t AssociatedConformanceWitness;
  uint64_t v4;
  _QWORD *v5;

  *(_QWORD *)(v1 + 16) = a1;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  type metadata accessor for Publisher(0, AssociatedTypeWitness, AssociatedConformanceWitness, v4);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 24) = v5;
  *v5 = v1;
  v5[1] = sub_24778B6E4;
  return sub_247781124();
}

uint64_t PlaybackEngine.deinit()
{
  uint64_t v0;

  sub_24778BD3C(v0 + 16, (uint64_t (*)(_QWORD))sub_24778BC78);
  return v0;
}

void sub_24778BC78()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C2848)
  {
    sub_247758170(255, &qword_2576C2850);
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C2848);
  }
}

uint64_t PlaybackEngine.__deallocating_deinit()
{
  uint64_t v0;

  sub_24778BD3C(v0 + 16, (uint64_t (*)(_QWORD))sub_24778BC78);
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PlaybackEngine()
{
  return objc_opt_self();
}

uint64_t method lookup function for PlaybackEngine()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PlaybackEngine.__allocating_init<A>(configuration:specification:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_24778BD3C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v3;

  v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_24778BD78(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24778BDDC;
  return v6(a1);
}

uint64_t sub_24778BDDC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24778BE04()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24778BE28()
{
  uint64_t v0;
  int *v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD *v4;

  OUTLINED_FUNCTION_492();
  v3 = swift_task_alloc();
  v4 = (_QWORD *)OUTLINED_FUNCTION_78(v3);
  *v4 = v2;
  v4[1] = sub_247768144;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_2576C2858 + dword_2576C2858))(v0, v1);
}

uint64_t type metadata accessor for PlaybackEngine.Components(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PlaybackEngine.Components);
}

uint64_t sub_24778BE9C()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24778BEF8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  sub_24778BC78();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_24778BF40()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778B634(v2);
}

uint64_t sub_24778BF90()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778B728(v2);
}

uint64_t sub_24778BFE0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778B7D8(v2);
}

uint64_t sub_24778C030()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778B888(v2);
}

uint64_t sub_24778C080()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778B938(v2);
}

uint64_t sub_24778C0D0()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778B9E8(v2);
}

uint64_t sub_24778C120()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778BA98(v2);
}

uint64_t sub_24778C16C(uint64_t result)
{
  if (result)
    return swift_release();
  return result;
}

uint64_t sub_24778C180()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;

  OUTLINED_FUNCTION_492();
  v0 = swift_task_alloc();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_184_0(v1);
  return sub_24778BBA4(v2);
}

uint64_t sub_24778C1CC()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t sub_24778C1D4()
{
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

_QWORD *sub_24778C22C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

_QWORD *sub_24778C2C0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  swift_retain();
  swift_release();
  a1[4] = a2[4];
  swift_retain();
  swift_release();
  a1[5] = a2[5];
  swift_retain();
  swift_release();
  a1[6] = a2[6];
  swift_retain();
  swift_release();
  a1[7] = a2[7];
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy64_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

_OWORD *sub_24778C3C0(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_release();
  swift_release();
  a1[1] = a2[1];
  swift_release();
  swift_release();
  a1[2] = a2[2];
  swift_release();
  swift_release();
  a1[3] = a2[3];
  swift_release();
  return a1;
}

uint64_t sub_24778C444(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 64))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24778C484(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 64) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 64) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t OUTLINED_FUNCTION_0_8()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_1_5()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_2_6()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;

  v2 = (_QWORD *)(v1 - 8);
  *v2 = *v0;
  *v2 = *v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_3_6()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_6_5()
{
  return swift_deallocObject();
}

uint64_t OUTLINED_FUNCTION_7_4()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_8_4()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_9_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_10_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_11_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_12_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_13_3()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_14_3()
{
  return swift_asyncLet_get_throwing();
}

uint64_t OUTLINED_FUNCTION_15_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_18_1()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_19_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_20_2()
{
  return swift_getAssociatedConformanceWitness();
}

uint64_t OUTLINED_FUNCTION_25_3(uint64_t (*a1)(void))
{
  return a1();
}

uint64_t OUTLINED_FUNCTION_27_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_29_2()
{
  return 255;
}

uint64_t OUTLINED_FUNCTION_30_2()
{
  uint64_t v0;

  return v0;
}

uint64_t OUTLINED_FUNCTION_31_2()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_35_2()
{
  return swift_asyncLet_begin();
}

uint64_t OUTLINED_FUNCTION_39_2()
{
  return swift_retain_n();
}

uint64_t OUTLINED_FUNCTION_40_1(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 + 16) = v2;
  *(_QWORD *)(a1 + 24) = v1;
  return swift_retain();
}

uint64_t OUTLINED_FUNCTION_41_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_42_0(uint64_t a1)
{
  uint64_t v1;

  sub_24778C16C(a1);
  return *(_QWORD *)(v1 + 8);
}

uint64_t OUTLINED_FUNCTION_45_1()
{
  return swift_release();
}

uint64_t OUTLINED_FUNCTION_46_1()
{
  return swift_asyncLet_finish();
}

uint64_t OUTLINED_FUNCTION_51_2()
{
  return swift_release();
}

uint64_t ContentRegistrationStorageOperations.registration(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  OUTLINED_FUNCTION_20_3();
  v12 = v11;
  v14 = v13;
  v10[2] = OUTLINED_FUNCTION_43();
  v10[3] = OUTLINED_FUNCTION_40();
  v15 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  v10[4] = v15;
  v16 = OUTLINED_FUNCTION_36_1(v15);
  return OUTLINED_FUNCTION_3_7(v16, v17, 0, v14, v12, a10);
}

uint64_t sub_24778C7BC()
{
  OUTLINED_FUNCTION_10_4();
  sub_247754E48();
  OUTLINED_FUNCTION_22_3();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24778C80C()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_2477605BC;
  return ContentStorage.withTransaction<A>(named:_:)();
}

uint64_t ContentStorage.withTransaction<A>(named:_:)()
{
  _QWORD *v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v0[2] = OUTLINED_FUNCTION_43();
  v0[3] = OUTLINED_FUNCTION_40();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  v0[4] = v1;
  v2 = OUTLINED_FUNCTION_31_3(v1);
  return v4(v2);
}

uint64_t sub_24778C938()
{
  OUTLINED_FUNCTION_10_4();
  sub_247754E48();
  OUTLINED_FUNCTION_22_3();
  return OUTLINED_FUNCTION_0_3();
}

uint64_t sub_24778C988()
{
  uint64_t v0;

  OUTLINED_FUNCTION_497();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24778C9B0()
{
  uint64_t v0;

  OUTLINED_FUNCTION_497();
  return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v0 + 8));
}

uint64_t _EmptyQualifier.qualify(raw:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_43();
  v3 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_34_3(v3);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24778CA20()
{
  uint64_t v0;
  uint64_t v1;

  swift_release();
  swift_getAssociatedTypeWitness();
  v1 = sub_2478B6F8C();
  return OUTLINED_FUNCTION_1_0(v1, *(uint64_t (**)(void))(v0 + 8));
}

uint64_t _EmptyQualifier.requalify(previously:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_QWORD *)(v2 + 16) = a2;
  OUTLINED_FUNCTION_43();
  v3 = OUTLINED_FUNCTION_40();
  OUTLINED_FUNCTION_34_3(v3);
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24778CAB8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24778DAE8;
  return _EmptyQualifier.qualify(raw:)((uint64_t)v4, a2);
}

uint64_t sub_24778CB04(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_24778DAE8;
  return _EmptyQualifier.requalify(previously:)((uint64_t)v4, a2);
}

uint64_t BulkQualifier.init(storage:)@<X0>(uint64_t result@<X0>, _QWORD *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t BulkQualifier.storage.getter()
{
  return sub_2478B6DA0();
}

uint64_t BulkQualifier.storage.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *v1 = a1;
  return result;
}

uint64_t (*BulkQualifier.storage.modify())()
{
  return nullsub_1;
}

uint64_t BulkQualifier.qualify(raw:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;

  v3[3] = a1;
  v3[4] = a2;
  v3[5] = *v2;
  OUTLINED_FUNCTION_43();
  v3[6] = OUTLINED_FUNCTION_40();
  sub_247754E48();
  OUTLINED_FUNCTION_6_0();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return OUTLINED_FUNCTION_2_0();
}

uint64_t sub_24778CBEC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t AssociatedConformanceWitness;
  uint64_t v6;

  v1 = *(_QWORD *)(v0 + 40);
  v2 = *(_QWORD *)(v0 + 24);
  swift_release();
  v3 = OUTLINED_FUNCTION_30_3();
  OUTLINED_FUNCTION_30_3();
  v4 = sub_2478B6FEC();
  swift_getAssociatedConformanceWitness();
  AssociatedConformanceWitness = swift_getAssociatedConformanceWitness();
  MEMORY[0x2495827BC](v2, v1, v3, v4, *(_QWORD *)(AssociatedConformanceWitness + 8));
  v6 = *(_QWORD *)(v0 + 16);
  if (!v6)
    v6 = sub_2478B6F8C();
  return (*(uint64_t (**)(uint64_t))(v0 + 8))(v6);
}

uint64_t sub_24778CCF0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;

  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_24778CD4C;
  return BulkQualifier.qualify(raw:)(a1, a2);
}

uint64_t sub_24778CD4C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v4 = OUTLINED_FUNCTION_0_0();
  if (!v1)
    v4 = a1;
  return OUTLINED_FUNCTION_7_5(v4, *(uint64_t (**)(void))(v2 + 8));
}

_QWORD *TransformingQualifier.init(transform:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  _QWORD *result;

  result = (_QWORD *)swift_allocObject();
  result[2] = a3;
  result[3] = a4;
  result[4] = a1;
  result[5] = a2;
  *a5 = &unk_2576C29A0;
  a5[1] = result;
  return result;
}

uint64_t sub_24778CDE0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v2;
  uint64_t v3;

  v3 = a2();
  return sub_24778DAC4(*(uint64_t (**)(uint64_t))(v2 + 8), v2, v3);
}

uint64_t sub_24778CE1C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v5 = a3 + a2;
  v7 = *a1;
  v6 = a1[1];
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v5 - 16);
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  *a4 = &unk_2576C2BF0;
  a4[1] = v8;
  return swift_retain();
}

uint64_t sub_24778CE78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v3;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  *(_QWORD *)(v3 + 16) = a1;
  v7 = (uint64_t (*)(uint64_t))((char *)a3 + *a3);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 24) = v5;
  *v5 = v3;
  v5[1] = sub_24778CEDC;
  return v7(a2);
}

uint64_t sub_24778CEDC(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v4;
  uint64_t v6;

  v4 = *v2;
  v6 = *v2;
  OUTLINED_FUNCTION_513(&v6);
  if (!v1)
    **(_QWORD **)(v4 + 16) = a1;
  return ((uint64_t (*)(void))v2[1])();
}

uint64_t sub_24778CF30(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;

  v5 = a4 + a3;
  v7 = *a1;
  v6 = a1[1];
  v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = *(_OWORD *)(v5 - 16);
  *(_QWORD *)(v8 + 32) = v7;
  *(_QWORD *)(v8 + 40) = v6;
  swift_retain();
  result = swift_release();
  *a2 = &unk_2576C2BE0;
  a2[1] = v8;
  return result;
}

uint64_t sub_24778CFA8(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t, uint64_t);

  v6 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 24) = v4;
  *v4 = v2;
  v4[1] = sub_24778D018;
  return v6(v2 + 16, a1);
}

uint64_t sub_24778D018()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v4;

  v2 = *v1;
  v4 = *v1;
  OUTLINED_FUNCTION_513(&v4);
  if (v0)
    return ((uint64_t (*)(void))v1[1])();
  else
    return OUTLINED_FUNCTION_7_5(*(_QWORD *)(v2 + 16), (uint64_t (*)(void))v1[1]);
}

uint64_t TransformingQualifier.transform.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_retain();
  return v1;
}

uint64_t TransformingQualifier.transform.setter(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t result;

  result = swift_release();
  *v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t (*TransformingQualifier.transform.modify())()
{
  return nullsub_1;
}

uint64_t TransformingQualifier.qualify(raw:)(uint64_t a1)
{
  int **v1;
  _QWORD *v2;
  int *v4;
  _QWORD *v5;
  uint64_t (*v7)(uint64_t);

  v4 = *v1;
  v2[2] = OUTLINED_FUNCTION_43();
  v2[3] = OUTLINED_FUNCTION_40();
  v7 = (uint64_t (*)(uint64_t))((char *)v4 + *v4);
  v5 = (_QWORD *)swift_task_alloc();
  v2[4] = v5;
  *v5 = v2;
  v5[1] = sub_24778D158;
  return v7(a1);
}

uint64_t sub_24778D158()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  OUTLINED_FUNCTION_314();
  v3 = v2;
  v4 = *v1;
  *(_QWORD *)(*v1 + 40) = v0;
  swift_task_dealloc();
  if (!v0)
    *(_QWORD *)(v4 + 48) = v3;
  sub_247754E48();
  OUTLINED_FUNCTION_22_3();
  OUTLINED_FUNCTION_126();
  OUTLINED_FUNCTION_84();
  return swift_task_switch();
}

uint64_t sub_24778D1EC()
{
  uint64_t v0;

  OUTLINED_FUNCTION_497();
  return OUTLINED_FUNCTION_1_0(*(_QWORD *)(v0 + 48), *(uint64_t (**)(void))(v0 + 8));
}

uint64_t sub_24778D218()
{
  uint64_t v0;

  OUTLINED_FUNCTION_497();
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_24778D248(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_24778DAE8;
  return TransformingQualifier.qualify(raw:)(a1);
}

uint64_t sub_24778D294()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_24778D2B8()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_17_3(v1, (uint64_t)sub_24778D308);
  return OUTLINED_FUNCTION_13_4(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_24778D308(uint64_t a1)
{
  uint64_t v1;

  OUTLINED_FUNCTION_0_0();
  return OUTLINED_FUNCTION_7_5(a1, *(uint64_t (**)(void))(v1 + 8));
}

uint64_t sub_24778D33C()
{
  return 16;
}

__n128 sub_24778D348(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a1;
  *a2 = *a1;
  return result;
}

uint64_t dispatch thunk of ContentSystem.storage.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

uint64_t dispatch thunk of ContentSystem.planner.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ContentSystem.qualify(rawIdentifiers:_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_186();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_93(v1, (uint64_t)sub_247768144);
  return OUTLINED_FUNCTION_3_7(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of ContentStorage.withOperations<A>(_:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_142();
  v0 = OUTLINED_FUNCTION_9_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_73(v1);
  return OUTLINED_FUNCTION_58(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of ContentStorage.withTransaction<A>(named:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v17;
  _QWORD *v18;
  uint64_t (*v20)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  v17 = OUTLINED_FUNCTION_9_1();
  v18 = (_QWORD *)OUTLINED_FUNCTION_78(v17);
  *v18 = v8;
  v18[1] = sub_247768144;
  return v20(a1, a2, a3, a4, a5, a6, a7, a8);
}

uint64_t dispatch thunk of ContentSourceStorage.init<A>(storage:for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t (*v4)(uint64_t);

  v0 = OUTLINED_FUNCTION_7_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_31_3(v1);
  return v4(v2);
}

uint64_t dispatch thunk of ContentSource.qualifier(for:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_12_2();
  v1 = OUTLINED_FUNCTION_9_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_78(v1);
  *v2 = v0;
  v2[1] = sub_247768144;
  OUTLINED_FUNCTION_9_3();
  return OUTLINED_FUNCTION_14_4(v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of ContentSource.requalifier(for:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_12_2();
  v1 = OUTLINED_FUNCTION_9_1();
  v2 = (_QWORD *)OUTLINED_FUNCTION_78(v1);
  *v2 = v0;
  v2[1] = sub_247768144;
  OUTLINED_FUNCTION_9_3();
  return OUTLINED_FUNCTION_14_4(v3, v4, v5, v6, v7);
}

uint64_t sub_24778D5A8()
{
  return swift_allocateGenericValueMetadata();
}

uint64_t type metadata accessor for _EmptyQualifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _EmptyQualifier);
}

uint64_t type metadata accessor for BulkQualifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for BulkQualifier);
}

_QWORD *sub_24778D5C8(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  return a1;
}

uint64_t sub_24778D5F4()
{
  return swift_release();
}

_QWORD *sub_24778D5FC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_release();
  return a1;
}

__n128 __swift_memcpy16_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  *a1 = *a2;
  return result;
}

_OWORD *sub_24778D640(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t sub_24778D670(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *((_BYTE *)a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *a1;
      if ((unint64_t)*a1 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_24778D6B0(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

uint64_t type metadata accessor for TransformingQualifier(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for TransformingQualifier);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.firstContentID(matching:in:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void);

  OUTLINED_FUNCTION_142();
  v0 = OUTLINED_FUNCTION_9_1();
  v1 = (_QWORD *)OUTLINED_FUNCTION_78(v0);
  v2 = OUTLINED_FUNCTION_73(v1);
  return OUTLINED_FUNCTION_58(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.validateContent(id:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v7 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_247768144;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.registerContent(_:in:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_186();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_93(v1, (uint64_t)sub_247768144);
  return OUTLINED_FUNCTION_3_7(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.registration(for:followRedirect:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(void))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;

  OUTLINED_FUNCTION_20_3();
  v11 = v10;
  v13 = v12;
  v15 = v14;
  v16 = OUTLINED_FUNCTION_7_1();
  v17 = (_QWORD *)OUTLINED_FUNCTION_78(v16);
  v18 = OUTLINED_FUNCTION_36_1(v17);
  return OUTLINED_FUNCTION_3_7(v18, v19, v15, v13, v11, a10);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.registrations(for:followRedirect:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_12_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24778DAF4;
  OUTLINED_FUNCTION_9_3();
  return OUTLINED_FUNCTION_14_4(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.relateContent(ids:to:as:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_186();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_93(v1, (uint64_t)sub_247768144);
  return OUTLINED_FUNCTION_3_7(v2, v3, v4, v5, v6, v7);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.hasRelatedContent(for:as:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_12_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247755130;
  OUTLINED_FUNCTION_9_3();
  return OUTLINED_FUNCTION_14_4(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.relatedContent(to:as:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_12_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24778DAF4;
  OUTLINED_FUNCTION_9_3();
  return OUTLINED_FUNCTION_14_4(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.removeContent(id:removeRelationships:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)(void);

  OUTLINED_FUNCTION_314();
  OUTLINED_FUNCTION_12_2();
  v1 = (_QWORD *)OUTLINED_FUNCTION_9_1();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247768144;
  OUTLINED_FUNCTION_9_3();
  return OUTLINED_FUNCTION_14_4(v2, v3, v4, v5, v6);
}

uint64_t dispatch thunk of ContentRegistrationStorageOperations.updateDebugDescription(_:for:)()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  OUTLINED_FUNCTION_20_3();
  OUTLINED_FUNCTION_186();
  v1 = (_QWORD *)OUTLINED_FUNCTION_7_1();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_93(v1, (uint64_t)sub_247768144);
  return OUTLINED_FUNCTION_3_7(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_24778D9E4()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)(void);

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  v2 = OUTLINED_FUNCTION_17_3(v1, (uint64_t)sub_24778DAF4);
  return OUTLINED_FUNCTION_13_4(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_24778DA34(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  int *v6;
  uint64_t v7;
  _QWORD *v8;

  v6 = *(int **)(v2 + 32);
  v7 = swift_task_alloc();
  v8 = (_QWORD *)OUTLINED_FUNCTION_78(v7);
  *v8 = v3;
  v8[1] = sub_2477605BC;
  return ((uint64_t (*)(uint64_t, uint64_t, int *))((char *)&dword_2576C2BE8 + dword_2576C2BE8))(a1, a2, v6);
}

uint64_t sub_24778DAC4(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t OUTLINED_FUNCTION_3_7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_7_5(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t OUTLINED_FUNCTION_10_4()
{
  uint64_t v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;

  v3 = *v1;
  v4 = (uint64_t *)(v2 - 8);
  *v4 = *v1;
  *v4 = *v1;
  *(_QWORD *)(v3 + 40) = v0;
  return swift_task_dealloc();
}

uint64_t OUTLINED_FUNCTION_13_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void))
{
  return a6();
}

uint64_t OUTLINED_FUNCTION_14_4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  return a5();
}

uint64_t OUTLINED_FUNCTION_17_3@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  *a1 = v3;
  a1[1] = a2;
  return v2;
}

uint64_t OUTLINED_FUNCTION_22_3()
{
  return sub_2478B7010();
}

uint64_t OUTLINED_FUNCTION_30_3()
{
  return swift_getAssociatedTypeWitness();
}

uint64_t OUTLINED_FUNCTION_31_3(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

unint64_t OUTLINED_FUNCTION_34_3(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return sub_247754E48();
}

uint64_t OUTLINED_FUNCTION_36_1(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  *a1 = v2;
  a1[1] = v1;
  return v3;
}

unint64_t static SonicEntitlementError.domainName.getter()
{
  return 0xD000000000000015;
}

SonicKit::SonicEntitlementError_optional __swiftcall SonicEntitlementError.init(rawValue:)(Swift::Int rawValue)
{
  char *v1;
  char v2;

  v2 = 3;
  if ((unint64_t)rawValue < 3)
    v2 = rawValue;
  *v1 = v2;
  return (SonicKit::SonicEntitlementError_optional)rawValue;
}

uint64_t SonicEntitlementError.rawValue.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

unint64_t sub_24778DC5C()
{
  unint64_t result;

  result = qword_2576C2BF8;
  if (!qword_2576C2BF8)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for SonicEntitlementError, &type metadata for SonicEntitlementError);
    atomic_store(result, (unint64_t *)&qword_2576C2BF8);
  }
  return result;
}

void sub_24778DC98()
{
  sub_24778EE34();
}

SonicKit::SonicEntitlementError_optional sub_24778DCA0(Swift::Int *a1)
{
  return SonicEntitlementError.init(rawValue:)(*a1);
}

uint64_t sub_24778DCA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = SonicEntitlementError.rawValue.getter();
  *a1 = result;
  return result;
}

unint64_t sub_24778DCD0()
{
  unint64_t result;

  result = qword_2576C2C00;
  if (!qword_2576C2C00)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for SonicEntitlementError, &type metadata for SonicEntitlementError);
    atomic_store(result, (unint64_t *)&qword_2576C2C00);
  }
  return result;
}

unint64_t sub_24778DD0C()
{
  static SonicEntitlementError.domainName.getter();
  return 0xD000000000000015;
}

uint64_t getEnumTagSinglePayload for SonicEntitlementError(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFE)
  {
    if (a2 + 2 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 2) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 3;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 3;
  v5 = v6 - 3;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for SonicEntitlementError(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_24778DDFC + 4 * byte_2478B99B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_24778DE30 + 4 * asc_2478B99B0[v4]))();
}

uint64_t sub_24778DE30(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_24778DE38(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x24778DE40);
  return result;
}

uint64_t sub_24778DE4C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x24778DE54);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_24778DE58(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_24778DE60(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for SonicEntitlementError()
{
  return &type metadata for SonicEntitlementError;
}

uint64_t Never.init(configuration:)()
{
  return swift_task_switch();
}

void sub_24778DE90()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_3_8();
}

uint64_t static Never.createBehavior()()
{
  sub_2478B6C5C();
  sub_2478B6C50();
  sub_247754E48();
  sub_2478B7010();
  return swift_task_switch();
}

void sub_24778DF4C()
{
  OUTLINED_FUNCTION_2_7();
  OUTLINED_FUNCTION_3_8();
}

_UNKNOWN **sub_24778DFA4()
{
  return &protocol witness table for Never;
}

uint64_t sub_24778DFB0()
{
  uint64_t v0;
  _QWORD *v1;

  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_24778DFF4;
  return static Never.createBehavior()();
}

uint64_t sub_24778DFF4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t result;

  result = OUTLINED_FUNCTION_0_0();
  if (v0)
    return OUTLINED_FUNCTION_3_2(*(uint64_t (**)(void))(v1 + 8));
  return result;
}

uint64_t dispatch thunk of static EngineComponentSpecification.createBehavior()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  _QWORD *v7;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(**(int **)(a3 + 24) + *(_QWORD *)(a3 + 24));
  v7 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v3 + 16) = v7;
  *v7 = v3;
  v7[1] = sub_2477605BC;
  return v9(a1, a2, a3);
}

uint64_t OUTLINED_FUNCTION_2_7()
{
  return sub_2478B728C();
}

uint64_t sub_24778E0C4()
{
  uint64_t v0;
  _QWORD *v1;

  swift_allocObject();
  v1 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v0 + 16) = v1;
  *v1 = v0;
  v1[1] = sub_247754A74;
  return sub_247754AC8();
}

uint64_t type metadata accessor for ErrorResolver(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ErrorResolver);
}

uint64_t NSFileManager.sonicContainerURL.getter@<X0>(uint64_t a1@<X8>)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  void *v10;
  id v11;
  void (*v12)(char *, char *, uint64_t);
  uint64_t v14;
  uint64_t v15;
  char v16;

  v15 = a1;
  sub_24778E470(0, &qword_2576C2CB8, MEMORY[0x24BEAF010]);
  MEMORY[0x24BDAC7A8](v2);
  v3 = sub_2478B6BA8();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x24BDAC7A8](v3);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_24778E3E0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = (void *)sub_2478B6E24();
  v11 = objc_msgSend(v1, sel_containerURLForSecurityApplicationGroupIdentifier_, v10);

  if (v11)
  {
    sub_2478B6B9C();

    v12 = *(void (**)(char *, char *, uint64_t))(v4 + 32);
    v12(v9, v6, v3);
    OUTLINED_FUNCTION_321((uint64_t)v9, 0);
    if (__swift_getEnumTagSinglePayload((uint64_t)v9, 1, v3) != 1)
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v12)(v15, v9, v3);
  }
  else
  {
    OUTLINED_FUNCTION_321((uint64_t)v9, 1);
  }
  sub_24778E434((uint64_t)v9);
  sub_24778E3A4();
  sub_2478B6CA4();
  sub_2478B6C98();
  v16 = 1;
  sub_2478B6C68();
  sub_2478B6C98();
  sub_24778E470(0, &qword_2576C2CD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
  sub_24778E4CC();
  swift_allocError();
  sub_2478B6CB0();
  return swift_willThrow();
}

unint64_t sub_24778E3A4()
{
  unint64_t result;

  result = qword_2576C2CC0;
  if (!qword_2576C2CC0)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for SonicEntitlementError, &type metadata for SonicEntitlementError);
    atomic_store(result, (unint64_t *)&qword_2576C2CC0);
  }
  return result;
}

void sub_24778E3E0()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C2CC8)
  {
    sub_2478B6BA8();
    v0 = sub_2478B7148();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C2CC8);
  }
}

uint64_t sub_24778E434(uint64_t a1)
{
  uint64_t v2;

  sub_24778E3E0();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_24778E470(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, unint64_t))
{
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_24778E3A4();
    v7 = a3(a1, &type metadata for SonicEntitlementError, v6);
    if (!v8)
      atomic_store(v7, a2);
  }
}

unint64_t sub_24778E4CC()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C2CD8;
  if (!qword_2576C2CD8)
  {
    sub_24778E470(255, &qword_2576C2CD0, (uint64_t (*)(uint64_t, ValueMetadata *, unint64_t))MEMORY[0x24BEAF028]);
    result = MEMORY[0x24958320C](MEMORY[0x24BEAF030], v1);
    atomic_store(result, (unint64_t *)&qword_2576C2CD8);
  }
  return result;
}

BOOL sub_24778E51C(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

void sub_24778E528()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v0 = sub_2478B6E48();
  v2 = v1;
  if (v0 != sub_2478B6E48() || v2 != v3)
    OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_34_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
}

uint64_t sub_24778E594(char a1, char a2)
{
  BOOL v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  char v8;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 0xD000000000000015;
  else
    v3 = 0xD000000000000012;
  if (v2)
    v4 = 0x80000002478D0640;
  else
    v4 = 0x80000002478D0660;
  if ((a2 & 1) != 0)
    v5 = 0xD000000000000015;
  else
    v5 = 0xD000000000000012;
  if ((a2 & 1) != 0)
    v6 = 0x80000002478D0660;
  else
    v6 = 0x80000002478D0640;
  if (v3 == v5 && v4 == v6)
    v8 = 1;
  else
    v8 = sub_2478B734C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

void sub_24778E638(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24778E6A4(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(unint64_t))((char *)sub_24778E72C + 4 * byte_2478B9C05[a2]))(0xD000000000000012);
}

uint64_t sub_24778E72C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  char v4;

  if (a1 == 0xD000000000000012 && v2 == ((a2 - 32) | 0x8000000000000000))
    v4 = 1;
  else
    v4 = sub_2478B734C();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4 & 1;
}

void sub_24778E7E8()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_2478B6C44();
  v1 = MEMORY[0x24BDAC7A8](v0);
  MEMORY[0x24BDAC7A8](v1);
  OUTLINED_FUNCTION_29_3();
}

void sub_24778E860()
{
  OUTLINED_FUNCTION_29_3();
}

uint64_t sub_24778E868()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char v4;
  void (*v5)(uint64_t, uint64_t);

  sub_247791A90();
  v4 = sub_2478B6E18();
  v5 = *(void (**)(uint64_t, uint64_t))(v3 + 8);
  v5(v0, v1);
  v5(v2, v1);
  return v4 & 1;
}

BOOL sub_24778E8BC(char a1, char a2)
{
  return qword_2478BA210[a1] == qword_2478BA210[a2];
}

BOOL sub_24778E8E0(char a1, char a2)
{
  return a1 == a2;
}

BOOL sub_24778E8F0(char a1, char a2)
{
  return qword_2478BA1C0[a1] == qword_2478BA1C0[a2];
}

uint64_t sub_24778E914(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a1 == a5 && a2 == a6)
    return 1;
  else
    return sub_2478B734C();
}

void sub_24778E938(char a1)
{
  __asm { BR              X10 }
}

uint64_t sub_24778E980(uint64_t a1, unsigned __int8 a2)
{
  return ((uint64_t (*)(uint64_t))((char *)sub_24778E9E8 + 4 * byte_2478B9C0E[a2]))(0x666E692D79616C70);
}

void sub_24778E9E8(uint64_t a1)
{
  uint64_t v1;

  if (a1 != 0x666E692D79616C70 || v1 != 0xE90000000000006FLL)
    OUTLINED_FUNCTION_33_3();
  OUTLINED_FUNCTION_34_0();
  swift_bridgeObjectRelease();
  OUTLINED_FUNCTION_28();
}

void sub_24778EA68()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_46_2(v0);
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EA90()
{
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EAC8()
{
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EAFC()
{
  OUTLINED_FUNCTION_8_5();
  sub_2478B6DA0();
  OUTLINED_FUNCTION_27_3();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EB38()
{
  OUTLINED_FUNCTION_8_5();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

uint64_t sub_24778EB60()
{
  return sub_24778EFA8();
}

uint64_t sub_24778EB6C()
{
  sub_2478B7394();
  sub_24778FAB0();
  sub_2478B6E9C();
  swift_bridgeObjectRelease();
  return sub_2478B73AC();
}

uint64_t sub_24778EBCC()
{
  sub_2478B6E9C();
  return swift_bridgeObjectRelease();
}

void sub_24778EC28(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24778EC70()
{
  sub_2478B6E9C();
  return swift_bridgeObjectRelease();
}

void sub_24778ECFC()
{
  sub_2478B73A0();
  OUTLINED_FUNCTION_12();
}

void sub_24778ED28(uint64_t a1, char a2)
{
  __asm { BR              X10 }
}

uint64_t sub_24778ED60()
{
  sub_2478B6E9C();
  return swift_bridgeObjectRelease();
}

void sub_24778EDC8()
{
  sub_2478B73A0();
  OUTLINED_FUNCTION_12();
}

uint64_t sub_24778EDF4()
{
  sub_2478B6DA0();
  OUTLINED_FUNCTION_27_3();
  return swift_bridgeObjectRelease();
}

void sub_24778EE34()
{
  sub_2478B73A0();
  OUTLINED_FUNCTION_12();
}

void sub_24778EE58()
{
  OUTLINED_FUNCTION_25_4();
  sub_2478B6DA0();
  OUTLINED_FUNCTION_27_3();
  OUTLINED_FUNCTION_34_0();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EE94()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EEC8()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_40_2();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EEF0()
{
  uint64_t v0;

  v0 = OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_46_2(v0);
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

void sub_24778EF18()
{
  OUTLINED_FUNCTION_25_4();
  OUTLINED_FUNCTION_12_3();
  OUTLINED_FUNCTION_4_4();
  OUTLINED_FUNCTION_2_8();
}

uint64_t sub_24778EF4C()
{
  sub_2478B7394();
  sub_24778FAB0();
  sub_2478B6E9C();
  swift_bridgeObjectRelease();
  return sub_2478B73AC();
}

uint64_t sub_24778EFA8()
{
  sub_2478B7394();
  sub_2478B6E9C();
  swift_bridgeObjectRelease();
  return sub_2478B73AC();
}

uint64_t sub_24778F028(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;
  uint64_t v10;

  v2 = sub_2478B70AC();
  v10 = v2;
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    v4 = (uint64_t *)(a1 + 40);
    do
    {
      v5 = *(v4 - 1);
      v6 = *v4;
      sub_2478B6DA0();
      sub_247792554(&v9, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    return v10;
  }
  else
  {
    v7 = v2;
    swift_bridgeObjectRelease();
  }
  return v7;
}

uint64_t BagURL.url(from:account:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t v9;

  v6 = (void *)sub_2478B6E24();
  v7 = objc_msgSend(a1, sel_URLFromURLString_account_, v6, a2);

  if (v7)
  {
    sub_2478B6B9C();

    v8 = 0;
  }
  else
  {
    v8 = 1;
  }
  v9 = sub_2478B6BA8();
  return __swift_storeEnumTagSinglePayload(a3, v8, 1, v9);
}

void BagURL.init(from:)(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v7[4];

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  OUTLINED_FUNCTION_36_2();
  sub_2478B73D0();
  if (!v2)
  {
    __swift_project_boxed_opaque_existential_1(v7, v7[3]);
    OUTLINED_FUNCTION_36_2();
    v4 = sub_2478B7358();
    v6 = v5;
    OUTLINED_FUNCTION_45_2(v4);
    *a2 = v4;
    a2[1] = v6;
  }
  OUTLINED_FUNCTION_16();
  OUTLINED_FUNCTION_24_3();
}

void BagURL.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  _BYTE v2[24];
  uint64_t v3;

  __swift_project_boxed_opaque_existential_1(a1, a1[3]);
  sub_2478B73E8();
  __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v2, v3);
  v1 = sub_2478B7364();
  OUTLINED_FUNCTION_45_2(v1);
  OUTLINED_FUNCTION_24_3();
}

BOOL sub_24778F284(int a1, int a2)
{
  return ((a2 ^ a1) & 1) == 0;
}

uint64_t sub_24778F294()
{
  return sub_2478B73A0();
}

uint64_t sub_24778F2B8(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v7;

  v2 = a1 == 0x746C7561666564 && a2 == 0xE700000000000000;
  if (v2 || (sub_2478B734C() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x694C646572616873 && a2 == 0xEF676E696E657473)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v7 = sub_2478B734C();
    swift_bridgeObjectRelease();
    if ((v7 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_24778F3C8()
{
  return 2;
}

uint64_t sub_24778F3D0()
{
  sub_2478B7394();
  sub_2478B73A0();
  return sub_2478B73AC();
}

uint64_t sub_24778F414(char a1)
{
  if ((a1 & 1) != 0)
    return 0x694C646572616873;
  else
    return 0x746C7561666564;
}

void sub_24778F458()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  _QWORD v11[3];
  uint64_t v12;

  OUTLINED_FUNCTION_9_4();
  v11[2] = v1;
  v12 = v0;
  v11[1] = v2;
  v4 = v3;
  sub_247753C70(0, &qword_2576C2D68, (uint64_t (*)(void))sub_24779160C, (uint64_t)&type metadata for MusicBag.MusicAPIDomains.CodingKeys, MEMORY[0x24BEE3520]);
  v6 = *(_QWORD *)(v5 - 8);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v7);
  v9 = (char *)v11 - v8;
  __swift_project_boxed_opaque_existential_1(v4, v4[3]);
  sub_24779160C();
  sub_2478B73F4();
  v10 = v12;
  sub_2478B7310();
  if (!v10)
    sub_2478B7310();
  OUTLINED_FUNCTION_138_0((uint64_t)v9, *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8));
  OUTLINED_FUNCTION_1_6();
}

uint64_t sub_24778F574()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  OUTLINED_FUNCTION_9_4();
  v2 = (_QWORD *)v1;
  OUTLINED_FUNCTION_22_4(v1, &qword_2576C2D98, (uint64_t (*)(void))sub_24779160C, v3, MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v4);
  v5 = v2[4];
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_24779160C();
  OUTLINED_FUNCTION_47_2();
  sub_2478B73DC();
  if (v0)
  {
    OUTLINED_FUNCTION_16();
  }
  else
  {
    v5 = OUTLINED_FUNCTION_30_4();
    sub_2478B6DA0();
    OUTLINED_FUNCTION_30_4();
    OUTLINED_FUNCTION_16_2();
    OUTLINED_FUNCTION_452();
    OUTLINED_FUNCTION_16();
    OUTLINED_FUNCTION_11_4();
    OUTLINED_FUNCTION_214();
  }
  return v5;
}

uint64_t sub_24778F6C0()
{
  uint64_t v0;
  unsigned int v1;

  v0 = sub_2478B72C8();
  OUTLINED_FUNCTION_34_0();
  if (v0 == 1)
    v1 = 1;
  else
    v1 = 2;
  if (v0)
    return v1;
  else
    return 0;
}

unint64_t sub_24778F710(char a1)
{
  if ((a1 & 1) != 0)
    return 0xD000000000000015;
  else
    return 0xD000000000000012;
}

void sub_24778F74C()
{
  uint64_t *v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  OUTLINED_FUNCTION_9_4();
  v13 = v1;
  v3 = v2;
  sub_247753C70(0, &qword_2576C2D78, (uint64_t (*)(void))sub_247791648, (uint64_t)&unk_2518E3D60, MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v12 - v7;
  v9 = *v0;
  v10 = v0[1];
  v12 = v0[2];
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_247791648();
  sub_2478B73F4();
  v14 = v9;
  v15 = v10;
  sub_2477901A4();
  v11 = v13;
  sub_2478B731C();
  if (!v11)
  {
    v14 = v12;
    OUTLINED_FUNCTION_39_3();
    sub_247767B5C(0, &qword_2576C2D88, (uint64_t)&type metadata for BagURL, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    sub_247791684(&qword_2576C2D90, (uint64_t (*)(void))sub_2477901A4, MEMORY[0x24BEE12A0]);
    OUTLINED_FUNCTION_5_2();
  }
  OUTLINED_FUNCTION_138_0((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_1_6();
}

void sub_24778F8BC()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;

  OUTLINED_FUNCTION_9_4();
  v2 = (_QWORD *)v1;
  v7 = v3;
  OUTLINED_FUNCTION_22_4(v1, &qword_2576C2DA0, (uint64_t (*)(void))sub_247791648, v4, MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_247791648();
  OUTLINED_FUNCTION_47_2();
  sub_2478B73DC();
  if (v0)
  {
    OUTLINED_FUNCTION_16();
  }
  else
  {
    sub_2477905C4();
    OUTLINED_FUNCTION_18_2();
    sub_247767B5C(0, &qword_2576C2D88, (uint64_t)&type metadata for BagURL, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    OUTLINED_FUNCTION_39_3();
    v6 = sub_247791684(&qword_2576C2DA8, (uint64_t (*)(void))sub_2477905C4, MEMORY[0x24BEE12D0]);
    OUTLINED_FUNCTION_242_0();
    OUTLINED_FUNCTION_18_2();
    OUTLINED_FUNCTION_15_2();
    if (v6)
    {
      OUTLINED_FUNCTION_243_0();
      OUTLINED_FUNCTION_16();
    }
    else
    {
      *v7 = v8;
      v7[1] = v9;
      v7[2] = v8;
      OUTLINED_FUNCTION_183_0();
      OUTLINED_FUNCTION_16();
      swift_bridgeObjectRelease();
    }
    OUTLINED_FUNCTION_243_0();
  }
  OUTLINED_FUNCTION_1_6();
}

uint64_t sub_24778FA68()
{
  unint64_t v0;

  v0 = sub_2478B72C8();
  OUTLINED_FUNCTION_34_0();
  if (v0 >= 5)
    return 5;
  else
    return v0;
}

uint64_t sub_24778FAB0()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_31_4();
  return ((uint64_t (*)(uint64_t))((char *)sub_24778FAD4 + 4 * byte_2478B9C1B[v1]))(v0);
}

unint64_t sub_24778FAD4()
{
  return OUTLINED_FUNCTION_28_2();
}

uint64_t sub_24778FAE8()
{
  return 0x747265632D737066;
}

uint64_t sub_24778FB00()
{
  uint64_t v0;
  uint64_t v1;

  v0 = OUTLINED_FUNCTION_31_4();
  return ((uint64_t (*)(uint64_t))((char *)sub_24778FB24 + 4 * byte_2478B9C20[v1]))(v0);
}

unint64_t sub_24778FB24()
{
  return OUTLINED_FUNCTION_28_2();
}

uint64_t sub_24778FB38()
{
  return 0x747265632D737066;
}

void sub_24778FB50(_QWORD *a1@<X0>, uint64_t *a2@<X8>)
{
  BagURL.init(from:)(a1, a2);
}

void sub_24778FB64(_QWORD *a1)
{
  BagURL.encode(to:)(a1);
}

BOOL sub_24778FB78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_24778F284(*a1, *a2);
}

uint64_t sub_24778FB84()
{
  return sub_24778F3D0();
}

uint64_t sub_24778FB8C()
{
  return sub_24778F294();
}

uint64_t sub_24778FB94()
{
  char *v0;

  return sub_24778F414(*v0);
}

uint64_t sub_24778FB9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_24778F2B8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_24778FBC0()
{
  return sub_247751AB8();
}

uint64_t sub_24778FBDC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24778F3C8();
  *a1 = result;
  return result;
}

uint64_t sub_24778FC00()
{
  sub_24779160C();
  return sub_2478B7400();
}

uint64_t sub_24778FC28()
{
  sub_24779160C();
  return sub_2478B740C();
}

uint64_t sub_24778FC50@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  result = sub_24778F574();
  if (!v1)
  {
    *a1 = result;
    a1[1] = v4;
    a1[2] = v5;
    a1[3] = v6;
  }
  return result;
}

void sub_24778FC7C()
{
  sub_24778F458();
}

uint64_t sub_24778FC98(char *a1, char *a2)
{
  return sub_24778E594(*a1, *a2);
}

uint64_t sub_24778FCA4()
{
  return sub_24778EB60();
}

uint64_t sub_24778FCAC()
{
  return sub_24778EBCC();
}

uint64_t sub_24778FCB4()
{
  return sub_24778EFA8();
}

uint64_t sub_24778FCBC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24778F6C0();
  *a1 = result;
  return result;
}

unint64_t sub_24778FCE8@<X0>(unint64_t *a1@<X8>)
{
  char *v1;
  unint64_t result;
  unint64_t v4;

  result = sub_24778F710(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_24778FD10()
{
  char *v0;

  return sub_24778F710(*v0);
}

uint64_t sub_24778FD18@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24778F70C();
  *a1 = result;
  return result;
}

void sub_24778FD3C(_BYTE *a1@<X8>)
{
  *a1 = 2;
}

uint64_t sub_24778FD48()
{
  sub_247791648();
  return sub_2478B7400();
}

uint64_t sub_24778FD70()
{
  sub_247791648();
  return sub_2478B740C();
}

void sub_24778FD98()
{
  sub_24778F8BC();
}

void sub_24778FDAC()
{
  sub_24778F74C();
}

void sub_24778FDC0(char *a1)
{
  sub_24778E638(*a1);
}

uint64_t sub_24778FDCC()
{
  return sub_24778EB6C();
}

void sub_24778FDD4(uint64_t a1)
{
  char *v1;

  sub_24778EC28(a1, *v1);
}

uint64_t sub_24778FDDC()
{
  return sub_24778EF4C();
}

uint64_t sub_24778FDE4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24778FA68();
  *a1 = result;
  return result;
}

uint64_t sub_24778FE10@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_24778FAB0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_24778FE38()
{
  return sub_24778FB00();
}

uint64_t sub_24778FE40@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_24778FAAC();
  *a1 = result;
  return result;
}

void sub_24778FE64(_BYTE *a1@<X8>)
{
  *a1 = 5;
}

void sub_24778FE70(_QWORD *a1@<X8>)
{
  *a1 = &unk_2518E25C0;
}

uint64_t sub_24778FE80()
{
  sub_2477900F0();
  return sub_2478B7400();
}

uint64_t sub_24778FEA8()
{
  sub_2477900F0();
  return sub_2478B740C();
}

void MusicBag.encode(to:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  uint64_t v32;

  OUTLINED_FUNCTION_9_4();
  v29 = v1;
  v3 = v2;
  sub_247753C70(0, &qword_2576C2CE0, (uint64_t (*)(void))sub_2477900F0, (uint64_t)&unk_2518E3C58, MEMORY[0x24BEE3520]);
  v5 = *(_QWORD *)(v4 - 8);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)&v18 - v7;
  v9 = *(_QWORD *)(v0 + 16);
  v27 = *(_QWORD *)(v0 + 24);
  v28 = v9;
  v10 = *(_QWORD *)(v0 + 32);
  v25 = *(_QWORD *)(v0 + 40);
  v26 = v10;
  v11 = *(_QWORD *)(v0 + 48);
  v20 = *(_OWORD *)(v0 + 56);
  v23 = *(_QWORD *)(v0 + 72);
  v24 = v11;
  v12 = *(_QWORD *)(v0 + 80);
  v21 = *(_QWORD *)(v0 + 88);
  v22 = v12;
  v19 = *(_QWORD *)(v0 + 96);
  __swift_project_boxed_opaque_existential_1(v3, v3[3]);
  sub_2477900F0();
  sub_2478B73F4();
  LOBYTE(v30) = 0;
  v13 = v29;
  sub_2478B7310();
  if (!v13)
  {
    v14 = v23;
    v15 = v24;
    v16 = v21;
    v17 = v22;
    v30 = v28;
    *(_QWORD *)&v31 = v27;
    *((_QWORD *)&v31 + 1) = v26;
    v32 = v25;
    OUTLINED_FUNCTION_39_3();
    sub_24779012C();
    OUTLINED_FUNCTION_5_2();
    v30 = v15;
    v31 = v20;
    sub_247790168();
    OUTLINED_FUNCTION_5_2();
    v30 = v14;
    *(_QWORD *)&v31 = v17;
    sub_2477901A4();
    OUTLINED_FUNCTION_5_2();
    v30 = v16;
    *(_QWORD *)&v31 = v19;
    OUTLINED_FUNCTION_5_2();
  }
  OUTLINED_FUNCTION_138_0((uint64_t)v8, *(uint64_t (**)(uint64_t, uint64_t))(v5 + 8));
  OUTLINED_FUNCTION_1_6();
}

unint64_t sub_2477900F0()
{
  unint64_t result;

  result = qword_2576C2CE8;
  if (!qword_2576C2CE8)
  {
    result = MEMORY[0x24958320C](&unk_2478B9F10, &unk_2518E3C58);
    atomic_store(result, (unint64_t *)&qword_2576C2CE8);
  }
  return result;
}

unint64_t sub_24779012C()
{
  unint64_t result;

  result = qword_2576C2CF0;
  if (!qword_2576C2CF0)
  {
    result = MEMORY[0x24958320C](&unk_2478B9EE8, &unk_2518E3BC0);
    atomic_store(result, (unint64_t *)&qword_2576C2CF0);
  }
  return result;
}

unint64_t sub_247790168()
{
  unint64_t result;

  result = qword_2576C2CF8;
  if (!qword_2576C2CF8)
  {
    result = MEMORY[0x24958320C](&unk_2478B9EC0, &unk_2518E3B40);
    atomic_store(result, (unint64_t *)&qword_2576C2CF8);
  }
  return result;
}

unint64_t sub_2477901A4()
{
  unint64_t result;

  result = qword_2576C2D00;
  if (!qword_2576C2D00)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for BagURL, &type metadata for BagURL);
    atomic_store(result, (unint64_t *)&qword_2576C2D00);
  }
  return result;
}

void MusicBag.init(from:)()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  OUTLINED_FUNCTION_9_4();
  v2 = (_QWORD *)v1;
  v12 = v3;
  OUTLINED_FUNCTION_22_4(v1, &qword_2576C2D08, (uint64_t (*)(void))sub_2477900F0, v4, MEMORY[0x24BEE33E0]);
  OUTLINED_FUNCTION_169_0();
  MEMORY[0x24BDAC7A8](v5);
  __swift_project_boxed_opaque_existential_1(v2, v2[3]);
  sub_2477900F0();
  sub_2478B73DC();
  if (v0)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  }
  else
  {
    LOBYTE(v13) = 0;
    v6 = sub_2478B72E0();
    v8 = v7;
    OUTLINED_FUNCTION_39_3();
    v9 = sub_24779054C();
    OUTLINED_FUNCTION_452();
    OUTLINED_FUNCTION_35_3();
    OUTLINED_FUNCTION_18_2();
    v10 = v9;
    if (v9)
    {
      OUTLINED_FUNCTION_3_9();
      OUTLINED_FUNCTION_11_4();
    }
    else
    {
      v11 = sub_247790588();
      OUTLINED_FUNCTION_197();
      OUTLINED_FUNCTION_242_0();
      OUTLINED_FUNCTION_35_3();
      OUTLINED_FUNCTION_18_2();
      if (!v11)
      {
        sub_2477905C4();
        sub_2478B6DA0();
        OUTLINED_FUNCTION_242_0();
        OUTLINED_FUNCTION_17_4();
        sub_2478B6DA0();
        OUTLINED_FUNCTION_17_4();
        OUTLINED_FUNCTION_3_9();
        OUTLINED_FUNCTION_452();
        OUTLINED_FUNCTION_197();
        OUTLINED_FUNCTION_197();
        OUTLINED_FUNCTION_242_0();
        sub_2478B6DA0();
        OUTLINED_FUNCTION_183_0();
        OUTLINED_FUNCTION_11_4();
        OUTLINED_FUNCTION_89();
        OUTLINED_FUNCTION_320();
        OUTLINED_FUNCTION_214();
        OUTLINED_FUNCTION_243_0();
        *v12 = v6;
        v12[1] = v8;
        v12[2] = v13;
        v12[3] = v14;
        v12[4] = v15;
        v12[5] = v16;
        v12[6] = v13;
        v12[7] = v14;
        v12[8] = v15;
        v12[9] = v13;
        v12[10] = v14;
        v12[11] = v13;
        v12[12] = v14;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        OUTLINED_FUNCTION_214();
        OUTLINED_FUNCTION_243_0();
        OUTLINED_FUNCTION_89();
        OUTLINED_FUNCTION_320();
        swift_bridgeObjectRelease();
        goto LABEL_4;
      }
      OUTLINED_FUNCTION_3_9();
      OUTLINED_FUNCTION_11_4();
      OUTLINED_FUNCTION_243_0();
      OUTLINED_FUNCTION_89();
      v10 = 0;
    }
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
    OUTLINED_FUNCTION_11_4();
    if (!v10)
    {
      OUTLINED_FUNCTION_178_0();
      OUTLINED_FUNCTION_89();
    }
  }
LABEL_4:
  OUTLINED_FUNCTION_1_6();
}

unint64_t sub_24779054C()
{
  unint64_t result;

  result = qword_2576C2D10;
  if (!qword_2576C2D10)
  {
    result = MEMORY[0x24958320C](&unk_2478B9E98, &unk_2518E3BC0);
    atomic_store(result, (unint64_t *)&qword_2576C2D10);
  }
  return result;
}

unint64_t sub_247790588()
{
  unint64_t result;

  result = qword_2576C2D18;
  if (!qword_2576C2D18)
  {
    result = MEMORY[0x24958320C](&unk_2478B9E70, &unk_2518E3B40);
    atomic_store(result, (unint64_t *)&qword_2576C2D18);
  }
  return result;
}

unint64_t sub_2477905C4()
{
  unint64_t result;

  result = qword_2576C2D20;
  if (!qword_2576C2D20)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for BagURL, &type metadata for BagURL);
    atomic_store(result, (unint64_t *)&qword_2576C2D20);
  }
  return result;
}

void sub_247790600()
{
  MusicBag.init(from:)();
}

void sub_247790614()
{
  MusicBag.encode(to:)();
}

uint64_t static MusicBag.bag(for:)(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE v6[16];
  uint64_t v7;

  sub_247791AD0(0, &qword_2576C2D28, MEMORY[0x24BEE6CA8]);
  MEMORY[0x24BDAC7A8](v2);
  v7 = a1;
  (*(void (**)(_BYTE *, _QWORD))(v3 + 104))(&v6[-v4], *MEMORY[0x24BEE6CA0]);
  return sub_2478B7088();
}

void sub_2477906E4(uint64_t a1, void *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  _QWORD v9[26];

  v9[24] = *MEMORY[0x24BDAC8D0];
  sub_247791AD0(0, &qword_2576C2DB8, MEMORY[0x24BEE6C80]);
  v9[3] = v4;
  v9[2] = *(_QWORD *)(v4 - 8);
  MEMORY[0x24BDAC7A8](v4);
  v9[1] = (char *)v9 - v5;
  sub_247791AD0(0, &qword_2576C2DC0, MEMORY[0x24BEE6CD0]);
  v9[8] = v6;
  v9[6] = *(_QWORD *)(*(_QWORD *)(v6 - 8) + 64);
  MEMORY[0x24BDAC7A8](v6);
  v8 = (char *)v9 - v7;
  sub_247753D80();
  v9[7] = sub_247791700(0x636973754DLL, 0xE500000000000000, 3157553, 0xE300000000000000, 0, a2);
  v9[10] = objc_msgSend((id)objc_opt_self(), sel_uninitializedToken);
  v9[4] = v8;
  v9[5] = a1;
  v9[11] = MEMORY[0x24BEE4AF8];
  sub_247791C6C(0, 5, 0);
  JUMPOUT(0x247790900);
}

void sub_247790CD8(uint64_t a1)
{
  uint64_t v1;

  sub_2477906E4(a1, *(void **)(v1 + 16));
}

unint64_t sub_247790CE0(uint64_t a1)
{
  unint64_t result;

  *(_QWORD *)(a1 + 8) = sub_247790D0C();
  result = sub_247790D48();
  *(_QWORD *)(a1 + 16) = result;
  return result;
}

unint64_t sub_247790D0C()
{
  unint64_t result;

  result = qword_2576C2D30;
  if (!qword_2576C2D30)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for MusicBag, &type metadata for MusicBag);
    atomic_store(result, (unint64_t *)&qword_2576C2D30);
  }
  return result;
}

unint64_t sub_247790D48()
{
  unint64_t result;

  result = qword_2576C2D38;
  if (!qword_2576C2D38)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for MusicBag, &type metadata for MusicBag);
    atomic_store(result, (unint64_t *)&qword_2576C2D38);
  }
  return result;
}

_QWORD *initializeBufferWithCopyOfBuffer for BagURL(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  sub_2478B6DA0();
  return a1;
}

uint64_t destroy for BagURL()
{
  return swift_bridgeObjectRelease();
}

_QWORD *assignWithCopy for BagURL(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for BagURL(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BagURL(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 16))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BagURL(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for BagURL()
{
  OUTLINED_FUNCTION_34();
}

uint64_t destroy for MusicBag()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for MusicBag(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  v7 = a2[9];
  a1[8] = a2[8];
  a1[9] = v7;
  v8 = a2[11];
  a1[10] = a2[10];
  a1[11] = v8;
  a1[12] = a2[12];
  sub_2478B6DA0();
  sub_2478B6DA0();
  sub_2478B6DA0();
  sub_2478B6DA0();
  sub_2478B6DA0();
  sub_2478B6DA0();
  sub_2478B6DA0();
  return a1;
}

_QWORD *assignWithCopy for MusicBag(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[9] = a2[9];
  a1[10] = a2[10];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[11] = a2[11];
  a1[12] = a2[12];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  return a1;
}

void *__swift_memcpy104_8(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x68uLL);
}

uint64_t assignWithTake for MusicBag(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  v6 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + 48) = *(_QWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a2 + 80);
  *(_QWORD *)(a1 + 72) = *(_QWORD *)(a2 + 72);
  *(_QWORD *)(a1 + 80) = v7;
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(a2 + 96);
  *(_QWORD *)(a1 + 88) = *(_QWORD *)(a2 + 88);
  *(_QWORD *)(a1 + 96) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for MusicBag(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 104))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for MusicBag(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 104) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 104) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MusicBag()
{
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2477911EC()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *sub_247791214(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  sub_2478B6DA0();
  OUTLINED_FUNCTION_183_0();
  return a1;
}

_QWORD *sub_24779124C(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  sub_2478B6DA0();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t sub_2477912C4(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_247791308(uint64_t a1, int a2)
{
  unint64_t v2;

  if (a2)
  {
    if (a2 < 0 && *(_BYTE *)(a1 + 24))
    {
      LODWORD(v2) = *(_DWORD *)a1 + 0x7FFFFFFF;
    }
    else
    {
      v2 = *(_QWORD *)(a1 + 8);
      if (v2 >= 0xFFFFFFFF)
        LODWORD(v2) = -1;
    }
  }
  else
  {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_247791348(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

void type metadata accessor for MusicBag.EnhancedAudio()
{
  OUTLINED_FUNCTION_34();
}

void type metadata accessor for MusicBag.MusicAPIDomains()
{
  OUTLINED_FUNCTION_34();
}

uint64_t sub_2477913A0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFC)
  {
    if (a2 + 4 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 4) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 5;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 5;
  v5 = v6 - 5;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t sub_247791428(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 4 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 4) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFC)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFB)
    return ((uint64_t (*)(void))((char *)&loc_247791474 + 4 * byte_2478B9C2A[v4]))();
  *a1 = a2 + 4;
  return ((uint64_t (*)(void))((char *)sub_2477914A8 + 4 * byte_2478B9C25[v4]))();
}

uint64_t sub_2477914A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_2477914B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x2477914B8);
  return result;
}

uint64_t sub_2477914C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x2477914CCLL);
  *(_BYTE *)result = a2 + 4;
  return result;
}

uint64_t sub_2477914D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_2477914D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

void type metadata accessor for MusicBag.CodingKeys()
{
  OUTLINED_FUNCTION_34();
}

unint64_t sub_2477914F4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C2D40;
  if (!qword_2576C2D40)
  {
    sub_247767B5C(255, &qword_2576C2D48, (uint64_t)&unk_2518E3C58, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    result = MEMORY[0x24958320C](MEMORY[0x24BEE12E0], v1);
    atomic_store(result, (unint64_t *)&qword_2576C2D40);
  }
  return result;
}

unint64_t sub_247791550()
{
  unint64_t result;

  result = qword_2576C2D50;
  if (!qword_2576C2D50)
  {
    result = MEMORY[0x24958320C](&unk_2478B9E48, &unk_2518E3C58);
    atomic_store(result, (unint64_t *)&qword_2576C2D50);
  }
  return result;
}

unint64_t sub_247791590()
{
  unint64_t result;

  result = qword_2576C2D58;
  if (!qword_2576C2D58)
  {
    result = MEMORY[0x24958320C](&unk_2478B9D48, &unk_2518E3C58);
    atomic_store(result, (unint64_t *)&qword_2576C2D58);
  }
  return result;
}

unint64_t sub_2477915D0()
{
  unint64_t result;

  result = qword_2576C2D60;
  if (!qword_2576C2D60)
  {
    result = MEMORY[0x24958320C](&unk_2478B9D70, &unk_2518E3C58);
    atomic_store(result, (unint64_t *)&qword_2576C2D60);
  }
  return result;
}

unint64_t sub_24779160C()
{
  unint64_t result;

  result = qword_2576C2D70;
  if (!qword_2576C2D70)
  {
    result = MEMORY[0x24958320C](&unk_2478BA16C, &type metadata for MusicBag.MusicAPIDomains.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576C2D70);
  }
  return result;
}

unint64_t sub_247791648()
{
  unint64_t result;

  result = qword_2576C2D80;
  if (!qword_2576C2D80)
  {
    result = MEMORY[0x24958320C](&unk_2478BA11C, &unk_2518E3D60);
    atomic_store(result, (unint64_t *)&qword_2576C2D80);
  }
  return result;
}

uint64_t sub_247791684(unint64_t *a1, uint64_t (*a2)(void), uint64_t a3)
{
  uint64_t result;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  result = *a1;
  if (!result)
  {
    sub_247767B5C(255, &qword_2576C2D88, (uint64_t)&type metadata for BagURL, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE1250]);
    v8 = v7;
    v9 = a2();
    result = MEMORY[0x24958320C](a3, v8, &v9);
    atomic_store(result, a1);
  }
  return result;
}

id sub_247791700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5, void *a6)
{
  void *v8;
  void *v9;
  id v10;

  v8 = (void *)sub_2478B6E24();
  swift_bridgeObjectRelease();
  v9 = (void *)sub_2478B6E24();
  swift_bridgeObjectRelease();
  v10 = objc_msgSend((id)swift_getObjCClassFromMetadata(), sel_bagForProfile_profileVersion_processInfo_account_, v8, v9, a5, a6);

  return v10;
}

uint64_t sub_2477917B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  void *v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  void *v12;
  uint64_t v13;
  uint64_t v15;
  __int128 v16;
  uint64_t v17;

  v17 = *MEMORY[0x24BDAC8D0];
  sub_247791AD0(0, &qword_2576C2DB8, MEMORY[0x24BEE6C80]);
  v1 = v0;
  v2 = *(_QWORD *)(v0 - 8);
  MEMORY[0x24BDAC7A8](v0);
  v4 = (char *)&v15 - v3;
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_2478B6D4C();
  *(_QWORD *)&v16 = 0;
  v7 = objc_msgSend(v5, sel_dataWithJSONObject_options_error_, v6, 0, &v16);

  v8 = (id)v16;
  if (v7)
  {
    v9 = sub_2478B6BF0();
    v11 = v10;

    sub_2478B6B24();
    swift_allocObject();
    sub_2478B6B18();
    sub_247790D0C();
    sub_2478B6B0C();
    swift_release();
    sub_247791AD0(0, &qword_2576C2DC0, MEMORY[0x24BEE6CD0]);
    sub_2478B7070();
    sub_247753958(v9, v11);
    return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  else
  {
    v12 = v8;
    v13 = sub_2478B6B90();

    swift_willThrow();
    *(_QWORD *)&v16 = v13;
    sub_247791AD0(0, &qword_2576C2DC0, MEMORY[0x24BEE6CD0]);
    return sub_2478B707C();
  }
}

uint64_t sub_247791A24(uint64_t a1)
{
  void (*v1)(uint64_t);
  uint64_t v2;

  v1 = *(void (**)(uint64_t))(a1 + 32);
  v2 = sub_2478B6D58();
  swift_retain();
  v1(v2);
  swift_release();
  return swift_bridgeObjectRelease();
}

unint64_t sub_247791A90()
{
  unint64_t result;
  uint64_t v1;

  result = qword_2576C2DB0;
  if (!qword_2576C2DB0)
  {
    v1 = sub_2478B6C44();
    result = MEMORY[0x24958320C](MEMORY[0x24BEAEFC0], v1);
    atomic_store(result, (unint64_t *)&qword_2576C2DB0);
  }
  return result;
}

void sub_247791AD0(uint64_t a1, unint64_t *a2, uint64_t (*a3)(uint64_t, ValueMetadata *, uint64_t, _QWORD))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;

  if (!*a2)
  {
    v6 = sub_247758170(255, (unint64_t *)&qword_25444CC38);
    v7 = a3(a1, &type metadata for MusicBag, v6, MEMORY[0x24BEE3F20]);
    if (!v8)
      atomic_store(v7, a2);
  }
  OUTLINED_FUNCTION_28();
}

uint64_t sub_247791B40(uint64_t result, uint64_t a2, _QWORD *a3)
{
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    for (; a2; --a2)
      *a3++ = result;
  }
  return result;
}

char *sub_247791B5C(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[80 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_0_9(a3, result);
  return result;
}

char *sub_247791B84(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[24 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_0_9(a3, result);
  return result;
}

char *sub_247791BA8(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[40 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_0_9(a3, result);
  return result;
}

char *sub_247791BD0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[32 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_0_9(a3, result);
  return result;
}

char *sub_247791BF0(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[40 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_0_9(a3, result);
  return result;
}

char *sub_247791C14(char *result, uint64_t a2, char *a3)
{
  if (a3 != result || &result[16 * a2] <= a3)
    return (char *)OUTLINED_FUNCTION_0_9(a3, result);
  return result;
}

_QWORD *sub_247791C34(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247791DF8(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_247791C50(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_247791F14(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

char *sub_247791C6C(char *a1, int64_t a2, char a3)
{
  char **v3;
  char *result;

  result = sub_247792030(a1, a2, a3, *v3);
  *v3 = result;
  return result;
}

uint64_t sub_247791C88()
{
  uint64_t v0;
  uint64_t v1;

  sub_247791AD0(0, &qword_2576C2DC0, MEMORY[0x24BEE6CD0]);
  (*(void (**)(unint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80)), v1);
  return swift_deallocObject();
}

uint64_t sub_247791CF8()
{
  sub_247791AD0(0, &qword_2576C2DC0, MEMORY[0x24BEE6CD0]);
  return sub_2477917B4();
}

uint64_t block_copy_helper(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  v2 = *(_QWORD *)(a2 + 40);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t block_destroy_helper()
{
  return swift_release();
}

uint64_t sub_247791D5C()
{
  uint64_t v0;

  return swift_deallocObject();
}

id sub_247791D80()
{
  uint64_t v0;

  return objc_msgSend(*(id *)(v0 + 16), sel_removeObserverWithToken_, *(_QWORD *)(v0 + 24));
}

_QWORD *sub_247791D90(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247792140(a1, a2, a3, *v3, &qword_2576C1EA0, &qword_2576C1AF8);
  *v3 = result;
  return result;
}

_QWORD *sub_247791DC4(_QWORD *a1, int64_t a2, char a3)
{
  _QWORD **v3;
  _QWORD *result;

  result = sub_247792140(a1, a2, a3, *v3, &qword_2576C2DE0, &qword_2576C1AD8);
  *v3 = result;
  return result;
}

_QWORD *sub_247791DF8(_QWORD *result, int64_t a2, char a3, _QWORD *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  size_t v11;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = a4[3];
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = a4[2];
  if (v7 <= v8)
    v9 = a4[2];
  else
    v9 = v7;
  if (v9)
  {
    sub_247792D38();
    v10 = (_QWORD *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    v10 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &a4[10 * v8 + 4] <= v10 + 4)
      memmove(v10 + 4, a4 + 4, 80 * v8);
    a4[2] = 0;
  }
  else
  {
    sub_2477580E0();
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_247791F14(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_247767B5C(0, &qword_2576C2DE8, (uint64_t)&type metadata for FacetAvailability, (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[24 * v8] <= v12)
      memmove(v12, v13, 24 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

char *sub_247792030(char *result, int64_t a2, char a3, char *a4)
{
  char v5;
  unint64_t v6;
  int64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;

  v5 = (char)result;
  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    sub_247767B5C(0, &qword_2576C2DD0, MEMORY[0x24BEE0D00], (uint64_t (*)(_QWORD, uint64_t))MEMORY[0x24BEE3598]);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 16);
  }
  else
  {
    v10 = (char *)MEMORY[0x24BEE4AF8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((v5 & 1) != 0)
  {
    if (v10 != a4 || &v13[16 * v8] <= v12)
      memmove(v12, v13, 16 * v8);
    *((_QWORD *)a4 + 2) = 0;
  }
  else
  {
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v10;
}

_QWORD *sub_247792140(_QWORD *result, int64_t a2, char a3, _QWORD *a4, unint64_t *a5, unint64_t *a6)
{
  char v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  size_t v14;

  v8 = (char)result;
  if ((a3 & 1) != 0)
  {
    v9 = a4[3];
    v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v10 = a2;
    }
  }
  else
  {
    v10 = a2;
  }
  v11 = a4[2];
  if (v10 <= v11)
    v12 = a4[2];
  else
    v12 = v10;
  if (v12)
  {
    sub_247792D8C(0, a5, a6);
    v13 = (_QWORD *)swift_allocObject();
    v14 = _swift_stdlib_malloc_size(v13);
    v13[2] = v11;
    v13[3] = 2 * ((uint64_t)(v14 - 32) / 40);
  }
  else
  {
    v13 = (_QWORD *)MEMORY[0x24BEE4AF8];
  }
  if ((v8 & 1) != 0)
  {
    if (v13 != a4 || &a4[5 * v11 + 4] <= v13 + 4)
      memmove(v13 + 4, a4 + 4, 40 * v11);
    a4[2] = 0;
  }
  else
  {
    sub_247758170(0, a6);
    swift_arrayInitWithCopy();
  }
  swift_release();
  return v13;
}

uint64_t sub_247792280()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  sub_247792CE8();
  v3 = sub_2478B7190();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    if (!v7)
      goto LABEL_7;
LABEL_6:
    v12 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
    {
      v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
      v18 = *v17;
      v19 = v17[1];
      sub_2478B7394();
      sub_2478B6E9C();
      result = sub_2478B73AC();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
      {
        v24 = 0;
        v25 = (unint64_t)(63 - v20) >> 6;
        while (++v22 != v25 || (v24 & 1) == 0)
        {
          v26 = v22 == v25;
          if (v22 == v25)
            v22 = 0;
          v24 |= v26;
          v27 = *(_QWORD *)(v9 + 8 * v22);
          if (v27 != -1)
          {
            v23 = __clz(__rbit64(~v27)) + (v22 << 6);
            goto LABEL_30;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        return result;
      }
      v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
      *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
      v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
      *v28 = v18;
      v28[1] = v19;
      ++*(_QWORD *)(v4 + 16);
      if (v7)
        goto LABEL_6;
LABEL_7:
      v14 = v11 + 1;
      if (__OFADD__(v11, 1))
        goto LABEL_38;
      if (v14 >= v8)
        goto LABEL_32;
      v15 = v30[v14];
      ++v11;
      if (!v15)
      {
        v11 = v14 + 1;
        if (v14 + 1 >= v8)
          goto LABEL_32;
        v15 = v30[v11];
        if (!v15)
        {
          v11 = v14 + 2;
          if (v14 + 2 >= v8)
            goto LABEL_32;
          v15 = v30[v11];
          if (!v15)
          {
            v16 = v14 + 3;
            if (v16 >= v8)
            {
LABEL_32:
              swift_release();
              v1 = v0;
              v29 = 1 << *(_BYTE *)(v2 + 32);
              if (v29 > 63)
                sub_247791B40(0, (unint64_t)(v29 + 63) >> 6, v30);
              else
                *v30 = -1 << v29;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v15 = v30[v16];
            if (!v15)
            {
              while (1)
              {
                v11 = v16 + 1;
                if (__OFADD__(v16, 1))
                  goto LABEL_39;
                if (v11 >= v8)
                  goto LABEL_32;
                v15 = v30[v11];
                ++v16;
                if (v15)
                  goto LABEL_20;
              }
            }
            v11 = v16;
          }
        }
      }
LABEL_20:
      v7 = (v15 - 1) & v15;
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_247792554(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_2478B7394();
  sub_2478B6DA0();
  sub_2478B6E9C();
  v8 = sub_2478B73AC();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_2478B734C() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      sub_2478B6DA0();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_2478B734C() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  sub_2478B6DA0();
  sub_247792700(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_247792700(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_247792280();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_247792898();
      goto LABEL_22;
    }
    sub_247792A44();
  }
  v11 = *v4;
  sub_2478B7394();
  sub_2478B6E9C();
  result = sub_2478B73AC();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_2478B734C(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_2478B7370();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_2478B734C();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

void *sub_247792898()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t i;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  _QWORD *v20;
  uint64_t v21;
  _QWORD *v22;

  v1 = v0;
  sub_247792CE8();
  v2 = *v0;
  v3 = sub_2478B7184();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = *(_QWORD *)(v2 + 56);
  v12 = -1;
  if (v10 < 64)
    v12 = ~(-1 << v10);
  v13 = v12 & v11;
  v14 = (unint64_t)(v10 + 63) >> 6;
  if ((v12 & v11) == 0)
    goto LABEL_12;
LABEL_11:
  v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  for (i = v15 | (v9 << 6); ; i = __clz(__rbit64(v18)) + (v9 << 6))
  {
    v20 = (_QWORD *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v21 = v20[1];
    v22 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * i);
    *v22 = *v20;
    v22[1] = v21;
    result = (void *)sub_2478B6DA0();
    if (v13)
      goto LABEL_11;
LABEL_12:
    v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      v9 = v17 + 1;
      if (v17 + 1 >= v14)
        goto LABEL_28;
      v18 = *(_QWORD *)(v6 + 8 * v9);
      if (!v18)
      {
        v9 = v17 + 2;
        if (v17 + 2 >= v14)
          goto LABEL_28;
        v18 = *(_QWORD *)(v6 + 8 * v9);
        if (!v18)
          break;
      }
    }
LABEL_25:
    v13 = (v18 - 1) & v18;
  }
  v19 = v17 + 3;
  if (v19 >= v14)
    goto LABEL_28;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
    v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v9 >= v14)
      goto LABEL_28;
    v18 = *(_QWORD *)(v6 + 8 * v9);
    ++v19;
    if (v18)
      goto LABEL_25;
  }
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_247792A44()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  unint64_t i;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  char v24;
  unint64_t v25;
  BOOL v26;
  uint64_t v27;
  _QWORD *v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  sub_247792CE8();
  v3 = sub_2478B7190();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_34:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  if (!v8)
    goto LABEL_7;
LABEL_6:
  v12 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  for (i = v12 | (v11 << 6); ; i = __clz(__rbit64(v15)) + (v11 << 6))
  {
    v17 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * i);
    v18 = *v17;
    v19 = v17[1];
    sub_2478B7394();
    sub_2478B6DA0();
    sub_2478B6E9C();
    result = sub_2478B73AC();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6))) == 0)
    {
      v24 = 0;
      v25 = (unint64_t)(63 - v20) >> 6;
      while (++v22 != v25 || (v24 & 1) == 0)
      {
        v26 = v22 == v25;
        if (v22 == v25)
          v22 = 0;
        v24 |= v26;
        v27 = *(_QWORD *)(v9 + 8 * v22);
        if (v27 != -1)
        {
          v23 = __clz(__rbit64(~v27)) + (v22 << 6);
          goto LABEL_30;
        }
      }
      __break(1u);
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    v23 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v9 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
LABEL_30:
    *(_QWORD *)(v9 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    v28 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v23);
    *v28 = v18;
    v28[1] = v19;
    ++*(_QWORD *)(v4 + 16);
    if (v8)
      goto LABEL_6;
LABEL_7:
    v14 = v11 + 1;
    if (__OFADD__(v11, 1))
      goto LABEL_36;
    if (v14 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v14);
    ++v11;
    if (!v15)
    {
      v11 = v14 + 1;
      if (v14 + 1 >= v29)
        goto LABEL_32;
      v15 = *(_QWORD *)(v6 + 8 * v11);
      if (!v15)
      {
        v11 = v14 + 2;
        if (v14 + 2 >= v29)
          goto LABEL_32;
        v15 = *(_QWORD *)(v6 + 8 * v11);
        if (!v15)
          break;
      }
    }
LABEL_20:
    v8 = (v15 - 1) & v15;
  }
  v16 = v14 + 3;
  if (v16 >= v29)
  {
LABEL_32:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_34;
  }
  v15 = *(_QWORD *)(v6 + 8 * v16);
  if (v15)
  {
    v11 = v16;
    goto LABEL_20;
  }
  while (1)
  {
    v11 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v11 >= v29)
      goto LABEL_32;
    v15 = *(_QWORD *)(v6 + 8 * v11);
    ++v16;
    if (v15)
      goto LABEL_20;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_247792CE8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C2DC8)
  {
    v0 = sub_2478B719C();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C2DC8);
  }
}

void sub_247792D38()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_2576C2DD8)
  {
    sub_2477580E0();
    v0 = sub_2478B7334();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_2576C2DD8);
  }
}

void sub_247792D8C(uint64_t a1, unint64_t *a2, unint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    sub_247758170(255, a3);
    v4 = sub_2478B7334();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void type metadata accessor for MusicBag.EnhancedAudio.CodingKeys()
{
  OUTLINED_FUNCTION_34();
}

uint64_t _s8SonicKit8MusicBagV15MusicAPIDomainsV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  BOOL v7;

  if (!a2)
  {
    v5 = -1;
    return (v5 + 1);
  }
  if (a2 >= 0xFF)
  {
    if (a2 + 1 >= 0xFFFF00)
      v2 = 4;
    else
      v2 = 2;
    if ((a2 + 1) >> 8 < 0xFF)
      v3 = 1;
    else
      v3 = v2;
    if (v3 == 4)
    {
      v4 = *(_DWORD *)(a1 + 1);
      if (!v4)
        goto LABEL_17;
    }
    else if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
    }
    else
    {
      v4 = a1[1];
      if (!a1[1])
        goto LABEL_17;
    }
    v5 = (*a1 | (v4 << 8)) - 2;
    return (v5 + 1);
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 2;
  v5 = v6 - 2;
  if (!v7)
    v5 = -1;
  return (v5 + 1);
}

uint64_t _s8SonicKit8MusicBagV15MusicAPIDomainsV10CodingKeysOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_247792EC8 + 4 * byte_2478B9C34[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_247792EFC + 4 * byte_2478B9C2F[v4]))();
}

uint64_t sub_247792EFC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_247792F04(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x247792F0CLL);
  return result;
}

uint64_t sub_247792F18(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x247792F20);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_247792F24(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_247792F2C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

_BYTE *sub_247792F38(_BYTE *result, char a2)
{
  *result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for MusicBag.MusicAPIDomains.CodingKeys()
{
  return &type metadata for MusicBag.MusicAPIDomains.CodingKeys;
}

unint64_t sub_247792F58()
{
  unint64_t result;

  result = qword_2576C2DF0;
  if (!qword_2576C2DF0)
  {
    result = MEMORY[0x24958320C](&unk_2478BA004, &type metadata for MusicBag.MusicAPIDomains.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576C2DF0);
  }
  return result;
}

unint64_t sub_247792F98()
{
  unint64_t result;

  result = qword_2576C2DF8;
  if (!qword_2576C2DF8)
  {
    result = MEMORY[0x24958320C](&unk_2478BA0F4, &unk_2518E3D60);
    atomic_store(result, (unint64_t *)&qword_2576C2DF8);
  }
  return result;
}

unint64_t sub_247792FD8()
{
  unint64_t result;

  result = qword_2576C2E00;
  if (!qword_2576C2E00)
  {
    result = MEMORY[0x24958320C](&unk_2478BA02C, &unk_2518E3D60);
    atomic_store(result, (unint64_t *)&qword_2576C2E00);
  }
  return result;
}

unint64_t sub_247793018()
{
  unint64_t result;

  result = qword_2576C2E08;
  if (!qword_2576C2E08)
  {
    result = MEMORY[0x24958320C](&unk_2478BA054, &unk_2518E3D60);
    atomic_store(result, (unint64_t *)&qword_2576C2E08);
  }
  return result;
}

unint64_t sub_247793058()
{
  unint64_t result;

  result = qword_2576C2E10;
  if (!qword_2576C2E10)
  {
    result = MEMORY[0x24958320C](&unk_2478B9F74, &type metadata for MusicBag.MusicAPIDomains.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576C2E10);
  }
  return result;
}

unint64_t sub_247793098()
{
  unint64_t result;

  result = qword_2576C2E18;
  if (!qword_2576C2E18)
  {
    result = MEMORY[0x24958320C](&unk_2478B9F9C, &type metadata for MusicBag.MusicAPIDomains.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_2576C2E18);
  }
  return result;
}

void *OUTLINED_FUNCTION_0_9@<X0>(void *__dst@<X2>, const void *a2@<X8>)
{
  size_t v2;

  return memmove(__dst, a2, v2);
}

uint64_t OUTLINED_FUNCTION_3_9()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_4_4()
{
  return sub_2478B73AC();
}

uint64_t OUTLINED_FUNCTION_5_2()
{
  return sub_2478B731C();
}

uint64_t OUTLINED_FUNCTION_6_6()
{
  return 0x6465636E61686E65;
}

uint64_t OUTLINED_FUNCTION_8_5()
{
  return sub_2478B7394();
}

uint64_t OUTLINED_FUNCTION_10_5()
{
  return 0x757165722D737066;
}

uint64_t OUTLINED_FUNCTION_11_4()
{
  return swift_bridgeObjectRelease();
}

uint64_t OUTLINED_FUNCTION_12_3()
{
  return sub_2478B73A0();
}

uint64_t OUTLINED_FUNCTION_15_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_16_2()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v0);
}

uint64_t OUTLINED_FUNCTION_17_4()
{
  return sub_2478B72F8();
}

uint64_t OUTLINED_FUNCTION_18_2()
{
  return sub_2478B72F8();
}

void OUTLINED_FUNCTION_22_4(uint64_t a1, unint64_t *a2, uint64_t (*a3)(void), uint64_t a4, uint64_t (*a5)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v5;

  sub_247753C70(0, a2, a3, v5, a5);
}

uint64_t OUTLINED_FUNCTION_25_4()
{
  return sub_2478B7394();
}

uint64_t OUTLINED_FUNCTION_27_3()
{
  return sub_2478B6E9C();
}

unint64_t OUTLINED_FUNCTION_28_2()
{
  return 0xD000000000000012;
}

void OUTLINED_FUNCTION_29_3()
{
  JUMPOUT(0x24958260CLL);
}

uint64_t OUTLINED_FUNCTION_30_4()
{
  return sub_2478B72E0();
}

uint64_t OUTLINED_FUNCTION_31_4()
{
  return 0x437972746E756F63;
}

uint64_t OUTLINED_FUNCTION_33_3()
{
  return sub_2478B734C();
}

uint64_t OUTLINED_FUNCTION_36_2()
{
  uint64_t v0;

  return v0;
}

void OUTLINED_FUNCTION_39_3()
{
  uint64_t v0;

  *(_BYTE *)(v0 - 65) = 1;
}

uint64_t OUTLINED_FUNCTION_40_2()
{
  return sub_2478B73A0();
}

uint64_t OUTLINED_FUNCTION_45_2(uint64_t a1, ...)
{
  va_list va;

  va_start(va, a1);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)va);
}

void OUTLINED_FUNCTION_46_2(uint64_t a1, ...)
{
  char v1;
  va_list va;

  va_start(va, a1);
  sub_24778ED28((uint64_t)va, v1);
}

uint64_t OUTLINED_FUNCTION_47_2()
{
  uint64_t v0;

  return v0;
}

const char *Features.Sonic.domain.getter()
{
  return "Sonic";
}

uint64_t Features.Sonic.hash(into:)()
{
  return sub_2478B73A0();
}

uint64_t Features.Sonic.init(rawValue:)@<X0>(uint64_t a1@<X0>, BOOL *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  char v11;
  uint64_t result;
  uint64_t v13;

  v4 = sub_2478B6C44();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x24BDAC7A8](v4);
  v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x24BDAC7A8](v6);
  v10 = (char *)&v13 - v9;
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v13 - v9, a1, v4);
  MEMORY[0x24958260C]("AudioSessionQueue", 17, 2);
  sub_247791A90();
  v11 = sub_2478B6E18();
  OUTLINED_FUNCTION_0_10(a1);
  OUTLINED_FUNCTION_0_10((uint64_t)v8);
  result = OUTLINED_FUNCTION_0_10((uint64_t)v10);
  *a2 = (v11 & 1) == 0;
  return result;
}

uint64_t Features.Sonic.hashValue.getter()
{
  sub_2478B7394();
  sub_2478B73A0();
  return sub_2478B73AC();
}

void Features.Sonic.rawValue.getter()
{
  JUMPOUT(0x24958260CLL);
}

uint64_t sub_24779349C()
{
  return Features.Sonic.hashValue.getter();
}

uint64_t sub_2477934B0()
{
  return Features.Sonic.hash(into:)();
}

uint64_t sub_2477934C4()
{
  sub_2478B7394();
  sub_2478B73A0();
  return sub_2478B73AC();
}

unint64_t sub_247793504()
{
  unint64_t result;

  result = qword_2576C2E20;
  if (!qword_2576C2E20)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for Features.Sonic, &type metadata for Features.Sonic);
    atomic_store(result, (unint64_t *)&qword_2576C2E20);
  }
  return result;
}

void sub_247793544()
{
  Features.Sonic.rawValue.getter();
}

unint64_t sub_24779355C()
{
  unint64_t result;

  result = qword_25444CC78[0];
  if (!qword_25444CC78[0])
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for Features.Sonic, &type metadata for Features.Sonic);
    atomic_store(result, qword_25444CC78);
  }
  return result;
}

unint64_t sub_24779359C()
{
  unint64_t result;

  result = qword_25444CC40;
  if (!qword_25444CC40)
  {
    result = MEMORY[0x24958320C](&protocol conformance descriptor for Features.Sonic, &type metadata for Features.Sonic);
    atomic_store(result, (unint64_t *)&qword_25444CC40);
  }
  return result;
}

const char *sub_2477935D8()
{
  return "Sonic";
}

uint64_t sub_2477935EC()
{
  sub_24779359C();
  return sub_2478B6F38();
}

ValueMetadata *type metadata accessor for Features()
{
  return &type metadata for Features;
}

uint64_t getEnumTagSinglePayload for Features.Sonic(unsigned int *a1, int a2)
{
  int v2;
  int v3;

  if (!a2)
    return 0;
  if ((a2 + 1) >= 0x10000)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 1) < 0x100)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
    return *a1;
  if (v3 == 2)
    return *(unsigned __int16 *)a1;
  return *(unsigned __int8 *)a1;
}

uint64_t storeEnumTagSinglePayload for Features.Sonic(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_2477936B8 + 4 * byte_2478BA270[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_2477936D8 + 4 * byte_2478BA275[v4]))();
}

_BYTE *sub_2477936B8(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_2477936D8(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2477936E0(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2477936E8(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_2477936F0(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_2477936F8(_DWORD *result)
{
  *result = 0;
  return result;
}

uint64_t sub_247793704()
{
  return 0;
}

ValueMetadata *type metadata accessor for Features.Sonic()
{
  return &type metadata for Features.Sonic;
}

uint64_t OUTLINED_FUNCTION_0_10(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);

  return v2(a1, v1);
}

uint64_t sub_247793724(mach_port_t a1, uint64_t a2, int a3, _QWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  int v13;
  mach_msg_header_t v14;
  int v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;

  v15 = 1;
  v16 = a2;
  v17 = 16777472;
  v18 = a3;
  v19 = *MEMORY[0x24BDAC470];
  v20 = a3;
  reply_port = mig_get_reply_port();
  v14.msgh_remote_port = a1;
  v14.msgh_local_port = reply_port;
  v14.msgh_bits = -2147478253;
  *(_QWORD *)&v14.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&v14);
    reply_port = v14.msgh_local_port;
  }
  v9 = mach_msg(&v14, 3, 0x38u, 0x40u, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(v14.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(v14.msgh_local_port);
    return v10;
  }
  if (v14.msgh_id == 71)
  {
    v12 = 4294966988;
  }
  else if (v14.msgh_id == 1300)
  {
    if ((v14.msgh_bits & 0x80000000) != 0)
    {
      v12 = 4294966996;
      if (v15 == 1 && v14.msgh_size == 56 && !v14.msgh_remote_port && HIBYTE(v17) == 1)
      {
        v13 = v18;
        if (v18 == v20)
        {
          *a4 = v16;
          *a5 = v13;
          return 0;
        }
      }
    }
    else if (v14.msgh_size == 36)
    {
      v12 = 4294966996;
      if (HIDWORD(v16))
      {
        if (v14.msgh_remote_port)
          v12 = 4294966996;
        else
          v12 = HIDWORD(v16);
      }
    }
    else
    {
      v12 = 4294966996;
    }
  }
  else
  {
    v12 = 4294966995;
  }
  mach_msg_destroy(&v14);
  return v12;
}

void zcamdt242h(uint64_t a1, int a2)
{
  __asm { BR              X8 }
}

void Gg9q7vHg34(unint64_t a1, uint64_t a2)
{
  _BOOL4 v3;

  v3 = a1 > 0xFFFFFFFFFFFFFFEFLL && a2 != 0;
  __asm { BR              X8 }
}

uint64_t sub_247793B84(uint64_t a1, _DWORD *a2)
{
  uint64_t v2;
  BOOL v3;

  *a2 = 0;
  v3 = MEMORY[0x191D653A4](24, 4101018099) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2 * v3) | 0x1E4u)) - 4))();
}

uint64_t sub_247793BCC(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v3;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 2118401485;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(v3 - 136) = a1;
  v4 = v2(4096, 1358311088);
  **(_QWORD **)(v3 - 136) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((216 * (v4 != 0)) ^ 0x354u)) - 8))();
}

uint64_t sub_247793C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25)
{
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;

  *(_QWORD *)(v33 - 152) = v32;
  *(_DWORD *)(v27 + 8) = v29 + 4096;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v30 + 8 * ((712 * (*(_DWORD *)(v27 + 12) - 4093 < ((v28 - 598) ^ 0x2C8) + ((v28 - 468) | 0xEu) - 5061)) ^ (v28 - 598)));
  v35 = *(_QWORD *)(v26 + 8 * (v28 - 821)) - 13;
  *(_QWORD *)(v33 - 200) = v25;
  *(_QWORD *)(v33 - 192) = v35;
  return v34(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, v31, a18, a19,
           a20,
           a21,
           a22,
           v27 + 8,
           a24,
           a25);
}

uint64_t sub_247793CD0()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((15
                                * (2 * (v0 ^ 0x2F1)
                                 + ((2 * (v3 + 2 * v1)) & 0xFCDB7BFA)
                                 + ((v3 + 2 * v1) ^ 0xFE6DBDFD)
                                 + 26357872 < 0xFFFFEFFB)) ^ v0)))();
}

uint64_t sub_247793D38@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;

  v7 = __ldaxr(v4);
  v8 = (*(uint64_t (**)(_QWORD, uint64_t))(v6 - 152))((a1 + 26362371), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 8 * (((v8 != 0) * ((v7 - 215) ^ 0x797)) ^ v7)) - 8))(v8, v9, v10, v11, v12, v13, v14, v15, a2, a3, a4);
}

void sub_247793D90(uint64_t a1)
{
  __asm { BR              X17 }
}

uint64_t sub_24779614C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1818 * (v0 != v2)) ^ (v1 - 1146)))
                            - (v1 - 1408)
                            + 87))();
}

uint64_t sub_247796188@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  int v4;
  uint64_t v5;
  _BOOL4 v7;

  v7 = v2 < ((v3 + 1547) ^ 0x662u) || (unint64_t)(a1 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((222 * v7) ^ v3)) + 3545690796 - (v3 ^ (v4 + 55))))();
}

void sub_2477968DC()
{
  _QWORD *v0;
  void (*v1)(void);
  _QWORD *v2;

  v2 = v0;
  v1();
  *v2 = 0;
  v2[1] = 2118401485;
  ((void (*)(_QWORD *))v1)(v2);
  JUMPOUT(0x247796900);
}

void jk24uiwqrg(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_247796978()
{
  MEMORY[0x191D68428]();
  return 0;
}

void fm23w5mn5o()
{
  uint64_t v0;
  char v1;

  v0 = qword_2576C2E38 - (_QWORD)&v1 + qword_2576C2E50;
  qword_2576C2E38 = 1137813707 * v0 + 0x5751864245CF6939;
  qword_2576C2E50 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  __asm { BR              X8 }
}

uint64_t sub_247796A78()
{
  uint64_t v0;
  void (*v1)(void);
  uint64_t v2;

  v1();
  *(_QWORD *)(v0 + 8) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((20 * (*(_QWORD *)(v0 + 24) != 0)) | 0xA8u)) - 4))();
}

uint64_t sub_247796AB0()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  int v4;

  *(_QWORD *)(v3 - 111) = v0;
  v2();
  *(_QWORD *)(v1 + 24) = 0;
  *(_DWORD *)(v1 + 36) = 0;
  *(_QWORD *)v1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((*(_QWORD *)(v1 + 48) == 0) * (((5 * (v4 ^ 0x92) + 20) | 8) - 290)) ^ (5 * (v4 ^ 0x92))))
                            - ((5 * (v4 ^ 0x92) + 20) ^ 0x199u)
                            + 171))();
}

uint64_t jkag7Bg01u(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
    __asm { BR              X8 }
  return 4294922295;
}

void sub_247797030(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, _DWORD *a18, int a19, int a20)
{
  uint64_t v20;
  _QWORD *v21;

  v21 = *(_QWORD **)(v20 - 152);
  (*(void (**)(_QWORD))(v20 - 208))(*v21);
  *v21 = a17;
  *a18 = a20;
  JUMPOUT(0x247797068);
}

uint64_t sub_247797118@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = ((a1 + 968818423) & 0xC640FFBE ^ 0x14473943) + *(_DWORD *)(v1 + 12);
  v4 = *(_DWORD *)(v1 + 8) - 797629582;
  v5 = v3 < 0x14473A79;
  v6 = v3 > v4;
  if (v4 < 0x14473A79 != v5)
    v6 = v5;
  return (*(uint64_t (**)(void))(v2 + 8 * ((444 * v6) ^ a1)))();
}

uint64_t sub_247797198@<X0>(uint64_t a1@<X4>, uint64_t a2@<X5>, uint64_t a3@<X6>, uint64_t a4@<X7>, int a5@<W8>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  unsigned int v31;
  _BOOL4 v32;
  unsigned int v33;
  _BOOL8 v34;
  _BOOL4 v35;

  *(_QWORD *)(v29 - 152) = v27;
  v30 = a5 - 844;
  v31 = v26 + 659547387;
  v32 = (v26 + 659547387) < 0x6B21FBFE;
  v33 = ((2 * (2 * v26 + 2019283442)) & 0x87B47EFE) + ((2 * v26 + 2019283442) ^ (v30 + 1138376259));
  v34 = v33 + 659012735 < 0x6B21FBFE;
  if (v32 != v34)
    v35 = v33 + 659012735 < 0x6B21FBFE;
  else
    v35 = v33 + 659012735 > v31;
  return ((uint64_t (*)(_BOOL8, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((109 * v35) ^ v30)) - 4))(v34, 2019283442, 1797389310, v33 - 534648, a1, a2, a3, a4, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_247797240(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  _DWORD *v30;
  uint64_t *v31;
  uint64_t v32;
  int v33;
  uint64_t v34;
  unsigned int v35;
  int v36;

  v34 = *v31;
  v35 = ((2 * v29) & 0x9FDFFFFC) + (v29 ^ 0x4FEFFFFE);
  *(_BYTE *)(*v31 + v35 - 1341128701) = -2;
  v36 = (v33 - 222) | 0x88;
  *(_BYTE *)(v34 + v35 - 1341128702) = -123;
  *(_BYTE *)(v34 + v35 + (v36 ^ 0xB01002EC)) = 99;
  *(_BYTE *)(v34 + v35 - 1341128699) = -80;
  *v30 += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(4001280290 - ((v36 + 67120440) | 0xEA7E8106) + *(_QWORD *)(v32 + 11808)))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_247798F38()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((v3 + ((v1 - 1524) | 0x220) - 675) ^ (v3 + 177)) * (v0 != 0)) ^ v1)))();
}

uint64_t sub_247798F6C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  int v5;
  _BOOL4 v7;

  v7 = v2 < 8 || (unint64_t)(a1 - a2) < 0x20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * (int)((((((2 * v3) ^ 0x696) - 285297762) & 0xFF7FF9B6 ^ (v5 + 13)) * v7) ^ v3))
                            - 8))();
}

uint64_t sub_247798FC0()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  char v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (((((v0 < 0x20) ^ ((v1 ^ (v3 - 48)) + 1)) & 1)
                                * (((v1 - 336) | 0x71) - 749)) ^ v1)))();
}

uint64_t sub_247799000@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  __int128 v6;
  _BOOL4 v7;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  v7 = (((v5 + v3 - 740) | 0x311u) ^ 0x335) != (v2 & 0xFFFFFFE0);
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)(v7 & 0xFFFFFFFB | (4 * v7) | (v5 + v3 - 488))) - 8))();
}

uint64_t sub_247799058()
{
  int v0;
  unsigned int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(v1 ^ (205 * (v0 == 0))))
                            - (v1 ^ 0xEE7EB161 ^ ((v1 - 332103741) | 0x24A3120))))();
}

uint64_t sub_2477990AC()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (v1 ^ (2
                                               * (((((v1 - 1939960322) ^ (v0 < 8)) & 1) == 0) | (32
                                                                                               * ((((v1 - 1939960322) ^ (v0 < 8)) & 1) == 0))))))
                            - 8))();
}

uint64_t sub_2477990F0()
{
  int v0;
  unint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((1119
                                          * (v1 >= ((v0 + 240029406) | 0xE0302026)
                                                 + (unint64_t)((v0 + 486) | 0x235u)
                                                 - 4001281859u)) ^ v0))
                            - 8))();
}

uint64_t sub_247799148()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((85 * (v0 >= ((v1 - 1420) ^ 0x91u))) ^ v1))
                            - (v1 ^ (v3 + 1525) ^ 0xEE7EB12ELL)))();
}

void rsegvyrt87(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v8;

  if (a4)
    v6 = a5 == 0;
  else
    v6 = 1;
  v8 = v6 || a6 == 0;
  __asm { BR              X8 }
}

uint64_t sub_247799D7C(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5)
{
  uint64_t v5;
  _BOOL4 v6;

  *a4 = 0;
  *a5 = 0;
  v6 = MEMORY[0x191D653A4](24, 4101018099) != 0;
  return (*(uint64_t (**)(void))(v5 + 8 * ((419 * v6) ^ 0xA1u)))();
}

uint64_t sub_247799DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26)
{
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t);
  uint64_t v31;
  uint64_t v33;
  uint64_t (*v34)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  *(_QWORD *)(v31 - 256) = v28;
  *(_QWORD *)(v31 - 184) = v27;
  *(_DWORD *)(v31 - 236) = v26;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 449454675;
  *(_DWORD *)(a1 + 16) = 0;
  *(_QWORD *)(v31 - 152) = v30;
  v33 = v30(4096, 1358311088);
  *(_QWORD *)a1 = v33;
  v34 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 8 * ((63 * (v33 == 0)) ^ 0x1DC));
  *(_QWORD *)(v31 - 144) = 0x191D68428;
  return v34(v33, v35, v36, v37, v38, v39, v40, v41, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26);
}

uint64_t sub_247799E84()
{
  uint64_t v0;
  uint64_t v1;

  (*(void (**)(uint64_t))(v1 - 144))(v0);
  return 4294922293;
}

uint64_t gJa8aF901k(uint64_t a1)
{
  uint64_t v1;

  if ((unint64_t)(a1 + 8) <= 6 && ((0x7Du >> (a1 + 8)) & 1) != 0)
  {
    v1 = *((_QWORD *)&unk_2518E3F80 + ((867 * (MEMORY[0x191D653A4](24, 4101018099) != 0)) ^ 0x57Eu));
    __asm { BR              X8 }
  }
  return 4294922295;
}

uint64_t sub_2477A0824(_DWORD *a1)
{
  unsigned int v1;

  v1 = 882831569 * ((a1 & 0xE8317279 | ~(a1 | 0xE8317279)) ^ 0x84383F4C);
  return ((uint64_t (*)(void))(*(_QWORD *)(qword_2518E7840[*a1 - v1 - 314]
                                        + 8 * (int)((194 * (v1 + a1[1] - 1169751002 < 0x46)) ^ (*a1 - v1))
                                        - 2)
                            - 4))();
}

uint64_t sub_2477A08A4@<X0>(uint64_t result@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  *(_DWORD *)(result + 8) = *(_DWORD *)(*(_QWORD *)(v3 + 8 * (a2 - 347)) + 4 * v2 - 3);
  return result;
}

uint64_t sub_2477A08BC(uint64_t result)
{
  *(_DWORD *)(result + 8) = 314902380;
  return result;
}

void uv5t6nhkui()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = qword_2576C2E30 ^ (unint64_t)&v2 ^ qword_2576C2E50;
  qword_2576C2E30 = (1137813707 * v0) ^ 0xE86952A9CE08E98BLL;
  qword_2576C2E50 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_2518E3F80
       + ((893
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_2518E7840[((-53 * ((qword_2576C2E50 - qword_2576C2E30) ^ 0x8B)) ^ byte_2478BB050[byte_2478BAD30[(-53 * ((qword_2576C2E50 - qword_2576C2E30) ^ 0x8B))] ^ 0xA8])
                                                                      + 12]
                                                      - 3))(24, 4101018099) != 0)) ^ 0x5E4u))- 8;
  __asm { BR              X8 }
}

uint64_t sub_2477A09E8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;

  *(_DWORD *)(v4 - 212) = v1;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x35872FBD3D92718DLL;
  *(_DWORD *)(a1 + 16) = 0;
  v6 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((47 * (v6 == 0)) ^ 0x119u)))();
}

uint64_t sub_2477A0A50()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((((v0 + 732) ^ 0x5E4) + 6) ^ 0x4E045395) * (v2 != 0)) ^ 0x5E4))
                            - 8))();
}

uint64_t sub_2477A0A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void (*v4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v5;

  v4(v5, a2, a3, a4, 0x15C10E000);
  return 4294922293;
}

void tn46gtiuhw(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v10;

  if (a4)
    v7 = a5 == 0;
  else
    v7 = 1;
  v10 = v7 || a6 == 0 || a7 == 0;
  __asm { BR              X8 }
}

uint64_t sub_2477A4590(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, _DWORD *a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(void);

  *a4 = 0;
  **(_DWORD **)(v8 - 152) = 0;
  **(_QWORD **)(v8 - 144) = 0;
  *a7 = 0;
  v9 = (uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((787 * (((unk_2576C5F40 == 0) ^ 0x81) & 1)) ^ 0x15Eu)) - 8);
  *(_QWORD *)(v8 - 216) = 0x191D68428;
  return v9();
}

uint64_t sub_2477A460C()
{
  int v0;
  void (*v1)(void);
  uint64_t v2;
  uint64_t v3;

  v1();
  *(_QWORD *)(v3 + 8) = 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((1438 * (*(_QWORD *)(v3 + 24) != 0)) ^ (v0 + 1485326383))))();
}

uint64_t sub_2477A4644()
{
  int v0;
  int v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  v2();
  *(_QWORD *)(v4 + 24) = 0;
  *(_DWORD *)(v4 + 36) = 0;
  *(_QWORD *)v4 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((971 * (*(_QWORD *)(v4 + 48) != 0)) ^ (v0 + v1 + 91))) - 4))();
}

uint64_t sub_2477A4680()
{
  int v0;
  int v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;

  v2();
  *(_QWORD *)(v4 + 48) = 0;
  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)(((((v0 + v1 + 229328577) & 0xF254BEAF) - 1564) * (*(_QWORD *)(v4 + 64) != 0)) ^ (v0 + v1 + 172))))();
}

void fy34trz2st()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = (qword_2576C2E50 + qword_2576C2E40) ^ (unint64_t)&v2;
  qword_2576C2E40 = 1137813707 * v0 - 0x1796AD5631F71675;
  qword_2576C2E50 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_2518E3F80
       + ((203
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_2518E7840[((-53 * (qword_2576C2E40 ^ 0x8B ^ qword_2576C2E50)) ^ byte_2478BA5E0[byte_2478BAF50[(-53 * (qword_2576C2E40 ^ 0x8B ^ qword_2576C2E50))] ^ 0x5E])
                                                                      + 1]
                                                      - 3))(24, 4101018099) == 0)) ^ 0x173u))- 4;
  __asm { BR              X8 }
}

uint64_t sub_2477A8444(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  uint64_t v2;
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 2051828535;
  *(_DWORD *)(a1 + 16) = 0;
  v4 = v1(4096, 1358311088);
  *(_QWORD *)a1 = v4;
  return (*(uint64_t (**)(void))(v2 + 8 * ((139 * (v4 == 0)) ^ 0x47A)))();
}

uint64_t sub_2477A84C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  void (*v6)(uint64_t);

  v6(a6);
  return 4294922293;
}

void p435tmhbla()
{
  unint64_t v0;
  uint64_t v1;
  char v2;
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = (qword_2576C2E50 - qword_2576C2E48) ^ (unint64_t)&v2;
  qword_2576C2E48 = 1137813707 * (v0 + 0x1796AD5631F71675);
  qword_2576C2E50 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_2518E3F80
       + ((54
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_2518E7840[((-53
                                                                                         * ((qword_2576C2E50
                                                                                           - 53 * (v0 + 117)) ^ 0x8B)) ^ byte_2478BA910[byte_2478BA4E0[(-53 * ((qword_2576C2E50 - 53 * (v0 + 117)) ^ 0x8B))] ^ 0x9F])
                                                                      - 10]
                                                      - 3))(24, 4101018099) == 0)) ^ 0x29Du))- 8;
  __asm { BR              X8 }
}

uint64_t sub_2477AB2E8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 459037928;
  *(_DWORD *)(a1 + 16) = 0;
  v5 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((100 * (((v5 == 0) ^ 0xEF) & 1)) ^ 0x43Bu))
                            - ((v1 + 12) ^ 0xB2D17A6BLL)))();
}

uint64_t sub_2477AB384(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  __int16 v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v8 + 8) = v5 + 4096;
  v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7
                                                                     + 8
                                                                     * ((1983
                                                                       * (*(_DWORD *)(v8 + 12) - 4093 >= (v4 & 0xFF7 ^ 0x7Cu) - 4764)) ^ v4 & 0xFF7u));
  *(_QWORD *)(v10 - 168) = *(_QWORD *)(v6 + 8 * ((v4 & 0xFF7) - 710)) - 7;
  *(_QWORD *)(v10 - 160) = v3;
  *(_QWORD *)(v10 - 176) = *(_QWORD *)(v6 + 8 * ((v4 & 0xFF7) - 712)) - 13;
  *(_QWORD *)(v10 - 216) = v9;
  return v11(a1, a2, a3, 1294894604);
}

void asabc800ag(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_2477AE60C(_QWORD *a1, _DWORD *a2)
{
  uint64_t v2;
  _BOOL4 v3;

  *a1 = 0;
  *a2 = 0;
  v3 = MEMORY[0x191D653A4](24, 4101018099) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * ((16 * (v3 & 0xFFFFFFFD | (2 * v3))) ^ 0x59A)))();
}

uint64_t sub_2477AE658(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v6;

  *(_QWORD *)(v4 - 168) = v1;
  *(_QWORD *)(v4 - 160) = v3;
  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1051258734;
  *(_DWORD *)(a1 + 16) = 0;
  v6 = v3(4096, 1358311088);
  *(_QWORD *)a1 = v6;
  return (*(uint64_t (**)(void))(v2 + 8 * ((89 * (((v6 == 0) ^ 0x93) & 1)) ^ 0x692)))();
}

uint64_t sub_2477AE6E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t (*v37)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v35 + 8) = v32 + 4096;
  v37 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v33 + 8 * ((1674 * (((3 * (v31 ^ 0x8F)) ^ (*(_DWORD *)(v35 + 12) - 4093 < (((v31 ^ 0x532) - 272) | 0x10Fu) - 5024)) & 1)) ^ v31 ^ 0x532u));
  *(_QWORD *)(v36 - 224) = v34;
  return v37(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_2477AE76C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, int a9@<W8>, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29)
{
  int v29;
  uint64_t v30;
  uint64_t *v31;
  uint64_t v32;
  uint64_t v33;
  unsigned int v34;

  *(_QWORD *)(v32 - 144) = 0;
  *(_QWORD *)(v32 - 176) = 0x9306C2D1D9A7B4E0;
  *(_QWORD *)(v32 - 152) = 0;
  v33 = *v31;
  v34 = ((a9 << ((v29 - 122) & 0xAF ^ 0x8C)) & 0x9F4FE1DE) + (a9 ^ 0x4FA7F0EF) - 1336406255;
  *(_BYTE *)(*v31 + v34) = 0;
  *(_BYTE *)(v33 + v34 + 1) = 0;
  *(_BYTE *)(v33 + v34 + 2) = 0;
  *(_BYTE *)(v33 + v34 + 3) = 1;
  *((_DWORD *)v31 + 3) += 4;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 + 8 * (int)((v29 + 978983814) & 0xC5A5E5AF ^ 0x2B9)) - ((((v29 + 978983814) & 0xC5A5E5AF) - 2007353960) & 0x77A5CEDF) + 1533))(a1, a2, a3, a4, a5, a6, a7, a8, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19, a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29);
}

uint64_t sub_2477AE850()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * ((63
                                * ((((v1 + 2 * v2) << (((v0 + 100) | 0x54) ^ 0x56)) & 0x7D55FEFE)
                                 + ((v1 + 2 * v2) ^ 0xBEAAFF7F)
                                 + 1096085628 > 0xFFFFEFFA)) ^ v0)))();
}

uint64_t sub_2477AE8C0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v17 = (*(uint64_t (**)(_QWORD, uint64_t))(v16 - 160))((a1 + 1096089729), 1120292948);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((209 * (v17 != 0)) ^ v14)) - 4))(v17, v18, v19, v20, v21, v22, v23, v24, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12,
           a13,
           a14);
}

void sub_2477AE920(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  *(_QWORD *)(v5 - 152) = 0;
  *(_QWORD *)(v5 - 144) = 0;
  v6 = *v4;
  *(_QWORD *)(v5 - 176) = 0x9306C2D1D9A7B4E0;
  *(_QWORD *)(v5 - 232) = 0x33EE8B0970FCB5F4;
  *(_QWORD *)(v5 - 192) = v1;
  v7 = (((2 * (v2 ^ 0x188) - 210724645) & 0xC8F67DF) + 1396) | 0x40;
  __asm { BR              X11 }
}

uint64_t sub_2477B1050()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * (((((v1 - 603) | 0x418) + 440) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_2477B1078()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((*(unsigned __int8 *)(v2 + 3663) < 8u) ^ (v0 + 78)) & 1)
                                          * (v0 - 1152)) ^ v0))
                            - 8))();
}

uint64_t sub_2477B10B0()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((194 * (v0 + (unint64_t)(90 * (v1 ^ 0x660u)) - 630 > 0x1F)) ^ v1)))();
}

uint64_t sub_2477B10E8()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((((21 * (v1 ^ 0x65F) - 508306593) & 0x1E4C2359) - 795) * (v0 < 0x20)) ^ v1 ^ 0x7F))
                            - 8))();
}

uint64_t sub_2477B1138@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = (v3 ^ (v4 - 343) ^ v7) + v2;
  *(_QWORD *)(a1 + v8 - 7) = *(_QWORD *)(a2 + v8 - 7);
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v2 & 0xFFFFFFF8) - 8 == v3) * v5) ^ v4)))();
}

void sub_2477B117C()
{
  JUMPOUT(0x2477B1144);
}

uint64_t sub_2477B1184()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3
                              + 8
                              * (int)((((v4 + ((v1 + 1122460830) & 0xBD189B37) - 818) ^ (v4 - 153)) * (v0 != v2)) ^ v1)))();
}

uint64_t sub_2477B11C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unsigned int v2;
  int v3;
  uint64_t v4;
  _BOOL4 v6;

  v6 = v2 > 7 && a1 - a2 >= (unint64_t)(((v3 + 857735565) & 0xCCDFFF5D) - 213) - 808;
  return (*(uint64_t (**)(void))(v4 + 8 * ((1853 * v6) ^ v3)))();
}

uint64_t sub_2477B120C()
{
  unsigned int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8 * (((v0 >= ((11 * (v1 ^ 0x30D)) ^ 0x2D7u)) * ((40 * (v1 ^ 0x359)) ^ 0x4B4)) ^ v1)))();
}

uint64_t sub_2477B1258@<X0>(_OWORD *a1@<X0>, _OWORD *a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  __int128 v6;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  return (*(uint64_t (**)(void))(v4 + 8 * ((((v2 & 0xFFFFFFE0) == 32) * ((8 * v3) ^ v5)) ^ v3)))();
}

void sub_2477B1290()
{
  JUMPOUT(0x2477B1268);
}

uint64_t sub_2477B12A0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((98 * (v1 != v0)) ^ v2 ^ 0x13D8))
                            - (((v2 ^ 0x13D8) - 1640) | 0x302u)
                            + 810))();
}

uint64_t sub_2477B12D8()
{
  int v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * ((122 * ((((351 * (v1 ^ 0x331)) ^ 0x405) & v0) != 0)) ^ v1)))();
}

uint64_t sub_2477B1314@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v3) = *(_QWORD *)(a2 + v3);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * (((((v4 - 916160512) & 0x369B7FFE ^ 0xFFFFFD0E) & v2)
                                          - (unint64_t)((v4 - 916160512) & 0x369B7FFE)
                                          + 750 != v3) ^ (v4 - 916160512) & 0x369B7FFEu))
                            - 8))();
}

uint64_t sub_2477B136C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;
  uint64_t v5;

  *(_QWORD *)(a1 + v2) = *(_QWORD *)(a2 + v2);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((v4 != v2) ^ v3)) - 8))();
}

uint64_t sub_2477B1390()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v3 + 8 * (int)(((v4 + ((v2 + 1975908930) & 0xAEFBCEEB) - 52) * (v1 == v0)) ^ v2)))();
}

uint64_t sub_2477B13D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  int v6;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return (*(uint64_t (**)(void))(v5
                              + 8
                              * (((v3 + 1 != v2) * ((((v4 - 769) | 0x240) - 456930158) & 0x3FFDFC71 ^ (v6 - 319))) ^ ((v4 - 769) | 0x240))))();
}

uint64_t sub_2477B1420@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a1 + v3) = *(_BYTE *)(a2 + v3);
  return (*(uint64_t (**)(void))(v6 + 8 * (((v3 + 1 != v2) * v5) ^ v4)))();
}

uint64_t sub_2477B1444()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1009 * ((((v4 + v2 + 1882864004) ^ (v1 == v0)) & 1) == 0)) ^ v2))
                            - 4))();
}

uint64_t sub_2477B148C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  __int128 v5;

  v5 = *(_OWORD *)(a2 + v2 - 16);
  *(_OWORD *)(a1 + v2 - 32) = *(_OWORD *)(a2 + v2 - 32);
  *(_OWORD *)(a1 + v2 - 16) = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((651 * ((v2 & 0xFFFFFFE0) == 32)) ^ v3))
                            - (((v3 - 640) | 0x480u) ^ 0x69CLL)))();
}

void sub_2477B14E0()
{
  JUMPOUT(0x2477B14A4);
}

uint64_t sub_2477B14F0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 == v0) ^ (v2 + 1)) & 1 | (2
                                                                                         * (((v1 == v0) ^ (v2 + 1)) & 1)) | v2))
                            - ((v2 - 384) | 1u)
                            + 1297))();
}

uint64_t sub_2477B1524()
{
  char v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (823 * ((v0 & 0x18) != 0))))
                            - (v1 - 456)
                            + 841))();
}

uint64_t sub_2477B1560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v7 = v2 - 1;
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v7 != 0) * v4) ^ (23 * (v3 ^ 0x260))))
                            - (((23 * (v3 ^ 0x260) + 545340934) | 0x4408C60u) ^ v6)))();
}

uint64_t sub_2477B15B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v8 = v4 - 1;
  *(_BYTE *)(a1 + v8) = *(_BYTE *)(a2 + v8);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (((v8 != 0) * v5) ^ v2)) - (v3 ^ v7)))();
}

uint64_t sub_2477B15DC()
{
  uint64_t v0;
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned __int8 v6;
  unsigned int v7;
  int v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;

  v4 = v2 + v1;
  v5 = v2 + v1 - 158;
  v6 = v2 + v1 + 29;
  v7 = v5 | 0x29;
  v8 = v4 + 488;
  v9 = (*(uint64_t (**)(_QWORD, uint64_t))(v3 - 160))(**(unsigned int **)(v3 - 200), 1490714378);
  v10 = *(_QWORD **)(v3 - 168);
  v11 = 32 * *(_QWORD *)(v3 - 208);
  *(_QWORD *)(*v10 + v11 + 24) = v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v8 ^ (((v6 ^ (*(_QWORD *)(*v10 + v11 + 24) == 0)) & 1) << 6)))
                            - v7
                            + 41))();
}

void sub_2477B1660()
{
  JUMPOUT(0x2477B101CLL);
}

uint64_t sub_2477B16C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;

  return ((uint64_t (*)(void))(616680548
                            - ((v37 - 1477195353) & 0x7CCDFFF9)
                            + *(_QWORD *)(v36 + 8 * ((479 * (((v37 - 685) | 0x2C1) + a36 != 722)) ^ v37))
                            - 8))();
}

uint64_t sub_2477B1730()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v1 + 8 * ((*(_QWORD *)(v2 + 16) != 0) ^ (v3 + v0 + 140))))();
}

uint64_t sub_2477B1758()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((157 * (*(_QWORD *)(v2 + 32 * v0 + 24) == 0)) ^ (v3 - 124)))
                            - 8))();
}

uint64_t sub_2477B1784()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);
  int v6;
  uint64_t v7;

  v7 = v5();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v3
                                                      + 8
                                                      * ((112 * (v2 + (v0 ^ (v4 + 595)) - 722 != v1)) ^ (v6 + v0 + 541)))
                                          - 4))(v7);
}

uint64_t sub_2477B17C0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;

  return (*(uint64_t (**)(void))(v2 + 8 * ((*(_QWORD *)(v3 + 32 * v1 + 16) != 0) ^ (v4 + v0 + 140))))();
}

uint64_t sub_2477B17E4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  int v3;
  void (*v4)(void);

  v4();
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((157 * (*(_QWORD *)(v2 + 32 * v0 + 24) == 0)) ^ (v3 - 124)))
                            - 8))();
}

uint64_t sub_2477B1814()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((112 * (v2 + (v0 ^ (v4 + 595)) - 722 != v1)) ^ (v5 + v0 + 541)))
                            - 4))();
}

uint64_t sub_2477B184C@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t);
  uint64_t v4;
  void (*v5)(uint64_t);
  int v6;
  uint64_t v7;

  v5 = v3;
  v6 = a1 - 326;
  v5(v2);
  **(_QWORD **)(v4 - 168) = 0;
  v7 = ((uint64_t (*)(_QWORD))v5)(*(_QWORD *)(v4 - 144));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v1
                                                      + 8
                                                      * ((1188 * (*(_QWORD *)(v4 - 176) != 0x9306C2D1D9A7B4E0)) ^ v6))
                                          - ((383 * (v6 ^ 0x189) - 1388) | 6u)
                                          + 142))(v7);
}

uint64_t sub_2477B18C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (((v3 + a1 - 1532 + ((a1 + 12632644) | 0x24010420) - 1233360077)
                                          * (*(_QWORD *)(v1 + 0x6CF93D2E26584B20) == 0)) ^ a1))
                            - 4))();
}

uint64_t sub_2477B1924()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  void (*v5)(uint64_t);
  _QWORD *v6;
  int v7;

  v7 = 5 * (v0 ^ (v4 + 30));
  *(_QWORD *)v1 = 0;
  *(_DWORD *)(v1 + 8) = 2111990077;
  *(_DWORD *)(v1 + 12) = 1657608450;
  v5(v2 + 0x6CF93D2E26584B20);
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((*v6 != 0) * (v7 ^ (v4 + 150) ^ (v4 - 26))) ^ v7))
                            - ((v4 + v7 - 150) ^ 0x24C1CC64)))();
}

void sub_2477B19B4()
{
  void (*v0)(void);
  _QWORD *v1;

  v0();
  *v1 = 0;
  v1[1] = 1051258734;
  ((void (*)(_QWORD *))v0)(v1);
  JUMPOUT(0x2477B19D0);
}

uint64_t sub_2477B1A0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,int a36)
{
  uint64_t v36;
  int v37;
  int v38;
  uint64_t v39;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v36 + 8 * (((a36 + 1 < *(_QWORD *)(v39 - 152)) * (((5 * (v37 ^ (v37 + 130))) ^ 0x59) + 1144)) ^ (v38 + v37 + 805))) - 4))(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27);
}

void sub_2477B1A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_DWORD *a29)
{
  uint64_t v29;

  (*(void (**)(_QWORD))(v29 - 224))(*(_QWORD *)(v29 - 144));
  *a29 = *(_QWORD *)(v29 - 152);
  JUMPOUT(0x2477B1870);
}

void qi864985u0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v8;

  if (a2)
    v5 = a3 == 0;
  else
    v5 = 1;
  v8 = !v5 && a4 != 0 && a5 != 0;
  __asm { BR              X8 }
}

uint64_t sub_2477B1B5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,_DWORD *a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,_QWORD *a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,_DWORD *a40,uint64_t a41,_QWORD *a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47)
{
  uint64_t v47;

  *a29 = 0;
  *a40 = 0;
  *a42 = 0;
  *a21 = 0;
  LODWORD(a45) = 0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, void *, uint64_t, uint64_t, uint64_t, void *, _DWORD *, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v47 + 8 * ((354 * (a1 != 0)) | 0x89u)) - 4))(a1, a2, 2419529101, a4, a5, a6, a7, a8, a9, a10, a11, 0x2576C5F90, 0x2576C5F8CLL, 0x2576C5F30, 0x1AEA531E4, &unk_2576C5F88, a17, a18, a19,
           &unk_2478BAB1A,
           a21,
           0x191D68428,
           0x18A076E3CLL,
           0,
           a25,
           a26,
           a1,
           a28,
           a29,
           0x2576C5F8CLL,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           0x2576C5F38,
           a39,
           a40,
           0x191D653A4,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47);
}

uint64_t sub_2477B1C54(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned __int8 *a16)
{
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((1379 * *a16) ^ 0x135u))
                            - ((v16 + ((a3 - 213) ^ 0x135u) + 721) ^ 0x35ELL)))();
}

void sub_2477B47CC()
{
  int v1;
  uint64_t v2;
  uint64_t v4;
  _QWORD v5[29];
  uint64_t v6;

  v5[4] = 0x996A703CF9788810;
  v6 = ((uint64_t (*)(uint64_t, uint64_t, _QWORD *))(qword_2518E7840[v1 ^ 0x903715AF] - 2))(v2, v4, v5);
  __asm { BR              X8 }
}

uint64_t sub_2477B4A5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t))
{
  int v41;
  int v42;
  uint64_t v43;
  _BOOL4 v44;

  v44 = a41(24, 4101018099) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v43 + 8 * ((987 * v44) ^ v42))
                            - (v41
                             + ((v42 - 680044100) & 0xB8BFB5ED)
                             + 1007)
                            + 1140))();
}

uint64_t sub_2477B4AC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t))
{
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0x1369D9E660F15CCDLL;
  *(_DWORD *)(a1 + 16) = 0;
  v43 = a41(4096, 1358311088);
  *(_QWORD *)a1 = v43;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v42 + 8 * (((v43 == 0) * ((v41 ^ 0x58B) + ((v41 - 1000) | 0x12A) - 710)) ^ v41)) - 8))(v43, v44, v45, v46, v47, v48, v49, v50, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_2477B4B50()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((103 * (((v0 == 0) ^ (v1 - 45)) & 1)) ^ v1))
                            + 2419529093
                            - ((v1 + 271777358) | 0x80041585)))();
}

uint64_t sub_2477B4BAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  uint64_t v37;
  int v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void (*v43)(uint64_t);
  uint64_t v44;

  a22(v37);
  v43 = (void (*)(uint64_t))(qword_2518E7840[v39 ^ 0x90371581] - 2);
  v43(v41);
  v44 = ((uint64_t (*)(uint64_t))v43)(a37);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v42 + 8 * ((v38 + v39 + 1136) ^ (4 * (v40 != 0)))) - 8))(v44);
}

uint64_t sub_2477B4D88()
{
  int v0;
  void (*v1)(uint64_t);
  uint64_t v2;
  uint64_t v3;

  v1(v2);
  return (*(uint64_t (**)(void))(v3 + 8 * ((v0 + 1081) ^ (2 * ((STACK[0x248] == 0) | (16 * (STACK[0x248] == 0)))))))();
}

uint64_t sub_2477B4DB8()
{
  int v0;
  int v1;
  uint64_t (*v2)(void);
  int v3;
  uint64_t v4;
  uint64_t v5;

  v5 = v2();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((15 * (v3 == ((v0 + v1 + 8) | 0x68) - 45253)) ^ (v0 + v1 + 985)))
                                          - ((v0 + v1 + 298) ^ 0x1B7)))(v5);
}

uint64_t sub_2477B4E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53)
{
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;

  if (!v53)
    JUMPOUT(0x247777868);
  a50 = 0;
  a49 = 0;
  v56 = ((uint64_t (*)(_QWORD, _QWORD, _QWORD, uint64_t *, int *))(qword_2518E7840[v54 - 221] - 2))(*(unsigned int *)(qword_2518E7840[v54 ^ 0xFA] - 3), *(_QWORD *)a53, *(unsigned int *)(a53 + 12), &a50, &a49);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v55 + 8 * ((((v56 ^ 0xCCDBDEBE) + ((2 * (_DWORD)v56) & 0x99B7BD7C) == -589570367) * (v54 + 179)) ^ v54)) - 8))(v56, v57, v58, v59, v60, v61, v62, v63, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41);
}

uint64_t sub_2477B4EC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;

  v24 = ((uint64_t (*)(_QWORD, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * (v20 ^ 0xEC)) - 3))(*(unsigned int *)(*(_QWORD *)(v22 + 8 * (v20 ^ 0xDD)) - 2), a20, v21) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((v24 * (v20 + 1499)) ^ v20)) - 8))();
}

uint64_t sub_2477B4F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(uint64_t, uint64_t),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,unint64_t a59)
{
  int v59;
  int v60;
  int v61;
  uint64_t v62;
  unsigned int *v63;
  uint64_t (*v64)(_QWORD, _QWORD, _QWORD, uint64_t *, int *);
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t (*v69)(void);
  int v71;
  int v72;

  v67 = v64(*v63, *(_QWORD *)v62, *(unsigned int *)(v62 + 12), &a50, &a49);
  v68 = (v67 ^ 0x7E73DEBE) + ((v60 - 51921789) & (2 * v67)) - 841121840;
  if (v68 == v61)
  {
    v71 = -45017;
  }
  else
  {
    if ((v67 ^ 0x7E73DEBE) + ((v60 - 51921789) & (2 * (_DWORD)v67)) == 2121522878)
    {
      v69 = (uint64_t (*)(void))(*(_QWORD *)(v65
                                          + 8
                                          * (v59 - 1875438195 + 18 * (((a41(24, 4101018099) == 0) ^ 0x6D) & 1) + 247))
                              - 8);
      return v69();
    }
    v72 = 882831569 * ((-1004377353 - ((v66 - 108) | 0xC4226AF7) + ((v66 - 108) | 0x3BDD9508)) ^ 0xA82B27C2);
    *(_DWORD *)(v66 - 108) = v59 + v72 - 1875437980;
    *(_DWORD *)(v66 - 104) = v68 - v72 - 110604966;
    v67 = sub_2477A0824((_DWORD *)(v66 - 108));
    if (*(_DWORD *)(v66 - 100) == 314902380)
      v71 = -45016;
    else
      v71 = 0;
  }
  a59 = 0x996A703CF9788810;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v65
                                                                        + 8
                                                                        * ((1051
                                                                          * (v71 == ((v59 + 952977539) ^ 0x5769CD99)
                                                                                  + ((v59 + 952977539) & 0x5769CD9A))) ^ (v59 - 1875437897)))
                                                            - 8))(v67, 3969263130, 2419529101);
}

uint64_t sub_2477B54A8@<X0>(int a1@<W2>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52)
{
  int v52;
  uint64_t v53;

  return ((uint64_t (*)(void))(*(_QWORD *)(v53
                                        + 8
                                        * (((a52 != 0x996A703CF9788810) * (v52 + (a2 ^ (a1 - 246)) + 1722)) ^ a2))
                            - ((a2 + 455) | 2u)
                            + 735))();
}

uint64_t sub_2477B54F8(uint64_t a1, uint64_t a2, char a3)
{
  int v3;
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  unsigned int v7;
  _BOOL4 v8;
  BOOL v9;

  v6 = *(_DWORD *)(v4 + 0x66958FC3068777FCLL) + 813220973;
  v7 = *(_DWORD *)(v4 + 0x66958FC3068777F8) - 487505534;
  v8 = v6 < 0x43E29E4F;
  v9 = v6 > v7;
  if (v8 != v7 < 0x43E29E4F)
    v9 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1809 * (((a3 + v3 + 29) ^ v9) & 1)) ^ v3)) - 8))();
}

uint64_t sub_2477B5580@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;

  v6 = (v4 - 1986685284) & 0x766A679A;
  v7 = (*(unsigned __int8 *)(*(_QWORD *)a3 + (v3 + a1)) << 24) | (*(unsigned __int8 *)(*(_QWORD *)a3 + (v3 + a1 + 1)) << 16) | (*(unsigned __int8 *)(*(_QWORD *)a3 + ((v6 + 457) ^ (a2 + 481) ^ 0x7CA13391u) + v3) << 8) | *(unsigned __int8 *)(*(_QWORD *)a3 + (v3 + a1 + 3));
  *(_DWORD *)(a3 + 12) = v3 + 4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((1074 * (v7 == 0)) ^ v6)) - 4))();
}

uint64_t sub_2477B560C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((332 * (((v1 == 0x996A703CF9788810) ^ (v0 + 38)) & 1)) ^ v0))
                            - 8))();
}

uint64_t sub_2477B5660(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = v3 + 650116101 > (v4 - 650610410);
  if ((v3 + 650116101) < 0x3A29D5E3 != (v4 - 650610410) < 0x3A29D5E3)
    v7 = (v3 + 650116101) < 0x3A29D5E3;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (v5 ^ (467 * !v7)))
                            - (((v5 ^ (a3 + 481)) - a3 + 905) ^ 0x381)))();
}

uint64_t sub_2477B56DC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37)
{
  int v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v42 = *(unsigned __int8 *)(v38 + (_DWORD)a1 + v37 + ((v39 - 1094739338) ^ 0xBEBF9CE5) - 276);
  *(_DWORD *)(a8 + 12) = v37 + 8;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v41 + 8 * (v39 ^ (1352 * (v40 != 0x996A703CF9788810)))))(v42, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37);
}

uint64_t sub_2477B5778(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  _BOOL4 v11;
  _BOOL4 v12;

  v8 = v6 + v5 + ((v4 + 457) ^ (a2 - 289));
  v9 = v8 + 219058912;
  v10 = (v4 ^ v3 ^ 0x3C2A239E) + v2;
  v11 = v8 > 0xF2F16D1F;
  v12 = v9 > v10;
  if (v10 < 0xD0E92E0 == v11)
    v11 = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((959 * !v11) ^ v4)) - 4))();
}

uint64_t sub_2477B57F8@<X0>(int a1@<W2>, uint64_t a2@<X8>)
{
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  *(_DWORD *)(a2 + 12) = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v3 ^ (1271 * (v4 != 0x996A703CF9788810))))
                            + 2419529093
                            - ((4 * v3) ^ 0x940 ^ (a1 + 436))))();
}

uint64_t sub_2477B584C()
{
  int v0;
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  unsigned int v5;
  _BOOL4 v6;

  v5 = ((v2 + 154) ^ 0xD0294B9A) + v0;
  v6 = v1 + 498125799 > v5;
  if ((v1 + 498125799) < 0x311AA5C9 != v5 < 0x311AA5C9)
    v6 = (v1 + 498125799) < 0x311AA5C9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (int)((v6 * (v3 + ((v2 - 1224770303) & 0xD93795BF) - 90)) ^ v2))
                            - 8))();
}

uint64_t sub_2477B58D0@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X6>, uint64_t a7@<X7>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  int v43;
  int v44;
  uint64_t v45;
  uint64_t v46;

  *(_DWORD *)(a8 + 12) = v43 + 4;
  return (*(uint64_t (**)(BOOL, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v46 + 8 * (v44 ^ (239 * (v45 == 0x996A703CF9788810)))))(v45 == 0x996A703CF9788810, a1, a2, a3, a4, a5, a6, a7, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43);
}

uint64_t sub_2477B595C(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  _BOOL4 v10;
  int v11;
  _BOOL4 v12;

  v7 = v4 + v5 + a2;
  v8 = v7 + 843813432 + v3 - 883;
  v9 = ((v3 - 574637562) & 0xB27757FD ^ 0x416D200C) + v2;
  v10 = v7 > 0xCDB46DB1;
  v11 = v10 ^ (v9 < 0x324B924E);
  v12 = v8 > v9;
  if (v11)
    v12 = v10;
  return (*(uint64_t (**)(void))(v6 + 8 * ((2019 * !v12) ^ v3)))();
}

void sub_2477B59EC(uint64_t a1@<X2>, uint64_t a2@<X3>, uint64_t a3@<X4>, uint64_t a4@<X5>, uint64_t a5@<X6>, unsigned int a6@<W7>, uint64_t a7@<X8>, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,_QWORD *a28)
{
  int v28;
  uint64_t v29;
  uint64_t (*v30)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD);

  *(_DWORD *)(a7 + 12) = v28;
  *a28 = v30(v29, 925082483, a1, a2, a3, a4, a5, a6 & 0xFFF80000 | (a6 >> 8) & 0x7FFFF);
  JUMPOUT(0x2477B5A68);
}

uint64_t sub_2477B5B18(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(_QWORD, uint64_t),uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48)
{
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;

  v50 = a41(a3 + ((v48 + 1231215089) & 0xB69D2587) + 185500081, 1120292948);
  STACK[0x280] = v50;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t (*)(_QWORD, uint64_t), uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 8 * ((2002 * (v50 != 0)) ^ v48)))(v50, v51, 2419529101, v52, v53, v54, v55, v56, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34,
           a35,
           a36,
           a37,
           a38,
           a39,
           a40,
           a41,
           a42,
           a43,
           a44,
           a45,
           a46,
           a47,
           a48);
}

void sub_2477B5B80()
{
  JUMPOUT(0x2477B2324);
}

uint64_t sub_2477B5BE8(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t v6;

  LODWORD(STACK[0x28C]) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (int)(v5 ^ (1456 * (v3 != 0))))
                            - ((v5 ^ (a3 - 384))
                             + (v5 ^ 0xFFFFFFFF6FC8EBFBLL))))();
}

uint64_t sub_2477B5C3C@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (int)(((*v2 != 0) * (v1 + (a1 ^ 0x903716CE) + 51)) | a1)) - 8))();
}

void sub_2477B5C74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v22;
  int v23;
  int v24;
  int v25;

  *(_DWORD *)(a3 + 151) = v25;
  a22(a1, a2, a3 + 151);
  *(_QWORD *)v22 = 0;
  *(_DWORD *)(v22 + 8) = v23;
  *(_DWORD *)(v22 + 12) = v24;
  ((void (*)(uint64_t))a22)(v22);
  JUMPOUT(0x2477B53F0);
}

uint64_t sub_2477B5CA0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v3 + 8 * ((57 * (a1 == 0)) ^ (v1 + v2 + 778))))();
}

uint64_t sub_2477B5CFC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t (*a15)(uint64_t), uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51)
{
  _QWORD *v52;
  int v53;
  int v54;
  uint64_t v55;
  _QWORD *v56;
  uint64_t v57;

  v56 = v52;
  v57 = a15(a1);
  *v56 = 0;
  *a4 = 0;
  *(_DWORD *)(a31 + 40 * a12 + 36) = 0;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v55
                                                      + 8
                                                      * ((((((23 * (v54 ^ 0x9037159D)) ^ (a51 == 0x996A703CF9788810)) & 1) == 0)
                                                        * (v54 + 1875439310)) ^ (v53 + v54 + 298)))
                                          - 8))(v57);
}

uint64_t sub_2477B5D38(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(_QWORD, uint64_t))
{
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;

  v43 = a41((a2 - 2046131935), 1120292948);
  STACK[0x268] = v43;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v42 + 8 * (int)(((((40 * (v41 ^ 0x39E)) ^ 0xFFFFFEBD) + 29 * (v41 ^ 0x395)) * (v43 == 0)) ^ v41)))(v43, v44, 2419529101, v45, v46, v47, v48, v49, a9, a10, a11, a12, a13, a14, a15, a16, a17, a18, a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32,
           a33,
           a34);
}

uint64_t sub_2477B5DB8()
{
  uint64_t v0;
  char v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1051 * (((v0 == 0) ^ (v2 - v1 + 33)) & 1)) ^ v2))
                            - (v2 + 646)
                            + 998))();
}

uint64_t sub_2477B5DF0@<X0>(char a1@<W2>, int a2@<W8>)
{
  _QWORD *v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8 * ((1993 * (((*v2 == 0) ^ (a2 ^ (a1 - 42))) & 1)) ^ a2))
                            - 8))();
}

void sub_2477B5E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,void (*a22)(void),uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39)
{
  int v39;
  int v40;

  a22();
  *(_QWORD *)a39 = 0;
  *(_DWORD *)(a39 + 8) = v39;
  *(_DWORD *)(a39 + 12) = v40;
  ((void (*)(uint64_t))a22)(a39);
  JUMPOUT(0x2477B4D40);
}

void aslgmuibau()
{
  unint64_t v0;
  uint64_t v1;
  _BYTE v2[24];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v0 = (unint64_t)&v2[qword_2576C2E50 ^ qword_2576C2E58];
  qword_2576C2E58 = 1137813707 * v0 + 0x5751864245CF6939;
  qword_2576C2E50 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  v1 = *((_QWORD *)&unk_2518E3F80
       + ((29
         * (((uint64_t (*)(uint64_t, uint64_t))(qword_2518E7840[((-53
                                                                                         * ((qword_2576C2E50
                                                                                           - qword_2576C2E58) ^ 0x8B)) ^ byte_2478BAC30[byte_2478BA810[(-53 * ((qword_2576C2E50 - qword_2576C2E58) ^ 0x8B))] ^ 0xDC])
                                                                      - 21]
                                                      - 3))(24, 4101018099) == 0)) ^ 0x1EDu))- 4;
  __asm { BR              X8 }
}

uint64_t sub_2477B5FB4(uint64_t a1)
{
  uint64_t v1;
  uint64_t (*v2)(uint64_t, uint64_t);
  uint64_t v4;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 1471034656;
  *(_DWORD *)(a1 + 16) = 0;
  v4 = v2(4096, 1358311088);
  *(_QWORD *)a1 = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((((v4 == 0) ^ 0xA56C9F0) & 1) == 0) | (4
                                                                                 * ((((v4 == 0) ^ 0xA56C9F0) & 1) == 0)) | 0x440u))
                            - 8))();
}

uint64_t sub_2477B601C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);

  *(_DWORD *)(v6 + 8) = v3 + 4096;
  v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5
                                                           + 8
                                                           * ((1686
                                                             * ((*(_DWORD *)(v6 + 12) - 4093) < 0xFFFFEFFF)) ^ 0x3C3u));
  *(_QWORD *)(v8 - 184) = *(_QWORD *)(v4 + 248) - 13;
  *(_QWORD *)(v8 - 208) = v2;
  *(_QWORD *)(v8 - 176) = v7;
  return v9(a1, a2, 1352897984);
}

uint64_t sub_2477B609C(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6
                              + 8
                              * ((31
                                * (((2 * ((v5 << ((v4 ^ 0x82) + 57)) + a3)) & 0xBF7CEFF8)
                                 + (((v5 << ((v4 ^ 0x82) + 57)) + a3) ^ 0xDFBE77FC)
                                 + v3 > 0xFFFFEFFA)) ^ v4)))();
}

uint64_t sub_2477B8C7C(uint64_t a1, uint64_t a2)
{
  unint64_t v2;
  uint64_t v3;
  _BYTE v5[8];

  v2 = (unint64_t)&v5[qword_2576C2E50 ^ qword_2576C2E28];
  qword_2576C2E28 = 1137813707 * v2 - 0x1796AD5631F71675;
  qword_2576C2E50 = 1137813707 * (v2 ^ 0xE86952A9CE08E98BLL);
  v3 = ((uint64_t (*)(uint64_t))(qword_2518E7840[((-53
                                                                                         * ((qword_2576C2E50
                                                                                           - qword_2576C2E28) ^ 0x8B)) ^ byte_2478BAE30[byte_2478BAA10[(-53 * ((qword_2576C2E50 - qword_2576C2E28) ^ 0x8B))] ^ 0x27])
                                                        + 10]
                                        - 2))(a2);
  return ((uint64_t (*)(uint64_t))(qword_2518E7840[((-53
                                                                             * ((qword_2576C2E50 - qword_2576C2E28) ^ 0x8B)) ^ byte_2478BAB30[byte_2478BA710[(-53 * ((qword_2576C2E50 - qword_2576C2E28) ^ 0x8B))] ^ 0x2C])
                                                          - 58]
                                          - 3))(v3);
}

uint64_t sub_2477B8D94()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  void (*v5)(_QWORD);
  char v6;

  v0 = qword_2576C2E50 - qword_2576C2E60 - (_QWORD)&v6;
  v1 = (1137813707 * v0) ^ 0xE86952A9CE08E98BLL;
  v2 = 1137813707 * (v0 ^ 0xE86952A9CE08E98BLL);
  qword_2576C2E60 = v1;
  LOBYTE(v1) = -53 * ((v2 - v1) ^ 0x8B);
  v3 = qword_2518E7840[(v1 ^ byte_2478BAE30[byte_2478BAA10[v1] ^ 0xBE]) - 200];
  qword_2576C2E50 = v2;
  v5 = (void (*)(_QWORD))(qword_2518E7840[(v1 ^ byte_2478BAC30[byte_2478BA810[v1] ^ 0x98])
                                                   + 11]
                                   - 2);
  v5(*(unsigned int *)(v3 - 3));
  v5(*(unsigned int *)(qword_2518E7840[((-53 * (qword_2576C2E60 ^ 0x8B ^ qword_2576C2E50)) ^ byte_2478BAC30[byte_2478BA810[(-53 * (qword_2576C2E60 ^ 0x8B ^ qword_2576C2E50))] ^ 0xB0])
                                     - 213]
                     - 3));
  return ((uint64_t (*)(_QWORD))v5)(*(unsigned int *)(qword_2518E7840[((-53
                                                                                                 * (qword_2576C2E60 ^ 0x8B ^ qword_2576C2E50)) ^ byte_2478BAB30[byte_2478BA710[(-53 * (qword_2576C2E60 ^ 0x8B ^ qword_2576C2E50))] ^ 0x94])
                                                                              - 219]
                                                              - 3));
}

uint64_t sub_2477B8F34(mach_port_t a1, int a2, int *a3, uint64_t a4, int a5, _OWORD *a6, _QWORD *a7, _DWORD *a8, _DWORD *a9, _DWORD *a10, _DWORD *a11, _DWORD *a12)
{
  int v17;
  mach_port_t reply_port;
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  __int128 v23;
  __int128 v24;
  __int128 v25;
  __int128 v26;
  int v27;
  mach_msg_header_t msg;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  int v35;
  int v36;
  int v37;
  int v38;
  __int128 v39;
  __int128 v40;
  __int128 v41;
  __int128 v42;
  __int128 v43;
  __int128 v44;
  __int128 v45;
  __int128 v46;
  int v47;
  int v48;
  int v49;
  int v50;
  uint64_t v51;

  v51 = *MEMORY[0x24BDAC8D0];
  v30 = 1;
  v31 = a4;
  v32 = 16777472;
  v33 = a5;
  v34 = *MEMORY[0x24BDAC470];
  v17 = *a3;
  v35 = a2;
  v36 = v17;
  v37 = a5;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B000000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v19 = mach_msg(&msg, 3, 0x40u, 0xDCu, reply_port, 0, 0);
  v20 = v19;
  if ((v19 - 268435458) <= 0xE && ((1 << (v19 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v19)
    {
      if (msg.msgh_id == 71)
      {
        v20 = 4294966988;
      }
      else if (msg.msgh_id == 1300)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v20 = 4294966996;
          if (v30 == 2
            && msg.msgh_size == 212
            && !msg.msgh_remote_port
            && HIBYTE(v32) == 1
            && HIWORD(v35) << 16 == 1114112)
          {
            v21 = v33;
            if (v33 == v47)
            {
              v20 = 0;
              v22 = v34;
              *a3 = v38;
              v23 = v46;
              a6[6] = v45;
              a6[7] = v23;
              v24 = v44;
              a6[4] = v43;
              a6[5] = v24;
              v25 = v40;
              *a6 = v39;
              a6[1] = v25;
              v26 = v42;
              a6[2] = v41;
              a6[3] = v26;
              *a7 = v31;
              *a8 = v21;
              v27 = v49;
              *a9 = v48;
              *a10 = v27;
              *a11 = v50;
              *a12 = v22;
              return v20;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v20 = 4294966996;
          if (HIDWORD(v31))
          {
            if (msg.msgh_remote_port)
              v20 = 4294966996;
            else
              v20 = HIDWORD(v31);
          }
        }
        else
        {
          v20 = 4294966996;
        }
      }
      else
      {
        v20 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v20;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v20;
}

uint64_t sub_2477B918C(mach_port_t a1, unsigned int a2, __int128 *a3)
{
  __int128 v4;
  __int128 v5;
  __int128 v6;
  __int128 v7;
  mach_port_t reply_port;
  uint64_t v9;
  uint64_t v10;
  mach_msg_header_t msg;
  uint64_t v13;
  unsigned int v14;
  __int128 v15;
  __int128 v16;
  __int128 v17;
  __int128 v18;
  __int128 v19;
  __int128 v20;
  __int128 v21;
  __int128 v22;
  uint64_t v23;

  v23 = *MEMORY[0x24BDAC8D0];
  v4 = a3[5];
  v19 = a3[4];
  v20 = v4;
  v5 = a3[7];
  v21 = a3[6];
  v22 = v5;
  v6 = a3[1];
  v15 = *a3;
  v16 = v6;
  v7 = a3[3];
  v17 = a3[2];
  v13 = *MEMORY[0x24BDAC470];
  v14 = a2;
  v18 = v7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B100000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v9 = mach_msg(&msg, 3, 0xA4u, 0x2Cu, reply_port, 0, 0);
  v10 = v9;
  if ((v9 - 268435458) <= 0xE && ((1 << (v9 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
    return v10;
  }
  if ((_DWORD)v9)
  {
    mig_dealloc_reply_port(msg.msgh_local_port);
    return v10;
  }
  if (msg.msgh_id == 71)
  {
    v10 = 4294966988;
LABEL_17:
    mach_msg_destroy(&msg);
    return v10;
  }
  if (msg.msgh_id != 1301)
  {
    v10 = 4294966995;
    goto LABEL_17;
  }
  v10 = 4294966996;
  if ((msg.msgh_bits & 0x80000000) != 0)
    goto LABEL_17;
  if (msg.msgh_size != 36)
    goto LABEL_17;
  if (msg.msgh_remote_port)
    goto LABEL_17;
  v10 = v14;
  if (v14)
    goto LABEL_17;
  return v10;
}

uint64_t sub_2477B9318(mach_port_t a1, int a2, int a3, int a4, _OWORD *a5, uint64_t a6, int a7, _OWORD *a8, _QWORD *a9, _DWORD *a10)
{
  mach_port_t reply_port;
  uint64_t v13;
  uint64_t v14;
  int v15;
  mach_msg_header_t msg;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  _BYTE v23[28];
  int v24;
  uint64_t v25;

  v25 = *MEMORY[0x24BDAC8D0];
  v18 = 1;
  v19 = a6;
  v20 = 16777472;
  v21 = a7;
  v22 = *MEMORY[0x24BDAC470];
  *(_DWORD *)v23 = a2;
  *(_DWORD *)&v23[4] = a3;
  *(_DWORD *)&v23[8] = a4;
  *(_OWORD *)&v23[12] = *a5;
  v24 = a7;
  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = -2147478253;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B200000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v13 = mach_msg(&msg, 3, 0x54u, 0x50u, reply_port, 0, 0);
  v14 = v13;
  if ((v13 - 268435458) <= 0xE && ((1 << (v13 - 2)) & 0x4003) != 0)
  {
    mig_put_reply_port(msg.msgh_local_port);
  }
  else
  {
    if (!(_DWORD)v13)
    {
      if (msg.msgh_id == 71)
      {
        v14 = 4294966988;
      }
      else if (msg.msgh_id == 1302)
      {
        if ((msg.msgh_bits & 0x80000000) != 0)
        {
          v14 = 4294966996;
          if (v18 == 1 && msg.msgh_size == 72 && !msg.msgh_remote_port && HIBYTE(v20) == 1)
          {
            v15 = v21;
            if (v21 == *(_DWORD *)&v23[16])
            {
              v14 = 0;
              *a8 = *(_OWORD *)v23;
              *a9 = v19;
              *a10 = v15;
              return v14;
            }
          }
        }
        else if (msg.msgh_size == 36)
        {
          v14 = 4294966996;
          if (HIDWORD(v19))
          {
            if (msg.msgh_remote_port)
              v14 = 4294966996;
            else
              v14 = HIDWORD(v19);
          }
        }
        else
        {
          v14 = 4294966996;
        }
      }
      else
      {
        v14 = 4294966995;
      }
      mach_msg_destroy(&msg);
      return v14;
    }
    mig_dealloc_reply_port(msg.msgh_local_port);
  }
  return v14;
}

uint64_t sub_2477B9504(mach_port_t a1, _DWORD *a2, _DWORD *a3, _DWORD *a4, _DWORD *a5)
{
  mach_port_t reply_port;
  uint64_t v11;
  uint64_t v12;
  BOOL v13;
  int v15;
  int v16;
  mach_msg_header_t msg;
  unsigned int v18;
  int v19;
  int v20;
  int v21;
  int v22;

  reply_port = mig_get_reply_port();
  msg.msgh_remote_port = a1;
  msg.msgh_local_port = reply_port;
  msg.msgh_bits = 5395;
  *(_QWORD *)&msg.msgh_voucher_port = 0x4B300000000;
  if (MEMORY[0x24BDB0418])
  {
    voucher_mach_msg_set(&msg);
    reply_port = msg.msgh_local_port;
  }
  v11 = mach_msg(&msg, 3, 0x18u, 0x3Cu, reply_port, 0, 0);
  v12 = v11;
  if ((v11 - 268435458) > 0xE || ((1 << (v11 - 2)) & 0x4003) == 0)
  {
    if ((_DWORD)v11)
    {
      mig_dealloc_reply_port(msg.msgh_local_port);
      return v12;
    }
    if (msg.msgh_id == 71)
    {
      v12 = 4294966988;
    }
    else if (msg.msgh_id == 1303)
    {
      if ((msg.msgh_bits & 0x80000000) == 0)
      {
        if (msg.msgh_size == 52)
        {
          if (!msg.msgh_remote_port)
          {
            v12 = v18;
            if (!v18)
            {
              v15 = v20;
              *a2 = v19;
              *a3 = v15;
              v16 = v22;
              *a4 = v21;
              *a5 = v16;
              return v12;
            }
            goto LABEL_23;
          }
        }
        else if (msg.msgh_size == 36)
        {
          if (msg.msgh_remote_port)
            v13 = 1;
          else
            v13 = v18 == 0;
          if (v13)
            v12 = 4294966996;
          else
            v12 = v18;
          goto LABEL_23;
        }
      }
      v12 = 4294966996;
    }
    else
    {
      v12 = 4294966995;
    }
LABEL_23:
    mach_msg_destroy(&msg);
    return v12;
  }
  mig_put_reply_port(msg.msgh_local_port);
  return v12;
}

void sub_2477B967C(uint64_t a1, uint64_t a2)
{
  __asm { BR              X11 }
}

uint64_t sub_2477B96E4()
{
  return 4294925278;
}

void EIqMKHg4gO6i(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v8;

  if (a6)
    v7 = a7 == 0;
  else
    v7 = 1;
  v8 = !v7;
  __asm { BR              X9 }
}

uint64_t sub_2477B9908(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;

  a16 = 31090337
      * (((&a15 | 0x8563E22C) - &a15 + (&a15 & 0x7A9C1DD0)) ^ 0x42E28265)
      - 849012913;
  v18 = sub_2478B6A70(&a15);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((419 * (a15 == 1474860486)) ^ v16)))(v18);
}

uint64_t sub_2477B9994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a17 = 641
      - 31090337
      * (((&a15 | 0xFE0CE88E) - &a15 + (&a15 & 0x1F31770)) ^ 0x398D88C7);
  a15 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((2407 * (a16 == 1474860486)) ^ 0xEAu)))(v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_2477B9A28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17, uint64_t a18, unsigned int a19)
{
  uint64_t v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;

  v24 = 366490169
      * (((&a15 | 0x90D6EF71) - &a15 + (&a15 & 0x6F291088)) ^ 0x8678B935);
  a16 = a12;
  a17 = v24 + 2033;
  a15 = v22 + v24 - ((2 * v22) & 0xE3222F46) + 1905334179;
  sub_247881AB4((uint64_t)&a15);
  v25 = 31090337 * ((&a15 & 0x7E912F8C | ~(&a15 | 0x7E912F8C)) ^ 0x46EFB03A);
  a16 = v20;
  a17 = v25 + 1703;
  a19 = (v21 ^ 0xEDDABFFD) + ((2 * v21) & 0xDBB57FFA) - v25 + 1542446928;
  a18 = a12;
  v26 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v19 + 1504) - 8))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((3252 * (a15 == 1474860486)) ^ 0x6E0u)) - 4))(v26);
}

uint64_t sub_2477B9B8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, uint64_t a16, int a17, uint64_t a18, unsigned int a19)
{
  unsigned int v19;
  uint64_t v20;
  int v21;
  uint64_t (*v22)(int *);
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;

  v24 = 31090337 * ((&a15 & 0x2D148BD0 | ~(&a15 | 0x2D148BD0)) ^ 0x156A1466);
  a17 = v24 + v19 - 57;
  a19 = (v21 ^ 0xEDDBBFDD) + ((2 * v21) & 0xDBB77FBA) - v24 + 12 * (((v19 - 1590) | 0x40) ^ 0x78) + 1542379672;
  a16 = v20;
  a18 = a12;
  v25 = v22(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((2959 * (a15 == 1474860486)) ^ v19)) - 4))(v25);
}

uint64_t sub_2477B9C5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * ((&a15 & 0xBF038437 | ~(&a15 | 0xBF038437)) ^ 0xF1F5FD06);
  a16 = (v20 + 1106912208) ^ v22;
  a18 = 798320366 - v22;
  a20 = v22 ^ 0x8BF1C9B0;
  a15 = &STACK[0x2D3CC89B47FE83F6];
  a17 = a12;
  v23 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8
                                                      * ((56
                                                        * (((v20 ^ (a19 == ((v20 - 664) | 0x221) + 1474858853)) & 1) == 0)) ^ v20))
                                          - 4))(v23);
}

uint64_t sub_2477B9D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char *a11, uint64_t a12, uint64_t a13, char a14, __int16 a15, char a16, char *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  LODWORD(a18) = (v21 - 753) ^ (1401278017
                              * ((((2 * &a17) | 0x8FF0E688) - &a17 - 1207464772) ^ 0x43DB05A3));
  a17 = &a16;
  a19 = a11;
  a21 = &STACK[0x7A31AFAC6192CAF9];
  ((void (*)(char **))off_2518F0F80[v21 - 1510])(&a17);
  a18 = a11;
  a19 = &a14;
  HIDWORD(a17) = (v21 - 492) ^ ((((&a17 | 0xCAF3CB32) - (&a17 & 0xCAF3CB32)) ^ 0x7BFA4DFC)
                              * v22);
  ((void (*)(char **))off_2518F0F80[v21 - 1382])(&a17);
  a18 = a11;
  LODWORD(a19) = v21
               - 476588053 * (((&a17 | 0x325A3011) - (&a17 & 0x325A3011)) ^ 0x8FA73452)
               - 1348;
  v24 = sub_2477C6040((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((((_DWORD)a17 == 1474860486) * ((v21 + 127) ^ 0x8B9)) ^ v21))
                                          - 8))(v24);
}

uint64_t sub_2477B9EA4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14)
{
  int v14;
  uint64_t v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * ((3532 * (a14 == 0)) ^ v14)) - 8))();
}

uint64_t sub_2477B9F10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15)
{
  int v15;
  uint64_t v16;
  _BOOL4 v17;

  v17 = off_2518F0F80[v15 ^ 0x67D](a15, 4045722259) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((3989 * v17) ^ v15))
                            - (((v15 + 1534855067) & 0xA483FEF7)
                             + (unint64_t)(110 * (v15 ^ 0x671u)))
                            + 5068))();
}

uint64_t sub_2477B9F90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  uint64_t v16;
  int v17;

  v17 = a15 - ((((v15 - 1683) ^ 0xDCD) + 1461430064) & (2 * a15)) - 1416767122;
  return (*(uint64_t (**)(void))(v16
                              + 8
                              * ((454
                                * (((2 * v17) & 0xDDABFAE4 ^ 0x550BB2C4) + (v17 ^ 0x4558241C) + 531296944 == 243331106)) ^ v15)))();
}

uint64_t sub_2477BA044(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v5 = 22 * (v1 ^ 0x631);
  *v7 = a1;
  *v8 = v2;
  v13 = v5
      + 366490169 * ((&v11 + 892412933 - 2 * ((unint64_t)&v11 & 0x35312405)) ^ 0x239F7241)
      - 164;
  v12 = v9;
  v3(&v11);
  v12 = v10;
  v13 = v5
      - 1526
      + 366490169 * ((&v11 + 567629463 - 2 * ((unint64_t)&v11 & 0x21D55697)) ^ 0x377B00D3)
      + 1362;
  v3(&v11);
  return (v4 - 1474860486);
}

void rpY4QOlsWsxk0fLzfV8h(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_2477BA450@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 1592))();
  return 0;
}

void sub_2477BA464(uint64_t a1)
{
  int v1;
  uint64_t v2;

  v1 = *(_DWORD *)(a1 + 8) + 1437274309 * (((a1 | 0x6D8AD1A8) - (a1 & 0x6D8AD1A8)) ^ 0x4F84AC9D);
  v2 = *(_QWORD *)a1;
  ((uint64_t (**)(char *, uint64_t))off_2518F0F80)[v1 - 2219]((char *)off_2518F0F80[v1 ^ 0x8A7] - 12, (uint64_t)sub_2478B1714);
  __asm { BR              X10 }
}

uint64_t sub_2477BA518@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_QWORD *)(*(_QWORD *)(v2 + 8 * ((a1 ^ 0x6C0) - 2283)) - 4) == 0)
                                          * ((((a1 ^ 0x6C0) - 2234) | 0x891) ^ 0xE31)) ^ a1 ^ 0x6C0))
                            - 12))();
}

uint64_t sub_2477BA570@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0xF71)))(v1);
}

void sub_2477BA590(uint64_t a1)
{
  int v1;
  unint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  v14 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)a1 - 142545853 * (a1 ^ 0x2AFFAF6F);
  v2 = *(unint64_t **)(a1 + 24);
  v3 = *(_QWORD *)(a1 + 32);
  v5 = *(unint64_t **)(a1 + 8);
  v4 = *(_QWORD *)(a1 + 16);
  v6 = *(_QWORD *)(v3 - 0x7E898A58A7A2E80);
  LODWORD(v9) = (366490169
               * (((&v8 | 0xA83C8C21) - &v8 + (&v8 & 0x57C373D8)) ^ 0xBE92DA65)) ^ (v1 + 1015);
  v8 = v2;
  v10 = v6;
  v11 = &STACK[0x1960A8AE33B1FF0B];
  v12 = v3;
  v13 = v4;
  ((void (*)(unint64_t **))off_2518F0F80[v1 - 724])(&v8);
  v7 = *(_QWORD *)(v3 - 0x7E898A58A7A2E88);
  LODWORD(v10) = v1
               + 476588053
               * (((&v8 | 0x29F51879) - &v8 + (&v8 & 0xD60AE780)) ^ 0x94081C3A)
               + 2078;
  v8 = &STACK[0x1960A8AE33B1FF1B];
  v9 = v7;
  sub_2478AA724((uint64_t)&v8);
  v8 = v5;
  LODWORD(v9) = v1
              - 1437274309 * ((((2 * &v8) | 0x78B7C62A) - &v8 + 1134828779) ^ 0x9E559E20)
              - 412;
  sub_24786D77C((uint64_t)&v8);
  __asm { BR              X8 }
}

uint64_t sub_2477BA7D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t (*a10)(uint64_t), uint64_t a11)
{
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;

  *(_QWORD *)(v17 - 128) = v15;
  *(_QWORD *)(v17 - 120) = v15;
  *(_DWORD *)(v17 - 136) = (v16 - 1187) ^ (366490169
                                         * ((((v17 - 144) | 0xFDFECED) + (~(v17 - 144) | 0xF0201312)) ^ 0x1971BAA8));
  *(_QWORD *)(v17 - 144) = a11;
  *(_QWORD *)(v17 - 112) = v13;
  *(_QWORD *)(v17 - 104) = v14;
  v18 = a10(v17 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * ((452
                                                        * (v12 + ((7 * (v16 ^ 0xBEC) + 121) | 0x818u) - 2943 > 0x7FFFFFFE)) ^ (7 * (v16 ^ 0xBEC))))
                                          - 8))(v18);
}

uint64_t sub_2477BA87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;

  *(_QWORD *)(v18 - 128) = v16;
  *(_QWORD *)(v18 - 120) = v16;
  *(_QWORD *)(v18 - 144) = v13;
  *(_QWORD *)(v18 - 136) = v14;
  *(_DWORD *)(v18 - 112) = v17
                         + 1697562443 * ((((v18 - 144) | 0x463E555) - ((v18 - 144) & 0x463E555)) ^ 0xD3F3DDD1)
                         - 1428;
  ((void (*)(uint64_t))((char *)off_2518F0F80[v17 ^ 0xBB7] - 4))(v18 - 144);
  v19 = 476588053 * ((((v18 - 144) | 0x12DDB6C8) - (v18 - 144) + ((v18 - 144) & 0xED224930)) ^ 0xAF20B28B);
  *(_DWORD *)(v18 - 136) = v19 + v15 - 164976532;
  *(_DWORD *)(v18 - 132) = (v17 + 360) ^ v19;
  *(_QWORD *)(v18 - 144) = a12;
  v20 = sub_2477C59A0(v18 - 144);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8 * ((249 * (*(_DWORD *)(v18 - 128) == -1420110878)) ^ v17))
                                          - ((v17 + 266232881) ^ 0xFDE6FA3)))(v20);
}

uint64_t sub_2477BA9A8()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((452 * (v1 + ((v2 + 121) | 0x818u) - 2943 > 0x7FFFFFFE)) ^ v2))
                            - 8))();
}

uint64_t sub_2477BA9E0()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v8;
  void (*v9)(uint64_t);
  uint64_t v10;

  v5 = *(_QWORD *)(v8 + 40);
  v6 = 142545853 * (((((v4 - 144) | 0x5E86588C) ^ 0xFFFFFFFE) - (~(v4 - 144) | 0xA179A773)) ^ 0x8B86081C);
  *(_QWORD *)(v4 - 144) = v10;
  *(_DWORD *)(v4 - 136) = v6 ^ 0x2F27B638;
  *(_DWORD *)(v4 - 132) = v6 + v2 + 556;
  sub_24789484C(v4 - 144);
  *(_DWORD *)(v4 - 136) = (v2 + 1015) ^ (366490169
                                       * (((v4 - 144) & 0x1C47B1B4 | ~((v4 - 144) | 0x1C47B1B4)) ^ 0xF516180F));
  *(_QWORD *)(v4 - 128) = v3;
  *(_QWORD *)(v4 - 120) = v3;
  *(_QWORD *)(v4 - 144) = v10;
  *(_QWORD *)(v4 - 112) = v0;
  *(_QWORD *)(v4 - 104) = v1;
  v9(v4 - 144);
  *(_QWORD *)(v4 - 144) = v5;
  *(_QWORD *)(v4 - 136) = v3;
  *(_DWORD *)(v4 - 128) = v2
                        + 476588053 * ((((2 * (v4 - 144)) | 0xA3372910) - (v4 - 144) - 1369150600) ^ 0xEC6690CB)
                        + 2078;
  return sub_2478AA724(v4 - 144);
}

void ioXEmDKsuxLeg(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v8;

  if (a6)
    v7 = a7 == 0;
  else
    v7 = 1;
  v8 = !v7;
  __asm { BR              X9 }
}

uint64_t sub_2477BABA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;

  a18 = 31090337
      * (((&a17 | 0x9ED35B20) - &a17 + (&a17 & 0x612CA4D8)) ^ 0x59523B69)
      - 849012913;
  v20 = sub_2478B6A70(&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((4790 * (a17 == 1474860486)) ^ v18)) - 8))(v20);
}

uint64_t sub_2477BAC38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a17 = &STACK[0x363276B12DAEA48C];
  a19 = 641 - (((&a17 | 0x472F3EF3) + (~&a17 | 0xB8D0C10C)) ^ 0x80AE5EBB) * v19;
  sub_24786328C((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((2043 * (a18 == 1474860486)) ^ 0x3EFu)) - 8))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10);
}

uint64_t sub_2477BACC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, unsigned int a17, unint64_t a18, int a19, unint64_t a20,unsigned int a21)
{
  unint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  unint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v28 = 366490169 * ((v27 - 441367172 - 2 * (v27 & 0xE5B1457C)) ^ 0xF31F1338);
  a17 = v25 + 1905334179 + v28 - ((2 * v25) & 0xE3222F46);
  a18 = a16;
  a19 = v28 + 2033;
  sub_247881AB4((uint64_t)&a17);
  v29 = 366490169
      * (((v27 | 0x37C3FBB05C50394ALL) - (v27 | 0xC83C044FA3AFC6B5) - 0x37C3FBB05C50394BLL) ^ 0x1D5D4EA44AFE6F0ELL);
  a18 = v24 - ((2 * v24) & 0xE93395F3DCC03498) - v29 - 0xB663506119FE5B4;
  a20 = a16;
  a19 = 316 - v29;
  sub_2477BD690((uint64_t)&a17);
  v30 = 366490169 * (((v27 | 0x5A7E7EAB) - v27 + (v27 & 0xA5818150)) ^ 0x4CD028EF);
  a18 = a16;
  a19 = v30 + 2033;
  a17 = v23 - ((2 * v23) & 0xE3222F46) + 1905334179 + v30;
  sub_247881AB4((uint64_t)&a17);
  v31 = 31090337 * (((v27 | 0x5029136D) + (~(_DWORD)v27 | 0xAFD6EC92)) ^ 0x97A87325);
  a19 = v31 + 1703;
  a21 = (v22 ^ 0x7FCEBFED) + ((2 * v22) & 0xFF9D7FDA) - v31 - 906240160;
  a18 = v21;
  a20 = a16;
  sub_2477BC464((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((4 * (a17 == 1474860486)) | 0x780u)) - 12))(v32, v33, v34, v35, v36, v37, v38, v39, a9, a10, a11, a12);
}

uint64_t sub_2477BAF3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20,int a21,unsigned int a22)
{
  unsigned int v22;
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;

  v24 = 1314530549 * ((969195466 - (&a17 | 0x39C4BFCA) + (&a17 | 0xC63B4035)) ^ 0x7732C6FB);
  a18 = (v22 + 1106912040) ^ v24;
  a19 = a16;
  a17 = &STACK[0x2D3CC89B47FE8406];
  a20 = -1879169146 - v24;
  a22 = v24 ^ 0x8BF1C9B0;
  v25 = sub_2478B0F68((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * (((a21 == (v22 ^ 0x57E89246)) * ((v22 ^ 0xF97) + 528)) ^ v22))
                                          - 12))(v25);
}

uint64_t sub_2477BB024(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, char *a14, int a15, char a16, uint64_t a17, uint64_t a18, char *a19, char *a20,char *a21,uint64_t a22,unint64_t *a23)
{
  unsigned int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a19 = &a16;
  a23 = &STACK[0x7A31AFAC6192CB09];
  a21 = a14;
  LODWORD(a20) = (v23 - 1191) ^ (1401278017
                               * ((((&a19 | 0x81BBEAC4) ^ 0xFFFFFFFE) - (~&a19 | 0x7E44153B)) ^ 0x7A6763DC));
  (*(void (**)(char **))(v25 + 8 * (v23 ^ 0x86C)))(&a19);
  a20 = a14;
  a21 = &a13;
  HIDWORD(a19) = (v23 - 930) ^ ((&a19 ^ 0xB10986CE) * v24);
  (*(void (**)(char **))(v25 + 8 * (v23 ^ 0x8EC)))(&a19);
  LODWORD(a21) = v23
               - 476588053 * ((&a19 & 0x44A9CE66 | ~(&a19 | 0x44A9CE66)) ^ 0x6AB35DA)
               - 1786;
  a20 = a14;
  v27 = sub_2477C6040((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * ((((_DWORD)a19 == 1474860486)
                                                        * ((v23 - 944918579) & 0xF9B ^ (v23 + 5931))) ^ v23))
                                          - 12))(v27);
}

uint64_t sub_2477BB17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((a13 != 0) | (2 * (a13 != 0)) | (v13 - 3))) - 12))();
}

uint64_t sub_2477BB1E8@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, unsigned int a8)
{
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  _BOOL4 v11;

  v10 = (a1 + 5656619) & 0xFFA9AFD7;
  v11 = (*(uint64_t (**)(_QWORD, uint64_t))(v8 + 8 * (int)(v10 - 2043)))(a8, 2036672615) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (int)((1717 * ((((v10 - 2071) ^ v11) & 1) == 0)) ^ v10)) - 12))();
}

uint64_t sub_2477BB254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * ((361
                                          * ((((a15 - ((2 * a15) & 0x571BB2DC) - 1416767122) << (((v15 - 5) | 5) - 22)) & 0xDDABFAE4 ^ 0x550BB2C4)
                                           + ((a15 - ((2 * a15) & 0x571BB2DC) - 1416767122) ^ 0x4558241C)
                                           + 531296944 != 243331106)) ^ (v15 + 544)))
                            - 12))();
}

uint64_t sub_2477BB314()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((200 * (v2 + v1 + ((v0 + 159939273) | 0x2466005Au) - 482640588 > 7)) ^ (v0 + 325)))
                            - 4))();
}

uint64_t sub_2477BB37C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((146 * (v1 - a1 >= (unint64_t)((v2 ^ 0x1BD3u) + 770602155) - 770606394)) ^ v2))
                            - 4))();
}

uint64_t sub_2477BB3C4(uint64_t a1, int a2)
{
  int v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((29 * (v3 >= v2 + ((a2 - 1074796885) & 0x6DFE8DFFu) + 32)) ^ a2))
                            - ((3 * (a2 ^ 0x11D2u)) ^ 0x47FLL)))();
}

uint64_t sub_2477BB41C(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  __int128 v8;
  __int128 v9;
  uint64_t v10;

  v7 = (v3 + v2);
  v8 = *(_OWORD *)(v1 + v7 - 15);
  v9 = *(_OWORD *)(v1 + v7 - 31);
  v10 = a1 + v7;
  *(_OWORD *)(v10 - 15) = v8;
  *(_OWORD *)(v10 - 31) = v9;
  return (*(uint64_t (**)(void))(v6 + 8 * ((7276 * (((v5 + 910) | 0x40) - 942 == (v4 & 0xFFFFFFE0))) ^ (v5 + 3344))))();
}

uint64_t sub_2477BB478(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  *v7 = a1;
  *v8 = v2;
  v5 = 19 * ((v1 - 151) ^ 0x7B5);
  v13 = v1
      - 151
      + 366490169 * ((2 * (&v11 & 0x11730088) - &v11 + 1854734199) ^ 0x7822A933)
      - 324;
  v12 = v9;
  v3(&v11);
  v13 = v5
      + 366490169
      * (((&v11 | 0x8C1C70E7) - &v11 + (&v11 & 0x73E38F18)) ^ 0x9AB226A3)
      + 589;
  v12 = v10;
  v3(&v11);
  return (v4 - 1474860486);
}

void sub_2477BB714(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  unsigned int v4;
  unsigned int v5;
  unsigned int v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v1 = *(_DWORD *)(a1 + 24) - 366490169 * ((2 * (a1 & 0x104AC4A1) - a1 - 273335458) ^ 0xF91B6D1A);
  v3 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  if (*(_DWORD *)(v3 - 0x1960A8AE33B1FEE7) - 454684228 >= 0)
    v4 = *(_DWORD *)(v3 - 0x1960A8AE33B1FEE7) - 454684228;
  else
    v4 = 454684228 - *(_DWORD *)(v3 - 0x1960A8AE33B1FEE7);
  if (*(_DWORD *)(v2 - 0x1960A8AE33B1FEE7) - 454684228 >= 0)
    v5 = *(_DWORD *)(v2 - 0x1960A8AE33B1FEE7) - 454684228;
  else
    v5 = 454684228 - *(_DWORD *)(v2 - 0x1960A8AE33B1FEE7);
  v8 = v1 - 142545853 * (&v7 ^ 0x2AFFAF6F) + 263;
  v7 = v3;
  sub_247881D24((uint64_t)&v7);
  if (v4 >= v5)
    v6 = v5;
  else
    v6 = v4;
  __asm { BR              X15 }
}

uint64_t sub_2477BB88C@<X0>(uint64_t a1@<X8>, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  int v14;
  _BOOL4 v16;

  v11 = v3 - 2018789665;
  v12 = v4 - 54;
  v13 = 4 * (v8 + v5);
  v14 = v9
      - 2035892222
      + (*(_DWORD *)(*(_QWORD *)(v7 - 0x1960A8AE33B1FEE3) + v13 - 0x20586952EC1D9172) ^ v10)
      + (*(_DWORD *)(*(_QWORD *)(a2 - 0x1960A8AE33B1FEE3) + v13 - 0x20586952EC1D9172) ^ v10);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x1960A8AE33B1FEE3) + v13 - 0x20586952EC1D9172) = v14
                                                                                   + ((215 * (v12 ^ 0x32C)) ^ (v10 + 2625))
                                                                                   - (v6 & (2 * v14));
  v16 = v8 + 857931286 > 128693982 || v8 + 857931286 < v11;
  return ((uint64_t (*)(unint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((78 * v16) ^ v12)) - 12))(0xDFA796AD13E26E8ELL, 0xFFDD9EB7BEA7E613, 0x17D4FCC26, 0x6BBFFFCC7FED9EFLL, 857931286, 128693982);
}

uint64_t sub_2477BB9BC()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 - 571003149 < (int)(v3 + 847243197);
  if (v2 - 571003149 < -1300240451 != v3 > ((89 * (v1 ^ 0xE62)) ^ 0x4D80149Fu))
    v4 = v3 > ((89 * (v1 ^ 0xE62)) ^ 0x4D80149Fu);
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((29 * v4) ^ v1)) - 8))();
}

uint64_t sub_2477BBA34@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  _QWORD *v15;
  _BOOL4 v16;
  uint64_t v17;
  int v18;
  int v19;
  _BOOL4 v20;

  v15 = (_QWORD *)(v10 - 0x1960A8AE33B1FEE3);
  v16 = v14 > v7;
  v17 = 4 * (v11 + v8);
  v18 = v2 + v12 + (*(_DWORD *)(*v15 + v17 - 0x20586952EC1D9172) ^ v13);
  *(_DWORD *)(*(_QWORD *)(a1 - 0x1960A8AE33B1FEE3) + v17 - 0x20586952EC1D9172) = v18 + v13 - (v9 & (2 * v18));
  v19 = v11 + 1 + v4;
  LODWORD(v17) = v16 ^ (v19 < v5);
  v20 = v19 < v6;
  if (!(_DWORD)v17)
    v16 = v20;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1393 * !v16) ^ ((v3 ^ 0xD7A) + 2041))) - 8))();
}

uint64_t sub_2477BBB3C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  _BOOL4 v4;

  v4 = v2 + 369155152 < (int)(v3 + 1787398878 + ((v1 - 1708797215) & 0x65DA2A7D));
  if (v3 > 0x15766AE5 != v2 + 369155152 < -360082150)
    v4 = v3 > 0x15766AE5;
  return (*(uint64_t (**)(void))(v0 + 8 * ((52 * v4) ^ v1)))();
}

uint64_t sub_2477BBBBC@<X0>(unsigned int a1@<W0>, uint64_t a2@<X8>, uint64_t a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  unsigned int v14;
  _BOOL4 v15;
  uint64_t v16;
  int v17;
  int v18;
  _BOOL4 v19;

  v15 = v14 > a1;
  v16 = 4 * (v11 + v9);
  v17 = v4 + v12 + (*(_DWORD *)(*(_QWORD *)(a3 - 0x1960A8AE33B1FEE3) + v16 - 0x20586952EC1D9172) ^ v13);
  *(_DWORD *)(*(_QWORD *)(a2 - 0x1960A8AE33B1FEE3) + v16 - 0x20586952EC1D9172) = v17
                                                                                   + v13
                                                                                   - ((v10 + 398 * (v7 ^ 0xA34) - 3184) & (2 * v17));
  v18 = v11 + 1 + v6;
  LODWORD(v16) = v15 ^ (v18 < v5);
  v19 = v18 < v8;
  if (!(_DWORD)v16)
    v15 = v19;
  return (*(uint64_t (**)(void))(v3 + 8 * ((1761 * !v15) ^ v7)))();
}

uint64_t sub_2477BBCBC()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((211 * (v1 != 0x6999EB486A6C002)) ^ v2))
                            - ((v2 + 794149709) & 0xD0AA337F)
                            + 821))();
}

void sub_2477BBD08(uint64_t a1@<X8>)
{
  int v1;
  int v2;
  char v3;
  int v4;
  int v5;
  int v6;

  *(_DWORD *)(*(_QWORD *)(a1 - 0x1960A8AE33B1FEE3) + 4 * (v6 + v4) - 0x20586952EC1D9172) = v2
                                                                                               - (((v2 << (v3 - 111))
                                                                                                 + 45252604) & v5)
                                                                                               + 2109477665;
  *(_DWORD *)(a1 - 0x1960A8AE33B1FEE7) = (((v6 + 1 + v4) * (v1 - 1023026955)) ^ 0xFF7FFF7F)
                                         + 463072965
                                         + ((2 * (v6 + 1 + v4) * (v1 - 1023026955)) & 0xFEFFFEFF);
}

void sub_2477BBDE8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 32) ^ (1697562443 * (a1 ^ 0xD7903884));
  __asm { BR              X8 }
}

uint64_t sub_2477BBE7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;

  a16 = v17
      + 31090337
      * (((&a15 | 0x3913A78A) - &a15 + (&a15 & 0xC6EC5870)) ^ 0xFE92C7C3)
      - 849015944;
  v18 = sub_2478B6A70(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((44 * (a15 == 1474860486)) ^ v17)))(v18);
}

uint64_t sub_2477BBEF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a17 = v18 - (((&a15 | 0xF3D89703) + (~&a15 | 0xC2768FC)) ^ 0x3459F74B) * v19 - 2390;
  a15 = &STACK[0x363276B12DAEA47C];
  sub_24786328C((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((1123 * (a16 == (v18 ^ 0xFD7) + 1474859462)) ^ v18)))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477BBF8C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, unsigned int a17, uint64_t a18, int a19)
{
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  void (*v25)(uint64_t *);
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;

  v28 = v19[5];
  v29 = *v19;
  v24 = v19[1];
  a18 = a14;
  a17 = (v23 + 280) ^ (375636451 * (((&a15 | 0x51913ADA) - (&a15 & 0x51913ADA)) ^ 0x2AF6056));
  a15 = v24;
  v25 = *(void (**)(uint64_t *))(v21 + 8 * (v23 - 822));
  v25(&a15);
  a15 = v28;
  a17 = (v23 + 280) ^ (375636451
                     * ((&a15 + 1259722345 - 2 * (&a15 & 0x4B15D669)) ^ 0x182B8CE5));
  a18 = a14;
  v25(&a15);
  a16 = v23 + ((&a15 & 0xEF027F5C | ~(&a15 | 0xEF027F5C)) ^ 0xC76DB827) * v22 - 299;
  a18 = v29;
  a15 = a14;
  v26 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v21 + 8 * (v23 - 747)) - 8))(&a15);
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((5381 * (a19 == ((v23 + 2007) ^ 0x57E89E11))) ^ v23)))(v26);
}

uint64_t sub_2477BC0E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * ((453293871 - (&a15 | 0x1B04B72F) + (&a15 | 0xE4FB48D0)) ^ 0x55F2CE1E);
  a15 = &STACK[0x2D3CC89B47FE8406];
  a16 = (v21 + 1106912936) ^ v22;
  a17 = a14;
  a18 = 774475998 - v22;
  a20 = v22 ^ 0x8BF1C9B0;
  v23 = sub_2478B0F68((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * ((357
                                              * (a19 == ((v21 + 1477) | 0x212)
                                                      + 1474855930
                                                      + ((v21 + 1086770173) & 0xBF3935F7))) ^ v21)))(v23);
}

uint64_t sub_2477BC1E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char a12, __int16 a13, char a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18, uint64_t a19, char *a20)
{
  uint64_t v20;
  uint64_t v21;
  int v22;
  void (*v23)(int *);
  uint64_t v24;

  a18 = (v22 - 384) ^ (1314530549
                     * ((&a17 - 1365407817 - 2 * (&a17 & 0xAE9D87B7)) ^ 0x1F940179));
  a19 = a15;
  a20 = &a14;
  v23 = *(void (**)(int *))(v21 + 8 * (v22 - 1274));
  v23(&a17);
  a19 = a15;
  a20 = &a12;
  a18 = (v22 - 384) ^ (1314530549
                     * ((&a17 - 193647739 - 2 * (&a17 & 0xF4752B85)) ^ 0x457CAD4B));
  v23(&a17);
  a19 = a15;
  LODWORD(a20) = v22
               - 476588053 * ((&a17 - 519023981 - 2 * (&a17 & 0xE1105293)) ^ 0x5CED56D0)
               - 1240;
  v24 = sub_2477C6040((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (((a17 != 1474860486)
                                                        * ((v22 ^ 0x5E6) + 3012 + 83 * (v22 ^ 0x5E6) - 3620)) ^ v22))
                                          - 12))(v24);
}

uint64_t sub_2477BC324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12)
{
  uint64_t v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((2230 * (a12 == 0)) ^ v13)) - 12))();
}

uint64_t sub_2477BC384()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;
  uint64_t result;
  void (*v4)(uint64_t *);
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  *v1 = v5;
  v9 = v6;
  v10 = v2 + 1454 + 366490169 * (&v8 ^ 0x16AE5644) - 1435;
  v4(&v8);
  v10 = v2
      + 1454
      + 366490169 * ((2 * (&v8 & 0x56C286F8) - &v8 + 691894529) ^ 0x3F932F45)
      - 1435;
  v9 = v7;
  result = ((uint64_t (*)(uint64_t *))v4)(&v8);
  *(_DWORD *)(v0 + 16) = 1474860486;
  return result;
}

void sub_2477BC464(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) - 31090337 * (((a1 | 0xA983C6B9) - (a1 | 0x567C3946) + 1450981702) ^ 0x6E02A6F0);
  __asm { BR              X11 }
}

uint64_t sub_2477BC544@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((((a1 + 1601196321) ^ 0xA08FAFDF) + ((a1 + 1601196321) & 0xA08FAFF5)) * (v1 == 0)) | a1)))();
}

uint64_t sub_2477BC590@<X0>(uint64_t (*a1)(unsigned int *)@<X8>)
{
  int v1;
  _DWORD *v2;
  uint64_t v3;
  unsigned int v4;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;
  unsigned int v10;

  v4 = 1401278017
     * (((&v6 | 0x4665ECCE) - &v6 + (&v6 & 0xB99A1330)) ^ 0x42469A29);
  v8 = (v1 - 529) ^ v4;
  v10 = v4 - 775215076;
  v7 = 0x6BD0AB23AAB71167;
  v6 = 1040973164 - v4;
  v9 = v3;
  result = a1(&v6);
  *v2 = *(_DWORD *)(v3 - 0x3408C9F6C2C26174);
  return result;
}

void sub_2477BCE2C(uint64_t a1)
{
  int v1;
  _BOOL4 v3;

  v3 = *(_DWORD *)(*(_QWORD *)a1 - 0x1960A8AE33B1FEE7) == 454684228
    || *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1960A8AE33B1FEE7) == 454684228;
  v1 = *(_DWORD *)(a1 + 16) ^ (375636451 * (((a1 | 0x361D7CF0) - (a1 & 0x361D7CF0)) ^ 0x6523267C));
  __asm { BR              X14 }
}

void sub_2477BCF44()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void sub_2477BD690(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 366490169 * ((~(_DWORD)a1 & 0xB3FF5545 | a1 & 0x4C00AABA) ^ 0xA5510301);
  __asm { BR              X10 }
}

uint64_t sub_2477BD764@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, unsigned int a4, unint64_t *a5, int a6, uint64_t a7, unsigned int a8)
{
  int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;

  v11 = 1401278017 * ((907733701 - (&a4 | 0x361AEAC5) + (&a4 | 0xC9E5153A)) ^ 0xCDC663DD);
  a8 = v11 - 781192756;
  a5 = &STACK[0x6BD0AB23AAB7116F];
  a4 = 1040973172 - v11;
  a7 = v9;
  a6 = (v8 + 832) ^ v11;
  v12 = (*(uint64_t (**)(unsigned int *))(a1 + 8 * (v8 ^ 0x1A8)))(&a4);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * ((4156 * (*(_DWORD *)(v9 - 0x3408C9F6C2C26174) == 1474860486)) ^ v8))
                                          - ((v8 - 10476567) & 0x9FDBFC)
                                          + 308))(v12);
}

void sub_2477BD860(_DWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  uint64_t v4;
  _BYTE *v5;

  v4 = *(_QWORD *)(v1 + 8) + v2;
  *v5 = ((v3 - 26) ^ HIBYTE(v4) ^ 0xC8) - ((2 * ((v3 - 26) ^ HIBYTE(v4) ^ 0xC8)) & 0xA0) - 48;
  v5[1] = (BYTE6(v4) ^ 0x99) - ((2 * (BYTE6(v4) ^ 0x99)) & 0xA0) - 48;
  v5[2] = (BYTE5(v4) ^ 0xCA) - 2 * ((BYTE5(v4) ^ 0xCA) & 0x51 ^ BYTE5(v4) & 1) - 48;
  v5[3] = (BYTE4(v4) ^ 0xF9) + (~(2 * (BYTE4(v4) ^ 0xF9)) | 0x5F) - 47;
  v5[4] = (BYTE3(v4) ^ 0xEE) - ((2 * (BYTE3(v4) ^ 0xEE)) & 0xA0) - 48;
  v5[5] = (BYTE2(v4) ^ 0x60) - 2 * ((BYTE2(v4) ^ 0x60) & 0x52 ^ BYTE2(v4) & 2) - 48;
  v5[6] = (BYTE1(v4) ^ 0x1A) - 2 * ((BYTE1(v4) ^ 0x1A) & 0x55 ^ BYTE1(v4) & 5) - 48;
  v5[7] = v4 ^ 0x9C;
  *(_DWORD *)v1 = *a1;
}

void TsbHVdUOnzCHizuzrAdwYFpb()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337
        * (((v0 | 0xDA10686D) - v0 + (v0 & 0x25EF9790)) ^ 0x1D910824)
        - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477BDA68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 641
      - (((&a13 | 0xAD803EBF) - &a13 + (&a13 & 0x527FC140)) ^ 0x6A015EF6)
      * v15;
  a13 = &STACK[0x363276B12DAEA45C];
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((21 * (a14 != v16)) ^ 0x781u))
                                                                                       - 4))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477BDAF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unint64_t a14, int a15, uint64_t a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  uint64_t v22;

  v21 = 366490169 * ((v20 - 2 * (v20 & 0xCC7B9873A889A0A0) - 0x3384678C57765F60) ^ 0xE6E52D67BE27F6E4);
  a14 = v16 - ((2 * v16) & 0xE93395F3DCC03498) - v21 - 0xB663506119FE5B4;
  a15 = 316 - v21;
  a16 = a10;
  v22 = ((uint64_t (*)(int *))(*(_QWORD *)(v19 + 2176) - 12))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((199 * (a13 == v17)) ^ 0x81Eu)) - 4))(v22);
}

uint64_t sub_2477BDBD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549 * ((&a13 & 0xB7E6BE20 | ~(&a13 | 0xB7E6BE20)) ^ 0xF910C711);
  a13 = &STACK[0x2D3CC89B47FE83F6];
  a14 = (v20 + 1106911882) ^ v21;
  a18 = v21 ^ 0x8BF1C9B0;
  a16 = 1458903639 - v21;
  a15 = a10;
  v22 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8 * (((a17 == v18) * (((v20 ^ 0x3F) - 141) ^ 0x7B0)) ^ v20))
                                          - 4))(v22);
}

uint64_t sub_2477BDC9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  uint64_t v22;

  a15 = (v20 - 940) ^ (((2 * (&a14 & 0x4B6D8C88) - &a14 - 1265470602) ^ 0x59BF5B8) * v21);
  a16 = a11;
  a17 = &a13;
  (*(void (**)(int *))(v19 + 8 * (int)(v20 - 1830)))(&a14);
  LODWORD(a17) = v20
               - 476588053 * ((((2 * &a14) | 0xF3E10BE2) - &a14 + 101677583) ^ 0x440D81B2)
               - 1796;
  a16 = a11;
  v22 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((6428 * (a14 == ((v20 - 3) ^ (v17 + 2066)))) ^ v20))
                                          - 12))(v22);
}

uint64_t sub_2477BDD74()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v10 = v3 + ((2 * (&v8 & 0x24560A58) - &v8 - 609618521) ^ 0xCD07A3E3) * v1 - 482;
  v9 = v6;
  v0(&v8);
  v10 = (v3 ^ 0xF8A) + ((2 * (&v8 & 0xA7FC858) - &v8 - 176146526) ^ 0xE32E61E6) * v1 - 344;
  v9 = v5;
  v0(&v8);
  return (v7 ^ 0x57F99DFF) - 1116217 + ((v2 - 1343015971) & (2 * v7)) - 1474860486;
}

uint64_t sub_2477BDE8C(_DWORD *a1)
{
  unsigned int v2;
  unsigned int v3;
  int v4;
  uint64_t result;
  unsigned int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  v9 = *MEMORY[0x24BDAC8D0];
  v2 = 366490169 * ((247343528 - (a1 | 0xEBE29A8) + (a1 | 0xF141D657)) ^ 0xE7EF8013);
  v3 = a1[2] + v2;
  v4 = a1[3] - v2;
  v8 = (1314530549 * ((&v8 + 1251764034 - 2 * ((unint64_t)&v8 & 0x4A9C6742)) ^ 0xFB95E18C)) ^ (v3 - 1567048077);
  result = nullsub_1(&v8);
  if (v4 > 1041410997)
  {
    if (v4 == 1326623669)
    {
      v6 = 3;
    }
    else
    {
      if (v4 != 1041410998)
        goto LABEL_11;
      v6 = 1;
    }
LABEL_10:
    v7 = *(_QWORD *)((char *)off_2518F0F80[v3 ^ 0xE50C9D1C]
                   + 8
                   * (int)((961
                          * (off_2518F0F80[v3 ^ 0xE50C9D3A](((v3 - 649249136) & 0x41A6257B)- 1278565458+ *((_DWORD *)off_2518F0F80[v3 ^ 0xE50C9D0F] + 6 * v6 + 1), 3511634213) == 0)) ^ (v3 + 452159673))- 4);
    __asm { BR              X9 }
  }
  if (v4 == 1041410994)
  {
    v6 = 0;
    goto LABEL_10;
  }
  if (v4 == 1041410997)
  {
    v6 = 2;
    goto LABEL_10;
  }
LABEL_11:
  a1[4] = 1474818434;
  return result;
}

void sub_2477BE4F0(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 12) ^ (375636451 * ((a1 - 350324472 - 2 * (a1 & 0xEB1E7908)) ^ 0xB8202384));
  __asm { BR              X9 }
}

uint64_t sub_2477BE5C8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (a1 ^ ((v2 != 0) | (2 * (v2 != 0)))))
                            - ((a1 - 63959614) & 0x3CFEFDD)
                            - ((a1 - 63959614) ^ 0xFFFFFFFF03CFEFCELL)))();
}

uint64_t sub_2477BE61C()
{
  int v0;
  uint64_t v1;
  unsigned int *v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*v2 > (((v0 - 367) | 0x404) ^ 0x591u)) * (((v0 - 729) | 0x1C0) - 461)) ^ v0))
                            - 8))();
}

void sub_2477BE65C()
{
  uint64_t v0;
  uint64_t v1;

  *(_DWORD *)(v1 - 0x3408C9F6C2C26174) = 1474818463;
  *(_DWORD *)(v0 + 8) = *(_DWORD *)(v1 - 0x3408C9F6C2C26174);
}

void OflR7BMjGok3A7mYQFt9(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __asm { BR              X10 }
}

uint64_t sub_2477BECA8@<X0>(_QWORD *a1@<X5>, uint64_t a2@<X6>, int a3@<W8>)
{
  int v3;
  uint64_t v4;

  *a1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v3 + a3 + 693) ^ ((2 * (a2 == 0)) | (16 * (a2 == 0))))) - 4))();
}

uint64_t sub_2477BECD4@<X0>(uint64_t a1@<X3>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v2 + a2 + 564) ^ (5512 * (a1 != 0)))) - 8))();
}

uint64_t sub_2477BECFC@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((a2 + v2) ^ (30 * (a1 != 0)))) - 4))();
}

uint64_t sub_2477BED20@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;

  v15 = v13 + a1;
  v16 = v15 + 962;
  v17 = v15 + 1028;
  a13 = a1
      + 31090337 * ((&a12 + 261563085 - 2 * ((unint64_t)&a12 & 0xF9722CD)) ^ 0xC8164284)
      + 825968967;
  v18 = sub_2478B6A70(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((3563 * (a12 == v16 + 1474858934)) ^ v17)) - 4))(v18);
}

uint64_t sub_2477BEE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  a21 = v21 - ((((2 * &a19) | 0x27224A) - &a19 - 1282341) ^ 0xC792F16C) * v24 - 911;
  a19 = &STACK[0x363276B12DAEA494];
  sub_24786328C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (((2 * (((v21 + 69) ^ (a20 == v22)) & 1)) & 0xBF | ((((v21 + 69) ^ (a20 == v22)) & 1) << 6)) ^ v21)) - 4))(v25, v26, v27, v28, v29, v30, v31, v32, a9, a10, a11, a12);
}

uint64_t sub_2477BEEBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unint64_t a20,int a21,uint64_t a22,unsigned int a23)
{
  uint64_t v23;
  int v24;
  unint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  int v29;
  int v30;
  int v31;
  unint64_t v32;
  int v33;
  uint64_t v34;

  v31 = v29 | 8;
  v32 = 366490169 * (((~v23 | 0xCA3FA9D6B52EFFBELL) + (v23 | 0x35C056294AD10041)) ^ 0x1F5EE33D5C7F5604);
  a22 = a17;
  a21 = v31 - v32 - 1057;
  a20 = v27 - ((2 * v27) & 0xE93395F3DCC03498) - v32 - 0xB663506119FE5B4;
  ((void (*)(int *))((char *)off_2518F0F80[v31 - 1101] - 12))(&a19);
  v33 = (((v23 | 0xB7FDF273) + (~(_DWORD)v23 | 0x48020D8C)) ^ 0x707C923B) * v30;
  a22 = a17;
  a23 = ((2 * v26) & 0xF7957FFA) - v33 + (v26 ^ 0xFBCAB9AF ^ (v31 + 245)) + 1308614480;
  a20 = v25;
  a21 = v33 + v31 + 330;
  v34 = ((uint64_t (*)(int *))((char *)off_2518F0F80[v31 - 1185] - 8))(&a19);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((2323 * (a19 == v24)) ^ v31)))(v34);
}

uint64_t sub_2477BF044(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,unsigned int a24)
{
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  unsigned int v28;
  uint64_t v29;

  v28 = 1314530549 * (&a19 ^ 0xB10986CE);
  a19 = &STACK[0x2D3CC89B47FE8416];
  a20 = (v26 + 1106912587) ^ v28;
  a21 = a17;
  a24 = v28 ^ 0x8BF1C9B0;
  a22 = 1515947697 - v28;
  v29 = sub_2478B0F68((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t))(v25 + 8
                                                  * (((a23 == (v24 ^ (v27 - 562))) * ((v26 + 2197) ^ 0xD30)) ^ v26)))(v29);
}

uint64_t sub_2477BF0F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, char a20,unsigned int a21,uint64_t a22,int *a23)
{
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  a22 = a16;
  a23 = &a15;
  a21 = (v23 - 2429) ^ ((((&a20 | 0x4D2B6D5C) - &a20 + (&a20 & 0xB2D492A0)) ^ 0xFC22EB92)
                      * v24);
  v26 = ((uint64_t (*)(char *))off_2518F0F80[v23 ^ 0xD09])(&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((15 * (a15 == 0)) ^ v23))
                                          - (((v23 ^ 0x929u) - 505) ^ 0x2EELL)))(v26);
}

uint64_t sub_2477BF194@<X0>(int *a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, char *a13, uint64_t a14, int *a15, uint64_t a16, unint64_t *a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t (*v20)(char **);
  uint64_t v21;
  uint64_t v22;

  a13 = &a12;
  a17 = &STACK[0x7A31AFAC6192CB11];
  a15 = a1;
  LODWORD(a14) = (v17 - 363) ^ (1401278017
                              * (((&a13 ^ 0x131D60B2)
                                - 619625581
                                - 2 * ((&a13 ^ 0x131D60B2) & 0xDB114393)) ^ 0xCC2F55C6));
  (*(void (**)(char **))(v18 + 8 * (v17 ^ 0x4A0)))(&a13);
  HIDWORD(a13) = (v17 - 102) ^ (((((2 * &a13) | 0xA7A82884) - &a13 - 1406407746) ^ 0xE2DD928C)
                              * v19);
  a14 = a8;
  a15 = &a11;
  v22 = v20(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((45 * (a11 == 0)) ^ v17))
                                          - ((v17 - 520615827) & 0x1F07FBFF)
                                          + 2368))(v22);
}

uint64_t sub_2477BF2BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,int a21)
{
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  a20 = a15;
  a21 = v21
      + 1133
      - 476588053 * ((&a19 + 1845744931 - 2 * ((unint64_t)&a19 & 0x6E03D523)) ^ 0xD3FED160)
      - 2091;
  v24 = sub_2477C6040((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8
                                                      * (int)(((a19 == v23)
                                                             * ((v21 + 1262877442) & 0xB4BA057F ^ 0x1796 ^ ((v21 + 942) | 0x300))) ^ (v21 + 1133)))
                                          - 8))(v24);
}

uint64_t sub_2477BF364()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((v2 - 2896) * (v0 != 0)) ^ v2)) - 5 * (v2 ^ 0x91Au) + 3283))();
}

uint64_t sub_2477BF39C@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, uint64_t a13, unsigned int a14)
{
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;

  a13 = a1;
  a14 = v14 - 476588053 * (((&a12 | 0x79D3B1E9) + (~&a12 | 0x862C4E16)) ^ 0xC42EB5AB) - 453;
  v17 = sub_2477C6040((uint64_t)&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((a12 == v16) ^ v14))
                                          - ((v14 - 678376709) & 0x286F377F ^ 0x559)))(v17);
}

uint64_t sub_2477BF424()
{
  int v0;
  void (*v1)(uint64_t *);
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v7 = v4;
  v8 = v0
     + 635
     + 366490169 * ((2 * (&v6 & 0x25A6D8D8) - &v6 + 1515792167) ^ 0x4CF77163)
     + 223;
  v1(&v6);
  v8 = ((v0 + 798) | 0x52)
     + 366490169
     * (((&v6 | 0x7AD0B692) - &v6 + (&v6 & 0x852F4968)) ^ 0x6C7EE0D6)
     - 22;
  v7 = v5;
  v1(&v6);
  return v0 + 635 + (v3 ^ 0xFFEABFE6) + ((2 * v3) & 0xFFD57FCC) + 1476251779 - 1474860486;
}

void sub_2477BFCB8(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 - 366490169 * ((2 * (a1 & 0x2A540D67) - (_DWORD)a1 + 1437332120) ^ 0x4305A4DC);
  __asm { BR              X11 }
}

uint64_t sub_2477BFD70(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * (int)(((*(_DWORD *)(*(_QWORD *)(a1 + 8) + v4) == v1)
                                     * ((v3 + 31244175) & 0xFE233666 ^ 0x6C5)) | v3)))();
}

uint64_t sub_2477BFDB0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  _QWORD v4[2];
  unsigned int v5;

  v4[0] = v1;
  v4[1] = a1;
  v5 = v2 - 2974 + 476588053 * ((v4 & 0x2F5A8C85 | ~(v4 | 0x2F5A8C85)) ^ 0x6D587739) + 1631;
  return sub_2478AA724((uint64_t)v4);
}

void NOAHabXy()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * (((v0 | 0x8A5190DB) - (v0 & 0x8A5190DB)) ^ 0x4DD0F092) - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477BFFE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 641 - (((&a13 | 0xE5500FEC) - (&a13 & 0xE5500FEC)) ^ 0x22D16FA5) * v15;
  a13 = &STACK[0x363276B12DAEA464];
  sub_24786328C((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v16
                                                                                         + 8
                                                                                         * ((271 * (a14 == 1474860486)) ^ v17)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477C0080(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17)
{
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;

  v24 = 366490169 * ((&a13 - 1890443644 - 2 * (&a13 & 0x8F521E84)) ^ 0x99FC48C0);
  a15 = v24 + 2033;
  a14 = a11;
  a13 = v20 + v24 - ((2 * v20) & 0xE3222F46) + 1905334179;
  sub_247881AB4((uint64_t)&a13);
  v25 = (((&a13 | 0x2C73448F) + (~&a13 | 0xD38CBB70)) ^ 0xEBF224C7) * v17;
  a17 = (v19 ^ 0x59DFBFFF) + ((2 * v19) & 0xB3BF7FFE) - v25 - 269820082;
  a16 = a11;
  a14 = v18;
  a15 = v25 + 1703;
  v26 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v23 + 1504) - 8))(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((63 * (a13 != v22)) ^ 0x71Fu)) - 8))(v26);
}

uint64_t sub_2477C01E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1314530549 * (((&a13 | 0x51BF97F7) + (~&a13 | 0xAE406808)) ^ 0xE0B61138);
  a15 = a11;
  a14 = (v19 + 1106912137) ^ v20;
  a13 = &STACK[0x2D3CC89B47FE83EE];
  a16 = 1463547025 - v20;
  a18 = v20 ^ 0x8BF1C9B0;
  v21 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((2688 * (a17 == ((v19 - 1044) ^ 0xDCCC4C82) + 2065450557)) ^ (v19 + 1)))
                                          - 8))(v21);
}

uint64_t sub_2477C02C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, int a14, unsigned int a15, uint64_t a16, int *a17)
{
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  void (*v22)(int *);
  uint64_t v23;

  a12 = 0;
  a16 = a10;
  a17 = &a12;
  a15 = (v17 + 362) ^ ((&a14 ^ 0xB10986CE) * v18);
  v22 = *(void (**)(int *))(v21 + 8 * (v17 ^ 0x3F0));
  v22(&a14);
  a15 = (v17 + 362) ^ ((((&a14 | 0xD3628EFF) - (&a14 & 0xD3628EFF)) ^ 0x626B0831) * v18);
  a16 = a10;
  a17 = (int *)&a13;
  v22(&a14);
  a16 = a10;
  LODWORD(a17) = v17
               - 476588053
               * (((&a14 | 0x9CD172D0) - &a14 + (&a14 & 0x632E8D28)) ^ 0x212C7693)
               - 494;
  v23 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((30 * (a14 == v20)) ^ v17))
                                          - ((v17 - 651) | 0x878u)
                                          + 2284))(v23);
}

uint64_t sub_2477C03D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, char a14, uint64_t a15, unsigned int a16)
{
  int v16;
  void (*v17)(char *);
  uint64_t v18;
  uint64_t v19;

  a15 = a10;
  a16 = v16
      + 817
      + 366490169 * ((((2 * &a14) | 0x185742CC) - &a14 - 204185958) ^ 0x1A85F722);
  v17(&a14);
  a15 = a11;
  a16 = v16 + 817 + 366490169 * ((&a14 + 1999161497 - 2 * (&a14 & 0x7728C899)) ^ 0x61869EDD);
  v19 = ((uint64_t (*)(char *))v17)(&a14);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((496
                                              * ((a13 ^ 0xF7EC95DF) + 1610350567 + ((a13 << (v16 - 10)) & 0xEFD92BBE) == ((v16 - 587408242) & 0xFFCF6FEF ^ 0x8B24DA4F))) ^ (v16 + 1517))))(v19);
}

uint64_t sub_2477C04DC()
{
  uint64_t v0;
  _QWORD *v1;

  *v1 = v0;
  return 0;
}

void sub_2477C0590()
{
  uint64_t v0;
  int v1;

  v0 = MEMORY[0x24BDAC7A8]();
  v1 = *(_DWORD *)v0 - 366490169 * ((1571090325 - (v0 | 0x5DA4EF95) + (v0 | 0xA25B106A)) ^ 0xB4F5462E);
  __asm { BR              X13 }
}

uint64_t sub_2477C073C@<X0>(_QWORD *a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,char a24,uint64_t a25,char a26,uint64_t a27,char a28,uint64_t a29,char a30,uint64_t a31,char a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38,uint64_t a39,char a40)
{
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  void (*v51)(uint64_t);
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v62;
  char *v63;
  char *v64;
  char *v65;
  char *v66;
  char *v67;
  char *v68;
  int v69;
  uint64_t v70;
  uint64_t v71;

  v46 = &a40 + v40;
  v68 = &a32 + v40;
  v67 = &a24 + v40;
  v66 = &a34 + v40;
  v65 = &a28 + v40;
  v64 = &a38 + v40;
  v62 = v41;
  v63 = &a30 + v40;
  v47 = &a26 + v40;
  v48 = a1[3];
  v71 = a1[5];
  v70 = v42;
  v49 = a1[1];
  v50 = *(_QWORD *)(v49 - 0x7E898A58A7A2E80);
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  *(_QWORD *)(v45 - 144) = a4;
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (((1202121681 - ((v45 - 144) | 0x47A6EBD1) + ((v45 - 144) | 0xB859142E)) ^ 0xAEF7426A)
                                         * a2);
  *(_QWORD *)(v45 - 128) = v50;
  *(_QWORD *)(v45 - 120) = &a40 + v40;
  v51 = *(void (**)(uint64_t))(a3 + 8 * (v44 ^ 0xCB0));
  v51(v45 - 144);
  *(_QWORD *)(v45 - 144) = v49;
  *(_QWORD *)(v45 - 136) = v48;
  *(_DWORD *)(v45 - 112) = v44
                         + 1697562443 * (((~(v45 - 144) & 0xD6DC27B4) - (~(v45 - 144) | 0xD6DC27B5)) ^ 0x14C1F31)
                         - 1727;
  *(_QWORD *)(v45 - 128) = v46;
  *(_QWORD *)(v45 - 120) = v47;
  ((void (*)(uint64_t))((char *)off_2518F0F80[v44 ^ 0xC60] - 4))(v45 - 144);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 128) = v46;
  *(_QWORD *)(v45 - 120) = v68;
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169
                                         * ((1055329401 - ((v45 - 144) | 0x3EE70C79) + ((v45 - 144) | 0xC118F386)) ^ 0xD7B6A5C2));
  v51(v45 - 144);
  v69 = 2 * (v45 - 144);
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169 * (((v69 | 0x68A9005A) - (v45 - 144) - 877953069) ^ 0x22FAD669));
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 128) = v68;
  *(_QWORD *)(v45 - 120) = v67;
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  v51(v45 - 144);
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169
                                         * ((((v45 - 144) | 0x5C97158B) - ((v45 - 144) & 0x5C97158B)) ^ 0x4A3943CF));
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 128) = v67;
  *(_QWORD *)(v45 - 120) = v66;
  v51(v45 - 144);
  *(_QWORD *)(v45 - 128) = v66;
  *(_QWORD *)(v45 - 120) = v65;
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169 * ((v45 + 1943863692 - 2 * ((v45 - 144) & 0x73DD021C)) ^ 0x65735458));
  *(_QWORD *)(v45 - 144) = v47;
  v51(v45 - 144);
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 128) = v65;
  *(_QWORD *)(v45 - 120) = v64;
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169
                                         * ((((v45 - 144) | 0xC2C53ACC) - (v45 - 144) + ((v45 - 144) & 0x3D3AC530)) ^ 0xD46B6C88));
  v51(v45 - 144);
  *(_QWORD *)(v45 - 144) = v47;
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  *(_QWORD *)(v45 - 128) = v64;
  *(_QWORD *)(v45 - 120) = v63;
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169
                                         * ((((v45 - 144) | 0x2340E999) - ((v45 - 144) & 0x2340E999)) ^ 0x35EEBFDD));
  v51(v45 - 144);
  *(_QWORD *)(v45 - 144) = v47;
  *(_DWORD *)(v45 - 136) = (v44 - 1477) ^ (366490169 * (((v69 | 0xA0925026) - (v45 - 144) + 800511981) ^ 0xC6E77E57));
  *(_QWORD *)(v45 - 128) = v63;
  *(_QWORD *)(v45 - 120) = v47;
  *(_QWORD *)(v45 - 112) = v49;
  *(_QWORD *)(v45 - 104) = v48;
  v51(v45 - 144);
  v52 = *(_QWORD *)(v49 - 0x7E898A58A7A2E88);
  *(_DWORD *)(v45 - 128) = v44 + 476588053 * ((v45 - 144) ^ 0xBDFD0443) - 414;
  *(_QWORD *)(v45 - 144) = v70;
  *(_QWORD *)(v45 - 136) = v52;
  sub_2478AA724(v45 - 144);
  *(_DWORD *)(v45 - 136) = v44 - 1437274309 * (((v69 | 0xCC2DBB30) - (v45 - 144) + 434709096) ^ 0xC418A0AD) - 2904;
  *(_QWORD *)(v45 - 144) = v71;
  sub_24786D77C(v45 - 144);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, char *, char *, char *, uint64_t, char *, char *, char *, char *))(*(_QWORD *)(v43 + 8 * ((114 * ((*(_DWORD *)(v45 - 132) - 164976532) > 0x7FFFFFFE)) ^ v44)) - ((v44 - 1185) | 0x324u) + 2852))(v53, v54, v55, v56, v57, v58, v59, v60, a5, v47, v62, v63, v64, v65, a11, v66, v67, v68, v46);
}

uint64_t sub_2477C0C44()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t);
  uint64_t v9;

  v4 = 142545853 * ((-1821481198 - ((v3 - 144) | 0x936E6712) + ((v3 - 144) | 0x6C9198ED)) ^ 0x466E3782);
  *(_QWORD *)(v3 - 144) = v7;
  *(_DWORD *)(v3 - 136) = v4 ^ 0x2F27B638;
  *(_DWORD *)(v3 - 132) = v4 + v1 - 1555;
  sub_24789484C(v3 - 144);
  *(_QWORD *)(v3 - 128) = v0;
  *(_QWORD *)(v3 - 120) = v0;
  *(_DWORD *)(v3 - 136) = (v1 - 1096) ^ (366490169
                                       * ((((v3 - 144) | 0x403A549B) + (~(v3 - 144) | 0xBFC5AB64)) ^ 0x569402DE));
  *(_QWORD *)(v3 - 112) = v2;
  *(_QWORD *)(v3 - 104) = v9;
  *(_QWORD *)(v3 - 144) = v7;
  v8(v3 - 144);
  *(_DWORD *)(v3 - 128) = 422 * (v1 ^ 0xB26) + 476588053 * ((v3 - 144) ^ 0xBDFD0443) - 1393;
  *(_QWORD *)(v3 - 144) = v6;
  *(_QWORD *)(v3 - 136) = v0;
  return sub_2478AA724(v3 - 144);
}

void gDmCYFQnze(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  __asm { BR              X8 }
}

uint64_t sub_2477C1A38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;

  a20 = 31090337 * (&a19 ^ 0xC7816049) - 849012913;
  v22 = sub_2478B6A70(&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((2372 * (a19 == 1474860486)) ^ v20)) - 4))(v22);
}

uint64_t sub_2477C1AB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  a21 = 641 - ((824701849 - (&a19 | 0x3127F399) + (&a19 | 0xCED80C66)) ^ 0x9596C2F) * v23;
  a19 = &STACK[0x363276B12DAEA48C];
  sub_24786328C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * (((a20 == 1474860486) * ((v21 + 1127306006) ^ 0x43315C07)) ^ v21)) - 4))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, v22, a12);
}

uint64_t sub_2477C1B74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19, uint64_t a20,unsigned int a21,int a22,uint64_t a23,unsigned int a24)
{
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  int v28;
  _DWORD *v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v44;

  v44 = v24;
  HIDWORD(a10) = 4079;
  v30 = 366490169 * (((~&a19 & 0xD21BC9C6) - (~&a19 | 0xD21BC9C7)) ^ 0xC4B59F83);
  a20 = a16;
  a21 = v30 + 2033;
  a19 = v28 + 1905334179 + v30 - ((2 * v28) & 0xE3222F46);
  sub_247881AB4((uint64_t)&a19);
  v31 = 366490169
      * (((&a19 | 0xE3C6D6D3) - &a19 + (&a19 & 0x1C392928)) ^ 0xF5688097);
  a21 = v31 + 2033;
  a19 = v27 - ((2 * v27) & 0xE3222F46) + 1905334179 + v31;
  a20 = a16;
  sub_247881AB4((uint64_t)&a19);
  v32 = 31090337 * ((&a19 & 0x23B6A46 | ~(&a19 | 0x23B6A46)) ^ 0x3A45F5F0);
  a24 = (v26 ^ 0xCDCADFDF) + ((2 * v26) & 0x9B95BFBE) - v32 + 2080358254;
  a21 = v32 + 1703;
  a23 = a16;
  a20 = a13;
  sub_2477BC464((uint64_t)&a19);
  v33 = 31090337 * ((&a19 - 129996297 - 2 * (&a19 & 0xF84069F7)) ^ 0x3FC109BE);
  a20 = a14;
  a24 = (HIDWORD(a12) ^ 0xF9CE9F6F) + ((2 * HIDWORD(a12)) & 0xF39D3EDE) - v33 + 1341915102;
  a21 = v33 + 1703;
  a23 = a16;
  sub_2477BC464((uint64_t)&a19);
  v34 = 366490169
      * ((((&a19 | 0x47978BB6) ^ 0xFFFFFFFE) - (~&a19 | 0xB8687449)) ^ 0xAEC6220D);
  a19 = v34 + *v29 + 1905334179 - ((2 * *v29) & 0xE3222F46);
  a20 = a16;
  a21 = v34 + 2033;
  sub_247881AB4((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _DWORD *, uint64_t))(*(_QWORD *)(v25 + 8 * (((2 * (a22 != 1474860486)) | (32 * (a22 != 1474860486))) ^ 0xFCDu)) - 4))(v35, v36, v37, v38, v39, v40, v41, v42, v44, a10, a11, a12, v29, a14);
}

uint64_t sub_2477C1E60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, unint64_t *a20,int a21,uint64_t a22,unsigned int a23,int a24,unsigned int a25)
{
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  v26 = 1314530549 * ((((2 * &a20) | 0xF2D6DCBE) - &a20 - 2037083743) ^ 0xC862E891);
  a22 = a17;
  a21 = (a11 + 1106909881) ^ v26;
  a25 = v26 ^ 0x8BF1C9B0;
  a23 = 508137649 - v26;
  a20 = &STACK[0x2D3CC89B47FE8426];
  v27 = sub_2478B0F68((uint64_t)&a20);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * ((7751 * (a24 == ((a11 - 1297925248) & 0x36F8) + 1474859870)) ^ a11))
                                          - (((a11 - 3307) | 0x88) ^ 0x388)))(v27);
}

uint64_t sub_2477C1F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char *a17, char a18, __int16 a19, char a20,char *a21,char *a22,char *a23,uint64_t a24,unint64_t *a25)
{
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  a21 = &a18;
  a25 = &STACK[0x7A31AFAC6192CB09];
  a23 = a17;
  LODWORD(a22) = (v26 + 264) ^ (1401278017
                              * ((-960314117 - (&a21 | 0xC6C2C4FB) + (&a21 | 0x393D3B04)) ^ 0x3D1E4DE3));
  (*(void (**)(char **))(v28 + 8 * (v26 ^ 0x213u)))(&a21);
  a22 = a17;
  a23 = &a20;
  HIDWORD(a21) = (v26 + 525) ^ (((2 * (&a21 & 0x66559BC8) - &a21 - 1716886478) ^ 0x28A3E2FC)
                              * v25);
  (*(void (**)(char **))(v28 + 8 * (v26 - 365)))(&a21);
  a22 = a17;
  LODWORD(a23) = v26
               - 476588053 * ((&a21 & 0xE7B01373 | ~(&a21 | 0xE7B01373)) ^ 0xA5B2E8CF)
               - 331;
  v29 = sub_2477C6040((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * ((((_DWORD)a21 == 1474860486) * ((v26 ^ 0xD87) - 3054)) ^ v26))
                                          - 12))(v29);
}

uint64_t sub_2477C20C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((3926 * (a19 == 0)) ^ v19)) - 12))();
}

uint64_t sub_2477C2124(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19
                                        + 8
                                        * ((27
                                          * (((v18 - 421) ^ 0x550BBC8E ^ (2
                                                                        * (a18 - ((2 * a18) & 0x571BB2DC) - 1416767122)) & 0xDDABFAE4)
                                           + ((v18 - 411413109) & 0x18859BFF ^ (a18
                                                                              - ((2 * a18) & 0x571BB2DC)
                                                                              - 1416767122) ^ 0x45582566)
                                           + 531296944 == 243331106)) ^ (v18 - 421)))
                            - 4))();
}

uint64_t sub_2477C21D8()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((246
                                                        * ((((v3 + 36717224) ^ ((v1 + v0 + 287965838) < 8)) & 1) == 0)) ^ v3))
                                          - 12))(v2);
}

uint64_t sub_2477C2240()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v5
                                                      + 8
                                                      * ((((v2 ^ (v3 + 3256)) - v3 - 1250)
                                                        * ((unint64_t)(v0 - v4) > 0x1F)) ^ v2))
                                          - 12))(v1);
}

uint64_t sub_2477C2274(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return (*(uint64_t (**)(void))(v6 + 8 * ((((a4 + v5) ^ 0x43315171) * (v4 > 0x1F)) ^ a4)))();
}

uint64_t sub_2477C22A8(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  __int128 v18;
  uint64_t v19;

  v16 = (v12 + v14 + 616);
  v17 = *(_OWORD *)(v11 + v16 - 15);
  v18 = *(_OWORD *)(v11 + v16 - 31);
  v19 = v15 + v16;
  *(_OWORD *)(v19 - 15) = v17;
  *(_OWORD *)(v19 - 31) = v18;
  return ((uint64_t (*)(void))(*(_QWORD *)(a11
                                        + 8
                                        * ((3392 * ((((a3 - 1127305809) | 0xA00) ^ 0xE71) == (v13 & 0xFFFFFFE0))) ^ (a3 - 1127306452)))
                            - 4))();
}

uint64_t sub_2477C2324(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  int v11;
  int v12;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(a11 + 8 * ((8165 * (v11 != v12)) ^ a3))
                                                  - ((79 * (a3 ^ 0xE74u)) ^ 0xB6FLL)))(a1, 2 * (a3 ^ 0xF65u));
}

uint64_t sub_2477C236C(int a1, uint64_t a2, uint64_t a3, int a4)
{
  char v4;
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(_QWORD))(v7
                                           + 8
                                           * (int)(((((a4 - 298) ^ (a1 + 128) ^ 0xBCCEA08A) + ((a4 - 298) | 0x80))
                                                  * ((v4 & 0x18) != 0)) ^ a4)))((v5 - v6));
}

uint64_t sub_2477C23AC(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;

  *(_QWORD *)(v9 - 7 + (v5 + v4 + v7 - v8)) = *(_QWORD *)(v2 - 7 + (v5 + v4 + v7 - v8));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v10 + 8 * (((v8 - (v3 & 0xFFFFFFF8) == -8) * (a2 - 2259)) ^ a2))
                                         - 4))(v6 - (v3 & 0xFFFFFFF8));
}

uint64_t sub_2477C2400(uint64_t a1, int a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  unsigned int v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)(a3 + v5) = *(_QWORD *)(v4 + v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((v6 == 0) * v3) ^ a2)) - 4))();
}

uint64_t sub_2477C2430(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7 + 8 * (((v6 + ((v5 - 2819) | 0x200) - 1127303303) * (v4 == a4)) ^ v5)))();
}

uint64_t sub_2477C2468@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_BYTE *)(v6 + (a2 - v5 - 2330 + v4 + a1)) = *(_BYTE *)(v3 + (a2 - v5 - 2330 + v4 + a1));
  return (*(uint64_t (**)(void))(v7 + 8 * ((627 * (a1 - 1 == a3)) ^ (a2 - 1127303817))))();
}

uint64_t sub_2477C24AC(uint64_t a1, int a2)
{
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  _DWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;

  v4 = (a2 + 1024) | 0x987;
  *v6 = v2;
  v10 = v8;
  v11 = v4 + 366490169 * ((&v9 & 0x7C81A9E5 | ~(&v9 | 0x7C81A9E5)) ^ 0x95D0005E) - 2483;
  v3(&v9);
  v11 = (v4 ^ 0xC63) + 366490169 * ((&v9 & 0x6E8992 | ~(&v9 | 0x6E8992)) ^ 0xE93F2029) + 688;
  v10 = v7;
  v3(&v9);
  return 0;
}

void sub_2477C25B8(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 1697562443 * ((((2 * a1) | 0xCFAD2984) - a1 - 1742116034) ^ 0xB046AC46);
  __asm { BR              X9 }
}

void sub_2477C2684()
{
  uint64_t v0;

  *(_DWORD *)(v0 + 24) = 1474818463;
}

void cEG4ZMc(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X8 }
}

uint64_t sub_2477C2A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;

  a16 = 31090337 * ((((2 * &a15) | 0x2EC31D12) - &a15 - 392269449) ^ 0xD0E0EEC0) - 849012913;
  v17 = sub_2478B6A70(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((1092 * (a15 == 1474860486)) ^ 0x37Fu)) - 4))(v17);
}

uint64_t sub_2477C2ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a17 = 641 - ((678729311 - (&a15 | 0x2874965F) + (&a15 | 0xD78B69A0)) ^ 0x100A09E9) * v18;
  a15 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((4791 * (a16 == 1474860486)) ^ v19)) - ((v19 ^ 0x9357C3FD) + 1822966960) + 1326))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477C2B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17, int a18)
{
  uint64_t v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v23 = 366490169 * ((&a15 & 0x41AC5477 | ~(&a15 | 0x41AC5477)) ^ 0xA8FDFDCC);
  a16 = a12;
  a17 = v22 + 703 + v23;
  a15 = v20 + 1905334179 + v23 - (((v22 - 681586303) & 0xBBF7E9CE ^ 0x7075EFC4) & (2 * v20));
  sub_247881AB4((uint64_t)&a15);
  v24 = 366490169 * ((((&a15 | 0x77158) ^ 0xFFFFFFFE) - (~&a15 | 0xFFF88EA7)) ^ 0xE956D8E3);
  a16 = a12;
  a17 = v22 + 703 + v24;
  a15 = HIDWORD(v19) - ((2 * HIDWORD(v19)) & 0xE3222F46) + 1905334179 + v24;
  sub_247881AB4((uint64_t)&a15);
  v25 = 366490169 * ((&a15 - 1173676411 - 2 * (&a15 & 0xBA0B1E85)) ^ 0xACA548C1);
  a15 = v19 - ((2 * v19) & 0xE3222F46) + 1905334179 + v25;
  a17 = v22 + 703 + v25;
  a16 = a12;
  sub_247881AB4((uint64_t)&a15);
  v26 = 366490169
      * (((&a15 | 0x43311C80) - &a15 + (&a15 & 0xBCCEE378)) ^ 0x559F4AC4);
  a16 = a12;
  a17 = v22 + 703 + v26;
  a15 = HIDWORD(v18) - ((2 * HIDWORD(v18)) & 0xE3222F46) + 1905334179 + v26;
  sub_247881AB4((uint64_t)&a15);
  v27 = 366490169 * ((&a15 + 567629956 - 2 * (&a15 & 0x21D55884)) ^ 0x377B0EC0);
  a16 = a12;
  a15 = v18 - ((2 * v18) & 0xE3222F46) + 1905334179 + v27;
  a17 = v22 + 703 + v27;
  sub_247881AB4((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * ((3512 * (a18 == 1474860486)) ^ v22)) - 4))(v28, v29, v30, v31, v32, v33, v34, v35);
}

uint64_t sub_2477C2DE0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * ((&a15 & 0x3F16F540 | ~(&a15 | 0x3F16F540)) ^ 0x71E08C71);
  a15 = &STACK[0x2D3CC89B47FE83EE];
  a16 = (v21 + 1106912630) ^ v22;
  a17 = a12;
  a20 = v22 ^ 0x8BF1C9B0;
  a18 = -1432187379 - v22;
  v23 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * (int)(((a19 == 1474860486)
                                                             * (((v21 + 303037134) | 0x8147C082) ^ 0x9357CCDB)) ^ v21))
                                          - (((v21 - 302) | 0xAAu) ^ 0x4AALL)))(v23);
}

uint64_t sub_2477C2ED8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, __int16 a12, char a13, uint64_t a14, int a15, char a16, __int16 a17, char a18, __int16 a19, char a20,int a21,unsigned int a22,uint64_t a23,char *a24)
{
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(int *);
  uint64_t v29;

  a22 = (v24 - 57) ^ (((2 * (&a21 & 0x7C32F060) - &a21 - 2083713126) ^ 0x32C48954) * v25);
  a23 = a10;
  a24 = &a13;
  v28 = *(void (**)(int *))(v27 + 8 * (v24 ^ 0x455));
  v28(&a21);
  a22 = (v24 - 57) ^ ((&a21 ^ 0xB10986CE) * v25);
  a23 = a10;
  a24 = &a18;
  v28(&a21);
  a23 = a10;
  a24 = &a20;
  a22 = (v24 - 57) ^ (((-2030051891 - (&a21 | 0x86FFDDCD) + (&a21 | 0x79002232)) ^ 0xC809A4FC)
                    * v25);
  v28(&a21);
  a22 = (v24 - 57) ^ ((((&a21 | 0xA7CA0CD3) - (&a21 & 0xA7CA0CD3)) ^ 0x16C38A1D) * v25);
  a23 = a10;
  a24 = &a11;
  v28(&a21);
  a22 = (v24 - 57) ^ (((((&a21 | 0x44245CC0) ^ 0xFFFFFFFE) - (~&a21 | 0xBBDBA33F)) ^ 0xAD225F1)
                    * v25);
  a23 = a10;
  a24 = &a16;
  v28(&a21);
  LODWORD(a24) = v24 - 476588053 * (&a21 ^ 0xBDFD0443) - 913;
  a23 = a10;
  v29 = sub_2477C6040((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26
                                                      + 8
                                                      * (int)(((a21 != 13 * (v24 ^ 0x4CF) + 1474859225)
                                                             * (((v24 - 740310020) & 0xBF77F7D7) + 1822965697)) ^ v24))
                                          - 12))(v29);
}

uint64_t sub_2477C30F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * ((3242 * (a14 == 0)) ^ v15)) - 12))();
}

uint64_t sub_2477C3160()
{
  int v0;
  _DWORD *v1;
  void (*v2)(uint64_t *);
  int v3;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  *v1 = v7;
  v1[1] = v9;
  v1[2] = v10;
  v1[3] = v6;
  v12 = v5;
  v13 = v0 + 366490169 * (&v11 ^ 0x16AE5644) + v3 - 1822966891;
  v2(&v11);
  v13 = 366490169 * ((&v11 & 0xA227EF01 | ~(&v11 | 0xA227EF01)) ^ 0x4B7646BA)
      + 1822967226
      + v3
      - 1822966891;
  v12 = v8;
  v2(&v11);
  return 0;
}

void sub_2477C3264(uint64_t a1)
{
  int v1;
  int v2;
  _BOOL4 v4;

  v1 = 1401278017 * (((a1 | 0xC754715A) - (a1 & 0xC754715A)) ^ 0xC37707BD);
  v2 = *(_DWORD *)(a1 + 8) + v1;
  v4 = *(_QWORD *)(a1 + 24) != 0x593793D3C6E54E8ALL && (*(_DWORD *)(a1 + 16) ^ v1) != 966789249;
  __asm { BR              X10 }
}

uint64_t sub_2477C3344()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v1 - 4444)))(32, 0x101004023FF3BD5) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v3 * (((v1 - 1109946747) & 0x4228667A) - 1441)) ^ v1))
                            - (((v1 - 3960) | 0x478u) ^ 0x670)))();
}

uint64_t sub_2477C33C0(uint64_t result)
{
  uint64_t *v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *v1;
  *(_QWORD *)result = v3 - 0x593793D3C6E54E8ALL;
  *(_DWORD *)(result + 8) = v2;
  *(_DWORD *)(result + 12) = v2;
  *(_QWORD *)(result + 16) = 0x75125BBE7421FB7DLL;
  *(_DWORD *)(result + 24) = 1474860486;
  *(_QWORD *)(v4 - 0x2000FCE894E110F4) = result + 0x3408C9F6C2C2618CLL;
  *((_DWORD *)v1 + 3) = 1474860486;
  return result;
}

void sub_2477C3444(uint64_t a1)
{
  unint64_t v2;
  uint64_t (*v3)(char *, uint64_t);
  char v4;

  v2 = (unint64_t)&v4 ^ qword_2576C2EC8 ^ qword_2576C2ED8;
  qword_2576C2EC8 = 1437825391 * v2 + 0x5F228405B95CAEDDLL;
  qword_2576C2ED8 = 1437825391 * (v2 ^ 0x35414C93324FFE73);
  v3 = (uint64_t (*)(char *, uint64_t))off_2518F0F80[((111
                                                                               * ((qword_2576C2ED8 + 111 * v2 - 35) ^ 0x73)) ^ byte_2478D0530[byte_2478CA3C0[(111 * ((qword_2576C2ED8 + 111 * v2 - 35) ^ 0x73))] ^ 0x50])
                                                            - 32];
  LOBYTE(v2) = 111 * ((111 * v2 - 35) ^ 0x73 ^ qword_2576C2ED8);
  v3((char *)off_2518F0F80[(v2 ^ byte_2478BF130[byte_2478D0430[v2] ^ 0x49]) - 69] - 12, (uint64_t)sub_2478B1714);
  __asm { BR              X10 }
}

uint64_t sub_2477C3568@<X0>(unsigned int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v1
                              + 8
                              * ((2485
                                * (((a1 ^ 0x48E6908B ^ (*(_QWORD *)(*(_QWORD *)(v2 + 8 * (int)(a1 - 1716)) - 4) == 0)) & 1) == 0)) ^ a1)))();
}

uint64_t sub_2477C35AC@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (a1 ^ 0x648u)))(v1);
}

void S12yWPyxCU(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v3;
  int v5;

  if (a1)
    v3 = a2 == 0;
  else
    v3 = 1;
  v5 = !v3 && a3 != 0;
  __asm { BR              X9 }
}

uint64_t sub_2477C3658(uint64_t a1, _QWORD *a2, _DWORD *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  *a2 = 0;
  *a3 = 0;
  a16 = 31090337 * ((&a15 & 0x39F91D5D | ~(&a15 | 0x39F91D5D)) ^ 0x18782EB) - 849012913;
  v18 = sub_2478B6A70(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((4007 * (a15 == 1474860486)) ^ v17)) - 8))(v18);
}

uint64_t sub_2477C36E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a17 = 641 - ((((2 * &a15) | 0xDC55A5CA) - &a15 - 1848300261) ^ 0xA9ABB2AC) * v18;
  a15 = &STACK[0x363276B12DAEA474];
  sub_24786328C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((2999 * (a16 == v19)) ^ 0x49Au)) - 8))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477C3788(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17, int a18)
{
  int v18;
  uint64_t v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v22 = 366490169 * ((((2 * &a15) | 0x62E328F0) - &a15 - 829527160) ^ 0x27DFC23C);
  a15 = v18 - ((2 * v18) & 0xE3222F46) + 1905334179 + v22;
  a16 = a13;
  a17 = v22 + v20 + 1660;
  sub_247881AB4((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 + 8 * ((3445 * (a18 == (v20 ^ 0x5EF ^ (v21 - 1130)))) ^ v20)))(v23, v24, v25, v26, v27, v28, v29, v30);
}

uint64_t sub_2477C3840(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  uint64_t v24;
  _BOOL4 v25;

  v23 = 1314530549 * ((&a15 & 0xC8E6271B | ~(&a15 | 0xC8E6271B)) ^ 0x86105E2A);
  a17 = a13;
  a16 = (v21 + 1106913587) ^ v23;
  a20 = v23 ^ 0x8BF1C9B0;
  a18 = 1931393484 - v23;
  a15 = &STACK[0x2D3CC89B47FE83F6];
  v24 = sub_2478B0F68((uint64_t)&a15);
  v25 = a19 == ((v21 - 355) | 0x488) + ((v21 + 381) ^ (v22 - 488));
  return (*(uint64_t (**)(uint64_t))(v20 + 8 * ((v25 | (2 * v25)) ^ v21)))(v24);
}

uint64_t sub_2477C3918(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, char *a12, int a13, char a14, uint64_t a15, uint64_t a16, char *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  int v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  LODWORD(a18) = (v25 + 126) ^ (1401278017
                              * ((2 * (&a17 & 0x20BF9830) - &a17 - 549427249) ^ 0xDB631128));
  a17 = &a14;
  a21 = &STACK[0x7A31AFAC6192CB01];
  a19 = a12;
  (*(void (**)(char **))(v23 + 8 * (v25 ^ 0x289u)))(&a17);
  v26 = 2 * &a17;
  HIDWORD(a17) = (v25 + 387) ^ ((((v26 | 0xF363DFD6) - &a17 - 2041704427) ^ 0xC8B86925) * v21);
  a18 = a12;
  a19 = &a11;
  (*(void (**)(char **))(v23 + 8 * (v25 ^ 0x209u)))(&a17);
  a18 = a12;
  LODWORD(a19) = v25 - 476588053 * (((v26 | 0x98F2B260) - &a17 - 1283021104) ^ 0xF1845D73) - 469;
  v27 = sub_2477C6040((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8 * ((((_DWORD)a17 == v24) * ((v25 - 381) ^ 0xC7E)) ^ v25))
                                          - 8))(v27);
}

uint64_t sub_2477C3A78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  unsigned int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((4982 * (a11 == 0)) ^ v12)) - 8))();
}

uint64_t sub_2477C3AD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  unsigned int v15;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((5056 * (((a13 == (v14 ^ 0x175)) ^ (v15 + 13)) & 1)) ^ v15))
                            - 8))();
}

uint64_t sub_2477C3B1C@<X0>(uint64_t a1@<X0>, __int16 a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = a2 & 0x13BF;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v4 - 675)))(a1, 44961377) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((77 * v5) ^ v4))
                            - ((v4 - 655) ^ 0x173 ^ ((v4 - 655) | 0x145u) ^ 0x3ELL)))();
}

uint64_t sub_2477C3B7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  unsigned int v15;

  v15 = ((58 * (v14 ^ 0x14E)) ^ 0xAB8DDB9C) + a13 - ((2 * a13) & 0x571BB2DC);
  return ((uint64_t (*)(void))(*(_QWORD *)(v13
                                        + 8
                                        * ((2149
                                          * (((2 * v15) & 0xDDABFAE4 ^ 0x550BB2C4) + (v15 ^ 0x4558241C) + 531296944 != 243331106)) ^ v14))
                            - 12))();
}

uint64_t sub_2477C3C0C(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t))(v5
                                                     + 8
                                                     * ((689
                                                       * (v3 + v2 + (((v1 ^ 0xF64) - 1007) ^ 0x112A0B29u) >= (v1 ^ 0xF64u) - 3470)) ^ v1 ^ 0xF64)))(a1, v4);
}

uint64_t sub_2477C3C70(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * (int)((((v4 + 1973356035) & 0x8A60FBFF ^ 0xBA2)
                                                                      * ((unint64_t)(v2 - a1) > 0x1F)) ^ v4))
                                                   + 425813566
                                                   - (v4 - v1 - 2463)
                                                   + 323))(a1, v3);
}

uint64_t sub_2477C3CCC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  unsigned int v5;
  char v6;
  uint64_t v7;

  return (*(uint64_t (**)(void))(v7
                              + 8
                              * (((v5 < 0x20) ^ (((a5 + 67) & 0x9F) - v6 - 1)) & 1 | ((((v5 < 0x20) ^ (((a5 + 67) & 0x9F) - v6 - 1)) & 1) << 6) | a5)))();
}

uint64_t sub_2477C3D14(uint64_t a1, int a2)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v6 + v5 + v7;
  v11 = v3 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((v4 & 0xFFFFFFE0) == 32) * ((a2 ^ (v8 + 3034)) - 1876)) ^ (v2 + a2 + 739)))
                            - 8))();
}

void sub_2477C3D70()
{
  JUMPOUT(0x2477C3D24);
}

uint64_t sub_2477C3D7C(uint64_t a1)
{
  int v1;
  int v2;
  _DWORD *v3;
  _QWORD *v4;
  int v5;
  void (*v7)(uint64_t *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *v4 = a1;
  *v3 = v1;
  v5 = (v2 - 381) ^ 0x5EF;
  v12 = v2
      - 381
      + 366490169
      * (((&v10 | 0xE362F470) - &v10 + (&v10 & 0x1C9D0B88)) ^ 0xF5CCA234)
      + 1223;
  v11 = v8;
  v7(&v10);
  v11 = v9;
  v12 = v5
      + 366490169
      * (((&v10 | 0x7C59FC6A) - &v10 + (&v10 & 0x83A60390)) ^ 0x6AF7AA2E)
      + 418;
  v7(&v10);
  return 0;
}

void sub_2477C4028(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) - 673918253 * ((a1 & 0xD8AC91B6 | ~(a1 | 0xD8AC91B6)) ^ 0xBD1B75E1);
  __asm { BR              X11 }
}

uint64_t sub_2477C40F8@<X0>(int a1@<W8>, uint64_t a2, int a3, char a4, __int16 a5, char a6, uint64_t a7, char *a8, int a9, int a10, unint64_t *a11)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;

  v15 = ((&a6 + 1946057962 - 2 * ((unint64_t)&a6 & 0x73FE7CEA)) ^ 0xE9B66742) * a1;
  a7 = v14;
  a8 = &a4;
  a11 = &STACK[0x1E485B7C7E87F033];
  a9 = v15 + v13 - 957;
  a10 = v15 + 1228846615;
  v16 = (*(uint64_t (**)(char *))(v11 + 8 * (v13 - 1815)))(&a6);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v12
                                                      + 8
                                                      * ((((((v13 - 78) ^ (*(_DWORD *)(v14 - 0x3408C9F6C2C26174) == 1474860486)) & 1) == 0)
                                                        * (v13 - 1990)) ^ v13))
                                          - 12))(v16);
}

uint64_t sub_2477C41C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  int v11;
  uint64_t v12;
  int v13;

  return (*(uint64_t (**)(void))(v12 + 8 * (((v11 & ~(v13 ^ (a11 == 8))) * ((v13 + 1444) ^ 0x873)) | v13)))();
}

void sub_2477C41F4(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;

  *a1 = v2;
  *(_DWORD *)(v1 + 24) = 1474818299;
}

void V3lNO(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  BOOL v7;
  int v8;

  if (a6)
    v7 = a7 == 0;
  else
    v7 = 1;
  v8 = !v7;
  __asm { BR              X9 }
}

uint64_t sub_2477C4360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  uint64_t v20;
  uint64_t v21;

  a20 = 31090337 * (&a19 ^ 0xC7816049) - 849012913;
  v21 = sub_2478B6A70(&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((3521 * (a19 == 1474860486)) ^ 0x3E0)) - 4))(v21);
}

uint64_t sub_2477C43E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  a19 = &STACK[0x363276B12DAEA49C];
  a21 = 641
      - 31090337
      * (((&a19 | 0x5297C665) - &a19 + (&a19 & 0xAD683998)) ^ 0x9516A62C);
  sub_24786328C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 + 8 * ((3554 * (a20 == ((v21 + 992) ^ (v21 + 614) ^ 0x57E89648))) ^ 0x3E0u)) - 4))(v23, v24, v25, v26, v27, v28, v29, v30, a9, a10, a11, a12);
}

uint64_t sub_2477C4490(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, int a19, unint64_t a20,int a21,unint64_t a22,unsigned int a23)
{
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;

  v30 = 366490169 * (((v29 | 0x94F1D6C1) - (v29 & 0x94F1D6C1)) ^ 0x825F8085);
  a21 = v23 + 1123 + v30;
  a20 = a18;
  a19 = v27 - ((2 * v27) & 0xE3222F46) + 1905334179 + v30;
  sub_247881AB4((uint64_t)&a19);
  v31 = 366490169 * ((v29 - 2 * (v29 & 0x1B38B3CC4056A9E9) + 0x1B38B3CC4056A9E9) ^ 0x31A606D856F8FFADLL);
  a22 = a18;
  a20 = v26
      - v31
      + ((v23 - 711596955) & 0x2A6A1BEC ^ 0xF499CAF9EE6019ACLL)
      - (((v23 - 711596955) ^ 0xE93395F30955D36ALL) & (2 * v26));
  a21 = v23 - v31 - 594;
  ((void (*)(int *))((char *)off_2518F0F80[v23 ^ 0x29E] - 12))(&a19);
  v32 = 366490169 * (v29 ^ 0x16AE5644);
  a19 = v25 - ((2 * v25) & 0xE3222F46) + 1905334179 + v32;
  a20 = a18;
  a21 = v23 + 1123 + v32;
  sub_247881AB4((uint64_t)&a19);
  v33 = 31090337 * ((308135845 - (v29 | 0x125DC7A5) + (v29 | 0xEDA2385A)) ^ 0x2A235813);
  a21 = v33 + v23 + 793;
  a20 = a13;
  a23 = (v24 ^ 0xDFCADFED) + ((2 * v24) & 0xBF95BFDA) - v33 + 1778368352;
  a22 = a18;
  v34 = ((uint64_t (*)(int *))((char *)off_2518F0F80[v23 - 722] - 8))(&a19);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((45 * (a19 != 1474860486)) ^ v23)))(v34);
}

uint64_t sub_2477C4700(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,unsigned int a24)
{
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;

  v25 = 1314530549 * ((((2 * &a19) | 0xF0B848A0) - &a19 - 2019304528) ^ 0xC955A29E);
  a20 = (a10 + 1106913029) ^ v25;
  a19 = &STACK[0x2D3CC89B47FE840E];
  a21 = a18;
  a24 = v25 ^ 0x8BF1C9B0;
  a22 = 1638289022 - v25;
  v26 = sub_2478B0F68((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t))(v24
                                            + 8
                                            * (((a23 == 1474860486) * ((a10 + 61) ^ 0x95B ^ (149 * (a10 ^ 0x3A0)))) ^ a10)))(v26);
}

uint64_t sub_2477C47E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, char *a14, int a15, char a16, uint64_t a17, int a18, char a19, uint64_t a20,char *a21,char *a22,char *a23,uint64_t a24,unint64_t *a25)
{
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;

  a21 = &a16;
  LODWORD(a22) = (v25 + 433) ^ (1401278017
                              * ((((2 * (&a21 ^ 0xDE60AB1)) | 0x8968F554)
                                - (&a21 ^ 0xDE60AB1)
                                + 994805078) ^ 0xCD7106FC));
  a25 = &STACK[0x7A31AFAC6192CB11];
  a23 = a14;
  ((void (*)(char **))off_2518F0F80[v25 ^ 0x1C4])(&a21);
  a22 = a14;
  a23 = &a19;
  HIDWORD(a21) = (v25 + 694) ^ ((((&a21 | 0xEC4683D5) + (~&a21 | 0x13B97C2A)) ^ 0x5D4F051A)
                              * v26);
  ((void (*)(char **))off_2518F0F80[v25 ^ 0x144])(&a21);
  a22 = a14;
  LODWORD(a23) = v25
               - 476588053 * ((2 * (&a21 & 0x33D90D38) - &a21 - 869862714) ^ 0x71DBF685)
               - 162;
  v28 = sub_2477C6040((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27
                                                      + 8
                                                      * ((3253
                                                        * ((_DWORD)a21 == ((85 * ((v25 - 636710364) & 0x25F36FBF ^ 0x3A6)) ^ 0x57E8946F))) ^ v25))
                                          - 12))(v28);
}

uint64_t sub_2477C497C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((22 * (a18 != ((v18 + 506) ^ 0x3A3))) ^ v18)) - 12))();
}

uint64_t sub_2477C49DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  int v16;
  uint64_t v17;
  int v18;
  BOOL v19;

  v18 = v16 + 22;
  v19 = off_2518F0F80[v18 - 419](a16, 220212228) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * (((((v18 + 40) ^ v19) & 1) * (v18 + 1469)) ^ v18))
                            - 12))();
}

uint64_t sub_2477C4A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;
  int v18;

  v18 = ((v16 + 877) ^ 0x1436) + a16 - ((v16 ^ 0x571BB363) & (2 * a16)) - 1416771500;
  return (*(uint64_t (**)(void))(v17
                              + 8
                              * ((92
                                * (((2 * v18) & 0xDDABFAE4 ^ 0x550BB2C4) + (v18 ^ 0x4558241C) + 531296944 != 243331106)) ^ (v16 + 877))))();
}

uint64_t sub_2477C4B04()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((((v2 ^ 0x78FE9BDF) - 2029947546) * ((v1 + v0 + 287965838) > 7)) ^ v2))
                            - 4))();
}

uint64_t sub_2477C4B68(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((116
                                          * ((((unint64_t)(v3 - a1) < 0x20) ^ (7 * ((a3 - 27) ^ (v4 + 49)))) & 1)) ^ (a3 + 2647)))
                            - 12))();
}

uint64_t sub_2477C4BC0(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  unsigned int v4;
  int v5;
  uint64_t v6;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * (int)((((a4 + 2113896248) & 0xFAFEFEC7 ^ (v5 + 1117)) * (v4 < 0x20)) ^ a4))
                            - 4))();
}

uint64_t sub_2477C4C04(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = v4 + ((v5 - 337642271) & 0x9B217C7F ^ v2);
  v9 = *(_OWORD *)(v1 + v8 - 15);
  v10 = *(_OWORD *)(v1 + v8 - 31);
  v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return (*(uint64_t (**)(void))(v7 + 8 * ((155 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v6 + v5 + 124))))();
}

void sub_2477C4C6C()
{
  JUMPOUT(0x2477C4C2CLL);
}

uint64_t sub_2477C4C78(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v5 = 7 * (v2 ^ 0x13A);
  *v7 = a1;
  *v8 = v1;
  v12 = v9;
  v13 = v5 + 366490169 * ((2 * (&v11 & 0x2B51AB80) - &v11 - 726772613) ^ 0xC200023F) + 665;
  v3(&v11);
  v13 = v5
      + 61
      + 366490169 * ((-842793768 - (&v11 | 0xCDC3FCD8) + (&v11 | 0x323C0327)) ^ 0x24925563)
      + 604;
  v12 = v10;
  v3(&v11);
  return (v4 - 1474860486);
}

void CjHbHx(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_2477C4FC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;

  a16 = 31090337 * (((&a15 | 0x8CEEF0CF) + (~&a15 | 0x73110F30)) ^ 0x4B6F9087) - 849012913;
  v17 = sub_2478B6A70(&a15);
  return (*(uint64_t (**)(uint64_t))(v16 + 8 * ((51 * (a15 != 1474860486)) ^ 0x242u)))(v17);
}

uint64_t sub_2477C5048(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a15 = &STACK[0x363276B12DAEA464];
  a17 = 641 - ((582685607 - (&a15 | 0x22BB13A7) + (&a15 | 0xDD44EC58)) ^ 0x1AC58C11) * v18;
  sub_24786328C((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17 + 8 * ((2817 * (a16 == ((v19 + 497) ^ 0x271))) ^ 0x271u)))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477C50DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  uint64_t v24;

  v22 = v21 + 201;
  v23 = 1314530549
      * (((&a15 | 0x66FA8C98) - &a15 + (&a15 & 0x99057360)) ^ 0xD7F30A56);
  a20 = v23 ^ 0x8BF1C9B0;
  a18 = 380770058 - v23;
  a17 = a11;
  a15 = &STACK[0x2D3CC89B47FE8406];
  a16 = (v22 + 1106913134) ^ v23;
  v24 = sub_2478B0F68((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v20
                                            + 8
                                            * (((a19 == (((v22 + 558374094) | 0x40024080) ^ 0x36A2F54E)) * (v22 ^ 0x619)) ^ v22)))(v24);
}

uint64_t sub_2477C51DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, uint64_t a14, char a15, __int16 a16, char a17, int a18, unsigned int a19, uint64_t a20,char *a21)
{
  uint64_t v21;
  int v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  void (*v27)(int *);
  uint64_t v28;

  v26 = v23 ^ 0x845;
  a19 = (v26 - 1802) ^ ((((&a18 | 0x70BF13D6) - (&a18 & 0x70BF13D6)) ^ 0xC1B69518) * v22);
  a20 = a14;
  a21 = &a15;
  v27 = *(void (**)(int *))(v25 + 8 * (v26 - 2692));
  v27(&a18);
  a20 = a14;
  a21 = &a13;
  a19 = (v26 - 1802) ^ (((601275425 - (&a18 | 0x23D6BC21) + (&a18 | 0xDC2943DE)) ^ 0x6D20C510)
                      * v22);
  v27(&a18);
  a20 = a14;
  a21 = &a17;
  a19 = (v26 - 1802) ^ (((((2 * &a18) | 0x8BB03926) - &a18 + 975692653) ^ 0x74D19A5D) * v22);
  v27(&a18);
  a20 = a14;
  LODWORD(a21) = v26 - 476588053 * (&a18 ^ 0xBDFD0443) - 2658;
  v28 = sub_2477C6040((uint64_t)&a18);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((252 * (a18 != v24)) ^ v26))
                                          - ((v26 - 345283315) & 0x614A6FFB)
                                          + 1632264316))(v28);
}

uint64_t sub_2477C535C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  uint64_t v15;
  int v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v15 + 8 * (((a15 == 0) * (v16 - 1893)) ^ (v16 + 4))) - 12))();
}

uint64_t sub_2477C53B4@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  _DWORD *v2;
  int v3;
  int v4;
  void (*v6)(uint64_t *);
  uint64_t v7;
  int v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  v4 = a1 + 1632261381;
  *v2 = v10;
  *v1 = v8;
  v13 = v3
      + 366490169 * (((~&v11 & 0xCF0907C2) - (~&v11 | 0xCF0907C3)) ^ 0xD9A75187)
      + a1
      + 1632261381;
  v12 = v9;
  v6(&v11);
  v12 = v7;
  v13 = v3 + 366490169 * ((&v11 & 0xC2BB9873 | ~(&v11 | 0xC2BB9873)) ^ 0x2BEA31C8) + v4;
  v6(&v11);
  return 0;
}

void sub_2477C54CC(_DWORD *a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  _DWORD *v7;

  v1 = 1437274309 * ((a1 & 0x3868D84 | ~(a1 | 0x3868D84)) ^ 0xDE770F4E);
  v2 = a1[1] ^ v1;
  v3 = a1[2] + v1;
  v4 = *a1 + v1;
  v5 = a1[3] ^ v1;
  v6 = a1[4] + v1;
  v7 = off_2518F0F80[v2 ^ 0x975];
  v7[2] = v3;
  v7[3] = v4;
  v7[4] = v5;
  v7[5] = v6;
  __asm { BR              X8 }
}

uint64_t sub_2477C55B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10, unsigned int a11, unsigned int a12, int a13, unsigned int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;
  uint64_t v17;

  v16 = 1761959447 * ((2 * (&a10 & 0x110DF504) - &a10 - 286127365) ^ 0x4F55CB3F);
  a11 = 2056039922 - v16;
  a12 = 1413202760 - v16;
  a13 = v14 - v16 + 1449;
  a14 = 621652750 - v16;
  v17 = sub_24789B7D4((uint64_t)&a10);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((1330 * (a10 != 1753126780)) ^ v14))
                                          - (((v14 - 2080) | 0x80Eu) ^ 0x936)))(v17);
}

void sub_2477C5670()
{
  int v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v1 + 20) = v0
                       + (*(_DWORD *)(v1 + 20) & 0xFFFFFFF7 ^ v0)
                       + ((2
                         * ((*(_DWORD *)(v1 + 20) & 0xFFFFFFF7 ^ v0) & 0x8ADE415 ^ ((182 * (v2 ^ 0x95D) + 2147481280) | *(_DWORD *)(v1 + 20)))) ^ 0x13)
                       + 1;
}

void sub_2477C56F4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 4) ^ (1314530549 * ((a1 + 1146939819 - 2 * (a1 & 0x445CE9AB)) ^ 0xF5556F65));
  __asm { BR              X10 }
}

uint64_t sub_2477C57D4@<X0>(uint64_t a1@<X8>, int a2, char a3, uint64_t a4, char a5, uint64_t a6, char *a7, int a8, unsigned int a9, unint64_t *a10)
{
  uint64_t v10;
  uint64_t v11;
  int v12;
  unsigned int v13;
  uint64_t v14;

  v13 = 673918253 * ((&a5 & 0xA7A6F9E2 | ~(&a5 | 0xA7A6F9E2)) ^ 0xC2111DB5);
  a6 = v11;
  a7 = &a3;
  a8 = v13 + v12 + 6;
  a9 = v13 + 1228846615;
  a10 = &STACK[0x1E485B7C7E87F03B];
  v14 = (*(uint64_t (**)(char *))(a1 + 8 * (v12 - 852)))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (((4
                                                         * (((v12 - 66) ^ (*(_DWORD *)(v11 - 0x3408C9F6C2C26174) == 1474860486)) & 1)) & 0xEF | (16 * (((v12 - 66) ^ (*(_DWORD *)(v11 - 0x3408C9F6C2C26174) == 1474860486)) & 1))) ^ v12))
                                          - 8))(v14);
}

uint64_t sub_2477C58A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, int a10)
{
  uint64_t v10;
  int v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((a10 == 4) * ((v11 - 2218) ^ 0x412)) ^ v11))
                            - ((v11 + 72427480) & 0xFBAECF7D)
                            + 1133))();
}

void sub_2477C58EC(_DWORD *a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned __int8 *v4;

  v2 = v4[3] ^ 0xD0;
  v3 = ((*v4 ^ 0xD0) << 24) | ((v4[1] ^ 0xD0) << 16) | ((v4[2] ^ 0xD0) << 8) | v2;
  **(_DWORD **)(v1 + 16) = (v3 - 2 * (v3 & 0x5D3DC43B ^ v2 & 0x18) - 583154653) ^ 0xDD3DC423;
  *(_DWORD *)v1 = *a1;
}

uint64_t sub_2477C59A0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  unsigned int v6;
  unsigned int v7;

  v1 = 476588053 * ((a1 & 0x9AF34757 | ~(a1 | 0x9AF34757)) ^ 0xD8F1BCEB);
  v2 = *(_DWORD *)(a1 + 12) ^ v1;
  v3 = *(_DWORD *)(a1 + 8) - v1;
  if (v3 < 0)
    v3 = -v3;
  v4 = *(_DWORD *)(*(_QWORD *)a1 - 0x1960A8AE33B1FEE7);
  v6 = v4 - 454684228;
  v5 = v4 - 454684228 < 0;
  v7 = 454684228 - v4;
  if (!v5)
    v7 = v6;
  return (*(uint64_t (**)(void))((char *)off_2518F0F80[v2 ^ 0xCDC] + 8 * ((974 * (v3 >> 5 < v7)) ^ v2) - 4))();
}

uint64_t sub_2477C5A50@<X0>(uint64_t result@<X0>, char a2@<W8>)
{
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  int v5;

  v4 = ((*(_DWORD *)(*(_QWORD *)(v2 - 0x1960A8AE33B1FEE3) + 4 * v3 - 0x20586952EC1D9172) ^ 0x462D323u) >> a2) ^ 0xB1A00C1E;
  v5 = (v4 & 0x7F230A7D) - ((2 * v4) & 0x10421488) - 2006885692;
  *(_DWORD *)(result + 16) = (((2 * (v4 & 0x7F230A7C ^ 0xB94152D8 ^ v5)) & 0x49C27972)
                            - (v4 & 0x7F230A7C ^ 0xB94152D8 ^ v5)
                            + 1528709958) ^ 0xC16498B8;
  return result;
}

uint64_t sub_2477C5B08(uint64_t result)
{
  *(_DWORD *)(result + 16) = -1420110878;
  return result;
}

uint64_t sub_2477C5B18(uint64_t a1)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int v8;
  uint64_t v10;
  unsigned int v11;
  uint64_t result;
  int v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v20 = *MEMORY[0x24BDAC8D0];
  v2 = 1761959447 * ((2 * (a1 & 0x36121140) - a1 + 1240329919) ^ 0xE84A2F7B);
  v3 = *(_DWORD *)(a1 + 24) + v2;
  v4 = *(_DWORD *)a1 + v2;
  v6 = *(_QWORD *)(a1 + 32);
  v5 = *(_QWORD *)(a1 + 40);
  v7 = *(_QWORD *)(a1 + 48);
  v8 = *(_DWORD *)(a1 + 4) ^ v2;
  if (v4 == 1988552288 || v4 == 1988552285)
    __asm { BR              X7 }
  v10 = *(_QWORD *)(a1 + 16);
  v11 = 1434876433
      * ((-1294196619 - (&v13 | 0xB2DC2075) + (&v13 | 0x4D23DF8A)) ^ 0xB941EB27);
  v15 = v8 - v11 + 266452282;
  v17 = v11 - 1205611561 + v3 + 567;
  v14 = v6;
  v18 = v10;
  v19 = v5;
  v16 = v7;
  result = ((uint64_t (*)(int *))((char *)off_2518F0F80[v3 ^ 0x47DC2C7A] - 4))(&v13);
  *(_DWORD *)(a1 + 8) = v13;
  return result;
}

uint64_t sub_2477C6040(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 16) + 476588053 * (a1 ^ 0xBDFD0443);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)off_2518F0F80[v1 ^ 0x127]
                                        + 8
                                        * (((*(_QWORD *)(a1 + 8) == 0x3408C9F6C2C2618CLL) * ((16 * (v1 ^ 0x10E)) ^ 0x11D)) ^ v1)
                                        - 4)
                            - 8))();
}

uint64_t sub_2477C60C4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((*(_DWORD *)(v2 - 0x3408C9F6C2C26174) == 1474860486)
                                          * ((15 * (a1 ^ 0x123)) ^ 0x702)) ^ a1))
                            - 8))();
}

uint64_t sub_2477C6118@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 - 0x3408C9F6C2C2617CLL) - 1095417873;
  v4 = *(_DWORD *)(v2 - 0x3408C9F6C2C26180) + (a1 ^ 0xF93733DB);
  v5 = v4 < 0x32D73B6C;
  v6 = v3 < v4;
  if (v3 < 0x32D73B6C != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((1940 * v6) ^ a1)) - 8))();
}

_DWORD *sub_2477C61A8(_DWORD *result)
{
  int v1;
  _DWORD *v2;

  *v2 = v1;
  *result = 1474818299;
  return result;
}

void cp2g1b9ro(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  int v3;

  if (a1)
    v2 = a2 == 0;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_2477C6244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  a14 = 31090337
      * (((&a13 | 0x957EFD43) - &a13 + (&a13 & 0x6A8102B8)) ^ 0x52FF9D0A)
      - 849012913;
  v16 = sub_2478B6A70(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((675 * (a13 == 1474860486)) ^ v15)) - 8))(v16);
}

uint64_t sub_2477C62C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  uint64_t v15;
  uint64_t v16;
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a15 = 641 - (((&a13 | 0xB632F6DF) + (~&a13 | 0x49CD0920)) ^ 0x71B39697) * v17;
  a13 = &STACK[0x363276B12DAEA454];
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((((a14 == v18) << 6) | ((a14 == v18) << 7)) ^ 0x160u))
                                                                                       - ((v16 + 2253) ^ 0x345E5712)))(v19, v20, v21, v22, v23, v24);
}

uint64_t sub_2477C6360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;

  a15 = (375636451 * ((&a13 & 0xBFCF1E9B | ~(&a13 | 0xBFCF1E9B)) ^ 0x130EBBE8)) ^ 0x518;
  a16 = a9;
  a13 = v16;
  v20 = (*(uint64_t (**)(uint64_t *))(v19 + 1616))(&a13);
  return (*(uint64_t (**)(uint64_t))(v17 + 8 * ((752 * (a14 == v18)) ^ 0x8CDu)))(v20);
}

uint64_t sub_2477C6410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  uint64_t v18;
  unsigned int v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1314530549
      * ((((2 * (&a13 ^ 0x8E432754)) | 0x9FC7E972) - (&a13 ^ 0x8E432754) - 1340339385) ^ 0x70A95523);
  a13 = &STACK[0x2D3CC89B47FE83F6];
  a15 = a9;
  a16 = 132231392 - v20;
  a18 = v20 ^ 0x8BF1C9B0;
  a14 = (v19 + 1106911707) ^ v20;
  v21 = sub_2478B0F68((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * (((a17 == ((v19 - 1107308782) & 0x345E5F32) + 596262580)
                                              * (((v19 - 646257440) & 0x1377) + 6033)) ^ v19)))(v21);
}

uint64_t sub_2477C6510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, int a13, char a14, int a15, unsigned int a16, uint64_t a17, char *a18)
{
  uint64_t v18;
  int v19;
  uint64_t v20;
  int v21;
  void (*v22)(int *);
  uint64_t v23;

  a16 = (v21 + 848) ^ (1314530549
                     * ((224673585 - (&a15 | 0xD643F31) + (&a15 | 0xF29BC0CE)) ^ 0x43924600));
  a17 = a12;
  a18 = &a14;
  v22 = *(void (**)(int *))(v20 + 8 * (v21 ^ 0x1DEu));
  v22(&a15);
  a16 = (v21 + 848) ^ (1314530549
                     * ((((&a15 | 0x79FC0E68) ^ 0xFFFFFFFE) - (~&a15 | 0x8603F197)) ^ 0x370A7759));
  a17 = a12;
  a18 = &a11;
  v22(&a15);
  a17 = a12;
  LODWORD(a18) = v21
               - 476588053 * (((&a15 | 0xA795770A) - (&a15 & 0xA795770A)) ^ 0x1A687349)
               - 8;
  v23 = sub_2477C6040((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * (((a15 == v19) * (v21 - 209)) ^ v21)) - 8))(v23);
}

uint64_t sub_2477C6644(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11)
{
  uint64_t v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * (((a11 == 0) * (v12 ^ 0x1069)) ^ v12)) - 8))();
}

uint64_t sub_2477C66A0()
{
  _QWORD *v0;
  void (*v1)(uint64_t *);
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v3 = (v2 + 810832875) | 0x40A0202;
  *v0 = v7;
  v9 = v6;
  v10 = 366490169 * ((&v8 + 836107819 - 2 * ((unint64_t)&v8 & 0x31D5FE2B)) ^ 0x277BA86F)
      - 878596310
      + v3;
  v1(&v8);
  v10 = 366490169 * ((594276548 - (&v8 | 0x236BF0C4) + (&v8 | 0xDC940F3B)) ^ 0xCA3A597F)
      - 878596310
      + v3;
  v9 = v5;
  v1(&v8);
  return 0;
}

void nXJ7Amk1zyK93(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v6;

  if (a4)
    v5 = a5 == 0;
  else
    v5 = 1;
  v6 = !v5;
  __asm { BR              X9 }
}

uint64_t sub_2477C6844(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;

  *a4 = 0;
  *a5 = 0;
  a16 = 31090337
      * (((&a15 | 0xE07E4DC9) - &a15 + (&a15 & 0x1F81B230)) ^ 0x27FF2D80)
      - 849012913;
  v17 = sub_2478B6A70(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((112 * (a15 != 1474860486)) ^ 0xA9Eu)) - 12))(v17);
}

uint64_t sub_2477C68F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  a17 = 641 - (((&a15 | 0x6E74E40E) - (&a15 & 0x6E74E40E)) ^ 0xA9F58447) * v18;
  a15 = &STACK[0x363276B12DAEA45C];
  sub_24786328C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((1064 * (a16 == 1474860486)) ^ 0xAEEu)) - 12))(v19, v20, v21, v22, v23, v24, v25, v26);
}

uint64_t sub_2477C6990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unint64_t a16, int a17, uint64_t a18, unsigned int a19)
{
  unint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  uint64_t v27;

  a16 = v21
      - ((2 * v21) & 0xE93395F3DCC03498)
      - 366490169 * ((v25 - 2 * (v25 & 0x6B75DA1BDF54F1ACLL) + 0x6B75DA1BDF54F1ACLL) ^ 0x41EB6F0FC9FAA7E8)
      + ((v22 + 130332895) & 0xF83B4FFF ^ 0xF499CAF9EE6010A2);
  a17 = v22 - 366490169 * ((v25 - 2 * (v25 & 0xDF54F1AC) - 548081236) ^ 0xC9FAA7E8) - 211;
  a18 = a10;
  ((void (*)(int *))((char *)off_2518F0F80[v22 - 255] - 12))(&a15);
  v26 = ((((2 * v25) | 0xE978EE94) - v25 + 188975286) ^ 0x333D1703) * v24;
  a17 = v26 + v22 + 1176;
  a16 = v19;
  a19 = (v20 ^ 0x6FDBDFFF) + ((2 * v20) & 0xDFB7BFFE) - v26 - 638664882;
  a18 = a10;
  v27 = ((uint64_t (*)(int *))((char *)off_2518F0F80[v22 ^ 0x2B3] - 8))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((4878 * (a15 == 1474860486)) ^ v22)) - 4))(v27);
}

uint64_t sub_2477C6B14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549
      * ((((&a15 | 0xFFDFD37C) ^ 0xFFFFFFFE) - (~&a15 | 0x202C83)) ^ 0xB129AA4D);
  a18 = -2041649890 - v22;
  a20 = v22 ^ 0x8BF1C9B0;
  a15 = &STACK[0x2D3CC89B47FE83FE];
  a16 = (v20 + 1106913433) ^ v22;
  a17 = a10;
  v23 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21
                                                      + 8 * (((a19 == 1474860486) * ((v20 ^ 0x8E1) - 2778)) ^ v20))
                                          - ((v20 + 458957168) & 0xE4A4DDDD)
                                          + 345))(v23);
}

uint64_t sub_2477C6C00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, char *a13, uint64_t a14, int a15, char a16, char *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  int v21;
  uint64_t v22;
  int v23;
  uint64_t v24;

  a21 = &STACK[0x7A31AFAC6192CAF9];
  a19 = a13;
  LODWORD(a18) = (v21 + 531) ^ (1401278017
                              * ((&a17 + 1102370149 - 2 * (&a17 & 0x41B4D565)) ^ 0x4597A382));
  a17 = &a16;
  ((void (*)(char **))off_2518F0F80[v21 ^ 0x126])(&a17);
  HIDWORD(a17) = (v21 + 792) ^ (((((2 * &a17) | 0x73F2C7D8) - &a17 + 1174838292) ^ 0x8F0E522)
                              * v23);
  a18 = a13;
  a19 = &a12;
  ((void (*)(char **))off_2518F0F80[v21 ^ 0x1A6])(&a17);
  a18 = a13;
  LODWORD(a19) = v21
               - 476588053 * ((2 * (&a17 & 0x68ABF18) - &a17 - 109756186) ^ 0x448844A5)
               - 64;
  v24 = sub_2477C6040((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8
                                                      * ((3877 * ((_DWORD)a17 == v21 + 1474855771 + 2183 * (v21 ^ 0x15F))) ^ v21))
                                          - 12))(v24);
}

uint64_t sub_2477C6D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((28 * (((a12 == 0) ^ v12 ^ 0x53) & 1)) ^ v12))
                            - 4))();
}

uint64_t sub_2477C6DB8@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  unsigned int v6;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  v5 = 31 * (v4 ^ 0x14C);
  *v2 = 0;
  *v8 = 0;
  v6 = ((2 * a1) & 0xEFF3EB8E) + 1609474047 + (a1 ^ 0xF7F9F7C8 ^ v5);
  v13 = v5 + ((&v11 + 14284164 - 2 * ((unint64_t)&v11 & 0xD9F584)) ^ 0x1677A3C0) * v1 + 1069;
  v12 = v10;
  v3(&v11);
  v13 = ((v5 + 1685) | 0x24A)
      + ((&v11 + 1116673519 - 2 * ((unint64_t)&v11 & 0x428F15EF)) ^ 0x542143AB) * v1
      - 1202;
  v12 = v9;
  v3(&v11);
  return v6 - 1474860486;
}

uint64_t sub_2477C6E04(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((2846 * (a15 != (v15 ^ 0x352) - 527)) ^ v15)) - 12))();
}

uint64_t sub_2477C6E3C(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = off_2518F0F80[v1 ^ 0x141](a1, 3166943530) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)((v3 * ((v1 + 815381730) & 0xCF6643CF ^ 0xE6E)) ^ v1)) - 12))();
}

uint64_t sub_2477C6EA0()
{
  return sub_2477C6F24();
}

uint64_t sub_2477C6F24@<X0>(int a1@<W8>)
{
  unsigned int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((69 * (v2 == a1 + 1877)) | v1)) - 12))();
}

void sub_2477C6F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, _DWORD *a9)
{
  int v9;
  _QWORD *v10;

  *v10 = a1;
  *a9 = v9;
  JUMPOUT(0x2477C725CLL);
}

void df35957c4e0()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((((v0 | 0x6010C682) ^ 0xFFFFFFFE) - (~v0 | 0x9FEF397D)) ^ 0x586E5934)
        - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477C7410(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 641 - ((-1498518037 - (&a13 | 0xA6AE6DEB) + (&a13 | 0x59519214)) ^ 0x9ED0F25D) * v17;
  a13 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 + 8 * ((7 * (a14 == v16)) ^ 0x219u))
                                                                                       - 12))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477C74B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, int a16)
{
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = (((&a13 | 0x9ADFDBD4) - &a13 + (&a13 & 0x65202428)) ^ 0x8C718D90)
      * v17;
  a14 = a12;
  a13 = v16 - ((2 * v16) & 0xE3222F46) + 1905334179 + v21;
  a15 = v21 + 2033;
  sub_247881AB4((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((4054 * (a16 == v19)) ^ v20))
                                                                                       - 12))(v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477C7548(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  uint64_t v18;
  int v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1314530549 * ((((2 * &a13) | 0xC334C4D2) - &a13 + 509975959) ^ 0x5093E4A7);
  a15 = a12;
  a13 = &STACK[0x2D3CC89B47FE83EE];
  a14 = v20 ^ 0x41FA2AA8;
  a18 = v20 ^ 0x8BF1C9B0;
  a16 = -1182835127 - v20;
  v21 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((1517 * (a17 == v19)) ^ 0x219u)) - 12))(v21);
}

uint64_t sub_2477C7604(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;

  a16 = a10;
  a17 = &a12;
  a15 = (((((2 * &a14) | 0xB68FC7FC) - &a14 + 616045570) ^ 0x6A4E6530) * v22) ^ 0x475;
  (*(void (**)(int *))(v19 + 2008))(&a14);
  LODWORD(a17) = 285
               - 476588053
               * ((-355350516 - (&a14 | 0xEAD1C80C) + (&a14 | 0x152E37F3)) ^ 0xA8D333B0);
  a16 = a10;
  v23 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((2353 * (a14 == ((v20 - 584) ^ v21))) ^ v17)) - 12))(v23);
}

uint64_t sub_2477C76DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v10;
  int v11;
  int v12;

  return ((uint64_t (*)(void))(*(_QWORD *)(v10
                                        + 8
                                        * (((a10 != 0)
                                          * (v12 - v11 + 429 + ((v12 - 1727935406) | 0x40082495) + 1307316421)) | v12))
                            - 4))();
}

uint64_t sub_2477C7768@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7, unsigned int a8)
{
  uint64_t (*v8)(char *);
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  uint64_t v13;

  a8 = v11 + ((&a6 & 0x840B7ED1 | ~(&a6 | 0x840B7ED1)) ^ 0x6D5AD76A) * v9 + v12 - 553;
  a7 = a1;
  v13 = v8(&a6);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v10
                                                      + 8
                                                      * (int)(((a5 != 0) * ((v12 ^ 0xD909FFFA) - 2147)) | (v12 + v11)))
                                          - 12))(v13);
}

uint64_t sub_2477C77E4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  void (*v2)(uint64_t *);
  int v3;
  int v4;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v8 = a1 + (&v6 ^ 0x16AE5644) * v3 - 553;
  v7 = v1;
  v2(&v6);
  return (v4 - 1474860486);
}

void RpUSQN(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v7;

  if (a2)
    v5 = a4 == 0;
  else
    v5 = 1;
  v7 = v5 || a5 == 0;
  __asm { BR              X9 }
}

uint64_t sub_2477C7900(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, _DWORD *a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, unsigned int a18)
{
  uint64_t v18;
  uint64_t v19;

  *a4 = 0;
  *a5 = 0;
  a18 = 31090337 * ((((2 * &a17) | 0xFDD81B6E) - &a17 + 18084425) ^ 0x396D6DFE) - 849012913;
  v19 = sub_2478B6A70(&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * ((2959 * (a17 == 1474860486)) ^ 0x40Bu)) - 12))(v19);
}

uint64_t sub_2477C79AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  uint64_t v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  a19 = v21 - 31090337 * ((&a17 + 781686546 - 2 * (&a17 & 0x2E979712)) ^ 0xE916F75B) - 394;
  a17 = &STACK[0x363276B12DAEA47C];
  sub_24786328C((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * ((777 * (a18 == 1474860486)) ^ v21)) - ((v21 - 587933465) & 0xC4E4F39F ^ 0xC4E4D09ELL)))(v22, v23, v24, v25, v26, v27, v28, v29, a9, v19);
}

uint64_t sub_2477C7A68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, unint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, unint64_t a19, unint64_t a20)
{
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  int v26;
  unint64_t v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v26 = v24 - 663;
  v27 = 366490169 * ((((2 * v25) | 0x6BDB29E7ED065E52) - v25 + 0x4A126B0C097CD0D7) ^ 0x9F7321E7E02D796DLL);
  a20 = a14;
  LODWORD(a19) = v26 - v27 - 56;
  a18 = v22 - ((2 * v22) & 0xE93395F3DCC03498) - v27 - 0xB663506119FE5B4;
  ((void (*)(uint64_t *))((char *)off_2518F0F80[v26 & 0xB8D54F91] - 12))(&a17);
  a17 = v21;
  HIDWORD(a18) = (v26 + 932) ^ (375636451 * (((v25 | 0xECB29F4) - (v25 & 0xECB29F4)) ^ 0x5DF57378));
  a19 = a14;
  ((void (*)(uint64_t *))off_2518F0F80[v26 - 170])(&a17);
  v28 = 366490169 * ((v25 & 0xDD2C9BF0 | ~(v25 | 0xDD2C9BF0)) ^ 0x347D324B);
  a18 = a14;
  LODWORD(a17) = v20 - ((2 * v20) & 0xE3222F46) + 1905334179 + v28;
  LODWORD(a19) = v28 + v26 + 1661;
  sub_247881AB4((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (((HIDWORD(a19) == 1474860486) * (((v26 - 219824617) & 0xD1A447F) + 2428)) ^ v26)) - 12))(v29, v30, v31, v32, v33, v34, v35, v36, a9, a10, a11, a12);
}

uint64_t sub_2477C7C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, int a20,int a21,unsigned int a22)
{
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;

  v24 = 1314530549 * ((&a17 + 503961343 - 2 * ((unint64_t)&a17 & 0x1E09D6FF)) ^ 0xAF005031);
  a19 = a14;
  a17 = &STACK[0x2D3CC89B47FE8406];
  a18 = (v23 + 1106913588) ^ v24;
  a20 = -1725872667 - v24;
  a22 = v24 ^ 0x8BF1C9B0;
  v25 = sub_2478B0F68((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22
                                                      + 8
                                                      * (int)(((a21 == 1474860486)
                                                             * (((v23 + 468425447) & 0xE41467AF) - 808)) ^ v23))
                                          - (((v23 + 2028) | 0x1Au) ^ 0x976)))(v25);
}

uint64_t sub_2477C7D3C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, char *a14, uint64_t a15, uint64_t a16, int a17, char a18, char *a19, char *a20,char *a21,uint64_t a22,unint64_t *a23)
{
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  a19 = &a13;
  LODWORD(a20) = (v24 - 1546) ^ (1401278017
                               * (((&a19 | 0x20DB44BA)
                                 - &a19
                                 + (&a19 & 0xDF24BB40)) ^ 0x24F8325D));
  a21 = a14;
  a23 = &STACK[0x7A31AFAC6192CB09];
  ((void (*)(char **))off_2518F0F80[v24 - 2303])(&a19);
  HIDWORD(a19) = (v24 - 1285) ^ (((((&a19 ^ 0x21800006 | 0xDC55FCA0) ^ 0xFFFFFFFE)
                                 - (&a19 ^ 0xCC45B800 | 0x23AA035F)) ^ 0xA333C137)
                               * v23);
  a20 = a14;
  a21 = &a18;
  ((void (*)(char **))off_2518F0F80[v24 - 2175])(&a19);
  a20 = a14;
  LODWORD(a21) = v24
               - 476588053
               * ((2 * ((&a19 ^ 0xC926F96) & 0x58A8724C) - (&a19 ^ 0xC926F96) + 660049330) ^ 0x9638E667)
               - 2141;
  v26 = sub_2477C6040((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((522 * ((_DWORD)a19 == 1474860486)) ^ v24))
                                          - (v24 ^ 0x80Eu)
                                          + 360))(v26);
}

uint64_t sub_2477C7ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v18 + 8 * ((6470 * (a17 == 0)) ^ v17)) - ((93 * (v17 ^ 0x97Eu)) ^ 0x178)))();
}

uint64_t sub_2477C7F30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;

  return ((uint64_t (*)(void))(*(_QWORD *)(v14 + 8 * (((a13 != 0) * (((v13 - 2090) | 0x24) - 177)) ^ v13)) - 12))();
}

uint64_t sub_2477C7F68(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = off_2518F0F80[v1 - 2398](a1, 2866548176) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((200 * v3) ^ v1))
                            - ((v1 - 2054)
                             + (unint64_t)(v1 ^ 0x14Cu))
                            + 2462))();
}

uint64_t sub_2477C7FC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  int v13;
  uint64_t v14;
  int v15;

  v15 = a13 - ((((v13 - 2046) | 0x942) ^ 0x571BBBA6) & (2 * a13)) - 1416767122;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 + 8 * ((1519 * (((2 * v15) & 0xDDABFAE4 ^ (((v13 - 1076) | 0x1C) + 1426828966)) + (v15 ^ 0x4558241C) + 531296944 != 243331106)) ^ v13)) - 12))(a1, a2, a3, a4, a5, a6, a7, a10);
}

uint64_t sub_2477C805C(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * (((v4 ^ 0x425)
                                                                 * ((v2 + v1 + 287965838) > 7)) ^ v4))
                                                   - 4))(a1, v3);
}

uint64_t sub_2477C80BC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t v5;
  unint64_t v6;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * (v4 ^ (656 * ((unint64_t)(v2 - a1) > 0x1F))))
                                                   - ((v4 - v1 - 263) ^ v6 ^ ((v4 - 1012) | 0x1041u))))(a1, v3);
}

uint64_t sub_2477C8100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  unsigned int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * (((((a6 - 2941) | 0x111) ^ 0x5E0) * (v6 < 0x20)) ^ a6)) - 8))();
}

uint64_t sub_2477C8134(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  int v6;
  uint64_t v7;
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  v13 = v10 + v9 + a5;
  v14 = v7 + v13;
  v15 = *(_OWORD *)(v14 - 31);
  v16 = a1 + v13;
  *(_OWORD *)(v16 - 15) = *(_OWORD *)(v14 - 15);
  *(_OWORD *)(v16 - 31) = v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(v12 + 8 * ((449 * ((v8 & 0xFFFFFFE0) != 32)) ^ (a6 - 2937)))
                            - ((409 * ((a6 - v6 - 3412) ^ (v11 + 1033))) ^ 0x33ALL)))();
}

void sub_2477C81A8()
{
  JUMPOUT(0x2477C8158);
}

uint64_t sub_2477C81B4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, _DWORD *a8)
{
  int v8;
  int v9;
  int v10;
  void (*v11)(uint64_t *);
  unsigned int v12;
  _QWORD *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unsigned int v19;

  *v14 = a1;
  *a8 = v9;
  v18 = v15;
  v12 = (v8 + 668697765) & 0xD82475EB;
  v19 = v8 - 2054 + (((&v17 | 0x66D29059) + (~&v17 | 0x992D6FA6)) ^ 0x707CC61C) * v10 + 1224;
  v11(&v17);
  v18 = v16;
  v19 = v12 + (((&v17 | 0xCA6761B) + (~&v17 | 0xF35989E4)) ^ 0x1A08205E) * v10 + 561;
  v11(&v17);
  return 0;
}

void sub_2477C8454(uint64_t a1)
{
  int v1;
  BOOL v2;
  int v3;

  v1 = 476588053 * ((~(_DWORD)a1 & 0xC46AF9D | a1 & 0xF3B95062) ^ 0xB1BBABDE);
  if (*(_QWORD *)(a1 + 8))
    v2 = *(_DWORD *)(a1 + 24) + v1 == 966789249;
  else
    v2 = 1;
  v3 = !v2;
  __asm { BR              X8 }
}

uint64_t sub_2477C8514()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  _BOOL4 v3;

  v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v0 + 8 * (v2 ^ 0x107F)))(32, 0x101004023FF3BD5) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((11 * v3) ^ v2))
                            - 5 * (v2 ^ 0x10CEu)
                            - ((2129 * (v2 ^ 0x1061u)) ^ 0xFFFFFFFFFFFFEC01)))();
}

uint64_t sub_2477C8594()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((v1 == ((v3 - 3393) ^ (v0 + 863))) * ((v3 - 3393) ^ 0x370)) ^ v3))
                            - 4))();
}

uint64_t sub_2477C85DC@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t *v4;
  char v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  int v17;

  v11 = v2 - 966789250;
  v12 = v2 - 1;
  v13 = *(unsigned __int8 *)(v8 + v11);
  if (v13 == 208)
    __asm { BR              X11 }
  if (v13 == 80)
  {
    v14 = 1474860486;
    v15 = *v4;
    v16 = (*((_BYTE *)v4 + 16) - v5);
    *(_QWORD *)result = v8;
    *(_DWORD *)(result + 8) = v7;
    *(_DWORD *)(result + 12) = v12;
    if (v16 == 5)
      v17 = 1964137404;
    else
      v17 = 1964137405;
    *(_DWORD *)(result + 16) = 1948384125;
    *(_DWORD *)(result + 20) = v17;
    *(_DWORD *)(result + 24) = 1474860486;
    *(_QWORD *)(v15 - 0x879B75FC025D235) = a2;
  }
  else
  {
    result = (*(uint64_t (**)(void))(v6 + 8 * (v9 ^ 0x3A6)))();
    v14 = 1474818463;
  }
  *((_DWORD *)v4 + 7) = v14;
  return result;
}

void OlrF(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __asm { BR              X8 }
}

uint64_t sub_2477C8744(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;

  *a6 = 0;
  return (*(uint64_t (**)(void))(v6 + 8 * ((v8 + 2136693621) | (41 * (v7 == 0)))))();
}

uint64_t sub_2477C8774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;

  v25 = v24 + v22;
  a22 = v24 + 31090337 * (&a21 ^ 0xC7816049) + 1287678974;
  v26 = sub_2478B6A70(&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((3865 * (a21 == 1474860486)) ^ v25)) - 8))(v26);
}

uint64_t sub_2477C8810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,unsigned int a23)
{
  int v23;
  uint64_t v24;
  uint64_t v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  a21 = &STACK[0x363276B12DAEA494];
  a23 = 641 - ((1004134624 - (&a21 | 0x3BD9E0E0) + (&a21 | 0xC4261F1F)) ^ 0x3A77F56) * v23;
  sub_24786328C((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 + 8 * (((a22 != 1474860486) * (v26 ^ (v26 - 28))) ^ 0x2A9)) - 8))(v27, v28, v29, v30, v31, v32, v33, v34, a9, v25, a11, v24, a13, a14);
}

uint64_t sub_2477C88C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,uint64_t a22,unsigned int a23,int a24,uint64_t a25,unsigned int a26)
{
  int v26;
  unsigned int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  unsigned int v32;
  unsigned int v33;
  unsigned int v34;
  void (*v35)(int *);
  unsigned int v36;
  int v37;
  unsigned int v38;
  int v39;
  unsigned int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;

  v32 = 366490169 * (&a21 ^ 0x16AE5644);
  v33 = v27 - 460;
  a21 = v31 + 1905334179 + v32 - ((((v27 - 1908) | 0x84) - 484299655) & (2 * v31));
  a22 = a17;
  a23 = v27 - 460 + v32;
  sub_247881AB4((uint64_t)&a21);
  v34 = (((&a21 ^ 0x61E90891 | 0x45D16832)
        - (&a21 ^ 0x61E90891)
        + ((&a21 ^ 0x61E90891) & 0xBA2E97C9)) ^ 0xE3B900EA)
      * v26;
  a25 = a17;
  a22 = a13;
  a26 = (v30 ^ 0x5BFBFFFF) + ((2 * v30) & 0xB7F7FFFE) - v34 - 305225906;
  a23 = v27 - 790 + v34;
  v35 = (void (*)(int *))((char *)off_2518F0F80[v27 ^ 0x901] - 8);
  v35(&a21);
  v36 = (((&a21 | 0x19FE66EB) + (~&a21 | 0xE6019914)) ^ 0xDE7F06A3) * v26;
  a22 = v29;
  a26 = (HIDWORD(a14) ^ 0xFBDF9FED) + ((2 * HIDWORD(a14)) & 0xF7BF3FDA) - v36 + 1307246432;
  a23 = v27 - 790 + v36;
  a25 = a17;
  v35(&a21);
  if (a15)
    v37 = 1905334178;
  else
    v37 = 1905334179;
  v38 = 366490169 * ((((2 * &a21) | 0x6EB6A584) - &a21 + 1218751806) ^ 0xA1F50486);
  a22 = a17;
  a23 = v33 + v38;
  a21 = v38 + v37;
  sub_247881AB4((uint64_t)&a21);
  if (a10)
    v39 = 1905334178;
  else
    v39 = 1905334179;
  v40 = 366490169 * ((195550412 - (&a21 | 0xBA7DCCC) + (&a21 | 0xF4582333)) ^ 0xE2F67577);
  a23 = v33 + v40;
  a22 = a17;
  a21 = v40 + v39;
  sub_247881AB4((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((1792 * (a24 == 1474860486)) ^ v27)) - 12))(v41, v42, v43, v44, v45, v46, v47, v48, v29, a10, a11, a12, a13, a14, a15, a16);
}

uint64_t sub_2477C8B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,uint64_t a23,unsigned int a24,int a25,unsigned int a26)
{
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;

  v28 = 1314530549 * (((&a21 | 0x2BFBDD04) - (&a21 & 0x2BFBDD04)) ^ 0x9AF25BCA);
  a21 = &STACK[0x2D3CC89B47FE842E];
  a23 = a17;
  a22 = (v26 + 1106911467) ^ v28;
  a24 = -1857945699 - v28;
  a26 = v28 ^ 0x8BF1C9B0;
  v29 = sub_2478B0F68((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v27 + 8
                                                            * ((1650 * (a25 == ((v26 - 2076) ^ 0x57E89467))) ^ v26))
                                          - (((v26 - 2288) | 0x200) ^ 0x2C1)))(v29);
}

uint64_t sub_2477C8C58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, char a17, uint64_t a18, _BYTE *a19, int a20,char a21,uint64_t a22,_BYTE *a23,char *a24,unint64_t *a25,unsigned int a26)
{
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;

  a25 = &STACK[0x1E485B7C7E87F08B];
  a23 = a19;
  a24 = &a17;
  a26 = v27
      + 1761959447 * (((&a23 | 0xE5319149) + (~&a23 | 0x1ACE6EB6)) ^ 0x4496508C)
      + 166308002;
  sub_2478B1430((uint64_t)&a23);
  a24 = a19;
  a25 = (unint64_t *)&a21;
  HIDWORD(a23) = (v27 + 724) ^ (((((&a23 | 0xDF5678E0) ^ 0xFFFFFFFE) - (~&a23 | 0x20A9871F)) ^ 0x91A001D1)
                              * v26);
  ((void (*)(_BYTE **))off_2518F0F80[v27 ^ 0x15A])(&a23);
  a24 = a19;
  LODWORD(a25) = v27
               - 476588053 * ((((2 * &a23) | 0xD3324AA2) - &a23 + 375839407) ^ 0x54642112)
               - 132;
  v29 = sub_2477C6040((uint64_t)&a23);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28
                                                      + 8
                                                      * ((((_DWORD)a23 == 1474860486) * ((v27 + 2076) ^ 0x4A7)) ^ v27))
                                          - 12))(v29);
}

uint64_t sub_2477C8DB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, int a20)
{
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(void))(*(_QWORD *)(v21 + 8 * ((1982 * (a20 == 0)) ^ v20)) - 12))();
}

uint64_t sub_2477C8E0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8 * ((((60 * (v15 ^ 0x984)) ^ 0xD44) * (a15 == 0)) ^ v15 ^ 0x6D3))
                            - (((v15 ^ 0x6D3) - 3821) | 0x120u)
                            + 405))();
}

uint64_t sub_2477C8E5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  int v20;
  uint64_t v21;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v21
                                                     + 8
                                                     * ((7590 * ((((7 * (v20 ^ 0xD92)) ^ (a20 == 0)) & 1) == 0)) ^ v20))
                                         - ((v20 - 1978) ^ 0x5A6)))(0);
}

uint64_t sub_2477C8EAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;

  return (*(uint64_t (**)(void))(v18 + 8 * ((27 * (a17 != 3 * ((v17 + 588640347) & 0xDCEA0BA3 ^ 0x524) - 3471)) ^ v17)))();
}

uint64_t sub_2477C8EF4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  BOOL v3;

  v3 = off_2518F0F80[v1 - 3443](a1, 3209139829) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((23 * ((v3 ^ ((v1 + 89) ^ (3 * (v1 ^ 0xB0)))) & 1)) ^ v1))
                            - 8))();
}

uint64_t sub_2477C8F58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int v20;
  _BOOL4 v21;

  v20 = a17 - ((a17 << ((2 * v17) ^ 0xD1)) & 0xBB4DA818) - 576269300;
  v21 = (((v17 + 249) ^ 0xC986D73D) & (2 * v20) ^ 0x89048018) + (v20 ^ 0x3965B7E2) + 528473790 == 71516844;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 + 8 * ((4 * v21) | (16 * v21) | v17))
                                                                                       - 12))(a1, a2, a3, a4, a5, v18);
}

uint64_t sub_2477C8FF8(uint64_t a1)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v5
                                                               + 8
                                                               * (v4 ^ (((v2 + v1 + 456956946) > 7) | (8 * ((v2 + v1 + 456956946) > 7)))))
                                                   - ((v4 + 1614028058) & 0x9FCBDA7F ^ 0x877)))(a1, v3);
}

uint64_t sub_2477C9054(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((253 * (v1 - a1 >= (((v2 - 2171) | 0x47Du) ^ 0x45DuLL))) ^ v2))
                            - 4))();
}

uint64_t sub_2477C9094(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (a3 ^ (254 * (v3 < 0x20))))
                            - ((41 * (a3 ^ 0x43A) - 1968704486) & 0xF5FCABD7)
                            + 2158275405))();
}

uint64_t sub_2477C90EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  unsigned int v19;
  int8x16_t v20;
  uint64_t v21;
  uint64_t v22;
  int8x16_t v23;

  v19 = v16 + v15 + v17;
  v20.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v20.i64[1] = 0xD0D0D0D0D0D0D0D0;
  v21 = v13 + v19;
  v22 = a1 + v19;
  v23 = veorq_s8(*(int8x16_t *)(v21 - 31), v20);
  *(int8x16_t *)(v22 - 15) = veorq_s8(*(int8x16_t *)(v21 - 15), v20);
  *(int8x16_t *)(v22 - 31) = v23;
  return (*(uint64_t (**)(void))(a13
                              + 8
                              * (int)((((v14 & 0xFFFFFFE0) == 32) * (((v18 - 1012682836) & 0xBBB7B54F) - 3565)) ^ (a12 + v18 + 1841))))();
}

void sub_2477C9168()
{
  JUMPOUT(0x2477C9120);
}

uint64_t sub_2477C9174(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;

  return (*(uint64_t (**)(void))(a12 + 8 * (((((a2 - 3789) | 0x422) ^ (a2 - 2765)) * (v12 == v13)) ^ a2)))();
}

uint64_t sub_2477C91B0(uint64_t a1, int a2)
{
  char v2;
  int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5
                                                              + 8
                                                              * ((3320
                                                                * ((v2 & 0x18) == ((a2 - 669397070) & 0x27E62B5F ^ 0xB5F))) ^ (a2 - 3018)))
                                                  - (a2 - 825)
                                                  + 3344))(a1, (v3 - v4));
}

uint64_t sub_2477C9204(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  _BOOL4 v19;

  *(int8x8_t *)(a1 - 7 + (v15 + v14 + v16 - v17)) = veor_s8(*(int8x8_t *)(v12- 7+ (v15 + v14 + v16 - v17)), (int8x8_t)0xD0D0D0D0D0D0D0D0);
  v19 = v17 - (v13 & 0xFFFFFFF8) == -8;
  return ((uint64_t (*)(void))(*(_QWORD *)(a12 + 8 * (((2 * v19) | (32 * v19)) ^ v18))
                            - ((v18 - 740) ^ 0x877)))();
}

void sub_2477C926C()
{
  JUMPOUT(0x2477C9238);
}

uint64_t sub_2477C9278(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  int v12;
  int v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(a12
                                        + 8 * (((((v13 ^ 0x87D) + 2093) ^ (558 * (v13 ^ 0x87D))) * (v12 == a3)) ^ v13))
                            - 4))();
}

uint64_t sub_2477C92C0@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;

  *(_BYTE *)(a1 + (a2 - 71516845)) = *(_BYTE *)(v3 + (a2 - 71516845)) ^ 0xD0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((7624 * ((v4 ^ 0x8B6) + a2 - 1443 == a3)) ^ v4)) - 8))();
}

uint64_t sub_2477C930C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _QWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  int v10;
  uint64_t v11;

  *a6 = a1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v11 + 8 * ((3 * (v10 ^ 0x529)) ^ (2351 * (a10 != 0))))
                            - ((3 * (v10 ^ 0x529)) ^ 0x81Cu)
                            + 2481))();
}

uint64_t sub_2477C9354@<X0>(int a1@<W8>)
{
  void (*v1)(uint64_t *);
  int v2;
  int v3;
  int v4;
  _DWORD *v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v4 = (a1 - 1614905762) & 0x604189BD;
  *v6 = v7;
  v11 = v9;
  v12 = v4 + (((&v10 | 0xDB8452DF) - (&v10 & 0xDB8452DF)) ^ 0xCD2A049B) * v2 - 897;
  v1(&v10);
  v11 = v8;
  v12 = 239 * (v4 ^ 0x9BE)
      + (((&v10 | 0x8C22811A) - &v10 + (&v10 & 0x73DD7EE0)) ^ 0x9A8CD75E) * v2
      + 879;
  v1(&v10);
  return (v3 - 1474860486);
}

void J3NocDTIn(uint64_t a1, uint64_t a2, uint64_t a3)
{
  __asm { BR              X8 }
}

uint64_t sub_2477C94DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4
                                                                        + 8
                                                                        * (((2 * (a4 == 0)) | (16 * (a4 == 0))) ^ 0x10C1u))
                                                            - 4))(a1, a2, a3);
}

uint64_t sub_2477C9548()
{
  int v0;
  int v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(void))(v2 + 8 * ((v1 + v0 - 908) ^ ((2 * (v3 != 0)) | (8 * (v3 != 0))))))();
}

uint64_t sub_2477C9570@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  int v13;
  uint64_t v14;
  int v15;
  int v16;
  uint64_t v17;

  v15 = v13 + a1 - 1514;
  v16 = v13 + a1 - 1547;
  a13 = a1
      + 31090337 * ((((2 * &a12) | 0x9E26FE06) - &a12 - 1326677763) ^ 0x88921F4A)
      - 712421893;
  v17 = sub_2478B6A70(&a12);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * (((a12 != 1474860486) * (v15 ^ 0x1E6)) ^ v16)) - 4))(v17);
}

uint64_t sub_2477C9634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  a21 = v21
      - ((((&a19 | 0x4F0FD624) ^ 0xFFFFFFFE) - (~&a19 | 0xB0F029DB)) ^ 0x77714992) * v22
      + 122;
  a19 = &STACK[0x363276B12DAEA48C];
  sub_24786328C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((3498 * (a20 == ((v21 - 136578706) & 0xFFFFCDDE) + 1611451506)) ^ v21)) - 4))(v25, v26, v27, v28, v29, v30, v31, v32, v24, a10, a11, a12);
}

uint64_t sub_2477C96E4()
{
  int v0;
  int *v1;
  int v2;
  int v3;
  int v5;
  unsigned int v6;
  unsigned int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  uint64_t v16;
  unint64_t v17;
  void (*v19)(unsigned int *);
  unint64_t v20;
  unsigned int v21;
  unint64_t v22;
  unsigned int v23;
  unint64_t v24;

  v6 = 366490169 * (((&v21 | 0xC4F405FC) - (&v21 & 0xC4F405FC)) ^ 0xD25A53B8);
  v22 = v20;
  v23 = v5 + 136592534 + v6;
  v21 = v3 - ((2 * v3) & 0xE3222F46) + 1905334179 + v6;
  sub_247881AB4((uint64_t)&v21);
  v7 = 366490169 * ((((2 * &v21) | 0xD1FF3AD4) - &v21 - 1761582442) ^ 0x7E51CB2E);
  v21 = v2 - ((2 * v2) & 0xE3222F46) + 1905334179 + v7;
  v23 = v5 + 136592534 + v7;
  v22 = v20;
  sub_247881AB4((uint64_t)&v21);
  v8 = *v1;
  v19 = (void (*)(unsigned int *))((char *)off_2518F0F80[v5 + 136590765] - 4);
  if (*v1 == 3)
  {
    v12 = 366490169 * ((320759151 - (&v21 | 0x131E656F) + (&v21 | 0xECE19A90)) ^ 0xFA4FCCD4);
    v22 = v20;
    v23 = v12 + 2033;
    v21 = v12 + 1905334176;
    goto LABEL_7;
  }
  if (v8 == 2)
  {
    v13 = 366490169 * (&v21 ^ 0x16AE5644);
    v23 = v13 + 2033;
    v21 = v13 + 1905334177;
    v22 = v20;
    sub_247881AB4((uint64_t)&v21);
    v14 = v1[1];
    v15 = 366490169 * ((&v21 & 0x22F17B5E | ~(&v21 | 0x22F17B5E)) ^ 0xCBA0D2E5);
    v22 = v20;
    v21 = v14 + 1905334179 + v15 - ((2 * v14) & 0xE3222F46);
    v23 = v15 + 2033;
LABEL_7:
    sub_247881AB4((uint64_t)&v21);
    v16 = *((_QWORD *)v1 + 1);
    v17 = 366490169
        * (((~(unint64_t)&v21 | 0x7C6AA5927E0D38CCLL) + ((unint64_t)&v21 | 0x83955A6D81F2C733)) ^ 0xA90BEF79975C9176);
    v23 = 316 - v17;
    v24 = v20;
    v22 = v16 - v17 - ((2 * v16) & 0xE93395F3DCC03498) - 0xB663506119FE5B4;
    sub_2477BD690((uint64_t)&v21);
    __asm { BR              X8 }
  }
  if (v8 == 1)
  {
    v9 = 366490169 * (((&v21 | 0xCCFBDF43) - (&v21 & 0xCCFBDF43)) ^ 0xDA558907);
    v23 = v9 + 2033;
    v21 = v9 + 1905334178;
    v22 = v20;
    sub_247881AB4((uint64_t)&v21);
    v10 = v1[4];
    v11 = 366490169 * ((2 * (&v21 & 0x4E1CF060) - &v21 - 1310519393) ^ 0xA74D59DB);
    v22 = v20;
    v21 = v10 + 1905334179 + v11 - ((2 * v10) & 0xE3222F46);
    v23 = v11 + 2033;
    sub_247881AB4((uint64_t)&v21);
    __asm { BR              X8 }
  }
  v23 = 366490169 * ((((2 * &v21) | 0xD64F0D02) - &v21 - 1797752449) ^ 0x7D89D0C5) + 1596;
  v22 = v20;
  v19(&v21);
  return (v0 - 1474860459);
}

void jfkdDAjba3jd(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _DWORD *a6)
{
  int v6[10];
  uint64_t v7;

  v7 = *MEMORY[0x24BDAC8D0];
  *a5 = 0;
  *a6 = 0;
  v6[1] = 31090337
        * (((v6 | 0x88C0232B) - v6 + (v6 & 0x773FDCD0)) ^ 0x4F414362)
        - 849012913;
  sub_2478B6A70(v6);
  __asm { BR              X8 }
}

uint64_t sub_2477CA710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19)
{
  int v19;
  unsigned int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  a17 = &STACK[0x363276B12DAEA484];
  a19 = 641
      - ((((&a17 | 0xD81C2F8) ^ 0xFFFFFFFE) - (~&a17 | 0xF27E3D07)) ^ 0x35FF5D4E) * v19;
  sub_24786328C((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * ((3628 * (a18 == 1474860486)) ^ v20)) - 12))(v22, v23, v24, v25, v26, v27, v28, v29, a9, a10);
}

uint64_t sub_2477CA79C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, unsigned int a19, uint64_t a20,unsigned int a21)
{
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  HIDWORD(a11) = 731;
  v29 = 366490169
      * (((&a17 | 0x6C0E403C) - &a17 + (&a17 & 0x93F1BFC0)) ^ 0x7AA01678);
  a17 = v25 - ((2 * v25) & 0xE3222F46) + 1905334179 + v29;
  a19 = v29 + 2033;
  a18 = a15;
  sub_247881AB4((uint64_t)&a17);
  v30 = 366490169 * ((&a17 & 0x8A8CA41C | ~(&a17 | 0x8A8CA41C)) ^ 0x63DD0DA7);
  a19 = v30 + 2033;
  a18 = a15;
  a17 = v24 + 1905333624 + v30 - ((2 * v24) & 0xE3222F46) + 555;
  sub_247881AB4((uint64_t)&a17);
  v31 = (((&a17 | 0x6A047E25) - (&a17 & 0x6A047E25)) ^ 0xAD851E6C) * v21;
  a21 = (v23 ^ 0xEDFBDF6D) + ((2 * v23) & 0xDBF7BEDA) - v31 + 1540276192;
  a20 = a15;
  a19 = v31 + 1703;
  a18 = v22;
  sub_2477BC464((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 + 8 * ((3744 * (a17 == 1474860486)) ^ 0x2FCu)) - 8))(v32, v33, v34, v35, v36, v37, v38, v39, v27, v26, a11, v28);
}

uint64_t sub_2477CA998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t *a18, int a19, uint64_t a20,unsigned int a21,int a22,unsigned int a23)
{
  uint64_t v23;
  unsigned int v24;
  uint64_t v25;

  v24 = 1314530549 * (&a18 ^ 0xB10986CE);
  a21 = -915606778 - v24;
  a23 = v24 ^ 0x8BF1C9B0;
  a19 = (a12 + 1106913229) ^ v24;
  a20 = a16;
  a18 = &STACK[0x2D3CC89B47FE841E];
  v25 = sub_2478B0F68((uint64_t)&a18);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((39 * (((a12 + 86) ^ (a22 == 1474860486)) & 1)) ^ a12))
                                          - 8))(v25);
}

uint64_t sub_2477CAA54(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12, uint64_t a13, char a14, __int16 a15, char a16, uint64_t a17, uint64_t a18, char *a19, char *a20,char *a21,char *a22,uint64_t a23,unint64_t *a24)
{
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  LODWORD(a21) = (a12 + 149) ^ (1401278017
                              * (((&a20 | 0xF0C39B5E)
                                - &a20
                                + (&a20 & 0xF3C64A0)) ^ 0xF4E0EDB9));
  a20 = &a16;
  a24 = &STACK[0x7A31AFAC6192CB01];
  a22 = a19;
  (*(void (**)(char **))(v26 + 8 * (a12 - 608)))(&a20);
  a21 = a19;
  a22 = &a14;
  HIDWORD(a20) = (a12 + 410) ^ (((2 * (&a20 & 0x1040BF20) - &a20 + 1874804953) ^ 0xDEB6C617)
                              * v24);
  (*(void (**)(char **))(v26 + 8 * ((a12 + 577) ^ 0x5E7)))(&a20);
  a21 = a19;
  LODWORD(a22) = a12
               + 577
               - 476588053 * ((&a20 & 0x46D8E10B | ~(&a20 | 0x46D8E10B)) ^ 0x4DA1AB7)
               - 1023;
  v27 = sub_2477C6040((uint64_t)&a20);
  return (*(uint64_t (**)(uint64_t))(v25
                                            + 8
                                            * ((((_DWORD)a20 != 1474860486) * (((a12 + 577) ^ 0x39) - 1260)) ^ (a12 + 577))))(v27);
}

uint64_t sub_2477CABC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13)
{
  int v13;
  uint64_t v14;

  return (*(uint64_t (**)(void))(v14 + 8 * ((812 * (a13 == 0)) ^ v13)))();
}

uint64_t sub_2477CAC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;

  return (*(uint64_t (**)(void))(v15 + 8 * ((3639 * (a14 != v14 - 1317)) ^ v14)))();
}

uint64_t sub_2477CAC50(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = (v1 - 141305718) & 0x86C2F76;
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v4 ^ 0xD3Au)))(a1, 1049023243) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((2 * v5) | (16 * v5)) ^ v4))
                            - 491 * ((v4 + 1231550167) & 0x1697FEFE ^ 0x2F9u)
                            + 2451))();
}

uint64_t sub_2477CACD4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  int v14;
  uint64_t v15;
  unsigned int v16;

  v16 = (((v14 + 105) | 0x36) ^ 0xAB8DD358) + a14 - ((2 * a14) & 0x571BB2DC);
  return (*(uint64_t (**)(void))(v15
                              + 8
                              * ((82
                                * (((2 * v16) & 0xDDABFAE4 ^ 0x550BB2C4)
                                 + (v16 ^ 0x4558241C)
                                 + ((v14 - 2035493856) & 0x7953276D ^ 0x1FAAF795) == 243331106)) ^ v14)))();
}

uint64_t sub_2477CAD78(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  *v7 = a1;
  *v8 = v2;
  v5 = ((v1 ^ 0x7D9) - 252) | 0x5B1;
  v12 = v10;
  v13 = (v1 ^ 0x7D9)
      + (((&v11 | 0x9D491BCF) - &v11 + (&v11 & 0x62B6E430)) ^ 0x8BE74D8B) * v4
      + 832;
  v3(&v11);
  v12 = v9;
  v13 = v5 + (((&v11 | 0x1C132DC3) + (~&v11 | 0xE3ECD23C)) ^ 0xABD7B86) * v4 - 373;
  v3(&v11);
  return 0;
}

void sub_2477CB178(uint64_t a1)
{
  int v1;
  _BOOL4 v4;

  v4 = *(_QWORD *)(a1 + 8) != 0x3408C9F6C2C2618CLL
    && *(_QWORD *)a1 != 0xE8184743AF0654ELL
    && *(_QWORD *)(a1 + 32) != 0x758FEF17847AAD3CLL;
  v1 = *(_DWORD *)(a1 + 24) ^ (1437274309 * ((~(_DWORD)a1 & 0xAD4A021E | a1 & 0x52B5FDE1) ^ 0x8F447F2B));
  __asm { BR              X9 }
}

uint64_t sub_2477CB280(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  uint64_t v18;
  int v19;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * (((*(_DWORD *)(a18 - 0x3408C9F6C2C26174) == 1474860486) * ((7 * (v19 ^ 0x7D2)) ^ 0x5A7)) ^ v19))
                                                                                       - 12))(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_2477CB2DC@<X0>(int a1@<W8>, __n128 a2@<Q0>, __n128 a3@<Q1>, __n128 a4@<Q2>, __n128 a5@<Q3>, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  __n128 v19;
  __n128 v20;
  _BOOL4 v21;
  unsigned int v22;
  int v23;
  _BOOL4 v24;
  unsigned int v26;

  v18 = (v15 - 1245924756) & 0x4A4350CF;
  v26 = *(_DWORD *)(a15 - 0x3408C9F6C2C2617CLL) + 75133189;
  *(_DWORD *)(v17 - 140) = *(_DWORD *)(a12 + 28)
                         - a1
                         - ((((*(_DWORD *)(a12 + 28) - a1) << (v18 + 116)) - 771075226) & 0xC205A18E)
                         - 905446790;
  v19.n128_u64[0] = 0xA0A0A0A0A0A0A0A0;
  v19.n128_u64[1] = 0xA0A0A0A0A0A0A0A0;
  v20.n128_u64[0] = 0xD0D0D0D0D0D0D0D0;
  v20.n128_u64[1] = 0xD0D0D0D0D0D0D0D0;
  v21 = v26 < 0x789C6C82;
  v22 = (v18 ^ 0x1025) + 2023517146;
  v23 = v21 ^ (v22 < 0x789C6C82);
  v24 = v22 < v26;
  if (!v23)
    v21 = v24;
  return ((uint64_t (*)(__n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v16
                                                                                             + 8
                                                                                             * ((!v21
                                                                                               * (((v18 - 1884573966) & 0x705446B5)
                                                                                                - 1539)) ^ v18))
                                                                                 - 12))(a2, a3, a4, a5, v19, v20);
}

uint64_t sub_2477CB550(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, _DWORD *a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  int v25;
  uint64_t v26;
  unsigned int v28;

  v22 = (((v19 - 965307822) & 0x3989677F ^ 0xFFFFFFF7) & (a1 + a5)) + 16;
  v23 = v22 ^ 0x7D5F2FBD;
  v24 = (2 * v22) & 0xFABE5F60;
  v25 = 375636451 * ((((v21 - 136) | 0x3C45203A) - ((v21 - 136) & 0x3C45203A)) ^ 0x6F7B7AB6);
  *(_DWORD *)(v21 - 120) = a1 - a14 - v25 - 2115472919;
  *(_QWORD *)(v21 - 128) = a19;
  *(_DWORD *)(v21 - 136) = v25 + v19 + 2766;
  *(_DWORD *)(v21 - 132) = v25 + v23 + v24 - 2017723321;
  v28 = v19;
  v26 = ((uint64_t (*)(uint64_t))((char *)off_2518F0F80[v19 - 1336] - 12))(v21 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((2607 * (*a15 == 1474860486)) ^ v28)) - 12))(v26);
}

uint64_t sub_2477CB668(__n128 a1, __n128 a2, __n128 a3, __n128 a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17, uint64_t a18, uint64_t a19, int a20,int a21)
{
  uint64_t v21;
  __n128 v22;
  __n128 v23;

  v22.n128_u64[0] = 0xA0A0A0A0A0A0A0A0;
  v22.n128_u64[1] = 0xA0A0A0A0A0A0A0A0;
  v23.n128_u64[0] = 0xD0D0D0D0D0D0D0D0;
  v23.n128_u64[1] = 0xD0D0D0D0D0D0D0D0;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, __n128, __n128, __n128, __n128, __n128, __n128))(*(_QWORD *)(v21 + 8 * (a21 ^ (3009 * (a17 < 0xFFFFFFFE)))) - (((227 * a21 - 1025) | 0x401u) ^ 0x639)))(2059257145, 1497075189, 721225620, 3000921529, 3067808791, 3682582015, 2797892107, 4099063512, a1, a2, a3, a4, v22, v23);
}

uint64_t sub_2477CB710(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  int v14;
  int v15;
  uint64_t *v16;
  char v17;
  char v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t (*v22)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v23;
  unsigned int v24;

  v22 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 + 8 * (v14 - 1586)) - 12);
  v23 = *v16;
  v24 = v15 + 2059257145;
  *(_BYTE *)(*v16 + v24) = -48;
  *(_BYTE *)(v23 + v24 + 1) = -53 - (v19 & 0xF3);
  *(_BYTE *)(v23 + (v15 + 2059257147)) = (v18 ^ 0xC9) - 2 * ((v18 ^ 0xC9) & v17) - 48;
  *(_BYTE *)(v23 + v24 + 3) = v21 ^ 0x9F;
  return v22(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13, a14);
}

void sub_2477CBB38()
{
  JUMPOUT(0x2477CBAA8);
}

void sub_2477CBB4C()
{
  JUMPOUT(0x2477CBAA8);
}

uint64_t sub_2477CBB64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,int a23)
{
  uint64_t v23;
  int v24;
  int v25;
  int v26;

  v26 = (v25 + ((v24 - 1582) ^ 0x285) - 642) ^ a23;
  return ((uint64_t (*)(void))(*(_QWORD *)(v23
                                        + 8
                                        * ((1565
                                          * (((2 * (v26 - ((2 * v26) & 0x93FE0104) - 906035070)) & 0x9FE7B79C ^ 0x93E60104)
                                           + ((v26 - ((2 * v26) & 0x93FE0104) - 906035070) ^ 0x60CDB4C)
                                           + 2100147832 != 1294045766)) ^ (v24 + 902)))
                            - 4))();
}

uint64_t sub_2477CBC00()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((92 * ((((v2 - 126) ^ ((v1 + v0 + 806102066) < 8)) & 1) == 0)) | v2))
                            - 4))();
}

uint64_t sub_2477CBC70@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15)
{
  int v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * (v15 ^ (3240
                                                * ((unint64_t)(a15 - a2 - a1 - 0x3E96A38D01A19BF5) > 0x1F))))
                            - 4))();
}

uint64_t sub_2477CBCDC(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v4 + 8 * ((((a3 ^ 0x508) - 2753) * (v3 < 0x20)) ^ a3)) - 12))((a3 ^ 0x508u) - 1118);
}

uint64_t sub_2477CBD14(int a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  int8x8_t v8;
  int8x8_t v9;
  unsigned int v10;
  int8x8_t v11;

  v10 = v5 + 806102065 + v4 - v6;
  v11 = vrev64_s8(*(int8x8_t *)(v2 - 7 + v10));
  *(int8x8_t *)(v1 - 7 + v10) = vrev64_s8(vadd_s8(vsub_s8(v11, vand_s8(vadd_s8(v11, v11), v8)), v9));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((5780 * (v6 - (v3 & 0xFFFFFFF8) == -8)) ^ a1))
                            - ((a1 - 1224610809) & 0x48FE0FC7 ^ 0x286)))();
}

void sub_2477CBDA4()
{
  JUMPOUT(0x2477CBD3CLL);
}

uint64_t sub_2477CBDAC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19)
{
  uint64_t v19;
  int v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((127 * (a1 - v20 + (a19 ^ 0xB39) == 2076666494)) ^ a19)) - 12))();
}

uint64_t sub_2477CBE18@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v18;
  int v19;
  uint64_t v20;
  int v21;
  _BOOL4 v22;

  v21 = a1 - 1910626434 + v18 + 1589;
  v22 = v21 - 1697666777 < (a18 + 648916394);
  if ((a18 + 648916394) < 0x6FD2A193 != (v21 - 1697666777) < 0x6FD2A193)
    v22 = (a18 + 648916394) < 0x6FD2A193;
  return (*(uint64_t (**)(void))(v20
                              + 8 * ((!v22 * ((((v19 + 29) | 0x611) ^ 0x85C) - 3684)) ^ (((v19 + 29) | 0x611) + 1884))))();
}

void sub_2477CC0E8()
{
  JUMPOUT(0x2477CC11CLL);
}

uint64_t sub_2477CC200(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((a3 - 830761671) & 0x31846EF7 ^ (a3 + 1038)) * ((v3 & 0x18) != 0)) ^ a3))
                            - 4))();
}

uint64_t sub_2477CC254(uint64_t a1, int a2, uint64_t a3, int a4)
{
  uint64_t v4;
  uint64_t v5;
  int v6;
  char v7;
  uint64_t v8;
  int v9;

  *(_BYTE *)(v4 + (v6 + a4)) = *(_BYTE *)(v5 + (v6 + a4))
                                           - (v7 & (2 * *(_BYTE *)(v5 + (v6 + a4))))
                                           - 48;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v8 + 8 * (((v6 - 1 != v9) * (a2 - 1701)) ^ (a2 - 1145))) - 4))((a2 - 3629));
}

void sub_2477CC298()
{
  JUMPOUT(0x2477CC258);
}

uint64_t sub_2477CC2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, unsigned int a13)
{
  int v13;
  int v14;
  _QWORD *v15;
  uint64_t v16;
  _BOOL4 v17;

  *(_BYTE *)(*v15 + (v13 + a7)) = 80;
  v17 = v13 + 1483979268 < a13 - 1313912840;
  if (a13 > 0x4E50B807 != (v13 + 1483979268) < 0xB1AF47F8)
    v17 = a13 > 0x4E50B807;
  return (*(uint64_t (**)(void))(v16 + 8 * ((((v14 - 2100) ^ 0x633) * v17) ^ v14)))();
}

uint64_t sub_2477CC318@<X0>(unsigned int a1@<W1>, int a2@<W6>, unsigned int a3@<W8>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  unsigned int v7;
  _QWORD *v8;
  uint64_t v9;
  _BOOL4 v10;
  unsigned int v11;
  int v12;
  _BOOL4 v13;

  v10 = a1 > v7;
  *(_BYTE *)(*v8 + (v3 + 1 + a2)) = -48;
  v11 = v5 + v4 + v3 - 2100;
  v12 = v10 ^ (v11 < a3);
  v13 = v11 < v6;
  if (!v12)
    v10 = v13;
  return (*(uint64_t (**)(void))(v9 + 8 * ((2 * v10) | (4 * v10) | v5)))();
}

void sub_2477CC370(uint64_t a1, int a2)
{
  _QWORD *v2;
  unsigned int v3;
  _DWORD *v4;
  uint64_t v5;
  uint64_t v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;

  *(_QWORD *)(v5 - 0xE8184743AF0654ELL) = *v2;
  *(_DWORD *)(v6 - 0x758FEF17847AAD3CLL) = a2;
  *(_QWORD *)(v9 - 0x3408C9F6C2C26184) = 0x39A0088139A00881;
  *v2 = 0;
  *v4 = 1948384125;
  v3 = (*(_DWORD *)(v9 - 0x3408C9F6C2C26178) & 0xFFFFFFFE ^ 0xA5E5B9B6 | 0x644385C5)
     - (*(_DWORD *)(v9 - 0x3408C9F6C2C26178) & 0xFFFFFFFE ^ 0xA5E5B9B6 | 0x9BBC7A3A)
     - 1682146758;
  *(_DWORD *)(v9 - 0x3408C9F6C2C26178) = ((v3 & 0x70FBEF5D ^ 0xF98A10) + (v3 & 0x8F0410A2 ^ 0x4000083) - 1) ^ 0xC55FB6E1;
  *(_DWORD *)(v8 + 20) = *v7;
}

void XpqjnD(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  BOOL v8;
  int v11;

  if (a5)
    v8 = a6 == 0;
  else
    v8 = 1;
  v11 = !v8 && a7 != 0 && a8 != 0;
  __asm { BR              X8 }
}

uint64_t sub_2477CC554(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,int a21,unsigned int a22)
{
  uint64_t v22;
  unsigned int v23;
  uint64_t v24;

  *a5 = 0;
  *a6 = 0;
  a22 = 31090337 * ((((&a21 | 0xC8FD952) ^ 0xFFFFFFFE) - (~&a21 | 0xF37026AD)) ^ 0x34F146E4)
      - 849012913;
  v24 = sub_2478B6A70(&a21);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((7804 * (a21 == 1474860486)) ^ v23)) - 12))(v24);
}

uint64_t sub_2477CC608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,unsigned int a23)
{
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  a23 = 641 - 31090337 * ((&a21 - 1343255803 - 2 * (&a21 & 0xAFEF8B05)) ^ 0x686EEB4C);
  a21 = &STACK[0x363276B12DAEA4A4];
  sub_24786328C((uint64_t)&a21);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * ((a22 == 1474860486) | 0xE5Cu)) - 12))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_2477CC694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t a19, uint64_t a20,int a21,unint64_t a22,int a23,unint64_t a24)
{
  uint64_t v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  int v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;

  v30 = 366490169 * ((((v29 | 0x1A4896CE) ^ 0xFFFFFFFE) - (~(_DWORD)v29 | 0xE5B76931)) ^ 0xF3193F75);
  a22 = a19;
  a21 = v27 - ((2 * v27) & 0xE3222F46) + 1905334179 + v30;
  a23 = v30 + 2033;
  sub_247881AB4((uint64_t)&a21);
  v31 = 366490169 * (((v29 ^ 0xE985EB74) & 0x7D5A6A66 | ~(v29 ^ 0xE985EB74 | 0x7D5A6A66)) ^ 0x7D8E28A9);
  a23 = v31 + 2033;
  a22 = a19;
  a21 = v26 - ((2 * v26) & 0xE3222F46) + 1905334179 + v31;
  sub_247881AB4((uint64_t)&a21);
  v32 = 366490169 * ((2 * (v29 & 0x2DA460858E96DC20) - v29 + 0x525B9F7A716923DBLL) ^ 0x78C52A6E67C7759FLL);
  a24 = a19;
  a22 = v25 - v32 - 0xB663506119FE5B4 - ((2 * v25) & 0xE93395F3DCC03498);
  a23 = 316 - v32;
  sub_2477BD690((uint64_t)&a21);
  v33 = 366490169 * ((~v29 & 0x9F64494E6CBF760ELL | v29 & 0x609BB6B1934089F1) ^ 0xB5FAFC5A7A11204ALL);
  a24 = a19;
  a22 = v24 - ((2 * v24) & 0xE93395F3DCC03498) - 0xB663506119FE5B4 - v33;
  a23 = 316 - v33;
  v34 = ((uint64_t (*)(int *))sub_2477BD690)(&a21);
  return (*(uint64_t (**)(uint64_t))(v28 + 8 * ((1578 * (a21 == 1474860486)) ^ 0xA0Cu)))(v34);
}

uint64_t sub_2477CC8F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,unint64_t *a21,int a22,uint64_t a23,unsigned int a24,int a25,unsigned int a26)
{
  unsigned int v26;
  uint64_t v27;
  unsigned int v28;
  uint64_t v29;

  v28 = 1314530549 * (&a21 ^ 0xB10986CE);
  a22 = (v26 + 1106911388) ^ v28;
  a23 = a19;
  a21 = &STACK[0x2D3CC89B47FE841E];
  a24 = -77503745 - v28;
  a26 = v28 ^ 0xEB136265;
  v29 = sub_2478B0F68((uint64_t)&a21);
  return (*(uint64_t (**)(uint64_t))(v27 + 8
                                                  * (((a25 == 1474860486) * (((v26 + 1016) | 0x58) ^ 0xB1E)) | v26)))(v29);
}

uint64_t sub_2477CC9AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, char a15, __int16 a16, char a17, char *a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,char a23,char *a24,char *a25,unint64_t *a26,unsigned int a27,unint64_t *a28)
{
  int v28;
  unsigned int v29;
  uint64_t v30;
  uint64_t v31;

  a27 = v29
      - 1322
      + 1761959447
      * (((&a24 | 0x92A3870E) - &a24 + (&a24 & 0x6D5C78F0)) ^ 0x330446CA)
      + 166307169;
  a24 = a18;
  a25 = &a15;
  a26 = &STACK[0x1E485B7C7E87F07B];
  sub_2478B1430((uint64_t)&a24);
  LODWORD(a25) = (v29 - 1692) ^ (1401278017
                               * ((&a24 - 195914510 - 2 * (&a24 & 0xF45294F2)) ^ 0xF071E215));
  a24 = &a23;
  a26 = (unint64_t *)a18;
  a28 = &STACK[0x7A31AFAC6192CB19];
  ((void (*)(char **))off_2518F0F80[(v29 - 1322) ^ 0x499])(&a24);
  HIDWORD(a24) = (v29 - 1431) ^ (((2 * (&a24 & 0x79362D00) - &a24 - 2033593601) ^ 0x37C05431)
                               * v28);
  a25 = a18;
  a26 = (unint64_t *)&a17;
  ((void (*)(char **))off_2518F0F80[v29 - 2321])(&a24);
  LODWORD(a26) = v29
               - 1322
               - 476588053 * ((2 * (&a24 & 0x5F5C29C0) - &a24 + 547608120) ^ 0x9D5ED27B)
               - 965;
  a25 = a18;
  v31 = sub_2477C6040((uint64_t)&a24);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v30
                                                      + 8
                                                      * (int)((((_DWORD)a24 == 1474860486) * (v29 + 2638)) ^ (v29 - 1322)))
                                          - v29
                                          + 2564))(v31);
}

uint64_t sub_2477CCB90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((58 * (a16 != 0)) ^ (v16 - 10))) - 8))();
}

uint64_t sub_2477CCBE0@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  int v15;

  v15 = a14 - ((a14 << ((a1 + 10) ^ 0xE3)) & 0x571BB2DC) - 1416767122;
  return (*(uint64_t (**)(void))(v14
                              + 8
                              * ((253
                                * ((((a1 - 881) ^ 0xDDABFB83) & (2 * v15) ^ 0x550BB2C4) + (v15 ^ 0x4558241C) + 531296944 == 243331106)) ^ (a1 - 881))))();
}

uint64_t sub_2477CCC8C()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((106
                                                        * (v2
                                                         + v1
                                                         + ((((v0 ^ 0x5DF) - 168) | 0xC2) ^ (((v0 ^ 0x5DF) + 15989592) | 0xA801B8C4) ^ 0xB9DFBE88) < 8)) ^ v0 ^ 0x5DF))
                                          - 12))(v3);
}

uint64_t sub_2477CCCF4()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  char v5;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((2476
                                                        * ((((unint64_t)(v0 - v3) < 0x20) ^ (v5 + (v2 ^ 0x9B) - 1)) & 1)) ^ v2))
                                          - 12))(v1);
}

uint64_t sub_2477CCD38()
{
  unsigned int v0;
  int v1;
  uint64_t v2;
  int v3;

  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((31 * ((((v3 + 5 * v1 + 3766) ^ (v0 < ((79 * ((5 * v1) ^ 0x17C)) ^ 0x51Fu))) & 1) == 0)) ^ (5 * v1))))();
}

uint64_t sub_2477CCD90()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;
  int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v3 + v2 + v4;
  v11 = v0 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = v6 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((487 * ((v1 & 0xFFFFFFE0) == 32)) ^ (v7 + v5 + 3821)))
                            - (v5 - v9)
                            + 4123))();
}

void sub_2477CCDF0()
{
  JUMPOUT(0x2477CCDACLL);
}

uint64_t sub_2477CCDFC(int a1)
{
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((((a1 ^ 0x14C1) - 1220) * (v1 == v2)) ^ a1))
                            - ((a1 - 3766) ^ 0x161)))();
}

uint64_t sub_2477CCE30(uint64_t a1, uint64_t a2, int a3)
{
  char v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  return (*(uint64_t (**)(_QWORD))(v7
                                           + 8
                                           * ((((((a3 ^ 0x17C) - v6) ^ (v6 + 131)) + 79 * (a3 ^ 0x17C))
                                             * ((v3 & 0x18) == 0)) ^ a3)))((v4 - v5));
}

uint64_t sub_2477CCE6C(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;

  v11 = -v7;
  *(_QWORD *)(v9 - 7 + (v5 + v4 + v8 + v11)) = *(_QWORD *)(v2 - 7 + (v5 + v4 + v8 + v11));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v10 + 8 * ((452 * (((a2 - 1351) & v3) + v11 != 8)) ^ (a2 - 68)))
                                         - 4))(v6 - ((a2 - 1351) & v3));
}

void sub_2477CCED0()
{
  JUMPOUT(0x2477CCEA4);
}

uint64_t sub_2477CCED8(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4
                              + 8
                              * (((((v2 == a2) ^ (v3 - 1)) & 1)
                                * ((v3 - 1727191455) & 0x66F2DCE6 ^ 0x46)) ^ v3)))();
}

uint64_t sub_2477CCF34(int a1)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(v4 + (a1 - 243331107)) = *(_BYTE *)(v2 + (a1 - 243331107));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((7069 * (a1 - 1 == v1)) ^ (v6 + v3 + 2823)))
                            - (v3 ^ (v5 + 887) ^ 0x4E6)))();
}

uint64_t sub_2477CCF84@<X0>(unsigned int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned int *a7, int a8)
{
  int v8;
  uint64_t v9;

  *a7 = a1 >> 2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((a8 != 0) * ((v8 - 779064771) & 0x2E6F9AEC ^ 0x555)) ^ v8)) - 8))();
}

uint64_t sub_2477CCFD8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = off_2518F0F80[v1 - 1222](a1, 51302153) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((684 * v3) ^ v1)) - 8))();
}

uint64_t sub_2477CD038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15)
{
  int v15;
  uint64_t v16;

  return ((uint64_t (*)(void))(*(_QWORD *)(v16
                                        + 8
                                        * ((56
                                          * ((((a15 - ((2 * a15) & 0xBB4DA818) - 576269300) << (((5 * (v15 ^ 0x20) + 34) | 0x8A)
                                                                                              + 115)) & 0xC986C7DC ^ 0x89048018)
                                           + ((a15 - ((2 * a15) & 0xBB4DA818) - 576269300) ^ 0x3965B7E2)
                                           + 528473790 != 71516844)) ^ v15))
                            - 4))();
}

uint64_t sub_2477CD0D4()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((364
                                          * ((((v1 + v0 + 456956946) < 8) ^ (v2 - 57)) & 1)) ^ v2))
                            - ((v2 - 118098608) & 0xAFFFB8F5 ^ 0xA8F5B8D8)))();
}

uint64_t sub_2477CD148(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((a3 ^ a2 ^ 0x12AE) - 645) * ((unint64_t)(v3 - a1) > 0x1F)) ^ a3 ^ a2))
                            - 4))();
}

uint64_t sub_2477CD184(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5
                                                              + 8
                                                              * (((v3 < v4 + ((a3 + 548765084) | 0x88403880) + 15)
                                                                * (a3 - 571)) ^ a3))
                                                  - 8))(a1, (a3 + 711));
}

uint64_t sub_2477CD1CC(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int8x16_t v10;
  uint64_t v11;
  uint64_t v12;
  int8x16_t v13;

  v9 = v4 + v3 + v5;
  v10.i64[0] = 0xD0D0D0D0D0D0D0D0;
  v10.i64[1] = 0xD0D0D0D0D0D0D0D0;
  v11 = v1 + v9;
  v12 = a1 + v9;
  v13 = veorq_s8(*(int8x16_t *)(v11 - 31), v10);
  *(int8x16_t *)(v12 - 15) = veorq_s8(*(int8x16_t *)(v11 - 15), v10);
  *(int8x16_t *)(v12 - 31) = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((1535 * ((v2 & 0xFFFFFFE0) == 32)) ^ (v7 + v6 + 2875)))
                            - ((v6 - 269264549) & 0x6716FDFB ^ 0x1027)))();
}

void sub_2477CD24C()
{
  JUMPOUT(0x2477CD204);
}

uint64_t sub_2477CD258(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  _DWORD *v6;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v4 = (v1 - 726) | 0x800;
  *v7 = a1;
  *v6 = v2;
  v11 = v8;
  v12 = v4
      + 366490169
      * (((&v10 | 0xE85AA1C5) - &v10 + (&v10 & 0x17A55E38)) ^ 0xFEF4F781)
      - 976;
  v3(&v10);
  v11 = v9;
  v12 = (v4 ^ 0x450)
      + 366490169 * (((&v10 | 0xF99D68BD) - (&v10 & 0xF99D68BD)) ^ 0xEF333EF9)
      - 2080;
  v3(&v10);
  return 0;
}

void LLb3qVEd()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((2 * (v0 & 0x6A9AF4B8) - v0 + 358943557) ^ 0xD2E46B0C) - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477CD5C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 641
      - (((&a13 | 0x461FCD1) - &a13 + (&a13 & 0xFB9E0328)) ^ 0xC3E09C98) * v15;
  a13 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                         + 8
                                                                                         * ((5048 * (a14 == v16)) ^ 0x366)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477CD660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, int a16)
{
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v19 = 366490169 * (&a13 ^ 0x16AE5644);
  a14 = a12;
  a13 = v16 - ((2 * v16) & 0xE3222F46) + 1905334179 + v19;
  a15 = v19 + 2033;
  sub_247881AB4((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((6726 * (a16 == v17)) ^ 0xBF0u))
                                                                                       - 4))(v20, v21, v22, v23, v24, v25);
}

uint64_t sub_2477CD71C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549 * ((2 * (&a13 & 0x5AE1DAF8) - &a13 + 622732544) ^ 0x9417A3CE);
  a15 = a12;
  a14 = (v20 + 1106910943) ^ v21;
  a13 = &STACK[0x2D3CC89B47FE83EE];
  a18 = v21 ^ 0x8BF1C9B0;
  a16 = -1558305498 - v21;
  v22 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8 * (((a17 != v18) * ((2 * (v20 ^ 0xA7A)) ^ 0x35F)) ^ v20))
                                          - 4))(v22);
}

uint64_t sub_2477CD7EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  a15 = ((v20 ^ 0x24) - 1912) ^ (((2 * (&a14 & 0xCE27D38) - &a14 + 1931313858) ^ 0xC214040C)
                               * v21);
  a16 = a10;
  a17 = &a12;
  (*(void (**)(int *))(v19 + 8 * ((v20 ^ 0x24) - 2802)))(&a14);
  LODWORD(a17) = (v20 ^ 0x24)
               - 476588053
               * ((912850844 - (&a14 | 0x3668FF9C) + (&a14 | 0xC9970063)) ^ 0x746A0420)
               - 2768;
  a16 = a10;
  v22 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18
                                                      + 8
                                                      * ((2007 * (a14 != v17 + (((v20 ^ 0x24) - 2941) | 0xB80) - 3056)) ^ v20 ^ 0x24u))
                                          - ((626 * (v20 ^ 0xBCCu)) ^ 0xC32)))(v22);
}

uint64_t sub_2477CD8F8()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v9 = v3 + ((&v7 & 0x698936FB | ~(&v7 | 0x698936FB)) ^ 0x80D89F40) * v1 - 1460;
  v8 = v5;
  v0(&v7);
  v9 = ((v3 - 2054518921) & 0x7A756FFE)
     + (((&v7 | 0xF7409524) - (&v7 & 0xF7409524)) ^ 0xE1EEC360) * v1
     + 726;
  v8 = v6;
  v0(&v7);
  return (v2 - 1474860486);
}

void sub_2477CDA28(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  BOOL v5;
  int v6;
  int v7;
  int v8;

  v1 = 366490169 * (((a1 | 0x57189164) - (a1 & 0x57189164)) ^ 0x41B6C720);
  v2 = *(_DWORD *)(a1 + 4) + v1;
  v3 = *(_DWORD *)a1 - v1;
  v4 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1960A8AE33B1FEE7);
  v6 = v4 - 454684228;
  v5 = v4 - 454684228 < 0;
  v7 = 454684228 - v4;
  if (v5)
    v8 = v7;
  else
    v8 = v6;
  __asm { BR              X11 }
}

uint64_t sub_2477CDB00(uint64_t a1)
{
  int v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v2
                                                               + 8
                                                               * ((3961
                                                                 * (((v1 == 1922214512) ^ (v3 + 1)) & 1)) ^ v3))
                                                   - 373 * (v3 ^ 0x298u)
                                                   + 734))(a1, 1180695301);
}

uint64_t sub_2477CDB50(uint64_t a1)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v1 + 8 * ((v2 - 218) | 0x80)) - 4))(a1, ((v2 - 218) | 0x80u) + 10);
}

uint64_t sub_2477CDBEC@<X0>(uint64_t a1@<X0>, int a2@<W1>, char a3@<W2>, int a4@<W3>, int a5@<W5>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;

  *(_BYTE *)(*(_QWORD *)(a1 + 8) + a5 + a6 + ((a2 + 628224098 + v8) | 0x30u)) = (a4 ^ v9) >> (a3 - 7);
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a2 ^ (112 * (a5 - 1 != v7)))) - 12))();
}

uint64_t sub_2477CDC50(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v5
                                                              + 8
                                                              * ((((((a5 & (v6 + 70)) - 699692689) & 0x29B47726) - 368)
                                                                * (a3 + (a5 & (v6 + 70) ^ 0x298) != v7 + 32)) ^ a5 & (v6 + 70)))
                                                  - 4))(a1, (a5 & (v6 + 70)) + 10);
}

uint64_t sub_2477CDCA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;
  _BOOL4 v9;

  v9 = v7 - 1405379633 > 1373452727 || v7 - 1405379633 < v6;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                + 8
                                                                                * ((((a5 - 140) ^ 0xF09) * v9) ^ a5))
                                                                    - 4))(a1, (a5 - 140), 1919754759, 73585443);
}

uint64_t sub_2477CDCFC@<X0>(uint64_t a1@<X0>, int a2@<W1>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_2477CDBEC(a1, a2, 7, *(_DWORD *)(*v4 + 4 * (int)((a2 ^ 0xDA5E608D) + v5) - 0x20586952EC1D9172), v3, a3);
}

uint64_t sub_2477CDD3C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 24) = a2;
  return result;
}

void sub_2477CDD48(uint64_t a1, uint64_t a2)
{
  _BOOL4 v2;

  v2 = (*(_DWORD *)(a2 + 4) - 1278565152) < 5;
  __asm { BR              X9 }
}

uint64_t sub_2477CDDA8()
{
  int v0;
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((69 * (v0 != 1278565152)) ^ 0xD38u)) - 4))();
}

uint64_t sub_2477CDDE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  int v15;

  v5 = v4 - (**(unsigned __int8 **)(a2 + 8) == (v3 ^ 0xC1));
  v6 = (v3 - 134382042) & 0xDD73BC7A;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 800) = 1473112520;
  *(_DWORD *)(*(_QWORD *)(a1 + 96) + 804) = 454684228;
  *(_QWORD *)(*(_QWORD *)(a1 + 96) + 808) = *(_QWORD *)(a1 + 96) + 0x20586952EC1D94A2;
  v7 = *(_QWORD *)(a1 + 96) + 0x1960A8AE33B2020BLL;
  v8 = *(_QWORD *)(a2 + 8) + (*(_DWORD *)(a2 + 4) - v5);
  v9 = 1761959447 * ((195301791 - (&v11 | 0xBA4119F) + (&v11 | 0xF45BEE60)) ^ 0x55FC2FA4);
  v14 = v5 - v9 + 830458465;
  v11 = v3 - v9 + 349;
  v12 = v8;
  v13 = v7;
  (*(void (**)(int *))(a3 + 8 * (v3 ^ 0x153)))(&v11);
  return v6 + 366226929 * v15 + 1770764021;
}

void VVaAJGMXS456O5KIXfqv(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X9 }
}

uint64_t sub_2477CDFCC@<X0>(_QWORD *a1@<X3>, uint64_t a2@<X4>, int a3@<W8>)
{
  uint64_t v3;

  *a1 = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((a3 + 387539099) ^ (2456 * (a2 != 0)))) - 4))();
}

uint64_t sub_2477CE000@<X0>(_DWORD *a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  int v14;
  uint64_t v15;
  int v16;
  int v17;
  int v18;
  uint64_t v19;

  *a1 = 0;
  v17 = a2 - v14;
  v18 = v16 + a2 + 418;
  a14 = a2
      + 31090337
      * (((&a13 | 0xC5458E17) - &a13 + (&a13 & 0x3ABA71E8)) ^ 0x2C4EE5E)
      - 461475235;
  v19 = sub_2478B6A70(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v15 + 8 * ((770 * (a13 == v17 + 1474860105)) ^ v18)) - 4))(v19);
}

uint64_t sub_2477CE0CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  a21 = v21
      - ((-701845969 - (&a19 | 0xD62AAE2F) + (&a19 | 0x29D551D0)) ^ 0xEE543199) * v22
      + 260;
  a19 = &STACK[0x363276B12DAEA484];
  sub_24786328C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 + 8 * (int)(((((v21 + 18) ^ (a20 == 1474860486)) & 1) * ((v21 - 387538059) ^ 0xE8E6A42A)) ^ v21)) - 4))(v24, v25, v26, v27, v28, v29, v30, v31, a9, a10, a11, a12);
}

uint64_t sub_2477CE180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, uint64_t a20,int a21,uint64_t a22,unsigned int a23)
{
  int v23;
  uint64_t v24;
  int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  uint64_t v29;

  v28 = ((((2 * (&a19 ^ 0xD0CCC82F)) | 0x7B0069D0) - (&a19 ^ 0xD0CCC82F) + 1115671320) ^ 0xAACD9C8E)
      * v23;
  a20 = a13;
  a21 = v28 + v27 + 1048;
  a23 = (v25 ^ 0xD9FAFF4D) - v28 + v27 - 17 + ((((v27 - 395) | 0xA1) ^ 0xB3F5FF3E) & (2 * v25)) + 1875877250;
  a22 = a15;
  v29 = ((uint64_t (*)(int *))(*(_QWORD *)(v24 + 8 * (v27 ^ 0x233)) - 8))(&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * ((1322 * (a19 == 1474860486)) ^ v27)) - 12))(v29);
}

uint64_t sub_2477CE278(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,unsigned int a22,int a23,unsigned int a24)
{
  int v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;

  v26 = 1314530549 * ((-278247544 - (&a19 | 0xEF6A4788) + (&a19 | 0x1095B877)) ^ 0xA19C3EB9);
  a19 = &STACK[0x2D3CC89B47FE841E];
  a21 = a15;
  a22 = 1456455419 - v26;
  a24 = v26 ^ 0x8BF1C9B0;
  a20 = (v24 + 1106913322) ^ v26;
  v27 = sub_2478B0F68((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25
                                                      + 8
                                                      * (((a23 != 1474860486) * (((v24 + 1251802496) ^ 0x4A9CFE5B) - 180)) ^ v24))
                                          - ((v24 + 1251802496) & 0xB56307DF ^ 0x7D2)))(v27);
}

uint64_t sub_2477CE370(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, _BYTE *a16, int a17, char a18, __int16 a19, char a20,__int16 a21,char a22,char *a23,_BYTE *a24,char *a25,uint64_t a26,unint64_t *a27)
{
  int v27;
  int v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char **);
  uint64_t v32;

  HIDWORD(a23) = (v28 - 873) ^ ((&a23 ^ 0xB10986CE) * v27);
  a24 = a16;
  a25 = &a20;
  v31 = *(void (**)(char **))(v30 + 8 * (v28 ^ 0x725));
  v31(&a23);
  a23 = &a18;
  LODWORD(a24) = (v28 - 1134) ^ (1401278017
                               * ((((2 * &a23) | 0x36644FB2) - &a23 + 1691211815) ^ 0x9F11513E));
  a25 = a16;
  a27 = &STACK[0x7A31AFAC6192CB01];
  (*(void (**)(char **))(v30 + 8 * (v28 - 1891)))(&a23);
  a24 = a16;
  a25 = &a22;
  HIDWORD(a23) = (v28 - 873) ^ ((((&a23 | 0xD3FBCEE3)
                                - &a23
                                + (&a23 & 0x2C043118)) ^ 0x62F2482D)
                              * v27);
  v31(&a23);
  LODWORD(a25) = v28
               - 476588053 * (((&a23 | 0xAD249785) - (&a23 & 0xAD249785)) ^ 0x10D993C6)
               - 1729;
  a24 = a16;
  v32 = sub_2477C6040((uint64_t)&a23);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v29
                                                      + 8
                                                      * ((3902 * ((_DWORD)a23 == ((v28 - 1359) ^ 0x57E89749))) ^ v28))
                                          - 4))(v32);
}

uint64_t sub_2477CE50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;

  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((5816 * (a19 == 0)) ^ v19)) - 4))();
}

uint64_t sub_2477CE56C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, _DWORD *a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18, int a19)
{
  int v19;
  uint64_t v20;
  unsigned __int8 v21;
  BOOL v22;
  char v24;

  *a10 = a19;
  if (a11)
    v22 = a18 == 0;
  else
    v22 = 1;
  v24 = v22 || a12 == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * ((62 * ((v21 ^ v24) & 1)) ^ v19)) - 4))();
}

uint64_t sub_2477CE5B8(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  _BOOL4 v4;

  v4 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v1 ^ 0x7C2)))(a1, 3847717952) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2848 * v4) ^ v1)) - (((v1 - 1367) | 8u) ^ 0x28BLL)))();
}

uint64_t sub_2477CE608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, uint64_t a15, uint64_t a16, int a17, int a18)
{
  int v18;
  uint64_t v19;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(v19 + 8 * ((v18 - 329) | (32 * ((((a18 - ((2 * a18) & 0x571BB2DC) - 1416767122) << (v18 + 35)) & 0xDDABFAE4 ^ 0x550BB2C4) + ((a18 - ((2 * a18) & 0x571BB2DC) - 1416767122) ^ 0x4558241C) + v18 + 531294930 == 243331106)))))(a1, a2, a3, a4, a5, a6, a7, a13);
}

uint64_t sub_2477CE6AC(uint64_t a1)
{
  int v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  _QWORD *v6;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *v6 = a1;
  *v7 = v2;
  v4 = v1 ^ 0x67B;
  v11 = v9;
  v12 = (v1 ^ 0x551)
      + 366490169
      * (((&v10 | 0x949EDA96) - &v10 + (&v10 & 0x6B612568)) ^ 0x82308CD2)
      + 941;
  v3(&v10);
  v11 = v8;
  v12 = v4
      + 366490169 * ((87514685 - (&v10 | 0x5375E3D) + (&v10 | 0xFAC8A1C2)) ^ 0xEC66F786)
      + 1175;
  v3(&v10);
  return 0;
}

void sub_2477CEAC0(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_2477CEB04(uint64_t a1)
{
  uint64_t v1;
  int v3;
  unsigned int v4;

  v3 = (*(uint64_t (**)(void))(v1 + 2056))();
  if (v3 == 16)
    v4 = -42029;
  else
    v4 = -42030;
  (*(void (**)(uint64_t))(v1 + 1592))(a1);
  if (v3)
    return v4;
  else
    return 0;
}

void LxkN2VWE1TGfu(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  __asm { BR              X8 }
}

uint64_t sub_2477CEBDC()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((v1 + 2038728685) ^ (2523 * (v0 != 0)))) - 12))();
}

uint64_t sub_2477CEC0C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22,unsigned int a23)
{
  int v23;
  int v24;
  uint64_t v25;
  uint64_t v26;

  a23 = v24 + 31090337 * (&a22 ^ 0xC7816049) + 1189713879;
  v26 = sub_2478B6A70(&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((19 * (a22 != 1474860486)) ^ (v24 + v23))) - 12))(v26);
}

uint64_t sub_2477CECAC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,int a23,unsigned int a24)
{
  uint64_t v24;
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  a24 = 641 - ((&a22 & 0xAAECC061 | ~(&a22 | 0xAAECC061)) ^ 0x92925FD7) * v25;
  a22 = &STACK[0x363276B12DAEA4A4];
  sub_24786328C((uint64_t)&a22);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v24 - ((v26 - 217) ^ 0x1E7u) + *(_QWORD *)(v27 + 8 * ((2156 * (a23 == 1474860486)) ^ 0x4F8u))))(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14, a15);
}

uint64_t sub_2477CED48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,unsigned int a23,uint64_t a24,unsigned int a25)
{
  int v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  HIDWORD(a9) = v26;
  v30 = 366490169 * ((&a23 & 0x75B28943 | ~(&a23 | 0x75B28943)) ^ 0x9CE320F8);
  a24 = a20;
  a23 = HIDWORD(a13) - ((2 * HIDWORD(a13)) & 0xE3222F46) + 1905334179 + v30;
  a25 = v25 + 1546 + v30;
  sub_247881AB4((uint64_t)&a23);
  v31 = 366490169 * ((&a23 & 0x502B296F | ~(&a23 | 0x502B296F)) ^ 0xB97A80D4);
  a23 = a14 + (v25 ^ 0x3D) + 1905334179 + v31 - ((((v25 + 2109980152) & 0x823C4F7A) - 484302868) & (2 * a14)) - 474;
  a24 = a20;
  a25 = v25 + 1546 + v31;
  sub_247881AB4((uint64_t)&a23);
  v32 = 366490169 * (((&a23 | 0x61222636) - (&a23 & 0x61222636)) ^ 0x778C7072);
  a24 = a20;
  a23 = a17 - ((2 * a17) & 0xE3222F46) + 1905334179 + v32;
  a25 = v25 + 1546 + v32;
  sub_247881AB4((uint64_t)&a23);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t))(*(_QWORD *)(v28 + 8 * (v25 ^ (2932 * (a17 != 0)))) - 12))(v33, v34, v35, v36, v37, v38, v39, v40, a9, v29, v27, a12, a13, (char *)off_2518F0F80[v25 - 223] - 4, a15);
}

uint64_t sub_2477CEF00(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, unsigned int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,char a23,uint64_t a24,unsigned int a25,uint64_t a26,int a27)
{
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  int v31;
  int v32;
  uint64_t v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  void (*v37)(char *);
  uint64_t v38;
  unsigned int v39;
  uint64_t v40;

  v33 = v27 + 32 * (v28 - 40);
  v34 = *(_DWORD *)v33 ^ 0xDFCA9FFF;
  v35 = (2 * *(_DWORD *)v33) & 0xBF953FFE;
  v36 = (((&a23 | 0x8836BD83) - &a23 + (&a23 & 0x77C94278)) ^ 0x4FB7DDCA)
      * v31;
  a24 = *(_QWORD *)(v33 + 8);
  a25 = v32 - 2227 + v36;
  a26 = a20;
  a27 = v32 - 3456 - v36 + v34 + v35 + 1778384244;
  v37 = (void (*)(char *))(*(_QWORD *)(v29 + 8 * (v32 ^ 0xFE6)) - 8);
  v37(&a23);
  v38 = *(_QWORD *)(v33 + 24);
  v39 = ((-1071363843 - (&a23 | 0xC02448FD) + (&a23 | 0x3FDBB702)) ^ 0xF85AD74B) * v31;
  a27 = (*(_DWORD *)(v33 + 16) ^ 0xFFEEFF5D) - v39 + ((2 * *(_DWORD *)(v33 + 16)) & 0xFFDDFEBA) + 1239130096;
  a25 = v32 - 2227 + v39;
  a24 = v38;
  a26 = a20;
  v40 = ((uint64_t (*)(char *))v37)(&a23);
  return (*(uint64_t (**)(uint64_t))(v30 + 8 * ((210 * (a17 <= (v28 - 39))) ^ v32)))(v40);
}

uint64_t sub_2477CF074(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,int a22)
{
  int v22;
  uint64_t v23;

  return ((uint64_t (*)(void))(*(_QWORD *)(v23 + 8 * ((61 * (a22 == v22 + 1474860012)) ^ v22)) - 12))();
}

uint64_t sub_2477CF0AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,unint64_t *a22,int a23,uint64_t a24,int a25,int a26,unsigned int a27)
{
  int v27;
  uint64_t v28;
  int v29;
  uint64_t v30;

  v29 = 1314530549 * ((&a22 + 571040682 - 2 * ((unint64_t)&a22 & 0x220963AA)) ^ 0x9300E564);
  a24 = a19;
  a22 = &STACK[0x2D3CC89B47FE843E];
  a23 = (v27 + 1106913486) ^ v29;
  a27 = v29 ^ 0xEB136265;
  a25 = 807014277 - v29;
  v30 = sub_2478B0F68((uint64_t)&a22);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v28 + 8 * (((a26 == 1474860486) * (v27 + 704)) ^ v27))
                                          - (v27 ^ 0x522u)
                                          + 1260))(v30);
}

uint64_t sub_2477CF17C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, char a17, int a18, char a19, __int16 a20,char a21,uint64_t a22,char *a23,uint64_t a24,char *a25,char *a26,char *a27,uint64_t a28,unint64_t *a29)
{
  int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  int v33;
  uint64_t v34;

  v33 = v29 + 44;
  LODWORD(a26) = (v33 + 362) ^ (1401278017
                              * ((2 * (&a25 & 0x73387430) - &a25 + 214404044) ^ 0x8E4FD2B));
  a29 = &STACK[0x7A31AFAC6192CB39];
  a27 = a23;
  a25 = &a21;
  (*(void (**)(char **))(v31 + 8 * (v33 - 395)))(&a25);
  LODWORD(a26) = v33
               + 673918253
               * ((-729414076 - (&a25 | 0xD4860644) + (&a25 | 0x2B79F9BB)) ^ 0xB131E213)
               + 1652;
  a25 = &a17;
  a27 = a23;
  ((void (*)(char **))(*(_QWORD *)(v31 + 8 * (v33 ^ 0x2A8)) - 12))(&a25);
  HIDWORD(a25) = (v33 + 623) ^ (((-2057104925 - (&a25 | 0x856311E3) + (&a25 | 0x7A9CEE1C)) ^ 0xCB9568D2)
                              * v30);
  a26 = a23;
  a27 = &a19;
  (*(void (**)(char **))(v31 + 8 * (v33 ^ 0x2FD)))(&a25);
  a26 = a23;
  LODWORD(a27) = v33
               - 476588053
               * (((&a25 | 0x3E42D164) - &a25 + (&a25 & 0xC1BD2E98)) ^ 0x83BFD527)
               - 233;
  v34 = sub_2477C6040((uint64_t)&a25);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v32 + 8 * ((1295 * ((_DWORD)a25 == 1474860486)) ^ v33))
                                          - (v33 - 44)
                                          + 470))(v34);
}

uint64_t sub_2477CF360(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18)
{
  int v18;
  uint64_t v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(v19 + 8 * ((3756 * (a18 == 0)) ^ v18)) - 4))();
}

uint64_t sub_2477CF3B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, _QWORD *a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  unsigned int v19;
  uint64_t v20;
  BOOL v21;
  int v23;

  *a12 = a17;
  if (a10)
    v21 = a19 == 0;
  else
    v21 = 1;
  v23 = !v21 && a11 != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v20 + 8 * (int)((1497 * v23) | v19)) - (v19 ^ 0x202)))();
}

uint64_t sub_2477CF408(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * (v1 - 490)))(a1, 1405099605) != 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((v5 * (v1 + 1998)) ^ v1)) - (v2 ^ 0x1DE)))();
}

uint64_t sub_2477CF450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, int a18, int a19)
{
  int v19;
  uint64_t v20;

  return (*(uint64_t (**)(void))(v20
                              + 8
                              * ((508
                                * (((((v19 + 3578) | 0xB0) - 575935948) & (2
                                                                         * (a19 - ((2 * a19) & 0x571BB2DC) - 1416767122)) ^ 0x550BB2C4)
                                 + ((a19 - ((2 * a19) & 0x571BB2DC) - 1416767122) ^ 0x4558241C)
                                 + 531296944 == 243331106)) ^ (v19 + 1766))))();
}

uint64_t sub_2477CF4DC(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  _QWORD *v5;
  _DWORD *v6;
  void (*v7)(uint64_t *);
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *v5 = a1;
  *v6 = v1;
  v3 = 24 * ((v2 - 3798) ^ 0x1EF);
  v12 = v2
      - 3798
      + 366490169 * ((2 * (&v10 & 0x4B19C698) - &v10 + 887503202) ^ 0x22486F26)
      + 1122;
  v11 = v9;
  v7(&v10);
  v11 = v8;
  v12 = v3 + 366490169 * ((&v10 & 0x27A0DEC | ~(&v10 | 0x27A0DEC)) ^ 0xEB2BA457) + 324;
  v7(&v10);
  return 0;
}

void sub_2477CF8C8(_DWORD *a1)
{
  unsigned int v1;

  v1 = *a1 ^ (31090337 * ((-2 - ((a1 | 0xA6D0CF48) + (~(_DWORD)a1 | 0x592F30B7))) ^ 0x9EAE50FE));
  __asm { BR              X10 }
}

uint64_t sub_2477CF9A0@<X0>(uint64_t a1@<X8>, int a2, char a3, uint64_t a4, char a5, uint64_t a6, char *a7, int a8, unsigned int a9, unint64_t *a10)
{
  int v10;
  uint64_t v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;

  v13 = v10 ^ 0x99C;
  v14 = 673918253 * ((&a5 & 0xB03815E4 | ~(&a5 | 0xB03815E4)) ^ 0xD58FF1B3);
  a10 = &STACK[0x1E485B7C7E87F03B];
  a8 = v14 + (v10 ^ 0x99C) + 386;
  a9 = v14 + 1221366787;
  a6 = v12;
  a7 = &a3;
  v15 = (*(uint64_t (**)(char *))(a1 + 8 * (v10 ^ 0xA74)))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11
                                                      + 8
                                                      * (((*(_DWORD *)(v12 - 0x3408C9F6C2C26174) == 1474860486)
                                                        * (((v13 + 411) | 0xA) ^ 0x5F4)) ^ v13))
                                          - 12))(v15);
}

uint64_t sub_2477CFA80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
  uint64_t v10;
  int v11;

  return (*(uint64_t (**)(void))(v10 + 8 * ((30 * (((a10 > 0x14) ^ (v11 + 1)) & 1)) ^ v11)))();
}

uint64_t sub_2477CFAAC()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  int v3;
  unsigned int v4;

  *v1 = v0;
  v4 = v0 - ((2 * v0) & 0x3B4DA818) + ((v3 + 3306) ^ 0xDDA6C04A) + ((v3 - 582) | 0x8A);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((((2 * v4) & 0xC986C7DC ^ 0x89048018) + (v4 ^ 0x3965B7E2) + 528473790 == 71516844) ^ (v3 + 3306))))();
}

uint64_t sub_2477CFB38(int a1)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8
                                             * (((*(_QWORD *)(v1 + 32) == 0x2599D21DE02EEC48) * (a1 - 675)) ^ a1))
                            - (a1 + 23)
                            + 729))();
}

void sub_2477CFB74(_DWORD *a1@<X8>)
{
  int v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  if (v1 == ((v3 - 152954600) & 0x91DEF7B ^ 0xB79))
    v6 = 0;
  else
    v6 = v5;
  *(_QWORD *)(v2 - 0x2599D21DE02EEC48) = v6;
  *(_DWORD *)(v4 + 16) = *a1;
}

uint64_t sub_2477CFEE8(uint64_t a1)
{
  int v1;
  int v2;
  BOOL v3;
  int v4;
  int v5;

  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 8) - 0x1960A8AE33B1FEE7);
  v4 = v2 - 454684228;
  v3 = v2 - 454684228 < 0;
  v5 = 454684228 - v2;
  if (!v3)
    v5 = v4;
  v1 = (*(_DWORD *)a1 - 1697562443 * ((a1 & 0xEAB71AA9 | ~(a1 | 0xEAB71AA9)) ^ 0xC2D8DDD2) + 687) | 0x23;
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)off_2518F0F80[v1 - 2025]
                                        + 8
                                        * ((19
                                          * (((v1 + 46) ^ ((v5 ^ 0x7FF7BEFB)
                                                                          + (v1 ^ 0xFDCFD5A3)
                                                                          + ((2 * v5) & 0xFFEF7DF6)
                                                                          - 2110233724 < 0x7FFFFFFF)) & 1)) ^ v1)
                                        - 4)
                            - (v1 ^ 0xD72u)
                            + 1349))();
}

uint64_t sub_2477D0024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  unsigned int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5
                                                                                 + 8
                                                                                 * (int)(((*(_DWORD *)(*v3 + 4 * v4 + v6) != (_DWORD)a3 + v7)
                                                                                        * (_DWORD)a2) ^ a3))
                                                                     - 12))(a1, a2, a3, 2043809762);
}

void sub_2477D0058()
{
  JUMPOUT(0x2477CFFE4);
}

uint64_t sub_2477D0064(uint64_t result, uint64_t a2, uint64_t a3, int a4)
{
  *(_DWORD *)(result + 16) = a4;
  return result;
}

void sub_2477D006C(uint64_t a1)
{
  int v1;
  unsigned int v2;
  unsigned int v3;
  _BOOL4 v4;
  _BOOL4 v5;

  v1 = 142545853 * (((a1 | 0x74D1333A) - a1 + (a1 & 0x8B2ECCC5)) ^ 0x5E2E9C55);
  v2 = *(_DWORD *)(*(_QWORD *)(a1 + 48) - 0x12192C60C5FDC668) + 774538921;
  v3 = *(_DWORD *)(a1 + 44) + v1 + 833766908;
  v4 = v2 < 0x689E5BE1;
  v5 = v2 > v3;
  if (v3 < 0x689E5BE1 != v4)
    v5 = v4;
  __asm { BR              X9 }
}

uint64_t sub_2477D0150(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  int v4;

  v4 = *(unsigned __int8 *)(*(_QWORD *)(a1 + 8) + (v2 - 980669753));
  return (*(uint64_t (**)(void))(v1
                              + 8
                              * (((((v4 - ((v4 << (v3 - 1)) & 0x10A) + 165436293) & 0x1F) != 26) * ((v3 + 1107) ^ 0xC17)) ^ v3)))();
}

uint64_t sub_2477D01B0()
{
  int v0;
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;
  _BOOL4 v7;

  v4 = ((v3 + 213057408) & 0xF34CF87F ^ 0x7122F2B9) + v2;
  v5 = v4 < 0xAB96D023;
  v6 = v4 > v0 + 1957345854;
  if (v0 + 1957345854 < (((v3 - 3409) | 0x8E3) ^ 0xAB96DBC4) != v5)
    v7 = v5;
  else
    v7 = v6;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((233 * v7) ^ v3)) - 4))();
}

uint64_t sub_2477D0244(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;

  v6 = *(unsigned __int8 *)(v1 + (v3 + v4 + 2458));
  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 8 * (int)(((2 * (v6 >> 7)) | (32 * (v6 >> 7))) ^ v5)))(a1, ((v6 << ((v5 ^ 0x48) - 54 + 13 * (v5 ^ 0x48) - 95)) & 0x1D8) + (v6 ^ 0xFFF7DFEC) + 1279097652);
}

uint64_t sub_2477D02BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  uint64_t v6;
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((7
                                          * (((((v7 + ((a6 - 375) | 0xC00) - 3054) & 0x7F ^ 0xEEB9BC3B)
                                             + ((2 * (v7 + ((a6 - 375) | 0xC00) - 3054)) & 0x76)) & 0xEEB9BCFC) != (((a6 + 2571) | 0x63) ^ 0xEEB9B7DB))) ^ a6))
                            - 8))();
}

uint64_t sub_2477D032C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  _BOOL4 v11;
  BOOL v12;

  v9 = v7 + a5 + 1972681644;
  v10 = (((v8 - 1025) | 0x54) ^ 0x67D63F6C) + v5;
  v11 = v9 < 0x9EC24D1E;
  v12 = v9 > v10;
  if (v11 != v10 < 0x9EC24D1E)
    v12 = v11;
  return (*(uint64_t (**)(void))(v6 + 8 * ((7411 * (((v8 - 1) ^ v12) & 1)) ^ v8)))();
}

uint64_t sub_2477D03A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6)
{
  uint64_t v6;
  uint64_t v7;
  int v8;
  unsigned int v9;
  int v10;

  v10 = *(unsigned __int8 *)(v6 + (a6 ^ 0x3B2 ^ v9) + v8);
  return (*(uint64_t (**)(uint64_t, _QWORD))(v7 + 8 * (a6 ^ (6489 * (a5 != -289817540)))))(a1, (v10 ^ 0xEE3F7F68) + 1576393656 + ((2 * v10) & 0xD0));
}

uint64_t sub_2477D0410(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, int a7)
{
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int v12;

  v12 = (*(unsigned __int8 *)(v7 + (v9 - 36241310)) | (a2 << 8)) - 895164416;
  return ((uint64_t (*)(uint64_t, _QWORD, _QWORD))(*(_QWORD *)(v8
                                                                      + 8
                                                                      * (int)((105 * (v10 + v11 != -289817539)) ^ (a7 + 1798123479) & 0x94D2CFFF))
                                                          - 8))(a1, (v12 ^ 0x7FB55FFA) - 864027866 + ((2 * v12) & 0xFF6ABFF4), (((a7 + 1798123479) & 0x94D2CFFF) - 546) | 0x365);
}

void sub_2477D04AC()
{
  JUMPOUT(0x2477D0470);
}

uint64_t sub_2477D04BC(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;
  _BOOL4 v11;

  v8 = a2 + v5 + v6 + v7 - 654610900 - 552561732;
  v9 = v3 + a3 - 2665 - 159197417;
  v10 = (v9 < 0x2D6EEE7A) ^ (v8 < 0x2D6EEE7A);
  v11 = v8 > v9;
  if (v10)
    v11 = v8 < 0x2D6EEE7A;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((863 * !v11) ^ (a3 - 2665))) - 8))();
}

uint64_t *sub_2477D0544@<X0>(uint64_t *result@<X0>, int a2@<W1>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v9 = result[3];
  v8 = result[4];
  v10 = *result;
  *a3 = ((11 * (v6 ^ 0x6B)) ^ 0xEC15719C) + v5;
  *(_DWORD *)(v10 - 0x2D2AF3C05F337581) = v4;
  *(_DWORD *)(v9 - 0x10F085931F9C5400) = a2;
  *(_QWORD *)(v8 - 0xD60CA2220B4C2B5) = v3 + (v7 - 36241310);
  *((_DWORD *)result + 4) = 1474860486;
  return result;
}

void sub_2477D05D4(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 8) ^ (673918253 * (((a1 | 0xD0223462) - (a1 & 0xD0223462)) ^ 0x4A6A2FCA));
  __asm { BR              X14 }
}

uint64_t sub_2477D06CC(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  int v4;
  uint64_t v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v10;

  v7 = v4 + 776;
  v8 = (a3 - 1892481986);
  v10 = v3 + 1947801082 > 811 * ((v4 + 776) ^ 0xC8A) + 254999228 || v3 + 1947801082 < (int)v8;
  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5 + 8 * ((v10 | (16 * v10)) ^ v7)) - 12))(0x21BF8F38F1E221BFLL, (v6 - 51504228), v8);
}

uint64_t sub_2477D07FC@<X0>(uint64_t a1@<X0>, int a2@<W1>, _QWORD *a3@<X4>, unsigned int a4@<W5>, int a5@<W6>, int a6@<W7>, uint64_t a7@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  uint64_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;
  int v19;
  unint64_t v20;
  _BOOL4 v22;

  v19 = (v12 - 2952) | 0x880;
  v20 = a1
      - 0x21BF8F38F1E221BFLL
      + (*(_DWORD *)(v13 + 4 * v8 + v14) ^ v9)
      + a4 * (unint64_t)(*(_DWORD *)(*a3 + 4 * (a6 + ((v19 - 853) ^ v17 ^ (v19 + v15) & v16)) + v14) ^ v9);
  *(_DWORD *)(v13 + 4 * v8 + v14) = v20 + v9 - ((2 * v20) & 0x8C5A646);
  v22 = a5 < v10 && a5 >= a2;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(v7 + 8 * (v19 ^ (v22 | (2 * v22)))) - 8))((v18 ^ HIDWORD(v20)) + (v11 & (v20 >> 31)) + a7);
}

void sub_2477D08B8()
{
  JUMPOUT(0x2477D07B0);
}

uint64_t sub_2477D08C4(uint64_t a1)
{
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 | (19 * (a1 != 0x21BF8F38F1E221BFLL))))
                            - ((v1 - 40) ^ 0xC74u)
                            + 2664))();
}

uint64_t sub_2477D090C@<X0>(uint64_t a1@<X0>, int a2@<W8>)
{
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  _BOOL4 v8;

  v5 = a2 - 786;
  v6 = v4 + a2 - 786 - 1162713644;
  v8 = v2 - 1617395986 > 984771889 || v2 - 1617395986 < v6;
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8 * ((2720 * v8) ^ v5)))(a1, 984771889);
}

uint64_t sub_2477D09E0(uint64_t a1, uint64_t a2, uint64_t a3, int a4, uint64_t a5, int a6, int a7, int a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  int v19;

  v18 = *(_DWORD *)(v8 + 4 * v10 + a5);
  v19 = 5 * (v14 ^ a4);
  *(_DWORD *)(v8 + 4 * v10 + a5) = a1
                                 + 236838465
                                 + (v18 ^ v11)
                                 + v11
                                 - (((5 * ((v19 + a6) & a7 ^ a8)) ^ 0x8C5A042) & (2 * (a1 + 236838465 + (v18 ^ v11))));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((v12 ^ ((a1 - 0x21BF8F38F1E221BFLL + (unint64_t)(v18 ^ v11)) >> 32))
                                           + (v13 & ((a1 - 0x21BF8F38F1E221BFLL + (unint64_t)(v18 ^ v11)) >> 31))
                                           + v15 != v17)
                                          * v16) ^ v19))
                            - 8))();
}

uint64_t sub_2477D0A7C()
{
  int v0;
  uint64_t v1;
  int v2;
  _DWORD *v3;
  int v4;
  int v5;
  _BOOL4 v6;

  v4 = *v3 - 159075310;
  v5 = (v0 - 159075310 < -1851874730) ^ (v4 < -1851874730);
  v6 = v0 - 159075310 > v4;
  if (v5)
    v6 = v0 - 159075310 < -1851874730;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((v6 * (v2 - 1382)) ^ v2)) - (((v2 + 1545) | 0x140u) ^ 0xD41)))();
}

void sub_2477D0AE8()
{
  int v0;
  _DWORD *v1;

  *v1 = v0;
}

void WJF2uJCSo(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  __asm { BR              X9 }
}

uint64_t sub_2477D0B7C@<X0>(_QWORD *a1@<X5>, unsigned int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((607 * (*a1 == 0)) ^ a2)) - 8))();
}

uint64_t sub_2477D0BBC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  a16 = 31090337 * ((-1211055729 - (&a15 | 0xB7D0C18F) + (&a15 | 0x482F3E70)) ^ 0x8FAE5E39)
      - 849012913;
  v18 = sub_2478B6A70(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((1990 * (a15 == 1474860486)) ^ 0x8F7u))
                                          - ((v17 + 16) ^ 0x59EAB7C3)))(v18);
}

uint64_t sub_2477D0C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  unsigned int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a15 = &STACK[0x363276B12DAEA474];
  a17 = 641 - 31090337 * ((&a15 + 1146093001 - 2 * (&a15 & 0x444FFDC9)) ^ 0x83CE9D80);
  sub_24786328C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v19 - 1508554691 + *(_QWORD *)(v18 + 8 * ((403 * (a16 == 1474860486)) ^ v17))))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477D0D10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t a13, uint64_t a14, uint64_t a15, unint64_t a16, unint64_t a17, unint64_t a18, unsigned int a19)
{
  uint64_t v19;
  unint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  unsigned int v28;
  unsigned int v29;
  uint64_t v30;

  v26 = 366490169
      * (((~(unint64_t)&a15 | 0xE1C2AD80FF07AF0ELL) + ((unint64_t)&a15 | 0x1E3D527F00F850F1)) ^ 0x34A3E76B165606B4);
  LODWORD(a17) = 316 - v26;
  a16 = v24 - ((2 * v24) & 0xE93395F3DCC03498) - v26 - 0xB663506119FE5B4;
  a18 = a13;
  v27 = v19;
  ((void (*)(uint64_t *))(*(_QWORD *)(v19 + 2176) - 12))(&a15);
  HIDWORD(a16) = (375636451 * (&a15 ^ 0x533E5A8C)) ^ 0x518;
  a15 = v23;
  a17 = a13;
  (*(void (**)(uint64_t *))(v27 + 1616))(&a15);
  v28 = 366490169 * ((&a15 & 0xAFB5051F | ~(&a15 | 0xAFB5051F)) ^ 0x46E4ACA4);
  a16 = a13;
  LODWORD(a17) = v28 + 2033;
  LODWORD(a15) = v22 + v28 - ((2 * v22) & 0xE3222F46) + 1905334179;
  sub_247881AB4((uint64_t)&a15);
  v29 = 31090337 * ((((2 * &a15) | 0x9C8C6856) - &a15 + 834259925) ^ 0x9C75462);
  a19 = (v21 ^ 0xCFFB9FDF) + ((2 * v21) & 0x9FF73FBE) - v29 + 2043608942;
  LODWORD(a17) = v29 + 1703;
  a16 = v20;
  a18 = a13;
  v30 = ((uint64_t (*)(uint64_t *))(*(_QWORD *)(v27 + 1504) - 8))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((5458 * ((_DWORD)a15 == 1474860486)) ^ 0x422u))
                                          - 4))(v30);
}

uint64_t sub_2477D0F80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549 * ((&a15 & 0x73F165B3 | ~(&a15 | 0x73F165B3)) ^ 0x3D071C82);
  a20 = v21 ^ 0x8BF1C9B0;
  a18 = -1713779301 - v21;
  a15 = &STACK[0x2D3CC89B47FE840E];
  a17 = a13;
  a16 = (a9 + 1106912923) ^ v21;
  v22 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20
                                                      + 8
                                                      * ((47
                                                        * (((a9 - 22) ^ (a19 == a9 + 1474859449)) & 1)) ^ a9))
                                          - 4))(v22);
}

uint64_t sub_2477D1060(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, char a11, __int16 a12, char a13, uint64_t a14, uint64_t a15, char *a16, char *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  int v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  a21 = &STACK[0x7A31AFAC6192CAF1];
  a19 = a16;
  LODWORD(a18) = (v21 - 1001) ^ (1401278017
                               * ((&a17 & 0x27C28747 | ~(&a17 | 0x27C28747)) ^ 0xDC1E0E5F));
  a17 = &a13;
  ((void (*)(char **))off_2518F0F80[v21 ^ 0x722])(&a17);
  HIDWORD(a17) = (v21 - 740) ^ (((2 * (&a17 & 0x5647F018) - &a17 - 1447555104) ^ 0x18B1892E)
                              * v22);
  a18 = a16;
  a19 = &a11;
  ((void (*)(char **))off_2518F0F80[v21 - 1630])(&a17);
  a18 = a16;
  LODWORD(a19) = v21
               - 476588053
               * ((((&a17 | 0x9AA0B124) ^ 0xFFFFFFFE) - (~&a17 | 0x655F4EDB)) ^ 0xD8A24A98)
               - 1596;
  v24 = sub_2477C6040((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t))(v23 + 8 * ((((_DWORD)a17 == 1474860486) * ((v21 ^ 0x37B) - 1012)) ^ v21)))(v24);
}

uint64_t sub_2477D11C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11)
{
  int v11;
  uint64_t v12;

  return (*(uint64_t (**)(void))(v12 + 8 * ((2632 * (a11 == ((v11 + 1679) ^ v11 ^ 0xAB1))) ^ v11)))();
}

uint64_t sub_2477D1220(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, int a12)
{
  int v12;
  uint64_t v13;

  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((1012 * (a12 == (v12 ^ 0xDE8))) ^ v12))
                            - ((v12 + 714209651) & 0xD56DFFFD ^ 0x75DLL)))();
}

uint64_t sub_2477D126C@<X0>(int a1@<W8>)
{
  int v1;
  _QWORD *v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v5 = ((v1 ^ a1) - 1228243354) & 0x49357E62;
  *v7 = 0;
  *v2 = 0;
  v11 = v9;
  v12 = v5 + ((((2 * &v10) | 0xC9A7DC1A) - &v10 + 455873011) ^ 0xF27DB849) * v4 + 538;
  v3(&v10);
  v12 = (v5 ^ 0xCD5) + (((&v10 | 0xF06CB23C) - (&v10 & 0xF06CB23C)) ^ 0xE6C2E478) * v4 - 699;
  v11 = v8;
  v3(&v10);
  return 0;
}

void PjPfaWZz()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * (v0 ^ 0xC7816049) - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477D1844(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a13 = &STACK[0x363276B12DAEA464];
  a15 = 641
      - ((((&a13 | 0x69F3772A) ^ 0xFFFFFFFE) - (~&a13 | 0x960C88D5)) ^ 0x518DE89C) * v15;
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((56 * (a14 == v16)) ^ v18))
                                                                                       - 12))(v19, v20, v21, v22, v23, v24);
}

uint64_t sub_2477D18C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, unsigned int a15, int a16)
{
  int v16;
  int v17;
  uint64_t v18;
  unsigned int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  v19 = 366490169 * (((&a13 | 0x5511336) - (&a13 & 0x5511336)) ^ 0x13FF4572);
  a15 = v19 + 2033;
  a14 = a11;
  a13 = v16 - ((2 * v16) & 0xE3222F46) + 1905334179 + v19;
  sub_247881AB4((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((47 * (a16 != v17)) ^ 0x795u))
                                                                                       - 12))(v20, v21, v22, v23, v24, v25);
}

uint64_t sub_2477D1990(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  int v18;
  uint64_t v19;
  unsigned int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549 * (((&a13 | 0x8220DE88) - (&a13 & 0x8220DE88)) ^ 0x33295846);
  a13 = &STACK[0x2D3CC89B47FE83EE];
  a14 = (v20 + 1106911982) ^ v21;
  a15 = a11;
  a16 = 1574132427 - v21;
  a18 = v21 ^ 0x8BF1C9B0;
  v22 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((2200 * (a17 == v18 + (v20 ^ 0xBE9) - 1586 - 1569)) ^ v20))
                                          - 12))(v22);
}

uint64_t sub_2477D1A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  a15 = (v20 - 428) ^ ((((&a14 | 0x9B931398) - &a14 + (&a14 & 0x646CEC60)) ^ 0x2A9A9556)
                     * v21);
  a16 = a10;
  a17 = &a13;
  (*(void (**)(int *))(v19 + 8 * (v20 - 1318)))(&a14);
  LODWORD(a17) = v20
               - 476588053 * ((&a14 & 0xE5A983C2 | ~(&a14 | 0xE5A983C2)) ^ 0xA7AB787E)
               - 1284;
  a16 = a10;
  v22 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * (v20 | (4 * (a14 == v17))))
                                          - 86 * (v20 ^ 0x636u)
                                          + 1966))(v22);
}

uint64_t sub_2477D1B38()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v9 = v2
     + 409
     + (((&v7 | 0xE4D6350F) - &v7 + (&v7 & 0x1B29CAF0)) ^ 0xF278634B) * v1
     - 382;
  v8 = v4;
  v0(&v7);
  v9 = v2 + 1586 + (&v7 ^ 0x16AE5644) * v1 - 1559;
  v8 = v5;
  v0(&v7);
  return (v6 ^ 0x77E8FDFE) + ((2 * v6) & 0xEFD1FBFC) + ((v2 + 409) ^ 0xDFFF9072) - 1474860486;
}

void WGrQCCz7(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  BOOL v6;
  int v9;

  if (a2)
    v6 = a4 == 0;
  else
    v6 = 1;
  v9 = !v6 && a5 != 0 && a6 != 0;
  __asm { BR              X9 }
}

uint64_t sub_2477D1CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, _QWORD *a5, _DWORD *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, int a19, unsigned int a20)
{
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v24;

  *a5 = 0;
  *a6 = 0;
  a20 = 31090337
      * ((1856675915 - (&a19 ^ 0xFBF1FA66 | 0x6EAAA04B) + (&a19 ^ 0xFBF1FA66 | 0x91555FB4)) ^ 0xAD25C59B)
      - 849012913;
  v24 = v20;
  v22 = sub_2478B6A70(&a19);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((1303 * (a19 == 1474860486)) ^ v21)) - 8))(v22);
}

uint64_t sub_2477D1D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,unsigned int a21)
{
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  a19 = &STACK[0x363276B12DAEA494];
  a21 = 641 - 31090337 * ((2 * (&a19 & 0x192E9C38) - &a19 + 1724998595) ^ 0xA150038A);
  sub_24786328C((uint64_t)&a19);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a13 + 8 * ((15 * (a20 == 1474860486)) | 0x360u)) - 8))(v21, v22, v23, v24, v25, v26, v27, v28, a9, a10, a11, a12);
}

uint64_t sub_2477D1E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t a17, uint64_t a18, uint64_t a19, unint64_t a20,unint64_t a21,unint64_t a22)
{
  uint64_t v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  int v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  LODWORD(a21) = 316 - 366490169 * ((2 * (v26 & 0xB067D2D8) - v26 + 1335373089) ^ 0x59367B65);
  a22 = a17;
  a20 = v25
      - ((2 * v25) & 0xE93395F3DCC03498)
      - 366490169 * ((2 * (v26 & 0x291D3C8B067D2D8) - v26 - 0x291D3C8B067D2DFLL) ^ 0xD7F0992359367B65)
      - 0xB663506119FE5B4;
  ((void (*)(uint64_t *))(*(_QWORD *)(v22 + 2176) - 12))(&a19);
  a21 = a17;
  HIDWORD(a20) = (375636451 * (((v26 | 0xEE3E068D) + (~(_DWORD)v26 | 0x11C1F972)) ^ 0xBD005C00)) ^ 0x518;
  a19 = v24;
  (*(void (**)(uint64_t *))(v22 + 1616))(&a19);
  v27 = 366490169 * ((-600892624 - (v26 | 0xDC2F1B30) + (v26 | 0x23D0E4CF)) ^ 0x357EB28B);
  a20 = a17;
  LODWORD(a21) = v27 + 2033;
  LODWORD(a19) = v23 - ((2 * v23) & 0xE3222F46) + 1905334179 + v27;
  sub_247881AB4((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a13 + 8 * ((6528 * (HIDWORD(a21) == 1474860486)) ^ 0x919u)))(v28, v29, v30, v31, v32, v33, v34, v35, a9, a10, a11, a12, a13, a14);
}

uint64_t sub_2477D2014(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unint64_t *a19, int a20,uint64_t a21,int a22,int a23,unsigned int a24)
{
  int v24;
  int v25;
  uint64_t v26;

  v25 = 1314530549 * ((&a19 + 1106563762 - 2 * ((unint64_t)&a19 & 0x41F4D2B2)) ^ 0xF0FD547C);
  a20 = (v24 + 1106911679) ^ v25;
  a21 = a17;
  a19 = &STACK[0x2D3CC89B47FE840E];
  a24 = v25 ^ 0x8BF1C9B0;
  a22 = 1552834361 - v25;
  v26 = sub_2478B0F68((uint64_t)&a19);
  return (*(uint64_t (**)(uint64_t))(a13
                                            + 8
                                            * ((496 * (a23 != ((5 * (v24 ^ 0x874)) ^ 0x57E895B7 ^ (18 * (v24 ^ 0x8D9))))) ^ v24)))(v26);
}

uint64_t sub_2477D2100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, _BYTE *a14, int a15, char a16, __int16 a17, char a18, __int16 a19, char a20,uint64_t a21,uint64_t a22,char *a23,_BYTE *a24,char *a25,uint64_t a26,unint64_t *a27)
{
  uint64_t v27;
  int v28;
  int v29;
  void (*v30)(char **);
  uint64_t v31;

  a24 = a14;
  a25 = &a18;
  HIDWORD(a23) = (v29 + 356) ^ (((((2 * &a23) | 0xC4CFCD68) - &a23 + 496507212) ^ 0x536E607A)
                              * v28);
  v30 = *(void (**)(char **))(v27 + 8 * (v29 ^ 0x3EA));
  v30(&a23);
  a25 = a14;
  a27 = &STACK[0x7A31AFAC6192CB21];
  LODWORD(a24) = (v29 + 95) ^ (1401278017
                             * ((1295521651 - (&a23 | 0x4D381773) + (&a23 | 0xB2C7E88C)) ^ 0xB6E49E6B));
  a23 = &a20;
  (*(void (**)(char **))(v27 + 8 * (v29 ^ 0x36A)))(&a23);
  HIDWORD(a23) = (v29 + 356) ^ ((&a23 ^ 0xB10986CE) * v28);
  a24 = a14;
  a25 = &a16;
  v30(&a23);
  a24 = a14;
  LODWORD(a25) = v29
               - 476588053
               * (((&a23 | 0x377CBE90) - &a23 + (&a23 & 0xC8834168)) ^ 0x8A81BAD3)
               - 500;
  v31 = sub_2477C6040((uint64_t)&a23);
  return (*(uint64_t (**)(uint64_t))(a13
                                            + 8
                                            * (int)((((_DWORD)a23 == 1474860486)
                                                   * (((v29 + 15190634) & 0xFF183B9D) + 271)) ^ v29)))(v31);
}

uint64_t sub_2477D22B0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;

  return (*(uint64_t (**)(void))(v16 + 8 * (((a16 == 0) * (v17 + 2790)) ^ v17)))();
}

uint64_t sub_2477D22FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, unsigned int a16, int a17)
{
  uint64_t v17;
  _QWORD *v18;
  int v19;

  *v18 = a16;
  return (*(uint64_t (**)(void))(v17 + 8 * ((1236 * (a17 != v19 - 1 + ((v19 + 1536) | 8) - 3113)) ^ v19)))();
}

uint64_t sub_2477D233C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;

  v15 = (*(uint64_t (**)(uint64_t, uint64_t))(v13 + 8 * (v14 - 756)))(a1, 1362808493);
  return (*(uint64_t (**)(void))(a13 + 8 * ((v15 == 0) ^ v14)))();
}

uint64_t sub_2477D237C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  uint64_t v17;
  int v18;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17
                                        + 8
                                        * ((70
                                          * (((2 * (a17 - ((2 * a17) & 0x571BB2DC) - 1416767122)) & 0xDDABFAE4 ^ 0x550BB2C4)
                                           + ((a17 - ((2 * a17) & 0x571BB2DC) - 1416767122) ^ 0x4558241C)
                                           + v18
                                           + 611
                                           + 531295549 == 243331106)) ^ (v18 + 537)))
                            - 4))();
}

uint64_t sub_2477D2404(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  void (*v6)(uint64_t *);
  _QWORD *v7;
  _DWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;

  *v7 = a1;
  *v8 = v1;
  v4 = (v2 + 1008) ^ 0xA79;
  v13 = v2 + 1008 + (((&v11 | 0x1A7EFF85) - (&v11 & 0x1A7EFF85)) ^ 0xCD0A9C1) * v3 - 733;
  v12 = v9;
  v6(&v11);
  v13 = v4
      + (((&v11 | 0x4A4071C2) - &v11 + (&v11 & 0xB5BF8E38)) ^ 0x5CEE2786) * v3
      + 732;
  v12 = v10;
  v6(&v11);
  return 0;
}

void sub_2477D2814(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  _BOOL4 v5;

  v1 = 1761959447 * (((a1 | 0xAF944A62) - a1 + (a1 & 0x506BB59D)) ^ 0xE338BA6);
  v2 = *(_DWORD *)(a1 + 36) - v1;
  v3 = *(_DWORD *)(a1 + 32) + v1;
  v5 = (~v3 & 0x30000000) == 0 || (v3 & 0x3F000000) == 0x10000000;
  __asm { BR              X11 }
}

uint64_t sub_2477D28EC@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t *a5, int a6, unsigned int a7, int a8, char a9, uint64_t a10, unint64_t *a11, unint64_t *a12)
{
  int v12;
  uint64_t *v13;
  uint64_t v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  v16 = *v13;
  v17 = 366490169 * (((&a5 | 0x21E382BE) - (&a5 & 0x21E382BE)) ^ 0x374DD4FA);
  a6 = v15 - v17 - 452159957;
  a7 = ((2 * v12) & 0x7A6D5FFE ^ 0x226D4CD2) + v17 + (v12 ^ 0xEC001416 ^ ((v15 - 635) | 0x900)) - 2360400;
  a5 = &STACK[0x4ADD9ACB38CF2C50];
  a10 = v16;
  a11 = &STACK[0x48C618DB0D7820F7];
  a9 = (57 * (((&a5 | 0xBE) - (&a5 & 0xBE)) ^ 0xFA)) ^ 0x45;
  a12 = &STACK[0x63182391F9727749];
  v18 = ((uint64_t (*)(unint64_t **))(*(_QWORD *)(a1 + 8 * (v15 ^ 0x6EC)) - 8))(&a5);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v14 + 8 * ((3794 * (a8 == 1474860486)) ^ v15)) - 4))(v18);
}

uint64_t sub_2477D2A24()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v2 ^ (7405 * (v1 == 0x10000000))))
                            - (v2 ^ 0xBD ^ (2 * v2) ^ 0xB44u ^ 0x1D75)))();
}

uint64_t sub_2477D2A64(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unint64_t a10)
{
  int v10;
  uint64_t v11;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 8 * (((a10 + 4 >= a10) * (v10 - 4131)) | v10)))(a1, a2, a3);
}

uint64_t sub_2477D2AD0()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v0 ^ (1976 * (v1 != 0x366A0AB0)))) - 8))();
}

uint64_t sub_2477D2B2C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  int v6;
  int v7;
  uint64_t v8;
  _BOOL4 v9;

  v9 = v4 > 0x84633EFD;
  *(_BYTE *)(a1 + (v7 - 2089554416)) = *(_BYTE *)(v1 + (v7 - 2089554416));
  if (v9 == v7 - 15683821 < (v3 + 3389))
    v9 = v7 - 15683821 < v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((v9 * v6) ^ v2)) - 8))();
}

uint64_t sub_2477D2BB4()
{
  int v0;
  int v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((((v1 ^ (v0 - 709) ^ 0x5A34FCB5)
                                           - 28674
                                           + ((2 * v1) & 0xD8BDF6F4 ^ 0x48941460) == 1818135416)
                                          * ((2 * (v0 - 709)) ^ 0x1A01)) ^ (v0 - 709)))
                            - 12))();
}

uint64_t sub_2477D2C24()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v1 + v2 - 1818164090 < (((v0 ^ 0x1FFC) + 2126301940) & 0x814337FF ^ 0x7FA))
                                          * (((v0 ^ 0x1FFC) - 574506247) & 0x223E46FF ^ 0x6FE)) ^ v0 ^ 0x1FFC))
                            - 8))();
}

uint64_t sub_2477D2CA4()
{
  int v0;
  char v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (v0 ^ (3927 * (((v2 - (v1 & 3)) & 0xFFFFFFFC) > v2 + 3))))
                            - ((v0 + 851625989) & 0xCD3D36FF ^ (v0 + 685336031) & 0xD7269EBF ^ 0xA6ALL)))();
}

uint64_t sub_2477D2D18@<X0>(int a1@<W1>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_DWORD *)(a2 - 3 + (v4 + v3)) = *(_DWORD *)(v2 - 3 + (v4 + v3));
  return (*(uint64_t (**)(void))(v6 + 8 * ((((a1 - 1741446972) & 0x67CC5BFA) - 950 == v5) | (a1 - 305))))();
}

uint64_t sub_2477D2D68(uint64_t a1, int a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_DWORD *)(a1 + (v4 - a3)) = *(_DWORD *)(v3 + (v4 - a3));
  return (*(uint64_t (**)(void))(v7 + 8 * ((a3 + v6 - 950 == v5) | a2)))();
}

uint64_t sub_2477D2D90()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (int)(((((v0 == v1) ^ (v2 - 125)) & 1)
                                               * (((v2 + 1490635589) & 0xA726B7FB) - 62)) ^ v2))
                            - 8))();
}

uint64_t sub_2477D2DD4@<X0>(int a1@<W0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(a2 + (v5 + v4)) = *(_BYTE *)(v2 + (v5 + v4));
  return ((uint64_t (*)(void))(*(_QWORD *)(v6
                                        + 8
                                        * ((3200 * (((v5 - 1 == v3) ^ (a1 - 124)) & 1)) ^ (a1 - 833)))
                            - 8))();
}

uint64_t sub_2477D2E28()
{
  int v0;
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * (int)(((*(_QWORD *)(v1 + 8) != 0x7A1806A77935206)
                                               * (((v0 + 251441858) & 0xF10346FB) - 1680)) ^ v0))
                            - 4))();
}

uint64_t sub_2477D2E74@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, int a4, int a5)
{
  int v5;
  uint64_t v6;
  uint64_t v7;

  *(_DWORD *)(a1 - 0x7A1806A77935206) = a5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7
                                        + 8 * ((3038 * (*(_QWORD *)(v6 + 24) != 0x4E95383EF13557F7)) ^ v5 ^ 0xBC6))
                            - 4))();
}

void sub_2477D2ED0(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(a1 - 0x4E95383EF13557F7) = v2;
  *(_DWORD *)(v1 + 16) = 1474860486;
}

void MyFblh3Z()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((674266315 - (v0 | 0x28307CCB) + (v0 | 0xD7CF8334)) ^ 0x104EE37D)
        - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477D3098(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a13 = &STACK[0x363276B12DAEA46C];
  a15 = 641 - ((-1681519897 - (&a13 | 0x9BC60AE7) + (&a13 | 0x6439F518)) ^ 0xA3B89551) * v15;
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((5493 * (a14 == v16)) ^ 0x459u))
                                                                                       - 12))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477D3128(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  int v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;

  v20 = 1314530549
      * ((((&a13 | 0xF42FD400) ^ 0xFFFFFFFE) - (~&a13 | 0xBD02BFF)) ^ 0xBAD9AD31);
  a13 = &STACK[0x2D3CC89B47FE83EE];
  a15 = a12;
  a18 = v20 ^ 0x8BF1C9B0;
  a16 = -1702184181 - v20;
  a14 = v20 ^ 0x41FA2AA8;
  v21 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * ((733 * (a17 == ((v18 + 253) ^ 0x305))) ^ 0xCBFu))
                                          - 4))(v21);
}

uint64_t sub_2477D322C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  a15 = (v20 + 368) ^ ((((&a14 | 0xA9D797C9) + (~&a14 | 0x56286836)) ^ 0x18DE1106) * v21);
  a16 = a10;
  a17 = &a12;
  (*(void (**)(int *))(v19 + 8 * (v20 - 522)))(&a14);
  LODWORD(a17) = v20
               - 476588053 * ((2 * (&a14 & 0x6C1F9760) - &a14 + 333473948) ^ 0xAE1D6CDF)
               - 488;
  a16 = a10;
  v22 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v18 + 8 * (((a14 == v17) * (v20 ^ 0x76C)) ^ v20)) - 12))(v22);
}

uint64_t sub_2477D32FC()
{
  int v0;
  void (*v1)(uint64_t *);
  int v2;
  int v3;
  unsigned int v4;
  int v5;
  uint64_t v7;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  v3 = 251 * (v2 ^ 0x308);
  v4 = ((2 * v8) & 0xAFFBFFAE) - 1403409 + (v8 ^ 0x57FDF368 ^ v3);
  v5 = v3 - 2150;
  v11 = v7;
  v12 = v3 + ((&v10 - 1887347607 - 2 * ((unint64_t)&v10 & 0x8F815C69)) ^ 0x992F0A2D) * v0 - 1667;
  v1(&v10);
  v12 = v5 + ((&v10 & 0x17489129 | ~(&v10 | 0x17489129)) ^ 0xFE193892) * v0 + 483;
  v11 = v9;
  v1(&v10);
  return v4 - 1474860486;
}

void qdrn6()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((v0 & 0xCB76372B | ~(v0 | 0xCB76372B)) ^ 0xF308A89D) - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477D34F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  unsigned int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a15 = &STACK[0x363276B12DAEA474];
  a17 = 641
      - ((((&a15 | 0x961D1E1A) ^ 0xFFFFFFFE) - (~&a15 | 0x69E2E1E5)) ^ 0xAE6381AC) * v19;
  sub_24786328C((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * ((3459 * (a16 == 1474860486)) ^ v17)))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477D3580(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17, int a18, uint64_t a19, unsigned int a20)
{
  int v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  uint64_t v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  unsigned int v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;

  v28 = 366490169 * ((&a15 & 0x2CBCA379 | ~(&a15 | 0x2CBCA379)) ^ 0xC5ED0AC2);
  a16 = a13;
  a15 = v25 - ((2 * v25) & 0xE3222F46) + 1905334179 + v28;
  a17 = v28 + 2033;
  sub_247881AB4((uint64_t)&a15);
  v29 = (((&a15 | 0x3E76581C) - &a15 + (&a15 & 0xC189A7E0)) ^ 0xF9F73855)
      * v27;
  a19 = a13;
  a16 = v23;
  a20 = (v24 ^ 0x4FEBBFED) - v29 + ((2 * v24) & 0x9FD77FDA) - 102834336;
  a17 = v29 + 1703;
  sub_2477BC464((uint64_t)&a15);
  v30 = (((&a15 | 0x74D7CA54) - &a15 + (&a15 & 0x8B2835A8)) ^ 0xB356AA1D)
      * v27;
  a16 = v21;
  a19 = a13;
  a20 = (v22 ^ 0xEFEBBFFD) + ((2 * v22) & 0xDFD77FFA) - v30 + 1507778384;
  a17 = v30 + 1703;
  sub_2477BC464((uint64_t)&a15);
  v31 = 366490169 * (((&a15 | 0x75D52187) - (&a15 & 0x75D52187)) ^ 0x637B77C3);
  a15 = v20 - ((2 * v20) & 0xE3222F46) + 1905334179 + v31;
  a17 = v31 + 2033;
  a16 = a13;
  sub_247881AB4((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 + 8 * ((3503 * (a18 == 1474860486)) ^ 0x57Cu)) - 4))(v32, v33, v34, v35, v36, v37, v38, v39, a9, 0x7F10000056BLL);
}

uint64_t sub_2477D3808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  int v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * ((((2 * &a15) | 0xAE016F42) - &a15 - 1459664801) ^ 0xE609316F);
  a16 = (a10 + 1106912573) ^ v22;
  a18 = -146361260 - v22;
  a20 = v22 ^ 0x8BF1C9B0;
  a17 = a13;
  a15 = &STACK[0x2D3CC89B47FE83FE];
  v23 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v21 + 8 * ((23 * (a19 != v20)) ^ a10))
                                          - ((a10 + 1824) ^ 0xC8FLL)))(v23);
}

uint64_t sub_2477D38E8()
{
  int v0;
  void (*v1)(_QWORD *);
  int v2;
  int v3;
  uint64_t v5;
  _QWORD v6[2];
  unsigned int v7;

  v6[1] = v5;
  v7 = (v6 ^ 0x16AE5644) * v3 + 1816243335 + v2 + 508;
  v1(v6);
  return (v0 - 1474860486);
}

void NnzznRTkqBtQzU(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v5;
  int v7;

  if (a2)
    v5 = a4 == 0;
  else
    v5 = 1;
  v7 = !v5 && a5 != 0;
  __asm { BR              X8 }
}

uint64_t sub_2477D3C44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;

  a16 = 31090337
      * (((&a15 | 0x567D1EF3) - &a15 + (&a15 & 0xA982E108)) ^ 0x91FC7EBA)
      - 849012913;
  v18 = sub_2478B6A70(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v16 + 8 * ((3903 * (a15 == 1474860486)) ^ v17)) - 12))(v18);
}

uint64_t sub_2477D3CD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a17 = 641
      - 31090337
      * (((&a15 | 0xC91594F) - &a15 + (&a15 & 0xF36EA6B0)) ^ 0xCB103906);
  a15 = &STACK[0x363276B12DAEA464];
  sub_24786328C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((115 * (a16 == 1474860486)) ^ 0x31Au)) - 12))(v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_2477D3D7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, unsigned int a19)
{
  int v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  unsigned int v26;
  unsigned int v27;
  unsigned int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;

  HIDWORD(a9) = (v26 - 671086895) | 0x500048;
  v27 = 366490169 * ((2044883219 - (&a15 | 0x79E27113) + (&a15 | 0x861D8EEC)) ^ 0x90B3D8A8);
  a16 = a11;
  LODWORD(a17) = v26 - 1488 + v27;
  LODWORD(a15) = v24 + (~(2 * v24) | 0x1CDDD0B9) + 1905334179 + v27 + 1;
  sub_247881AB4((uint64_t)&a15);
  v28 = 31090337
      * (((&a15 | 0xE6A21420) - &a15 + (&a15 & 0x195DEBD8)) ^ 0x21237469);
  a18 = a11;
  a16 = v22;
  a19 = (v23 ^ 0x5DCEDFFF) - v28 + ((v23 << (((v26 - 47) | 0x48) ^ 0xDB)) & 0xBB9DBFFE) - 335823026;
  LODWORD(a17) = v28 + v26 - 1818;
  ((void (*)(uint64_t *))((char *)off_2518F0F80[v26 - 3333] - 8))(&a15);
  HIDWORD(a16) = (v26 - 2217) ^ (375636451
                               * (((&a15 | 0xB7A1FB2A) - (&a15 & 0xB7A1FB2A)) ^ 0xE49FA1A6));
  a17 = a11;
  a15 = v21;
  ((void (*)(uint64_t *))off_2518F0F80[v26 - 3319])(&a15);
  v29 = *v20;
  v30 = (2 * *v20) & 0xE3222F46;
  v31 = 366490169 * ((((2 * &a15) | 0x1452502A) - &a15 - 170469397) ^ 0x1C877E51);
  LODWORD(a17) = v26 - 1488 + v31;
  LODWORD(a15) = v31 + v29 + 1905334179 - v30;
  a16 = a11;
  sub_247881AB4((uint64_t)&a15);
  v32 = v20[1];
  v33 = 366490169 * (((&a15 | 0xC768F833) + (~&a15 | 0x389707CC)) ^ 0xD1C6AE76);
  a16 = a11;
  LODWORD(a15) = v33 + v32 + 1905334179 - ((2 * v32) & 0xE3222F46);
  LODWORD(a17) = v26 - 1488 + v33;
  sub_247881AB4((uint64_t)&a15);
  v34 = 366490169
      * (((&a15 | 0xEFA0B935) - &a15 + (&a15 & 0x105F46C8)) ^ 0xF90EEF71);
  a16 = a11;
  LODWORD(a17) = v26 - 1488 + v34;
  LODWORD(a15) = v19 - ((2 * v19) & 0xE3222F46) + 1905334179 + v34;
  sub_247881AB4((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 + 8 * ((7513 * (HIDWORD(a17) == 1474860486)) ^ v26)) - 12))(v35, v36, v37, v38, v39, v40, v41, v42, a9, a10);
}

uint64_t sub_2477D40C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * (((&a15 | 0x3800C05A) - (&a15 & 0x3800C05A)) ^ 0x89094694);
  a16 = (v21 + 1106910439) ^ v22;
  a17 = a11;
  a20 = v22 ^ 0x8BF1C9B0;
  a18 = -427988383 - v22;
  a15 = &STACK[0x2D3CC89B47FE83FE];
  v23 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((7585 * (a19 == 1474860486)) ^ v21))
                                          - ((v21 - 628833842) & 0x1371 ^ ((v21 - 670039345) | 0x40044A) ^ 0xD85017D7)))(v23);
}

uint64_t sub_2477D41C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, char a13, int a14, int a15, char a16, char *a17, char *a18, char *a19)
{
  unsigned int v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _BOOL4 v24;

  a19 = a12;
  a17 = &a13;
  LODWORD(a18) = v19
               + 673918253 * ((&a17 & 0x28C719BE | ~(&a17 | 0x28C719BE)) ^ 0x4D70FDE9)
               + 1401;
  ((void (*)(char **))(*(_QWORD *)(v21 + 8 * (v19 ^ 0x3AF)) - 12))(&a17);
  HIDWORD(a17) = (v19 + 372) ^ ((((&a17 | 0x1A453E0E)
                                - &a17
                                + (&a17 & 0xE5BAC1F0)) ^ 0xAB4CB8C0)
                              * v20);
  a18 = a12;
  a19 = &a16;
  (*(void (**)(char **))(v21 + 8 * (v19 ^ 0x3FA)))(&a17);
  a18 = a12;
  LODWORD(a19) = v19
               - 476588053 * ((&a17 - 121851989 - 2 * (&a17 & 0xF8BCAFAB)) ^ 0x4541ABE8)
               - 484;
  v23 = sub_2477C6040((uint64_t)&a17);
  v24 = (_DWORD)a17 == ((v19 - 564626183) & 0xD85094DF) + 2140700908;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v22 + 8 * ((2 * v24) | (16 * v24) | v19)) - 4))(v23);
}

uint64_t sub_2477D431C()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  int v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *v5 = v8;
  v12 = v3
      + ((2 * (&v10 & 0x55DCEFC0) - &v10 - 1440542660) ^ 0xBC8D4678) * v2
      + (v1 ^ 0xD85017DB);
  v11 = v7;
  v0(&v10);
  v12 = v3
      + ((&v10 - 1625671310 - 2 * ((unint64_t)&v10 & 0x9F1A3972)) ^ 0x89B46F36) * v2
      + (v1 ^ 0xD85017DB);
  v11 = v6;
  v0(&v10);
  return (v9 ^ ((v1 ^ 0xD85017DB) - 2019761412)) + ((2 * v9) & 0xBFD9EFAC) - 1609365462;
}

void jumT7rcoieclCtxS2rgJ(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  __asm { BR              X9 }
}

uint64_t sub_2477D44E0@<X0>(uint64_t a1@<X4>, int a2@<W8>)
{
  int v2;
  _QWORD *v3;
  uint64_t v4;

  *v3 = 0;
  return (*(uint64_t (**)(void))(v4 + 8 * ((v2 + a2 + 2975) ^ (924 * (a1 != 0)))))();
}

uint64_t sub_2477D4508@<X0>(_DWORD *a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, unsigned int a10)
{
  int v10;
  uint64_t v11;
  unsigned int v12;
  int v13;
  uint64_t v14;

  *a1 = 0;
  v12 = a2 ^ 0xA2717558;
  v13 = v10 + a2 + 331;
  a10 = a2
      + 31090337 * (((&a9 | 0x37123CA5) + (~&a9 | 0xC8EDC35A)) ^ 0xF0935CED)
      + 720609590;
  v14 = sub_2478B6A70(&a9);
  return (*(uint64_t (**)(uint64_t))(v11 + 8 * ((2721 * (a9 == v12 + 1474859653)) ^ v13)))(v14);
}

uint64_t sub_2477D45CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  int v17;
  uint64_t v18;
  int v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  a15 = &STACK[0x363276B12DAEA464];
  a17 = v19
      - (((&a15 | 0x8B9646BB) - &a15 + (&a15 & 0x7469B940)) ^ 0x4C1726F2)
      * v17
      - 192;
  sub_24786328C((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v18 + 8 * (((a16 == ((v19 - 164998) & 0xA273F75D) - 1250484307) * (v19 + 2684)) ^ v19)))(v20, v21, v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477D466C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, int a17, uint64_t a18, unsigned int a19)
{
  int v19;
  uint64_t v20;
  int v21;
  int v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  unsigned int v28;
  uint64_t v29;

  v26 = v24 - 290;
  v27 = 366490169 * ((2 * (&a15 & 0x41C72D60) - &a15 + 1043911320) ^ 0x289684DC);
  a16 = a11;
  a17 = v27 + v26 + 1490;
  a15 = v22 - ((2 * v22) & 0xE3222F46) + 1905334179 + v27;
  sub_247881AB4((uint64_t)&a15);
  v28 = (((&a15 | 0x36A705BB) + (~&a15 | 0xC958FA44)) ^ 0xF12665F3) * v19;
  a17 = v28 + v26 + 1160;
  a18 = a11;
  a19 = ((2 * v21) & 0xFFBF7FDA) - v28 + (v21 ^ 0xFFDFBCAC ^ (v26 + 1219627332) & 0xB74DF7DD) + 1240129376;
  a16 = v20;
  v29 = ((uint64_t (*)(unsigned int *))((char *)off_2518F0F80[v26 - 355] - 8))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23 + 8 * ((3899 * (a15 == v25)) ^ v26)) - 8))(v29);
}

uint64_t sub_2477D47C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  uint64_t v20;
  int v21;
  int v22;
  unsigned int v23;
  uint64_t v24;

  v23 = 1314530549
      * ((((&a15 | 0x72800A34) ^ 0xFFFFFFFE) - (~&a15 | 0x8D7FF5CB)) ^ 0x3C767305);
  a17 = a11;
  a15 = &STACK[0x2D3CC89B47FE8406];
  a16 = (v21 + 1106913417) ^ v23;
  a18 = -1603104518 - v23;
  a20 = v23 ^ 0x8BF1C9B0;
  v24 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * (((a19 == v22) * (v21 - 466)) ^ v21))
                                          - ((49 * (v21 ^ 0x20Eu)) ^ 0x349)))(v24);
}

uint64_t sub_2477D48A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, char a13, char *a14, int a15, char a16, char *a17, char *a18, char *a19, uint64_t a20,unint64_t *a21)
{
  int v21;
  uint64_t v22;
  int v23;
  int v24;
  unsigned int v25;
  uint64_t v26;

  a21 = &STACK[0x7A31AFAC6192CAE1];
  a19 = a14;
  LODWORD(a18) = (v23 + 337) ^ (1401278017
                              * ((-672682815 - (&a17 | 0xD7E7ACC1) + (&a17 | 0x2818533E)) ^ 0x2C3B25D9));
  a17 = &a13;
  ((void (*)(char **))off_2518F0F80[(v23 + 1003) ^ 0x671])(&a17);
  v25 = 2 * &a17;
  HIDWORD(a17) = (v23 + 598) ^ ((((v25 | 0xC6E51D94) - &a17 + 479031606) ^ 0x527B0804) * v21);
  a18 = a14;
  a19 = &a16;
  ((void (*)(char **))off_2518F0F80[(v23 + 1003) ^ 0x6F1])(&a17);
  LODWORD(a19) = v23 + 1003 - 476588053 * (((v25 | 0x633EFDD4) - &a17 + 1314947350) ^ 0xC627AA9) - 1261;
  a18 = a14;
  v26 = sub_2477C6040((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t))(v22
                                            + 8
                                            * ((((_DWORD)a17 == v24) * (3 * ((v23 + 1003) ^ 0x6BF) + 1530)) ^ (v23 + 1003))))(v26);
}

uint64_t sub_2477D4A10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, int a14, int a15)
{
  int v15;
  uint64_t v16;

  return (*(uint64_t (**)(void))(v16 + 8 * ((3296 * (a15 == 0)) ^ v15)))();
}

uint64_t sub_2477D4A60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;
  uint64_t v15;
  BOOL v16;
  char v18;

  if (v13)
    v16 = a13 == 0;
  else
    v16 = 1;
  v18 = v16 || a9 == 0;
  return (*(uint64_t (**)(void))(v15 + 8 * ((3157 * (((v14 + 117) ^ v18) & 1)) ^ v14)))();
}

uint64_t sub_2477D4AB4(uint64_t a1)
{
  int v1;
  uint64_t v2;
  _BOOL4 v3;

  v3 = off_2518F0F80[v1 ^ 0x616](a1, 921157844) != 0;
  return (*(uint64_t (**)(void))(v2 + 8 * (int)((v3 * (((v1 - 67346066) & 0x4039EDF) + (v1 ^ 0xFFFFFD32))) ^ v1)))();
}

uint64_t sub_2477D4B20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  unsigned int v13;
  uint64_t v14;
  int v15;

  v15 = a13 - ((((v13 - 1272) | 0xC06) + 1461429622) & (2 * a13)) - 1416767122;
  return ((uint64_t (*)(void))(*(_QWORD *)(v14
                                        + 8
                                        * ((46
                                          * (((2 * v15) & 0xDDABFAE4 ^ 0x550BB2C4) + (v15 ^ 0x4558241C) + 531296944 != 243331106)) ^ v13))
                            - 12))();
}

uint64_t sub_2477D4BAC()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((v2 + v1 + 287965838 >= (((v0 ^ 0xD64) + 1566) ^ 0x628u))
                                          * (829 * (v0 ^ 0xD64) - 1434)) ^ v0))
                            - 8))();
}

uint64_t sub_2477D4C0C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  uint64_t v4;

  return (*(uint64_t (**)(void))(v4 + 8 * ((106 * (v3 - a1 < (unint64_t)(a3 + 90) - 1626)) ^ a3)))();
}

uint64_t sub_2477D4C38(uint64_t a1, uint64_t a2, int a3)
{
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v4
                                                                       + 8
                                                                       * ((((a3 + 2626) ^ 0x10AD) * (v3 > 0x1F)) ^ (a3 + 2626)))
                                                           - ((a3 - 1569624071) ^ 0xA2717615)))(a1, a2, (a3 + 2626) ^ 0x1B40u);
}

uint64_t sub_2477D4C84(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v8 = v5 + v4 + a2 + ((v6 + 1569623119) | 0x400u);
  v9 = *(_OWORD *)(v2 + v8 - 15);
  v10 = *(_OWORD *)(v2 + v8 - 31);
  v11 = a1 + v8;
  *(_OWORD *)(v11 - 15) = v9;
  *(_OWORD *)(v11 - 31) = v10;
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((4381 * ((v3 & 0xFFFFFFE0) == 32)) ^ (v6 + 1569623005))) - 8))();
}

void sub_2477D4CE4()
{
  JUMPOUT(0x2477D4CA4);
}

uint64_t sub_2477D4CF0(uint64_t a1)
{
  int v1;
  int v2;
  _QWORD *v3;
  void (*v4)(uint64_t *);
  int v5;
  _DWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int v12;

  *v3 = a1;
  *v7 = v1;
  v5 = (v2 - 2887) ^ 0x15E;
  v11 = v9;
  v12 = v2
      - 2887
      + 366490169 * ((&v10 - 642234692 - 2 * ((unint64_t)&v10 & 0xD9B846BC)) ^ 0xCF1610F8)
      + 1053;
  v4(&v10);
  v11 = v8;
  v12 = v5 + 366490169 * (((&v10 | 0x3284D7E2) - (&v10 & 0x3284D7E2)) ^ 0x242A81A6) + 763;
  v4(&v10);
  return 0;
}

uint64_t sub_2477D4FC8(uint64_t a1, uint64_t a2)
{
  return ((uint64_t (*)(uint64_t))(*((_QWORD *)&unk_2518E79C0
                                            + ((1009 * (*(_DWORD *)(a2 + 4) == 1278565165)) ^ 0x9F3u))
                                          - 12))(4294925278);
}

uint64_t sub_2477D5010@<X0>(uint64_t a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v2;

  *(_BYTE *)(*(_QWORD *)(a2 + 96) + 468) = *(_BYTE *)(*(_QWORD *)(a1 + 8) + 12);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v2 + 18792) - 12))(0);
}

uint64_t sub_2477D506C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;
  unsigned int v6;
  int v7;

  *(_BYTE *)(a1 + (v7 + v4)) = *(_BYTE *)(v3 + (v7 + v4));
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v1 + 8 * (((v7 - 1 == v2) * v5) ^ v6)) - 12))(0);
}

void CFUnnB0JdUjJ5CNJMkDS()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((2 * (v0 & 0x4B2EB7C0) - v0 - 1261352897) ^ 0x73502876) - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477D5170(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;

  a15 = 641 - (((&a13 | 0xF70461A9) - (&a13 & 0xF70461A9)) ^ 0x308501E0) * v15;
  a13 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 + 8 * ((6706 * (a14 == 1474860486)) ^ 0xA6Eu))
                                                                                       - 4))(v17, v18, v19, v20, v21, v22);
}

uint64_t sub_2477D5210(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, int a15, uint64_t a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  int v22;
  int v23;
  uint64_t v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  void (*v28)(unsigned int *);
  unsigned int v29;
  uint64_t v30;

  v25 = v22 - 200;
  v26 = 366490169 * ((318334183 - (&a13 | 0x12F964E7) + (&a13 | 0xED069B18)) ^ 0xFBA8CD5C);
  a13 = v21 - ((2 * v21) & 0xE3222F46) + (v25 ^ 0x3C8) + 1905331509 + v26;
  a14 = a12;
  a15 = v26 + v25 - 437;
  sub_247881AB4((uint64_t)&a13);
  v27 = ((((2 * &a13) | 0xCE74882A) - &a13 - 1731871765) ^ 0xA0BB245C) * v23;
  a15 = v25 - 767 + v27;
  a14 = v19;
  a16 = a12;
  a17 = (v20 ^ 0x5FEAFFDD) + ((2 * v20) & 0xBFD5FFBA) - v27 - 371220624;
  v28 = (void (*)(unsigned int *))((char *)off_2518F0F80[v25 - 2282] - 8);
  v28(&a13);
  v29 = ((((&a13 | 0x74EF6ED6) ^ 0xFFFFFFFE) - (~&a13 | 0x8B109129)) ^ 0x4C91F160) * v23;
  a15 = v25 - 767 + v29;
  a16 = a12;
  a14 = v17;
  a17 = (v18 ^ 0x5BDB9FEF) + ((2 * v18) & 0xB7B73FDE) - v29 - 303104162;
  v30 = ((uint64_t (*)(unsigned int *))v28)(&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v24 + 8 * ((28 * (a13 == 1474860486)) ^ v25)) - 12))(v30);
}

uint64_t sub_2477D53EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  int v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549
      * (((&a13 | 0x94773E4C) - &a13 + (&a13 & 0x6B88C1B0)) ^ 0x257EB882);
  a13 = &STACK[0x2D3CC89B47FE83F6];
  a15 = a12;
  a16 = 389577248 - v21;
  a18 = v21 ^ 0x8BF1C9B0;
  a14 = (v18 + 1106911490) ^ v21;
  v22 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8
                                                            * ((745 * (a17 == (v18 ^ 0x331 ^ (v19 + 2443)))) ^ v18))
                                          - ((v18 - 1753692583) & 0x68873A6E ^ 0xA62)))(v22);
}

uint64_t sub_2477D54DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  int v18;
  int v19;
  uint64_t v20;
  uint64_t v21;

  a15 = (v17 - 1570) ^ ((((&a14 | 0xC219EBE7) - &a14 + (&a14 & 0x3DE61418)) ^ 0x73106D29)
                      * v18);
  a16 = a12;
  a17 = &a11;
  ((void (*)(int *))off_2518F0F80[v17 ^ 0xA6C])(&a14);
  a16 = a12;
  LODWORD(a17) = v17
               - 476588053 * ((&a14 & 0x6DEA2C51 | ~(&a14 | 0x6DEA2C51)) ^ 0x2FE8D7ED)
               - 2426;
  v21 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((1112 * (a14 == v19)) ^ v17))
                                          - (v17 - 241)
                                          + 2458))(v21);
}

uint64_t sub_2477D55BC()
{
  void (*v0)(uint64_t *);
  int v1;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v8 = v1
     + 366490169
     * ((2 * ((&v6 ^ 0xF382B3A8) & 0xFBC6870) - (&v6 ^ 0xF382B3A8) - 264005749) ^ 0x156F7267)
     - 874;
  v7 = v4;
  v0(&v6);
  v7 = v5;
  v8 = (v1 ^ 0x3C8)
     + 366490169 * (((&v6 | 0x8BD1250D) - (&v6 & 0x8BD1250D)) ^ 0x9D7F7349)
     - 1074;
  v0(&v6);
  return (v3 ^ 0x7FFF9FFE) + (v1 ^ 0xD7E8FC6E) + ((2 * v3) & 0xFFFF3FFC) - 1474860486;
}

void sub_2477D56EC(uint64_t a1)
{
  int v1;

  v1 = *(_DWORD *)(a1 + 24) - 673918253 * ((-2 - ((~(_DWORD)a1 | 0x621AACE4) + (a1 | 0x9DE5531B))) ^ 0xF852B74C);
  __asm { BR              X11 }
}

uint64_t sub_2477D57A8@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1
                                        + 8
                                        * (((8 * (*(_DWORD *)(v2 - 0x3408C9F6C2C26174) != 1474860486)) | ((*(_DWORD *)(v2 - 0x3408C9F6C2C26174) != 1474860486) << 6)) ^ ((a1 - 1093) | 0x40D)))
                            - ((((a1 - 1093) | 0x40Du) + 56) ^ 0x46FLL)))();
}

uint64_t sub_2477D5808()
{
  uint64_t v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v3 = *(_DWORD *)(v2 - 0x3408C9F6C2C2617CLL) + 403402088;
  v4 = *(_DWORD *)(v2 - 0x3408C9F6C2C26180) + 1384996956;
  v5 = v3 < ((v1 + 425) ^ 0x8F4u) - 1943184310;
  v6 = v3 > v4;
  if (v5 != v4 < 0x8C2D68DD)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((125 * v6) ^ v1)) - 12))();
}

uint64_t sub_2477D58A4(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  int v10;

  v8 = *(_QWORD *)(v7 - 0x3408C9F6C2C2618CLL);
  v9 = *(unsigned __int8 *)(v8 + (v6 - 1948384122)) ^ 0xD0;
  v10 = ((*(unsigned __int8 *)(v8 + (v6 - 1948384125)) ^ 0xD0) << ((a5 + 68) & 0xFC ^ 0xCC)) | (((-95 * (a5 ^ 0x94)) ^ *(unsigned __int8 *)(v8 + (v6 - 1948384124)) ^ 0xB7) << 16) | ((*(unsigned __int8 *)(v8 + (v6 - 1948384123)) ^ 0xD0) << 8) | v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((71
                                          * (a2
                                           - *(_DWORD *)(a1 + 28)
                                           + ((v10 - 583154653 - 2 * (v10 & 0x5D3DC43B ^ v9 & 0x18) + 0x1000000) & 0xFFFFFF ^ 0x3DC423) != -1212390591)) ^ a5))
                            - 4))();
}

_DWORD *sub_2477D59B0@<X0>(_DWORD *result@<X0>, _DWORD *a2@<X8>)
{
  int v2;

  *a2 = v2;
  *result = 1474818299;
  return result;
}

uint64_t sub_2477D5B78@<X0>(uint64_t a1@<X0>, _DWORD *a2@<X8>)
{
  uint64_t v2;
  int v3;
  int v4;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) - 0x1E485B7C7E87F033) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((2247 * (*a2 == v3)) ^ v4)) - 8))();
}

uint64_t sub_2477D5BB8@<X0>(uint64_t a1@<X0>, int a2@<W3>, _DWORD *a3@<X8>)
{
  uint64_t v3;
  int v4;
  uint64_t v5;
  uint64_t v6;

  *(_QWORD *)(*(_QWORD *)(a1 + 32) - 0x1E485B7C7E87F033) = v6 + v5 + 8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((2247 * (*a3 == v4)) ^ (a2 - 1902))) - 8))();
}

void sub_2477D5C10(uint64_t a1, int a2)
{
  int v2;
  _DWORD *v3;
  int v4;

  **(_DWORD **)(a1 + 16) = a2 ^ v4;
  *v3 = v2;
  JUMPOUT(0x2477D5B68);
}

void qk82YWRPNDt4yUtuP3cY(int a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5)
{
  BOOL v5;
  int v8;

  if (a5)
    v5 = *a4 == 0;
  else
    v5 = 0;
  v8 = v5 && a2 != 0 && a1 != 0;
  __asm { BR              X9 }
}

uint64_t sub_2477D5CB0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16)
{
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  uint64_t v20;

  a16 = 31090337
      * ((((&a15 | 0x4B915684) ^ 0xFFFFFFFE) - (~&a15 | 0xB46EA97B)) ^ 0x73EFC932)
      - 849012913;
  v20 = v16;
  v18 = sub_2478B6A70(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v20 + 8 * ((7509 * (a15 == 1474860486)) ^ v17)) - 4))(v18);
}

uint64_t sub_2477D5D48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, unsigned int a17)
{
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  a17 = 641 - ((((2 * &a15) | 0xC280D5FA) - &a15 - 1631611645) ^ 0xA6C10AB4) * v17;
  a15 = &STACK[0x363276B12DAEA464];
  sub_24786328C((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a10 + 8 * ((58 * (a16 == 1474860486)) ^ 0xCCCu)) - 4))(v18, v19, v20, v21, v22, v23, v24, v25);
}

uint64_t sub_2477D5DDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unsigned int a15, uint64_t a16, unsigned int a17, uint64_t a18, unsigned int a19)
{
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;

  v24 = 366490169
      * (((&a15 | 0x49FDF25E) - &a15 + (&a15 & 0xB6020DA0)) ^ 0x5F53A41A);
  a16 = a11;
  a17 = v24 + 2033;
  a15 = v21 + v24 - ((2 * v21) & 0xE3222F46) + 1905334179;
  sub_247881AB4((uint64_t)&a15);
  v25 = ((&a15 & 0x30577F98 | ~(&a15 | 0x30577F98)) ^ 0x829E02E) * v23;
  a18 = a11;
  a19 = (v20 ^ 0x5FEFDFCF) + ((2 * v20) & 0xBFDFBF9E) - v25 - 371540098;
  a17 = v25 + 1703;
  a16 = v19;
  v26 = ((uint64_t (*)(unsigned int *))(*(_QWORD *)(v22 + 1504) - 8))(&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a10 + 8 * ((1022 * (a15 != 1474860486)) ^ 0x1FCu)) - 4))(v26);
}

uint64_t sub_2477D5F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, unint64_t *a15, int a16, uint64_t a17, unsigned int a18, int a19, unsigned int a20)
{
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549
      * ((-1533440695 - (&a15 | 0xA4998D49) + (&a15 | 0x5B6672B6)) ^ 0xEA6FF478);
  a16 = (v20 + 1106910684) ^ v21;
  a15 = &STACK[0x2D3CC89B47FE83FE];
  a17 = a11;
  a18 = 1823153829 - v21;
  a20 = v21 ^ 0x8BF1C9B0;
  v22 = sub_2478B0F68((uint64_t)&a15);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a10
                                                      + 8
                                                      * (((a19 == 1474860486)
                                                        * (((v20 - 1705904461) & 0x65ADFFFE) + 2586)) | (v20 - 2762)))
                                          - 4))(v22);
}

uint64_t sub_2477D6038(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, char *a12, int a13, char a14, uint64_t a15, uint64_t a16, char *a17, char *a18, uint64_t a19, unint64_t *a20)
{
  uint64_t v20;
  int v21;
  unsigned int v22;
  uint64_t v23;
  uint64_t v24;

  a16 = v20;
  a18 = a12;
  a20 = &STACK[0x7A31AFAC6192CB01];
  LODWORD(a17) = (v22 - 14) ^ (1401278017
                             * ((&a16 & 0xCE610899 | ~(&a16 | 0xCE610899)) ^ 0x35BD8181));
  (*(void (**)(uint64_t *))(v23 + 8 * (v22 ^ 0x305)))(&a16);
  a17 = a12;
  a18 = &a14;
  HIDWORD(a16) = (v22 + 247) ^ ((((&a16 | 0xE69B8C71) + (~&a16 | 0x1964738E)) ^ 0x57920ABE)
                              * v21);
  (*(void (**)(uint64_t *))(v23 + 8 * (int)(v22 - 643)))(&a16);
  LODWORD(a18) = v22
               - 476588053
               * (((&a16 | 0xF7D8D77B) - &a16 + (&a16 & 0x8272880)) ^ 0x4A25D338)
               - 609;
  a17 = a12;
  v24 = sub_2477C6040((uint64_t)&a16);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(a10 + 8 * ((2823 * ((_DWORD)a16 == 1474860486)) ^ v22))
                                          - ((v22 ^ 0x17C)
                                           + 2836)
                                          + 3346))(v24);
}

uint64_t sub_2477D61A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14)
{
  uint64_t v14;
  int v15;

  return (*(uint64_t (**)(void))(v14 + 8 * (((a14 == 0) * ((v15 ^ 0xF14) + 36)) ^ v15)))();
}

uint64_t sub_2477D61F0()
{
  uint64_t v0;
  _DWORD *v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (int)(((*v1 != 0) * ((v2 + 721958260) & 0xD4F7CBFB ^ 0x656)) ^ (v2 + 1805)))
                            - 257 * ((v2 + 1805) ^ 0x90Du)
                            + 506))();
}

uint64_t sub_2477D624C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t *v10;
  int v11;
  uint64_t v12;
  uint64_t v13;

  v13 = (*(uint64_t (**)(uint64_t, uint64_t))(v12 + 8 * (v11 - 854)))(a1, 3168438350);
  *v10 = v13;
  return ((uint64_t (*)(void))(*(_QWORD *)(a10
                                        + 8
                                        * (((v13 == 0)
                                          * ((((v11 - 1932481879) & 0x732F53E6) + 1793) ^ (v11 - 1236567091) & 0x49B489CF)) ^ v11))
                            - 4))();
}

uint64_t sub_2477D62C4()
{
  _DWORD *v0;
  unsigned int v1;
  uint64_t v2;
  int v3;

  v3 = *v0 - ((2 * *v0) & 0x571BB2DC) - 1416767122;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8
                                        * ((6527
                                          * (((v3 << (((v1 ^ 0xD) + 66) ^ 0x45)) & 0xDDABFAE4 ^ 0x550BB2C4)
                                           + ((257 * (v1 ^ 0x90D)) ^ v3 ^ 0x4558261E)
                                           + 531296944 != 243331106)) ^ v1))
                            - 8))();
}

uint64_t sub_2477D6368(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  uint64_t v4;
  uint64_t v5;

  return ((uint64_t (*)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v5
                                                                       + 8
                                                                       * (((((v3 + 1684025084) | 0x1084193) - 1701341906)
                                                                         * ((v2 + v1 + 287965838) > 7)) ^ v3))
                                                           - (((v3 - 311) | 0x132u) ^ 0x13BLL)))(a1, (v3 - 311) | 0x132u, v4);
}

uint64_t sub_2477D63E4(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4
                                        + 8
                                        * ((((a2 ^ 0x656870EC ^ v3) + a2 + 1363) * ((unint64_t)(v2 - a1) < 0x20)) ^ a2))
                            - 4))();
}

uint64_t sub_2477D6424(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  unsigned int v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v8
                                                              + 8
                                                              * ((5652
                                                                * (((v7 < 0x20) ^ (a6 + 105)) & 1)) ^ a6))
                                                  + 1701343691
                                                  - (a6 - v6 - 3205)))(a1, 0);
}

uint64_t sub_2477D647C(uint64_t a1, uint64_t a2, int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  __int128 v12;
  uint64_t v13;

  v10 = v6 + v7 + v8;
  v11 = v3 + v10;
  v12 = *(_OWORD *)(v11 - 31);
  v13 = a1 + v10;
  *(_OWORD *)(v13 - 15) = *(_OWORD *)(v11 - 15);
  *(_OWORD *)(v13 - 31) = v12;
  return ((uint64_t (*)(void))(*(_QWORD *)(v9
                                        + 8
                                        * ((((v5 & 0xFFFFFFE0) == 32) * ((a3 ^ 0x65687D39) - 901)) ^ (v4 + a3 + 3114)))
                            - 8))();
}

void sub_2477D64E0()
{
  JUMPOUT(0x2477D64A0);
}

uint64_t sub_2477D64EC(uint64_t a1, int a2, uint64_t a3, int a4)
{
  int v4;
  uint64_t v5;

  return (*(uint64_t (**)(void))(v5 + 8 * ((((a4 - 1626) ^ (a4 - 2792) ^ 0x56E) * (v4 == a2)) ^ a4)))();
}

uint64_t sub_2477D6520(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v9
                                                                       + 8
                                                                       * (a6 | (2
                                                                              * (((a6 + 109) ^ (((v6 + ((a6 + 1710878031) & 0xFF6E7DF3) + 1547) & v7) == 0)) & 1))))
                                                           - 8))(a1, a2, (v8 - a2));
}

uint64_t sub_2477D657C(uint64_t a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  int v6;
  int v7;
  int v8;
  int v9;
  uint64_t v10;
  int v11;

  *(_QWORD *)(a1 - 7 + (v7 + v8 + v9 - a2)) = *(_QWORD *)(v5 - 7 + (v7 + v8 + v9 - a2));
  v11 = (((a5 - 60) ^ 0xFFFFF655) & v6) - a2 != 8;
  return (*(uint64_t (**)(void))(v10 + 8 * (((4 * v11) | (v11 << 6)) ^ (a5 - 60))))();
}

uint64_t sub_2477D65EC(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  int v8;
  uint64_t v9;

  *(_QWORD *)(a6 + (v6 + v8)) = *(_QWORD *)(v7 + (v6 + v8));
  return (*(uint64_t (**)(void))(v9 + 8 * (((4 * (a5 + v8 != 8)) | ((a5 + v8 != 8) << 6)) ^ a4)))();
}

uint64_t sub_2477D661C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((v5 + v7 + v8 + 723) * (v6 == a5)) ^ v7))
                            - (v7 - 1166)
                            + 506))();
}

uint64_t sub_2477D6654@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W3>, int a4@<W8>)
{
  int v4;
  uint64_t v5;
  int v6;
  uint64_t v7;

  *(_BYTE *)(a1 + (a2 - 243331107)) = *(_BYTE *)(v5 + (a2 - 243331107));
  return (*(uint64_t (**)(void))(v7 + 8 * ((566 * ((((v6 + a3 + 2035) ^ (a2 - 1 == a4)) & 1) == 0)) ^ (v4 + a3 + 74))))();
}

uint64_t sub_2477D66B0()
{
  int v0;
  int v1;
  int v2;
  void (*v4)(uint64_t *);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;

  v8 = v6;
  v9 = v0 + ((&v7 & 0x384FEFA0 | ~(&v7 | 0x384FEFA0)) ^ 0xD11E461B) * v2 + 1082;
  v4(&v7);
  v8 = v5;
  v9 = v0 + 2762 + (((&v7 | 0x7DFEECB9) - (&v7 & 0x7DFEECB9)) ^ 0x6B50BAFD) * v2 - 1680;
  v4(&v7);
  return (v1 - 1474860486);
}

void Ehn34khqq1jgEJw()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((2 * (v0 & 0x6D53F600) - v0 - 1834219012) ^ 0x552D69B5) - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477D6864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a15 = 641 - ((&a13 & 0x4F9123D1 | ~(&a13 | 0x4F9123D1)) ^ 0x77EFBC67) * v17;
  a13 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                         + 8
                                                                                         * ((7887 * (a14 == v16)) ^ 0xE46u)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477D68E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unsigned int a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v24 = 366490169 * ((2 * (&a13 & 0x3C2ABB70) - &a13 - 1009433460) ^ 0xD57B12C8);
  LODWORD(a13) = v20 + v24 - ((2 * v20) & 0xE3222F46) + 1905334179;
  a14 = a12;
  LODWORD(a15) = v24 + 2033;
  sub_247881AB4((uint64_t)&a13);
  LODWORD(a14) = 1697562443 * (((&a13 | 0xF1A6E59) - (&a13 & 0xF1A6E59)) ^ 0xD88A56DD) + 725;
  a15 = v19;
  a13 = a12;
  sub_2477C25B8((uint64_t)&a13);
  v25 = ((2 * (&a13 & 0x2CEC73A8) - &a13 + 1393790037) ^ 0x9492EC1C) * v23;
  LODWORD(a15) = v25 + 1703;
  a14 = v17;
  a16 = a12;
  a17 = (v18 ^ 0xEBCA9FED) + ((2 * v18) & 0xD7953FDA) - v25 + 1577058144;
  sub_2477BC464((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 + 8 * ((8 * ((_DWORD)a13 == v22)) | (((_DWORD)a13 == v22) << 6) | 0x120u)) - 4))(v26, v27, v28, v29, v30, v31, v32, v33);
}

uint64_t sub_2477D6A9C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  unsigned int v18;
  uint64_t v19;
  int v20;
  unsigned int v21;
  uint64_t v22;

  v21 = 1314530549
      * (((&a13 | 0x40DDAB99) - &a13 + (&a13 & 0xBF225460)) ^ 0xF1D42D57);
  a15 = a12;
  a14 = (v18 + 1106913672) ^ v21;
  a16 = 389577248 - v21;
  a18 = v21 ^ 0xEB136265;
  a13 = &STACK[0x2D3CC89B47FE83F6];
  v22 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((2551 * (a17 == v20 + ((v18 + 740) | 0xA42) - 3654)) ^ v18))
                                          - (v18
                                           + 1135)
                                          + 1419))(v22);
}

uint64_t sub_2477D6B78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, char a10, __int16 a11, char a12, uint64_t a13, uint64_t a14, int a15, unsigned int a16, uint64_t a17, char *a18)
{
  unsigned int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  void (*v22)(int *);
  uint64_t v23;

  a17 = a13;
  a18 = &a12;
  a16 = (v18 - 282) ^ (((352944133 - (&a15 | 0x15098005) + (&a15 | 0xEAF67FFA)) ^ 0x5BFFF934)
                     * v21);
  v22 = *(void (**)(int *))(v20 + 8 * (int)(v18 - 1172));
  v22(&a15);
  a17 = a13;
  a18 = &a10;
  a16 = (v18 - 282) ^ (((&a15 - 1365860448 - 2 * (&a15 & 0xAE969FA0)) ^ 0x1F9F196E) * v21);
  v22(&a15);
  a17 = a13;
  LODWORD(a18) = v18
               - 476588053 * ((&a15 & 0x28B66AD6 | ~(&a15 | 0x28B66AD6)) ^ 0x6AB4916A)
               - 1138;
  v23 = sub_2477C6040((uint64_t)&a15);
  return (*(uint64_t (**)(uint64_t))(v19 + 8 * ((61 * (a15 == ((v18 + 1037262243) ^ 0x6A3BF6F4))) ^ v18)))(v23);
}

uint64_t sub_2477D6CB8()
{
  uint64_t v0;
  int v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (v1 ^ (5420 * (v0 != 0)))))();
}

uint64_t sub_2477D6D28@<X0>(int a1@<W8>)
{
  _DWORD *v1;
  int v2;
  void (*v3)(uint64_t *);
  int v4;
  int v5;
  int v6;
  int v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  int v13;

  *v1 = v8;
  v5 = v4 + 366490169 * (((&v11 | 0xEF857835) - (&v11 & 0xEF857835)) ^ 0xF92B2E71);
  v6 = a1 ^ 0x3DD36D74;
  v13 = v5 + a1 + 1595;
  v12 = v9;
  v3(&v11);
  v13 = v6
      + 366490169 * ((-427478702 - (&v11 | 0xE6853152) + (&v11 | 0x197ACEAD)) ^ 0xFD498E9)
      - 2058;
  v12 = v10;
  v3(&v11);
  return (v2 - 1474860486);
}

uint64_t sub_2477D6E3C(uint64_t a1)
{
  unsigned int v1;
  int v2;
  unsigned int v3;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x1960A8AE33B1FEE7);
  if (v2 - 454684228 < 0)
    v3 = 454684228 - v2;
  else
    v3 = v2 - 454684228;
  v1 = 375636451 * (((a1 | 0xE5461441) - (a1 & 0xE5461441)) ^ 0xB6784ECD);
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)off_2518F0F80[(*(_DWORD *)(a1 + 12) - v1) ^ 0x5E1]
                                        + 8
                                        * (int)((2233
                                               * ((*(_DWORD *)(a1 + 16) ^ v1) - 729800510 >= 4 * (unint64_t)v3)) ^ (*(_DWORD *)(a1 + 12) - v1))
                                        - 4)
                            - 4))();
}

uint64_t sub_2477D6F00(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((61 * (v3 != 729800510)) ^ v4))
                                                            - 4))(a1, a2, 657329652);
}

uint64_t sub_2477D6F30(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                         + 8
                                                                                         * ((v3 - 1573710048) & 0x5DCCEF8E ^ 0xD0C | 1u))
                                                                             - ((v3 - 1573710048) & 0x5DCCEF8E ^ 0x951u)
                                                                             + 1487))(a1, 446883262, (v3 - 1573710048) & 0x5DCCEF8E ^ 0x951u, 73585443, v2);
}

uint64_t sub_2477D6FC4@<X0>(uint64_t a1@<X0>, char a2@<W1>, int a3@<W2>, unsigned int a4@<W3>, int a5@<W4>, int a6@<W8>)
{
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;

  v9 = ((a3 - 1109) ^ (v8 - 126) ^ a4) >> (a2 + 98);
  *(_BYTE *)(*(_QWORD *)(a1 + 24) + (a5 + a6)) = v9 - ((2 * v9) & 0xA0) - 48;
  return ((uint64_t (*)(void))(*(_QWORD *)(v6 + 8 * (a3 ^ (2385 * (a5 - 1 != v7)))) - 4))();
}

uint64_t sub_2477D702C(uint64_t a1, int a2)
{
  uint64_t v2;
  int v3;
  int v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((a2 + 8 == v3 + 32) | v4)) - (v4 ^ 0x45Du) + 1487))();
}

uint64_t sub_2477D705C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  int v4;
  int v5;
  _BOOL4 v7;

  v7 = v4 + 1739395841 > 422257349 || v4 + 1739395841 < v3;
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v1
                                                                                         + 8
                                                                                         * ((((v5 + 1109) ^ 0x153A) * v7) ^ v5))
                                                                             - 12))(a1, 446883230, (v5 + 1109), 73585443, v2);
}

uint64_t sub_2477D70B0@<X0>(uint64_t a1@<X0>, int a2@<W2>, int a3@<W8>)
{
  int v3;
  _QWORD *v4;
  int v5;

  return sub_2477D6FC4(a1, 158, a2, *(_DWORD *)(*v4 + 4 * (v5 - 830345157) - 0x20586952EC1D9172), v3, a3);
}

uint64_t sub_2477D70F4(uint64_t result, uint64_t a2, int a3)
{
  *(_DWORD *)(result + 8) = a3;
  return result;
}

void sub_2477D70FC(_DWORD *a1)
{
  unsigned int v1;
  int v2[10];
  uint64_t v3;

  v3 = *MEMORY[0x24BDAC8D0];
  v1 = *a1 - 375636451 * (((a1 | 0xA026168F) - (_DWORD)a1 + (a1 & 0x5FD9E970)) ^ 0xF3184C03);
  v2[1] = v1
        + 31090337 * ((v2 - 302256363 - 2 * ((unint64_t)v2 & 0xEDFBEF15)) ^ 0x2A7A8F5C)
        - 849014194;
  sub_2478B6A70(v2);
  __asm { BR              X8 }
}

uint64_t sub_2477D7218(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  int v15;
  int v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  a13 = &STACK[0x363276B12DAEA464];
  a15 = v18 - (((&a13 | 0xBFDF0502) - (&a13 & 0xBFDF0502)) ^ 0x785E654B) * v16 - 640;
  sub_24786328C((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 + 8 * ((148 * (a14 == v15)) | v18))
                                                                                       - (((v18 - 413) | 0x802u) ^ 0xB6ALL)))(v19, v20, v21, v22, v23, v24);
}

uint64_t sub_2477D72AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, int a15, int a16)
{
  uint64_t v16;
  int v17;
  uint64_t v18;
  int v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = 366490169 * ((&a13 & 0xBDA2B9F8 | ~(&a13 | 0xBDA2B9F8)) ^ 0x54F31043);
  a13 = v21
      - 1251278609 * (*(_DWORD *)(v16 + 8) ^ v19)
      - ((1792410078 * (*(_DWORD *)(v16 + 8) ^ v19) + 2075279410) & 0xE3222F46)
      + 795490236;
  a14 = a11;
  a15 = v21 + v20 - 885;
  sub_247881AB4((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 + 8 * ((1479 * (a16 == v17)) ^ v20))
                                                                                       - ((v20 - 435219407) & 0x19F0E569)
                                                                                       + 1277))(v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477D7398(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, int a16, int a17, unsigned int a18)
{
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  v21 = 1314530549 * ((&a13 + 125681397 - 2 * ((unint64_t)&a13 & 0x77DBEF5)) ^ 0xB674383B);
  a13 = &STACK[0x2D3CC89B47FE83FE];
  a16 = 1000257254 - v21;
  a18 = v21 ^ 0x8BF1C9B0;
  a14 = (v20 + 1106911042) ^ v21;
  a15 = a11;
  v22 = sub_2478B0F68((uint64_t)&a13);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * (((a17 == (((v20 ^ 0xB73) + 510) ^ (v18 + 527)))
                                                        * (61 * (v20 ^ 0xB73) - 1037)) ^ v20))
                                          - 4))(v22);
}

uint64_t sub_2477D7470(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, char a11, uint64_t a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  int v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  int v21;
  uint64_t v22;

  a15 = (v21 + 610) ^ ((((&a14 | 0x895B25CE) - (&a14 & 0x895B25CE)) ^ 0x3852A300) * v18);
  a16 = a13;
  a17 = &a11;
  (*(void (**)(int *))(v20 + 8 * (v21 - 280)))(&a14);
  LODWORD(a17) = v21
               - 476588053 * ((&a14 - 3896493 - 2 * (&a14 & 0xFFC48B53)) ^ 0x42398F10)
               - 246;
  a16 = a13;
  v22 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19 + 8 * (((a14 == v17) * ((v21 + 2387) ^ 0x18F7)) ^ v21))
                                          - 4))(v22);
}

uint64_t sub_2477D7540()
{
  uint64_t v0;
  void (*v1)(uint64_t *);
  int v2;
  int v3;
  uint64_t result;
  int v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;

  v3 = (v2 + 2383) | 4;
  v9 = v7;
  v10 = v3
      + 366490169
      * (((&v8 | 0x20BD7286) - &v8 + (&v8 & 0xDF428D78)) ^ 0x361324C2)
      - 1322;
  v1(&v8);
  v9 = v6;
  v10 = ((v3 - 2917) | 0x500)
      + 366490169 * (((~&v8 & 0x2122FAD0) - (~&v8 | 0x2122FAD1)) ^ 0x378CAC95)
      + 315;
  result = ((uint64_t (*)(uint64_t *))v1)(&v8);
  *(_DWORD *)(v0 + 4) = ((2 * v5) & 0xAFF53F8E) + 2146301439 + ((v3 - 671443871) ^ v5);
  return result;
}

void sub_2477D766C(uint64_t a1)
{
  int v1;

  v1 = 1401278017 * (((a1 | 0x7E048411) - a1 + (a1 & 0x81FB7BEE)) ^ 0x7A27F2F6);
  __asm { BR              X10 }
}

uint64_t sub_2477D7720()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((6793 * (*v1 != 5 * ((v0 + 2327) ^ 0xB7D) - 515)) ^ (v0 + 2327)))
                            - 8))();
}

uint64_t sub_2477D776C()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;
  uint64_t (*v3)(_QWORD);
  unsigned int *v4;
  int v5;
  uint64_t v6;

  v5 = (v0 - 2330) | 3;
  v6 = v3(*v4);
  return (*(uint64_t (**)(uint64_t))(v2 + 8 * (((2 * (*v1 != 0)) | (8 * (*v1 != 0))) ^ v5)))(v6);
}

uint64_t sub_2477D779C()
{
  uint64_t v0;
  _DWORD *v1;
  uint64_t (*v2)(_QWORD);
  unsigned int *v3;
  uint64_t result;

  result = v2(*v3);
  *v1 = 0;
  *(_DWORD *)v0 = 0;
  *(_QWORD *)(v0 + 344) = 0;
  *(_QWORD *)(v0 + 352) = 0;
  *(_DWORD *)(v0 + 360) = 832647004;
  *(_DWORD *)(v0 + 56) = 1611837419;
  return result;
}

uint64_t sub_2477D77DC()
{
  int v0;
  _DWORD *v1;
  uint64_t v2;

  return (*(uint64_t (**)(void))(v2 + 8 * (((2 * (*v1 != 0)) | (8 * (*v1 != 0))) ^ v0)))();
}

void gLg1CWr7p()
{
  int v0[10];
  uint64_t v1;

  v1 = *MEMORY[0x24BDAC8D0];
  v0[1] = 31090337 * ((-1499171947 - (v0 | 0xA6A47395) + (v0 | 0x595B8C6A)) ^ 0x9EDAEC23)
        - 849012913;
  sub_2478B6A70(v0);
  __asm { BR              X8 }
}

uint64_t sub_2477D78D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, unsigned int a19, unsigned int a20)
{
  unsigned int v20;
  uint64_t v21;
  int v22;
  int v23;
  uint64_t v24;
  unsigned int v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25 = 1434876433 * (&a17 ^ 0xF46234AD);
  a19 = 1999 - v25;
  a20 = v25 + 231137558;
  LODWORD(a17) = v25 + 1557063482;
  HIDWORD(a17) = v25 ^ 0x2F210CEF;
  ((void (*)(unint64_t **))(*(_QWORD *)(v24 + 616) - 8))(&a17);
  LODWORD(a10) = a18;
  a19 = 641 - (((&a17 | 0xAAD289E7) - (&a17 & 0xAAD289E7)) ^ 0x6D53E9AE) * v22;
  a17 = &STACK[0x363276B12DAEA46C];
  sub_24786328C((uint64_t)&a17);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v21 + 8 * ((4835 * (a18 == v23)) ^ v20)))(v26, v27, v28, v29, v30, v31, v32, v33, a9, a10);
}

uint64_t sub_2477D79B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, int a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unsigned int a18, uint64_t a19, unsigned int a20,uint64_t a21,unsigned int a22)
{
  uint64_t v22;
  int v23;
  int v24;
  uint64_t v25;
  int v26;
  int v27;
  uint64_t v28;
  unsigned int v29;
  unsigned int v30;
  void (*v31)(unsigned int *);
  unsigned int v32;
  uint64_t v33;

  v29 = 366490169 * ((-693603039 - (&a18 | 0xD6A87521) + (&a18 | 0x29578ADE)) ^ 0x3FF9DC9A);
  a19 = a13;
  a20 = v29 + 2033;
  a18 = v24 - ((2 * v24) & 0xE3222F46) + 1905334179 + v29;
  sub_247881AB4((uint64_t)&a18);
  v30 = (&a18 ^ 0xC7816049) * v26;
  a22 = (v23 ^ 0xFBCADFCF) + ((2 * v23) & 0xF795BF9E) - v30 + 1308606334;
  a21 = a13;
  a20 = v30 + 1703;
  a19 = v22;
  v31 = (void (*)(unsigned int *))(*(_QWORD *)(v28 + 1504) - 8);
  v31(&a18);
  v32 = ((((&a18 | 0x551914C6) ^ 0xFFFFFFFE) - (~&a18 | 0xAAE6EB39)) ^ 0x6D678B70) * v26;
  a20 = v32 + 1703;
  a19 = a12;
  a21 = a13;
  a22 = ((2 * a11) & 0xF795FFBA) - v32 + (a11 ^ 0x7BCAFFDD) - 838885520;
  v33 = ((uint64_t (*)(unsigned int *))v31)(&a18);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v25 + 8 * ((1694 * (a18 == v27)) ^ 0x8CAu)) - 12))(v33);
}

uint64_t sub_2477D7B6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, unint64_t *a17, int a18, uint64_t a19, unsigned int a20,int a21,int a22)
{
  unsigned int v22;
  uint64_t v23;
  int v24;
  int v25;
  unsigned int v26;
  uint64_t v27;

  if (a10 >= 0x26B70B78)
    v25 = -351051163;
  else
    v25 = -1947088464;
  v26 = 1314530549 * (&a17 ^ 0xB10986CE);
  a18 = (v22 + 1106911710) ^ v26;
  a19 = a12;
  a22 = v25 ^ v26;
  a20 = 306030957 - v26;
  a17 = &STACK[0x2D3CC89B47FE840E];
  v27 = sub_2478B0F68((uint64_t)&a17);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v23
                                                      + 8
                                                      * ((963
                                                        * (a21 == (((v22 - 2172) | 0x980) ^ (v24 + 1473))
                                                                + (((_WORD)v22 - 13645) & 0xFFF))) ^ v22))
                                          - 12))(v27);
}

uint64_t sub_2477D7C50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, unsigned int a10)
{
  int v10;
  uint64_t v11;
  unsigned int v12;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v11 + 8 * ((((v10 - 2131) ^ 0x18FA) * (a10 < v12)) ^ v10))
                                          - 4))(a1);
}

uint64_t sub_2477D7CA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, char a14, _BYTE *a15, uint64_t a16, char a17, __int16 a18, char a19, char *a20,_BYTE *a21,char *a22,uint64_t a23,uint64_t a24)
{
  int v24;
  int v25;
  uint64_t v26;
  void (*v27)(char **);
  uint64_t v28;
  int v29;
  uint64_t v30;
  unsigned int v31;
  uint64_t v32;
  int v33;

  v31 = (v24 + 1762490801) & 0x96F27DFB;
  HIDWORD(a20) = (v24 - 1369) ^ (((&a20 & 0xAEB4BBB3 | ~(&a20 | 0xAEB4BBB3)) ^ 0xE042C282)
                               * v25);
  a21 = a15;
  a22 = &a14;
  v27(&a20);
  LODWORD(a21) = (v31 + 501) ^ (1401278017
                              * ((&a20 & 0xB988E48E | ~(&a20 | 0xB988E48E)) ^ 0x42546D96));
  a24 = v28;
  a22 = a15;
  a20 = &a19;
  (*(void (**)(char **))(v30 + 8 * (int)(v31 ^ 0x100)))(&a20);
  HIDWORD(a20) = (v31 + 762) ^ (((((&a20 | 0xCFB1A7B0) ^ 0xFFFFFFFE) - (~&a20 | 0x304E584F)) ^ 0x8147DE81)
                              * v25);
  a21 = a15;
  a22 = &a17;
  v27(&a20);
  a21 = a15;
  LODWORD(a22) = v31
               - 476588053 * ((2 * (&a20 & 0xDDC3048) - &a20 - 232534096) ^ 0x4FDECBF3)
               - 94;
  v32 = sub_2477C6040((uint64_t)&a20);
  v33 = (_DWORD)a20 == (((v31 - 345) | 0xF81) ^ (v29 + 1183));
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v26 + 8 * (int)((v33 | (v33 << 10)) ^ v31))
                                          - ((v31 + 1871) ^ 0x8C6)))(v32);
}

uint64_t sub_2477D7E58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16)
{
  int v16;
  uint64_t v17;

  return ((uint64_t (*)(void))(*(_QWORD *)(v17 + 8 * ((98 * (a16 == 0)) ^ v16)) - 8))();
}

uint64_t sub_2477D7ED0@<X0>(unsigned int a1@<W8>, uint64_t a2, int a3, unsigned int a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, int a10, unsigned int a11)
{
  uint64_t v11;

  return ((uint64_t (*)(void))(*(_QWORD *)(v11
                                        + 8
                                        * ((254 * ((((a1 - 1391788415) ^ (a1 + 1871) ^ (a11 > a4)) & 1) == 0)) ^ a1))
                            - 12))();
}

uint64_t sub_2477D7F20()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;

  v3 = v1 & 0x52F50DE3;
  v4 = v0 - ((2 * v0) & 0xBD8CD282) + (v3 ^ 0xDEC664A1);
  return (*(uint64_t (**)(void))(v2
                              + 8
                              * ((998
                                * ((v3 ^ 0xBC885F60 ^ (2 * v4) & 0xFC9B57FC) + (v4 ^ 0xA08BC2BF) - 104859872 == 2014159646)) ^ v3)))();
}

uint64_t sub_2477D7FC0()
{
  int v0;
  int v1;
  uint64_t v2;
  unsigned int v3;
  uint64_t v4;

  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v4
                                                      + 8
                                                      * ((52 * (v1 + v0 - 2119019518 < ((19 * (v3 ^ 0x436)) ^ 0xCDF))) ^ v3))
                                          - 8))(v2);
}

uint64_t sub_2477D8030(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  uint64_t v12;
  int v13;
  uint64_t v14;

  return ((uint64_t (*)(uint64_t, _QWORD))(*(_QWORD *)(v14
                                                              + 8
                                                              * (((((a3 + 875) | 0x121) ^ 0x1156)
                                                                * ((unint64_t)(v11 - a11) > 0x1F)) ^ a3))
                                                  - 12))(v12, (a3 + v13));
}

uint64_t sub_2477D8070(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  unsigned int v5;
  uint64_t v6;
  _BOOL4 v7;

  v7 = v5 >= ((v4 + ((a4 - 1369270335) | 0x41904200) + 897) ^ (a4 + 790945432) & 0xD0DB13BD);
  return (*(uint64_t (**)(void))(v6 + 8 * ((v7 | (16 * v7)) ^ a4)))();
}

uint64_t sub_2477D80C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  int v12;
  int v13;
  int v14;
  int v15;
  uint64_t v16;
  unsigned int v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;

  v17 = v14 + v13 + v15;
  v18 = v11 + v17;
  v19 = *(_OWORD *)(v18 - 31);
  v20 = a11 + v17;
  *(_OWORD *)(v20 - 15) = *(_OWORD *)(v18 - 15);
  *(_OWORD *)(v20 - 31) = v19;
  return ((uint64_t (*)(void))(*(_QWORD *)(v16 + 8
                                              * ((((v12 & 0xFFFFFFE0) != 32) * ((a1 + 355) ^ 0x17D)) ^ (a1 + 2081)))
                            - 4))();
}

void sub_2477D8124()
{
  JUMPOUT(0x2477D80DCLL);
}

uint64_t sub_2477D8130(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  uint64_t v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((((19 * (a5 ^ 0x1D6)) ^ 0x996) * (v5 != v6)) ^ a5))
                            - (a5 + 1871)
                            + 2238))();
}

uint64_t sub_2477D816C(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(v9
                                                     + 8
                                                     * ((463 * (((((a4 - 2334) ^ (v7 + 2640)) + v4) & v5) != 0)) ^ a4))
                                         - 12))((v6 - v8));
}

uint64_t sub_2477D81A0(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  uint64_t v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  uint64_t v18;

  *(_QWORD *)(a11 - 7 + (v14 + v13 + v16 - v17)) = *(_QWORD *)(v11
                                                                           - 7
                                                                           + (v14 + v13 + v16 - v17));
  return (*(uint64_t (**)(_QWORD))(v18
                                           + 8
                                           * ((14 * (((a3 - 2) ^ (((a3 - 961) & v12) - v17 == 8)) & 1)) ^ (a3 - 2))))(v15 - ((a3 - 961) & v12));
}

uint64_t sub_2477D8208(uint64_t a1, int a2, uint64_t a3)
{
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  uint64_t v7;

  *(_QWORD *)(a3 + (v3 + v5)) = *(_QWORD *)(v4 + (v3 + v5));
  return (*(uint64_t (**)(void))(v7 + 8 * ((14 * ((a2 ^ (v6 + v5 == 8)) & 1)) ^ a2)))();
}

uint64_t sub_2477D8240()
{
  int v0;
  int v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * (((v1 + 1629) * (v0 == v2)) ^ v1))
                            - ((v1 - 268507330) & 0xFFF3FF36)
                            + 4025674524))();
}

uint64_t sub_2477D8288@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W8>, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  int v7;
  uint64_t v8;

  *(_BYTE *)(a6 + (a1 - 2014159647)) = *(_BYTE *)(v6 + (a1 - 2014159647));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8
                                        + 8
                                        * ((1868 * (a1 + ((a2 + 833458378) & 0xDE5F8CDB) - 2251 == a3)) ^ (v7 + a2 + 2263)))
                            - 8))();
}

uint64_t sub_2477D82E8()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;

  v7 = v5;
  v8 = v1 + 366490169 * ((((2 * &v6) | 0x315D5B02) - &v6 - 414100865) ^ 0xE00FBC5) - 654;
  v0(&v6);
  v7 = v4;
  v8 = 47 * (v1 ^ 0x8D9)
     + 366490169 * ((&v6 + 1416448381 - 2 * ((unint64_t)&v6 & 0x546D497D)) ^ 0x42C31F39)
     + 703;
  v0(&v6);
  return (v2 - 1474860486);
}

uint64_t sub_2477D83E0(uint64_t a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  _BOOL4 v5;

  v2 = *(_DWORD *)(*(_QWORD *)a1 - 0x1960A8AE33B1FEE7) + 638860879;
  v3 = *(_DWORD *)(*(_QWORD *)(a1 + 16) - 0x1960A8AE33B1FEE7) + 638860879;
  v4 = (v2 < -1053938541) ^ (v3 < -1053938541);
  v5 = v2 > v3;
  if (v4)
    v5 = v2 < -1053938541;
  v1 = *(_DWORD *)(a1 + 12) ^ (366490169 * ((2 * (a1 & 0x19FAA4E9) - a1 + 1711627030) ^ 0x70AB0D52));
  return ((uint64_t (*)(void))(*(_QWORD *)((char *)off_2518F0F80[v1 ^ 0x542] + 8 * ((v5 * (v1 - 1184)) ^ v1) - 4) - 8))();
}

uint64_t sub_2477D84B8()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  _BOOL4 v8;
  _BOOL4 v9;

  v4 = v2 + 40;
  v5 = (v2 - 944) | 0x202;
  v6 = (((v4 - 400) | 0x168) ^ 0xBFAA56CA) + v3;
  v7 = v1 - 1079356494;
  v8 = v7 < 1522811382;
  v9 = v6 < v7;
  if (v8 != v6 < 1522811382)
    v9 = v8;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((!v9 * (v5 - 443)) | v4)) - 8))();
}

uint64_t sub_2477D853C()
{
  uint64_t v0;
  int v1;
  int v2;
  int v3;

  v3 = ((v1 + 470) ^ 0x3633D928) - v2;
  if (v2 + 1692799420 < 0)
    v3 = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2758 * (v3 - 454684229 >= 0)) ^ (v1 + 470))) - 8))();
}

uint64_t sub_2477D85CC()
{
  uint64_t v0;
  unsigned int v1;
  int v2;
  _QWORD *v3;
  _QWORD *v4;
  unsigned int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * ((4005
                                          * ((*(_DWORD *)(*v3 + 4 * v5 - 0x20586952EC1D9172) ^ (v1 + 824) ^ (v2 - 1469419428) & 0x57958F7B) <= (*(_DWORD *)(*v4 + 4 * v5 - 0x20586952EC1D9172) ^ v1))) ^ v2))
                            - 8))();
}

uint64_t sub_2477D8644(uint64_t a1, unsigned int a2)
{
  uint64_t v2;
  int v3;
  unsigned int v4;

  return (*(uint64_t (**)(void))(v2 + 8 * ((((60 * ((v3 - 470) ^ 0x3D2)) ^ 0xE46) * (v4 < a2)) ^ (v3 - 470))))();
}

uint64_t sub_2477D8678()
{
  uint64_t v0;
  int v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((2758 * (v2 - 454684229 >= 0)) ^ v1)) - 8))();
}

uint64_t sub_2477D86B8(uint64_t result)
{
  int v1;
  int v2;

  *(_DWORD *)(result + 8) = (((v2 ^ 0x66A) - 1272001959) & 0x4BD1357E ^ 0xFC8C490C) - v1;
  return result;
}

void AohBfJYWOS6(uint64_t a1)
{
  __asm { BR              X8 }
}

uint64_t sub_2477D8754(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, unsigned int a14)
{
  uint64_t v14;
  unsigned int v15;
  uint64_t v16;

  a14 = 31090337 * ((((2 * &a13) | 0xA898FAB4) - &a13 + 733184678) ^ 0x13CD1D13) - 849012913;
  v16 = sub_2478B6A70(&a13);
  return (*(uint64_t (**)(uint64_t))(v14 + 8 * ((3361 * (a13 == 1474860486)) ^ v15)))(v16);
}

uint64_t sub_2477D87CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, unsigned int a15)
{
  uint64_t v15;
  int v16;
  int v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  a13 = &STACK[0x363276B12DAEA46C];
  a15 = 641 - ((((2 * &a13) | 0xEE4E9506) - &a13 - 1999063683) ^ 0xB0A62ACA) * v16;
  sub_24786328C((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v15
                                                                                         + 8
                                                                                         * ((5722
                                                                                           * (a14 == ((v17 - 1432) ^ 0x5E8))) ^ 0x773u)))(v18, v19, v20, v21, v22, v23);
}

uint64_t sub_2477D8868(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unsigned int a13, uint64_t a14, int a15, int a16)
{
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  int v20;
  unsigned int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;

  v21 = 366490169 * ((&a13 & 0xBEDE3188 | ~(&a13 | 0xBEDE3188)) ^ 0x578F9833);
  a14 = a12;
  a15 = v21 + v20 + 521;
  a13 = v16 + v21 - ((v16 << (((v20 ^ v19) - 73) ^ 0xBA)) & 0xE3222F46) + 1905334179;
  sub_247881AB4((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v17
                                                                                         + 8
                                                                                         * ((2815 * (a16 == v18)) ^ v20)))(v22, v23, v24, v25, v26, v27);
}

uint64_t sub_2477D8930(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, unint64_t *a13, int a14, uint64_t a15, unsigned int a16, int a17, unsigned int a18)
{
  uint64_t v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  uint64_t v23;

  v22 = 1314530549 * (&a13 ^ 0xB10986CE);
  a14 = (v19 + 1106912493) ^ v22;
  a13 = &STACK[0x2D3CC89B47FE83EE];
  a15 = a12;
  a16 = -1456508166 - v22;
  a18 = v22 ^ 0x8BF1C9B0;
  v23 = sub_2478B0F68((uint64_t)&a13);
  return (*(uint64_t (**)(uint64_t))(v18
                                            + 8
                                            * ((83
                                              * ((((v21 + v19 - 419) ^ (a17 == v20 + 307 * (v19 ^ 0x5B2) - 2763)) & 1) == 0)) ^ v19)))(v23);
}

uint64_t sub_2477D89F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, int a11, char a12, uint64_t a13, int a14, unsigned int a15, uint64_t a16, char *a17)
{
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  int v21;
  uint64_t v22;

  a15 = (v21 - 1622) ^ ((((&a14 | 0xC65D78EB) + (~&a14 | 0x39A28714)) ^ 0x7754FE24) * v20);
  a16 = a10;
  a17 = &a12;
  (*(void (**)(int *))(v19 + 8 * (v21 ^ 0xA30)))(&a14);
  LODWORD(a17) = v21
               - 476588053 * ((&a14 - 244757846 - 2 * (&a14 & 0xF1694AAA)) ^ 0x4C944EE9)
               - 2478;
  a16 = a10;
  v22 = sub_2477C6040((uint64_t)&a14);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17
                                                      + 8
                                                      * ((19 * (a14 != v21 - v18 - 1167 + v21 - 1742600713)) ^ v21))
                                          - 4))(v22);
}

uint64_t sub_2477D8AE0()
{
  void (*v0)(uint64_t *);
  int v1;
  int v2;
  int v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v9 = v1 + 366490169 * (((&v7 | 0x7BB26713) - (&v7 & 0x7BB26713)) ^ 0x6D1C3157) + v2;
  v8 = v5;
  v0(&v7);
  v9 = v1 + 366490169 * (&v7 ^ 0x16AE5644) + v2;
  v8 = v6;
  v0(&v7);
  return (v3 - 1474860486);
}

void X5EvIJWqdcALcjaxX6Pl(uint64_t a1)
{
  __asm { BR              X9 }
}

uint64_t sub_2477D8C34@<X0>(uint64_t a1@<X8>)
{
  (*(void (**)(void))(a1 + 1592))();
  return 0;
}

void sub_2477D8C48(uint64_t a1)
{
  uint64_t v1;
  int v2;
  int v3;
  uint64_t v4;
  int v5;
  BOOL v6;
  int v7;
  _BYTE v8[2560];
  uint64_t v9;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v9 = *MEMORY[0x24BDAC8D0];
  v2 = 1697562443 * ((((2 * v1) | 0x8DDECFB0) - v1 - 1190094808) ^ 0x917F5F5C);
  v3 = *(_DWORD *)(v1 + 40) ^ v2;
  v4 = *(_QWORD *)v1;
  v5 = *(_DWORD *)(v1 + 20);
  sub_2478B1548(v8, 0, 0x128uLL);
  if (v4)
    v6 = ((2 * (v2 + v5 - 924874017)) & 0x5B7FFF82) + ((v2 + v5 - 924874017) ^ 0xADBFFFC1) == -1379926047;
  else
    v6 = 1;
  v7 = !v6;
  __asm { BR              X10 }
}

uint64_t sub_2477D8DB4@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  unint64_t v3;
  int v4;
  unsigned int v5;
  uint64_t (*v6)(void);

  STACK[0x318] = v3;
  v5 = (a1 + 206920438) & 0xF3AA9EE4;
  LODWORD(STACK[0x6F8]) = v2;
  LODWORD(STACK[0x6F0]) = v5 + v4;
  STACK[0x6D0] = v1;
  v6 = *(uint64_t (**)(void))(v1 + 8 * (int)(((v2 == v5 + v4) * ((a1 + 637779514) & 0xD9FC3BF5 ^ 0xAD7)) | a1));
  LODWORD(STACK[0x700]) = -992985084;
  return v6();
}

uint64_t sub_2477D8E74()
{
  int v0;
  unint64_t v1;

  v1 = STACK[0x6D0];
  LOBYTE(STACK[0xCA6]) = -29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((28 * (31 * (v0 ^ 0xA87) == 1224)) | v0)) - 12))();
}

void sub_2477D8F18()
{
  JUMPOUT(0x2477D8EBCLL);
}

uint64_t sub_2477D8F24(int a1)
{
  int v1;
  int v2;
  int v3;
  unsigned int v4;
  unsigned int v5;
  unint64_t v6;
  uint64_t v7;
  char v8;
  int v9;
  unsigned int v10;
  char v11;
  uint64_t v12;
  char v13;
  uint64_t v14;
  char v15;
  uint64_t v16;
  char v17;
  int v18;
  int v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  unsigned int v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  char v34;
  unint64_t v35;
  int v36;
  uint64_t v37;
  uint64_t v38;
  char v39;

  v7 = (unsigned __int16)(7 * (~(_WORD)v2 & 0xF)
                        + 5782
                        - 960 * ((unsigned __int16)((8739 * (7 * (~v2 & 0xFu) + 5782)) >> 16) >> 7));
  v8 = STACK[0xCA6];
  LOBYTE(STACK[0xCA6]) = *(_BYTE *)(v6 + v7);
  v9 = STACK[0x700];
  v10 = ((2 * ((v9 ^ 0x2C216083u) % 0xE)) & 0x16) + (((v9 ^ 0x2C216083u) % 0xE) ^ 0xBBFF96EB);
  *(_BYTE *)(v6 + v7) = v8;
  v11 = STACK[0xCAD];
  v12 = (unsigned __int16)(7 * ((v1 ^ v5) % 0xF)
                         + 5789
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v1 ^ v5) % 0xF) + 5789)) >> 16) >> 7));
  LOBYTE(STACK[0xCAD]) = *(_BYTE *)(v6 + v12);
  *(_BYTE *)(v6 + v12) = v11;
  v13 = STACK[0xCB4];
  v14 = (unsigned __int16)(7 * v10 - 2505) % 0x3C0u;
  LOBYTE(STACK[0xCB4]) = *(_BYTE *)(v6 + v14);
  LODWORD(v12) = (v3 ^ v4) + (v2 ^ 0x4DF22D9F);
  *(_BYTE *)(v6 + v14) = v13;
  v15 = STACK[0xCBB];
  LODWORD(v7) = v1 ^ v3 ^ 0xFE977144;
  v16 = (unsigned __int16)(7 * ((v3 ^ v4) % 0xD)
                         + 5803
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * ((v3 ^ v4) % 0xD) + 5803)) >> 16) >> 7));
  v17 = *(_BYTE *)(v6 + v16);
  STACK[0x708] = v6;
  v18 = ((2 * (v7 - v12)) & 0xB53FBEFE) + ((v7 - v12) ^ 0x5A9FDF7F);
  v19 = (v1 ^ v9 ^ 0x27EE3D6B) - v18;
  v20 = STACK[0x708];
  LOBYTE(STACK[0xCBB]) = v17;
  LODWORD(v7) = ((v7 - ((2 * v7) & 0x5842C106) + 740384899) ^ v9) - 595635374;
  *(_BYTE *)(v20 + v16) = v15;
  LOBYTE(v16) = STACK[0xCC2];
  v21 = (unsigned __int16)(7 * (((int)v12 + 1297094960) % 0xCu)
                         + 5810
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (((int)v12 + 1297094960) % 0xCu)
                                                                               + 5810)) >> 16) >> 7));
  LOBYTE(STACK[0xCC2]) = *(_BYTE *)(v20 + v21);
  *(_BYTE *)(v20 + v21) = v16;
  v22 = (unsigned __int16)(7 * ((v19 + 1520426879) % 0xBu)
                         + 5817
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v19 + 1520426879) % 0xBu) + 5817)) >> 16) >> 7));
  LOBYTE(v10) = *(_BYTE *)(v20 + ((5 * ((v10 + 23) & 0x13 | (40 - v10) & 0xFFFFFFF3)) & 0x39));
  LOBYTE(STACK[0xCC9]) = *(_BYTE *)(v20 + v22);
  *(_BYTE *)(v20 + v22) = v10;
  LOBYTE(v10) = STACK[0xCD0];
  v23 = (unsigned __int16)(7 * (v7 % 0xA)
                         + 5824
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v7 % 0xA) + 5824)) >> 16) >> 7));
  LOBYTE(STACK[0xCD0]) = *(_BYTE *)(v20 + v23);
  LODWORD(v7) = ((2 * v7) & 0xF9771FFE ^ 0x1830057A) + (v7 ^ 0xF3E3DD42);
  *(_BYTE *)(v20 + v23) = v10;
  LODWORD(v23) = v12 - v19 + v7;
  v24 = v23 - 63;
  LOBYTE(v22) = STACK[0xCD7];
  v25 = (unsigned __int16)(7 * ((v18 - 1520426879) % 9u)
                         + 5831
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v18 - 1520426879) % 9u) + 5831)) >> 16) >> 7));
  LODWORD(v12) = v18 + v12 - v19 - v7 + 348908081;
  LODWORD(v14) = -(v18 - v7 + 348908081) - 223331919;
  LOBYTE(STACK[0xCD7]) = *(_BYTE *)(v20 + v25);
  v26 = v19 + v7 + 568390769 + v23 + 838337729;
  *(_BYTE *)(v20 + v25) = v22;
  v27 = (unsigned __int16)(7 * (v14 & 7)
                         + 5838
                         - 960 * ((unsigned __int16)((8739 * (7 * (v14 & 7) + 5838)) >> 16) >> 7));
  LOBYTE(v19) = STACK[0xCDE];
  LOBYTE(STACK[0xCDE]) = *(_BYTE *)(v20 + v27);
  *(_BYTE *)(v20 + v27) = v19;
  LODWORD(v27) = ((int)v23 + 1978968498) % 6u;
  LODWORD(v23) = v23 + 741060500;
  LOWORD(v25) = v23 ^ (20352 - (v18 - v7));
  v28 = (unsigned __int16)(7 * (v26 % 7)
                         + 5845
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v26 % 7) + 5845)) >> 16) >> 7));
  v29 = STACK[0xCE5];
  LOBYTE(STACK[0xCE5]) = *(_BYTE *)(v20 + v28);
  *(_BYTE *)(v20 + v28) = v29;
  LODWORD(v28) = (v23 ^ v14) - ((2 * (v23 ^ v14) + 133204722) & 0xBAA8DBC6);
  v30 = STACK[0xCEC];
  v31 = (unsigned __int16)(7 * v27
                         + 5852
                         - 960
                         * ((unsigned __int16)((8739 * (unsigned __int16)(7 * v27 + 5852)) >> 16) >> 7));
  LOBYTE(STACK[0xCEC]) = *(_BYTE *)(v20 + v31);
  *(_BYTE *)(v20 + v31) = v30;
  v32 = (unsigned __int16)(7 * (v12 % 5)
                         + 5859
                         - 960
                         * ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v12 % 5) + 5859)) >> 16) >> 7));
  v33 = v23 ^ v14 ^ v24;
  v34 = STACK[0xCF3];
  v35 = STACK[0x6D0];
  v36 = (v26 ^ 0x4B49A8FB) - v23;
  LOBYTE(STACK[0xCF3]) = *(_BYTE *)(v20 + v32);
  *(_BYTE *)(v20 + v32) = v34;
  LODWORD(v23) = 7 * (~(v28 - 515067020) & 3) + 5866;
  LOBYTE(v32) = *(_BYTE *)(v20
                         + v23 % ((((_WORD)v28 - 18596) & 0x3C0 ^ 0x1C0) + ((646 - (_WORD)v25) & 0x3C0u)));
  LOBYTE(v28) = STACK[0xCFA];
  LOBYTE(STACK[0xCFA]) = v32;
  LODWORD(v32) = v23 - 960 * ((8739 * v23) >> 23);
  LOBYTE(v31) = v32 + 2;
  *(_BYTE *)(v20
           + (((unsigned __int16)(v23 - 960 * ((unsigned __int16)((8739 * v23) >> 16) >> 7))
             - ((2 * (_DWORD)v32) & 0x65C)
             - 1128510674) ^ 0xBCBC4B2E)) = v28;
  LOBYTE(v32) = STACK[0xD01];
  v37 = (unsigned __int16)(7 * (v36 % (unint64_t)(v31 & 3 ^ 2 | v31 & 3 ^ 1)) + 5873) % 0x3C0u;
  LOBYTE(STACK[0xD01]) = *(_BYTE *)(v20 + v37);
  *(_BYTE *)(v20 + v37) = v32;
  v38 = 127;
  if ((v33 & 1) == 0)
    v38 = 120;
  v39 = STACK[0xD08];
  LOBYTE(STACK[0xD08]) = *(_BYTE *)(v20 + v38);
  *(_BYTE *)(v20 + v38) = v39;
  *(_BYTE *)(v20
           + (7 * (*(unsigned __int8 *)(v20 + 22) ^ 0xE3u) + 6244)
           % ((712 * ((unsigned __int16)a1 ^ 0x4BD) - 1888) & 0xFFF8u)) = -29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * a1) - 8))();
}

uint64_t sub_2477D9604@<X0>(int a1@<W2>, int a2@<W3>, int a3@<W8>)
{
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 + (unsigned __int16)(7 * a2 + 4220) % 0x3C0u) = a2
                                                              - ((((_BYTE)a2 << ((a3 + 28) ^ 0x3D)) - 44) & 0xC6)
                                                              + 77;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1805 * (a2 + 1 == a1 + 16)) ^ a3)) - 8))();
}

uint64_t sub_2477D9680(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  unsigned int v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  char v27;
  uint64_t v28;
  uint64_t v29;
  unsigned int v30;
  uint64_t v31;
  int v32;
  int v33;
  uint64_t v34;
  char v35;
  int v36;
  unsigned int v37;
  int v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  BOOL v47;
  uint64_t v48;
  unint64_t v49;
  char v50;
  unsigned __int8 v51;
  int v52;
  int v53;

  v15 = (unsigned __int16)(7 * (~(_WORD)v9 & 0xF)
                         + 5782
                         - ((unsigned __int16)((8739 * (7 * (~v9 & 0xFu) + 5782)) >> 16) >> 7) * v12);
  v16 = STACK[0xCA6];
  v17 = v13 + v7 - 1;
  LOBYTE(STACK[0xCA6]) = *(_BYTE *)(v14 + v15);
  *(_BYTE *)(v14 + v15) = v16;
  v18 = STACK[0xCAD];
  v19 = (unsigned __int16)(7 * (v17 % 0xF)
                         + 5789
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v17 % 0xF) + 5789)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCAD]) = *(_BYTE *)(v14 + v19);
  *(_BYTE *)(v14 + v19) = v18;
  LODWORD(v19) = (unsigned __int16)(7 * ((v8 ^ 0xEDCA8345) % 0xE)
                                  + 5796
                                  - ((unsigned __int16)((8739
                                                       * (unsigned __int16)(7 * ((v8 ^ 0xEDCA8345) % 0xE)
                                                                                        + 5796)) >> 16) >> 7)
                                  * v12)
               - ((2
                 * (7 * ((v8 ^ 0xEDCA8345) % 0xE)
                  + 5796
                  - ((8739 * (unsigned __int16)(7 * ((v8 ^ 0xEDCA8345) % 0xE) + 5796)) >> 23) * v12)) & 0x6E6)
               - 1034491021;
  v20 = v19 ^ 0xC256EB73;
  LOBYTE(v19) = *(_BYTE *)(v14
                         + (((v19 ^ 0x3DA9148C) & 0xDEBF633D | v19 & 0x33D ^ 0x331) ^ ((v19 ^ 0x3DA9148C) & 0xDEBF6319 | v19 & 0x319 ^ 0x311)));
  LOBYTE(STACK[0xCB4]) = *(_BYTE *)(v14 + v20);
  *(_BYTE *)(v14
           + (unsigned __int16)(7 * ((v8 ^ 0xEDCA8345) % 0xE)
                              + 5796
                              - ((unsigned __int16)((8739
                                                   * (unsigned __int16)(7 * ((v8 ^ 0xEDCA8345) % 0xE)
                                                                                    + 5796)) >> 16) >> 7)
                              * v12)) = v19;
  LOBYTE(v19) = STACK[0xCBB];
  v21 = (unsigned __int16)(7 * ((v6 ^ 0xB91AB1C6) % 0xD)
                         + 5803
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v6 ^ 0xB91AB1C6) % 0xD) + 5803)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCBB]) = *(_BYTE *)(v14 + v21);
  v22 = (v9 ^ 0xF026873F) + (v6 ^ 0xB91AB1C6);
  v23 = v17 + (v6 ^ 0xB91AB1C6) - 2 * ((v7 + 1760765600) & (v6 ^ 0x391AB1C6));
  v24 = ((2 * (v23 - v22)) & 0x3CEFFE72) + ((v23 - v22) ^ 0x1E77FF39);
  *(_BYTE *)(v14 + v21) = v19;
  LODWORD(v21) = ((v23 - 305495227 - ((2 * v23) & 0xDB95068A)) ^ v8) + a6;
  v25 = (v8 ^ 0xEDCA8345 ^ v17)
      - v24
      + 511180601
      - ((2 * ((v8 ^ 0xEDCA8345 ^ v17) - v24 + 511180601)) & 0xF282342C)
      - 113173994;
  v26 = v22 + 1297094960;
  v27 = STACK[0xCC2];
  v28 = (unsigned __int16)(7 * (v26 % 0xC)
                         + 5810
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * (v26 % 0xC) + 5810)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCC2]) = *(_BYTE *)(v14 + v28);
  *(_BYTE *)(v14 + v28) = v27;
  v29 = (unsigned __int16)(7 * ((v25 ^ 0xF9411A16) % 0xB)
                         + 5817
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v25 ^ 0xF9411A16) % 0xB) + 5817)) >> 16) >> 7)
                         * v12);
  LOBYTE(v17) = STACK[0xCC9];
  LOBYTE(STACK[0xCC9]) = *(_BYTE *)(v14 + v29);
  v30 = ((2 * (v26 + (v25 ^ 0x6BEE5E9) + 1)) & 0xE779BDF6) + ((v26 + (v25 ^ 0x6BEE5E9) + 1) ^ 0x73BCDEFB);
  *(_BYTE *)(v14 + v29) = v17;
  LOBYTE(v29) = STACK[0xCD0];
  v31 = (unsigned __int16)(7 * (v21 % 0xA)
                         + 5824
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v21 % 0xA) + 5824)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCD0]) = *(_BYTE *)(v14 + v31);
  v32 = (v25 ^ 0x79411A16) & (v21 ^ 0xF5852BD);
  v33 = v21 ^ 0x761948AB ^ v25;
  *(_BYTE *)(v14 + v31) = v29;
  LODWORD(v29) = ((2 * (v24 + (v21 ^ 0x70A7AD42) + 1842029005 + v30)) & 0xDBF7FF3E)
               + ((v24 + (v21 ^ 0x70A7AD42) + 1842029005 + v30) ^ 0xEDFBFF9F);
  LOWORD(v24) = 7 * ((v24 - 511180601) % 9u) + 5831;
  v34 = (unsigned __int16)(v24 - ((unsigned __int16)((8739 * (unsigned __int16)v24) >> 16) >> 7) * v12);
  v35 = STACK[0xCD7];
  v36 = (v21 ^ 0x8F5852BD) - 1941757691 + v30;
  LOBYTE(v21) = ((v21 ^ 0xBD) + 5 + v30) ^ 0x3D;
  v37 = ((2 * v36) & 0x7F7DD47A) + (v36 ^ 0xBFBEEA3D);
  v38 = v33 + 2 * v32 + v37 + 1078007235 - 1633872038 - ((2 * (v33 + 2 * v32 + v37 + 1078007235)) & 0x3D3A2EB4);
  LOBYTE(STACK[0xCD7]) = *(_BYTE *)(v14 + v34);
  LOBYTE(v30) = v29 + v30 - 2 * v29 - ((2 * (v29 + v30 - 2 * v29) + 72) & 0x44);
  *(_BYTE *)(v14 + v34) = v35;
  v39 = (unsigned __int16)(7 * (((_BYTE)v30 - 26) & 7 ^ 2)
                         + 5838
                         - ((unsigned __int16)((8739 * (7 * (((_BYTE)v30 - 26) & 7 ^ 2u) + 5838)) >> 16) >> 7) * v12);
  v40 = STACK[0xCDE];
  LOBYTE(STACK[0xCDE]) = *(_BYTE *)(v14 + v39);
  *(_BYTE *)(v14 + v39) = v40;
  LOBYTE(v39) = STACK[0xCE5];
  v41 = (unsigned __int16)(7 * ((v38 ^ 0x9E9D175A) % 7)
                         + 5845
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v38 ^ 0x9E9D175A) % 7) + 5845)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xCE5]) = *(_BYTE *)(v14 + v41);
  *(_BYTE *)(v14 + v41) = v39;
  LODWORD(v28) = ((int)v29 + 302252129) % 5u;
  v42 = (unsigned __int16)(7 * ((v37 + 1078007235) % 6)
                         + 5852
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * ((v37 + 1078007235) % 6) + 5852)) >> 16) >> 7)
                         * v12);
  LOBYTE(v31) = STACK[0xCEC];
  LOBYTE(STACK[0xCEC]) = *(_BYTE *)(v14 + v42);
  *(_BYTE *)(v14 + v42) = v31;
  LODWORD(v42) = (v38 ^ 0xD5D4BFA1) - v37 + 159900763;
  v43 = (unsigned __int16)(7 * v28
                         + 5859
                         - ((unsigned __int16)((8739 * (unsigned __int16)(7 * v28 + 5859)) >> 16) >> 7)
                         * v12);
  LOBYTE(v38) = ((v30 - 58) ^ (v37 - 57)) + 121;
  LOBYTE(v30) = STACK[0xCF3];
  LOBYTE(STACK[0xCF3]) = *(_BYTE *)(v14 + v43);
  *(_BYTE *)(v14 + v43) = v30;
  LOBYTE(v43) = STACK[0xCFA];
  v44 = (unsigned __int16)(7 * (v38 & 3) + 5866 - ((unsigned __int16)((8739 * (7 * (v38 & 3u) + 5866)) >> 16) >> 7)
                                                * v12);
  LOBYTE(STACK[0xCFA]) = *(_BYTE *)(v14 + v44);
  *(_BYTE *)(v14 + v44) = v43;
  LOBYTE(v43) = STACK[0xD01];
  v45 = (unsigned __int16)(7 * (v42 % 3)
                         + 5873
                         - ((unsigned __int16)((8739
                                              * (unsigned __int16)(7 * (v42 % 3) + 5873)) >> 16) >> 7)
                         * v12);
  LOBYTE(STACK[0xD01]) = *(_BYTE *)(v14 + v45);
  *(_BYTE *)(v14 + v45) = v43;
  v46 = STACK[0xD08];
  v47 = ((v38 ^ (v21 + 1)) & 1) == 0;
  v48 = 127;
  if (v47)
    v48 = 120;
  LOBYTE(STACK[0xD08]) = *(_BYTE *)(v14 + v48);
  *(_BYTE *)(v14 + v48) = v46;
  v49 = STACK[0x6D0];
  v50 = (16 * *(_BYTE *)(STACK[0x708] + (unsigned __int16)(6244 - 6 * v12))) ^ 0x30;
  v51 = *((_BYTE *)off_2518F0F80[v10 - 1331]
        + (135
         * (*(unsigned __int8 *)(STACK[0x708]
                               + (unsigned __int16)(13 * (v10 ^ 0x523)
                                                  + 5841
                                                  - ((unsigned __int16)(((unsigned __int16)(13 * (v10 ^ 0x523) + 5841)
                                                                       * v11) >> 16) >> 9)
                                                  * v12)) ^ 0x88 ^ (v50
                                                                                                 - ((2 * v50) & 0xC0)
                                                                                                 - 29))
         + 80595)
        % 0x3B0
        - 4);
  v52 = ((v51 ^ 0x93) >> 3) ^ ((v51 ^ 0x93) >> 1);
  v53 = 7 * (v51 ^ 0x4C ^ (~(2 * v52) + v52)) + 5782;
  *(_BYTE *)(STACK[0x708] + (unsigned __int16)(3983 - ((unsigned __int16)((3983 * v11) >> 16) >> 9) * v12)) = *(_BYTE *)(STACK[0x708] + (unsigned __int16)(v53 - ((unsigned __int16)((8739 * v53) >> 16) >> 7) * v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(v49 + 8 * v10) - 4))();
}

void sub_2477D9F14()
{
  JUMPOUT(0x2477D9DCCLL);
}

uint64_t sub_2477D9F1C(uint64_t a1, unint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  unsigned int v12;
  char v13;

  STACK[0x558] = a2;
  v7 = 7 * (((_BYTE)v3 + 3) & 0xF) + 6244;
  v8 = 7 * ((v3 + 1939) >> 4) + 6244;
  LOBYTE(v8) = (16
              * *(_BYTE *)(v6
                         + (unsigned __int16)(v8 - 960 * ((unsigned __int16)((17477 * v8) >> 16) >> 8)))) ^ 0x30;
  v9 = 135
     * (*(unsigned __int8 *)(v6
                           + (unsigned __int16)(v7 - 960 * ((unsigned __int16)((8739 * v7) >> 16) >> 7))) ^ 0xBC ^ (v8 - ((2 * v8) & 0xC0) - 29))
     + 44955;
  LOBYTE(v9) = ~*(_BYTE *)(a2 + (v9 - 944 * ((4549754 * (unint64_t)v9) >> 32)));
  v10 = 7 * (((-67 * v9) ^ ~(4 * ((-67 * v9) ^ (40 * v9)))) >> 4) + 5782;
  v11 = -1762979515 - v3 + 8 * v3;
  if (v11 >= 0xFFFFFC40)
    v11 += 960;
  v12 = v4 + v11 + (~(2 * v11) | 0xFFFFFA13) + 1;
  v13 = (16
       * *(_BYTE *)(v6 + (unsigned __int16)(v10 - 960 * ((unsigned __int16)((8739 * v10) >> 16) >> 7)))) ^ 0x30;
  *(_BYTE *)(v6 + (v12 ^ v4)) = v13 - ((2 * v13) & 0xC0) - 29;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5
                                        + 8
                                        * ((77
                                          * (((v12 ^ 0x99772D09) & 0xC6B53499 | v12 & 0x99 ^ 0x90)
                                           * ((v12 ^ 0x99772D09) & 0x5067DFA9 | v12 & 0x3A9 ^ 0x2A0)
                                           + v3
                                           - 2092554349 < 0x100)) ^ v2))
                            - 8))();
}

uint64_t sub_2477DA0E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, __int16 a6, __int16 a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  __int16 v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;

  v15 = 7 * (((_BYTE)v9 + 2) & 0xF) + v8;
  v16 = (16
       * *(unsigned __int8 *)(v14
                            + (unsigned __int16)((v7 ^ 0x2D7)
                                               - ((v9 + 2274) >> 4)
                                               + 8 * ((v9 + 2274) >> 4)
                                               + 5408
                                               - (unsigned __int16)((v7 ^ 0x2D7)
                                                                  - ((v9 + 2274) >> 4)
                                                                  + 8
                                                                  * ((v9 + 2274) >> 4)
                                                                  + 5408)
                                               / 0x3C0u
                                               * v11))) ^ 0x30;
  v17 = (v16 - (v16 >> 5 << 6) - 29) ^ *(unsigned __int8 *)(v14
                                                          + (unsigned __int16)(v15
                                                                             - ((unsigned __int16)((v15 * v10) >> 16) >> 7)
                                                                             * v11));
  v18 = 7
      * (*(unsigned __int8 *)(a2
                            + (unsigned __int16)((v17 ^ 0xF) * a6
                                               + 6750
                                               - (unsigned __int16)((v17 ^ 0xF) * a6 + 6750)
                                               / 0x3B0u
                                               * a7)) ^ (~(2 * v17) + v17) ^ 0xDB)
      + v12;
  *(_BYTE *)(v14 + (unsigned __int16)(7 * v9 + 17731 - (unsigned __int16)(7 * v9 + 17731) / 0x3C0u * v11)) = *(_BYTE *)(v14 + (unsigned __int16)(v18 - ((unsigned __int16)((v18 * v10) >> 16) >> 7) * v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(v13 + 8 * ((735 * (v9 == 890828829)) ^ v7)) - 8))();
}

uint64_t sub_2477DA220(uint64_t a1, uint64_t a2)
{
  int v2;
  int v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;

  v7 = 135
     * (*(unsigned __int8 *)(v6
                           + (unsigned __int16)(7 * v3
                                              - 1402
                                              - 960
                                              * ((unsigned __int16)(((unsigned __int16)(7 * v3 - 1402) * v4) >> 16) >> 9))) ^ 0xE7)
     + 42660;
  LOBYTE(v7) = *(_BYTE *)(a2 + (v7 - 944 * ((4549754 * (unint64_t)v7) >> 32)));
  *(_BYTE *)(v6
           + (unsigned __int16)(7 * v3
                              - 3824
                              - 960
                              * ((unsigned __int16)(((unsigned __int16)(7 * v3 - 3824) * v4) >> 16) >> 9))) = (97 - v7) ^ (~(_BYTE)v7 << 7) ^ (8 * (97 - v7)) ^ 0xFB;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v2 ^ (8 * (v3 != 1069146049)))) - 8))();
}

uint64_t sub_2477DA2E0@<X0>(uint64_t a1@<X1>, int a2@<W3>, int a3@<W8>)
{
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;

  v9 = 7
     * (*(unsigned __int8 *)(a1
                           + ((((v6 - 679643004) & 0x288287F7) + 1099832539) ^ v5) * v4
                           - ((((v6 - 679643004) & 0x288287F7) + 1099832539) ^ v5) * v4 / 0x3B0 * v3) ^ (~(2 * (v5 ^ 0xE4)) + (v5 ^ 0xE4)) ^ 0xC3);
  *(_BYTE *)(v8 + 7 * a2 - 797319410 - (7 * a2 - 797319410) / 0x3C0u * a3) = *(_BYTE *)(v8
                                                                                      + (unsigned __int16)(v9 + 5782 - ((unsigned __int16)((8739 * (v9 + 5782)) >> 16) >> 7) * a3));
  return ((uint64_t (*)(void))(*(_QWORD *)(v7 + 8 * ((4830 * (a2 == 1341036821)) ^ v6)) - 8))();
}

uint64_t sub_2477DA3F8()
{
  unsigned int v0;
  uint64_t v1;
  _BOOL4 v2;
  uint64_t v3;

  v2 = LODWORD(STACK[0x6F8]) != LODWORD(STACK[0x6F0]);
  LODWORD(STACK[0x700]) = -18046002;
  LODWORD(STACK[0x6F8]) = 446894075;
  LODWORD(STACK[0x6F0]) = 134845375;
  v3 = *(_QWORD *)(v1 + 8 * ((2331 * v2) ^ v0));
  LODWORD(STACK[0x6E8]) = (v0 - 704) | 0x29;
  LODWORD(STACK[0x6E0]) = 1003508145;
  LODWORD(STACK[0x6DC]) = 2047038626;
  return ((uint64_t (*)(uint64_t))(v3 - 12))(1192075022);
}

uint64_t sub_2477DA484()
{
  int v0;
  unsigned int v1;
  unsigned int v2;
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  unsigned int v8;
  _BOOL4 v9;
  int v10;
  unint64_t v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;

  v0 = LODWORD(STACK[0x6E8]) + 3830;
  v1 = LODWORD(STACK[0x6E4]) - 228406587;
  v2 = (-2109510243 * *(unsigned __int8 *)STACK[0x550]
      - ((75946810 * *(unsigned __int8 *)STACK[0x550] - 1577837358) & 0xD4A98C48)
      + 995021965) ^ 0xCE21D1CC;
  v3 = (((LODWORD(STACK[0x6E8]) + 1031447111) ^ 0x4CD68BA5) - 836634091 + ((v2 % 0x101) ^ v2)) ^ LODWORD(STACK[0x6F8]);
  v4 = ((2 * v3) & 0x7F5D6BDE ^ 0x251D23D6) + (v3 ^ 0x6D206404);
  v5 = v4 + 754318401;
  v6 = (v4 + 754318401) ^ 0x4CD68BA5;
  v7 = ((240710453 - v4) & 0x10002040) + ((v4 + 296160458) & 0x10002040);
  v8 = (v6 & 0xF10DA82A ^ 0x3108A020) + (v6 & 0xF10DA82A ^ 0xC005080A);
  v9 = v1 < 0xA022CA86;
  v4 = 82315691 - v4;
  v10 = (LODWORD(STACK[0x6F8]) ^ 0x528ED1EB) - v5;
  HIDWORD(v11) = v5;
  LODWORD(v11) = v5;
  v6 ^= 0xC2855C8F;
  v12 = ((v6 + (v11 >> 31)) ^ v4) + v10;
  v13 = (v12 ^ 0xA6E151A8) + v10;
  v14 = v8 - (v7 | 0x4058B15F) + v6 + (v12 ^ 0xA6E151A8) - 2 * (v8 - (v7 | 0x4058B15F));
  v15 = (v4 - ((2 * v4) & 0x812679FC) + 1083391230) ^ 0xE6726D56 ^ v12;
  HIDWORD(v11) = v12 ^ 0x26E151A8;
  LODWORD(v11) = ~v12;
  v16 = (((v11 >> 31) + 1598753077 - v14) ^ v15) - v13;
  v17 = ((2 * v16) & 0x89622112 ^ 0x88622112) + (v16 ^ 0x13888870);
  v18 = v17 - 1152454793;
  v19 = v17 - ((2 * v17 + 111009518) & 0xA560380) - 1065750217;
  HIDWORD(v11) = v19 ^ 0x52B01C0;
  LODWORD(v11) = v18;
  v20 = v13 + (v19 ^ 0xFAD4FE3F) + 1;
  v21 = (v15 - v18 - (v19 ^ (v14 - ((2 * v14 + 23719318) & 0xA560380) - 1512048501)) + (v11 >> 31)) ^ v20;
  if (v1 >= 0xA022CA86)
    v9 = v1 > 0xA022CA87;
  LODWORD(STACK[0x6F8]) = v20 ^ 0xB8DA17CF ^ (v21 - ((2 * v21 + 1499927864) & 0xD4A98C48) - 1761062720);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * ((43 * !v9) ^ v0)) - 4))();
}

void sub_2477DA818()
{
  JUMPOUT(0x2477DA538);
}

uint64_t sub_2477DA82C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  unsigned int v8;
  _BOOL4 v9;

  v8 = LODWORD(STACK[0x6E4]) - 1478271286;
  v9 = v8 < 0x55A35E8B;
  if (v8 >= 0x55A35E8B)
    v9 = v8 > 0x55A35E8C;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * ((42 * v9) ^ (a8 + 596))) - 8))();
}

void sub_2477DAB18()
{
  JUMPOUT(0x2477DA8A4);
}

uint64_t sub_2477DAB2C(int a1)
{
  int v1;
  int v2;
  int v3;
  int v4;
  unsigned int v5;
  int v6;
  _BOOL4 v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;

  v4 = v1 - 2004;
  LODWORD(STACK[0x6E0]) = ((((v4 - 363545127) ^ v3) + 1598753077) ^ 0xFE73755A)
                        + 1337850872
                        + ((2 * (((v4 - 363545127) ^ v3) + 1598753077)) & 0xFCE6EAB4);
  LODWORD(STACK[0x6DC]) = v2 + 37865302;
  v5 = LODWORD(STACK[0x6E4]) - 1290212125;
  v6 = (v4 + 682) ^ 0xAFC;
  v7 = v5 < 0x60D8ECA4;
  v8 = *(unsigned __int8 *)STACK[0x550];
  LODWORD(STACK[0x6E8]) = 33 * v6;
  v9 = (-2109510243 * v8 - ((33 * v6 - 1577837655 + 75946810 * v8) & 0xB6435488) - 1407469395) ^ 0x7F54BDAC;
  v10 = (LODWORD(STACK[0x6F0]) ^ 0x79A5BB6A) + (a1 ^ 0x892C651D) + ((v9 % 0x101) ^ v9) + 2;
  v11 = (v10 - 1228833314 - ((2 * v10) & 0x6D82FBBC)) ^ LODWORD(STACK[0x700]);
  v12 = v11 - 2 * ((v11 + 212120112) & 0x10E39CDE ^ v11 & 6);
  v13 = LODWORD(STACK[0x6F0]) ^ 0x16B9D84D ^ (v12 - 41398520);
  v14 = ((v12 - 41398520) ^ 0x6F1C6327) + 1;
  v15 = v14 + (LODWORD(STACK[0x700]) ^ 0xB6C17DDE);
  HIDWORD(v16) = (v12 - 41398520) ^ 0x10E39CD8;
  LODWORD(v16) = 41398519 - v12;
  v17 = v14 + (a1 ^ 0x76D39AE2);
  v18 = (((v16 >> 31) + v13) ^ v17) + v15;
  v19 = (v18 ^ 0xA6E151A8) + v13;
  v20 = (v17 - ((2 * v17) & 0xB9EBD3EC) - 587863562) ^ v18 ^ 0x7A14B85E;
  v21 = (v18 ^ 0xA6E151A8) + v15;
  HIDWORD(v16) = v18 ^ 0x26E151A8;
  LODWORD(v16) = ~v18;
  v22 = (((v16 >> 31) - v19) ^ v20) - v21;
  v23 = v22 ^ v19;
  v24 = (v22 ^ 0xA8C66706) + v21 + 1;
  HIDWORD(v16) = v22 ^ 0x573998F9;
  LODWORD(v16) = v22;
  v25 = v20 + (v22 ^ 0xA8C66706) + 2;
  v26 = (v25 + (v16 >> 31) + (v23 ^ 0x573998F9) + ((2 * v23) ^ 0x518CCE0D)) ^ v24;
  v27 = v26 - ((2 * v26 + 1499927864) & 0xAD81B464) + 57959630;
  if (v5 >= 0x60D8ECA4)
    v7 = v5 > 0x60D8ECA5;
  LODWORD(STACK[0x6F0]) = v23 ^ 0x87A3065E ^ v27;
  LODWORD(STACK[0x700]) = v24 ^ 0xE001A7EC ^ v27;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6D0] + 8 * ((v4 - 1163) | (8 * v7))) - 12))((v27 ^ 0xA93F25CD) + v25 + 1993579234 - ((2 * ((v27 ^ 0xA93F25CD) + v25)) & 0xEDA735C4));
}

void sub_2477DAEBC()
{
  JUMPOUT(0x2477DAC54);
}

uint64_t sub_2477DAEC8()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  uint64_t (*v4)(void);

  LODWORD(STACK[0x3B0]) = 0;
  v1 = LODWORD(STACK[0x6E8]) ^ 0xC28;
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x6E4]) + 660302250 + v1;
  LODWORD(STACK[0x3BC]) = 241014033;
  v2 = STACK[0x3C0];
  LODWORD(STACK[0x320]) = LODWORD(STACK[0x3C0]) - 514099801;
  v3 = (v2 + 1356130378) & 0xAF2B0FCE;
  LODWORD(STACK[0x3B4]) = v3;
  LODWORD(STACK[0x3B8]) = v3 ^ 0xD6C75946;
  LODWORD(STACK[0x340]) = -1331757893;
  LODWORD(STACK[0x32C]) = 43198739;
  LODWORD(STACK[0x3A4]) = -1322174508;
  LODWORD(STACK[0x330]) = 1310256421;
  LODWORD(STACK[0x35C]) = -298594262;
  LODWORD(STACK[0x348]) = -2040784464;
  LODWORD(STACK[0x388]) = -838790918;
  LODWORD(STACK[0x36C]) = -252808738;
  LODWORD(STACK[0x358]) = -1144621578;
  LODWORD(STACK[0x328]) = -477971833;
  LODWORD(STACK[0x354]) = 420257902;
  LODWORD(STACK[0x324]) = -117379957;
  LODWORD(STACK[0x34C]) = 1557518993;
  LODWORD(STACK[0x3A0]) = -362001726;
  LODWORD(STACK[0x378]) = -1472266855;
  LODWORD(STACK[0x364]) = -865457410;
  LODWORD(STACK[0x360]) = -1371013197;
  LODWORD(STACK[0x334]) = 503944773;
  LODWORD(STACK[0x39C]) = 1289378723;
  LODWORD(STACK[0x338]) = 1410063808;
  LODWORD(STACK[0x380]) = 1946549578;
  LODWORD(STACK[0x374]) = -1885162667;
  LODWORD(STACK[0x394]) = 1360854460;
  LODWORD(STACK[0x37C]) = -1357003413;
  LODWORD(STACK[0x344]) = -606603463;
  LODWORD(STACK[0x350]) = -1564747524;
  LODWORD(STACK[0x368]) = 10468061;
  LODWORD(STACK[0x384]) = -1103399541;
  LODWORD(STACK[0x3D0]) = 52;
  LODWORD(STACK[0x33C]) = -1607536199;
  LODWORD(STACK[0x398]) = -1891162005;
  LODWORD(STACK[0x370]) = 199389740;
  v4 = (uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * (v1 ^ 2)) - 8);
  LODWORD(STACK[0x3A8]) = 1491771676;
  return v4();
}

uint64_t sub_2477DB52C(uint64_t a1, uint64_t a2, int a3, int a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  char v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  BOOL v72;
  unsigned int v73;
  unsigned int v74;
  char v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  int v151;
  int v152;
  int v153;
  int v154;
  int v155;
  unsigned int v156;
  int v157;
  int v158;
  char v159;
  char v160;
  int v161;
  int v162;
  int v163;
  int v164;
  int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  char v180;
  char v181;
  unsigned __int8 v182;
  int v183;
  char v184;
  char v185;
  int v186;
  int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  char v200;
  int v201;
  char v202;
  char v203;
  char v204;
  int v205;
  char v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  char v220;
  char v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  char v225;
  char v226;
  char v227;
  char v228;
  int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  unsigned int v235;
  int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  char v240;
  int v241;
  int v242;
  unsigned int v243;
  int v244;
  char v245;
  int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  int v254;
  int v255;
  int v256;
  int v257;
  int v258;
  int v259;
  unsigned int v260;
  int v261;
  unint64_t v262;
  unsigned int v263;
  int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  int v281;
  int v282;
  unsigned int v283;
  int v284;
  int v285;
  int v286;
  unsigned int v287;
  int v288;
  int v289;
  unsigned int v290;
  int v291;
  int v292;
  unsigned int v293;
  unsigned int v294;
  unsigned int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;

  v16 = (v8 + 1153780770) & 0xBB3AA7DF;
  v17 = v11 - v7;
  v18 = v6 - (v11 - v7);
  v19 = a3 - (a6 - v9) + 1717632985;
  v20 = v10 - v18;
  v21 = v10 - (v6 - v11);
  v22 = v21 + 1326681039;
  v23 = v17 - v21 + (v16 ^ 0x5D364997);
  v24 = a4 - (a3 - a6 + 1717632985) + 731752918;
  v25 = -v9 - (a4 - (a3 + 1717632985) + 731752918) + 625390904;
  v26 = a4 - v19 - 1390509810;
  v27 = v19 - 656333699 + v25;
  v28 = v20 - 1997144484;
  v29 = v18 + 936352418 + v23;
  v30 = (v6 + 44) ^ 0xFE;
  v31 = a3 ^ 0x117C41F7;
  LODWORD(STACK[0x530]) = v29 - 985740782;
  LODWORD(STACK[0x52C]) = a4 - v19 - 174084161;
  v32 = v29 - (v20 - 1997144484) + 2005297546;
  LODWORD(STACK[0x620]) = 1345952567 - v22 - ((-1469940718 - 2 * v22) & ((v16 ^ 0x9E5) - 133124239));
  LODWORD(STACK[0x528]) = v23 + 2007039983;
  LODWORD(STACK[0x53C]) = -1282378919 - v20;
  LODWORD(STACK[0x61C]) = 400680620 - v25 - ((1791520296 - 2 * v25) & 0x44FB5F30);
  v33 = (v25 - 1616937618) & 0xA0B4F6CB;
  LODWORD(STACK[0x54C]) = a4 - (a3 - a6 + 1717632985) + 2135897703;
  v34 = v28 - v22;
  LODWORD(STACK[0x610]) = 738166854 - v27 - ((-1497751952 - 2 * v27) & 0xB144F21C);
  v35 = v27 + v25 + 1717425759;
  v36 = v27 - v26 - 599537845;
  v32 ^= 0x24AF81B7u;
  v37 = v23 - 1227310090 + v29 + v33 + (v33 ^ 0xA0B4F6CB) + 781962017;
  v38 = v37 - ((2 * v37) & 0x64DB2946) - 1301441373;
  v39 = ((2 * v38) & 0xF3536D70 ^ 0xE0522520) + (v38 ^ 0x8980AC6A);
  LODWORD(STACK[0x534]) = v22 - 186767129;
  LODWORD(STACK[0x544]) = -547527091 - (a4 - (a3 - a6 + 1717632985));
  v40 = ((2 * v35) & 0xFFF77BB2 ^ 0x848118A2) + (v35 ^ 0xBDBF33A8);
  LODWORD(STACK[0x540]) = -537789218 - v32 - ((61817154 - 2 * v32) & v12);
  v41 = v34 - v39 - 1528391833;
  v42 = v26 - v24;
  v36 ^= 0x24AF81B7u;
  LODWORD(STACK[0x628]) = -1541108192 - v42 - ((-2130803944 - 2 * v42) & 0xC74A9928);
  LODWORD(STACK[0x538]) = v36 - 55428086;
  v43 = v32 + v41 + 1800206650;
  LODWORD(STACK[0x548]) = v40 + 1084174493;
  LODWORD(STACK[0x524]) = v34 + 755575261;
  v44 = v40 + v24;
  v45 = v39 + v22;
  LODWORD(STACK[0x3AC]) = v40;
  v46 = v42 - v40 + 1306180077;
  v47 = (v38 ^ 0x49CC9A1E) + ((2 * v38) & 0xBE96126A ^ 0x2C060243) - v45 + 1;
  v48 = v47 - ((2 * v47 + 2086442026) & 0xA078D5D6) + 241874176;
  v49 = (v35 ^ 0xA4EA0788) - v44 + 832386285 - ((2 * ((v35 ^ 0xA4EA0788) - v44 - 1421676456)) & 0xCB4892A);
  LODWORD(STACK[0x624]) = 810447327 - v39 - ((-561858802 - 2 * v39) & 0x821A2CB0);
  v50 = v44 - 2 * ((v44 + 1004201298) & 0x36C17DDF ^ v44 & 1) - 224632016;
  v51 = v45 - ((2 * v45 - 1823931204) & 0xA51DA3D6) + 473125961;
  v52 = v46 ^ 0xF089DE77 ^ v49;
  v53 = v46 + v36 - 2 * ((v46 + v36 + 364821632) & (v13 + 8) ^ (v46 + v36) & 8) + 1567501367;
  LODWORD(STACK[0x520]) = 973718980;
  LODWORD(STACK[0x3DC]) = 691578424;
  LODWORD(STACK[0x700]) = v16 ^ 0x9E5;
  v54 = 3 * (v16 ^ 0xA9);
  LODWORD(STACK[0x6DC]) = v54;
  LODWORD(STACK[0x6E4]) = v16 ^ 0x9FB;
  v55 = v31 ^ v53;
  LOBYTE(v36) = v30 ^ (v43 + (v54 ^ 0xA7) - ((2 * v43 - 116) & 0x18));
  LOBYTE(STACK[0xCA6]) = v36 ^ 0x76;
  v56 = v41 ^ 0x2FAA85CC ^ v48;
  v57 = v56 ^ 0x7F96EF27;
  v58 = (v56 ^ 0x7F96EF27) + (v48 ^ ((v16 ^ 0x9FB) + 1346134006));
  LOBYTE(v36) = (v36 - 21 - ((2 * v36) & 0xD6)) ^ (v47 - ((2 * v47 + 42) & 0xD6));
  LOBYTE(STACK[0xE74]) = (v55 ^ 0x84) - ((2 * v55) & 0xC7) - 29;
  v59 = ((v55 ^ 0x56D32E84) - 2040904555 - 2 * ((v55 ^ 0x56D32E84) & 0x65A449F ^ v55 & 0xA)) ^ v49;
  LOBYTE(STACK[0xE7B]) = v59 - ((2 * v59) & 0xC7) - 29;
  v60 = (v52 ^ 0x76D39AE2) + (v49 ^ 0x865A4495);
  v61 = (v59 + 1993579234 - ((2 * v59) & 0xEDA735C4)) ^ v52;
  LOBYTE(v49) = (v36 + 39 - ((2 * v36) & 0x4E)) ^ v56;
  LOBYTE(v40) = (v49 + v15 - ((2 * v49) & 0xD6)) ^ v51;
  v62 = v58 + v57 - 115339833 - ((2 * (v58 + v57)) & 0xF2401B8E);
  LOBYTE(STACK[0xCB4]) = v49 ^ 0x76;
  LOBYTE(STACK[0xCAD]) = v36 ^ 0x76;
  v63 = (v51 ^ v15) - v58 + (v62 ^ 0x6DFF238);
  LOBYTE(STACK[0xE82]) = v61 - ((2 * v61) & 0xC7) - 29;
  v64 = (v61 - 1228833314 - ((2 * v61) & 0x6D82FBBC)) ^ v50;
  v65 = v56 ^ 0x806910D8;
  v66 = (v53 ^ 0x47AF6FB7) + (v52 ^ 0x892C651D) + 1196511587;
  LOBYTE(STACK[0xE89]) = v64 - ((2 * v64) & 0xC7) - 29;
  v67 = v60 + (v52 ^ 0x76D39AE2) - 476190668 - ((2 * (v60 + (v52 ^ 0x76D39AE2))) & 0xC73BD068);
  v68 = v64 ^ v66;
  LOBYTE(STACK[0xE90]) = v68 - ((2 * v68) & 0xC7) - 29;
  v69 = (v68 - 476190668 - ((2 * v68) & 0xC73BD068)) ^ v67;
  v70 = (v56 ^ 0x806910D8) + v43 - 238873431;
  LOBYTE(STACK[0xCBB]) = v40 ^ 0x76;
  LOBYTE(v40) = v40 ^ v70;
  LOBYTE(STACK[0xE97]) = ((v68 + 52 - ((2 * v68) & 0x68)) ^ (v60
                                                           + (v52 ^ 0xE2)
                                                           + 52
                                                           - ((2 * (v60 + (v52 ^ 0xE2))) & 0x68)))
                       - ((2
                         * ((v68 + 52 - ((2 * v68) & 0x68)) ^ (v60
                                                             + (v52 ^ 0xE2)
                                                             + 52
                                                             - ((2 * (v60 + (v52 ^ 0xE2))) & 0x68)))) & 0xC7)
                       - 29;
  v71 = ((2 * (v62 ^ v56)) & 0xC1FBAFB4 ^ 0x1698580) + (v62 ^ v56 ^ 0xE64B353A);
  v72 = LODWORD(STACK[0x560]) == -719620500;
  ++v63;
  v73 = (v69 + 1993579234 - ((2 * v69) & 0xEDA735C4)) ^ v52;
  LOBYTE(v62) = (v40 - 57 - ((2 * v40) & 0x8E)) ^ v62;
  v74 = (v67 ^ 0x1C6217CB) - v60 + (v50 ^ 0xB6C17DDE) + 1;
  LOBYTE(v56) = (v62 + 39 - ((2 * v62) & 0x4E)) ^ v56;
  LOBYTE(STACK[0xE9E]) = v73 - ((2 * v73) & 0xC7) - 29;
  v75 = v56 ^ v63;
  v76 = v65 + v63 + 1;
  LOBYTE(STACK[0xCC2]) = v40 ^ 0x76;
  LOBYTE(STACK[0xCC9]) = v62 ^ 0x76;
  v77 = v70 - v76;
  v78 = v73 ^ v74;
  v79 = (v52 ^ 0x892C651D) + v74 + 1;
  v80 = v66 - v79;
  LOBYTE(STACK[0xCD0]) = v56 ^ 0x76;
  v81 = v76 - (v70 - v76) - 1146236133 - ((2 * (v76 - (v70 - v76))) & 0x775BA636);
  v82 = v52 ^ 0x954E72D6 ^ v67;
  v83 = v79 - v80 + 1329263342 - ((2 * (v79 - v80)) & 0x9E75E5DC);
  v84 = v81 ^ 0xBBADD31B;
  LOBYTE(STACK[0xEA5]) = v78 + (~(2 * v78) | 0x39) - 28;
  v85 = v57 - 2068978999 + (v81 ^ 0xBBADD31B) + 513577663 - ((2 * (v57 - 2068978999 + (v81 ^ 0xBBADD31B))) & 0x3D39257E);
  v86 = v78 ^ (v80 - 1620707570);
  LOBYTE(STACK[0xCD7]) = v75 ^ 0x76;
  LOBYTE(STACK[0xEAC]) = v86 - ((2 * v86) & 0xC7) - 29;
  LOBYTE(v40) = (v71 - 60 + (~(2 * v71 - 90) | 0x1F)) ^ v75 ^ (v77 + 14);
  v87 = v86 ^ (v82 - 2080828115);
  LOBYTE(STACK[0xEB3]) = v87 - ((2 * v87) & 0xC7) - 29;
  v88 = v83 ^ 0x4F3AF2EE;
  v89 = (v52 ^ 0x76D39AE2) - 2068978999 + (v83 ^ 0x4F3AF2EE);
  LOBYTE(v56) = (((v75 ^ (v77 + 14)) & 8 | 0x95) ^ (v75 ^ (v77 + 14)) & 0xF7)
              - ((2 * (((v75 ^ (v77 + 14)) & 8 | 0x95) ^ (v75 ^ (v77 + 14)) & 0xF7)) & 0xC7)
              - 29;
  LOBYTE(v62) = ((v40 ^ 0x70) - 65 - ((2 * (v40 ^ 0x70)) & 0x7E)) ^ v85;
  v90 = v85 ^ 0xFA860428;
  LOBYTE(STACK[0xCDE]) = v56;
  v91 = v87 ^ v89;
  LOBYTE(STACK[0xCE5]) = v40 ^ 6;
  v92 = (v77 - ((2 * (v77 - 1620707570)) & 0x775BA636) + 1528023593) ^ v81;
  LOBYTE(STACK[0xEBA]) = v91 - ((2 * v91) & 0xC7) - 29;
  v93 = v71 - (v85 ^ 0xFA860428) - 1828892083 - ((2 * (v71 - (v85 ^ 0xFA860428) + 2079626083)) & 0x2E117DD4);
  v94 = (v80 - ((2 * (v80 - 1620707570)) & 0x9E75E5DC) - 291444228) ^ v83;
  LOBYTE(v81) = (v62 + 27 - ((2 * v62) & 0x36)) ^ v81;
  v95 = (v91 + 1329263342 - ((2 * v91) & 0x9E75E5DC)) ^ v83;
  v96 = (v92 + 513577663 - ((2 * v92) & 0x3D39257E)) ^ 0xE41A9697 ^ v85;
  LOBYTE(STACK[0xCF3]) = v81 ^ 0x76;
  v97 = v94 ^ v89;
  v98 = v94 ^ v89 ^ 0xDEE2F6D6;
  LOBYTE(v40) = v62 ^ 0x76;
  v99 = v90 + 1965514907;
  LOBYTE(STACK[0xCEC]) = v40;
  LOBYTE(STACK[0xEC1]) = v95 - ((2 * v95) & 0xC7) - 29;
  v100 = (v89 ^ 0x1BE56968) + v82 - ((2 * ((v89 ^ 0x1BE56968) + v82) - 1176185220) & 0x9DFAED84) + 737141248;
  v101 = (v95 + 989356097 - ((2 * v95) & 0x75F0C082)) ^ v98;
  LOBYTE(v81) = v81 ^ v96;
  LOBYTE(STACK[0xEC8]) = v101 - ((2 * v101) & 0xC7) - 29;
  v102 = v100 ^ 0x4EFD76C2;
  v103 = v88 + 222383983 + (v100 ^ 0x4EFD76C2);
  LOBYTE(STACK[0xD01]) = (v81 - 22 - ((2 * v81) & 0xD4)) ^ v93 ^ 0x76;
  LOBYTE(STACK[0xD08]) = (v81 - 22 - ((2 * v81) & 0xD4)) ^ v93 ^ v99 ^ 0x76;
  v104 = v84 + 222383983 + (v93 ^ 0x1708BEEA);
  LOBYTE(v40) = (v81 - 22 - ((2 * v81) & 0xD4)) ^ v93 ^ v99 ^ v104;
  v105 = (v101 + 1325233858 - ((2 * v101) & 0x9DFAED84)) ^ v100;
  v106 = v104 ^ v93;
  LOBYTE(STACK[0xCFA]) = v81 ^ 0x76;
  v107 = v89 ^ 0xE41A9697;
  LOBYTE(STACK[0xECF]) = v105 - ((2 * v105) & 0xC7) - 29;
  v108 = v105 ^ ((v89 ^ 0xE41A9697) + 1965514907);
  LOBYTE(STACK[0xED6]) = v108 - ((2 * v108) & 0xC7) - 29;
  v109 = v108 ^ v103;
  v110 = ((2 * (v103 ^ v100)) & 0xE50BEE5C ^ 0x850AEC04) + (v103 ^ v100 ^ 0xBC7881EC);
  v111 = v106 ^ 0x1708BEEA;
  v112 = (v106 ^ 0x1708BEEA) + v99;
  LOBYTE(STACK[0xD0F]) = v40 ^ 0x76;
  v113 = v110 + v107;
  v114 = v96
       - 369504901
       * (v97 & 0x21074043 ^ 0x1054040 | v97 & 0x21074043 ^ 0x20020003 | ((v106 & 0x209260CA ^ 0x20CA)
                                                                        + (v106 & 0x209260CA ^ 0x20924000)));
  LOBYTE(v40) = v40 ^ (v114 + 119);
  LOBYTE(STACK[0xEDD]) = v109 - ((2 * v109) & 0xC7) - 29;
  v110 += 226101458;
  v115 = (v106 ^ 0x1708BEEA) + (v93 ^ 0x1708BEEA);
  v116 = (v109 + 989356097 - ((2 * v109) & 0x75F0C082)) ^ v98;
  v117 = v97 ^ 0xE41A9697;
  v118 = v97 ^ 0xE41A9697 ^ (v113 - 2103350931);
  v119 = (v114 - 1152454793) ^ v112;
  v120 = v110 + v102 - ((2 * (v110 + v102) - 614083518) & 0xD5E9B5F8) - 660093667;
  LOBYTE(STACK[0xEE4]) = v116 - ((2 * v116) & 0xC7) - 29;
  v121 = v119 ^ 0xB79F6164;
  LOBYTE(v112) = v40 ^ (v115 + 33);
  v122 = (v116 - 353051908 - ((2 * v116) & 0xD5E9B5F8)) ^ v120;
  LOBYTE(STACK[0xD16]) = v40 ^ 0x76;
  LOBYTE(v48) = (v112 + 100 - ((2 * v112) & 0xC8)) ^ v119 ^ 0x64;
  v123 = v119 + v111;
  v124 = (v114 - ((2 * v114 + 1990057710) & 0x6F3EC2C8) + 1928220891) ^ v121;
  LOBYTE(STACK[0xEEB]) = v122 - ((2 * v122) & 0xC7) - 29;
  v125 = v118 + v110;
  v126 = v122 ^ v118;
  LOBYTE(v118) = v48 ^ 0x76;
  LOBYTE(v48) = v48 ^ v123;
  LOBYTE(v107) = v48 ^ 0xBB;
  LOBYTE(STACK[0xD1D]) = v112 ^ 0x76;
  LOBYTE(STACK[0xEF2]) = v126 - ((2 * v126) & 0xC7) - 29;
  v127 = v115 - 307041759 - v124;
  LOBYTE(STACK[0xD24]) = v118;
  v128 = (v120 ^ 0xEAF4DAFC) - v113;
  v129 = v126 ^ v125;
  v130 = v114 + (((v71 + 38160008) ^ (2109323639 - v71)) & 0x49BF8602);
  LOBYTE(STACK[0xD2B]) = v48 ^ 0x76;
  v131 = v117 - ((2 * v117 + 68836958) & 0x4E67032A) - 1455378236;
  v132 = (v97 ^ 0x1BE56968) - v113 - 1664145063 + v125;
  LOBYTE(STACK[0xEF9]) = v129 ^ 0xE3;
  LOBYTE(STACK[0xF00]) = (v129 ^ v131 ^ 0x95) - 2 * ((v129 ^ v131 ^ 0x95) & 0x6B ^ (v129 ^ v131) & 8) - 29;
  v133 = 2 * v128 - 88265434;
  v134 = v128 - (v133 & 0x4E67032A);
  v135 = (v128 - (v133 & 0x47F4E5EE) - 1588000374) ^ 0x23FA72F7 ^ v129;
  LOBYTE(STACK[0xF07]) = v135 - ((2 * v135) & 0xC7) - 29;
  v136 = (v134 - 1533929432) ^ v131;
  LOBYTE(STACK[0xD32]) = v107 ^ (v130 - ((2 * (v130 - 92)) & 0x77) + 95) ^ 0x76;
  v137 = (v135 - 353051908 - ((2 * v135) & 0xD5E9B5F8)) ^ v120;
  LOBYTE(v129) = v107 ^ (v115 + 33 - v124 - 69 - ((2 * (v115 + 33 - v124)) & 0x76));
  v138 = ((2 * ((v120 ^ 0xEAF4DAFC) + (v131 ^ 0x27338195))) & 0xCDEF5FBA)
       + (((v120 ^ 0xEAF4DAFC) + (v131 ^ 0x27338195)) ^ 0xE6F7AFDD);
  LOBYTE(STACK[0xF0E]) = v137 - ((2 * v137) & 0xC7) - 29;
  LOBYTE(v125) = v129 ^ (v115 + 33);
  v139 = v123 - v130 - v124 - 1377752752;
  v140 = v137 ^ v132;
  v141 = v130 + v115;
  LOBYTE(STACK[0xF15]) = (v137 ^ v132) - ((2 * (v137 ^ v132)) & 0xC7) - 29;
  LOBYTE(STACK[0xD40]) = v125 ^ 0x76;
  LOBYTE(v125) = v125 ^ v139;
  v142 = (v127 ^ (v130 - 207841116)) - v141;
  v143 = v142 + v139 - v141;
  v144 = v136 - v138;
  v145 = ((2 * ((v141 - 514882875) ^ (v130 + 822548785))) & 0x7FB57DFE)
       + ((v141 - 514882875) ^ (v130 + 822548785) ^ 0x3FDABEFF);
  LOBYTE(STACK[0xD39]) = v129 ^ 0x76;
  v146 = v130 - 2110394638 + v143;
  v147 = v144 + v132 - v138;
  v148 = ((2 * ((v138 + 419975203) ^ (v117 - 1082675268))) & 0xD7DB9FEE)
       + ((v138 + 419975203) ^ (v117 - 1082675268) ^ 0xEBEDCFF7);
  v149 = v117 - 1590367551 + v147;
  v150 = v140 ^ v149;
  LOBYTE(STACK[0xF1C]) = v150 - ((2 * v150) & 0xC7) - 29;
  LOBYTE(STACK[0xD47]) = v125 ^ 0x76;
  LOBYTE(v129) = v125 ^ v146 ^ (v142 - 122) ^ (v145 + 1);
  v151 = v150 ^ (v144 - 87717080);
  LOBYTE(v150) = (v150 ^ (v144 + 40)) - ((2 * (v150 ^ (v144 + 40))) & 0xC7) - 29;
  LOBYTE(STACK[0xD55]) = v125 ^ v146 ^ (v142 - 122) ^ 0x76;
  LOBYTE(STACK[0xD4E]) = v125 ^ v146 ^ 0x76;
  v144 -= 144688627;
  LOBYTE(STACK[0xF23]) = v150;
  v152 = v151 ^ (v148 + 336736265);
  LOBYTE(STACK[0xF2A]) = v152 - ((2 * v152) & 0xC7) - 29;
  v153 = v152 ^ (v147 - 507692283);
  v154 = (1071300351 - v145 + v146) ^ (v142 + 790169451);
  LOBYTE(STACK[0xF31]) = v153 + (~(2 * v153) | 0x39) - 28;
  v155 = (-336736265 - v148 + v149) ^ v144;
  LOBYTE(v151) = v129 ^ 0x76;
  LOBYTE(v129) = v129 ^ (v143 - 63);
  v156 = v145 - 855842932 + v142;
  LOBYTE(STACK[0xD5C]) = v151;
  v157 = v153 ^ v155;
  LOBYTE(STACK[0xD63]) = v129 ^ 0x76;
  LOBYTE(v129) = v129 ^ v154;
  v158 = v143 - v145 + 993990281;
  LOBYTE(v142) = v129 ^ 0x76;
  LOBYTE(v129) = v129 ^ v156;
  LOBYTE(STACK[0xD6A]) = v142;
  v159 = v129 ^ (v145 + 13);
  v160 = v159 ^ v158;
  v161 = v144 + v148 - 237975767;
  LOBYTE(STACK[0xF38]) = v157 - ((2 * v157) & 0xC7) - 29;
  LOBYTE(STACK[0xD71]) = v129 ^ 0x76;
  v162 = v157 ^ v161;
  v163 = v154 + v145;
  LOBYTE(STACK[0xF3F]) = v162 - ((2 * v162) & 0xC7) - 29;
  v164 = v162 ^ (v148 + 654472213);
  LOBYTE(STACK[0xF46]) = v164 - ((2 * v164) & 0xC7) - 29;
  v165 = v155 + v148 - ((2 * (v155 + v148) + 534119154) & 0x3F96EB7A);
  v166 = v158 + v145 - 753564403;
  v167 = v154 + v145 + 1543377521;
  v168 = v167 + v166 - 472820720 - ((2 * (v167 + v166)) & 0xC7A2A820);
  LOBYTE(STACK[0xD7F]) = v160 ^ 0x76;
  v169 = v72;
  v170 = v147 - v148 + 2011204805;
  v171 = v165 - 810125514;
  v172 = v164 ^ v170;
  LOBYTE(STACK[0xD78]) = v159 ^ 0x76;
  v173 = v170 + v148 + 654472213;
  v174 = v163 + 280026855 * (((v168 & 0x107238A4 ^ 0x501000) + (v168 & 0x107238A4 ^ 0x102228A4)) ^ 0xEC6D1055);
  v175 = v173 ^ v161;
  LOBYTE(STACK[0xF4D]) = v172 - ((2 * v172) & 0xC7) - 29;
  v176 = (v172 + 533427645 - ((2 * v172) & 0x3F96EB7A)) ^ v171;
  v177 = (v171 ^ 0x1FCB75BD) + v173;
  v178 = v148 - 1320841491 + v175;
  v179 = v145 + 1566089189 + (v166 ^ v156);
  v180 = v160 ^ v167;
  v181 = v180 ^ v179;
  LOBYTE(STACK[0xF54]) = v176 + (~(2 * v176) | 0x39) - 28;
  LOBYTE(STACK[0xD86]) = v180 ^ 0x76;
  v182 = v180 ^ v179 ^ 0x68 | v180 ^ v179 ^ 0x95;
  v183 = v176 ^ v178;
  v184 = v180 ^ v179 ^ (v145 + 66);
  *(_BYTE *)(v14 + (v182 & 0xFD)) = v181 ^ 0x76;
  v185 = (v184 + 16 - ((2 * v184) & 0x20)) ^ v168;
  LOBYTE(STACK[0xF5B]) = v183 - ((2 * v183) & 0xC7) - 29;
  v186 = v183 ^ (v148 + 886480458);
  LOBYTE(STACK[0xF62]) = v186 + (~(2 * v186) | 0x39) - 28;
  LOBYTE(STACK[0xD94]) = v184 ^ 0x76;
  LOBYTE(STACK[0xD9B]) = v185 ^ 0x76;
  v187 = v186 ^ v177;
  LOBYTE(STACK[0xF69]) = v187 + (~(2 * v187) | 0x39) - 28;
  v188 = v179 + v163;
  v189 = (v171 ^ 0x1FCB75BD) + v178;
  v190 = (v177 + 533427645 - ((2 * v177) & 0x3F96EB7A)) ^ v171;
  v191 = v154 + v188;
  v192 = v148 + 1199472954;
  v193 = v191 + 1751941183;
  v194 = v188 + v145;
  v195 = v189 + (v171 ^ 0x1FCB75BD) - v192;
  v196 = v187 ^ v195;
  LOBYTE(STACK[0xF70]) = v196 - ((2 * v196) & 0xC7) - 29;
  v197 = ((v174 - 2071955702 - ((2 * (v174 - 1599134982)) & 0xC7A2A820)) ^ v168) - (v191 + 1751941183);
  v198 = v197 - ((2 * v197 + 1208212254) & 0x9013C7AA) + 1812713828;
  v189 -= 2146437509;
  v199 = v189 + v192;
  v200 = v185 ^ (v191 - 80);
  v201 = v196 ^ v189;
  v202 = v200 ^ (v188 - 20);
  LOBYTE(STACK[0xF77]) = v201 - ((2 * v201) & 0xC7) - 29;
  LOBYTE(STACK[0xDA9]) = v202 ^ 0x76;
  v203 = v202 ^ (v188 + v145 + 30);
  LOBYTE(v171) = v200 ^ 0x76;
  v204 = v203 ^ v198;
  v205 = v201 ^ v199;
  v206 = (v201 ^ v199) - ((2 * (v201 ^ v199)) & 0xC7) - 29;
  v207 = v190 - v195;
  v208 = v198 ^ (v188 - ((2 * v188 + 1883462170) & 0x9013C7AA) - 2144628510);
  v209 = ((2 * v198) & 0xFFB7D878 ^ 0x2434C858) + (v198 ^ 0xEDE59A10);
  LOBYTE(STACK[0xDA2]) = v171;
  v210 = v199 - v195;
  LOBYTE(STACK[0xF7E]) = v206;
  LOBYTE(v199) = v203 ^ v198 ^ 0xA3;
  v211 = v191 + 1731500770;
  LOBYTE(v191) = v203 ^ 0x76;
  v212 = v205 ^ (v190 - v195);
  LOBYTE(STACK[0xF85]) = v212 ^ 0xE3;
  LOBYTE(STACK[0xDB7]) = v199;
  v213 = v194 - v193;
  v214 = v208 ^ v211;
  LOBYTE(STACK[0xDB0]) = v191;
  v215 = v195 - 1563817934;
  v216 = ((2105312416 - v209) & 0xDC13A421) + v189 + ((v209 - 2105312417) & 0xDC13A421);
  v217 = (v190 - v195) ^ 0x2CEE9391 ^ (v216 - ((2 * v216) & 0xEDB20CD0) - 153549208);
  v218 = v217 ^ (v195 - 1563817934);
  LOBYTE(v171) = (v212 ^ v217 ^ (v195 + 50)) - ((2 * (v212 ^ v217 ^ (v195 + 50))) & 0xC7);
  LOBYTE(v205) = (v208 ^ v211 ^ v204 ^ 0x2C) - ((2 * (v208 ^ v211 ^ v204 ^ 0x2C)) & 0x2A);
  v219 = (v209 - 2105312417) ^ (v213 + 1939966125);
  LOBYTE(STACK[0xF8C]) = v171 - 29;
  v220 = v204 ^ v211;
  v221 = v204 ^ v211 ^ 0xC0;
  v222 = ((v207 ^ 0xDA3795F9) - 2107676773) ^ v210;
  LOBYTE(v188) = v212 ^ v215;
  v223 = v212 ^ v215 ^ 0xC11F141C;
  LOBYTE(STACK[0xF93]) = v188 ^ 0xE3;
  LOBYTE(STACK[0xDBE]) = v205 - 107 - ((2 * (v205 - 107)) & 0xC7) - 29;
  v224 = 2 * v219;
  if ((v220 & 0x10) != 0)
    v225 = 16;
  else
    v225 = -16;
  v226 = v225 + (v220 ^ 0xD5);
  v227 = v223 ^ (v222 - ((2 * v222) & 0x38) + 28);
  v228 = v221 ^ (v213 - ((2 * (v213 - 83)) & 0x2A) - 62);
  LOBYTE(STACK[0xDCC]) = v221 ^ 0x76 ^ (((v209 + 95) ^ (v213 - 83)) - (v224 & 0x2A) + 21);
  LOBYTE(STACK[0xDC5]) = v226 ^ 0x66;
  v229 = v209 - ((2 * v209 + 654730312) & 0x47F5737E) + 930999267;
  LOBYTE(STACK[0xF9A]) = v227 - ((2 * v227) & 0xC7) - 29;
  v230 = (v208 ^ 0xDA3795F9) + (v214 ^ 0xDA3795F9) + (v229 ^ 0xDC054640) + 1;
  v231 = v230 - 2015597638 - ((2 * v230) & 0xFB8D774);
  v232 = v223 ^ (v210 - 1054927844 - ((2 * v210) & 0x823E2838));
  LOBYTE(STACK[0xDD3]) = v228 ^ 0x76;
  v233 = ((v214 ^ 0xDC21E020) + 603634111 - ((2 * (v214 ^ 0xDC21E020)) & 0x47F5737E)) ^ 0x38266952 ^ v229;
  LOBYTE(STACK[0xFA1]) = v232 + (~(2 * v232) | 0x39) - 28;
  v234 = v219 + 603634111 - (v224 & 0x47F5737E);
  v235 = (v207 ^ 0xDA3795F9)
       - 2 * (((v207 ^ 0xDA3795F9) + 325000800) & 0x1BEC4A19 ^ (v207 ^ 0xDA3795F9) & 0x10)
       + 793471081;
  v236 = v235 ^ v222 ^ v218 ^ 0x61675D9;
  v237 = v229 ^ v214 ^ v234;
  v238 = (v235 ^ 0xE413B5F6) + v217 + v218 + 924417388 - ((2 * ((v235 ^ 0xE413B5F6) + v217 + v218 + 1)) & 0x6E32FAD6);
  LOBYTE(STACK[0xDDA]) = v228 ^ v233 ^ 0x76;
  v239 = ((v218 ^ 0x61675D9) - 1089205637 - ((2 * (v218 ^ 0x61675D9)) & 0x7E2814F6)) ^ v235 ^ 0x9CDE2920;
  v240 = ((v228 ^ v233) - 70 - ((2 * (v228 ^ v233)) & 0x74)) ^ v231;
  v241 = v232 ^ v239;
  v242 = 2 * (v232 ^ v239);
  LOBYTE(STACK[0xDE1]) = v240 ^ 0x76;
  v243 = v237 ^ 0xDC21E020;
  LOBYTE(STACK[0xFA8]) = v241 - (v242 & 0xC7) - 29;
  v244 = (v241 + 924417387 - (v242 & 0x6E32FAD6)) ^ v238;
  LOBYTE(STACK[0xFAF]) = v244 + (~(2 * v244) | 0x39) - 28;
  v245 = v237 ^ (v240 - ((2 * v240) & 0x6C) - 74);
  v246 = v229 ^ 0x1BDCD0ED;
  v247 = v236 ^ 0x8DE30755 ^ (v244 - ((2 * v244) & 0x2C1E9AB8) - 1777382052);
  LOBYTE(STACK[0xFB6]) = v247 - ((2 * v247) & 0xC7) - 29;
  LOBYTE(v242) = v245 ^ v246;
  v248 = (v237 ^ 0x5BFD8B9A ^ v231) - ((2 * (v237 ^ 0x5BFD8B9A ^ v231) + 1433858588) & 0x5024C2D4) - 758261128;
  v249 = (v247 - 1089205637 - ((2 * v247) & 0x7E2814F6)) ^ v235 ^ 0x9CDE2920;
  v250 = v233 + v243 + (v248 ^ 0xD7ED9E95) + 1;
  v251 = v246 + 672293226 - ((2 * v246) & 0x5024C2D4);
  v252 = (v236 ^ 0x2CF53762 ^ v238) - ((2 * (v236 ^ 0x2CF53762 ^ v238) + 1433858588) & 0x719F138A) + 1670054611;
  LOBYTE(STACK[0xFBD]) = v249 - ((2 * v249) & 0xC7) - 29;
  v253 = (v236 ^ 0x1BEC4A09) + v239 + (v252 ^ 0x4730763A) + 1;
  v254 = v235 ^ 0x14D35E30 ^ v238;
  LOBYTE(STACK[0xDE8]) = v245 ^ 0xE0;
  LOBYTE(STACK[0xDEF]) = v242 ^ 0xE0;
  LOBYTE(STACK[0xDF6]) = v242 ^ v250 ^ 0xE0;
  LOBYTE(STACK[0xFC4]) = (v249 ^ v253) - ((2 * (v249 ^ v253)) & 0xC7) - 29;
  LOBYTE(v243) = v231 ^ ((v242 ^ v250 ^ 0x96) - ((2 * (v242 ^ v250 ^ 0x96)) & 6) - 125);
  v255 = v249 ^ v253 ^ v238;
  LOBYTE(STACK[0xFCB]) = v249 ^ v253 ^ v238 ^ 0x23;
  LOBYTE(v244) = (v243 ^ 0x92) + 106 - ((2 * (v243 ^ 0x92)) & 0xD4);
  v256 = v248 ^ v231 ^ v251;
  LOBYTE(v248) = v248 ^ (((v231 ^ 0xEE) - 53) ^ ((v231 ^ 0x11) + 53)) & 0x95 ^ v244;
  LOBYTE(STACK[0xE04]) = v248 - ((2 * v248) & 0xC7) - 29;
  v257 = v252 ^ v254;
  v258 = v250 + (v256 ^ 0x78239445) + 1;
  LOBYTE(STACK[0xFD2]) = (v255 ^ v252 ^ 5) - ((2 * (v255 ^ v252 ^ 5)) & 0xC7) - 29;
  v259 = v255 ^ v254;
  LOBYTE(STACK[0xFD9]) = v255 ^ v254 ^ 0x23;
  LOBYTE(v248) = v243 ^ 0xE4;
  v260 = ((2 * v258) & 0x89622112) + (v258 ^ 0x44B11089);
  v261 = (v252 ^ v254 ^ 0x4730763A) + v253 + 1;
  LOBYTE(v244) = v244 ^ v231 ^ v251;
  LOBYTE(STACK[0xDFD]) = v248;
  HIDWORD(v262) = v257 ^ 0xF89C5;
  LODWORD(v262) = v257 ^ 0xB8C00000;
  v263 = v260
       - 1152454793
       + (v231 ^ 0x77D91311)
       + 1941873392
       - ((2 * (v260 - 1152454793 + (v231 ^ 0x77D91311))) & 0xE77D45E0);
  v264 = (v260 - ((2 * (v260 - 1152454793)) & 0x34AB9E8E) - 710623554) ^ v256;
  LOBYTE(STACK[0xE0B]) = v244 ^ 0xCC;
  HIDWORD(v262) = (v262 >> 21) ^ 0xFF0A9E8F;
  LODWORD(v262) = HIDWORD(v262);
  v265 = v262 >> 11;
  v266 = v238 ^ 0x205EDCA3 ^ (v265 - ((2 * v265) & 0xCE85B2C6) - 415049373);
  v267 = v261 + (v238 ^ 0xC71C05C0) - 1158620816 - ((2 * (v261 + (v238 ^ 0xC71C05C0))) & 0x75E1B2E0);
  v268 = v265 ^ v261;
  v269 = (v267 ^ 0xBAF0D970)
       + (v265 ^ 0xC7FC9DD4)
       + 1242331198
       - ((2 * ((v267 ^ 0xBAF0D970) + (v265 ^ 0xC7FC9DD4))) & 0x9418F07C);
  v270 = v263 ^ 0x65BDDE77 ^ v264 ^ 0x9D89A4FD;
  LOBYTE(STACK[0xFE0]) = (v259 ^ v268 ^ 0x14) + (~(2 * (v259 ^ v268)) | 0x39) - 28;
  v271 = v268 ^ 0x7D0C44A4 ^ v267;
  LOBYTE(v248) = v244 ^ v264 ^ 0xFD;
  v272 = v267 ^ 0x7DECDCB0 ^ v259;
  LOBYTE(v244) = v263 ^ v244;
  v273 = v251 ^ 0xCE146546;
  v274 = (v263 ^ 0x73BEA2F0)
       + (v256 ^ 0x91DF173D)
       - 146341845
       - ((2 * ((v263 ^ 0x73BEA2F0) + (v256 ^ 0x91DF173D))) & 0xEE8E0056);
  v275 = v266 - ((2 * v266) & 0x719F138A);
  LOBYTE(v266) = v244 ^ v273;
  v276 = v252 ^ 0xC7FC9DD4 ^ (v275 - 1194358331);
  LOBYTE(STACK[0xFE7]) = v272 - ((2 * v272) & 0xC7) - 29;
  v277 = v272 ^ v276;
  LOBYTE(STACK[0xE12]) = v248 ^ 0x4B;
  LOBYTE(STACK[0xFEE]) = v277 + (~(2 * v277) | 0x39) - 28;
  v278 = (v264 ^ 0x8B8AD87A) - v270;
  LOBYTE(v275) = ((v244 ^ v273 ^ 0x4A) + 43 - ((2 * (v244 ^ v273 ^ 0x4A)) & 0x56)) ^ v274;
  v279 = (v268 ^ 0xC7FC9DD4) - v271;
  v280 = (v277 + 1242331198 - ((2 * v277) & 0x9418F07C)) ^ v269;
  LOBYTE(STACK[0xE19]) = v244 ^ 0x3C;
  v281 = v276 + v279 + 753763794 + ~((2 * (v276 + v279)) & 0x59DB0BA2);
  LOBYTE(STACK[0xE20]) = v266 ^ 0x3C;
  v282 = v278 + v273 - 1614194418 - ((2 * (v278 + v273)) & 0x3F92B21C);
  LOBYTE(STACK[0xE27]) = v275 ^ 0x76;
  v283 = v271 + (v269 ^ 0xB5F387C1);
  v284 = v281 ^ v279;
  v285 = v282 ^ v278;
  v286 = (v283 + 753763795 + ~((2 * (v283 + 1)) & 0x59DB0BA2)) ^ v281;
  LOBYTE(STACK[0xFF5]) = v280 + (~(2 * v280) | 0x39) - 28;
  v287 = v281 ^ v279 ^ 0xC47972AB ^ (v280 - ((2 * v280) & 0xD129EEF4) - 392890502);
  LOBYTE(v279) = (v281 ^ v279 ^ 0xAB ^ (v280 - ((2 * v280) & 0xF4) + 122))
               + (~(2 * (v281 ^ v279 ^ 0xAB ^ (v280 - ((2 * v280) & 0xF4) + 122))) | 0x39)
               - 28;
  v288 = (v270 + (v274 ^ 0x8B8FFD4) - 1614194417 - ((2 * (v270 + (v274 ^ 0x8B8FFD4) + 1)) & 0x3F92B21C)) ^ v282;
  LOBYTE(v275) = v285 ^ (v275 - ((2 * v275) & 0x68) - 76);
  LOBYTE(v263) = v275 ^ (v270 + (v274 ^ 0xD4) + 15 - ((2 * (v270 + (v274 ^ 0xD4) + 1)) & 0x1C)) ^ v282;
  v289 = (v281 ^ 0x2CED85D1) - 1256310069;
  v290 = (v282 ^ 0x9FC9590E) - 1256310069;
  LOBYTE(STACK[0xFFC]) = v279;
  v291 = v287 ^ v286;
  LOBYTE(STACK[0x1003]) = v291 - ((2 * v291) & 0xC7) - 29;
  v292 = v291 ^ v289;
  v293 = (v284 ^ 0xD3127A2E) + v289;
  LOBYTE(STACK[0x100A]) = v292 - ((2 * v292) & 0xC7) - 29;
  LOBYTE(v289) = v275 ^ v288 ^ v290;
  LOBYTE(STACK[0xE2E]) = v275 ^ 0xCC;
  ++v293;
  v294 = (v292 + 1242331198 - ((2 * v292) & 0x9418F07C)) ^ v269;
  v295 = (v285 ^ 0x6036A6F1) + v290;
  v296 = (v284 ^ 0x2CED85D1) - ((2 * (v284 ^ 0x2CED85D1) + 2146298658) & 0x473DD6A0);
  LOBYTE(STACK[0xE35]) = v263 ^ 0xCC;
  LOBYTE(v273) = ((v289 ^ 0xBA) + 43 - ((2 * (v289 ^ 0xBA)) & 0x56)) ^ v274;
  v297 = (v269 ^ 0x4A0C783E) - 613696715;
  v298 = v288 - (v295 + 1);
  v299 = (v274 ^ 0xF747002B) - 613696715;
  LOBYTE(STACK[0x1011]) = v294 - ((2 * v294) & 0xC7) - 29;
  v300 = (v294 - 1549866160 - ((2 * v294) & 0x473DD6A0)) ^ (v296 + 597024993);
  v301 = (v285 ^ 0x9FC9590E) - ((2 * (v285 ^ 0x9FC9590E) - 1184990) & 0xE22830D4);
  v302 = v286 - v293;
  v303 = v301 - 250933765;
  LOBYTE(STACK[0x1018]) = v300 - ((2 * v300) & 0xC7) - 29;
  LOBYTE(STACK[0xE43]) = v273 ^ 0x76;
  v304 = v302 ^ 0xB10A7896 ^ (v300 - ((2 * v300) & 0x79484120) - 1130094448);
  v305 = (v295 + 1897142379 - ((2 * (v295 + 1)) & 0xE22830D4)) ^ (v301 - 250933765);
  LOBYTE(STACK[0x101F]) = v304 - ((2 * v304) & 0xC7) - 29;
  v306 = (v293 - 1549866160 - ((2 * v293) & 0x473DD6A0)) ^ (v296 + 597024993);
  LOBYTE(v293) = (v273 + 106 - ((2 * v273) & 0xD4)) ^ v303;
  LOBYTE(v296) = v293 ^ 0x76;
  LOBYTE(v293) = v298 ^ (v293 - ((2 * v293) & 0xE0) + 112);
  LOBYTE(v263) = v293 ^ v305;
  v307 = v304 ^ v306;
  LOBYTE(STACK[0xE4A]) = v296;
  LOBYTE(STACK[0xE51]) = v293;
  LOBYTE(v270) = v289 ^ 0xCC;
  LOBYTE(STACK[0x1026]) = v307 + (~(2 * v307) | 0x39) - 28;
  v308 = (v293 ^ v305) ^ 0x76 ^ v299;
  LOBYTE(STACK[0xE3C]) = v270;
  v309 = ((2 * ((v298 ^ 0xF251A7F9) + v305 + 1)) & 0x7FFEFBDE)
       + (((v298 ^ 0xF251A7F9) + v305 + 1) ^ 0x3FFF7DEF)
       - 1073708527;
  v310 = v309 + v299;
  LOBYTE(STACK[0xE58]) = v263;
  LODWORD(STACK[0x3D4]) = v307 ^ v297;
  LOBYTE(v263) = (v307 ^ v297) - ((2 * (v307 ^ v297)) & 0xC7) - 29;
  v311 = (v303 ^ 0x7114186A ^ v309) - v310 + 1697634604 - ((2 * ((v303 ^ 0x7114186A ^ v309) - v310)) & 0xCA5FB258);
  LOBYTE(STACK[0x102D]) = v263;
  v312 = ((2 * (v309 + (v311 ^ 0x9AD026D3) + 1)) & 0xF66FFF76) + ((v309 + (v311 ^ 0x9AD026D3) + 1) ^ 0x7B37FFBB);
  LOBYTE(STACK[0xE5F]) = v308 ^ 0x76;
  LODWORD(STACK[0x6F8]) = ((v312 - 2067267515) ^ v310 ^ 0x7DC137FF)
                        - 1098916227
                        + ((2 * ((v312 - 2067267515) ^ v310)) & 0xFB826FFE);
  LODWORD(STACK[0x3D8]) = v308 ^ 0xAFDFE70C;
  LODWORD(STACK[0x6E8]) = v312 - 35913778;
  v313 = (v298 ^ 0xDAE5806) + (v303 ^ 0x8EEBE795) + (v311 ^ 0x652FD92C) + 1;
  LODWORD(STACK[0x6F0]) = v313 - 2018113788 - ((2 * v313) & 0xF6C0E08);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * (LODWORD(STACK[0x700]) ^ ((8 * v169) | (16 * v169))))
                            - 8))();
}

uint64_t sub_2477DDC2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  uint64_t v15;
  int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  unsigned int v28;
  int v29;
  int v30;
  __int16 v31;
  unsigned int v32;
  uint64_t v33;
  int v34;
  int v35;
  int v36;
  int v37;
  __int16 v38;
  int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  uint64_t v49;
  int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  unsigned __int16 v55;
  int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  unint64_t v66;
  int v67;
  int v68;
  unsigned int v69;
  uint64_t v70;
  int v71;
  unsigned int v72;
  int v73;
  int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  int v89;
  unsigned int v90;
  int v91;
  int v92;
  int v93;
  unsigned int v94;
  unint64_t v95;
  unsigned int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned __int16 v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  int v112;
  int v113;
  unsigned int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  unsigned int v120;
  int v121;
  int v122;
  unsigned int v123;
  int v124;
  unsigned int v125;
  int v126;
  unsigned int v127;
  int v128;
  int v129;
  int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;

  LODWORD(STACK[0x6C0]) = v11;
  LODWORD(STACK[0x6DC]) = v12;
  v17 = 7 * (v10 ^ 0x80025D09);
  v18 = v17 + 5782 - (v17 + 5782) / 0x3C0 * a8;
  v19 = v18 - 468653318 - ((2 * v18) & 0x5F4);
  v20 = 7 * ((v10 ^ 0x80025D09) + (v19 & (v12 - 1979) ^ 0x100) + (v19 & (v12 - 1979) ^ 0x23A)) + 7;
  v21 = ((*(unsigned __int8 *)(v15 + (v19 ^ 0xE410EAFA)) ^ 0x76) << 24) | ((*(unsigned __int8 *)(v15
                                                                                               + v20
                                                                                               - v20 / 0x3C0 * a8) ^ 0x76) << 16) | ((*(unsigned __int8 *)(v15 + v17 + 5796 - (v17 + 5796) / 0x3C0 * a8) ^ 0x76) << 8);
  v22 = *(unsigned __int8 *)(v15 + v17 + 5803 - (v17 + 5803) / 0x3C0 * a8) ^ 0xE3;
  v23 = (v21 | v22) - 2 * ((v21 | v22) & 0x6432811F ^ v22 & 3) - 466452196;
  v24 = v23 ^ v11;
  v25 = 2 * (v10 & 1);
  *((_DWORD *)&STACK[0x840]
  + 199 * v8
  % (((v23 & 0x2D8FA949 ^ 0x24028108) + (v23 & 0x2D8FA949 ^ 0x98D2841)) ^ ((v10 & 0x2D8FA85D ^ 0x2D8DA054)
                                                                         + (v10 & 0x2D8FA85D ^ 0x20809u)))) = v23 ^ v11 ^ 0x3AE5BFB1;
  v26 = *(unsigned __int8 *)(v15 + v17 + 6244 - (v17 + 6244) / 0x3C0 * a8);
  LODWORD(STACK[0x700]) = (v10 ^ 0x80025D08) + (v25 ^ 0xD02EBF12) + 2058474855;
  v27 = *(unsigned __int8 *)(v15 + v17 + 6258 - (v17 + 6258) / 0x3C0 * a8);
  v28 = 2032808451
      - ((v10 ^ 0x80025D08)
       + (v25 ^ 0xD02EBF12))
      + 8 * ((v10 ^ 0x80025D08) + (v25 ^ 0xD02EBF12) + 2058474855);
  v29 = *(unsigned __int8 *)(v15 + v17 + 6251 - (v17 + 6251) / 0x3C0 * a8) ^ 0xE3;
  v30 = *(unsigned __int8 *)(v15 + v28 + 455 - (v28 + 455) / 0x3C0 * a8);
  v31 = 199 * v9;
  v32 = a6 ^ 0xEF4126A8;
  v33 = (unsigned __int16)(199 * v9 + 21243) % 0x114u;
  v34 = STACK[0x6F0];
  v35 = LODWORD(STACK[0x6F0]) ^ 0x63848618 ^ v23;
  v36 = STACK[0x6E8];
  v37 = LODWORD(STACK[0x6E8]) - 2031353737;
  v38 = v9;
  LODWORD(STACK[0x6E0]) = v9;
  v39 = v30 ^ 0xE3;
  LODWORD(STACK[0x6E4]) = v14;
  v40 = v37 + (v24 ^ 0x811D58A5) - 1668435549 - ((2 * (v37 + (v24 ^ 0x811D58A5)) - 2104433082) & 0xB68A7D00);
  v41 = a6 ^ 0x6012FCEB;
  LODWORD(STACK[0x688]) = 199 * v9;
  v42 = STACK[0x6F8];
  v43 = v36 + LODWORD(STACK[0x6F8]) + (v34 ^ 0x87B60704) + 1252715003;
  LODWORD(STACK[0x6F0]) = v14
                        + v13
                        + (a6 ^ 0x9FED0314)
                        - 1953799059
                        - ((2 * (v14 + v13 + (a6 ^ 0x9FED0314) + 765744166)) & 0xBBCE208E);
  v44 = v36 - ((2 * v36 - 683141466) & 0x833195F6) - 1388521906;
  LODWORD(STACK[0x6C8]) = v44;
  v45 = ((2 * (v13 + 2025444101)) & 0xDF953AEA) + ((v13 + 2025444101) ^ 0x6FCA9D75);
  v46 = (v16 ^ 0x70AC25BC ^ (v45 - 1875549557))
      - ((2 * (v16 ^ 0x70AC25BC ^ (v45 - 1875549557))) & 0x8D369F72)
      + 1184583609;
  v47 = v44 ^ LODWORD(STACK[0x6C0]);
  v48 = ((v26 ^ 0xFFFFFFE3) << 24) | (v29 << 16) | ((v27 ^ 0xE3) << 8) | v39;
  LODWORD(STACK[0x6F8]) = v42;
  LODWORD(STACK[0x6A8]) = v42 - ((2 * v42 + 277050082) & 0x507F5C1E) - 1333696640;
  v49 = (unsigned __int16)(v31 - 15836) % 0x114u;
  v50 = *(unsigned __int8 *)(STACK[0x708] + v28 % 0x3C0);
  v51 = *(unsigned __int8 *)(STACK[0x708] + (v28 + 7) % 0x3C0);
  *((_DWORD *)&STACK[0x840] + v33) = v48 ^ v16 ^ 0x2BE91B3C;
  v52 = ((v50 ^ 0x76) << 24) | ((v51 ^ 0x76) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + (v28 + 14) % 0x3C0) ^ 0x76) << 8);
  LODWORD(v33) = *(unsigned __int8 *)(STACK[0x708] + (v28 + 21) % 0x3C0) ^ 0xE3;
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)(v31 - 29766) % 0x114u) = v40;
  v53 = (v52 | v33) ^ v43;
  v54 = v43;
  LODWORD(STACK[0x6BC]) = v43;
  v55 = (unsigned __int16)(((((v47 ^ 0x10) + 119) & 0xC7) + (((v47 ^ 0xEF) - 119) & 0xC7))
                         * (v38 + 20458))
      % 0x114u;
  v56 = *(unsigned __int8 *)(STACK[0x708] + (v28 + 462) % 0x3C0) ^ 0xE3;
  v57 = (v56 << 24) + 1363176275 - ((v56 << 25) & 0xA2000000);
  LODWORD(STACK[0x694]) = (v57 & 0x3C000000 ^ 0x10000000) + (v57 & 0x3C000000 ^ 0x2C67D9EB);
  v58 = ((v41 + (v32 ^ v48 ^ v16) + 1) ^ ((v16 ^ 0x8F53DA43) + v48 + 1) ^ ((v48 ^ v16 ^ 0x2BE91BA9 ^ (v35 + 1531264640 - ((2 * v35) & 0xB68A7D00)))
                                                                         - (v35 ^ (v27 ^ 0x7C | v27 ^ 0xFFFFFF83) & 0x95)))
      - v13;
  LODWORD(STACK[0x6A0]) = (v28 + 476) % 0x3C0;
  LODWORD(STACK[0x698]) = (v28 + 483) % 0x3C0;
  v59 = STACK[0x688];
  v60 = LODWORD(STACK[0x688]) + 21442;
  v61 = v46 & 0x95 ^ 0xAB01AA2C | v46 & 0x95 ^ 0x91;
  v62 = v46 ^ 0x9DCE5039 ^ v53;
  v46 ^= 0xBDFB5581;
  v63 = STACK[0x6F0];
  LODWORD(v33) = LODWORD(STACK[0x6F0]) ^ 0x5DE710D2;
  *((_DWORD *)&STACK[0x840] + v49) = v58 - ((2 * v58 + 99562584) & 0xB68A7D00) - 566437716;
  v64 = v33 ^ v53;
  v65 = STACK[0x6A8];
  LODWORD(v33) = LODWORD(STACK[0x6A8]) ^ 0xA83FAE0F;
  v66 = (unsigned __int16)(v59 - 29567) % 0x114u;
  STACK[0x6C0] = v66;
  v67 = v33 + (v54 ^ 0x2035052D);
  v68 = (v53 & 0x5EAFEAA3 ^ 0x1E272283) + (v53 & 0x5EAFEAA3 ^ 0x4088C820);
  LODWORD(v33) = LODWORD(STACK[0x6E4]) - 567976982;
  LODWORD(STACK[0x6B0]) = (v64 - (v63 ^ 0x7DD2156A)) ^ (v62 - v46);
  v69 = (v47 ^ 0xDFD709EF) - (v54 ^ 0x2035052D);
  v70 = v55;
  v71 = v61 ^ v53;
  v72 = v53 ^ 0x9BCDE2AC;
  LODWORD(STACK[0x6E4]) = 1875549557 - v45 + (((v66 & 0x55 ^ 0x17F96255) + (v66 & 0x55)) & 0x16F962DD);
  v73 = LODWORD(STACK[0x700]) - 1256232053;
  LODWORD(v49) = (v63 ^ 0x7DD2156A) + v33 - ((2 * ((v63 ^ 0x7DD2156A) + v33)) & 0xCDE21CD0) + 1727073896;
  *((_DWORD *)&STACK[0x840] + v70) = v72;
  STACK[0x6E8] = (unsigned __int16)(v59 - 15637) % 0x114u;
  v74 = v33 + v46 + (v49 ^ 0x990EF197) + 1 - ((2 * (v33 + v46 + (v49 ^ 0x990EF197) + 1)) & 0x67AACB80);
  v75 = (v28 + 35) % 0x3C0 + 987452971 - ((2 * ((v28 + 35) % 0x3C0)) & 0x456);
  v76 = (((*(unsigned __int8 *)(STACK[0x708] + (v68 ^ 0xE28E482E) * (v73 + 894) * (STACK[0x694] & 0x3C4791E3) % 0x3C0) ^ 0xE3) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + LODWORD(STACK[0x6A0])) ^ 0xE3) << 8) | *(unsigned __int8 *)(STACK[0x708] + LODWORD(STACK[0x698])) ^ 0xE3)
      + (v57 ^ 0x51406B53);
  v77 = (v65 & 0x3C0 ^ 0x200) + ((654 - (unsigned __int16)LODWORD(STACK[0x6F8])) & 0x3C0);
  v78 = ((*(unsigned __int8 *)(STACK[0x708] + (v28 + 28) % 0x3C0) ^ 0x76) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + (v75 ^ 0x3ADB562B)) ^ 0x76) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + (7 * (v73 + (((v75 & 0x300 ^ 0x200) + (v75 & 0x300 ^ 0x8B06FD00)) ^ 0x8B06FC39)) + 56) % 0x3C0) ^ 0x76) << 8) | *(unsigned __int8 *)(STACK[0x708] + (v28 + 49) % 0x3C0) ^ 0xE3;
  STACK[0x6F8] = (unsigned __int16)(v59 + 8109) % 0x114u;
  v79 = (v76 + 1575424071 - ((2 * v76) & 0xBBCE208E)) ^ LODWORD(STACK[0x6F0]);
  v80 = LODWORD(STACK[0x6C8]) ^ 0x4198CAFB;
  v81 = v79 ^ v47;
  LODWORD(v70) = v45 - 1875549557 + (v49 ^ 0x990EF197) + 1;
  v82 = v78 ^ (v80 - v67);
  v83 = (v69 + 1384701018 - ((2 * v69) & 0xA511B8B4)) ^ v67 ^ 0x83FEB30A ^ v82;
  v84 = ((*(unsigned __int8 *)(STACK[0x708] + (v28 + 490) % v77) ^ 0xFFFFFFE3) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + (v28 + 497) % 0x3C0) ^ 0xE3) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + (v28 + 504) % 0x3C0) ^ 0xE3) << 8) | *(unsigned __int8 *)(STACK[0x708] + (v28 + 511) % 0x3C0) ^ 0xE3;
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)v60 % 0x114u) = v79 ^ 0x7B703BAD;
  v85 = v84 ^ v70;
  LOWORD(v45) = v59;
  v86 = (v79 ^ 0x2035052D) + v80;
  STACK[0x6F0] = (unsigned __int16)(v59 + 21641) % 0x114u;
  LODWORD(STACK[0x6C8]) = ((v83 ^ 0x5288DC5A) - 1388781443 - ((2 * (v83 ^ 0x5288DC5A)) & 0x5A71C0FA)) ^ v84 ^ v70 ^ 0xAD38E0E8;
  v87 = ((2 * (v80 - v67)) & 0xFFB7D9EE ^ 0xB496C944) + ((v80 - v67) ^ 0xA5B08B55);
  v88 = (v65 ^ 0x7B1E4B1E)
      + 2145119479
      - v87
      - 1622218338
      - ((2 * ((v65 ^ 0x7B1E4B1E) + 2145119479 - v87)) & 0x3E9DD33C);
  v89 = ((2 * v70) & 0xCD97FBFA ^ 0x8496CB40) + (v70 ^ 0xBCA09A5F);
  v90 = v71 ^ 0x8B34AF05;
  LODWORD(v70) = (v33 ^ 0xD321E511) - v89 + 160730436 - ((2 * ((v33 ^ 0xD321E511) - v89 + 1724644861)) & 0x45911E8E);
  v74 -= 1277860416;
  v91 = v69 - 1622218338 - ((2 * v69) & 0x3E9DD33C);
  v92 = v70 ^ v74;
  v93 = v88 ^ v91;
  v94 = LODWORD(STACK[0x6BC]) ^ 0x7A122363 ^ ((v81 ^ 0xFFE20CC2)
                                            + 1512515150
                                            - 2 * ((v81 ^ 0xFFE20CC2) & 0x5A27265F ^ v81 & 0x11));
  LODWORD(v33) = v87 - 2145119479 + (v82 ^ 0xDA6B6737);
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)STACK[0x6C0]) = v86 - 1668435549 - ((2 * v86 - 2104433082) & 0xB68A7D00);
  v95 = STACK[0x708];
  v96 = v88 ^ ((v67 ^ 0x83FEB30A) - 1622218338 - ((2 * (v67 ^ 0x83FEB30A)) & 0x3E9DD33C));
  v97 = v49 ^ 0xE50FBD62;
  v98 = (v49 ^ 0x3F64DAC0 ^ v85) - (v49 ^ 0xE50FBD62);
  LODWORD(v49) = (v88 ^ 0x9F4EE99E) - ((2 * (v88 ^ 0x9F4EE99E) + 169680212) & 0x97DF5D0);
  v99 = v70 ^ (v97 - 1563914425 - ((2 * v97) & 0x45911E8E));
  v100 = LODWORD(STACK[0x6B0]) ^ ((v90 ^ v94) - v94);
  v101 = v98 ^ ((v74 ^ 0x4C2A9A3F) + (v74 ^ 0x69BE0262 ^ v85) + 1);
  v102 = LODWORD(STACK[0x6E4]) + v100;
  v103 = v87 - ((2 * v87 + 214817878) & 0x97DF5D0);
  v104 = (unsigned __int16)(v45 - 29368) % 0x114u;
  LOWORD(v67) = v45;
  LOWORD(v98) = (unsigned __int16)(v45 - 15438) % 0x114u;
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)STACK[0x6E8]) = v102 + 1531264640 - ((2 * v102) & 0xB68A7D00);
  v105 = (v83 ^ 0x771C4492) + LODWORD(STACK[0x6C8]);
  v106 = ((*(unsigned __int8 *)(v95 + (v28 + 56) % 0x3C0) ^ 0x76) << 24) | ((*(unsigned __int8 *)(v95
                                                                                                + (v28 + 63) % 0x3C0) ^ 0x76) << 16) | ((*(unsigned __int8 *)(v95 + (v28 + 70) % 0x3C0) ^ 0x76) << 8) | *(unsigned __int8 *)(v95 + (v28 + 77) % 0x3C0) ^ 0xE3;
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)STACK[0x6F8]) = v82 ^ 0x61938023;
  v107 = (v28 + 518) % 0x3C0;
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)STACK[0x6F0]) = v85 ^ 0x812E5922;
  v108 = (v28 + 525) % 0x3C0;
  v109 = (v28 + 532) % 0x3C0;
  v110 = (v28 + 539) % 0x3C0;
  v111 = v49 + 1909295506;
  v112 = v93 ^ (v49 + 1909295506);
  v113 = (v70 ^ 0xA2C88F47) - 2 * (((v70 ^ 0xA2C88F47) + 219057834) & 0xABD18CF ^ (v70 ^ 0xA2C88F47) & 1) + 2009835384;
  v114 = ((*(unsigned __int8 *)(v95 + v107) ^ 0xFFFFFFE3) << 24) | ((*(unsigned __int8 *)(v95 + v108) ^ 0xE3) << 16) | ((*(unsigned __int8 *)(v95 + v109) ^ 0xE3) << 8);
  v115 = v99 - ((2 * v99 + 1815728682) & 0xF56F6206) + 819239448;
  v116 = v113 ^ (v89 + 1513354740 + (~(2 * v89 + 518896202) | 0xEA85CE63));
  v117 = v92 ^ v113;
  v118 = *(unsigned __int8 *)(v95 + v110);
  *((_DWORD *)&STACK[0x840] + v104) = (v101 ^ (v105 + 1))
                                    - v89
                                    - ((2 * ((v101 ^ (v105 + 1)) - v89) + 1344856640) & 0xB68A7D00)
                                    + 56209312;
  v119 = (v118 ^ 0xE3) - 1987742714 - ((2 * (v118 ^ 0xE3)) & 0xC);
  v120 = (v119 ^ 0x89857406 | v114) ^ v113;
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)v98) = v33 + 1916707029 - ((2 * v33 + 770884778) & 0xB68A7D00);
  v121 = STACK[0x6E0];
  v122 = v106 ^ (v49 + 1909295506);
  LODWORD(v49) = (v96 - 1239619307) ^ v112 ^ 0xE03E226 ^ v120;
  v123 = (v119 ^ 0x8985744B) + (v119 & 0x898577B2 ^ 0x767A8BFD);
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)(v67 + 8308) % 0x114u) = v122 ^ 0xBF461D69;
  v124 = v111 ^ (v103 + 992340243);
  v125 = v96 - 2110783447 - ((2 * (v96 - 1239619307)) & 0x982646B4);
  v126 = (v124 - 614722942) ^ 0x5A9F3FB1;
  v127 = v126
       + ((v125 + 3142) ^ 0xC8ADD9B2 ^ v112)
       - 769963405
       - ((2 * (v126 + ((v125 + 3142) ^ 0xC8ADD9B2 ^ v112))) & 0xA43694E6);
  v128 = (((v115 ^ 0x85484EFC) + (v115 ^ v122 ^ 0x7E094B7E) + 1) ^ ((v117 ^ 0xE45F0DB6) + (v117 ^ v122 ^ 0x1F1E0834) + 1) ^ ((v122 ^ 0xCA0DA266 ^ (v49 - ((2 * v49) & 0x9D66B036) - 827107301)) - v49))
       - v116;
  LODWORD(v49) = v128 - 1668435549 - ((2 * v128 - 2104433082) & 0xB68A7D00);
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)((v118 & 0xFFC7 ^ 4 | v118 & 0xFFC7 ^ 0xC3) * (v121 + 20528)) % 0x114u) = v120 ^ 0x51F8264E;
  v129 = ((v116 - 614722942) ^ 0x5A9F3FB1)
       + (v115 ^ 0x6117434A ^ v117)
       + 128901820
       - ((2 * (((v116 - 614722942) ^ 0x5A9F3FB1) + (v115 ^ 0x6117434A ^ v117))) & 0xF5DC578);
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)(v67 - 29169) % 0x114u) = v49;
  v130 = STACK[0x6DC];
  v112 ^= 0xA5815ACA;
  v131 = ((1239619306 - v99) & 0x86F6821B)
       + (v111 ^ 0x4BEFAE8)
       + (v127 ^ 0x2DE4B58C)
       + (v115 & 0x86F6821B ^ 0x2B68003)
       - ((v123 + 1) | v118 & 0x4D ^ 0x41);
  v132 = v112 + 1492057882;
  v133 = v112
       - 1650454621
       + ((((v129 & 0x5C152562 ^ 0x4042020) + (v129 & 0x5C152562 ^ 0x58110542))
         * (v127 & 0x1FD5A483 ^ 0x12110003 | v127 & 0x1FD5A483 ^ 0xDC4A480)) | 0x99064651);
  v134 = v126 - v132 - 1558769379 - ((2 * (v126 - v132)) & 0x462E223A);
  v135 = (v133 - 769963405 - ((2 * v133) & 0xA43694E6)) ^ v127;
  LODWORD(STACK[0x6F0]) = v134 ^ 0x74A7A50B ^ (v135 - 1558769379 - ((2 * v135) & 0x462E223A));
  *((_DWORD *)&STACK[0x840] + (unsigned __int16)(v67 - 15239) % 0x114u) = (v120 ^ 0xABD18CE)
                                                                        + v124
                                                                        + 1916707029
                                                                        - ((2 * ((v120 ^ 0xABD18CE) + v124) + 770884778) & 0xB68A7D00);
  LODWORD(STACK[0x6F8]) = (((v134 ^ 0x5CE8EEE2) + v131 + 584614049 + 1) ^ 0x3DCF7FFC)
                        - 26110336
                        + ((2 * ((v134 ^ 0x5CE8EEE2) + v131 + 584614049 + 1)) & 0x7B9EFFF8);
  LODWORD(STACK[0x6E8]) = (v134 ^ 0xA9354CFF) + 2145386396 + ((2 * v134) & 0xF267FFDA ^ 0xA0056600);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0]
                                        + 8 * ((v130 - 1202) | (4 * ((v121 - 243576851) > 0xF))))
                            - 8))();
}

uint64_t sub_2477DF31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  unint64_t v17;
  int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  unsigned int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unint64_t v60;
  int v61;
  int v62;
  int v63;
  int v64;
  int v65;
  int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  unsigned int v73;
  int v74;
  int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  unsigned int v92;
  int v93;
  __int16 v94;
  int v95;
  int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  int v101;
  __int16 v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  unsigned __int16 v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  char v115;
  int v116;
  int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned __int16 v123;
  int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  unsigned __int16 v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  int v136;
  int v137;
  int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  __int16 v142;
  int v143;
  int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  int v148;
  unsigned int v149;
  int v150;
  int v151;
  char v152;
  unsigned int v153;
  int v154;
  int v155;
  unsigned __int16 v156;
  int v157;
  unsigned __int16 v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  unsigned int v180;

  LODWORD(STACK[0x6E0]) = 0;
  LODWORD(STACK[0x6A8]) = v8 - 1159;
  LODWORD(STACK[0x6B0]) = 67174408 - v6;
  LODWORD(STACK[0x62C]) = 16 * (LOBYTE(STACK[0xF88]) ^ 0xE3);
  LODWORD(STACK[0x6DC]) = -1435904600;
  LODWORD(STACK[0x6A0]) = 16716;
  LODWORD(STACK[0x6C0]) = 29850;
  LODWORD(STACK[0x6BC]) = 28059;
  LODWORD(STACK[0x630]) = 1435904604;
  LODWORD(STACK[0x6E4]) = v10;
  LODWORD(STACK[0x694]) = 1943206185;
  LODWORD(STACK[0x700]) = 0;
  LODWORD(STACK[0x654]) = 45173;
  STACK[0x668] = 163;
  LODWORD(STACK[0x650]) = 43780;
  STACK[0x660] = 158;
  LODWORD(STACK[0x64C]) = 31243;
  STACK[0x658] = 113;
  LODWORD(STACK[0x648]) = 16318;
  LODWORD(STACK[0x644]) = 2786;
  LODWORD(STACK[0x640]) = 13731;
  LODWORD(STACK[0x638]) = 199;
  v12 = LODWORD(STACK[0x6A8]) ^ 0xD37;
  v13 = STACK[0xB5C];
  v14 = STACK[0x6F0];
  v15 = LODWORD(STACK[0x6F0]) ^ 0x87B60704;
  LODWORD(STACK[0x6C8]) = v12;
  v16 = STACK[0xB7C];
  HIDWORD(v17) = v13 ^ 0x14;
  LODWORD(v17) = v13 ^ 0xBBF8E700;
  v18 = (v17 >> 7) ^ (v13 >> (v12 - 86));
  HIDWORD(v17) = v13 ^ 0xE714;
  LODWORD(v17) = v13 ^ 0xBBF80000;
  v19 = v17 >> 18;
  v20 = STACK[0x8A8];
  HIDWORD(v17) = STACK[0xB7C];
  LODWORD(v17) = LODWORD(STACK[0xB7C]) ^ 0x5B453E80;
  v21 = v17 >> 7;
  v22 = v18 ^ v19;
  HIDWORD(v17) = LODWORD(STACK[0xB7C]) ^ 0x13E80;
  LODWORD(v17) = LODWORD(STACK[0xB7C]) ^ 0x5B440000;
  v23 = v17 >> 18;
  HIDWORD(v17) = LODWORD(STACK[0x8A8]) ^ 0xE714;
  LODWORD(v17) = LODWORD(STACK[0x8A8]) ^ 0xBBF80000;
  LODWORD(STACK[0x634]) = 1423158110;
  v24 = LODWORD(STACK[0x700]) + 34;
  v25 = (v20 << 13) ^ (v20 >> 10) ^ (v17 >> 17) ^ ((v20 ^ 0xBBF8E714) >> (((LODWORD(STACK[0x6DC]) - 18) ^ 0x29) & 0x13));
  v26 = *((_DWORD *)&STACK[0x840] + v24);
  v27 = v21 ^ (v16 >> 3) ^ v23 ^ 0xB68A7D0;
  HIDWORD(v17) = v26 ^ 0x13E80;
  LODWORD(v17) = v26 ^ 0x5B440000;
  v28 = v17 >> 17;
  HIDWORD(v17) = v26 ^ 0x53E80;
  LODWORD(v17) = v26 ^ 0x5B400000;
  v29 = v28 ^ (v26 >> 10) ^ (v17 >> 19) ^ 0x16D14F;
  v30 = LODWORD(STACK[0x6E8]) - ((2 * LODWORD(STACK[0x6E8]) + 1355987368) & 0x6B3E6D66) - 569863289;
  v31 = (v7 ^ 0x652FD92C) + 1653622086;
  v32 = (v11 ^ 0x70AC25BC) + 1653622086;
  v33 = ((a6 ^ 0x6012FCEB) + (a6 ^ 0x88921FF6 ^ v22) + 1) ^ ((v11 ^ 0x8F53DA43) + (v11 ^ 0x67D3395E ^ v22) + 1) ^ ((v22 ^ 0xC3D33441 ^ ((v7 ^ v14 ^ 0xE299DE28 ^ v27) - ((2 * (v7 ^ v14 ^ 0xE299DE28 ^ v27)) & 0xA9585146) - 726914909)) - (v7 ^ v14 ^ 0xE299DE28 ^ v27));
  v34 = (v31 ^ 0x8984EEB7) + LODWORD(STACK[0x6F8]) - 1010898556 + (v30 ^ 0x359F36B3);
  v35 = v31 ^ 0xBC1BD804 ^ v30;
  v36 = v31 ^ 0xF3233576 ^ (v29 - ((2 * v29) & 0xF54FB782) + 2057821121);
  v37 = v15 + 1598753077 + (((v24 & 0xD0 ^ 0x14078D0) + (v24 & 0xD0)) | 0x13412A50);
  v38 = v37 - v35 + 1409561855 - ((2 * (v37 - v35)) & 0xA80869FE);
  v39 = (v36 + 1409561855 - ((2 * v36) & 0xA80869FE)) ^ v38;
  v40 = (v25 ^ 0x8E1F39A7 ^ (v39 - ((2 * v39) & 0x25A68F3C) - 1831647330)) - v39;
  v41 = STACK[0x6E8];
  v42 = v9;
  v43 = (v32 ^ 0x8984EEB7 ^ (v9 - 1249958778)) + 188982373 - ((2 * (v32 ^ 0x8984EEB7 ^ (v9 - 1249958778))) & 0x168748CA);
  v44 = (a6 ^ 0x9FED0314) + (v43 ^ 0xF4BC5B9A) + 1;
  LODWORD(STACK[0x6F0]) = v44;
  v45 = v44 - ((2 * v44 - 451344374) & 0xDDE997C0) - 511619099;
  v46 = ((2 * ((v34 ^ 0x1E6F9566) + (v30 ^ 0x359F36B3))) & 0xFACEDD7C)
      + (((v34 ^ 0x1E6F9566) + (v30 ^ 0x359F36B3)) ^ 0x7D676EBE);
  LODWORD(STACK[0x6F8]) = v46;
  v47 = v31 ^ 0xDD80DA48 ^ v38;
  v48 = LODWORD(STACK[0x6E4]) + v9 + 1327607939 + (v32 ^ 0x8984EEB7);
  v49 = v46 - 2103930558;
  v50 = v47 + v49 + 23234185 - ((2 * (v47 + v49)) & 0x2C50D12);
  LODWORD(STACK[0x670]) = v50;
  v51 = LODWORD(STACK[0x6C0]) / 0x114;
  v52 = LODWORD(STACK[0x6BC]) / 0x114;
  v38 ^= 0x540434FFu;
  LODWORD(STACK[0x688]) = v32 ^ 0xE7702557 ^ v45;
  v53 = v41 - 2031353737 + ((1469489963 - v41) & 0x5F4B0935) + (v30 & 0x5F4B0935 ^ 0x150B0031) - v38;
  LODWORD(STACK[0x680]) = v53 - ((2 * v53 + 2061522264) & 0xBDF367D8);
  LODWORD(STACK[0x67C]) = v38 - 468897359 + (v50 ^ 0x1628689);
  LODWORD(STACK[0x698]) = v42;
  LODWORD(STACK[0x6E4]) = v42 - v44 - ((2 * (v42 - v44) + 2086727690) & 0x9EE84FEC);
  v54 = LODWORD(STACK[0x700]) - 276 * v52 + 28059;
  v55 = (v48 ^ 0x1E6F9566) + v42;
  v56 = LODWORD(STACK[0x6B0])
      + v35
      + (*((_DWORD *)&STACK[0x840] + v54) ^ 0x5B453E80)
      + (*((_DWORD *)&STACK[0x840] + LODWORD(STACK[0x700]) - 276 * v51 + 29850) ^ 0x5B453E80)
      + v29
      - 378711663
      + v33;
  *((_DWORD *)&STACK[0x840] + LODWORD(STACK[0x700]) - 276 * STACK[0x658] + 31243) = v56
                                                                                                - 1668435549
                                                                                                - ((2 * v56 - 2104433082) & 0xB68A7D00);
  v57 = v41
      + (v43 ^ 0xB43A465)
      + ((2 * v43) ^ 0xE978B735)
      + v27
      + (*((_DWORD *)&STACK[0x840]
         + (((LODWORD(STACK[0x6DC]) + 132) | (LODWORD(STACK[0x6E0]) + 211)) & 0xC7u) * (LODWORD(STACK[0x6E0]) + 211)
         % 0x114) ^ 0x5B453E80)
      + (*((_DWORD *)&STACK[0x840] + LODWORD(STACK[0x700]) - 276 * STACK[0x660] + 43780) ^ 0x5B453E80)
      + 1492728782
      + (((v45 ^ 0x910B341F) + (v25 ^ v45 ^ 0x7238B5D9) + 1) ^ ((v32 ^ 0x767B1148) + (v32 ^ 0x9548908E ^ v25) + 1) ^ v40);
  v58 = v57 - v55 - ((2 * (v57 - v55) + 352433908) & 0x65CD5842) - 43546725;
  *((_DWORD *)&STACK[0x840] + LODWORD(STACK[0x700]) - 276 * STACK[0x668] + 45173) = v57
                                                                                                + 1916707029
                                                                                                - ((2 * v57 + 770884778) & 0xB68A7D00);
  v59 = v56 + v49 - 524408450 - ((2 * (v56 + v49)) & 0xC17C52FC);
  v60 = STACK[0x708];
  v61 = ((v59 >> 23) & 0x10 | HIBYTE(v59) & 0xF) ^ 0x208;
  v62 = 7 * ((v59 >> 20) & 0xF ^ 0xB) + 3640;
  v63 = 7 * (HIWORD(v59) & 0xF ^ 0xE) + 3640;
  v64 = 7 * (((unsigned __int16)(v56 + v49 + 10622 - ((2 * (v56 + v49)) & 0x52FC)) >> 12) ^ 2) + 3640;
  v65 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(7 * v61
                                              - 960 * ((unsigned __int16)((15295 * v61) >> 16) >> 5))) ^ 0xE3 ^ ((unint64_t)(*(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(7 * ((v59 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v59 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0xE3u) << ((v37 & 0x3A) - 54 + (v37 & 0x3A ^ 0x3Au)));
  v66 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(v63 - 960 * ((unsigned __int16)((2185 * v63) >> 16) >> 5))) ^ 0xE3;
  v67 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(v64 - 960 * ((unsigned __int16)((2185 * v64) >> 16) >> 5)));
  v68 = 7 * ((v59 >> 8) & 0xF ^ 9) + 3640;
  v69 = ((v66 << 8) | (v65 << 16)) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                                          + (unsigned __int16)(v62
                                                                             - 960
                                                                             * ((unsigned __int16)((2185 * v62) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(v68 - 960 * ((unsigned __int16)((2185 * v68) >> 16) >> 5))) ^ 0xE3;
  v70 = 7 * (((v56 + v46 + 66 + 126 - ((2 * (v56 + v46 + 66)) & 0xFC)) >> 4) ^ 7) + 3640;
  v71 = ((v69 << 8) ^ ((v67 ^ 0xE3) << 12)) + 478230498 - ((2 * ((v69 << 8) ^ ((v67 ^ 0xE3) << 12))) & 0x39026E00);
  v72 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(7 * (v59 & 0xF ^ 0xE)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v59 & 0xF ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v73 = (v71 ^ 0x1C8137E2 | (v72 + 1318891251 - ((2 * v72) & 0xFFFFFFE7)) ^ 0x4E9CAEF3) ^ (16
                                                                                         * (*(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(v70 - 960 * ((unsigned __int16)((2185 * v70) >> 16) >> 5))) ^ 0xE3));
  v74 = 7 * (HIBYTE(v58) & 0xF ^ 2) + 3640;
  v75 = 7 * ((v58 >> 20) & 0xF ^ 0xE) + 3640;
  v76 = ((*(unsigned __int8 *)(STACK[0x708]
                             + (unsigned __int16)(v74 - 960
                                                      * ((unsigned __int16)((2185 * v74) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(7 * ((v58 >> 28) ^ 0xB) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v58 >> 28) ^ 0xB) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12);
  v77 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(v75 - 960 * ((unsigned __int16)((2185 * v75) >> 16) >> 5)));
  v78 = 7 * (HIWORD(v58) & 0xF ^ 6) + 3640;
  v79 = v76 | *(unsigned __int8 *)(STACK[0x708]
                                 + (unsigned __int16)(v78
                                                    - 960 * ((unsigned __int16)((2185 * v78) >> 16) >> 5))) ^ 0xE3;
  v80 = 7 * (((unsigned __int16)(v58 & 0xF000) >> 12) ^ 0xA) + 3640;
  v81 = 7 * ((v58 >> 8) & 0xF ^ 0xC) + 3640;
  v82 = (v79 << 8) ^ ((v77 ^ 0xE3) << 12);
  v83 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(v80 - 960 * ((unsigned __int16)((2185 * v80) >> 16) >> 5))) ^ 0xE3;
  v84 = 7 * ((v58 >> 4) ^ 2) + 3640;
  v85 = v82 | *(unsigned __int8 *)(STACK[0x708]
                                 + (unsigned __int16)(v81
                                                    - 960 * ((unsigned __int16)((2185 * v81) >> 16) >> 5))) ^ 0xE3;
  v86 = (v85 << 8) - 846172122 - ((v85 << 9) & 0x9B20E000);
  v87 = v86 ^ (v83 << 12);
  v88 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(7 * (v58 & 0xF ^ 1)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v58 & 0xF ^ 1) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v89 = (v87 ^ 0xCD907026 | v88) ^ (16
                                  * (*(unsigned __int8 *)(STACK[0x708]
                                                        + (unsigned __int16)(v84
                                                                           - 960
                                                                           * ((unsigned __int16)((2185 * v84) >> 16) >> 5))) ^ 0xE3));
  v90 = 7 * ((((_BYTE)v72 - 13 - ((2 * (_BYTE)v72) & 0xE7)) & 0xF ^ 3) & 0xFFFFFF0F | (16 * (v88 & 0xF)));
  v91 = *(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(v90 + 3983) % 0x3C0u);
  if (v90 >= 0x3C0)
    v90 -= 960;
  v92 = v91 ^ LODWORD(STACK[0x62C]) ^ 0xE3;
  v93 = *(unsigned __int8 *)(v60 + v90);
  v94 = 7 * v92;
  v92 *= 244671;
  v95 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v94 - 960 * ((v92 + 139217799) >> 25) + 3983));
  v96 = (v73 >> 4) - 705276023 - ((v73 >> 3) & 0xBECAF12);
  LOBYTE(v92) = (*(_BYTE *)(v60 + (unsigned __int16)(v94 - 960 * (v92 >> 25))) >> 4) ^ 0xE;
  v97 = 7 * ((v89 & 0xF0 | v96 & 0xF) ^ 9);
  v98 = 7
      * (((v92 - 2 * (v92 & 3) - 29) ^ v93)
       + ((1039800005
         * (((((2 * (_BYTE)v72) & 0xE7) - (_BYTE)v72) & 3 ^ 0x24C0C6F3) + ((((2 * (_BYTE)v72) & 0xE7) - (_BYTE)v72) & 3))) & 0x46000339));
  v99 = v97 - 960;
  if (v97 < 0x3C0)
    v99 = 7 * ((v89 & 0xF0 | v96 & 0xF) ^ 9);
  v100 = *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((v89 & 0xF0 | v96 & 0xF) ^ 9) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v60 + v98 % 0x3C0) ^ 0xE3)) ^ 0xE3;
  v101 = *(unsigned __int8 *)(v60 + v99);
  v102 = 7 * v100;
  v100 *= 244671;
  v103 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v102 - 960 * ((v100 + 139217799) >> 25) + 3983));
  LOBYTE(v100) = (*(_BYTE *)(v60 + (unsigned __int16)(v102 - 960 * (v100 >> 25))) >> 4) ^ 0xE;
  v104 = 7 * ((v100 - 2 * (v100 & 3) - 29) ^ v101) + 3983;
  v105 = 7
       * ((v89 >> 4) & 0xF0 ^ ((v59 & 0x6CC400F1 ^ 0xC400081) + (v59 & 0x6CC400F1 ^ 0x60840070) - 1824784610) & (v73 >> 8));
  v106 = *(unsigned __int8 *)(v60
                            + v105
                            + 3983
                            - 960 * (((143165577 * (unint64_t)(v105 + 3983)) >> 32) >> 5));
  v107 = v106 ^ (16
               * (*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v104
                                                        - 960
                                                        * ((unsigned __int16)((8739 * v104) >> 16) >> 7))) ^ 0xE3));
  v108 = 7 * (v107 ^ 0xE3);
  v109 = (unsigned __int16)(v108 + 3983) % 0x3C0u;
  v110 = *(unsigned __int8 *)(v60 + v105 - 960 * (((143165577 * (unint64_t)v105) >> 32) >> 5));
  v111 = (v108 ^ 0xFF6FF76B) + ((14 * (v107 ^ 0xE3)) & 0xEED6);
  v112 = v111 + 1507843773;
  v113 = (((v111 + 9438421) % 0x3C0) ^ 0x7D4FD6AE) - 603979776 + ((2 * ((v111 + 9438421) % 0x3C0)) & 0x55C) - 134;
  if ((v107 ^ 0xE2u) <= 0x89)
    v114 = v112;
  else
    v114 = v113;
  v115 = (*(_BYTE *)(v60 + v114 - 1498404392) >> 4) ^ 0xE;
  v116 = (v115 - 2 * (v115 & 3) - 29) ^ v110;
  v117 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * v116
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v116 + 3983)) >> 16) >> 7)));
  v118 = 7 * (((v87 >> 8) & 0xF0 | ((unsigned __int16)v71 >> 12)) ^ 0x73);
  v119 = v118 - 960;
  if (v118 < 0x3C0)
    v119 = 7 * (((v87 >> 8) & 0xF0 | ((unsigned __int16)v71 >> 12)) ^ 0x73);
  v120 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v118 + 3983) % 0x3C0u) ^ 0xE3;
  v121 = 16 * (v117 ^ 0xE3) + v120 - 2 * ((16 * (v117 ^ 0xE3)) & v120);
  v122 = *(unsigned __int8 *)(v60 + v119);
  v121 *= 7;
  v123 = (unsigned __int16)(v121 + 3983) % 0x3C0u;
  LOBYTE(v121) = (*(_BYTE *)(v60 + v121 % 0x3C0) >> 4) ^ 0xE;
  v124 = 7 * ((v121 - 2 * (v121 & 3) - 29) ^ v122) + 3983;
  v125 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(v124
                                               - 960 * ((unsigned __int16)((8739 * v124) >> 16) >> 7)));
  v126 = 7 * (((v87 >> 12) & 0xF0 | HIWORD(v71) & 0xF) ^ 1);
  v127 = *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * (((v87 >> 12) & 0xF0 | BYTE2(v71) & 0xF) ^ 1) + 3983)
                                  % 0x3C0u);
  if (v126 >= 0x3C0)
    v126 -= 960;
  v128 = v127 ^ (16 * (v125 ^ 0xE3)) ^ 0xE3;
  v129 = (unsigned __int16)(7 * v128 + 3983) % 0x3C0u;
  LOBYTE(v128) = (*(_BYTE *)(v60
                           + (unsigned __int16)(7 * v128
                                              - 960 * ((unsigned __int16)((244671 * v128) >> 16) >> 9))) >> 4) ^ 0xE;
  v130 = 7
       * ((v128 - 2 * (v128 & 3) - 29) ^ *(unsigned __int8 *)(v60
                                                                             + ((v126 - 910561963 - ((2 * v126) & 0x2AA)) ^ 0xC9B9ED55)));
  v131 = 7 * (((v71 >> 20) & 0xF | (16 * (((v106 & 0xF ^ 0xC) + (v106 & 0xF ^ 3)) & ((v86 >> 20) ^ 0x19)))) ^ 8);
  v132 = v131
       - 960
       * ((unsigned __int16)(7
                           * (((v71 >> 20) & 0xF | (16 * (((v106 & 0xF ^ 0xC) + (v106 & 0xF ^ 3)) & ((v86 >> 20) ^ 0x19)))) ^ 8))
        / 0x3C0u);
  v133 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v131 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v60 + (unsigned __int16)(v130 + 3983 - 960 * ((unsigned __int16)((8739 * (v130 + 3983)) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v134 = 7 * v133;
  v133 *= 244671;
  v135 = v134 - 960 * ((v133 + 139217799) >> 25);
  LOWORD(v133) = v134 - 960 * (v133 >> 25);
  v136 = v95 ^ 0xE3;
  v137 = v136 ^ (16 * (v103 ^ 0xE3)) ^ ((*(unsigned __int8 *)(v60 + v109) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v60 + v123) ^ 0xE3) << 12) ^ ((*(unsigned __int8 *)(v60 + v129) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(v135 + 3983)) ^ 0xE3) << 20);
  LOBYTE(v133) = (*(_BYTE *)(v60 + (unsigned __int16)v133) >> 4) ^ 0xE;
  v138 = 7 * ((v133 - 2 * (v133 & 3) - 29) ^ *(unsigned __int8 *)(v60 + (unsigned __int16)v132)) + 3983;
  v139 = 7 * (((v86 >> 20) & 0xF0 | HIBYTE(v71) & 0xF) ^ 0xDC);
  v140 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(v138
                                               - 960 * ((unsigned __int16)((8739 * v138) >> 16) >> 7))) ^ 0xE3;
  if (v139 >= 0x3C0)
    v139 -= 960;
  v141 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7 * (((v86 >> 20) & 0xF0 | HIBYTE(v71) & 0xF) ^ 0xDC) + 3983) % 0x3C0u) ^ (16 * v140) ^ 0xE3;
  v142 = 7 * v141;
  v141 *= 244671;
  v143 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v142 - 960 * ((v141 + 139217799) >> 25) + 3983));
  v144 = *(unsigned __int8 *)(v60 + (unsigned __int16)(v142 - 960 * (v141 >> 25))) >> 4;
  v145 = 7 * (*(_BYTE *)(v60 + v139) ^ 0xED ^ v144);
  v146 = ((v143 ^ 0xFFFFFFE3) << 24) & 0x8D000000 ^ v137 & 0xDD89A41 | ((v143 ^ 0xFFFFFFE3) << 24) & 0x72000000 ^ v137 & 0x22765BE;
  v147 = v146 - 1779411589 - 2 * (v146 & 0x15F0557F ^ v136 & 4);
  v148 = *(unsigned __int8 *)(v60
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v60
                                                                     + (unsigned __int16)(7
                                                                                        * (((((v144 ^ 1) + (v144 ^ 0xE)) | 4) & ((v71 >> 28) ^ 1) | (16 * (v86 >> 28))) ^ 0xC0)
                                                                                        + 3983)
                                                                     % 0x3C0u) ^ (unsigned __int16)(16
                                                                                                  * (*(unsigned __int8 *)(v60 + (unsigned __int16)(v145 + 3023 - 960 * ((unsigned __int16)((8739 * (v145 + 3023)) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3)
                                               + 3983)
                            % 0x3C0u) ^ 3;
  v149 = ((v148 << 28) - 1779411589 - ((v148 & 1) << 29)) ^ v147;
  v150 = v96 ^ 0x5A09A879;
  v151 = STACK[0x670];
  if (LODWORD(STACK[0x670]) == -1171494402)
    v150 = 15;
  v152 = *(_BYTE *)(v60
                  + (unsigned __int16)(7
                                     * ((((v72 - 20749 - ((2 * v72) & 0xFFE7)) & 0xF ^ 3) & 0xFF0F | (16 * (v147 & 0xF))) ^ 0xB0)
                                     + 1813)
                  % 0x3C0u);
  v153 = (7 * (v150 & (v96 ^ 0xD5F65789) ^ v147 & 0xF0 ^ 0x70) + 1813) % 0x3C0;
  v154 = 7 * (((v147 >> 4) & 0xF0 | (v73 >> 8) & 0xF) ^ 0x50) + 1813;
  v155 = 7 * (((v147 >> 8) & 0xF0 | ((unsigned __int16)v71 >> 12)) ^ 0x53) + 1813;
  v156 = v155 - 960 * ((unsigned __int16)((2185 * v155) >> 16) >> 5);
  v157 = (v147 >> 12) & 0xF0 | HIWORD(v71) & 0xF;
  v158 = 7 * (v157 ^ 1) + 1813 - 960 * ((unsigned __int16)((2185 * (7 * (v157 ^ 1u) + 1813)) >> 16) >> 5);
  v159 = 7 * (v152 & 0xF ^ 3) + 3822 - 960 * ((2185 * (7 * (v152 & 0xF ^ 3u) + 3822)) >> 21);
  v160 = (unsigned __int16)v159 - 1497876667 - ((2 * v159) & 0x68A);
  v161 = STACK[0x67C];
  v162 = LODWORD(STACK[0x67C]) - (v160 & 0x135 ^ 0x5F4B0830 | v160 & 0x135 ^ 0x105);
  v163 = 7 * ((HIWORD(v149) & 0xF0 | (v71 >> 20) & 0xF) ^ 8) + 1813;
  *((_DWORD *)&STACK[0x840] + 199 * (LODWORD(STACK[0x694]) ^ 0x73D2F939u) % 0x114) = v59 ^ 0xBBF8E714 ^ (v162 - 524408450 - ((2 * v162) & 0xC17C52FC));
  v164 = *(unsigned __int8 *)(v60 + v153) ^ 0xE3;
  v165 = v149 >> 20 >> (((HIBYTE(v71) & 0x86 ^ 4) + (HIBYTE(v71) & 0x86 ^ 0x82) - (v152 & 0x82) - (v152 & 0x82 ^ 0x82)) & 0xFE);
  v166 = 7 * ((HIBYTE(v71) & 0xF | (16 * (v165 & 0xF))) ^ 0xC) + 1813;
  v167 = (16 * v164) ^ ((*(unsigned __int8 *)(v60
                                            + (unsigned __int16)(v154
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v154) >> 16) >> 5))) ^ 0xE3) << 8);
  v168 = v167 ^ ((*(unsigned __int8 *)(v60 + v156) ^ 0xE3) << 12);
  v169 = v168 ^ ((*(unsigned __int8 *)(v60 + v158) ^ 0xE3) << 16);
  v170 = v169 ^ ((*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v163
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v163) >> 16) >> 5))) ^ 0xE3) << 20);
  v171 = v170 ^ ((*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v166
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v166) >> 16) >> 5))) ^ 0xFFFFFFE3) << 24);
  v172 = 7 * ((v165 & 0xF0 | (v71 >> 28)) ^ 1) + 1813;
  v173 = v171 ^ ((*(unsigned __int8 *)(v60
                                     + (unsigned __int16)(v172
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v172) >> 16) >> 5))) ^ 3) << 28);
  v174 = ((v173 >> 27) & 4) + ((v173 >> 28) ^ 0x222);
  v175 = ((((((*(unsigned __int8 *)(v60
                                  + (unsigned __int16)(7 * (HIBYTE(v171) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v171) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(7 * v174 - 960 * ((unsigned __int16)((15295 * v174) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * (BYTE2(v169) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v169) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((v170 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v170 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((v167 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v167 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v60 + (unsigned __int16)(7 * ((unsigned __int16)v168 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v168 >> 12) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12);
  v176 = 7 * (((16 * v164 - ((32 * v164) & 0xC0) - 29) ^ v152) >> 4) + 3822;
  v177 = LODWORD(STACK[0x680]) - 1670783336;
  v178 = LODWORD(STACK[0x6E4]) - 1918590981;
  v179 = STACK[0x6F8];
  v180 = (v177 ^ 0xFD6145B2) - LODWORD(STACK[0x6F8]) + 490451658;
  *((_DWORD *)&STACK[0x840] + LODWORD(STACK[0x700]) - 276 * (LODWORD(STACK[0x6A0]) / 0x114) + 16716) = (LODWORD(STACK[0x6F0]) - 1395797753 + LODWORD(STACK[0x688]) + v55) ^ 0x5B453E80 ^ (16 * (*(unsigned __int8 *)(v60 + (unsigned __int16)(v176 - 960 * ((unsigned __int16)((2185 * v176) >> 16) >> 5))) ^ 0xE3)) ^ (v175 | *(unsigned __int8 *)(v60 + (v160 ^ 0xA6B83745)) ^ 0xE3);
  LODWORD(STACK[0x6E8]) = (v180 ^ 0x7F7FFFAF) - 107741222 + ((2 * v180) & 0xFEFFFF5E);
  LODWORD(STACK[0x6F0]) = (v177 ^ 0xA1064C13)
                        + v161
                        - ((v177 ^ v151 ^ 0x3FC3CC4)
                         + v179)
                        + 1168552089
                        - ((2 * ((v177 ^ 0xA1064C13) + v161 - ((v177 ^ v151 ^ 0x3FC3CC4) + v179) - 1108301419)) & 0xF6C0E08);
  LODWORD(STACK[0x6B0]) = 0x4000
                        - ((((v178 ^ 0x6CECD1A8) - v55 - 363520122) ^ 0x6BFE77D7)
                         + ((2 * ((v178 ^ 0x6CECD1A8) - v55 - 363520122)) & 0xD7FCEFAE));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0]
                                        + 8 * ((2502 * (LODWORD(STACK[0x6E0]) == 47)) ^ LODWORD(STACK[0x6A8])))
                            - 8))();
}

void sub_2477E0D00(uint64_t a1, int a2)
{
  int v2;
  int v3;
  int v4;
  int v5;

  LODWORD(STACK[0x6F8]) = v2;
  LODWORD(STACK[0x6E4]) = v3 + 2080920702;
  v4 = LODWORD(STACK[0x6E0]) + 1;
  v5 = LODWORD(STACK[0x630]) + 1;
  --LODWORD(STACK[0x6DC]);
  LODWORD(STACK[0x6A0]) = a2 + 199;
  LODWORD(STACK[0x6C0]) += 199;
  LODWORD(STACK[0x6BC]) += 199;
  LODWORD(STACK[0x6E0]) = v4;
  LODWORD(STACK[0x630]) = v5;
  JUMPOUT(0x2477DF3B0);
}

uint64_t sub_2477E0DFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  unsigned int v58;
  unsigned int v59;
  unsigned int v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  BOOL v100;
  int v101;
  int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  int v131;
  unsigned __int16 v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  unsigned int v139;
  int v140;
  int v141;
  int v142;
  unsigned int v143;
  int v144;
  int v145;
  int v146;
  unsigned int v147;
  int v148;
  int v149;
  int v150;
  int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  int v161;
  unsigned int v162;
  int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  BOOL v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  int v196;
  int v197;
  int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  int v222;
  int v223;
  int v224;
  int v225;
  int v226;
  int v227;
  int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned __int16 v233;
  unsigned int v234;
  int v235;
  char v236;
  unsigned int v237;
  int v238;
  int v239;
  int v240;
  int v241;
  int v242;
  int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned __int16 v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  __int16 v268;
  __int16 v269;
  unsigned int v270;
  int v271;
  int v272;
  int v273;
  unsigned int v274;
  int v275;
  char v276;
  int v277;
  unsigned int v278;
  int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  unsigned int v286;
  int v287;
  __int16 v288;
  unsigned int v289;
  int v290;
  char v291;
  int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  unsigned int v297;
  int v298;
  unsigned int v299;
  __int16 v300;
  __int16 v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  int v306;
  int v307;
  int v308;
  int v309;
  int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  unsigned int v328;
  unsigned int v329;
  int v330;
  int v331;
  int v332;
  int v333;
  int v334;
  int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  int v344;
  unsigned int v345;
  int v346;
  int v347;
  int v348;
  int v349;
  int v350;
  int v351;
  int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  unsigned int v367;
  int v368;
  unsigned int v369;
  int v370;
  int v371;
  int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  int v379;
  int v380;
  int v381;
  unsigned int v382;
  int v383;
  unsigned __int16 v384;
  int v385;
  unsigned int v386;
  int v387;
  unsigned __int16 v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  int v394;
  unsigned int v395;
  int v396;
  unsigned int v397;
  int v398;
  int v399;
  int v400;
  int v401;
  int v402;
  int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  __int16 v417;
  int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  unsigned int v428;
  int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  unsigned int v434;
  int v435;
  int v436;
  unsigned int v437;
  int v438;
  int v439;
  unsigned int v440;
  int v441;
  int v442;
  int v443;
  int v444;
  int v445;
  int v446;
  int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned __int16 v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  unsigned int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  char v469;
  int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  __int16 v474;
  int v475;
  int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  int v487;
  __int16 v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned __int16 v494;
  unsigned int v495;
  int v496;
  unsigned int v497;
  int v498;
  unsigned int v499;
  int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  char v504;
  int v505;
  int v506;
  unsigned int v507;
  char v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  char v512;
  __int16 v513;
  int v514;
  int v515;
  int v516;
  unsigned int v517;
  int v518;
  unsigned int v519;
  int v520;
  int v521;
  unsigned int v522;
  int v523;
  int v524;
  int v525;
  unsigned int v526;
  __int16 v527;
  int v528;
  int v529;
  unsigned __int16 v530;
  int v531;
  unsigned int v532;
  __int16 v533;
  int v534;
  unsigned int v535;
  __int16 v536;
  __int16 v537;
  int v538;
  int v539;
  __int16 v540;
  int v541;
  int v542;
  int v543;
  int v544;
  unsigned int v545;
  int v546;
  int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  int v551;
  int v552;
  int v553;
  int v554;
  int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  int v563;
  int v564;
  unsigned int v565;
  int v566;
  int v567;
  unsigned int v568;
  int v569;
  int v570;
  int v571;
  int v572;
  int v573;
  unsigned int v574;
  int v575;
  int v576;
  unsigned int v577;
  unsigned int v578;
  int v579;
  unsigned int v580;
  int v581;
  int v582;
  unsigned int v583;
  int v584;
  int v585;
  int v586;
  unsigned int v587;
  unsigned int v588;
  int v589;
  unsigned int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  unsigned int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  int v607;
  int v608;
  int v609;
  int v610;
  int v611;
  int v612;
  unsigned int v613;
  unsigned int v614;
  int v615;
  unsigned int v616;
  int v617;
  int v618;
  unsigned int v619;
  int v620;
  int v621;
  int v622;
  int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  int v627;
  int v628;
  int v629;
  int v630;
  unsigned int v631;
  unsigned int v632;
  int v633;
  int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  int v644;
  int v645;
  unsigned int v646;
  unsigned int v647;
  unint64_t v648;
  int v649;
  int v650;
  unsigned int v651;
  unsigned int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  int v656;
  int v657;
  int v658;
  unsigned int v659;
  int v660;
  int v661;
  int v662;
  int v663;
  int v664;
  unsigned int v665;
  int v666;
  int v667;
  unsigned int v668;
  int v669;
  unsigned int v670;
  unsigned int v671;
  unsigned int v672;
  unsigned int v673;
  int v674;
  int v675;
  int v676;
  int v677;
  int v678;
  int v679;
  unsigned int v680;
  int v681;
  unsigned int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  int v691;
  int v692;
  int v693;
  unsigned int v694;
  int v695;
  unsigned int v696;
  unsigned int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  unsigned int v702;
  int v703;
  int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  int v708;
  int v709;
  unsigned int v710;
  int v711;
  int v712;
  unsigned int v713;
  int v714;
  unsigned int v715;
  int v716;
  unsigned int v717;
  int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  int v723;
  int v724;
  unsigned int v725;
  int v726;
  int v727;
  int v728;
  int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  int v733;
  int v734;
  int v735;
  int v736;
  int v737;
  int v738;
  int v739;
  unsigned int v740;
  unsigned int v741;
  int v742;
  unsigned int v743;
  int v744;
  int v745;
  int v746;
  int v747;
  int v748;
  int v749;
  unsigned int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  unsigned int v754;
  int v755;
  int v756;
  unsigned int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  int v762;
  int v763;
  unsigned int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  unsigned int v771;
  int v772;
  unsigned int v773;
  unsigned int v774;
  unsigned int v775;
  int v776;
  int v777;
  unsigned int v778;
  int v779;
  int v780;
  int v781;
  unsigned int v782;
  int v783;
  int v784;
  int v785;
  unsigned int v786;
  int v787;
  int v788;
  int v789;
  unsigned int v790;
  unsigned int v791;
  unsigned int v792;
  unsigned int v793;
  int v794;
  int v795;
  int v796;
  int v797;
  int v798;
  int v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  unsigned int v803;
  unsigned int v804;
  int v805;
  unsigned int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  unsigned int v812;
  int v813;
  int v814;
  unsigned int v815;
  unsigned int v816;
  unsigned int v817;
  int v818;
  int v819;
  int v820;
  unsigned int v821;
  int v822;
  unsigned int v823;
  unsigned int v824;
  int v825;
  int v826;
  unsigned int v827;
  unsigned int v828;
  unsigned int v829;
  int v830;
  int v831;
  int v832;
  unsigned int v833;
  int v834;
  unsigned int v835;
  unsigned int v836;
  unsigned int v837;
  unsigned int v838;
  unsigned int v839;
  int v840;
  unsigned int v841;
  int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  unsigned int v848;
  int v849;
  unsigned int v850;
  int v851;
  int v852;
  unsigned int v853;
  unsigned int v854;
  unsigned int v855;
  unsigned int v856;
  unsigned int v857;
  int v858;
  unsigned int v859;
  unsigned int v860;
  int v861;
  int v862;
  unsigned int v863;
  int v864;
  unsigned int v865;
  unsigned int v866;
  int v867;
  int v868;
  unsigned int v869;
  int v870;
  unsigned int v871;
  int v872;
  unsigned int v873;
  unsigned int v874;
  unsigned int v875;
  unsigned int v876;
  unsigned int v877;
  int v878;
  unsigned int v879;
  unsigned int v880;
  unsigned int v881;
  unsigned int v882;
  int v883;
  unsigned int v884;
  unsigned int v885;
  int v886;
  int v887;
  int v888;
  unsigned int v889;
  unsigned int v890;
  int v891;
  int v892;
  unsigned int v893;
  unsigned int v894;
  int v895;
  int v896;
  unint64_t v897;
  int v898;
  int v899;
  int v900;
  int v901;
  unsigned int v902;
  unsigned int v903;
  int v904;
  unsigned int v905;
  int v906;
  unsigned int v907;
  int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  int v913;
  int v914;
  unsigned int v915;
  unsigned int v916;
  int v917;
  unsigned int v918;
  unsigned int v919;
  unsigned __int16 v920;
  int v921;
  int v922;
  int v923;
  int v924;
  int v925;
  int v926;
  int v927;
  unsigned int v928;
  unsigned int v929;
  int v930;
  int v931;
  char v932;
  char v933;
  int v934;
  int v935;
  unsigned int v936;
  int v937;
  unsigned int v938;
  int v939;
  int v940;
  int v941;
  int v942;
  unsigned int v943;
  int v944;
  unsigned int v945;
  __int16 v946;
  int v947;
  int v948;
  int v949;
  int v950;
  unsigned int v951;
  int v952;
  int v953;
  unsigned int v954;
  __int16 v955;
  unsigned int v956;
  int v957;
  unint64_t v958;
  unsigned int v959;
  int v960;
  int v961;
  unsigned int v962;
  int v963;
  unsigned int v964;
  unsigned int v965;
  unsigned int v966;
  unsigned int v967;
  unsigned int v968;
  int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  int v973;
  unsigned int v974;
  int v975;
  int v976;
  unsigned int v977;
  unsigned int v978;
  int v979;
  int v980;
  int v981;
  int v982;
  int v983;
  unsigned int v984;
  int v985;
  int v986;
  unsigned int v987;
  int v988;
  unsigned int v989;
  int v990;
  int v991;
  int v992;
  int v993;
  int v994;
  int v995;
  int v996;
  unsigned __int16 v997;
  int v998;
  unsigned int v999;
  unsigned int v1000;
  int v1001;
  unsigned int v1002;
  int v1003;
  int v1004;
  unsigned int v1005;
  char v1006;
  int v1007;
  unsigned int v1008;
  char v1009;
  int v1010;
  int v1011;
  int v1012;
  int v1013;
  int v1014;
  unsigned int v1015;
  int v1016;
  int v1017;
  int v1018;
  unsigned int v1019;
  unsigned int v1020;
  uint64_t v1021;
  int v1022;

  v13 = LODWORD(STACK[0x530])
      + v9
      - 1790635162
      - ((2 * (LODWORD(STACK[0x530]) + v9 - 1790635162)) & 0xD1AF36EA)
      - 388523147;
  v14 = STACK[0x708];
  v15 = *(unsigned __int8 *)(STACK[0x708]
                           + (unsigned __int16)(7 * ((v13 >> 28) ^ 0xE)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * ((v13 >> 28) ^ 0xE) + 3640)) >> 16) >> 5)));
  v16 = LOBYTE(STACK[0xF88]) ^ 0xE3;
  v17 = (32 * v16) & 0xE60;
  v16 *= 16;
  LODWORD(STACK[0x584]) = v16;
  v18 = v16 - 390637764 - v17;
  LODWORD(STACK[0x6E4]) = v18;
  v19 = v12 - 490451657;
  v20 = v15 ^ 0xE3;
  v21 = LODWORD(STACK[0x610]) ^ 0xD8A2790E;
  LODWORD(STACK[0x518]) = v21;
  v22 = v21 - v11 - ((2 * (v21 - v11) - 727040246) & 0xAB594C4C) + 1073857963;
  v23 = 7 * (HIBYTE(v13) & 0xF ^ 8) + 3640;
  v24 = ((*(unsigned __int8 *)(v14
                             + (unsigned __int16)(v23 - 960
                                                      * ((unsigned __int16)((2185 * v23) >> 16) >> 5))) ^ 0xE3) << 8) ^ (v20 << 12);
  v25 = 7 * (HIWORD(v13) & 0xF ^ 7) + 3640;
  v26 = *(unsigned __int8 *)(v14
                           + (7 * ((v13 >> 20) & 0xF ^ 0xD) + 3640)
                           % ((((LODWORD(STACK[0x548]) + 11910720) & 0x1464D6C8)
                             - 30642919
                             + ((LODWORD(STACK[0x548]) + 11910720) & 0x1464D6C8 ^ 0x1464D6C8)) & 0xE424B7C8)) ^ 0xE3;
  v27 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v25 - 960 * ((unsigned __int16)((2185 * v25) >> 16) >> 5))) ^ 0xE3 | v24;
  v28 = 7 * ((v13 >> 8) & 0xF ^ 0xB) + 3640;
  v29 = 7 * (((unsigned __int16)(v13 & 0xF000) >> 12) ^ 9) + 3640;
  v30 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v28 - 960 * ((unsigned __int16)((2185 * v28) >> 16) >> 5)));
  v31 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v29 - 960 * ((unsigned __int16)((2185 * v29) >> 16) >> 5))) ^ 0xE3;
  v32 = 7 * ((v13 >> 4) ^ 7) + 3640;
  v33 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v32 - 960 * ((unsigned __int16)((2185 * v32) >> 16) >> 5))) ^ 0xE3;
  LODWORD(STACK[0x698]) = a6;
  v34 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(7 * (v13 & 0xF ^ 5)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v13 & 0xF ^ 5) + 3640)) >> 16) >> 5)));
  v35 = (v27 << 8) ^ (v26 << 12) | v30 ^ 0xE3;
  v36 = (v35 << 8) - 192894918 - ((v35 << 9) & 0xE9015000);
  LODWORD(STACK[0x700]) = v36;
  v37 = v36 ^ (v31 << 12);
  v38 = (v37 ^ 0xF480A83A | v34 ^ 0xE3) ^ (16 * v33);
  v39 = (BYTE2(v22) ^ 0xACu) >> ((BYTE2(v22) & 4 ^ 4) + (BYTE2(v22) & 4));
  LOWORD(v30) = v39 - ((2 * v39) & 0x130) - 17000;
  v40 = 7 * (HIBYTE(v22) & 0xF ^ 5) + 3640;
  v41 = (v39 & 7 ^ ((v30 ^ 0x60) + (v30 & 0xF8 ^ 0x9F) + 1) ^ 7) * ((HIWORD(v22) & 0xF ^ 0xC) + 520);
  v42 = 7 * (((unsigned __int16)((v21 - v11 - ((2 * (v21 - v11) + 16138) & 0x4C4C) - 14933) & 0xF000) >> 12) ^ 0xA)
      + 3640;
  v43 = ((((*(unsigned __int8 *)(v14
                               + (unsigned __int16)(v40
                                                  - 960 * ((unsigned __int16)((2185 * v40) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v22 >> 28) ^ 5) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v22 >> 28) ^ 5) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (v41 - 960 * ((4473925 * (unint64_t)v41) >> 32))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v30 ^ 0xBD98) + 3640) % 0x3C0u) ^ 0xE3) << 12);
  v44 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v42 - 960 * ((unsigned __int16)((2185 * v42) >> 16) >> 5))) ^ 0xE3;
  v45 = 7 * ((v22 >> 8) & 0xF ^ 6) + 3640;
  v46 = 7 * (((v21 - v11 - ((2 * (v21 - v11) + 10) & 0x4C) - 85) >> 4) ^ 2) + 3640;
  v47 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v45 - 960 * ((unsigned __int16)((2185 * v45) >> 16) >> 5))) ^ 0xE3;
  v48 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(v46 - 960 * ((unsigned __int16)((2185 * v46) >> 16) >> 5)));
  v49 = *(unsigned __int8 *)(v14
                           + (unsigned __int16)(7 * (v22 & 0xF ^ 6)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v22 & 0xF ^ 6) + 3640)) >> 16) >> 5)));
  LODWORD(STACK[0x6F8]) = (v34 ^ 0xE3) & 0xF;
  v50 = ((v43 | v47) << 8) - 1864909348 - (((v43 | v47) << 9) & 0x21AF7A00);
  v51 = v50 ^ (v44 << 12);
  v49 ^= 0xE3u;
  v52 = (v51 ^ 0x90D7BDDC | v49) ^ (16 * (v48 ^ 0xE3));
  v53 = 7 * ((v34 ^ 0xE3) & 0xF | (16 * (v49 & 0xF)));
  v54 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v53 + 3983) % 0x3C0u) ^ 0xE3;
  v55 = v54 - 390637764 - ((2 * v54) & 0x78);
  if (v53 >= 0x3C0)
    v53 -= 960;
  v56 = *(unsigned __int8 *)(v14 + v53);
  v57 = 7 * (v55 ^ v18);
  LODWORD(STACK[0x6DC]) = v57;
  v58 = *(unsigned __int8 *)(v14 + v57 % 0x3C0);
  v59 = v38;
  LODWORD(STACK[0x688]) = v38;
  v60 = 7 * (v52 & 0xF0 | (v38 >> 4));
  v61 = 7 * ((((v58 >> 4) ^ 0xE) - 2 * (((v58 >> 4) ^ 0xE) & 3) - 29) ^ v56) + 3983;
  v62 = *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v52 & 0xF0 | (v38 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v61 - 960 * ((unsigned __int16)((8739 * v61) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LODWORD(STACK[0x6C0]) = v62;
  LODWORD(STACK[0x6BC]) = 7 * v62;
  LODWORD(STACK[0x6E0]) = (unsigned __int16)(7 * v62 + 3983)
                        % (((unsigned __int16)(112 - 7 * v62) | (unsigned __int16)(7 * v62 + 3983)) & 0x3C0u);
  v63 = STACK[0x6F0];
  v64 = v19 ^ 0xABC1294F ^ LODWORD(STACK[0x6F0]);
  v65 = v19 ^ 0x2C772E4B;
  v66 = STACK[0x6E8];
  v67 = (v8 ^ 0x1E5A1FF4) - LODWORD(STACK[0x6E8]) + (LODWORD(STACK[0x6F0]) ^ 0x7849F8FB);
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x6F0]) ^ 0x87B60704;
  v68 = v67 + v64 + 2031353738;
  v69 = ((2 * (v68 ^ (v66 + 1920112667 + (v63 ^ 0x87B60704)))) & 0x7F7F56BE)
      + (v68 ^ (v66 + 1920112667 + (v63 ^ 0x87B60704)) ^ 0x3FBFAB5F);
  v70 = v65 + 987340516;
  v71 = (v65 - 82187810 + v69 + 2471) ^ v68;
  LODWORD(STACK[0x604]) = v69 - 1069525855;
  v72 = v71 + v69 - 1069525855;
  LODWORD(STACK[0x59C]) = v71;
  LODWORD(STACK[0x694]) = v72 ^ 0xDCF3890C;
  v73 = (v72 ^ 0xDCF3890C) + v70;
  v74 = LODWORD(STACK[0x54C])
      - 809967257
      + v73
      - 2139031311
      + (~(2 * (LODWORD(STACK[0x54C]) - 809967257 + v73) + 139342998) | 0x874C42B5);
  LODWORD(STACK[0x6A8]) = v13 ^ v63;
  LODWORD(STACK[0x5B4]) = (7 * (v74 & 0xF ^ 5) + 3640)
                        % (((7 * (v74 & 0xF ^ 5) + 3640) & 0xCB3 ^ (-3641 - 7 * (v74 & 0xF ^ 5)) & 0xE59AB0B3)
                         * (((v13 ^ v63) & 0x5321EFA1 ^ 0x43218C21 | (v13 ^ v63) & 0x5321EFA1 ^ 0x10006380) + 2039700895));
  v75 = (v11 + 363520123) ^ 0x2C772E4B;
  v76 = (v10 ^ 0x8EB50D67)
      + LODWORD(STACK[0x6B0])
      + (LODWORD(STACK[0x698]) ^ 0x6012FCEB)
      + ((v75 - 1611857132 - ((2 * v75) & 0x3FDA0628)) ^ LODWORD(STACK[0x698]))
      + 1811822552;
  v77 = LODWORD(STACK[0x698]) ^ 0x9FED0314;
  v78 = ((2 * (v76 ^ (a8 + 2139643853 + v77))) & 0xCFFEDDBE) + (v76 ^ (a8 + 2139643853 + v77) ^ 0xE7FF6EDF);
  v79 = (v75 + 1390030853 + v78) ^ v76;
  v80 = v78 + v77 - ((2 * (v78 + v77) + 1703715998) & 0x4C5F2D9C);
  v81 = v78 + 402690337 + v79;
  v82 = v79 - 659905370 - ((2 * v79) & 0xB155494C);
  v83 = v75 + 1489241569 + (v81 ^ 0xDCF3890C);
  v84 = (v72 + 1369363063 - ((2 * v72) & 0xA33DBAAA) + 2782) ^ v71;
  LODWORD(STACK[0x4D8]) = v84;
  LODWORD(STACK[0x4E8]) = v84 ^ 0x8D6D5459;
  v85 = (v84 ^ 0x8D6D5459) + v73;
  LODWORD(STACK[0x508]) = v85;
  v86 = LODWORD(STACK[0x540]) ^ 0x21A5C3D;
  LODWORD(STACK[0x514]) = v86;
  LODWORD(STACK[0x4F4]) = v86 - 1944238268 + v85 - ((2 * (v86 - 1944238268 + v85)) & 0x1CBB2A22);
  LODWORD(STACK[0x4F8]) = v81 ^ 0x4592DAA;
  v87 = v82 ^ v81 ^ 0x4592DAA;
  LODWORD(STACK[0x4E4]) = v87;
  v87 -= 169560882;
  LODWORD(STACK[0x4EC]) = v87;
  LODWORD(STACK[0x504]) = v87 + v83;
  LODWORD(STACK[0x4E0]) = LODWORD(STACK[0x538])
                        - (v87
                         + v83)
                        - 1301048538
                        - ((2 * (LODWORD(STACK[0x538]) - (v87 + v83) - 1301048538) - 1752863126) & 0xE0667664);
  if (v60 >= 0x3C0)
    v88 = v60 - 960;
  else
    v88 = v60;
  LODWORD(STACK[0x5D4]) = v88;
  v89 = 7 * ((v52 >> 4) & 0xF0 | (v59 >> 8) & 0xF);
  v90 = 7 * (((v51 >> 8) & 0xF0 | ((unsigned __int16)v37 >> 12)) ^ 0xBA);
  v91 = 7 * (((v51 >> 12) & 0xF0 | HIWORD(v37) & 0xF) ^ 0x70);
  LODWORD(STACK[0x658]) = v50;
  v92 = 7 * ((HIWORD(v50) & 0xF0 | (LODWORD(STACK[0x700]) >> 20) & 0xF) ^ 0xD8);
  v93 = 7 * (((v50 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x700])) & 0xF) ^ 4);
  v94 = ((2 * ((unsigned __int16)(7 * (((v50 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x700])) & 0xF) ^ 4) + 3983) % 0x780u)) & 0xDBA)
      + (((unsigned __int16)(7 * (((v50 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x700])) & 0xF) ^ 4) + 3983) % 0x780u) ^ 0x1FF76EDD);
  LODWORD(STACK[0x610]) = v94;
  LODWORD(STACK[0x5B8]) = v89;
  if (v89 >= 0x3C0)
    v95 = v89 - 960;
  else
    v95 = 7 * ((v52 >> 4) & 0xF0 | (v59 >> 8) & 0xF);
  LODWORD(STACK[0x5D0]) = v95;
  LODWORD(STACK[0x5C0]) = v90;
  if (v90 >= 0x3C0)
    v96 = v90 - 960;
  else
    v96 = 7 * (((v51 >> 8) & 0xF0 | ((unsigned __int16)v37 >> 12)) ^ 0xBA);
  LODWORD(STACK[0x5EC]) = v96;
  LODWORD(STACK[0x5D8]) = v91;
  if (v91 >= 0x3C0)
    v97 = v91 - 960;
  else
    v97 = 7 * (((v51 >> 12) & 0xF0 | HIWORD(v37) & 0xF) ^ 0x70);
  LODWORD(STACK[0x608]) = v97;
  LODWORD(STACK[0x5F0]) = v92;
  if (v92 >= 0x3C0)
    v98 = v92 - 960;
  else
    v98 = v92;
  LODWORD(STACK[0x630]) = v98;
  if (v93 >= 0x3C0)
    v99 = v93 - 960;
  else
    v99 = v93;
  LODWORD(STACK[0x644]) = v99;
  v100 = v94 - 536309469 >= 0x3C0;
  v101 = LODWORD(STACK[0x528]) + 1846936128;
  LODWORD(STACK[0x3CC]) = v101;
  v102 = v70 + v101 + 45139448;
  v103 = v102 - ((2 * (v70 + v101)) & 0x5618BF0);
  LODWORD(STACK[0x6B0]) = v103;
  v104 = LODWORD(STACK[0x61C]) ^ 0xA27DAF98;
  LODWORD(STACK[0x510]) = v104;
  v105 = 7 * (HIBYTE(v103) & 0xF ^ 2) + 3640;
  v106 = 7 * ((v103 >> 20) & 0xF ^ 0xB) + 3640;
  v107 = (((*(unsigned __int8 *)(v14
                               + (unsigned __int16)(v105
                                                  - 960 * ((unsigned __int16)((2185 * v105) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v103 >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v103 >> 28) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v103) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v103) & 0xF) + 3640)) >> 16) >> 5)))) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v106 - 960 * ((unsigned __int16)((2185 * v106) >> 16) >> 5))) ^ 0xE3));
  v108 = 7 * (((unsigned __int16)v103 >> 12) ^ 0xC) + 3640;
  v109 = 7 * ((v103 >> 8) & 0xF ^ 5) + 3640;
  v110 = 7 * (~(v103 >> 4) & 0xF) + 3640;
  v111 = ((v107 << 16) ^ 0xE30000) - 75105334 - ((2 * ((v107 << 16) ^ 0xE30000)) & 0xF70A0000);
  v112 = ((v111 ^ 0xFB85FBCA)
        + ((*(unsigned __int8 *)(v14
                               + (unsigned __int16)(v109
                                                  - 960 * ((unsigned __int16)((2185 * v109) >> 16) >> 5))) ^ 0xE3) << 8)) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v108 - 960 * ((unsigned __int16)((2185 * v108) >> 16) >> 5))) ^ 0xE3) << 12);
  v113 = v104 - v75 - 987340516 - ((2 * (v104 - v75 - 987340516)) & 0xA215C36A) + 1359667637;
  v114 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v102 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v102 & 0xF ^ 8u) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v115 = (v112 | v114) ^ (16
                        * (*(unsigned __int8 *)(v14
                                              + (unsigned __int16)(v110
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v110) >> 16) >> 5))) ^ 0xE3));
  v116 = 7 * (HIBYTE(v113) & 0xF ^ 1) + 3640;
  v117 = (unsigned __int16)(v116 - 960 * ((unsigned __int16)((2185 * v116) >> 16) >> 5))
       + 344425893
       - ((2 * (v116 - 960 * ((2185 * v116) >> 21))) & 0x34A);
  v118 = 7 * (HIWORD(v113) & 0xF ^ 0xA) + 3640;
  v119 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v118
                                               - 960 * ((unsigned __int16)((2185 * v118) >> 16) >> 5))) ^ 0xE3 ^ ((unint64_t)(*(unsigned __int8 *)(v14 + (v117 ^ 0x148785A5)) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v113 >> 28) ^ 5) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v113 >> 28) ^ 5) + 3640)) >> 16) >> 5))) ^ 0xE3)) ^ 0xE3u) << ((v107 & 0x28 ^ 8 | v107 & 0x28 ^ 0x20) & ((v117 & 0x18 ^ 0x18) + (v117 & 0x18))));
  v120 = 7 * (((unsigned __int16)(v104 - v75 + 24860 - ((2 * (v104 - v75 + 24860)) & 0xC36A) - 7755) >> 12) ^ 0xE)
       + 3640;
  v121 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v120
                                               - 960 * ((unsigned __int16)((2185 * v120) >> 16) >> 5))) ^ 0xE3;
  v122 = 16 * v121 + 1704353808 - 32 * (v121 & 1);
  v123 = ((v113 >> 7) & 0x10 | (v113 >> 8) & 0xF) ^ 0x209;
  v124 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * v123
                                               - 960 * ((unsigned __int16)((15295 * v123) >> 16) >> 5))) ^ 0xE3;
  v125 = (v119 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(7 * ((v113 >> 20) & 0xF)
                                                               + 3640
                                                               - 960
                                                               * ((unsigned __int16)((2185
                                                                                    * (7 * ((v113 >> 20) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | v124;
  v126 = (v125 + 9854993 + ~(2 * (v125 & 0x65966012 ^ v124 & 2))) ^ v122;
  v127 = 7
       * (((v104 - v75 + 28 - ((2 * (v104 - v75 + 28)) & 0x6A) - 75) ^ 0xB5u) >> (((v122 & 0x70 ^ 0x9B)
                                                                                                  + (v122 & 0x70 ^ 0x69)) & 0xFC))
       + 3640;
  v128 = 7 * (v113 & 0xF ^ 5) + 3640 - 960 * ((2185 * (7 * (v113 & 0xF ^ 5) + 3640)) >> 21);
  v129 = (unsigned __int16)v128 + 1371888207 - ((2 * v128) & 0x49E);
  v130 = (*(unsigned __int8 *)(v14 + (v129 ^ 0x51C55A4Fu)) ^ 0xE3 | (v126 << 8)) ^ ((unint64_t)(*(unsigned __int8 *)(v14 + (unsigned __int16)(v127 - 960 * ((unsigned __int16)((8739 * v127) >> 16) >> 7))) ^ 0xE3u) << (((v129 & 0x21 ^ 1) + (v129 & 0x21 ^ 0x20)) ^ 0x25u));
  v131 = v114 & 0xF;
  LODWORD(STACK[0x680]) = v131;
  v132 = 7 * (v131 & 0xFF0F | (16 * (v130 & 0xF)));
  v133 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v132 + 3983) % 0x3C0u) ^ 0xE3;
  v134 = STACK[0x6E4];
  v135 = 7 * ((v133 - 390637764 - ((2 * v133) & 0x78)) ^ LODWORD(STACK[0x6E4]));
  LODWORD(STACK[0x64C]) = v135;
  if (v100)
    v136 = -135554560;
  else
    v136 = -135553600;
  LODWORD(STACK[0x588]) = v136;
  if (v132 >= 0x3C0u)
    v132 -= 960;
  v137 = *(unsigned __int8 *)(v14 + v135 % 0x3C0);
  v138 = 7
       * ((((v137 >> 4) ^ 0xE) - 2 * (((v137 >> 4) ^ 0xE) & 3) - 29) ^ *(unsigned __int8 *)(v14 + v132))
       + 3983;
  LODWORD(STACK[0x654]) = v115;
  v139 = 7 * (v130 & 0xF0 | (v115 >> 4));
  v140 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v138
                                               - 960 * ((unsigned __int16)((8739 * v138) >> 16) >> 7)));
  if (v139 >= 0x3C0)
    v139 -= 960;
  v141 = *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v130 & 0xF0 | (v115 >> 4)) + 3983) % 0x3C0u) ^ (16 * (v140 ^ 0xE3)) ^ 0xE3;
  LODWORD(STACK[0x640]) = 7 * v141;
  LODWORD(STACK[0x634]) = 244671 * v141;
  LOBYTE(v141) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v141
                                              - 960 * ((unsigned __int16)((244671 * v141) >> 16) >> 9))) >> 4) ^ 0xE;
  v142 = 7 * ((v141 - 2 * (v141 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v139)) + 3983;
  v143 = 7 * ((v130 >> 4) & 0xF0 | (v115 >> 8) & 0xF);
  v144 = *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v130 >> 4) & 0xF0 | (v115 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v142 - 960 * ((unsigned __int16)((8739 * v142) >> 16) >> 7))) ^ 0xE3));
  if (v143 >= 0x3C0)
    v143 -= 960;
  v145 = v144 ^ 0xE3;
  LODWORD(STACK[0x62C]) = 7 * v145;
  LOBYTE(v145) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v145
                                              - 960 * ((unsigned __int16)((244671 * v145) >> 16) >> 9))) >> 4) ^ 0xE;
  v146 = 7 * ((v145 - 2 * (v145 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v143)) + 3983;
  LODWORD(STACK[0x638]) = v112;
  v147 = 7 * ((v130 >> 8) & 0xF0 | ((unsigned __int16)v112 >> 12));
  v148 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * ((v130 >> 8) & 0xF0 | ((unsigned __int16)v112 >> 12)) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v14
                                                             + (unsigned __int16)(v146
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v146) >> 16) >> 7))) ^ 0xE3));
  if (v147 >= 0x3C0)
    v147 -= 960;
  v149 = *(unsigned __int8 *)(v14 + v147);
  v150 = v148 ^ 0xE3;
  LODWORD(STACK[0x5FC]) = 7 * v150;
  LODWORD(STACK[0x5F8]) = 244671 * v150;
  LOBYTE(v150) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v150
                                              - 960 * ((unsigned __int16)((244671 * v150) >> 16) >> 9))) >> 4) ^ 0xE;
  v151 = (v150 - 2 * (v150 & 3) - 29) ^ v149;
  v152 = 7 * ((v130 >> 12) & 0xF0 | HIWORD(v112) & 0xF);
  v153 = v152 + 3983 - 960 * ((unsigned __int16)(7 * ((v130 >> 12) & 0xF0 | BYTE2(v112) & 0xF) + 3983) / 0x3C0u);
  v154 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * v151
                                               + 3983
                                               - 960
                                               * ((unsigned __int16)((8739 * (7 * v151 + 3983)) >> 16) >> 7)));
  if (v152 >= 0x3C0)
    v152 -= 960;
  v155 = *(unsigned __int8 *)(v14 + (unsigned __int16)v153) ^ (16 * (v154 ^ 0xE3)) ^ 0xE3;
  LODWORD(STACK[0x5C8]) = 7 * v155;
  LOBYTE(v155) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v155
                                              - 960 * ((unsigned __int16)((244671 * v155) >> 16) >> 9))) >> 4) ^ 0xE;
  v156 = 7 * ((v155 - 2 * (v155 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v152)) + 3983;
  v157 = 7 * ((HIWORD(v130) & 0xF0 | (v111 >> 20) & 0xF) ^ 8);
  v158 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * ((BYTE2(v130) & 0xF0 | (v111 >> 20) & 0xF) ^ 8) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v156 - 960 * ((unsigned __int16)((8739 * v156) >> 16) >> 7))) ^ 0xE3));
  if (v157 >= 0x3C0)
    v157 -= 960;
  v159 = HIBYTE(v130);
  LODWORD(STACK[0x5DC]) = v111;
  v160 = v158 ^ 0xE3;
  LODWORD(STACK[0x5B0]) = 7 * v160;
  LODWORD(STACK[0x5A8]) = 244671 * v160;
  LOBYTE(v160) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v160
                                              - 960 * ((unsigned __int16)((244671 * v160) >> 16) >> 9))) >> 4) ^ 0xE;
  v161 = 7 * ((v160 - 2 * (v160 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v157)) + 3983;
  v162 = 7 * (((HIBYTE(v111) & 0xF | (16 * ((v159 ^ 0xFFFFFF0) + (v159 | 0xF)))) + 16) ^ 0xB);
  v163 = *(unsigned __int8 *)(v14 + (v162 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v14
                                                                                  + (unsigned __int16)(v161 - 960 * ((unsigned __int16)((8739 * v161) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LODWORD(STACK[0x598]) = 7 * v163;
  LODWORD(STACK[0x594]) = 244671 * v163;
  LOBYTE(v163) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v163
                                              - 960 * ((unsigned __int16)((244671 * v163) >> 16) >> 9))) >> 4) ^ 0xE;
  v164 = 7 * ((v163 - 2 * (v163 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v162 % 0x3C0)) + 3983;
  LODWORD(STACK[0x61C]) = ~v111;
  v165 = 7 * (v159 & 0xF0 | (~v111 >> 28)) + 3983;
  v166 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v165 - 960 * ((unsigned __int16)((8739 * v165) >> 16) >> 7))) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v164 - 960 * ((unsigned __int16)((8739 * v164) >> 16) >> 7))) ^ 0xE3));
  v167 = ((2 * (v166 ^ 0xE1E1E1E1)) & 0x472) + (v166 ^ 0x2DA);
  v168 = (((7 * v167 - 960) % 0x3C0) ^ 0x5FE74BFD) - 352518568 + ((2 * ((7 * v167 - 960) % 0x3C0)) & 0x7FA);
  v169 = v167 > 0x89;
  v170 = 7 * v167 + 1256475221;
  if (v169)
    v171 = v168;
  else
    v171 = v170;
  LODWORD(STACK[0x5BC]) = v171;
  v172 = LODWORD(STACK[0x52C]) + 1106281803;
  LODWORD(STACK[0x3C8]) = v172;
  v173 = v70 + v172 - 1319298150 - ((2 * (v70 + v172)) & 0x62BA3734);
  v174 = LODWORD(STACK[0x670]) - 1698315986;
  LODWORD(STACK[0x4DC]) = v174;
  v175 = (v173 ^ 0xB15D1B9A) >> ((v174 ^ ((v63 ^ 0x1A) + 18)) & 0x18);
  v176 = LODWORD(STACK[0x53C]) - v75 - ((2 * (LODWORD(STACK[0x53C]) - v75) + 730818734) & 0x5AD3FBFA);
  LODWORD(STACK[0x6E8]) = v80 + 1492511005;
  v177 = 7 * ((v173 >> 20) & 0xF ^ 5) + 3640;
  v178 = 7 * (((unsigned __int16)v173 >> 12) ^ 1) + 3640;
  v179 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7 * (v175 & 0xF)
                                                 + 3640
                                                 - 960
                                                 * ((unsigned __int16)((2185 * (7 * (v175 & 0xF) + 3640)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v175 >> 4) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v175 >> 4) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (((v80 - 5859) & 0xF ^ 0xE | (v80 - 5859) & 0xF ^ 1) & (HIWORD(v173) ^ 0xD)) + 3640) % 0x3C0u) ^ 0xE3;
  v180 = 7 * ((v173 >> 8) & 0xF ^ 0xB) + 3640;
  LODWORD(STACK[0x67C]) = v173;
  v181 = 7 * ((v173 >> 4) ^ 9) + 3640;
  v182 = (unsigned __int16)(v181 - 960 * ((unsigned __int16)((2185 * v181) >> 16) >> 5))
       + 1446956945
       - ((2 * (v181 - 960 * ((2185 * v181) >> 21))) & 0x722);
  v183 = (v179 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v177
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v177) >> 16) >> 5))) ^ 0xE3) << 12);
  v184 = (v182 & 0x208 ^ 8) + (v173 & 0xF ^ 0xA) + (v182 & 0x208 ^ 0x200);
  v185 = v183 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(v180
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v180) >> 16) >> 5))) ^ 0xE3;
  v186 = (v185 << 8) + 122610119 - ((v185 << 9) & 0xE9DC200);
  v187 = v176 + 53588564;
  v188 = 7 * (((v176 + 53588564) >> 28) ^ 0xA) + 3640;
  v189 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v178
                                               - 960 * ((unsigned __int16)((2185 * v178) >> 16) >> 5))) ^ 0xE3;
  v190 = *(unsigned __int8 *)(v14 + (v182 ^ 0x563ECF91)) ^ 0xE3;
  v191 = v186 ^ (v189 << 12);
  LODWORD(STACK[0x650]) = v186;
  v192 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * v184
                                               - 960 * ((unsigned __int16)((122339 * v184) >> 16) >> 8))) ^ 0xE3;
  v193 = (v191 ^ 0x74EE1C7 | v192) ^ (16 * v190);
  v194 = 7 * (HIBYTE(v187) & 0xF ^ 0xD) + 3640;
  v195 = 7 * ((v187 >> 20) & 0xF ^ 6) + 3640;
  v196 = 7 * (HIWORD(v187) & 0xF ^ 9) + 3640;
  v197 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v194
                                                 - 960 * ((unsigned __int16)((2185 * v194) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v188 - 960 * ((unsigned __int16)((2185 * v188) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v196 - 960 * ((unsigned __int16)((2185 * v196) >> 16) >> 5))) ^ 0xE3;
  v198 = 7 * ((unsigned __int16)~(_WORD)v187 >> 12) + 3640;
  v199 = (v197 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v195
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v195) >> 16) >> 5))) ^ 0xE3) << 12);
  v200 = 7 * ((v187 >> 8) & 0xF ^ 0xD) + 3640;
  v201 = v199 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v198
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v198) >> 16) >> 5))) ^ 0xE3));
  v202 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v200
                                               - 960 * ((unsigned __int16)((2185 * v200) >> 16) >> 5))) ^ 0xE3 ^ v201;
  v203 = (v202 << 8) + 1995505770 - ((v201 << 9) & 0xEDE20000);
  v204 = 7 * (~(v187 >> 4) & 0xF) + 3640;
  v205 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v187 & 0xF ^ 0xD)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v187 & 0xF ^ 0xD) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v206 = (v203 ^ 0x76F1006A | v205) ^ (16
                                     * (*(unsigned __int8 *)(v14
                                                           + (unsigned __int16)(v204
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v204) >> 16) >> 5))) ^ 0xE3));
  v207 = v192 & 0xF;
  LODWORD(STACK[0x668]) = v207;
  v208 = 7 * (v207 & 0xFFFFFF0F | (16 * (v205 & 0xF)));
  LODWORD(STACK[0x660]) = v193;
  v209 = 7 * (v206 & 0xF0 | (v193 >> 4));
  LODWORD(STACK[0x58C]) = v209;
  LODWORD(STACK[0x578]) = v208;
  if (v208 >= 0x3C0)
    v210 = v208 - 960;
  else
    v210 = 7 * (v207 & 0xFFFFFF0F | (16 * (v205 & 0xF)));
  LODWORD(STACK[0x5CC]) = v210;
  if (v209 >= 0x3C0)
    v211 = v209 - 960;
  else
    v211 = 7 * (v206 & 0xF0 | (v193 >> 4));
  LODWORD(STACK[0x5E0]) = v211;
  v212 = (v206 >> 4) & 0xF0 | (v193 >> 8) & 0xF;
  LODWORD(STACK[0x5A0]) = v212;
  if ((7 * v212) >= 0x3C0)
    v213 = 7 * v212 - 960;
  else
    v213 = 7 * v212;
  LODWORD(STACK[0x600]) = v213;
  LODWORD(STACK[0x670]) = v191;
  v214 = 7 * ((v202 & 0xF0 | ((unsigned __int16)v191 >> 12)) ^ 0xE);
  LODWORD(STACK[0x648]) = v203;
  v215 = 7 * (((v203 >> 12) & 0xF0 | HIWORD(v191) & 0xF) ^ 0x1E);
  v216 = (v186 >> 20) ^ 0x74;
  v217 = 7
       * ((((6 - LODWORD(STACK[0x59C])) | (LODWORD(STACK[0x59C]) + 9)) & v216 & 0xF | (16 * ((v203 >> 20) & 0xF))) ^ 0xF0);
  v218 = 7 * (((v203 >> 20) & 0xF0 | (v216 >> 4)) ^ 0x60);
  LODWORD(STACK[0x6A0]) = v74;
  v219 = 7 * (HIBYTE(v74) & 0xF ^ 0xC) + 3640;
  v220 = LODWORD(STACK[0x620]) ^ 0x7C085D2E;
  LODWORD(STACK[0x50C]) = v220;
  v221 = v220 - v83 - ((2 * (v220 - v83)) & 0x9A158CD2);
  v222 = 7 * ((v74 >> 20) & 0xF ^ 5) + 3640;
  v223 = 7 * (HIWORD(v74) & 0xF ^ 9) + 3640;
  v224 = ((((*(unsigned __int8 *)(v14
                                + (unsigned __int16)(v219
                                                   - 960 * ((unsigned __int16)((2185 * v219) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v74 >> 28) ^ 0xB) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v74 >> 28) ^ 0xB) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v223 - 960 * ((unsigned __int16)((2185 * v223) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v222 - 960 * ((unsigned __int16)((2185 * v222) >> 16) >> 5))) ^ 0xE3) << 12);
  v225 = 7 * (((unsigned __int16)(v74 & 0xF000) >> 12) ^ 0xD) + 3640;
  LOWORD(v222) = v225 - 960 * ((unsigned __int16)((2185 * v225) >> 16) >> 5);
  v226 = 7 * ((v74 >> 8) & 0xF ^ 0xE) + 3640;
  v227 = 7 * ((v74 >> 4) ^ 0xA) + 3640;
  v228 = v224 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(v226
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v226) >> 16) >> 5))) ^ 0xE3;
  v229 = (v228 << 8) + 486007483 - ((v228 << 9) & 0x39EFC400);
  v230 = LODWORD(STACK[0x5B4]) - 144009239 - ((2 * LODWORD(STACK[0x5B4])) & 0xFD2);
  v231 = v221 + 1292551785;
  v232 = (~v230 & 0x208) + (((v221 + 1292551785) >> 28) ^ 4) + (~v230 & 0x208 ^ 0x208);
  v233 = 7 * v232 - 960 * ((unsigned __int16)((122339 * v232) >> 16) >> 8);
  v234 = v229 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v222) ^ 0xE3) << 12);
  v235 = *(unsigned __int8 *)(v14 + (v230 ^ 0xF76A97E9));
  v236 = v235 ^ 0xE3;
  v237 = (v234 ^ 0x1CF7E2BB | v235 ^ 0xE3) ^ (16
                                            * (*(unsigned __int8 *)(v14
                                                                  + (unsigned __int16)(v227
                                                                                     - 960
                                                                                     * ((unsigned __int16)((2185 * v227) >> 16) >> 5))) ^ 0xE3));
  v238 = 7 * (HIBYTE(v231) & 0xF ^ 0xD) + 3640;
  v239 = *(unsigned __int8 *)(v14 + v233);
  v240 = 7 * ((BYTE2(v231) ^ 0xA) >> ((v239 & 4 ^ 4) + (v239 & 4))) + 3640;
  v241 = 7 * ((BYTE2(v231) ^ 0xA) & 0xF) + 3640;
  v242 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v238
                                                 - 960 * ((unsigned __int16)((2185 * v238) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((v239 ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v241 - 960 * ((unsigned __int16)((2185 * v241) >> 16) >> 5))) ^ 0xE3;
  v243 = 7 * (((unsigned __int16)v231 >> 12) ^ 0xC) + 3640;
  v244 = 7 * ((v231 >> 8) & 0xF ^ 6) + 3640;
  v245 = (v242 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v240
                                                               - 960
                                                               * ((unsigned __int16)((8739 * v240) >> 16) >> 7))) ^ 0xE3) << 12);
  v246 = 7 * ((v231 >> 4) ^ 6) + 3640;
  v247 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v246
                                               - 960 * ((unsigned __int16)((2185 * v246) >> 16) >> 5)));
  v248 = v247 & 0xF ^ 0xC | v247 & 0xF ^ 3;
  v249 = v245 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(v244
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v244) >> 16) >> 5))) ^ 0xE3;
  v250 = (v249 << 8) + 1678164068 - ((v249 << 9) & 0xC80D8000);
  v251 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v231 & 0xF ^ 9)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v231 & 0xF ^ 9) + 3640)) >> 16) >> 5)));
  v252 = v250 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v243
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v243) >> 16) >> 5))) ^ 0xE3) << 12);
  v253 = (v252 ^ 0x6406C064 | v251 ^ 0xE3) ^ (16 * (v247 ^ 0xE3));
  v254 = 7 * (v248 & (v235 ^ 3) & 0xFFFFFF0F | (16 * ((v251 ^ 0xE3) & 0xF)));
  v255 = (unsigned __int16)(v254 + 3983) % 0x3C0u;
  LODWORD(STACK[0x568]) = v214;
  if (v214 >= 0x3C0)
    v256 = v214 - 960;
  else
    v256 = v214;
  LODWORD(STACK[0x574]) = v256;
  LODWORD(STACK[0x56C]) = v215;
  if (v215 >= 0x3C0)
    v257 = v215 - 960;
  else
    v257 = v215;
  LODWORD(STACK[0x580]) = v257;
  LODWORD(STACK[0x570]) = v217;
  if (v217 >= 0x3C0)
    v258 = v217 - 960;
  else
    v258 = v217;
  LODWORD(STACK[0x590]) = v258;
  LODWORD(STACK[0x57C]) = v218;
  if (v218 >= 0x3C0)
    v259 = v218 - 960;
  else
    v259 = v218;
  LODWORD(STACK[0x5B4]) = v259;
  if (v254 >= 0x3C0)
    v254 -= 960;
  v260 = *(unsigned __int8 *)(v14 + v255) ^ 0xE3;
  v261 = 7 * ((v260 - 390637764 - ((2 * v260) & 0x78)) ^ v134);
  v262 = (v261 + 3983) % 0x3C0;
  LODWORD(STACK[0x620]) = v237;
  v263 = 7 * (v253 & 0xF0 | (v237 >> 4));
  LOBYTE(v261) = (*(_BYTE *)(v14 + v261 % 0x3C0) >> 4) ^ 0xE;
  v264 = 7 * ((v261 - 2 * (v261 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v254)) + 3983;
  v265 = v264 - 960 * ((8739 * v264) >> 23);
  v266 = v263 - 960;
  if (v263 < 0x3C0)
    v266 = 7 * (v253 & 0xF0 | (v237 >> 4));
  v267 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v263 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v14 + (unsigned __int16)v265) ^ 0xE3)) ^ 0xE3;
  v268 = 7 * v267;
  v267 *= 244671;
  v269 = v268 - 960 * ((v267 + 139217799) >> 25);
  v270 = 7 * ((v253 >> 4) & 0xF0 | (v237 >> 8) & 0xF);
  LOBYTE(v267) = (*(_BYTE *)(v14 + (unsigned __int16)(v268 - 960 * (v267 >> 25))) >> 4) ^ 0xE;
  v271 = (v267 - 2 * (v267 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v266);
  v272 = 16
       * (*(unsigned __int8 *)(v14
                             + (unsigned __int16)(7 * v271
                                                + 3983
                                                - 960
                                                * ((unsigned __int16)((8739 * (7 * v271 + 3983)) >> 16) >> 7))) ^ 0xE3);
  v273 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v270 + 3983) % 0x3C0u);
  v274 = (v272 | v273) & 0x4040404 | (v273 ^ 0xE3) & 0xFFFFFFFB ^ v272 & 0xFFFFFBFF;
  v275 = *(unsigned __int8 *)(v14 + v262) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v269 + 3983)) ^ 0xE3)) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * v274 + 3983) % 0x3C0u) ^ 0xE3) << 8);
  if (v270 >= 0x3C0)
    v270 -= 960;
  v276 = (*(_BYTE *)(v14 + (unsigned __int16)(7 * v274 - 960 * ((unsigned __int16)((244671 * v274) >> 16) >> 9))) >> 4) ^ 0xE;
  v277 = 7 * ((v276 - 2 * (v276 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v270)) + 3983;
  v278 = (unsigned __int16)(v277 - 960 * ((unsigned __int16)((8739 * v277) >> 16) >> 7))
       - 1872172657
       - ((2 * (v277 - 960 * ((8739 * v277) >> 23))) & 0x31E);
  LODWORD(STACK[0x59C]) = v234;
  v279 = ((unsigned __int16)v234 >> 12) ^ ((unint64_t)(((unsigned __int16)v252 >> 12) ^ 0xCu) << ((v278 & 0xD1 ^ 0x7E) + (v278 & 0xD1 ^ 0xAF) - 41)) ^ 0xE;
  v280 = *(unsigned __int8 *)(v14 + (7 * v279 + 3983) % 0x3C0u);
  v281 = v280 ^ (16 * (*(unsigned __int8 *)(v14 + (v278 ^ 0x9068E98F)) ^ 0xE3)) ^ 0xE3;
  v282 = v275 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * v281 + 3983) % 0x3C0u) ^ 0xE3) << 12);
  v283 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * v281
                                               - 960 * ((unsigned __int16)((244671 * v281) >> 16) >> 9))) >> 4;
  v284 = ((v283 ^ 1) + (v283 ^ 0xE)) & (HIWORD(v234) ^ 0x17) ^ (v252 >> 12) & 0xF0;
  v285 = 7
       * (*(_BYTE *)(v14 + v279 * ((v280 ^ 4) & 7 | v280 & 7 ^ 3u) % 0x3C0) ^ v283 ^ 0xED)
       + 3983;
  v286 = 7 * (v284 ^ 0x60);
  v287 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v286 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v285 - 960 * ((unsigned __int16)((8739 * v285) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v288 = 7 * v287;
  v289 = 244671 * v287;
  v290 = v282 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v288 - 960 * ((v289 + 139217799) >> 25) + 3983)) ^ 0xE3) << 16);
  if (v286 >= 0x3C0)
    v286 -= 960;
  v291 = (*(_BYTE *)(v14 + (unsigned __int16)(v288 - 960 * (v289 >> 25))) >> 4) ^ 0xE;
  v292 = 7 * ((v291 - 2 * (v291 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v286)) + 3983;
  v293 = 7 * (HIWORD(v250) & 0xF0 ^ (((v229 >> 20) ^ 0xFFFFFE3F) + ((v229 >> 20) & 0xFF0 ^ 0x1CF) + 1));
  v294 = *(unsigned __int8 *)(v14 + (v293 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v14
                                                                                  + (unsigned __int16)(v292 - 960 * ((unsigned __int16)((8739 * v292) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v295 = v290 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * v294 + 3983) % 0x3C0u) ^ 0xE3) << 20);
  LOBYTE(v294) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v294
                                              - 960 * ((unsigned __int16)((244671 * v294) >> 16) >> 9))) >> 4) ^ 0xE;
  v296 = 7 * ((v294 - 2 * (v294 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v293 % 0x3C0)) + 3983;
  LODWORD(STACK[0x564]) = v229;
  v297 = 7 * (((v250 >> 20) & 0xF0 | HIBYTE(v229) & 0xF) ^ 0x4C);
  v298 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (((v250 >> 20) & 0xF0 | HIBYTE(v229) & 0xF) ^ 0x4C) + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v14
                                                             + (unsigned __int16)(v296
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v296) >> 16) >> 7))) ^ 0xE3));
  if (v297 >= 0x3C0)
    v297 -= 960;
  v299 = v298 ^ 0xE3;
  v300 = 7 * v299;
  v299 *= 244671;
  v301 = v300 - 960 * ((v299 + 139217799) >> 25);
  LOWORD(v299) = v300 - 960 * (v299 >> 25);
  v302 = v295 ^ 0xE3;
  v303 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v301 + 3983)) ^ 0xFFFFFFE3) << 24;
  LOBYTE(v299) = (*(_BYTE *)(v14 + (unsigned __int16)v299) >> 4) ^ 0xE;
  v304 = (v299 - 2 * (v299 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v297);
  v305 = v303 & 0x27000000 ^ v302 & 0x27169850 | v303 & 0xD8000000 ^ v302 & 0xD8E967AF;
  v306 = 7 * ((HIBYTE(v250) & 0xF0 | (v229 >> 28)) ^ 0x61) + 3983;
  v307 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7
                                               * (*(unsigned __int8 *)(v14
                                                                     + (unsigned __int16)(v306
                                                                                        - 960
                                                                                        * ((unsigned __int16)((8739 * v306) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * v304 + 3983 - 960 * ((unsigned __int16)((8739 * (7 * v304 + 3983)) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3)
                                               + 3983)
                            % 0x3C0u);
  LODWORD(STACK[0x500]) = v307;
  LODWORD(STACK[0x4FC]) = v305 - 1169407447 + (~(2 * v305) | 0x8B677BAD) + 1;
  v308 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7
                                               * (v236 & 0xF | (16
                                                              * (((v305 + 16937 + (~(2 * v305) | 0x7BAD) + 1) ^ 9) & (20 - (v307 & 5 ^ 1 | v307 & 5 ^ 4)))))
                                               + 1813)
                            % 0x3C0u);
  LODWORD(STACK[0x4F0]) = v308;
  v309 = LODWORD(STACK[0x604]) + LODWORD(STACK[0x4DC]);
  LODWORD(STACK[0x4DC]) = v309;
  v310 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v308 & 0xF ^ 3)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v308 & 0xF ^ 3u) + 3822)) >> 16) >> 5)));
  LODWORD(STACK[0x604]) = v310;
  v311 = 7 * ((LODWORD(STACK[0x4F4]) + LODWORD(STACK[0x3BC])) >> 28) + 3640;
  v312 = LODWORD(STACK[0x4F4]) - 1906469615;
  v313 = ((v310 ^ 0xC) & 0xF | v310 & 0xF ^ 3) & (HIBYTE(v312) ^ 0x8E);
  v314 = LODWORD(STACK[0x4D8]) ^ v309 ^ 0x420625DF;
  v315 = LODWORD(STACK[0x4D8]) ^ v309;
  v316 = (-1800351891 - ((LODWORD(STACK[0x4E8]) - 169560882 + v314) & 0x20)) ^ (LODWORD(STACK[0x4E8]) - 169560882 + v314) & 0xFFFFFFDF;
  v317 = ((2 * v316) & 0xFB9FB9FE) + (v316 ^ 0xFDCFDCFF);
  LOWORD(v316) = 7 * v313 + 3640 - 960 * ((unsigned __int16)((8739 * (7 * v313 + 3640)) >> 16) >> 7);
  v318 = 7 * ((v312 >> 20) & 0xF ^ 5) + 3640;
  v319 = 7 * (HIWORD(v312) & 0xF ^ 0xD) + 3640;
  v320 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)v316) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v311 - 960 * ((unsigned __int16)((2185 * v311) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v319 - 960 * ((unsigned __int16)((2185 * v319) >> 16) >> 5))) ^ 0xE3;
  v321 = 7 * ((v312 >> 8) & 0xF ^ 5) + 3640;
  LOWORD(v319) = v321 - 960 * ((unsigned __int16)((2185 * v321) >> 16) >> 5);
  v322 = 7 * (((unsigned __int16)(v312 & 0xF000) >> 12) ^ 9) + 3640;
  v323 = (v320 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v318
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v318) >> 16) >> 5))) ^ 0xE3) << 12);
  v324 = v317;
  v325 = LODWORD(STACK[0x4E0]) + 1005974119;
  v326 = (((117 - v317) ^ (v317 + 906)) & 0x208) + (HIBYTE(v325) & 0xF);
  v327 = v323 | *(unsigned __int8 *)(v14 + (unsigned __int16)v319) ^ 0xE3;
  v328 = (v327 << 8) + 245530788 - ((v327 << 9) & 0x1D450000);
  v329 = 7 * ((-1005974120 - LODWORD(STACK[0x4E0])) >> 28) + 3640;
  v330 = 7 * (HIWORD(v325) & 0xF ^ 3) + 3640;
  v331 = 7 * ((v325 >> 20) & 0xF ^ 3) + 3640;
  v332 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7 * v326
                                                 - 960 * ((unsigned __int16)((15295 * v326) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v329 - 960 * ((unsigned __int16)((2185 * v329) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v330 - 960 * ((unsigned __int16)((2185 * v330) >> 16) >> 5))) ^ 0xE3;
  v333 = 7 * (((unsigned __int16)(LOWORD(STACK[0x4E0]) - 3481) >> 12) ^ 3) + 3640;
  v334 = (v332 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v331
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v331) >> 16) >> 5))) ^ 0xE3) << 12);
  v335 = 7 * ((v325 >> 8) & 0xF ^ 0xB) + 3640;
  v336 = v334 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(v335
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v335) >> 16) >> 5))) ^ 0xE3;
  v337 = v328 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v322
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v322) >> 16) >> 5))) ^ 0xE3) << 12);
  v338 = ((v336 << 8) - ((v336 << 9) & 0xDCDD5C00) + 1852747290) ^ ((*(unsigned __int8 *)(v14
                                                                                        + (unsigned __int16)(v333 - 960 * ((unsigned __int16)((2185 * v333) >> 16) >> 5))) ^ 0xE3) << 12);
  LODWORD(STACK[0x4D4]) = v338;
  v339 = (v336 << 8) - ((v336 << 9) & 0xDCDD5C00) + 1852747290;
  LODWORD(STACK[0x4C0]) = v337;
  v340 = 7 * (((v338 >> 12) & 0xF0 | HIWORD(v337) & 0xF) ^ 0xE2);
  LODWORD(STACK[0x4E8]) = (unsigned __int16)(v340 + 3983)
                        % (((112 - (_WORD)v340) & 0x3C0) + (((_WORD)v340 + 3983) & 0x3C0u));
  v341 = LODWORD(STACK[0x4E4]) ^ LODWORD(STACK[0x6E8]);
  v342 = ((v341 ^ 0xE1BDB1A8) - 659905370 - ((2 * (v341 ^ 0xE1BDB1A8)) & 0xB155494C)) ^ LODWORD(STACK[0x4F8]);
  LOBYTE(v301) = v312;
  LODWORD(STACK[0x4F4]) = v312;
  v343 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v312 & 0xF ^ 1)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v312 & 0xF ^ 1) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v344 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v325 & 0xF ^ 2)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v325 & 0xF ^ 2) + 3640)) >> 16) >> 5))) ^ 0xE3;
  LODWORD(STACK[0x4B8]) = v344;
  v345 = 7 * (v343 & 0xF | (16 * (v344 & 0xF)));
  v346 = *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v343 & 0xF | (16 * (v344 & 0xF))) + 3983) % 0x3C0u) ^ 0xE3;
  v347 = 7 * ((v346 - 390637764 - ((2 * v346) & 0x78)) ^ v134);
  LODWORD(STACK[0x4B4]) = v347;
  v348 = *(unsigned __int8 *)(v14 + (v347 + 3983) % 0x3C0u) ^ 0xE3;
  LODWORD(STACK[0x4E0]) = v348;
  v349 = 7 * (v343 & 0xF | (16 * (v348 & 0xF))) + 1813;
  v350 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v349
                                               - 960 * ((unsigned __int16)((2185 * v349) >> 16) >> 5)));
  LODWORD(STACK[0x4E4]) = v350;
  LOWORD(v349) = 7 * (v350 & 0xF ^ 3)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v350 & 0xF ^ 3u) + 3822)) >> 16) >> 5);
  v351 = (unsigned __int16)v349 - 1430967233 - 2 * (v349 & 0x3F);
  LODWORD(STACK[0x4F8]) = v351;
  v352 = v341;
  LODWORD(STACK[0x48C]) = v341;
  v353 = (v341 ^ 0x6944E748) + LODWORD(STACK[0x4EC]);
  v354 = v353 ^ 0x94B0CF6D;
  v355 = ((2 * ((v351 & 0x3F3 ^ 0x33 | v351 & 0x3F3 ^ 0x8BA6A7C0) ^ ((v341 ^ 0x6944E748) - v354 - 632164114 + v342))) & 0xFFFCB6FE)
       + ((v351 & 0x3F3 ^ 0x33 | v351 & 0x3F3 ^ 0x8BA6A7C0) ^ ((v341 ^ 0x6944E748) - v354 - 632164114 + v342) ^ 0xFFFE5B7F);
  LODWORD(STACK[0x4EC]) = v355;
  v356 = 7 * ((v301 >> 4) ^ 1) + 3640;
  v357 = (v337 ^ 0xEA280A4 | v343) ^ (16
                                    * (*(unsigned __int8 *)(v14
                                                          + (unsigned __int16)(v356
                                                                             - 960
                                                                             * ((unsigned __int16)((2185 * v356) >> 16) >> 5))) ^ 0xE3));
  LODWORD(STACK[0x4AC]) = v357;
  v358 = 7 * ((v325 >> 4) ^ 3) + 3640;
  v359 = v358 - 960 * ((2185 * v358) >> 21);
  if (v345 >= 0x3C0)
    v360 = v345 - 960;
  else
    v360 = v345;
  LODWORD(STACK[0x4C4]) = v360;
  v361 = *(unsigned __int8 *)(v14 + (unsigned __int16)v359) ^ 0xE3;
  LODWORD(STACK[0x4A8]) = 16 * v361;
  v362 = 7 * ((((v339 ^ (16 * v361 - ((32 * v361) & 0xA80) + 3398)) >> 4) & 0xF0 | (v357 >> 8) & 0xF) ^ 0x30);
  LODWORD(STACK[0x4B0]) = v362;
  if (v362 >= 0x3C0)
    v362 -= 960;
  LODWORD(STACK[0x4D0]) = v362;
  if (v340 >= 0x3C0)
    v363 = v340 - 960;
  else
    v363 = v340;
  LODWORD(STACK[0x4D8]) = v363;
  LODWORD(STACK[0x4CC]) = v339;
  LODWORD(STACK[0x4C8]) = v328;
  v364 = 7 * ((HIWORD(v339) & 0xF0 | (v328 >> 20) & 0xF) ^ 0x6A);
  v365 = 7 * (((v339 >> 20) & 0xF0 | HIBYTE(v328) & 0xF) ^ 0xEE);
  v366 = LODWORD(STACK[0x694]) ^ 0xCAFF733F;
  LODWORD(STACK[0x4BC]) = v315;
  v367 = (v366 ^ v315)
       + ((v314 + 1598753077) ^ 0xA0B4F6CB)
       + ((2 * (v314 + 1598753077)) & 0x4169ED96)
       - v324
       - 668873235;
  v368 = ((2 * v367) & 0x7B9FFFA8 ^ 0x130D4FA0) + (v367 ^ 0x36695827);
  LODWORD(STACK[0x694]) = v368;
  v369 = LODWORD(STACK[0x508]) + (v315 ^ 0xAB1253C9);
  v370 = LODWORD(STACK[0x508]) - 868258217 + v368;
  v371 = LODWORD(STACK[0x624]) ^ 0x410D1658;
  LODWORD(STACK[0x508]) = v371;
  v372 = v370 + v371 - ((2 * (v370 + v371)) & 0x804F5BE);
  v373 = ((2 * v354) & 0xAD858B32) + (v353 ^ 0x42720AF4);
  v374 = v372 + 67271391;
  v375 = 7 * (((v372 + 67271391) >> 24) & 0xF ^ 4) + 3640;
  v376 = 7 * (((v372 + 67271391) >> 20) & 0xF) + 3640;
  v377 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v375 - 960 * ((unsigned __int16)((2185 * v375) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v372 + 67271391) >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v372 + 67271391) >> 28) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12);
  v378 = 7 * (((v372 + 67271391) >> 16) & 0xF ^ 2) + 3640;
  v379 = v377 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(v378 - 960 * ((unsigned __int16)((2185 * v378) >> 16) >> 5))) ^ 0xE3;
  v380 = 7 * (((unsigned __int16)(v372 + 31455) >> 12) ^ 7) + 3640;
  v381 = (v379 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v376
                                                               - 960 * ((unsigned __int16)((2185 * v376) >> 16) >> 5))) ^ 0xE3) << 12);
  v382 = 7 * (((v372 + 67271391) >> 8) & 0xF ^ 0xA) + 3640;
  v383 = 7 * (((v372 - 33) >> 4) ^ 0xD) + 3640;
  v384 = v383 - 960 * ((unsigned __int16)((2185 * v383) >> 16) >> 5);
  v385 = v381 | *(unsigned __int8 *)(v14
                                   + (unsigned __int16)(v382 - 960 * ((unsigned __int16)((2185 * v382) >> 16) >> 5))) ^ 0xE3;
  v386 = (v385 << 8) + 295479577 - ((v385 << 9) & 0x23395200);
  v387 = 7 * ((16 - (_BYTE)v372) & 0xF) + 3640;
  v388 = v387 - 960 * ((unsigned __int16)((2185 * v387) >> 16) >> 5);
  v389 = LODWORD(STACK[0x504]) + (v352 ^ 0x8050915E);
  v390 = LODWORD(STACK[0x504]) + 1984034529 + v355;
  v391 = LODWORD(STACK[0x548]) - v390;
  v392 = (2 * v391 - 911889778) & 0xDABDC0D0;
  v391 -= 768494161;
  v393 = v391 - v392;
  v394 = (HIBYTE(v393) & 7 ^ 5 | HIBYTE(v393) & 7 ^ 2) * ((HIBYTE(v393) & 0xF ^ 0xD) + 520);
  v395 = v386 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v380
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v380) >> 16) >> 5))) ^ 0xE3) << 12);
  v396 = *(unsigned __int8 *)(v14 + v388) ^ 0xE3;
  v397 = (v395 ^ 0x119CA919 | v396) ^ (16 * (*(unsigned __int8 *)(v14 + v384) ^ 0xE3));
  v398 = 7 * ((v393 >> 20) & 0xF ^ 5) + 3640;
  v399 = 7 * (HIWORD(v393) & 0xF ^ 0xE) + 3640;
  v400 = 7 * (((unsigned __int16)v393 >> 12) ^ 0xE) + 3640;
  v401 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v394
                                                 - 960 * ((unsigned __int16)((2185 * v394) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v393 >> 28) ^ 0xE) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v393 >> 28) ^ 0xE) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v399 - 960 * ((unsigned __int16)((2185 * v399) >> 16) >> 5))) ^ 0xE3;
  LOWORD(v399) = 7 * ((v393 >> 8) & 0xF)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * ((v393 >> 8) & 0xF) + 3640)) >> 16) >> 5);
  v402 = 7 * ((v393 >> 4) ^ 6) + 3640;
  v403 = (v401 << 8) ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v398
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v398) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)v399) ^ 0xE3;
  v404 = (v403 << 8) + 1479195134 - ((v403 << 9) & 0xB0557200);
  v405 = v404 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v400
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v400) >> 16) >> 5))) ^ 0xE3) << 12);
  v406 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v391 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v391 & 0xF ^ 8) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v407 = (v405 ^ 0x582AB9FE | v406) ^ (16
                                     * (*(unsigned __int8 *)(v14
                                                           + (unsigned __int16)(v402
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v402) >> 16) >> 5))) ^ 0xE3));
  v408 = v396 & 0xF;
  LODWORD(STACK[0x624]) = v408;
  v409 = 7 * (v408 & 0xFFFFFF0F | (16 * (v406 & 0xF)));
  LODWORD(STACK[0x4A4]) = v397;
  v410 = 7 * (v407 & 0xF0 | (v397 >> 4));
  v411 = 7 * ((v407 >> 4) & 0xF0 | (v397 >> 8) & 0xF);
  LODWORD(STACK[0x4A0]) = v395;
  v412 = 7 * (((v405 >> 8) & 0xF0 | ((unsigned __int16)v395 >> 12)) ^ 0xBA);
  v413 = 7 * (((v405 >> 12) & 0xF0 | HIWORD(v395) & 0xF) ^ 0xAC);
  LODWORD(STACK[0x49C]) = v404;
  LODWORD(STACK[0x490]) = v386;
  v414 = 7 * ((HIWORD(v404) & 0xF0 | (v386 >> 20) & 0xF) ^ 0x29);
  v415 = 7 * (((v404 >> 20) & 0xF0 | HIBYTE(v386) & 0xF) ^ 0x81);
  LODWORD(STACK[0x488]) = v324;
  v416 = v369 + 1661097669 + v324;
  v417 = v374 ^ v416;
  LODWORD(STACK[0x414]) = v374 ^ v416;
  v418 = v416 ^ (v324 - 1136438469);
  LODWORD(STACK[0x484]) = v418;
  v419 = v370 ^ 0x7CE5DB61;
  LODWORD(STACK[0x47C]) = v370 ^ 0x7CE5DB61;
  v420 = LODWORD(STACK[0x524]) - 1889971491;
  LODWORD(STACK[0x480]) = v419 - v418;
  LODWORD(STACK[0x3C4]) = v420;
  v421 = v419 - v418 + v420 - ((2 * (v419 - v418 + v420)) & 0xF80F7C52) + 2080882217;
  v422 = 7 * (HIBYTE(v421) & 0xF ^ 0xC) + 3640;
  v423 = (unsigned __int16)(v422 - 960 * ((unsigned __int16)((2185 * v422) >> 16) >> 5))
       - 1992440891
       - ((2 * (v422 - 960 * ((2185 * v422) >> 21))) & 0x78A);
  v424 = v389 + 1983926880 + v373;
  LODWORD(STACK[0x470]) = v424;
  v425 = v373 - 481269087;
  LODWORD(STACK[0x478]) = v373 - 481269087;
  LODWORD(STACK[0x474]) = v390 ^ 0x7CE5DB61;
  v426 = LODWORD(STACK[0x628]) ^ 0x63A54C94;
  LODWORD(STACK[0x628]) = v424 ^ v425;
  v427 = (v390 ^ 0x7CE5DB61) - (v424 ^ v425);
  LODWORD(STACK[0x46C]) = v427;
  LODWORD(STACK[0x504]) = v426;
  v428 = v426 - v427 - ((2 * (v426 - v427)) & 0x30A02AAE);
  v429 = 7 * (HIWORD(v421) & 0xF ^ 7) + 3640;
  LOWORD(v390) = v429 - 960 * ((unsigned __int16)((2185 * v429) >> 16) >> 5);
  v430 = 7 * (((unsigned __int16)(v421 & 0xF000) >> 12) ^ 0xB) + 3640;
  v431 = 7 * ((v421 >> 8) & 0xF ^ 0xE) + 3640;
  v432 = (((*(unsigned __int8 *)(v14 + (v423 ^ 0x893DC3C5)) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v14
                                                                                                  + (unsigned __int16)(7 * ((v421 >> 28) ^ 7) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v421 >> 28) ^ 7) + 3640)) >> 16) >> 5))) ^ 0xE3) << 20) | ((*(unsigned __int8 *)(v14 + (unsigned __int16)v390) ^ 0xE3) << 8)) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v421 >> 20) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v421 >> 20) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(v431 - 960 * ((unsigned __int16)((2185 * v431) >> 16) >> 5))) ^ 0xE3;
  v433 = 7 * ((v421 >> 4) ^ 2) + 3640;
  v434 = (v432 << 8) - 1572170624 - ((v432 << 9) & 0x44952800);
  v428 += 407901527;
  v435 = 7 * (HIBYTE(v428) & 0xF ^ 8) + 3640;
  v436 = 7 * ((v428 >> 20) & 0xF ^ 5) + 3640;
  v437 = v434 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v430
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v430) >> 16) >> 5))) ^ 0xE3) << 12);
  v438 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v433
                                               - 960 * ((unsigned __int16)((2185 * v433) >> 16) >> 5)));
  v439 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v421 & 0xF ^ 9)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v421 & 0xF ^ 9) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v440 = (v437 ^ 0xA24A9480 | v439) ^ (16 * (v438 ^ 0xE3));
  v441 = 7 * (((unsigned __int16)v428 >> 12) ^ 1) + 3640;
  v442 = ((((*(unsigned __int8 *)(v14
                                + (unsigned __int16)(v435
                                                   - 960 * ((unsigned __int16)((2185 * v435) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v428 >> 28) ^ 1) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v428 >> 28) ^ 1) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v428) & 0xF) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v428) & 0xF) + 3640)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v436 - 960 * ((unsigned __int16)((2185 * v436) >> 16) >> 5))) ^ 0xE3) << 12);
  v443 = 7 * ((v428 >> 8) & 0xF ^ 5) + 3640;
  v444 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v443
                                               - 960 * ((unsigned __int16)((2185 * v443) >> 16) >> 5))) ^ 0xE3;
  v445 = (v442 | v444) + 1142207749 - 2 * ((v442 | v444) & 0x4414B517 ^ v444 & 2);
  v446 = 7 * ((v428 >> 4) ^ 5) + 3640;
  LOWORD(v436) = 7 * (v428 & 0xF ^ 7)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v428 & 0xF ^ 7) + 3640)) >> 16) >> 5);
  v447 = (v445 + 16) & 0x7FFFFDC7;
  v448 = (((v445 + 16) << 8) ^ 0x14B51500) + 1252077168 - ((2 * (((v445 + 16) << 8) ^ 0x14B51500)) & 0x95425C00);
  v449 = v448 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v441
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v441) >> 16) >> 5))) ^ 0xE3) << 12);
  v450 = *(unsigned __int8 *)(v14 + (unsigned __int16)v436) ^ 0xE3;
  v451 = (v449 ^ 0x4AA12E70 | v450) ^ (16
                                     * (*(unsigned __int8 *)(v14
                                                           + (unsigned __int16)(v446
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v446) >> 16) >> 5))) ^ 0xE3));
  v452 = v439 & 0xF;
  LODWORD(STACK[0x468]) = v452;
  v453 = 7 * (v452 & 0xFFFFFF0F | (16 * (v450 & 0xF)));
  v454 = (unsigned __int16)(v453 + 3983) % 0x3C0u;
  LODWORD(STACK[0x3FC]) = v364;
  if (v364 >= 0x3C0)
    v455 = v364 - 960;
  else
    v455 = v364;
  LODWORD(STACK[0x3E8]) = v455;
  LODWORD(STACK[0x408]) = v365;
  if (v365 >= 0x3C0)
    v456 = v365 - 960;
  else
    v456 = v365;
  LODWORD(STACK[0x3F4]) = v456;
  LODWORD(STACK[0x430]) = v409;
  if (v409 >= 0x3C0)
    v457 = v409 - 960;
  else
    v457 = v409;
  LODWORD(STACK[0x41C]) = v457;
  LODWORD(STACK[0x440]) = v410;
  if (v410 >= 0x3C0)
    v458 = v410 - 960;
  else
    v458 = v410;
  LODWORD(STACK[0x424]) = v458;
  LODWORD(STACK[0x450]) = v411;
  if (v411 >= 0x3C0)
    v459 = v411 - 960;
  else
    v459 = v411;
  LODWORD(STACK[0x428]) = v459;
  LODWORD(STACK[0x458]) = v412;
  if (v412 >= 0x3C0)
    v460 = v412 - 960;
  else
    v460 = v412;
  LODWORD(STACK[0x42C]) = v460;
  LODWORD(STACK[0x45C]) = v413;
  if (v413 >= 0x3C0)
    v461 = v413 - 960;
  else
    v461 = v413;
  LODWORD(STACK[0x438]) = v461;
  LODWORD(STACK[0x460]) = v414;
  if (v414 >= 0x3C0)
    v462 = v414 - 960;
  else
    v462 = v414;
  LODWORD(STACK[0x448]) = v462;
  LODWORD(STACK[0x464]) = v415;
  if (v415 >= 0x3C0)
    v463 = v415 - 960;
  else
    v463 = v415;
  LODWORD(STACK[0x454]) = v463;
  if (v453 >= 0x3C0)
    v453 -= 960;
  v464 = *(unsigned __int8 *)(v14 + v454) ^ 0xE3;
  v465 = STACK[0x6E4];
  v466 = (v464 - 390637764 - ((2 * v464) & 0x78)) ^ LODWORD(STACK[0x6E4]);
  v467 = 7 * v466 % 0x3C0u;
  v468 = 7 * (v466 - (v447 ^ 0x4414B505 | v447 ^ 0xBBEB48C2)) % 0x3C0;
  v469 = (*(_BYTE *)(v14 + v467) >> 4) ^ 0xE;
  v470 = (v469 - 2 * (v469 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v453);
  v471 = 7 * (v451 & 0xF0 | (v440 >> 4));
  v472 = 7 * v470 + 3983 - 960 * ((8739 * (7 * v470 + 3983)) >> 23);
  if (v471 >= 0x3C0)
    v471 -= 960;
  v473 = *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v451 & 0xF0 | (v440 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v472) ^ 0xE3)) ^ 0xE3;
  v474 = 7 * v473;
  v473 *= 244671;
  v475 = *(unsigned __int8 *)(v14 + v468) ^ (16
                                           * (*(unsigned __int8 *)(v14
                                                                 + (unsigned __int16)(v474
                                                                                    - 960 * ((v473 + 139217799) >> 25)
                                                                                    + 3983)) ^ 0xE3));
  v476 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v474 - 960 * (v473 >> 25))) >> 4) ^ 0xE;
  v477 = 7 * ((v476 + (~(2 * v476) | 0xF9) - 28) ^ *(unsigned __int8 *)(v14 + v471)) + 3983;
  v478 = v477 - 960 * ((8739 * v477) >> 23);
  v479 = 7 * ((v451 >> 4) & 0xF0 | (v440 >> 8) & 0xF);
  v480 = v479 - 960;
  if (v479 < 0x3C0)
    v480 = v479;
  v481 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v479 + 3983) % 0x3C0u) ^ (16
                                                                               * (*(unsigned __int8 *)(v14 + (unsigned __int16)v478) ^ 0xE3)) ^ 0xE3;
  v482 = 7 * v481 + 3983 - 960 * ((34953 * (7 * v481 + 3983)) >> 25);
  LOBYTE(v481) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v481
                                              - 960 * ((unsigned __int16)((244671 * v481) >> 16) >> 9))) >> 4) ^ 0xE;
  v483 = (v481 - 2 * (v481 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v480);
  v484 = 7 * (((v449 >> 8) & 0xF0 | ((unsigned __int16)v437 >> 12)) ^ 0x29);
  v485 = 7 * v483 + 3983 - 960 * ((8739 * (7 * v483 + 3983)) >> 23);
  v486 = v484
       + 3983
       - 960 * ((unsigned __int16)(7 * (((v449 >> 8) & 0xF0 | ((unsigned __int16)v437 >> 12)) ^ 0x29) + 3983) / 0x3C0u);
  if (v484 >= 0x3C0)
    v484 -= 960;
  v487 = *(unsigned __int8 *)(v14 + (unsigned __int16)v486) ^ (16
                                                             * (*(unsigned __int8 *)(v14 + (unsigned __int16)v485) ^ 0xE3)) ^ 0xE3;
  v488 = 7 * v487;
  v489 = 244671 * v487;
  v490 = 7 * v487 - 960 * ((244671 * v487 + 139217799) >> 25);
  LOBYTE(v488) = (*(_BYTE *)(v14 + (unsigned __int16)(v488 - 960 * (v489 >> 25))) >> 4) ^ 0xE;
  v491 = 7 * ((v488 - 2 * (v488 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v484));
  LODWORD(STACK[0x410]) = v437;
  v492 = 7 * (((v449 >> 12) & 0xF0 | HIWORD(v437) & 0xF) ^ 0x1A);
  v493 = v491 + 3983 - 960 * ((8739 * (v491 + 3983)) >> 23);
  v494 = (unsigned __int16)(v492 + 3983) % 0x3C0u;
  if (v492 >= 0x3C0)
    v492 -= 960;
  v495 = *(unsigned __int8 *)(v14 + v494) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v493) ^ 0xE3)) ^ 0xE3;
  v496 = 7 * v495;
  v495 *= 244671;
  v497 = v496 - 960 * ((v495 + 139217799) >> 25);
  LOBYTE(v495) = (*(_BYTE *)(v14 + (unsigned __int16)(v496 - 960 * (v495 >> 25))) >> 4) ^ 0xE;
  v498 = 7 * ((v495 - 2 * (v495 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v492)) + 3983;
  v499 = v498 - 960 * ((8739 * v498) >> 23);
  v500 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v497 + 3983)) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v490 + 3983)) ^ 0xE3) << 12);
  LODWORD(STACK[0x418]) = v500;
  v501 = 7 * ((HIWORD(v448) & 0xF0 | (v434 >> 20) & 0xF) ^ 0xA4);
  v502 = v501
       + 3983
       - 960 * ((unsigned __int16)(7 * ((BYTE2(v448) & 0xF0 | (v434 >> 20) & 0xF) ^ 0xA4) + 3983) / 0x3C0u);
  if (v501 >= 0x3C0)
    v501 -= 960;
  v503 = 7
       * (*(unsigned __int8 *)(v14 + (unsigned __int16)v502) ^ (16
                                                              * (*(unsigned __int8 *)(v14 + (unsigned __int16)v499) ^ 0xE3)) ^ 0xE3);
  v504 = v475 ^ 0xE3;
  v505 = v475 ^ 0xE3 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v482) ^ 0xE3) << 8);
  v506 = *(unsigned __int8 *)(v14 + v501);
  v507 = v503 + 3983 - 960 * ((34953 * (v503 + 3983)) >> 25);
  v508 = (*(_BYTE *)(v14 + v503 % ((v505 & 0x3C0 ^ 0x3C0) + (v505 & 0x3C0u))) >> 4) ^ 0xE;
  v509 = 7 * ((v508 - 2 * (v508 & 3) - 29) ^ v506) + 3983;
  v510 = v509 - 960 * ((8739 * v509) >> 23);
  LODWORD(STACK[0x420]) = v434;
  v511 = 7 * (((v448 >> 20) & 0xF0 | HIBYTE(v434) & 0xF) ^ 0xA2);
  if (v511 >= 0x3C0)
    v511 -= 960;
  v512 = *(_BYTE *)(v14 + v511);
  v513 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (((v448 >> 20) & 0xF0 | HIBYTE(v434) & 0xF) ^ 0xA2) + 3983)
                            % 0x3C0u) ^ (unsigned __int16)(16
                                                         * (*(unsigned __int8 *)(v14 + (unsigned __int16)v510) ^ 0xE3)) ^ 0xE3;
  v514 = (*(unsigned __int8 *)(v14 + (unsigned __int16)((v512 & 7 ^ 4 | v512 & 7 ^ 3) * v513) % 0x3C0u) >> 4) ^ 0xE;
  v515 = 7 * ((v514 + (~(2 * v514) | 0xF9) - 28) ^ v512) + 3983;
  v516 = 7 * ((HIBYTE(v448) & 0xF0 | (v434 >> 28)) ^ 0x4A) + 3983;
  v517 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v14
                                                                       + (unsigned __int16)(v516
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v516) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v515 - 960 * ((unsigned __int16)((8739 * v515) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v14
                                                                           + (unsigned __int16)(7 * v513 + 3983)
                                                                           % 0x3C0u) ^ 0xFFFFFFE3) << 24);
  LODWORD(STACK[0x400]) = v517;
  v518 = 7 * (v504 & 0xF0 | (v440 >> 4)) + 1813;
  v519 = (unsigned __int16)(v518 - 960 * ((unsigned __int16)((2185 * v518) >> 16) >> 5))
       + 1207586367
       - ((2 * (v518 - 960 * ((2185 * v518) >> 21))) & 0x47E);
  LODWORD(STACK[0x3F8]) = v519;
  v520 = v500 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v507) ^ 0xE3) << 20);
  LODWORD(STACK[0x3EC]) = v520;
  v521 = v517 ^ v520;
  LODWORD(STACK[0x3F0]) = v521;
  v522 = v521 ^ v505;
  LODWORD(STACK[0x40C]) = v522;
  v523 = 7 * (((v522 >> 8) & 0xF0 | ((unsigned __int16)v437 >> 12)) ^ 9) + 1813;
  v524 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v523
                                                 - 960 * ((unsigned __int16)((2185 * v523) >> 16) >> 5))) ^ 0xE3) << 12) ^ ((*(unsigned __int8 *)(v14 + (7 * ((((v522 >> 8) & 0xF) << (((-25 - v519) & 4 ^ 4) + ((-25 - v519) & 4))) ^ (v440 >> 8) & 0xF) + 1813) % 0x3C0) ^ 0xE3) << 8);
  LODWORD(STACK[0x3E4]) = v524;
  LODWORD(STACK[0x3E0]) = (7 * ((unsigned __int16)v524 >> 12) + 3822)
                        % (v417 & 0x3C0 ^ 0x100 | v417 & 0x3C0 ^ 0x2C0u);
  LOBYTE(v523) = (*(_BYTE *)(v14
                           + (unsigned __int16)(LODWORD(STACK[0x6BC])
                                              - 960
                                              * ((unsigned __int16)((244671 * LODWORD(STACK[0x6C0])) >> 16) >> 9))) >> 4) ^ 0xE;
  v525 = 7 * ((v523 - 2 * (v523 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5D4]))) + 3983;
  v526 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x5B8]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v525 - 960 * ((unsigned __int16)((8739 * v525) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v524) = 7 * v526;
  v526 *= 244671;
  v527 = v524 - 960 * ((v526 + 139217799) >> 25);
  LOBYTE(v526) = (*(_BYTE *)(v14 + (unsigned __int16)(v524 - 960 * (v526 >> 25))) >> 4) ^ 0xE;
  v528 = 7 * ((v526 - 2 * (v526 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5D0]))) + 3983;
  v529 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x5C0]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v528 - 960 * ((unsigned __int16)((8739 * v528) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v530 = (unsigned __int16)(7 * v529 + 3983) % 0x3C0u;
  LOBYTE(v529) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v529
                                              - 960 * ((unsigned __int16)((244671 * v529) >> 16) >> 9))) >> 4) ^ 0xE;
  v531 = 7 * ((v529 - 2 * (v529 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5EC]))) + 3983;
  v532 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x5D8]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v531 - 960 * ((unsigned __int16)((8739 * v531) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v533 = 7 * v532;
  v532 *= 244671;
  LOWORD(v515) = v533 - 960 * ((v532 + 139217799) >> 25);
  LOBYTE(v532) = (*(_BYTE *)(v14 + (unsigned __int16)(v533 - 960 * (v532 >> 25))) >> 4) ^ 0xE;
  v534 = 7 * ((v532 - 2 * (v532 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x608]))) + 3983;
  v535 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x5F0]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v534 - 960 * ((unsigned __int16)((8739 * v534) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v536 = 7 * v535;
  v535 *= 244671;
  v537 = v536 - 960 * ((v535 + 139217799) >> 25);
  LOBYTE(v535) = (*(_BYTE *)(v14 + (unsigned __int16)(v536 - 960 * (v535 >> 25))) >> 4) ^ 0xE;
  v538 = 7 * ((v535 - 2 * (v535 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x630]))) + 3983;
  v539 = *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x610]) - 400755869 + LODWORD(STACK[0x588]))) ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v538 - 960 * ((unsigned __int16)((8739 * v538) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v540 = 7 * v539;
  LOBYTE(v539) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v539
                                              - 960 * ((unsigned __int16)((244671 * v539) >> 16) >> 9))) >> 4) ^ 0xE;
  v541 = 7 * ((v539 - 2 * (v539 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x644]))) + 3983;
  v542 = HIBYTE(LODWORD(STACK[0x700]));
  v543 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v541
                                               - 960 * ((unsigned __int16)((8739 * v541) >> 16) >> 7)));
  v544 = 16 * (v543 ^ 0xE3) + 336812917 - ((32 * (v543 ^ 0xE3)) & 0x16E0);
  v545 = 7 * ((HIBYTE(LODWORD(STACK[0x658])) & 0xF0 | ((-2 - LODWORD(STACK[0x700])) >> 28)) ^ 0x90) + 3983;
  v546 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v545 - 960 * ((unsigned __int16)((8739 * v545) >> 16) >> 7))) ^ 0xE3;
  v547 = v546 + 2052317254 - ((2 * v546) & 0x8C);
  v548 = v544 ^ v547 ^ 0x91BF44CC;
  v547 ^= 0x7A53E046u;
  v549 = (v548 + v547 + 1) ^ ((v544 ^ 0xEBECA48A) + 1);
  v550 = 7
       * (v547 + (v542 & 0x39 ^ 0x30 | v542 & 0x39 ^ 0x209) + ((v549 + 336812917 - ((2 * v549) & 0x2826B6EA)) ^ v544));
  v551 = 16 * (*(unsigned __int8 *)(v14 + LODWORD(STACK[0x6E0])) ^ 0xE3);
  LOBYTE(v541) = *(_BYTE *)(v14 + (LODWORD(STACK[0x6DC]) + 3983) % 0x3C0u) ^ 0xE3;
  v552 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v527 + 3983)) ^ 0xE3) << 8;
  v553 = (*(unsigned __int8 *)(v14 + v530) ^ 0xE3) << 12;
  v554 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v515 + 3983)) ^ 0xE3) << 16;
  v555 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v537 + 3983)) ^ 0xE3) << 20;
  v556 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v540 + 3983) % 0x3C0u) ^ 0xFFFFFFE3) << 24;
  v557 = v556 ^ ((*(unsigned __int8 *)(v14 + v550 % 0x3C0) ^ 3) << 28);
  v558 = v556 ^ v555;
  v559 = v555 ^ v554;
  v560 = v554 ^ v553;
  LOWORD(v553) = v553 ^ v552;
  v561 = v552 ^ v551;
  LOBYTE(v551) = v551 ^ v541;
  v562 = 7 * (STACK[0x6F8] & 0xFFFFFF0F | (16 * (v541 & 0xF))) + 1813;
  v563 = 7 * (v551 & 0xF0 | (LODWORD(STACK[0x688]) >> 4)) + 1813;
  v564 = 7 * ((v561 >> 4) & 0xF0 | (LODWORD(STACK[0x688]) >> 8) & 0xF) + 1813;
  v565 = (unsigned __int16)(v564 - 960 * ((unsigned __int16)((2185 * v564) >> 16) >> 5))
       + 1781226878
       - ((2 * (v564 - 960 * ((2185 * v564) >> 21))) & 0x2FC);
  v566 = LODWORD(STACK[0x688]) >> 8 >> ((~(_BYTE)v565 & 4 ^ 4) + (~(_BYTE)v565 & 4));
  v567 = *(unsigned __int8 *)(v14 + (v565 ^ 0x6A2B5D7E));
  v568 = v566 - ((2 * v566) & 0x1F9047A) + 872186429;
  v569 = ((v567 & 7 ^ 3) + (v567 & 7 ^ 4)) * (((v568 & 0xF | (16 * ((unsigned __int16)v553 >> 12))) ^ 0xD) + 259);
  LOWORD(v549) = (LODWORD(STACK[0x54C]) + 7) & 0xF;
  LOWORD(v549) = (unsigned __int16)(7 * (((v568 >> 4) ^ 3) & ((v549 ^ 0xF) + v549) ^ (v560 >> 12) & 0xF0) + 1813)
               % 0x3C0u;
  v570 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v569
                                                 - 960 * ((unsigned __int16)((17477 * v569) >> 16) >> 8))) ^ 0xE3) << 12) ^ ((v567 ^ 0xE3) << 8);
  v571 = 7 * ((HIWORD(v559) & 0xF0 | (v568 >> 8) & 0xF) ^ 2) + 1813;
  v572 = 7 * (((v558 >> 20) & 0xF0 | ((unsigned __int16)v568 >> 12)) ^ 8) + 1813;
  v573 = 7 * ((HIBYTE(v557) & 0xF0 | HIWORD(v568) & 0xF) ^ 0xC) + 1813;
  LOBYTE(v571) = *(_BYTE *)(v14
                          + (unsigned __int16)(v571 - 960 * ((unsigned __int16)((2185 * v571) >> 16) >> 5)));
  v574 = ((v571 ^ 0xE3) << 20) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v549) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v572 - 960 * ((unsigned __int16)((2185 * v572) >> 16) >> 5))) ^ 0xFFFFFFE3) << 24);
  v575 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v562 - 960 * ((unsigned __int16)((2185 * v562) >> 16) >> 5)));
  v576 = v575 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v563
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v563) >> 16) >> 5))) ^ 0xE3)) ^ 0xE3;
  v577 = (v570 ^ v576 | ((*(unsigned __int8 *)(v14
                                             + (unsigned __int16)(v573
                                                                - 960
                                                                * ((unsigned __int16)((2185 * v573) >> 16) >> 5))) ^ 3) << 28)) ^ v574;
  v578 = 7 * (HIBYTE(v574) & 0xF) + 3822 - 960 * ((2185 * (7 * (HIBYTE(v574) & 0xF) + 3822)) >> 21);
  v579 = (unsigned __int16)v578 + 97052098 - ((2 * v578) & 0x384);
  v580 = v577 >> (v542 & 0x10) >> (v542 & 0x10 ^ 0x10);
  LOWORD(v571) = 7
               * ((((v579 & 0x15A ^ 0xE018 | v579 & 0x15A ^ 0x142) + 8392) ^ ((v571 & 0xD0 ^ 0x3F)
                                                                            + (v571 & 0xD0 ^ 0xEF)
                                                                            - 46) & 0xF0)
                + (v580 >> 4));
  v581 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v580 & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v580 & 0xF) + 3822)) >> 16) >> 5)));
  v582 = ((*(unsigned __int8 *)(v14 + (v579 ^ 0x5C8E5C2u)) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14
                                                                                                + (unsigned __int16)(7 * (v577 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v577 >> 28) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | v581 ^ 0xE3;
  v583 = (v581 & 0xF ^ 0xC | v581 & 0xF ^ 3) & ((v570 ^ v576) >> 8);
  v584 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7 * ((unsigned __int16)v570 >> 12)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                      * (7
                                                                       * ((unsigned __int16)v570 >> 12)
                                                                       + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v576 >> 4) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v576 >> 4) + 3822)) >> 16) >> 5))) ^ 0xE3));
  v585 = LODWORD(STACK[0x698]) ^ 0x2B019D94;
  LODWORD(STACK[0x6E0]) = *(unsigned __int8 *)(v14
                                             + (unsigned __int16)(7 * (v575 & 0xF ^ 3)
                                                                + 3822
                                                                - 960
                                                                * ((unsigned __int16)((2185
                                                                                     * (7 * (v575 & 0xF ^ 3u) + 3822)) >> 16) >> 5))) ^ v585 ^ v584 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * v583 + 3822 - 960 * ((unsigned __int16)((2185 * (7 * v583 + 3822)) >> 16) >> 5))) ^ 0xE3 | (v582 << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v571 % 0x3C0u) ^ 0xE3) << 12)) << 8);
  v586 = 16
       * (*(unsigned __int8 *)(v14
                             + (unsigned __int16)(LODWORD(STACK[0x640])
                                                - 960 * ((LODWORD(STACK[0x634]) + 139217799) >> 25)
                                                + 3983)) ^ 0xE3);
  v587 = v586 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(LOWORD(STACK[0x62C]) + 3983) % 0x3C0u) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x5FC]) - 960 * ((LODWORD(STACK[0x5F8]) + 139217799) >> 25) + 3983)) ^ 0xE3) << 12) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(LOWORD(STACK[0x5C8]) + 3983) % 0x3C0u) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x5B0]) - 960 * ((LODWORD(STACK[0x5A8]) + 139217799) >> 25) + 3983)) ^ 0xE3) << 20) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x598]) - 960 * ((LODWORD(STACK[0x594]) + 139217799) >> 25) + 3983)) ^ 0xFFFFFFE3) << 24) ^ ((*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x5BC]) - 1256475221)) ^ 3) << 28);
  LOBYTE(v575) = *(_BYTE *)(v14 + (LODWORD(STACK[0x64C]) + 3983) % 0x3C0u) ^ 0xE3;
  LOBYTE(v586) = v586 ^ v575;
  v588 = 7 * (STACK[0x680] & 0xFFFFFF0F | (16 * (v575 & 0xF))) + 1813;
  v589 = 7 * (v586 & 0xF0 | (LODWORD(STACK[0x654]) >> 4)) + 1813;
  v590 = (v587 >> 8) - ((v587 >> 7) & 0xEDBC9E) + 1970724431;
  v591 = 7 * (((LODWORD(STACK[0x654]) >> 8) & 0xF | (16 * (v590 & 0xF))) ^ 0xF0) + 1813;
  v592 = 7 * ((v590 & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x638]) >> 12)) ^ 0x40) + 1813;
  v593 = 7 * (((v590 >> 4) & 0xF0 | HIWORD(LODWORD(STACK[0x638])) & 0xF) ^ 0xE0) + 1813;
  v594 = 7 * (((v590 >> 8) & 0xF0 | (LODWORD(STACK[0x5DC]) >> 20) & 0xF) ^ 0xD8) + 1813;
  v595 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v593
                                                 - 960 * ((unsigned __int16)((2185 * v593) >> 16) >> 5))) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v592 - 960 * ((unsigned __int16)((2185 * v592) >> 16) >> 5))) ^ 0xE3) << 12);
  v596 = 7 * (((v590 >> 12) & 0xF0 | HIBYTE(LODWORD(STACK[0x5DC])) & 0xF) ^ 0x6B) + 1813;
  v597 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v588 - 960 * ((unsigned __int16)((2185 * v588) >> 16) >> 5)));
  v598 = v597 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (((unsigned __int16)(v589
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v589) >> 16) >> 5))
                                       + 65551813
                                       - ((2 * (v589 - 960 * ((2185 * v589) >> 21))) & 0x38A)) ^ 0x3E83DC5)) ^ 0xE3)) ^ 0xE3;
  v599 = 7 * ((HIWORD(v590) & 0xF0 | (LODWORD(STACK[0x61C]) >> 28)) ^ 0x70) + 1813;
  v600 = (v598 ^ ((*(unsigned __int8 *)(v14
                                      + (unsigned __int16)(v591
                                                         - 960
                                                         * ((unsigned __int16)((2185 * v591) >> 16) >> 5))) ^ 0xE3) << 8) | ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v594 - 960 * ((unsigned __int16)((2185 * v594) >> 16) >> 5))) ^ 0xE3) << 20)) ^ v595;
  v601 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v599
                                                 - 960 * ((unsigned __int16)((2185 * v599) >> 16) >> 5))) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v596 - 960 * ((unsigned __int16)((2185 * v596) >> 16) >> 5))) ^ 0xFFFFFFE3) << 24) ^ v600;
  v602 = 7 * (HIWORD(v595) & 0xF) + 3822 - 960 * ((2185 * (7 * (HIWORD(v595) & 0xF) + 3822)) >> 21);
  v603 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7 * (HIBYTE(v601) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v601) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v601 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v601 >> 28) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12);
  v601 >>= 8;
  LOWORD(v594) = 7 * (v601 >> 4)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v601 >> 4) + 3822)) >> 16) >> 5);
  v604 = 7 * (v601 & 0xF) + 3822 - 960 * ((2185 * (7 * (v601 & 0xF) + 3822)) >> 21);
  v605 = (unsigned __int16)v604 - 1924669966 - ((2 * v604) & 0x3E4);
  v606 = (((((2 * v605) ^ 0xE570441B)
          + (v605 ^ 0x8D47DDF2)
          - ((2 * (((2 * v605) ^ 0xE570441B) + (v605 ^ 0x8D47DDF2))) & 0x3E4)
          + 498) ^ v605) & 0x222)
       + (v598 >> 4);
  v607 = *(unsigned __int8 *)(v14 + (((unsigned __int16)v602 - 259443804 - ((2 * v602) & 0x748)) ^ 0xF08933A4)) ^ 0xE3;
  v608 = ((*(unsigned __int8 *)(v14 + (v605 ^ 0x8D47DDF2)) ^ (((*(unsigned __int8 *)(v14
                                                                                   + (unsigned __int16)(7 * ((v600 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v600 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v594) ^ 0xE3))) ^ 0xE3) << 8) ^ ((v603 | v607) << 16);
  v609 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (v597 & 0xF ^ 3)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v597 & 0xF ^ 3u) + 3822)) >> 16) >> 5)));
  LODWORD(STACK[0x700]) = LODWORD(STACK[0x6B0]) ^ LODWORD(STACK[0x6F0]);
  v610 = v608 | v609 ^ 0xE3;
  v611 = v585 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(7 * v606
                                                        - 960 * ((unsigned __int16)((15295 * v606) >> 16) >> 5))) ^ 0xE3));
  v612 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x578]) + 3983) % 0x3C0u) ^ 0xE3;
  v613 = 7 * ((v612 - 390637764 - ((2 * v612) & 0x78)) ^ v465);
  v614 = (v613 + 3983) % 0x3C0;
  LOBYTE(v613) = (*(_BYTE *)(v14 + v613 % 0x3C0) >> 4) ^ 0xE;
  v615 = 7 * ((v613 - 2 * (v613 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5CC]))) + 3983;
  v616 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x58C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v615 - 960 * ((unsigned __int16)((8739 * v615) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v608) = 7 * v616;
  v616 *= 244671;
  LOWORD(v609) = v608 - 960 * ((v616 + 139217799) >> 25);
  LOBYTE(v616) = (*(_BYTE *)(v14 + (unsigned __int16)(v608 - 960 * (v616 >> 25))) >> 4) ^ 0xE;
  v617 = 7 * ((v616 - 2 * (v616 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5E0]))) + 3983;
  v618 = STACK[0x67C];
  v619 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)((LODWORD(STACK[0x5A0]) + 569)
                                               * (STACK[0x67C] & 7 ^ 2 | STACK[0x67C] & 7 ^ 5))
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v14
                                                             + (unsigned __int16)(v617
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v617) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v608) = 7 * v619;
  v619 *= 244671;
  LOWORD(v600) = v608 - 960 * ((v619 + 139217799) >> 25);
  LOBYTE(v619) = (*(_BYTE *)(v14 + (unsigned __int16)(v608 - 960 * (v619 >> 25))) >> 4) ^ 0xE;
  v620 = 7 * ((v619 - 2 * (v619 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x600]))) + 3983;
  v621 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x568]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v620 - 960 * ((unsigned __int16)((8739 * v620) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v608) = 7 * v621;
  LOBYTE(v621) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v621
                                              - 960 * ((unsigned __int16)((244671 * v621) >> 16) >> 9))) >> 4) ^ 0xE;
  v622 = 7 * ((v621 - 2 * (v621 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x574]))) + 3983;
  v623 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x56C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v622 - 960 * ((unsigned __int16)((8739 * v622) >> 16) >> 7))) ^ 0xE3));
  v624 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v608 + 3983) % 0x3C0u) ^ 0xE3) << 12) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v600 + 3983)) ^ 0xE3) << 8);
  LOWORD(v600) = 7 * (v623 ^ 0xE3);
  v625 = 244671 * (v623 ^ 0xE3);
  LOWORD(v623) = v600 - 960 * ((v625 + 139217799) >> 25);
  v626 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v600 - 960 * (v625 >> 25))) >> 4) ^ 0xE;
  v627 = 7 * ((v626 + (~(2 * v626) | 0xF9) - 28) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x580])))
       + 3983;
  LOWORD(v627) = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x570]) + 3983) % 0x3C0u) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v14 + (((unsigned __int16)(v627 - 960 * ((unsigned __int16)((8739 * v627) >> 16) >> 7)) - 45554097 - ((2 * (v627 - 960 * ((8739 * v627) >> 23))) & 0x49E)) ^ 0xFD48E64F)) ^ 0xE3)) ^ 0xE3;
  LOWORD(v600) = (unsigned __int16)(7 * v627 + 3983) % 0x3C0u;
  LOBYTE(v594) = *(_BYTE *)(v14 + LODWORD(STACK[0x590]));
  LOBYTE(v627) = (*(_BYTE *)(v14 + (unsigned __int16)(((v594 & 7 ^ 3) + (v594 & 7 ^ 4)) * v627) % 0x3C0u) >> 4) ^ 0xE;
  v628 = 7 * ((v627 - 2 * (v627 & 3) - 29) ^ v594) + 3983;
  v629 = *(unsigned __int8 *)(v14 + v614) ^ 0xE3;
  v630 = v629 ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v609 + 3983)) ^ 0xE3));
  v631 = v624 ^ v630 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v623 + 3983)) ^ 0xE3) << 16) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v600) ^ 0xE3) << 20);
  v632 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x57C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (((unsigned __int16)(v628 - 960 * ((unsigned __int16)((8739 * v628) >> 16) >> 7)) + 1369836269 - ((2 * (v628 - 960 * ((8739 * v628) >> 23))) & 0x5DA)) ^ 0x51A60AED)) ^ 0xE3)) ^ 0xE3;
  LOWORD(v600) = 7 * v632;
  v632 *= 244671;
  LOWORD(v557) = v600 - 960 * ((v632 + 139217799) >> 25);
  LOBYTE(v632) = (*(_BYTE *)(v14 + (unsigned __int16)(v600 - 960 * (v632 >> 25))) >> 4) ^ 0xE;
  v633 = 7 * ((v632 - 2 * (v632 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x5B4]))) + 3983;
  v634 = 7 * ((HIBYTE(LODWORD(STACK[0x648])) & 0xF0 | (LODWORD(STACK[0x650]) >> 28)) ^ 0x70) + 3983;
  v635 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v14
                                                                       + (unsigned __int16)(v634
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v634) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v633 - 960 * ((unsigned __int16)((8739 * v633) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v557 + 3983)) ^ 0xFFFFFFE3) << 24);
  v636 = v631 ^ 0x3943A0E4 ^ (v635 + 960733412 - ((2 * v635) & 0x72000000));
  v637 = 7 * (STACK[0x668] & 0xFFFFFF0F | (16 * (v629 & 0xF))) + 1813;
  v638 = 7 * (v630 & 0xF0 | (LODWORD(STACK[0x660]) >> 4)) + 1813;
  v639 = 7 * (((v624 ^ v630) >> 4) & 0xF0 | (LODWORD(STACK[0x660]) >> 8) & 0xF) + 1813;
  v640 = 7 * (((v624 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x670]) >> 12)) ^ 0xE) + 1813;
  v641 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v640
                                                 - 960 * ((unsigned __int16)((2185 * v640) >> 16) >> 5))) ^ 0xE3) << 12) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v639 - 960 * ((unsigned __int16)((2185 * v639) >> 16) >> 5))) ^ 0xE3) << 8);
  v642 = ((v631 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x670])) & 0xF) ^ 0xE;
  v643 = v642 - 2 * (v642 & 0x1B ^ (v631 >> 12) & 0x10) - 1122820597;
  LOWORD(v642) = (unsigned __int16)(7 * ((v642 - 2 * (v642 & 0x1B ^ (v631 >> 12) & 0x10) + 7691) ^ 0x1E0B) + 1813)
               % 0x3C0u;
  v644 = HIWORD(v631) & 0xF0 | (LODWORD(STACK[0x650]) >> 20) & 0xF;
  v645 = (v644 ^ 4) - 1328562103 - ((2 * v644) & 0x92);
  v646 = 7 * (v645 ^ 0xB0CFC049) + 1813;
  LOWORD(v645) = (unsigned __int16)(7
                                  * ((HIBYTE(LODWORD(STACK[0x650])) & 0xF | (16
                                                                           * (((v643 & 0x41 ^ 1 | v643 & 0x41 ^ 0x6D40)
                                                                             * (v645 & 0x4F ^ 0x49 | v645 & 0x4F ^ 0x906)) & HIBYTE(v636)))) ^ 7)
                                  + 1813)
               % 0x3C0u;
  v647 = ((*(unsigned __int8 *)(v14 + v646 % 0x3C0) ^ 0xE3) << 20) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v642) ^ 0xE3) << 16);
  HIDWORD(v648) = v636 >> 28;
  LODWORD(v648) = STACK[0x650];
  v649 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v637 - 960 * ((unsigned __int16)((2185 * v637) >> 16) >> 5)));
  v650 = v649 ^ (16
               * (*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v638
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v638) >> 16) >> 5))) ^ 0xE3)) ^ 0xE3;
  v651 = v641 ^ v650;
  v652 = v647 ^ v641 ^ v650;
  v653 = v652 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)v645) ^ 0xFFFFFFE3) << 24);
  v654 = 7
       * ((v653 ^ ((*(unsigned __int8 *)(v14
                                       + (7 * (v648 >> 28)
                                                      + 1813
                                                      - 960
                                                      * ((4473925
                                                        * (unint64_t)(7 * (v648 >> 28) + 1813)) >> 32))) ^ 3) << 28)) >> 28)
       + 3822;
  v655 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v654 - 960 * ((unsigned __int16)((2185 * v654) >> 16) >> 5)));
  v656 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(7 * (HIBYTE(v653) & 0xF)
                                               + 3822
                                               - 960
                                               * ((unsigned __int16)((2185
                                                                                  * (7 * (HIBYTE(v653) & 0xF) + 3822)) >> 16) >> 5)));
  LODWORD(STACK[0x6F8]) = v611 ^ v610;
  v657 = LODWORD(STACK[0x6E8]) ^ (16
                                * (*(unsigned __int8 *)(v14
                                                      + (unsigned __int16)(7 * (v650 >> 4)
                                                                         + 3822
                                                                         - 960
                                                                         * ((unsigned __int16)((2185
                                                                                              * (7
                                                                                               * (v650 >> 4)
                                                                                               + 3822)) >> 16) >> 5))) ^ 0xE3)) ^ (((((((v656 ^ 0xE3) << 8) ^ ((v655 ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v652) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v652) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v647 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v647 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v651 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v651 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((unsigned __int16)v641 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v641 >> 12) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v649 & 0xF ^ 3) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v649 & 0xF ^ 3u) + 3822)) >> 16) >> 5))) ^ 0xE3);
  LODWORD(STACK[0x670]) = v618 ^ 0x5B1851A ^ LODWORD(STACK[0x4DC]);
  v658 = 7 * ((STACK[0x4FC] & 0xF0 | (LODWORD(STACK[0x620]) >> 4)) ^ 0x20) + 1813;
  v659 = (LODWORD(STACK[0x59C]) >> 12) ^ 0x1CF7E;
  v660 = 7 * (((LODWORD(STACK[0x4FC]) >> 4) & 0xF0 | (LODWORD(STACK[0x620]) >> 8) & 0xF) ^ 0x20) + 1813;
  v661 = v659 & 0xF | (16 * ((unsigned __int16)LODWORD(STACK[0x4FC]) >> 12));
  v662 = 7 * (((v659 >> (v607 & 4) >> (v607 & 4 ^ 4)) & 0xF | (16 * (HIWORD(LODWORD(STACK[0x4FC])) & 0xF))) ^ 0xC0)
       + 1813;
  v663 = 7 * ((HIWORD(LODWORD(STACK[0x4FC])) & 0xF0 | (LODWORD(STACK[0x564]) >> 20) & 0xF) ^ 0x4F) + 1813;
  v664 = 7 * (((LODWORD(STACK[0x4FC]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x564])) & 0xF) ^ 0xAC) + 1813;
  v665 = 7
       * (((((((LODWORD(STACK[0x500]) ^ 3) << 28) - 1169407447 - (((LODWORD(STACK[0x500]) ^ 3) & 3u) << 29)) ^ LODWORD(STACK[0x4FC])) >> 24) & 0xF0 | (LODWORD(STACK[0x564]) >> 28)) ^ 1)
       + 1813;
  v666 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v664
                                               - 960 * ((unsigned __int16)((2185 * v664) >> 16) >> 5))) ^ 0xE3;
  v667 = LODWORD(STACK[0x4F0]) ^ (16
                                * (*(unsigned __int8 *)(v14
                                                      + (unsigned __int16)(v658
                                                                         - 960
                                                                         * ((unsigned __int16)((2185 * v658) >> 16) >> 5))) ^ 0xE3)) ^ 0xE3;
  v668 = v667 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v660
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v660) >> 16) >> 5))) ^ 0xE3) << 8);
  v669 = v668 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(7 * (v661 ^ 0x40)
                                                        + 1813
                                                        - 960
                                                        * ((unsigned __int16)((2185 * (7 * (v661 ^ 0x40u) + 1813)) >> 16) >> 5))) ^ 0xE3) << 12);
  v670 = v669 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v662
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v662) >> 16) >> 5))) ^ 0xE3) << 16);
  v671 = v670 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v663
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v663) >> 16) >> 5))) ^ 0xE3) << 20);
  v672 = v671 ^ ((v666 << 24) - 958698367 - ((v666 << 25) & 0x8C000000)) ^ 0xC6DB6C81;
  v673 = 7
       * ((v672 ^ ((*(unsigned __int8 *)(v14
                                       + (unsigned __int16)(v665 - 960 * ((unsigned __int16)((2185 * v665) >> 16) >> 5))) ^ 3) << 28)) >> 28)
       + 3822;
  v674 = ((((((*(unsigned __int8 *)(v14
                                  + (unsigned __int16)(7 * (HIBYTE(v672) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v672) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v673 - 960 * ((unsigned __int16)((2185 * v673) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v670) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v670) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v671 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v671 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v668 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v668 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((unsigned __int16)v669 >> 12) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v669 >> 12) + 2862)) >> 16) >> 5))) ^ 0xE3) << 12) | LODWORD(STACK[0x604]) ^ 0xE3;
  v675 = STACK[0x48C];
  LODWORD(STACK[0x6C0]) = LODWORD(STACK[0x48C]) ^ (16
                                                 * (*(unsigned __int8 *)(v14
                                                                       + (unsigned __int16)(7
                                                                                          * (v667 >> 4)
                                                                                          + 3822
                                                                                          - 960
                                                                                          * ((unsigned __int16)((2185 * (7 * (v667 >> 4) + 3822)) >> 16) >> 5))) ^ 0xE3)) ^ 0x55512F28 ^ v674;
  LOBYTE(v667) = (*(_BYTE *)(v14 + LODWORD(STACK[0x4B4]) % 0x3C0) >> 4) ^ 0xE;
  v676 = 7 * ((v667 - 2 * (v667 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x4C4]))) + 3983;
  v677 = (LODWORD(STACK[0x4A8]) ^ LODWORD(STACK[0x4B8])) & 0xF0 | (LODWORD(STACK[0x4AC]) >> 4);
  v678 = ((2 * v677) & 0x1EC) + (v677 ^ 0x3DD6BFF6);
  v679 = *(unsigned __int8 *)(v14
                            + (((v678 - 1037483453) & 0x233 | (1037483452 - v678) & 0x6F2D3433) ^ ((v657 & 0x6F2D3634 ^ 0x49002030)
                                                                                                 + (v657 & 0x6F2D3634 ^ 0x262D1604u)))
                            * (v678 - 1037483453)
                            % 0x3C0) ^ (16
                                      * (*(unsigned __int8 *)(v14
                                                            + (unsigned __int16)(v676
                                                                               - 960
                                                                               * ((unsigned __int16)((8739 * v676) >> 16) >> 7))) ^ 0xE3));
  v680 = (1327545942 - v678 + 8 * v678 + 496) % 0x3C0u;
  v681 = v679 ^ 0xE3;
  LOWORD(v679) = 7 * (v679 ^ 0xE3);
  v682 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v679
                                               - 960 * ((unsigned __int16)((244671 * v681) >> 16) >> 9)));
  LOWORD(v681) = (unsigned __int16)(v679 + 3983) % 0x3C0u;
  v683 = 7
       * ((((v682 >> 4) ^ 0xE) - 2 * (((v682 >> 4) ^ 0xE) & 3) - 29) ^ *(unsigned __int8 *)(v14 + v680))
       + 3983;
  v684 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x4B0]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (((unsigned __int16)(v683 - 960 * ((unsigned __int16)((8739 * v683) >> 16) >> 7)) - 964627435 - ((2 * (v683 - 960 * ((8739 * v683) >> 23))) & 0x2A)) ^ 0xC680F415)) ^ 0xE3)) ^ 0xE3;
  LOWORD(v611) = (unsigned __int16)(7 * v684 + 3983) % 0x3C0u;
  v685 = 7
       * ((*(_BYTE *)(v14 + LODWORD(STACK[0x4D0])) ^ (*(_BYTE *)(v14
                                                                                + (unsigned __int16)(7 * v684 - 960 * ((unsigned __int16)((244671 * v684) >> 16) >> 9))) >> 4)) ^ 0xED)
       + 3983;
  LOWORD(v680) = v685 - 960 * ((unsigned __int16)((8739 * v685) >> 16) >> 7);
  v686 = (unsigned __int16)LODWORD(STACK[0x4C0]) >> 12;
  v687 = ((LODWORD(STACK[0x4D4]) >> 7) & 0x160 ^ 0x140) + ((LODWORD(STACK[0x4D4]) >> 8) & 0xF0 ^ 0xFBEF7D1F) + 68190785;
  v688 = (v687 + ((v687 | v686) ^ 0xFFFFFFF7) + 1) ^ ((v686 ^ 0xFFFFFFF7) + 1);
  v689 = 7 * ((v686 ^ 0x64407816 ^ (v688 + 1681946646 - ((2 * v688) & 0xC880F03C) + 8)) + v687);
  v690 = *(unsigned __int8 *)(v14 + (v689 + 3983) % 0x3C0) ^ (16
                                                            * (*(unsigned __int8 *)(v14 + (unsigned __int16)v680) ^ 0xE3)) ^ 0xE3;
  LOWORD(v688) = 7 * v690;
  v690 *= 244671;
  v691 = (*(unsigned __int8 *)(v14 + (unsigned __int16)(v688 - 960 * (v690 >> 25))) >> 4) ^ 0xE;
  v692 = (v691 - 2 * (v691 & 3) - 29) ^ *(unsigned __int8 *)(v14 + v689 % 0x3C0);
  v693 = ((2 * v692) & 0x72) + (v692 ^ 0x239);
  LOWORD(v672) = v688 - 960 * ((v690 + 139217799) >> 25);
  v694 = *(unsigned __int8 *)(v14 + LODWORD(STACK[0x4E8])) ^ (16
                                                            * (*(unsigned __int8 *)(v14
                                                                                  + (unsigned __int16)(7 * v693 - 960 * ((unsigned __int16)((61173 * v693) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v693) = 7 * v694;
  v694 *= 244671;
  LOWORD(v688) = v693 - 960 * ((v694 + 139217799) >> 25);
  LOBYTE(v694) = (*(_BYTE *)(v14 + (unsigned __int16)(v693 - 960 * (v694 >> 25))) >> 4) ^ 0xE;
  v695 = 7 * ((v694 - 2 * (v694 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x4D8]))) + 3023;
  v696 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x3FC]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v695 - 960 * ((unsigned __int16)((8739 * v695) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v693) = 7 * v696;
  v696 *= 244671;
  LOWORD(v691) = v693 - 960 * ((v696 + 139217799) >> 25);
  LOWORD(v693) = v693 - 960 * (v696 >> 25);
  v697 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v691 + 3983)) ^ 0xE3) << 20) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v688 + 3983)) ^ 0xE3) << 16);
  LOBYTE(v693) = (*(_BYTE *)(v14 + (unsigned __int16)v693) >> 4) ^ 0xE;
  v698 = 7 * ((v693 - 2 * (v693 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x3E8]))) + 3983;
  v699 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x408]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v698 - 960 * ((unsigned __int16)((8739 * v698) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v688) = 7 * v699;
  LOBYTE(v699) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v699
                                              - 960 * ((unsigned __int16)((244671 * v699) >> 16) >> 9))) >> 4) ^ 0xE;
  v700 = 7 * ((v699 - 2 * (v699 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x3F4]))) + 3983;
  v701 = 7 * ((HIBYTE(LODWORD(STACK[0x4CC])) & 0xF0 | (LODWORD(STACK[0x4C8]) >> 28)) ^ 0x60) + 3983;
  v702 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v14
                                                                       + (unsigned __int16)(v701
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v701) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v700 - 960 * ((unsigned __int16)((8739 * v700) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v14
                                                                           + (unsigned __int16)(v688 + 3983) % 0x3C0u) ^ 0xFFFFFFE3) << 24);
  v703 = 16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v681) ^ 0xE3);
  v704 = (*(unsigned __int8 *)(v14 + (unsigned __int16)v611) ^ 0xE3) << 8;
  v705 = v704 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v672 + 3983)) ^ 0xE3) << 12);
  v706 = v704 ^ v703;
  v707 = (((v703 ^ LODWORD(STACK[0x4E0])) & 0xF0 | (LODWORD(STACK[0x4AC]) >> 4))
        + 259)
       * (HIBYTE(LODWORD(STACK[0x4C8])) & 7 ^ 6 | HIBYTE(LODWORD(STACK[0x4C8])) & 7 ^ 1);
  v708 = 7 * ((v706 >> 4) & 0xF0 | (LODWORD(STACK[0x4AC]) >> 8) & 0xF) + 1813;
  v709 = v705 ^ v697;
  v710 = ((((v702 ^ v709) >> 12) - 6) & 3 ^ 2)
       + ((((v702 ^ v709) >> 12) - 6) & 3 ^ 0x101)
       + ((v686 & 0xFFFFFF0F | (16 * ((((v702 ^ v709) >> 12) - 6 - ((v705 >> 11) & 4)) & 0xF))) ^ 0xA8);
  v711 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v708
                                               - 960 * ((unsigned __int16)((2185 * v708) >> 16) >> 5)));
  v712 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7 * v710 - 960 * ((unsigned __int16)((61173 * v710) >> 16) >> 7))) ^ 0xE3) << 12) ^ ((v711 ^ 0xE3) << 8);
  v713 = (v711 & 7 ^ 3 | v711 & 7 ^ 4)
       * (((((v705 ^ v697) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4C0])) & 0xF) ^ 2) + 259);
  v714 = 7 * ((HIWORD(v697) & 0xF0 | (LODWORD(STACK[0x4C8]) >> 20) & 0xF) ^ 0xA) + 1813;
  v715 = 7 * ((((v702 ^ v709) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4C8])) & 0xF) ^ 0xE) + 1813;
  v716 = 7 * (HIBYTE(v702) & 0xF0 | (LODWORD(STACK[0x4C8]) >> 28)) + 1813;
  v717 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v716
                                                 - 960 * ((unsigned __int16)((2185 * v716) >> 16) >> 5))) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v715 - 960 * ((unsigned __int16)((2185 * v715) >> 16) >> 5))) ^ 0xFFFFFFE3) << 24);
  v718 = LODWORD(STACK[0x4E4]) ^ (16
                                * (*(unsigned __int8 *)(v14
                                                      + (unsigned __int16)(v707
                                                                         - 960
                                                                         * ((unsigned __int16)((8739 * v707) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  v719 = v712 ^ v718;
  v720 = v712 ^ v718 ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v713
                                                               - 960 * ((unsigned __int16)((8739 * v713) >> 16) >> 7))) ^ 0xE3) << 16);
  v721 = v720 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v714
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v714) >> 16) >> 5))) ^ 0xE3) << 20);
  v722 = v717 ^ v721;
  v723 = ((((((*(unsigned __int8 *)(v14
                                  + (unsigned __int16)(7 * (HIBYTE(v722) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v722) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v722 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v722 >> 28) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v720) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v720) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v721 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v721 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v719 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v719 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((unsigned __int16)v712 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v712 >> 12) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12);
  v724 = LODWORD(STACK[0x6A0]) ^ LODWORD(STACK[0x4BC]);
  v725 = LODWORD(STACK[0x4BC]) ^ 0x2299CA7F ^ LODWORD(STACK[0x4F4]);
  v726 = *(unsigned __int8 *)(v14 + (LODWORD(STACK[0x4F8]) ^ 0xAAB52C3F)) ^ 0xE3;
  v727 = (v723 | v726) ^ (16
                        * (*(unsigned __int8 *)(v14
                                              + (unsigned __int16)(7 * (v718 >> 4)
                                                                 + 3822
                                                                 - 960
                                                                 * ((unsigned __int16)((2185
                                                                                      * (7
                                                                                       * (v718 >> 4)
                                                                                       + 3822)) >> 16) >> 5))) ^ 0xE3));
  v728 = v727 + 933649793 - 2 * (v727 & 0x37A65D8D ^ v726 & 0xC);
  v729 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x430]) + 3983) % 0x3C0u) ^ 0xE3;
  v730 = 7 * ((v729 - 390637764 - ((2 * v729) & 0x78)) ^ LODWORD(STACK[0x6E4]));
  v731 = (v730 + 3983) % 0x3C0;
  LOBYTE(v730) = (*(_BYTE *)(v14 + v730 % 0x3C0) >> 4) ^ 0xE;
  v732 = 7 * ((v730 - 2 * (v730 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x41C]))) + 3983;
  v733 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x440]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v732 - 960 * ((unsigned __int16)((8739 * v732) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOBYTE(v726) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v733
                                              - 960 * ((unsigned __int16)((244671 * v733) >> 16) >> 9))) >> 4) ^ 0xE;
  v734 = 7 * ((v726 - 2 * (v726 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x424]))) + 3983;
  v735 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x450]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v734 - 960 * ((unsigned __int16)((8739 * v734) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v722) = 7 * v735;
  LOBYTE(v735) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v735
                                              - 960 * ((unsigned __int16)((244671 * v735) >> 16) >> 9))) >> 4) ^ 0xE;
  v736 = 7 * ((v735 - 2 * (v735 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x428]))) + 3983;
  v737 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v722 + 3983) % 0x3C0u);
  v738 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x458]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v736 - 960 * ((unsigned __int16)((8739 * v736) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v720) = (unsigned __int16)((v738 + 569) * ((v737 & 7 ^ 3) + (v737 & 7 ^ 4))) % 0x3C0u;
  LOBYTE(v738) = (*(_BYTE *)(v14
                           + (unsigned __int16)(7 * v738
                                              - 960 * ((unsigned __int16)((244671 * v738) >> 16) >> 9))) >> 4) ^ 0xE;
  v739 = 7 * ((v738 - 2 * (v738 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x42C]))) + 3983;
  v740 = ((*(unsigned __int8 *)(v14 + (unsigned __int16)v720) ^ 0xE3) << 12) ^ ((v737 ^ 0xE3) << 8);
  v741 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x45C]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v739 - 960 * ((unsigned __int16)((8739 * v739) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v737) = 7 * v741;
  v741 *= 244671;
  LOBYTE(v720) = (*(_BYTE *)(v14 + (unsigned __int16)(v737 - 960 * (v741 >> 25))) >> 4) ^ 0xE;
  v742 = 7 * ((v720 - 2 * (v720 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x438]))) + 3983;
  LOWORD(v741) = v737 - 960 * ((v741 + 139217799) >> 25);
  v743 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x460]) + 3983) % 0x3C0u) ^ (16
                                                                                                * (*(unsigned __int8 *)(v14 + (unsigned __int16)(v742 - 960 * ((unsigned __int16)((8739 * v742) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LOWORD(v742) = 7 * v743;
  v743 *= 244671;
  LOWORD(v719) = v742 - 960 * ((v743 + 139217799) >> 25);
  LOBYTE(v743) = (*(_BYTE *)(v14 + (unsigned __int16)(v742 - 960 * (v743 >> 25))) >> 4) ^ 0xE;
  v744 = 7 * ((v743 - 2 * (v743 & 3) - 29) ^ *(unsigned __int8 *)(v14 + LODWORD(STACK[0x448]))) + 3983;
  v745 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v744
                                               - 960 * ((unsigned __int16)((8739 * v744) >> 16) >> 7))) ^ 0xE3;
  v746 = 16 * v745 + 1230724383 - ((32 * v745) & 0x1A20);
  v747 = *(unsigned __int8 *)(v14 + (unsigned __int16)(LODWORD(STACK[0x464]) + 3983) % 0x3C0u) ^ 0xE3;
  v748 = v747 - 1812603158 - ((2 * v747) & 0x1D4);
  v749 = v746 ^ v748 ^ 0x25517C0A;
  v748 ^= 0x93F5DEEA;
  v750 = (v749 + v748 + 1) ^ ((v746 ^ 0xB6A4A2E0) + 1);
  v751 = 7 * (((v750 + 1230724383 - ((2 * v750) & 0x92B6BA3E)) ^ v746) + v748);
  v752 = (v751 + 3983) % 0x3C0;
  LOBYTE(v751) = *(_BYTE *)(v14 + LODWORD(STACK[0x454])) ^ (*(_BYTE *)(v14 + v751 % 0x3C0) >> 4);
  LOWORD(v750) = 7 * (v751 ^ 0xED)
               + 3983
               - 960 * ((unsigned __int16)((8739 * (7 * (v751 ^ 0xEDu) + 3983)) >> 16) >> 7);
  v753 = (v751 & 7 ^ 5 | v751 & 7 ^ 2)
       * (((HIBYTE(LODWORD(STACK[0x49C])) & 0xF0 | (LODWORD(STACK[0x490]) >> 28)) ^ 0x51) + 569);
  v754 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7
                                                 * (*(unsigned __int8 *)(v14
                                                                       + (unsigned __int16)(v753
                                                                                          - 960
                                                                                          * ((unsigned __int16)((8739 * v753) >> 16) >> 7))) ^ (unsigned __int16)(16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v750) ^ 0xE3)) ^ 0xE3)
                                                 + 3983)
                              % 0x3C0u) ^ 3) << 28) ^ ((*(unsigned __int8 *)(v14 + v752) ^ 0xFFFFFFE3) << 24);
  v755 = 16
       * (*(unsigned __int8 *)(v14
                             + (unsigned __int16)(7 * v733
                                                - 960 * ((244671 * v733 + 139217799) >> 25)
                                                + 3983)) ^ 0xE3);
  v756 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v719 + 3983)) ^ 0xE3;
  v757 = v740 ^ v755;
  v758 = v740 ^ v755 ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v741 + 3983)) ^ 0xE3) << 16);
  v759 = v758 ^ (v756 << 20);
  v760 = v759 ^ 0xA3928235 ^ (v754 - 1550679499 - ((2 * v754) & 0x46000000));
  LOBYTE(v723) = *(_BYTE *)(v14 + v731) ^ 0xE3;
  LOBYTE(v755) = v755 ^ v723;
  v761 = 7 * (STACK[0x624] & 0xFFFFFF0F | (16 * (v723 & 0xF))) + 1813;
  v762 = 7 * (v755 & 0xF0 | (LODWORD(STACK[0x4A4]) >> 4)) + 1813;
  LOWORD(v750) = v762 - 960 * ((unsigned __int16)((2185 * v762) >> 16) >> 5);
  v763 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v761 - 960 * ((unsigned __int16)((2185 * v761) >> 16) >> 5)));
  v764 = 7 * ((((v757 >> 8) & 0xF) << ((v763 & 4 ^ 4) + (v763 & 4))) ^ (LODWORD(STACK[0x4A4]) >> 8) & 0xF) + 1813;
  v765 = 7 * (((v740 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4A0]) >> 12)) ^ 0xA) + 1813;
  v766 = 7 * (((v758 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4A0])) & 0xF) ^ 0xC) + 1813;
  v767 = 7 * ((HIWORD(v759) & 0xF0 | (LODWORD(STACK[0x490]) >> 20) & 0xF) ^ 9) + 1813;
  v768 = *(unsigned __int8 *)(v14
                            + (unsigned __int16)(v767
                                               - 960 * ((unsigned __int16)((2185 * v767) >> 16) >> 5))) ^ 0xE3;
  v769 = (v768 << 20) + 1938522827 - ((v768 << 21) & 0x7000000);
  v770 = v763 ^ (16 * (*(unsigned __int8 *)(v14 + (unsigned __int16)v750) ^ 0xE3)) ^ 0xE3;
  v771 = v770 ^ ((*(unsigned __int8 *)(v14 + v764 % 0x3C0) ^ 0xE3) << 8);
  v772 = v771 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v765
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v765) >> 16) >> 5))) ^ 0xE3) << 12);
  v773 = v772 ^ ((*(unsigned __int8 *)(v14
                                     + (unsigned __int16)(v766
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v766) >> 16) >> 5))) ^ 0xE3) << 16);
  v774 = v773 ^ ((*(unsigned __int8 *)(v14
                                     + 7
                                     * (((HIBYTE(LODWORD(STACK[0x490])) ^ 0x11) & 0xF | (16 * (HIBYTE(v760) & 0xF)))
                                      + (((v769 & 0x7C00000 ^ 0x3800000) + (v769 & 0x7C00000 ^ 0xB44ABD6A)) ^ 0xB7CABC69))
                                     % 0x3C0) ^ 0xFFFFFFE3) << 24) ^ ((*(unsigned __int8 *)(v14
                                                                                          + (unsigned __int16)(7 * (((((HIBYTE(LODWORD(STACK[0x490])) ^ 0x11u) >> 4) | (16 * ((v760 >> 28) - ((v760 >> 27) & 2)))) - 6896) ^ 0xE510) + 1813)
                                                                                          % 0x3C0u) ^ 3) << 28);
  v775 = (v774 + 1938522827 - ((2 * v774) & 0xE7170596)) ^ v769;
  v776 = ((((((*(unsigned __int8 *)(v14
                                  + (unsigned __int16)(7 * (HIBYTE(v775) & 0xF)
                                                     + 3822
                                                     - 960
                                                     * ((unsigned __int16)((2185
                                                                                        * (7 * (HIBYTE(v775) & 0xF)
                                                                                         + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v774 >> 28) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (v774 >> 28) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v773) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v773) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v775 >> 20) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v775 >> 20) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v771 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v771 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((unsigned __int16)v772 >> 12) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((unsigned __int16)v772 >> 12) + 3822)) >> 16) >> 5))) ^ 0xE3) << 12);
  LOWORD(v774) = 7 * (v763 & 0xF ^ 3)
               + 3822
               - 960 * ((unsigned __int16)((2185 * (7 * (v763 & 0xF ^ 3u) + 3822)) >> 16) >> 5);
  v777 = LODWORD(STACK[0x47C]) + LODWORD(STACK[0x488]);
  v778 = LODWORD(STACK[0x470]) ^ 0xC8D06473 ^ (16
                                             * (*(unsigned __int8 *)(v14
                                                                   + (unsigned __int16)(7 * (v770 >> 4)
                                                                                      + 3822
                                                                                      - 960
                                                                                      * ((unsigned __int16)((2185 * (7 * (v770 >> 4) + 3822)) >> 16) >> 5))) ^ 0xE3)) ^ (v776 | *(unsigned __int8 *)(v14 + (unsigned __int16)v774) ^ 0xE3);
  v779 = STACK[0x694];
  v780 = LODWORD(STACK[0x694]) - 241193978 + LODWORD(STACK[0x480]);
  v781 = LODWORD(STACK[0x4EC]) - 1351528357 + LODWORD(STACK[0x46C]);
  v782 = 7 * (STACK[0x468] & 0xFFFFFF0F | (16 * (STACK[0x40C] & 0xF))) + 1813;
  v783 = 7 * (((LODWORD(STACK[0x418]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x410])) & 0xF) ^ 0xA) + 1813;
  v784 = 7 * ((HIWORD(LODWORD(STACK[0x3EC])) & 0xF0 | (LODWORD(STACK[0x420]) >> 20) & 0xF) ^ 4) + 1813;
  v785 = 7 * (((LODWORD(STACK[0x3F0]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x420])) & 0xF) ^ 2) + 1813;
  v786 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(v784
                                                 - 960 * ((unsigned __int16)((2185 * v784) >> 16) >> 5))) ^ 0xE3) << 20) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v783 - 960 * ((unsigned __int16)((2185 * v783) >> 16) >> 5))) ^ 0xE3) << 16);
  v787 = 7 * ((HIBYTE(LODWORD(STACK[0x400])) & 0xF0 | (LODWORD(STACK[0x420]) >> 28)) ^ 0xA) + 1813;
  v788 = *(unsigned __int8 *)(v14 + (unsigned __int16)(v782 - 960 * ((unsigned __int16)((2185 * v782) >> 16) >> 5)));
  v789 = v788 ^ (16 * (*(unsigned __int8 *)(v14 + (LODWORD(STACK[0x3F8]) ^ 0x47FA4E3Fu)) ^ 0xE3)) ^ 0xE3;
  v790 = LODWORD(STACK[0x3E4]) ^ v789;
  v791 = v786 ^ v790;
  v792 = v786 ^ v790 ^ ((*(unsigned __int8 *)(v14
                                            + (unsigned __int16)(v785
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v785) >> 16) >> 5))) ^ 0xFFFFFFE3) << 24);
  v793 = 7
       * ((v792 ^ ((*(unsigned __int8 *)(v14
                                       + (unsigned __int16)(v787
                                                          - 960
                                                          * ((unsigned __int16)((2185 * v787) >> 16) >> 5))) ^ 3) << 28)) >> 28)
       + 3822;
  v794 = 7 * ((v786 >> 20) & 0xF) + 3822;
  v795 = ((*(unsigned __int8 *)(v14
                              + (unsigned __int16)(7 * (HIBYTE(v792) & 0xF)
                                                 + 3822
                                                 - 960
                                                 * ((unsigned __int16)((2185
                                                                                    * (7 * (HIBYTE(v792) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + (unsigned __int16)(v793 - 960 * ((unsigned __int16)((2185 * v793) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (BYTE2(v791) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * (HIWORD(v791) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3;
  v796 = v780 ^ LODWORD(STACK[0x484]);
  v797 = v796 ^ 0x7BD1B28E ^ v421;
  v798 = (((v795 << 8) ^ ((*(unsigned __int8 *)(v14
                                              + (unsigned __int16)(v794
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v794) >> 16) >> 5))) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * ((v790 >> 8) & 0xF) + 3822 - 960 * ((unsigned __int16)((2185 * (7 * ((v790 >> 8) & 0xF) + 3822)) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v14 + LODWORD(STACK[0x3E0])) ^ 0xE3) << 12) | *(unsigned __int8 *)(v14 + (unsigned __int16)(7 * (v788 & 0xF ^ 3) + 2862 - 960 * ((unsigned __int16)((2185 * (7 * (v788 & 0xF ^ 3u) + 2862)) >> 16) >> 5))) ^ 0xE3;
  v799 = v781 ^ LODWORD(STACK[0x628]);
  v800 = v799 ^ 0xC8D06473 ^ (16
                            * (*(unsigned __int8 *)(v14
                                                  + (unsigned __int16)(7 * (v789 >> 4)
                                                                     + 3822
                                                                     - 960
                                                                     * ((unsigned __int16)((2185
                                                                                          * (7
                                                                                           * (v789 >> 4)
                                                                                           + 3822)) >> 16) >> 5))) ^ 0xE3)) ^ v798;
  v801 = v675 ^ 0x7F26A8AC ^ v728;
  v802 = LODWORD(STACK[0x474])
       + LODWORD(STACK[0x478])
       - ((2 * (LODWORD(STACK[0x474]) + LODWORD(STACK[0x478])) + 1298107182) & 0xFAD2B16C)
       - 1541857715;
  LODWORD(STACK[0x6DC]) = (1351528357 - LODWORD(STACK[0x4EC])) ^ 0x3BCDBC92 ^ v802;
  v803 = ((2 * v802) & 0x87969D68 ^ 0x82929168) + (v802 ^ 0x3EA21602);
  v804 = (241193978 - v779) ^ 0xA2CB44D1 ^ (v777 - 487384878);
  v805 = (v780 + 2022316030) ^ (v777 + 650012550);
  v806 = (v803 ^ (v781 + 2022316030) ^ 0x6F6F5DBF) - 1074677151 + ((2 * (v803 ^ (v781 + 2022316030))) & 0xDEDEBB7E);
  LODWORD(STACK[0x6F0]) = LODWORD(STACK[0x6A8]) ^ 0xEA675E8D;
  LODWORD(STACK[0x610]) = LODWORD(STACK[0x6E0]) ^ 0xE3;
  LODWORD(STACK[0x604]) = v657 ^ 0x23295432;
  v807 = LODWORD(STACK[0x414]) ^ 0x3D47678;
  v808 = v799 - 1580660136;
  v809 = v796 - 1958105195;
  v810 = v777 - 1971186609;
  v811 = v805 - 641531033;
  v812 = v803 + 910836004;
  LODWORD(STACK[0x6E8]) = v724 ^ 0xF3A06F66;
  LODWORD(STACK[0x6E0]) = v724 ^ 0x166E6CE9;
  v813 = LODWORD(STACK[0x534]) + 2038494103;
  LODWORD(STACK[0x6BC]) = STACK[0x544];
  v814 = STACK[0x6C8];
  LODWORD(STACK[0x680]) = v797;
  v815 = v800;
  v816 = v778;
  v817 = (15 * (v814 ^ 0xBE2)) ^ v800 ^ 0xC8D06E86;
  LODWORD(STACK[0x694]) = v817;
  HIDWORD(v648) = v725 ^ 0x4A7;
  LODWORD(v648) = v725 ^ 0x7D60800;
  LODWORD(STACK[0x6E4]) = v816;
  LODWORD(STACK[0x6A0]) = v725;
  v818 = (v648 >> 11) ^ __ROR4__(v725, 25) ^ (((v725 ^ 0x7D60CA7) >> (((v811 + 1) ^ (6 - v811)) & 6))
                                            + ((v725 << 26) ^ 0x9C000000));
  HIDWORD(v648) = v801 ^ 0x473;
  LODWORD(v648) = v801 ^ 0xC8D06000;
  v819 = v648 >> 11;
  HIDWORD(v648) = v801 ^ 0xFFFFFFF3;
  LODWORD(v648) = v801 ^ 0xC8D06440;
  LODWORD(STACK[0x580]) = v816 ^ 0xC8D06473;
  LODWORD(STACK[0x6A8]) = v801;
  LODWORD(STACK[0x6B0]) = v807;
  v820 = (v648 >> 6) ^ v819 ^ (((v801 << 7) ^ 0x68323980)
                             + ((v801 ^ 0xC8D06473) >> (((v725 >> 25) & 0x99 ^ 0x18)
                                                                       + ((v725 >> 25) & 0x99 ^ 1))));
  v821 = (v801 ^ 0xC8D06473) & (v797 ^ 0x7D60CA7) ^ (((v801 ^ 0xC8D06473) & (v807 ^ 0x7D60CA7))
                                                   + ((v816 ^ 0xC8D06473) & (v725 ^ 0x7D60CA7))
                                                   - 2
                                                   * ((v801 ^ 0xC8D06473) & (v807 ^ 0x7D60CA7) & (v816 ^ 0xC8D06473) & (v725 ^ 0x7D60CA7))) ^ v817 & (v725 ^ 0x7D60CA7);
  v822 = v821 + 131468455 - ((2 * v821) & 0xFAC194E);
  LODWORD(STACK[0x578]) = v807 ^ 0x7D60CA7;
  LODWORD(STACK[0x574]) = v725 ^ 0x7D60CA7;
  LODWORD(STACK[0x688]) = v815;
  LODWORD(STACK[0x57C]) = v801 ^ 0xC8D06473;
  v823 = (v807 ^ 0x7D60CA7) & (v725 ^ 0x7D60CA7) ^ (v725 ^ 0x7D60CA7) & (v797 ^ 0x7D60CA7) ^ v815 ^ (v801 ^ 0xC8D06473) & (v815 ^ v816);
  v824 = (-886228335 - v808 + (v818 ^ 0xEB065383 ^ (v808 + 886228335))) ^ ((v818 ^ 0xEB065383 ^ v803) - v803) ^ ((v818 ^ 0x9011D7BE ^ (((v809 + 1263673394) ^ (v810 - 1673768137) ^ v820) - ((2 * ((v809 + 1263673394) ^ (v810 - 1673768137) ^ v820)) & 0xF62F087A) + 2065138749)) - ((v809 + 1263673394) ^ (v810 - 1673768137) ^ v820));
  v825 = v820 + v811;
  v826 = v811 - v810;
  v827 = ((2 * (v809 - (v811 - v810) - 1452218494)) & 0xFFF8FB9C) + ((v809 - (v811 - v810) - 1452218494) ^ 0x7FFC7DCE);
  v828 = v806 - v812;
  v829 = ((2 * (v808 - (v806 - v812) + 369691933)) & 0xE6FB1EB6) + ((v808 - (v806 - v812) + 369691933) ^ 0xF37D8F5B);
  v830 = v822 ^ v797;
  v831 = (v827 - 2147253710) ^ (v810 + 265371659) ^ v822 ^ v797;
  v832 = v813 + v825 + (LODWORD(STACK[0xB1C]) ^ 0x5B453E80);
  v833 = (-209875109 - v829 + (v823 ^ 0xC8D06473 ^ (v829 + 209875109))) ^ (-1939139796
                                                                         - v803
                                                                         + (v823 ^ 0xC8D06473 ^ (v803 + 1939139796))) ^ ((v823 ^ 0xD6FE74BF ^ (v831 - ((2 * v831) & 0x3C5C2198) + 506335436)) - v831);
  v834 = (LODWORD(STACK[0x6DC]) ^ 0x46A4E424) + v808;
  v835 = (v804 ^ 0xA2CB44D1) + v809;
  v836 = v826 - v810 - ((2 * (v826 - v810) - 721542178) & 0xF8E4C370) - 420383833;
  v837 = v835 + 885778453 + v827;
  v838 = (v836 ^ 0x838D9E47) - v810 + v827 + 1882341928;
  LODWORD(STACK[0x600]) = v838;
  v839 = (v836 ^ (v810 - ((2 * v810 - 1139427960) & 0xF8E4C370) - 629326724))
       + ((v825 + 641531033) | 0x97F3BF30)
       - ((v825 + 641531033) & 0x680C40CF);
  v840 = v806 - v812 - v812 - 1175575060;
  v841 = v834 - 1429505083 + v829;
  v842 = v840 ^ (v803 - 1043429491);
  LODWORD(STACK[0x5EC]) = v842;
  v843 = ((2 * (v841 ^ v840)) & 0xFF4CEFAA) + (v841 ^ v840 ^ 0xFFA677D5);
  v844 = ((2 * (v837 ^ v836)) & 0xEFB5E7BE ^ 0xE8A4C330) + (v837 ^ v836 ^ 0x8BA89267);
  LODWORD(STACK[0x644]) = -1169648462;
  LODWORD(STACK[0x698]) = 0;
  v845 = *((_DWORD *)off_2518F0F80[LODWORD(STACK[0x6C8]) - 2684]
         + 7
         * (((((v826 + v830 - 1978641926) & 0x911DF ^ 0x911DF) + ((v826 + v830 - 1978641926) & 0x911DF)) & 0x10006Fu)
          + 31)
         % 0xC0
         - 2) ^ 0xED1169CB;
  v846 = v845 - ((2 * v845 + 1550027442) & 0xD06B601C) - 1771604633;
  v847 = ((v846 ^ 0xE835B00E) + (v846 ^ 0x194914F1 ^ (v846 >> 4)) + 1) ^ (((v846 >> 4) ^ 0xF17CA4FF) + 1);
  v848 = ((v846 >> 4) ^ 0x3306002A ^ (v847 - ((2 * v847) & 0x7B0AB654) + 1032149802)) + (v846 ^ 0xE835B00E);
  v849 = *((_DWORD *)off_2518F0F80[LODWORD(STACK[0x6C8]) - 2684] + 149);
  v850 = v826 + v830 + v832 + 671587405 + (v846 ^ 0xF08BE10A ^ ((v848 >> 1) - 399134706 - (v848 & 0xD06B601C)));
  LODWORD(STACK[0x5B0]) = v850;
  v851 = ((8 * v849) ^ 0x6DF610) - 22682256;
  v852 = (v851 + (v849 ^ 0x3FF2413D ^ v851) + 1) ^ ((v849 ^ 0x3FF2413D) + 1);
  v853 = (v849 ^ 0x3F4516BA ^ (v852 - 12019503 - ((2 * v852) & 0xFE9150F0) + 4007)) + v851;
  v854 = LODWORD(STACK[0x6BC]) - v806;
  LODWORD(STACK[0x5F0]) = v829 - v828;
  v855 = v839 + 1;
  LODWORD(STACK[0x5F8]) = v839 + 1;
  v856 = v854 - v828 + v824 + v833 + (LODWORD(STACK[0x8D4]) ^ 0x5B453E80) + (v853 ^ 0xA65ACDE9);
  v857 = v844 + v838;
  LODWORD(STACK[0x5D8]) = v844 + 136645665;
  v837 ^= 0xF1C1D3AC;
  v858 = v855 - v857 - 1581606035 - ((2 * (v855 - v857 - 1581606035) + 448142396) & 0x35AD86D0) - 1473130106;
  LODWORD(STACK[0x5C0]) = v843;
  v859 = v843 + v829 - v828;
  v860 = ((2 * v841) & 0xFFDFCDF6 ^ 0xE3838550) + (v841 ^ 0x8E2E3557);
  LODWORD(STACK[0x6BC]) = v844 + v838 - 44289385;
  v861 = ((2 * ((v857 - 44289385) ^ (234233500 - v837))) & 0x79DBFCEE)
       + ((v857 - 44289385) ^ (234233500 - v837) ^ 0x3CEDFE77);
  v862 = v858 ^ (v837 - 234233500);
  LODWORD(STACK[0x658]) = v862;
  LODWORD(STACK[0x5D0]) = v844
                        + 136645665
                        - v837
                        + (v858 & 0x72FE50BF ^ 0x9FD7EF68)
                        + (v858 & 0x72FE50BF ^ 0xED29BFD7)
                        + 2;
  LODWORD(STACK[0x668]) = 136645665
                        - v837
                        + (v858 & 0x72FE50BF ^ 0x9FD7EF68)
                        + (v858 & 0x72FE50BF ^ 0xED29BFD7)
                        + 2
                        - v838;
  v863 = (v862 ^ 0x10AB55F2)
       - v861
       - 1838049219
       + (v858 & 0x72FE50BF ^ 0x9FD7EF68)
       + 136645665
       + (v858 & 0x72FE50BF ^ 0xED29BFD7)
       + 2
       - v838;
  v864 = v863 + 181393524 - ((2 * v863) & 0x159FB0E8);
  v861 -= 1022230135;
  v865 = v861 + (v862 ^ 0xEF54AA0D);
  v866 = v861 + (v864 ^ v865 ^ 0xACFD874) + ((2 * (v864 ^ v865)) ^ 0xEA604F17) + 1;
  v867 = v866 + 634812644 - ((2 * v866) & 0x4BACF1C8);
  v868 = v867 ^ (LODWORD(STACK[0x6E0]) + 634812644 - ((2 * LODWORD(STACK[0x6E0])) & 0x4BACF1C8));
  v869 = (v868 - ((2 * v868) & 0x906A3CF8) - 936042884) ^ v864 ^ v865;
  v870 = STACK[0x6C0];
  v871 = (v869 ^ 0x5DCDF884)
       + (LODWORD(STACK[0x6C0]) ^ 0x60C8C173 ^ ((v869 ^ 0xC2FAC608)
                                              - 1259561344
                                              - ((2 * (v869 ^ 0xC2FAC608)) & 0x69D93D00)));
  v872 = v842
       - v859
       - 1785041607
       - 2 * ((v842 - v859 - 1182052951) & 0x4D000A2F ^ (v842 - v859 - 1785041607) & 6)
       - 252646759;
  v873 = v872 ^ (v860 - ((2 * (v860 + 1914305129)) & 0x9A001452) - 1088813934);
  LODWORD(STACK[0x648]) = v873;
  v874 = v859 - ((2 * v859 + 364157780) & 0x95D2B194) + 1438885492;
  LODWORD(STACK[0x650]) = v874;
  LODWORD(STACK[0x5B4]) = v843 - v860;
  LODWORD(STACK[0x654]) = v843 - v860 - v859 + 1665579957;
  v875 = v874 ^ (-657498527 - v860 - ((466357038 - 2 * v860) & 0x95D2B194));
  LODWORD(STACK[0x64C]) = v873 ^ 0x75826965;
  v876 = (v873 ^ 0x75826965) + v875;
  v877 = v843 - v859 - 715082210 - v876;
  LODWORD(STACK[0x660]) = v877 ^ v876;
  v878 = ((2 * (v875 - (v877 ^ v876))) & 0x763FBFDE) + ((v875 - (v877 ^ v876)) ^ 0x3B1FDFEF);
  v879 = (v867 ^ 0xDA29871B) - v837;
  LODWORD(STACK[0x640]) = v878;
  v880 = ((2 * ((v864 ^ 0xC8FBDC87) + 558097747)) & 0x77585F1E) + (((v864 ^ 0xC8FBDC87) + 558097747) ^ 0x3BAC2F8F);
  LODWORD(STACK[0x6E0]) = v880;
  v881 = v878 + v860;
  v882 = v881
       + v880
       + ((991944687 - v878 + (v870 ^ 0xB4EC9E80 ^ (v878 - 991944687))) ^ ((v870 ^ 0xB4EC9E80 ^ v877 ^ v876)
                                                                         - (v877 ^ v876)) ^ (v871 + 1))
       - 78779669
       + v850;
  v883 = ((v877 ^ 0x3DCBFB0C) + 12111456) ^ ((v877 ^ 0x3D733553) + 1);
  v884 = v877 ^ 0x9F890B5 ^ (v883 - ((2 * v883) & 0x96E8B432) - 881567207);
  v885 = v882 - ((2 * v882) & 0xD9CA38AC) + 1826954326;
  v886 = (v877 ^ 0x3D733553) - v881 - 922360441;
  LODWORD(STACK[0x638]) = v886;
  LODWORD(STACK[0x5A8]) = v884;
  v887 = ((v884 + 12111455) ^ v886) - ((2 * ((v884 + 12111455) ^ v886)) & 0x4268464C);
  v888 = 7 * (HIBYTE(v885) & 0xF ^ 0xC) + 3640;
  LOWORD(v870) = v888 - 960 * ((unsigned __int16)((2185 * v888) >> 16) >> 5);
  v889 = v879 + 234233501;
  v890 = LODWORD(STACK[0x6E8]) ^ 0x8506C2FC;
  v891 = v864;
  v892 = (v864 ^ 0x37BCED27) + v879 + 234233501;
  LODWORD(STACK[0x5A0]) = v856 - 1042464446;
  LODWORD(STACK[0x6E8]) = v884 + 9909836;
  v893 = v890 + v856 - 1042464446 - (v884 + 9909836) - 945741755 + v889;
  v894 = v893 - 142527784 - ((2 * v893) & 0xEF0265B0);
  v895 = 7 * ((v885 >> 20) & 0xF ^ 0xE) + 3640;
  v896 = 7 * (HIWORD(v885) & 0xF ^ 5) + 3640;
  v897 = STACK[0x708];
  v898 = (((*(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)v870) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(7 * ((v885 >> 28) ^ 6) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * ((v885 >> 28) ^ 6) + 3640)) >> 16) >> 5))) ^ 3) << 12) | *(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(v896 - 960 * ((unsigned __int16)((2185 * v896) >> 16) >> 5))) ^ 0xE3) ^ (16 * (*(unsigned __int8 *)(STACK[0x708] + (unsigned __int16)(v895 - 960 * ((unsigned __int16)((2185 * v895) >> 16) >> 5))) ^ 0xE3));
  v899 = 7 * (((unsigned __int16)v885 >> 12) ^ 1) + 3640;
  v900 = 7 * ((v885 >> 8) & 0xF ^ 0xC) + 3640;
  LODWORD(STACK[0x67C]) = v885;
  v901 = 7 * ((v885 >> 4) ^ 5) + 3640;
  LOWORD(v829) = 7 * (v885 & 0xF ^ 6)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v885 & 0xF ^ 6) + 3640)) >> 16) >> 5);
  v902 = (v898 << 16) - 1925528430 + (~(v898 << 17) | 0xE58BFFFF) + 1;
  v903 = ((v902 ^ 0x8D3AC492)
        + ((*(unsigned __int8 *)(v897
                               + (unsigned __int16)(v900
                                                  - 960 * ((unsigned __int16)((2185 * v900) >> 16) >> 5))) ^ 0xE3) << 8)) ^ ((*(unsigned __int8 *)(v897 + (unsigned __int16)(v899 - 960 * ((unsigned __int16)((2185 * v899) >> 16) >> 5))) ^ 0xE3) << 12);
  v904 = *(unsigned __int8 *)(v897 + (unsigned __int16)v829) ^ 0xE3;
  v905 = (v903 | v904) ^ (16
                        * (*(unsigned __int8 *)(v897
                                              + (unsigned __int16)(v901
                                                                 - 960
                                                                 * ((unsigned __int16)((2185 * v901) >> 16) >> 5))) ^ 0xE3));
  v906 = 7 * (HIBYTE(v894) & 0xF ^ 7) + 3640;
  LOBYTE(v901) = (STACK[0x6E4] & 0x5C ^ 0xC) + (STACK[0x6E4] & 0x5C ^ 0x50);
  LODWORD(STACK[0x6DC]) = v887 + 557064998;
  v907 = (v894 ^ 0xF78132D8) >> (v901 + ((v887 + 38) & 0xB4 ^ 0x24 | (v887 + 38) & 0xB4 ^ 0x90));
  v908 = ((*(unsigned __int8 *)(v897
                              + (unsigned __int16)(v906
                                                 - 960 * ((unsigned __int16)((2185 * v906) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v897 + (unsigned __int16)(7 * (~v894 >> 28) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (~v894 >> 28) + 3640)) >> 16) >> 5))) ^ 0xE3) << 12);
  LOWORD(v906) = 7 * (v907 >> 4)
               + 3640
               - 960 * ((unsigned __int16)((2185 * (7 * (v907 >> 4) + 3640)) >> 16) >> 5);
  v909 = v908 | *(unsigned __int8 *)(v897
                                   + (unsigned __int16)(7 * (v907 & 0xF)
                                                      + 3640
                                                      - 960
                                                      * ((unsigned __int16)((2185 * (7 * (v907 & 0xF) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v910 = 7 * (((unsigned __int16)v894 >> 12) ^ 3) + 3640;
  v911 = 7 * ((v894 >> 8) & 0xF ^ 2) + 3640;
  v912 = (v909 << 8) ^ ((*(unsigned __int8 *)(v897 + (unsigned __int16)v906) ^ 0xE3) << 12);
  v913 = 7 * ((v894 >> 4) ^ 0xD) + 3640;
  v914 = v912 | *(unsigned __int8 *)(v897
                                   + (unsigned __int16)(v911
                                                      - 960
                                                      * ((unsigned __int16)((2185 * v911) >> 16) >> 5))) ^ 0xE3;
  v915 = (v914 << 8) - 1040770927 - ((v914 << 9) & 0x83EE3000);
  v916 = v915 ^ ((*(unsigned __int8 *)(v897
                                     + (unsigned __int16)(v910
                                                        - 960
                                                        * ((unsigned __int16)((2185 * v910) >> 16) >> 5))) ^ 0xE3) << 12);
  v917 = *(unsigned __int8 *)(v897
                            + (unsigned __int16)(7 * (v894 & 0xF ^ 8)
                                               + 3640
                                               - 960
                                               * ((unsigned __int16)((2185 * (7 * (v894 & 0xF ^ 8) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v918 = (v916 ^ 0xC1F71891 | v917) ^ (16
                                     * (*(unsigned __int8 *)(v897
                                                           + (unsigned __int16)(v913
                                                                              - 960
                                                                              * ((unsigned __int16)((2185 * v913) >> 16) >> 5))) ^ 0xE3));
  LODWORD(STACK[0x630]) = v904 & 0xF;
  v919 = 7 * (v904 & 0xF | (16 * (v917 & 0xF)));
  v920 = (unsigned __int16)(v919 + 3983) % 0x3C0u;
  if (v919 >= 0x3C0)
    v919 -= 960;
  v921 = *(unsigned __int8 *)(v897 + v920);
  v922 = LODWORD(STACK[0x584]) ^ 0xE3;
  LODWORD(STACK[0x59C]) = v922;
  v923 = v921 ^ v922;
  LODWORD(STACK[0x628]) = 7 * v923;
  LODWORD(STACK[0x624]) = 244671 * v923;
  LOBYTE(v923) = (*(_BYTE *)(v897
                           + (unsigned __int16)(7 * v923
                                              - 960 * ((unsigned __int16)((244671 * v923) >> 16) >> 9))) >> 4) ^ 0xE;
  v924 = 7 * ((v923 - 2 * (v923 & 3) - 29) ^ *(unsigned __int8 *)(v897 + v919)) + 3983;
  LODWORD(STACK[0x620]) = v905;
  v925 = ((v905 >> 4) - 72) & 0xF ^ 8;
  LODWORD(STACK[0x62C]) = v925;
  v926 = v918 & 0xF0 | v925;
  v927 = *(unsigned __int8 *)(v897
                            + (unsigned __int16)(7
                                               * (v926
                                                + (((((v905 >> 4) - 72) & 0xD ^ 8)
                                                  + (((v905 >> 4) - 72) & 0xD ^ 0x335)) & 0x23B)))
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v897
                                                             + (unsigned __int16)(v924
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v924) >> 16) >> 7))) ^ 0xE3));
  v928 = 7 * v926;
  v929 = 7 * v926 - 960;
  if (v928 < 0x3C0)
    v929 = v928;
  v930 = v892 + 1;
  v931 = v930 - ((2 * v930) & 0x96D9EBC) - 2068394146;
  LODWORD(STACK[0x634]) = v931 ^ v865;
  v932 = (v892 + 1 - ((2 * (v892 + 1)) & 0xBC) + 94) ^ v865 ^ 0xD9;
  v933 = ((v930 - ((2 * v930) & 0xBC) + 94) ^ v865 ^ 0x48) + (v932 & 0xE5 ^ 0x7E) + (v932 & 0x1A ^ 0xA);
  v934 = v927 ^ 0xE3;
  v935 = 8 * (v927 ^ 0xE3);
  LODWORD(STACK[0x61C]) = v935 - v934;
  v936 = (*(unsigned __int8 *)(v897
                             + (unsigned __int16)(v935
                                                - v934
                                                - 960 * ((unsigned __int16)((244671 * v934) >> 16) >> 9))) ^ 0xE3u) >> (v933 - 21);
  v937 = 7 * ((v936 + (~(2 * v936) | 0x39) - 28) ^ *(unsigned __int8 *)(v897 + v929)) + 3983;
  v938 = 7 * ((v918 >> 4) & 0xF0 | (v905 >> 8) & 0xF);
  v939 = *(unsigned __int8 *)(v897 + (unsigned __int16)(7 * ((v918 >> 4) & 0xF0 | (v905 >> 8) & 0xF) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v897 + (unsigned __int16)(v937 - 960 * ((unsigned __int16)((8739 * v937) >> 16) >> 7))) ^ 0xE3));
  if (v938 >= 0x3C0)
    v938 -= 960;
  v940 = v939 ^ 0xE3;
  LODWORD(STACK[0x5FC]) = 7 * v940;
  v941 = (*(unsigned __int8 *)(v897
                             + (unsigned __int16)(7 * v940
                                                - 960 * ((unsigned __int16)((244671 * v940) >> 16) >> 9))) >> 4) ^ 0xE;
  v942 = 7 * ((v941 + (~(2 * v941) | 0xF9) - 28) ^ *(unsigned __int8 *)(v897 + v938)) + 3983;
  LODWORD(STACK[0x608]) = v903;
  v943 = 7 * (((v916 >> 8) & 0xF0 | ((unsigned __int16)v903 >> 12)) ^ 0x10);
  v944 = *(unsigned __int8 *)(v897
                            + (unsigned __int16)(7 * (((v916 >> 8) & 0xF0 | ((unsigned __int16)v903 >> 12)) ^ 0x10)
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v897
                                                             + (unsigned __int16)(v942
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v942) >> 16) >> 7))) ^ 0xE3));
  if (v943 >= 0x3C0)
    v943 -= 960;
  v945 = v944 ^ 0xE3;
  v946 = 7 * v945;
  LODWORD(STACK[0x5E0]) = 7 * v945;
  v945 *= 244671;
  LODWORD(STACK[0x5DC]) = v945;
  LOBYTE(v945) = (*(_BYTE *)(v897 + (unsigned __int16)(v946 - 960 * (v945 >> 25))) >> 4) ^ 0xE;
  v947 = 7 * ((v945 - 2 * (v945 & 3) - 29) ^ *(unsigned __int8 *)(v897 + v943)) + 3983;
  v948 = *(unsigned __int8 *)(v897
                            + (unsigned __int16)(7
                                               * (BYTE2(v903) & 0xF | (16
                                                                     * ((HIWORD(v916) ^ 0xFFF7) & ((((_BYTE)v856 + 77) & 0xF ^ 0xF)
                                                                                                 + (((_BYTE)v856 + 77) & 0xF)))))
                                               + 3983)
                            % 0x3C0u) ^ (16
                                       * (*(unsigned __int8 *)(v897
                                                             + (unsigned __int16)(v947
                                                                                - 960
                                                                                * ((unsigned __int16)((8739 * v947) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LODWORD(STACK[0x5D4]) = 7 * v948;
  v949 = (*(unsigned __int8 *)(v897
                             + (unsigned __int16)(7 * v948
                                                - 960 * ((unsigned __int16)((244671 * v948) >> 16) >> 9))) >> 4) ^ 0xE;
  v950 = 7
       * ((v949 + (~(2 * v949) | 0xF9) - 28) ^ *(unsigned __int8 *)(v897
                                                                                   + (unsigned __int16)(7 * (BYTE2(v903) & 0xF | (16 * ((HIWORD(v916) ^ 0xFFF7) & ((((_BYTE)v856 + 77) & 0xF ^ 0xF) + (((_BYTE)v856 + 77) & 0xF))))))
                                                                                   % 0x3C0u))
       + 3983;
  LODWORD(STACK[0x58C]) = v915;
  LODWORD(STACK[0x590]) = v902;
  v951 = 7 * ((HIWORD(v915) & 0xF0 | (v902 >> 20) & 0xF) ^ 0xF3);
  v952 = STACK[0x644] & 0x362B9D;
  v953 = *(unsigned __int8 *)(v897
                            + (unsigned __int16)(7 * ((BYTE2(v915) & 0xF0 | (v902 >> 20) & 0xF) ^ 0xF3) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v897 + (unsigned __int16)(v950 - 960 * ((unsigned __int16)((8739 * v950) >> 16) >> 7))) ^ 0xE3));
  if (v951 >= 0x3C0)
    v951 -= 960;
  v954 = v953 ^ 0xE3;
  v955 = 7 * v954;
  LODWORD(STACK[0x5CC]) = 7 * v954;
  v954 *= 244671;
  LODWORD(STACK[0x5C8]) = v954;
  LOBYTE(v954) = (*(_BYTE *)(v897 + (unsigned __int16)(v955 - 960 * (v954 >> 25))) >> 4) ^ 0xE;
  LODWORD(STACK[0x5B8]) = (7
                         * ((v954 - 2 * (v954 & 3) - 29) ^ *(unsigned __int8 *)(v897 + v951))
                         + 3983)
                        % (((v952 ^ 0x90) + (v952 ^ 0x362B0D) + 5167190) & 0x70EFCCu);
  v956 = STACK[0x610];
  HIDWORD(v958) = LODWORD(STACK[0x610]) ^ 0x1E80;
  LODWORD(v958) = LODWORD(STACK[0x610]) ^ 0xB4EC8000;
  v957 = v958 >> 13;
  HIDWORD(v958) = LODWORD(STACK[0x610]) ^ 0x2C9E80;
  LODWORD(v958) = LODWORD(STACK[0x610]) ^ 0xB4C00000;
  v959 = LODWORD(STACK[0x610]) ^ 0xB4EC9E80;
  LODWORD(STACK[0x644]) = STACK[0x610];
  v960 = (__PAIR64__(v956, v959) >> 2) ^ (v958 >> 22) ^ v957;
  v961 = STACK[0x604];
  v962 = LODWORD(STACK[0x700]) ^ 0x8506C2FC;
  v963 = STACK[0x670];
  v964 = STACK[0x6F0];
  v965 = LODWORD(STACK[0x6F0]) ^ 0x8506C2FC;
  LODWORD(STACK[0x6C0]) = STACK[0x670];
  v963 ^= 0xB4EC9E80;
  v966 = LODWORD(STACK[0x6F8]) ^ 0xB4EC9E80;
  v967 = (v965 ^ v962) & v963 ^ v959 & v962 ^ v959 & (v961 ^ 0x8506C2FC) ^ v966 & v965 ^ v966 & (v961 ^ 0x8506C2FC);
  LODWORD(STACK[0x564]) = v962;
  LODWORD(STACK[0x588]) = v961 ^ 0x8506C2FC;
  LODWORD(STACK[0x570]) = v966;
  LODWORD(STACK[0x568]) = v959;
  v968 = v965 & v962 ^ v962 & (v961 ^ 0x8506C2FC) ^ v965 & (v961 ^ 0x8506C2FC) ^ v959 & v963 ^ v966 & v959 ^ v966 & v963;
  v969 = (((v857 + 898376192) ^ v968) - ((2 * ((v857 + 898376192) ^ v968)) & 0x35AD86D0) - 1697201304) ^ v858;
  v970 = ((v872 ^ 0xB2FFF5D6) + (v967 ^ 0x4D000A29 ^ v872) + 1) ^ (v967 - 2 * (v967 & (v859 + 1124744467))) ^ ((v967 ^ 0xD2AB1915 ^ (v969 - 760538859 - ((2 * v969) & 0xA556322A))) - v969);
  LODWORD(STACK[0x594]) = v891;
  v971 = (v891 ^ 0x37042378)
       + (v867 ^ 0x25D678E4)
       + v930
       - 775202217
       - ((2 * ((v891 ^ 0x37042378) + (v867 ^ 0x25D678E4) + v930 + 1)) & 0xA396B4AC);
  LODWORD(STACK[0x5BC]) = v971;
  v972 = v960 - LODWORD(STACK[0x5B4]) + LODWORD(STACK[0x5D8]) + v970;
  v973 = v931 ^ v891;
  LODWORD(STACK[0x610]) = v973;
  LODWORD(STACK[0x5B4]) = v973 ^ 0x92D73F2F;
  v974 = (LODWORD(STACK[0x6E0]) - 1001140110 + (v973 ^ 0x92D73F2F)) ^ v973;
  LODWORD(STACK[0x670]) = v974;
  v974 ^= 0x6D28C0D0u;
  LODWORD(STACK[0x598]) = v974;
  v975 = v972 + v974 + LODWORD(STACK[0x5B0]);
  v976 = (2 * v975 - 446053582) & 0x32939990;
  v975 += 201240161;
  v977 = v975 - v976;
  v978 = (7 * (((v975 - v976) >> 28) ^ 1) + 3640) % ((v971 & 0x3C0 ^ 0x180) + (v971 & 0x3C0 ^ 0x240));
  HIDWORD(v958) = v964 ^ 0x2FC;
  LODWORD(v958) = v964 ^ 0x8506C000;
  v979 = v958 >> 13;
  HIDWORD(v958) = v964 ^ 0x6C2FC;
  LODWORD(v958) = v964 ^ 0x85000000;
  LODWORD(STACK[0x56C]) = v965;
  v980 = v979 ^ (__PAIR64__(v964, v965) >> 2) ^ (v958 >> 22);
  v981 = LODWORD(STACK[0x600]) ^ v960 ^ (LODWORD(STACK[0x5F8]) + 1745633487);
  v982 = LODWORD(STACK[0x5C0])
       - 5867563
       - 2 * LODWORD(STACK[0x5C0])
       + ((((LODWORD(STACK[0x5F0]) + 357146377) ^ v980) - LODWORD(STACK[0x5F0]) - 357146377) ^ ((v980 ^ LODWORD(STACK[0x5EC]))
                                                                                              - LODWORD(STACK[0x5EC])) ^ ((v980 ^ 0x2C61E6F6 ^ (v981 + 744613622 - ((2 * v981) & 0x58C3CDEC))) - v981));
  v983 = (v982 ^ 0x3EDE7EFD) + v968 + ((2 * v982) & 0x7DBCFDFA) + LODWORD(STACK[0x5D0]);
  LODWORD(STACK[0x5EC]) = v983;
  v984 = 7 * (((v915 >> 20) & 0xF0 | HIBYTE(v902) & 0xF) ^ 0x1D);
  v985 = LODWORD(STACK[0x5A8]) + 570209203;
  v986 = STACK[0x6DC];
  v987 = LODWORD(STACK[0x6DC]) ^ 0xFFAE0FD0;
  LODWORD(STACK[0x600]) = v987;
  v988 = (v985 + v987) ^ v986;
  LODWORD(STACK[0x604]) = v988;
  v989 = v983
       + LODWORD(STACK[0x5A0])
       + (v988 ^ 0xFFAE0FD0)
       - ((2 * (v983 + LODWORD(STACK[0x5A0]) + (v988 ^ 0xFFAE0FD0)) + 1414544734) & 0xE18453E8);
  LODWORD(STACK[0x5D8]) = v977;
  v990 = 7 * (HIBYTE(v977) & 0xF ^ 9) + 3640;
  v991 = 7 * ((v977 >> 20) & 0xF ^ 4) + 3640;
  v992 = 7 * (HIWORD(v977) & 0xF ^ 9) + 3640;
  v993 = ((*(unsigned __int8 *)(v897
                              + (unsigned __int16)(v990
                                                 - 960 * ((unsigned __int16)((2185 * v990) >> 16) >> 5))) ^ 0xE3) << 8) ^ ((*(unsigned __int8 *)(v897 + v978) ^ 0xE3) << 12) | *(unsigned __int8 *)(v897 + (unsigned __int16)(v992 - 960 * ((unsigned __int16)((2185 * v992) >> 16) >> 5))) ^ 0xE3;
  v994 = 7 * (((unsigned __int16)v977 >> 12) ^ 0xC) + 3640;
  v995 = 7 * ((v977 >> 8) & 0xF ^ 0xC) + 3640;
  v996 = 7 * ((v977 >> 4) ^ 0xC) + 3640;
  v997 = 7 * (v975 & 0xF ^ 8) + 3640 - 960 * ((unsigned __int16)((2185 * (7 * (v975 & 0xF ^ 8u) + 3640)) >> 16) >> 5);
  v998 = (v993 << 8) ^ (16
                      * (*(unsigned __int8 *)(v897
                                            + (unsigned __int16)(v994
                                                               - 960
                                                               * ((unsigned __int16)((2185 * v994) >> 16) >> 5))) ^ 0xE3)) ^ (*(unsigned __int8 *)(v897 + (unsigned __int16)(v995 - 960 * ((unsigned __int16)((2185 * v995) >> 16) >> 5))) ^ 0xE3 | ((*(unsigned __int8 *)(v897 + (unsigned __int16)(v991 - 960 * ((unsigned __int16)((2185 * v991) >> 16) >> 5))) ^ 0xE3) << 12));
  v999 = (v998 << 8) - 1706903827 - ((v998 << 9) & 0x34856C00);
  v1000 = v989 - 1695922013;
  v1001 = *(unsigned __int8 *)(v897 + v997) ^ 0xE3;
  v1002 = (v999 ^ 0x9A42B6ED | v1001) ^ (16
                                       * (*(unsigned __int8 *)(v897
                                                             + (unsigned __int16)(v996
                                                                                - 960
                                                                                * ((unsigned __int16)((2185 * v996) >> 16) >> 5))) ^ 0xE3));
  v1003 = 7 * (~(v1000 >> 4) & 0xF) + 3640;
  v1004 = v1001 & 0xF;
  LODWORD(STACK[0x5F8]) = v1004;
  LOBYTE(v1001) = *(_BYTE *)(v897
                           + (unsigned __int16)(7 * (v1000 & 0xF ^ 4)
                                              + 3640
                                              - 960
                                              * ((unsigned __int16)((2185 * (7 * (v1000 & 0xF ^ 4) + 3640)) >> 16) >> 5))) ^ 0xE3;
  v1005 = 7 * (v1004 & 0xFFFFFF0F | (16 * (v1001 & 0xF)));
  v1006 = v1001 ^ (16
                 * (*(_BYTE *)(v897
                             + (unsigned __int16)(v1003
                                                - 960 * ((unsigned __int16)((2185 * v1003) >> 16) >> 5))) ^ 0xE3));
  v1007 = *(unsigned __int8 *)(v897 + (unsigned __int16)(v1005 + 3983) % 0x3C0u) ^ LODWORD(STACK[0x59C]);
  if (v984 >= 0x3C0)
    v1008 = v984 - 960;
  else
    v1008 = v984;
  LODWORD(STACK[0x5A0]) = v1008;
  if (v1005 >= 0x3C0)
    v1005 -= 960;
  LODWORD(STACK[0x5D0]) = 7 * v1007;
  v1009 = (*(_BYTE *)(v897
                    + (unsigned __int16)(7 * v1007
                                       - 960 * ((unsigned __int16)((244671 * v1007) >> 16) >> 9))) >> 4) ^ 0xE;
  v1010 = 7 * ((v1009 - 2 * (v1009 & 3) - 29) ^ *(unsigned __int8 *)(v897 + v1005)) + 3983;
  LODWORD(STACK[0x5F0]) = v1002;
  v1011 = *(unsigned __int8 *)(v897
                             + (unsigned __int16)(7 * (v1006 & 0xF0 | (v1002 >> 4)) + 3983) % 0x3C0u) ^ (16 * (*(unsigned __int8 *)(v897 + (unsigned __int16)(v1010 - 960 * ((unsigned __int16)((8739 * v1010) >> 16) >> 7))) ^ 0xE3)) ^ 0xE3;
  LODWORD(STACK[0x5B0]) = 7 * v1011;
  LODWORD(STACK[0x5C0]) = 244671 * v1011;
  LODWORD(STACK[0x5A8]) = (((HIBYTE(v999) & 4) - (HIBYTE(v999) | 0xFFFFFFF4) + 1127423743) ^ 0x61231741) + 869836816;
  v1012 = STACK[0x680];
  v1013 = (LODWORD(STACK[0x680]) ^ 0x75826965 ^ (LODWORD(STACK[0x648])
                                               + 131468455
                                               - ((2 * LODWORD(STACK[0x648])) & 0xFAC194E)))
        - LODWORD(STACK[0x64C]);
  LODWORD(STACK[0x694]) += 53509308 + LODWORD(STACK[0x668]);
  v1014 = LODWORD(STACK[0x688]) ^ LODWORD(STACK[0x6BC]) ^ 0x2784CE7E ^ LODWORD(STACK[0x658]);
  v1015 = (v1013 ^ ((LODWORD(STACK[0x650]) ^ 0xB516A735) + (v1012 ^ 0x4D3F546D ^ LODWORD(STACK[0x650])) + 1) ^ (((v1014 + 131468455 - ((2 * v1014) & 0xFAC194E)) ^ v1012) - v1014))
        - LODWORD(STACK[0x654]);
  LODWORD(STACK[0x6BC]) = (v1015 ^ 0x76FB0DE6) - 11536548 + ((2 * v1015) & 0xEDF61BCC);
  LODWORD(STACK[0x680]) = LODWORD(STACK[0x640])
                        + LODWORD(STACK[0x638])
                        - LODWORD(STACK[0x6E8])
                        + 830859595
                        - ((2 * (LODWORD(STACK[0x640]) + LODWORD(STACK[0x638]) - LODWORD(STACK[0x6E8]) - 994146306)) & 0xD98EC29A);
  v1016 = *(unsigned __int8 *)(v897
                             + (unsigned __int16)(LODWORD(STACK[0x628])
                                                - 960 * ((LODWORD(STACK[0x624]) + 139217799) >> 25)
                                                + 3983)) ^ (16
                                                          * (*(unsigned __int8 *)(v897
                                                                                + (unsigned __int16)(LOWORD(STACK[0x61C]) + 3983)
                                                                                % 0x3C0u) ^ 0xE3));
  v1017 = *(unsigned __int8 *)(v897 + (unsigned __int16)(LOWORD(STACK[0x5FC]) + 3983) % 0x3C0u) ^ 0xE3;
  LODWORD(STACK[0x6E8]) = v961;
  v1018 = STACK[0x6DC];
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x6DC]) ^ LODWORD(STACK[0x660]);
  v1019 = 7 * (STACK[0x630] & 0xFFFFFF0F | (16 * ((v1016 ^ (v1017 << (v961 & 8 ^ 8) << (v961 & 8)) ^ 0xE3) & 0xF)))
        + 1813;
  LOBYTE(v1019) = *(_BYTE *)(v897 + (unsigned __int16)(v1019 - 960 * ((unsigned __int16)((2185 * v1019) >> 16) >> 5)));
  v1020 = 7 * (v1019 & 0xF ^ 3) + 3822 - 960 * ((2185 * (7 * (v1019 & 0xF ^ 3) + 3822)) >> 21);
  v1021 = (LODWORD(STACK[0x67C]) ^ LODWORD(STACK[0x5BC]));
  v1022 = (v1018 ^ 0x51F02F)
        - (((_WORD)v1020 - 20014 - ((2 * (_WORD)v1020) & 0x3A4)) & 0x2F1 ^ 0x74C5FA21 | ((_WORD)v1020
                                                                                       - 20014
                                                                                       - ((2 * (_WORD)v1020) & 0x3A4)) & 0x2F1 ^ 0xD0)
        + (LODWORD(STACK[0x680]) ^ 0x6CC7614D);
  return ((uint64_t (*)(uint64_t, uint64_t, _QWORD, _QWORD, _QWORD, _QWORD))(*(_QWORD *)(STACK[0x6D0]
                                                                                               + 8
                                                                                               * ((2009
                                                                                                 * (((LODWORD(STACK[0x698]) - 1169648462 - ((2 * LODWORD(STACK[0x698]) + 2) & 0x74912964) + 1) ^ 0xBA489480) > 0x3F)) ^ LODWORD(STACK[0x6C8])))
                                                                                   - 8))(v1021, 1979589235, (v1022 - ((2 * v1022) & 0xD76491FE) - 340637441) ^ LODWORD(STACK[0x604]), v1021 ^ 0x75FE2273, (v1022 ^ (LODWORD(STACK[0x600])+ (LODWORD(STACK[0x688]) ^ 0x7F40C57C)+ (LODWORD(STACK[0x604]) ^ 0x51F02Fu)+ 2119193290))- 886228335, ((LODWORD(STACK[0x610]) ^ 0x6D28C0D0)+ 737082330+ (LODWORD(STACK[0x5BC]) ^ 0xD1CB5A56)+ 1598753077- ((2 * ((LODWORD(STACK[0x610]) ^ 0x6D28C0D0) + 737082330 + (LODWORD(STACK[0x5BC]) ^ 0xD1CB5A56) + 1598753077)) & 0x87F288AC)- 1007074218) ^ LODWORD(STACK[0x670]));
}

void sub_2477EB1CC(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;

  LODWORD(STACK[0x610]) = v8;
  LODWORD(STACK[0x6DC]) = a3 ^ 0x60517CDC;
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x6E8]) ^ 0xE5CE038F;
  LODWORD(STACK[0x670]) = STACK[0x6F8];
  LODWORD(STACK[0x604]) = STACK[0x700];
  LODWORD(STACK[0x700]) = STACK[0x6F0];
  LODWORD(STACK[0x6F0]) = a8;
  LODWORD(STACK[0x6F8]) = STACK[0x644];
  JUMPOUT(0x2477E7FB0);
}

uint64_t sub_2477EB270@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W5>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unint64_t v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  int v52;
  int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  int v117;
  unsigned int v118;
  uint64_t v119;
  uint64_t v120;
  unint64_t v121;
  int v123;
  int v124;
  int v125;
  int v126;

  v17 = v16;
  LODWORD(STACK[0x6E8]) = LODWORD(STACK[0x564]) + LODWORD(STACK[0x53C]);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x694]) + LODWORD(STACK[0x534]);
  v18 = v8 - ((2 * a4 + 1772456670) & 0x4E100C20);
  v19 = v7 - 242594161;
  v20 = (v7 - ((2 * (v7 - 242594161)) & 0x69D93D00) - 1502155505) ^ v10 ^ v11;
  v21 = a7 + 641531033 + v19;
  v22 = ((v20 - 2063154436 - ((2 * v20) & 0xA0D85F8)) ^ a6) - v20;
  v23 = v18 + 654837264;
  LODWORD(STACK[0x6E0]) = ((((v18 + 654837264) ^ 0xD8F7F9EF) + (v13 ^ 0xEF8A908E ^ (v18 + 654837264)) + 1) ^ (((v15 - 751805499) ^ 0xC882969E ^ v13) - v15 + 751805499) ^ v22)
                        - v12;
  v24 = a7 - 1225388313 + (~(2 * a7 - 1265611810) | 0x46A42E11);
  v25 = (v24 ^ 0x5CADE8F7) + (a5 ^ 0x63C7A4AE) - v21;
  v26 = ((2 * ((v24 ^ 0x5CADE8F7) + v21)) & 0xFD6FE7F0) + (((v24 ^ 0x5CADE8F7) + v21) ^ 0xFEB7F3F8);
  v27 = v15 + v12 - 1546697819;
  v28 = v12 - ((2 * v12 + 156508780) & 0x420B73D0) - 1515205858;
  v29 = (a2 ^ 0x26F598F8) - v27 + (v28 ^ 0xA105B9E8);
  v30 = ((2 * ((v28 ^ 0xA105B9E8) + v27)) & 0xA53FFFF4) + (((v28 ^ 0xA105B9E8) + v27) ^ 0x529FFFFA);
  v31 = v26 + 21498888 + (v10 ^ 0x6748B063);
  LODWORD(STACK[0x698]) = (v24 ^ 0x79965FAE) + LODWORD(STACK[0x568]);
  HIDWORD(v32) = v24 ^ 0x65FAE;
  LODWORD(v32) = v24 ^ 0x79900000;
  v33 = (v26 + 21498888) ^ LODWORD(STACK[0x644]) ^ (v31 - 1259561344 - ((2 * v31) & 0x69D93D00));
  v34 = v30 + (v23 ^ 0x4040B673);
  v35 = v34 - 1386217466;
  v36 = STACK[0x6F0];
  v37 = (1386217466 - v30 + (LODWORD(STACK[0x56C]) ^ (v30 - 1386217466))) ^ (((v33 - 2063154436 - ((2 * v33) & 0xA0D85F8)) ^ LODWORD(STACK[0x6F0]))
                                                                           - v33) ^ (1386217466
                                                                                   - v34
                                                                                   + (LODWORD(STACK[0x56C]) ^ (v34 - 1386217466)));
  v38 = ((2 * v24) & 0x36BDDFDC ^ 0x1688D1C0) + (v24 ^ 0x34BB871E);
  v39 = v29 ^ v28 ^ 0x843E0EB1;
  LODWORD(STACK[0x6DC]) = v37 - (v28 ^ 0x843E0EB1);
  v40 = ((2 * v28) & 0xCBBFEAF4 ^ 0x809A62D4) + (v28 ^ 0xB792CC95);
  v41 = v39 + v40 + v35;
  LODWORD(v32) = __ROR4__((v32 >> 20) ^ __ROR4__(v25, 20) ^ 0x1C044D73, 12);
  v42 = v31 + v38 + (v32 ^ 0xD731C044);
  v43 = (v32 ^ 0xD731C044) - v38;
  v44 = v39 - v40;
  v45 = (v44 + 1709176186) ^ (v30 - 190216479);
  v46 = (v36 & 0xB0595C6B ^ 0x80004068 | v36 & 0xB0595C6B ^ 0x30591C03)
      - 1806191586
      + ((v43 + 459206638) ^ (v26 + 1217499875));
  v47 = (((v46 - 1152454793) ^ (v42 - 459206638))
       - 2063154436
       - ((2 * ((v46 - 1152454793) ^ (v42 - 459206638))) & 0xA0D85F8)) ^ LODWORD(STACK[0x700]);
  v48 = ((2 * (v46 - v42 - 693248155)) & 0x1CEAEEDE) + ((v46 - v42 - 693248155) ^ 0xE75776F);
  v49 = (LODWORD(STACK[0x570]) ^ v45) + v45 - 2 * v45;
  v50 = ((2 * (v45 - v41 + 1709176186)) & 0xFD75FF7E) + ((v45 - v41 + 1709176186) ^ 0xFEBAFFBF);
  v51 = v49 ^ (((v47 - 1259561344 - ((2 * v47) & 0x69D93D00)) ^ LODWORD(STACK[0x6F8])) - v47) ^ (1709176186
                                                                                               - v41
                                                                                               + (LODWORD(STACK[0x570]) ^ (v41 - 1709176186)));
  v52 = v38 - 262431938;
  v42 -= 689358552;
  v53 = (v43 - v48 + 701785949) ^ v42;
  v54 = ((v48 - 242579311 + v52 - v53) ^ 0xF3EFD4EF) + 202386193 + ((2 * (v48 - 242579311 + v52 - v53)) & 0xE7DFA9DE);
  v55 = (v48 - 242579311) ^ v42;
  v56 = v54 + v42 - 1490575596 - ((2 * (v54 + v42)) & 0x4E4F3E28);
  LODWORD(STACK[0x6F8]) = v51 - (v40 - 1512401486);
  v57 = v41 - ((2 * v41 + 416311096) & 0x44F0BE66) - 1361014065;
  v58 = v50 + 21299265;
  v59 = v50 + 21299265 + v40 - 1512401486;
  v60 = (v44 - v50 - 2028776340 - ((2 * (v44 - v50 + 1687876921)) & 0x44F0BE66)) ^ v57;
  v61 = ((2 * (v59 - v60)) & 0xFD43B33A) + ((v59 - v60) ^ 0x7EA1D99D);
  v57 ^= 0x22785F33u;
  v62 = (v57 ^ v58) - ((2 * (v57 ^ v58)) & 0xB8B9A0B6) - 597897125;
  v63 = v56 ^ ((v55 ^ LODWORD(STACK[0x588])) - 1490575596 - ((2 * (v55 ^ LODWORD(STACK[0x588]))) & 0x4E4F3E28));
  v64 = v61 - 2124536221 + v57 + 1934993666 - ((2 * (v61 - 2124536221 + v57)) & 0xE6AB5204);
  v65 = ((v62 ^ 0x23A32FA4) + (LODWORD(STACK[0x6C0]) ^ 0x68B04EDB ^ v62) + 1) ^ (((v63
                                                                                 - 1259561344
                                                                                 - ((2 * v63) & 0x69D93D00)) ^ LODWORD(STACK[0x6C0]))
                                                                               - v63) ^ ((v64 ^ 0x8CAA56FD)
                                                                                       + (LODWORD(STACK[0x6C0]) ^ 0xC7B93782 ^ v64)
                                                                                       + 1);
  v66 = ((2 * v55) & 0xE6F3FFEC ^ 0x2422F304) + (v55 ^ 0x61EE8675);
  v67 = v54 ^ 0xA7279F14 ^ v56;
  v68 = v66 + 169404620 + (v56 ^ 0xA7279F14);
  v69 = ((2 * v62) & 0xF7F7F7E6 ^ 0x959753A0) + (v62 ^ 0xB530522B);
  v70 = (v61 - 2124536221) ^ 0x7355A902 ^ v64;
  v71 = v69 - 2080111603 + (v64 ^ 0x7355A902);
  v72 = v71 - ((2 * v71 + 455463300) & 0x1D0676F8) + 202777662;
  v73 = (v66 - ((2 * v66 - 968322916) & 0x91A0C8E6) - 1410028351) ^ a3 ^ v68;
  v74 = v70 + v69;
  v75 = ((v73 + 131468455 - ((2 * v73) & 0xFAC194E)) ^ v14) - v73;
  v76 = v53 - 1817899640;
  v77 = v66 - 1937375222 + v67;
  v78 = v77 + (a1 ^ 0xBD2E4600);
  v79 = v77 ^ v76;
  v80 = ((v17 ^ 0x6CC7614D ^ (v69 - 626897839)) - v69 + 626897839) ^ v75 ^ ((v72 ^ 0x717CC483)
                                                                          + (v17 ^ v72 ^ 0xE2445A31)
                                                                          + 1);
  v81 = v67 - ((2 * v67 + 314797944) & 0x2095F596) + 967619207;
  v82 = (v81 ^ 0x904AFACB) + v79;
  v83 = v66 - ((2 * v66 + 261433756) & 0x2095F596);
  v84 = v70 - ((2 * v70 + 1388539768) & 0xD4C6301A) - 1815818295;
  v85 = (v84 ^ 0xEA63180D) + ((v70 + v69 - 2080111603) ^ (v60 - 1817899640));
  v86 = (v81 ^ (v83 - 1743417447)) - ((-2106779843 - v71) & 0xBB4EEF77) + (v72 & 0xBB4EEF77 ^ 0x75FDD48B) + 1;
  v87 = ((2 * v86) & 0xFFEFDCCE) + (v86 ^ 0xFFF7EE67);
  v88 = (v87 - 1151926000) ^ v82;
  v89 = (v87 - 1151926000) ^ (((2 * ((v68 ^ 0xE0F2C694) - 1856670317)) & 0x4169ED96)
                            + (((v68 ^ 0xE0F2C694) - 1856670317) ^ 0xA0B4F6CB));
  v90 = (v89 - 925866893 - ((2 * v89) & 0x91A0C8E6)) ^ LODWORD(STACK[0x6A8]);
  v91 = v68 ^ 0x70B83C5F ^ v81;
  v92 = v84 ^ (v69 - 12019503);
  v93 = v84 ^ 0x8412E5E5 ^ v72;
  v72 ^= 0x6E71FDE8u;
  v94 = ((2 * (v72 + 839543902)) & 0xFCEFE1FE) + ((v72 + 839543902) ^ 0x7E77F0FF);
  v95 = v92 ^ 0xA70657CC ^ (v85 - ((2 * v85) & 0x9ACA9F82) + 1298485185);
  v96 = (2121789695 - v94 + (LODWORD(STACK[0x574]) ^ (v94 - 2121789695))) ^ ((v92 ^ 0x159CE7F2)
                                                                           + (LODWORD(STACK[0x6A0]) ^ 0xEDB514AA ^ v92)
                                                                           + 1) ^ (((v90
                                                                                   + 131468455
                                                                                   - ((2 * v90) & 0xFAC194E)) ^ LODWORD(STACK[0x6A0]))
                                                                                 - v90);
  v92 ^= 0xEA63180D;
  v97 = v96 - v93;
  v98 = v93 + v92;
  v99 = ((2 * (v92 - 1432952250)) & 0x9ABFEF7E) + ((v92 - 1432952250) ^ 0xCD5FF7BF);
  v100 = v91 + LODWORD(STACK[0x57C]);
  v101 = v91 - 524440805 + v87;
  v102 = (v87 + 1710089046) ^ LODWORD(STACK[0x6E4]) ^ (v101 + (v68 ^ 0xE0F2C694) - 736378615);
  v103 = v95 - (v94 + v99);
  v98 += 627485195;
  v104 = v98 + v72;
  v105 = (-849348673 - v99 + (LODWORD(STACK[0x578]) ^ (v99 + 849348673))) ^ ((LODWORD(STACK[0x578]) ^ (v98 + v72 - 736378615))
                                                                           - (v98
                                                                            + v72)
                                                                           + 736378615) ^ ((((v102 ^ 0xC8D06473)
                                                                                           + 131468455
                                                                                           - 2
                                                                                           * ((v102 ^ 0xC8D06473) & 0x7D60CAF ^ v102 & 8)) ^ LODWORD(STACK[0x6B0]))
                                                                                         - (v102 ^ 0xC8D06473));
  v106 = (v68 ^ 0x1F0D396B) - v87 + 1745334349 + v88 + v101 + LODWORD(STACK[0x580]);
  v103 += 1272441022;
  v107 = v103 + v98;
  v108 = v105 - v107;
  v109 = v107 ^ (v104 + 1515750521);
  LODWORD(STACK[0x700]) = v103
                        - v109
                        + v104
                        + 1515750521
                        - 1228833314
                        - ((2 * (v103 - v109 + v104 + 1515750521)) & 0x6D82FBBC);
  LODWORD(STACK[0x54C]) = LODWORD(STACK[0x54C]) + 2124536221 - v61 + v65;
  v110 = LODWORD(STACK[0x518]) + 641531033 + a7 + (v9 ^ 0x6CC761AE);
  v111 = v110 - 660440818 - ((2 * v110) & 0xB144F21C);
  v112 = LODWORD(STACK[0x538])
       - v74
       + 779063065
       + v80
       - ((2 * (LODWORD(STACK[0x538]) - v74 + 779063065 + v80) - 2011052708) & 0xB60A9474);
  LODWORD(STACK[0x53C]) = LODWORD(STACK[0x6E8]) + v52;
  v113 = LODWORD(STACK[0x6E0]) + 794892320;
  v114 = ((v78 + 35281981 - ((2 * v78) & 0x434B87A)) ^ LODWORD(STACK[0x540])) + 2 * (v78 & STACK[0x514]);
  LODWORD(STACK[0x540]) = v114 + 35281981 - ((2 * v114) & 0x434B87A);
  v115 = v112 - 1625936664;
  LODWORD(STACK[0x544]) = LODWORD(STACK[0x544]) - 1984628034 + LODWORD(STACK[0x6BC]);
  v116 = v108 + LODWORD(STACK[0x504]) + 1671777428 - ((2 * (v108 + LODWORD(STACK[0x504]))) & 0xC74A9928);
  v117 = LODWORD(STACK[0x6DC])
       + LODWORD(STACK[0x510])
       - 1568821352
       - ((2 * (LODWORD(STACK[0x6DC]) + LODWORD(STACK[0x510]))) & 0x44FB5F30);
  v118 = LODWORD(STACK[0x588])
       + LODWORD(STACK[0x50C])
       + v54
       + 2080922926
       - ((2 * (LODWORD(STACK[0x588]) + LODWORD(STACK[0x50C]) + v54)) & 0xF810BA5C);
  v119 = LODWORD(STACK[0x508])
       + (v97 ^ 0x7BEF9DF7)
       + ((2 * v97) & 0xF7DF3BEE)
       - 987924383
       - ((2 * (LODWORD(STACK[0x508]) + (v97 ^ 0x7BEF9DF7) + ((2 * v97) & 0xF7DF3BEE) - 2079301111)) & 0x821A2CB0);
  v120 = v109 ^ 0xFB3AA558;
  if (LODWORD(STACK[0x3D0]) == 52)
  {
    LODWORD(STACK[0x32C]) = LODWORD(STACK[0x530])
                          - 779736606
                          + v113
                          - 257048498
                          - (STACK[0x320] & (2 * (LODWORD(STACK[0x530]) - 779736606 + v113)));
    LODWORD(STACK[0x338]) = LODWORD(STACK[0x698])
                          + LODWORD(STACK[0x3CC])
                          + 842433194
                          - ((2 * (LODWORD(STACK[0x698]) + LODWORD(STACK[0x3CC]))) & 0x646D0554);
    LODWORD(STACK[0x374]) = v106
                          + LODWORD(STACK[0x3C4])
                          - 52172111
                          - ((2 * (v106 + LODWORD(STACK[0x3C4]))) & 0xF9C7D562);
    v123 = LODWORD(STACK[0x3AC])
         + 628229604
         + v100
         - 1647504034
         - ((2 * (LODWORD(STACK[0x3AC]) + 628229604 + v100)) & 0x3B9A2ABC);
    LODWORD(STACK[0x344]) = LODWORD(STACK[0x6F8])
                          + LODWORD(STACK[0x3C8])
                          + 637631426
                          - ((2 * (LODWORD(STACK[0x6F8]) + LODWORD(STACK[0x3C8]))) & 0x4C02F784);
    LODWORD(STACK[0x35C]) = LODWORD(STACK[0x54C]) + 1341658660 + (~(2 * LODWORD(STACK[0x54C]) - 336909974) | 0x4BFAFD23);
    LODWORD(STACK[0x368]) = v123;
    v124 = LODWORD(STACK[0x6C8]) - 20234143 + (v123 & 0x3B482A80 ^ 0x22002A80 | v123 & 0x3B482A80 ^ 0x19480000);
    v125 = LODWORD(STACK[0x3C0]) + 1192;
    LODWORD(STACK[0x388]) = v124 - ((2 * v124) & 0x4BDD45FA) + 636396285;
    LODWORD(STACK[0x330]) = v117;
    LODWORD(STACK[0x358]) = v118;
    LODWORD(STACK[0x378]) = v116;
    LODWORD(STACK[0x34C]) = STACK[0x540];
    LODWORD(STACK[0x324]) = v111;
    LODWORD(STACK[0x360]) = v119;
    LODWORD(STACK[0x350]) = v115;
    LODWORD(STACK[0x37C]) = STACK[0x544];
    LODWORD(STACK[0x544]) = STACK[0x398];
    LODWORD(STACK[0x33C]) = STACK[0x53C];
    v121 = STACK[0x6D0];
  }
  else
  {
    v121 = STACK[0x6D0];
    if (LODWORD(STACK[0x3D0]) != 86)
      return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v121
                                                                   + 8
                                                                   * ((29
                                                                     * ((LODWORD(STACK[0x3B8])
                                                                                     + LODWORD(STACK[0x3DC])) > 0x80)) ^ (LODWORD(STACK[0x3C0]) - 2159)))
                                                       - 4))(v120, v119);
    v125 = (LODWORD(STACK[0x3C0]) - 966388568) & 0x3999EFFF;
    LODWORD(STACK[0x340]) = LODWORD(STACK[0x530])
                          - 779736606
                          + v113
                          - 257048498
                          - ((v125 ^ 0xE15B8F00) & (2 * (LODWORD(STACK[0x530]) - 779736606 + v113)));
    LODWORD(STACK[0x334]) = LODWORD(STACK[0x698])
                          + LODWORD(STACK[0x3CC])
                          + 842433194
                          - ((2 * (LODWORD(STACK[0x698]) + LODWORD(STACK[0x3CC]))) & 0x646D0554);
    LODWORD(STACK[0x384]) = v106
                          + LODWORD(STACK[0x3C4])
                          - 52172111
                          - ((2 * (v106 + LODWORD(STACK[0x3C4]))) & 0xF9C7D562);
    LODWORD(STACK[0x370]) = LODWORD(STACK[0x3AC])
                          + 628229604
                          + v100
                          - 1647504034
                          - ((2 * (LODWORD(STACK[0x3AC]) + 628229604 + v100)) & 0x3B9A2ABC);
    LODWORD(STACK[0x348]) = LODWORD(STACK[0x6F8])
                          + LODWORD(STACK[0x3C8])
                          + 637631426
                          - ((2 * (LODWORD(STACK[0x6F8]) + LODWORD(STACK[0x3C8]))) & 0x4C02F784);
    v126 = LODWORD(STACK[0x54C]) - ((2 * LODWORD(STACK[0x54C]) + 736831850) & 0x2A7D1ACA);
    LODWORD(STACK[0x380]) = LODWORD(STACK[0x6C8]) - ((2 * LODWORD(STACK[0x6C8]) + 1948702146) & 0x6ADABA2E) - 276772872;
    LODWORD(STACK[0x394]) = v126 + 187965978;
    LODWORD(STACK[0x328]) = v111;
    LODWORD(STACK[0x36C]) = STACK[0x540];
    LODWORD(STACK[0x364]) = v119;
    LODWORD(STACK[0x354]) = v115;
  }
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v121 + 8 * (v125 ^ (50 * ((STACK[0x3B0] & 1) == 0))))
                                          - ((v125 - 3700) ^ ((v125 - 3929) | 0xA92u) ^ 0xBF7)))(v120);
}

void sub_2477EC87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;

  LODWORD(STACK[0x3D0]) = 86;
  LODWORD(STACK[0x3B0]) = 1;
  LODWORD(STACK[0x3A4]) = a6;
  LODWORD(STACK[0x3A0]) = v7;
  LODWORD(STACK[0x39C]) = v6;
  LODWORD(STACK[0x398]) = STACK[0x544];
  JUMPOUT(0x2477DB15CLL);
}

uint64_t sub_2477EC994(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  int v39;
  uint64_t v40;
  int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  int v73;
  uint64_t v74;
  int v75;
  int v76;
  int v77;
  _BOOL4 v78;

  STACK[0x838] = 0xA095E15CB3FB94FELL;
  v42 = LODWORD(STACK[0x32C]) ^ 0xDDB4C9F5;
  v43 = STACK[0x32C] & 0x883DD861;
  v44 = LODWORD(STACK[0x324]) ^ 0x839B5B7E;
  v45 = (((v38 - 467) | 0x78) + 769630010) ^ LODWORD(STACK[0x328]);
  v46 = LODWORD(STACK[0x340]) ^ 0x51E849F8;
  STACK[0x830] = 0xED1701ED17397B41;
  STACK[0x828] = 0xC76AB0337C826D5BLL;
  v47 = LODWORD(STACK[0x334]) ^ 0x93730B1C;
  v48 = LODWORD(STACK[0x338]) ^ 0x1F2F8B11;
  v49 = STACK[0x344];
  v50 = STACK[0x344] & 0x883DD861 ^ 0x80258800;
  v51 = -2009212831 * v44 - 75026750;
  v52 = -2009212831 * (LODWORD(STACK[0x330]) ^ 0xF9448DE8) - 75026750;
  LODWORD(STACK[0x738]) = v51;
  LODWORD(STACK[0x73C]) = v52;
  LODWORD(STACK[0x778]) = -2009212831 * v45 - 75026750;
  LODWORD(STACK[0x77C]) = -2009212831 * (a6 ^ 0x57007E23) - 75026750;
  LODWORD(STACK[0x718]) = ((v38 - 1805082337) & 0x6B975EFF) - 2009212831 * v42 - 75029555;
  LODWORD(STACK[0x71C]) = -2009212831 * v48 - 75026750;
  v53 = (v50 | (v49 ^ 0xB187279) & 0x883DD861) * ((v49 ^ 0xB187279) + 1663319554);
  v54 = LODWORD(STACK[0x348]) ^ 0x8744F274;
  v55 = v53 - ((2 * v53) & 0xF0A48FC2) + 2018658273;
  v56 = (v55 & 0x5B392270 ^ 0x58100260 | v55 & 0x5B392270 ^ 0x3292010) ^ (LODWORD(STACK[0x33C]) - 1868475589);
  LODWORD(STACK[0x758]) = (v46 + 1663319554) * ((v43 ^ 0x8101821) + (v43 ^ 0x802DC040));
  LODWORD(STACK[0x75C]) = -2009212831 * v47 - 75026750;
  v57 = LODWORD(STACK[0x358]) ^ 0x27317F5E;
  v58 = LODWORD(STACK[0x34C]) ^ 0x59237E4D;
  v59 = LODWORD(STACK[0x354]) ^ 0x7A40C38C;
  v60 = -2009212831 * (LODWORD(STACK[0x35C]) ^ 0xF71B88D5) - 75026750;
  LODWORD(STACK[0x720]) = v55 ^ 0x785247E1;
  LODWORD(STACK[0x724]) = v60;
  LODWORD(STACK[0x740]) = -2009212831 * v56 - 75026750;
  LODWORD(STACK[0x744]) = -2009212831 * v57 - 75026750;
  v61 = LODWORD(STACK[0x350]) ^ 0xF61C4381;
  v62 = LODWORD(STACK[0x364]) ^ 0xB470C7E3;
  LODWORD(STACK[0x784]) = -2009212831 * (v39 ^ 0x89758C95) - 75026750;
  LODWORD(STACK[0x780]) = -2009212831 * ((a8 - 1868475589) ^ 0xF57DD1BB) - 75026750;
  v63 = LODWORD(STACK[0x368]) ^ 0xB0D41CE5;
  v64 = STACK[0x394];
  LODWORD(STACK[0x764]) = -2009212831 * (LODWORD(STACK[0x394]) ^ 0x347B04D3) - 75026750;
  LODWORD(STACK[0x760]) = -2009212831 * v54 - 75026750;
  v65 = LODWORD(STACK[0x360]) ^ 0x1A343428;
  v66 = LODWORD(STACK[0x374]) ^ 0xD1FAE30A;
  LODWORD(STACK[0x72C]) = -2009212831 * v63 - 75026750;
  LODWORD(STACK[0x728]) = -2009212831 * v61 - 75026750;
  v67 = LODWORD(STACK[0x36C]) ^ 0xF7678D86;
  v68 = -2009212831 * (LODWORD(STACK[0x370]) ^ 0x3C889CE8) - 75026750;
  LODWORD(STACK[0x768]) = -2009212831 * v59 - 75026750;
  LODWORD(STACK[0x76C]) = v68;
  STACK[0x820] = 0xA41D84DC6A0C0394;
  STACK[0x818] = 0x75EBBB32EB3EBEDDLL;
  LODWORD(STACK[0x748]) = -2009212831 * v58 - 75026750;
  LODWORD(STACK[0x74C]) = -2009212831 * v65 - 75026750;
  v69 = LODWORD(STACK[0x378]) ^ 0x389C6EE4;
  v70 = LODWORD(STACK[0x384]) ^ 0x5DA66307;
  v71 = LODWORD(STACK[0x388]) ^ 0x8F7AB46;
  v72 = LODWORD(STACK[0x380]) ^ 0x1428D4A1;
  v73 = -2009212831 * v62 - 75026750;
  LODWORD(STACK[0x788]) = -2009212831 * v67 - 75026750;
  v74 = *(_QWORD *)(a38 + 32);
  LODWORD(STACK[0x78C]) = v73;
  v75 = STACK[0x544];
  v76 = -2009212831 * v66 - 75026750;
  v77 = -2009212831 * ((LODWORD(STACK[0x37C]) - 1984628034) ^ 0x5B392270) - 75026750;
  LODWORD(STACK[0x750]) = -2009212831 * v69 - 75026750;
  LODWORD(STACK[0x754]) = v77;
  LODWORD(STACK[0x770]) = -2009212831 * v70 - 75026750;
  LODWORD(STACK[0x774]) = -2009212831 * v72 - 75026750;
  LODWORD(STACK[0x7EC]) = -2015130205;
  LODWORD(STACK[0x7F0]) = -195043156;
  LODWORD(STACK[0x7DC]) = 1186736741;
  LODWORD(STACK[0x7E0]) = -1721533476;
  LODWORD(STACK[0x7A0]) = -979297607;
  LODWORD(STACK[0x7AC]) = -860825652;
  LODWORD(STACK[0x730]) = v76;
  LODWORD(STACK[0x734]) = -2009212831 * v71 - 75026750;
  STACK[0x798] = 0x9252130A5DAD3C1BLL;
  LODWORD(STACK[0x790]) = -2009212831 * (v41 ^ 0x96D89D2F) - 75026750;
  LODWORD(STACK[0x794]) = -2009212831
                        * (((2 * v75 + 325711228) & 0xC6487C04 ^ 0xC2482004) + ((v75 - 1984628034) ^ 0x9659EFB9));
  LODWORD(STACK[0x7E4]) = (v64 & 0xAB81EB98 ^ 0x20010090) + ((v64 ^ 0xCB84FB2C) & 0xAB81EB98);
  LODWORD(STACK[0x7E8]) = 137270289;
  STACK[0x7A4] = 0xDF813F2468DCC8FFLL;
  LODWORD(STACK[0x7D8]) = 1722071606;
  LODWORD(STACK[0x7B0]) = (v64 ^ 0x24530481 | v64 ^ 0xCB84FB2C) & 0x6DD30F89;
  *((_DWORD *)&STACK[0x718] + ((v76 ^ (61 - -2009212831 * v66)) & 0x64 ^ 0x43)) = -625775389;
  STACK[0x7B8] = 0xF5E92B098515022ALL;
  STACK[0x7C0] = 0x67965045607FE52ELL;
  STACK[0x804] = 0x1C67CD625361AD6ALL;
  STACK[0x7FC] = 0x5A7E41037F5795AELL;
  LODWORD(STACK[0x814]) = 879427265;
  STACK[0x80C] = 0x482B0D70887343F8;
  LODWORD(STACK[0x7D4]) = 376509910;
  LODWORD(STACK[0x7C8]) = -317382065;
  STACK[0x7CC] = 0x94BC1945619BE0DFLL;
  STACK[0x7F4] = 0x863E4107CCA6F88CLL;
  v78 = *(_QWORD *)(v74 - 0x2264EDAB74B0F4F9) != 0;
  STACK[0x710] -= 2064;
  return ((uint64_t (*)(void))(*(_QWORD *)(v40 + 8 * ((1445 * v78) ^ v38)) - 12))();
}

uint64_t sub_2477ECFF4@<X0>(uint64_t a1@<X4>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31)
{
  int v31;
  uint64_t v32;
  int v33;
  int v34;
  _BYTE *v35;
  unint64_t v36;
  char *v37;
  char *v38;
  char *v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  unint64_t v46;
  uint64_t v48;

  v33 = (a2 - 1339) | 0x196;
  v34 = *(_DWORD *)(v32 + 16) - STACK[0x318] - 853284239 + v33;
  LODWORD(a10) = 431758882;
  LODWORD(STACK[0x394]) = 1829627525;
  LODWORD(STACK[0x5D0]) = 193675;
  HIDWORD(v48) = v31 + 496;
  LODWORD(v48) = 2015232;
  LODWORD(STACK[0x5CC]) = 1267035712;
  LODWORD(STACK[0x5C8]) = 270759109;
  HIDWORD(a3) = -1095575585;
  v35 = *(_BYTE **)(a1 + 24);
  v36 = ((1554976193 * (_DWORD)v35) ^ ((1554976193 * (_DWORD)v35) >> 16))
      * (((v33 + 2890) | 0x17) + 1554971786);
  v37 = (char *)off_2518F0F80[v33 ^ 0x56C] - 12;
  v38 = (char *)off_2518F0F80[v33 ^ 0x5ED] - 12;
  v39 = (char *)off_2518F0F80[v33 ^ 0x579] - 8;
  v40 = 1554976193 * ((1554976193 * ((_DWORD)v35 + 1)) ^ ((1554976193 * ((_DWORD)v35 + 1)) >> 16));
  v41 = 1554976193 * ((1554976193 * ((_DWORD)v35 + 2)) ^ ((1554976193 * ((_DWORD)v35 + 2)) >> 16));
  v42 = v37[v41 >> 24];
  v43 = v38[v41 >> 24];
  v44 = v39[(v41 >> 24) + 1];
  LODWORD(v36) = ((v37[v36 >> 24] ^ *v35 ^ v38[v36 >> 24] ^ v39[(v36 >> 24) + 1] ^ (((-63 * (_BYTE)v35) ^ ((1554976193 * (_DWORD)v35) >> 16)) * (((v33 + 74) | 0x17) - 118)) ^ (-59 * ((((1554976193 * (_DWORD)v35) ^ ((1554976193 * (_DWORD)v35) >> 16)) * (((v33 + 2890) | 0x17) + 1554971786)) >> 24))) << (((v33 - 87) & 0xFB) - 99)) | ((v40 ^ v35[1] ^ v37[v40 >> 24] ^ v38[v40 >> 24] ^ (-59 * BYTE3(v40)) ^ v39[(v40 >> 24) + 1]) << 16) | (((-59 * BYTE3(v41)) ^ v41 ^ v35[2] ^ v42 ^ v43 ^ v44) << 8);
  v45 = v35[3];
  v46 = 1554976193 * ((1554976193 * ((_DWORD)v35 + 3)) ^ ((1554976193 * ((_DWORD)v35 + 3)) >> 16));
  LOBYTE(v46) = (-59 * BYTE3(v46)) ^ v46 ^ v45 ^ v37[v46 >> 24] ^ v38[v46 >> 24] ^ v39[(v46 >> 24) + 1];
  return (*(uint64_t (**)(uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, unint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6D0] + 8 * ((3806 * ((((v36 | v46) - 1898158376 - 2 * ((v36 & 0xEDC66DC | v46 & 0xDC) ^ v46 & 4)) ^ 0x8EDC66D8) != v34)) ^ v33)))(v42, v43, v39, v44, a1, 1040, 1401, 249325276, a3, 0xADB7B9C45B6F7388, 0x77FCFF1BBAA8E6FALL, 0xC9F2DE6EF76E3E5CLL, 0x3C53C059805234C0, v48, 0xFBDFFF9BFFFB7D9ELL, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31);
}

uint64_t sub_2477ED440(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  unsigned int v5;
  uint64_t v6;
  unint64_t v7;

  v7 = *(_QWORD *)(a5 + 24);
  STACK[0x388] = a5;
  STACK[0x710] += (v5 ^ 0xFFFFFFFFFFFFEC7CLL) + v5 - 1602;
  STACK[0x700] = v7;
  return (*(uint64_t (**)(void))(v6 + 8 * (int)((13 * (v7 == 0)) ^ v5)))();
}

uint64_t sub_2477ED498()
{
  int v0;
  int v1;
  unint64_t v2;
  uint64_t v3;
  int v4;
  uint64_t (*v5)(void);

  STACK[0x708] = v2;
  v4 = ((4 * v0) ^ 0x1290) + 670883306;
  LODWORD(STACK[0x5B8]) = v1;
  LODWORD(STACK[0x6E8]) = v4;
  v5 = (uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((3940 * ((v0 ^ (v1 == v4)) & 1)) ^ v0)) - 12);
  LODWORD(STACK[0x6F0]) = -312486518;
  return v5();
}

uint64_t sub_2477ED540(uint64_t a1, int a2)
{
  uint64_t v2;
  unsigned int v3;
  _BOOL4 v4;

  v3 = LODWORD(STACK[0x5B8]) - 266941522;
  v4 = v3 > 0x1813B575;
  if (v3 < 0x1813B574)
    v4 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (((8 * !v4) | (32 * !v4)) ^ a2)) - 8))();
}

void sub_2477ED960()
{
  JUMPOUT(0x2477ED58CLL);
}

uint64_t sub_2477ED968()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  _BOOL4 v4;

  LODWORD(STACK[0x6F0]) = v1 + 279220351;
  v4 = (v3 + 1778103030) > 0x91F89CBD;
  if (v3 + 1778103030 < (v0 - 1845979562))
    v4 = 1;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((53 * v4) ^ (v0 - 19))) - 12))();
}

void sub_2477EDDD4()
{
  JUMPOUT(0x2477ED9C8);
}

uint64_t sub_2477EDDDC(uint64_t a1)
{
  int v1;
  uint64_t v2;
  char *v3;

  v3 = (char *)&STACK[0x840] + STACK[0x708];
  STACK[0x6F8] = (unint64_t)(v3 + 976);
  v3[473] = ((v1 - 55) ^ 0xC2) + 24;
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t))(v2 + 8 * v1))(a1, 0, 393228);
}

void sub_2477EDE68()
{
  JUMPOUT(0x2477EDE1CLL);
}

uint64_t sub_2477EDE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, unsigned int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  uint64_t v12;
  unsigned int v13;
  _BYTE *v14;
  int v15;
  int v16;
  unsigned int v17;
  char v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  unsigned int v22;
  uint64_t v23;
  char v24;
  unsigned int v25;
  char v26;
  unsigned int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  unsigned int v35;
  unsigned int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  char v41;
  char v42;
  int v43;
  uint64_t v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  uint64_t v49;
  char v50;
  char v51;
  uint64_t v52;
  int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  _BYTE *v57;
  unsigned int v58;
  uint64_t v59;
  uint64_t v60;
  char v61;

  v16 = STACK[0x6F0];
  v17 = LODWORD(STACK[0x6F0]) - 27552971;
  v18 = v14[473];
  v19 = (662 * (v11 & 0xF ^ 8)
                     + 393228
                     - (((662 * (v11 & 0xF ^ 8u) + 393228) * (unint64_t)a8) >> 32) * v15);
  v14[473] = v14[v19];
  v14[v19] = v18;
  v20 = v14[170];
  v21 = (662 * (v17 % 0xF) + 393890 - (((662 * (v17 % 0xF) + 393890) * (unint64_t)a8) >> 32) * v15);
  v14[170] = v14[v21];
  v14[v21] = v20;
  LODWORD(v21) = v10 - ((2 * v10 + 274555748) & 0x3B915606) + 636968117;
  v22 = 662 * (((v10 - 1024600578) % 0xEu - 638516553 - 2 * (((v10 - 1024600578) % 0xEu) & 7)) ^ 0xD9F102B7) + 394552;
  v23 = v22 - (((v22 * (unint64_t)v13) >> 32) >> 4) * v15;
  v24 = v14[832];
  v14[832] = v14[v23];
  v14[v23] = v24;
  LODWORD(v23) = (v9 ^ 0xA747753A) % 0xD;
  v25 = ((2 * ((v9 ^ 0x58B88AC5) + (v11 ^ 0x5E10E988) + 1)) & 0xFEB63F7A)
      + (((v9 ^ 0x58B88AC5) + (v11 ^ 0x5E10E988) + 1) ^ 0x7F5B1FBD);
  v26 = v14[529];
  v14[529] = v14[(662 * v23
                              + 395214
                              - (((662 * v23 + 395214) * (unint64_t)a8) >> 32) * v15)];
  v27 = v21 ^ v9;
  STACK[0x708] = (unint64_t)v14;
  LODWORD(v19) = (v25 - 2136678333 + (v27 ^ 0x2E2A343D) + 1) % 0xC;
  v14[(((v23 + 21) & 0x16 ^ 0x96 | (v23 + 597) & 0x216) * (v23 + 597)
                   - (((((_DWORD)v23 + 21) & 0x16 ^ 0x96 | ((_DWORD)v23 + 597) & 0x216u)
                     * ((_DWORD)v23 + 597)
                     * (unint64_t)a8) >> 32)
                   * v15)] = v26;
  LOBYTE(v23) = v14[226];
  v27 ^= 0xD1D5CBC2;
  v28 = v27 ^ (v16 + 2130735992 + v25);
  v29 = v25 - 2136678333;
  v30 = v29 + (v21 ^ 0x9DC8AB03) + 48470190 - ((2 * (v29 + (v21 ^ 0x9DC8AB03))) & 0x5C7315C);
  v31 = (662 * v19
                     + 395876
                     - 965 * ((4450744 * (unint64_t)(662 * v19 + 395876)) >> 32));
  *(_BYTE *)(STACK[0x708] + 226) = *(_BYTE *)(STACK[0x708] + v31);
  *(_BYTE *)(STACK[0x708] + v31) = v23;
  v32 = (662 * ((v28 % 0xB - 1555089457 - 2 * (v28 % 0xB)) ^ 0xA34F37CF) + 396538) % 0x3C5;
  LODWORD(v31) = v27 % 9;
  LOBYTE(v16) = *(_BYTE *)(STACK[0x708] + 888);
  *(_BYTE *)(STACK[0x708] + 888) = *(_BYTE *)(STACK[0x708] + v32);
  v33 = (662 * ((v30 ^ 0x2E398AEu) % 0xA)
                     + 397200
                     - 965 * ((4450744 * (unint64_t)(662 * ((v30 ^ 0x2E398AEu) % 0xA) + 397200)) >> 32));
  *(_BYTE *)(STACK[0x708] + v32) = v16;
  v34 = *(_BYTE *)(STACK[0x708] + 585);
  *(_BYTE *)(STACK[0x708] + 585) = *(_BYTE *)(STACK[0x708] + v33);
  *(_BYTE *)(STACK[0x708] + v33) = v34;
  v35 = ((2 * ((v30 ^ 0x2E398AE) + v28)) & 0xFFFBFBCE) + (((v30 ^ 0x2E398AE) + v28) ^ 0xFFFDFDE7);
  v36 = v27 - 131609 - v35;
  v37 = 662 * v31 + 397862;
  LODWORD(v33) = v37 - 1930 * ((2225372 * (unint64_t)v37) >> 32);
  v38 = (v33 ^ 0xFFDAB7FE) + 2 * v33;
  v39 = v25 - ((2 * v25 + 1356893026) & 0xC70712CA) - 1946956010;
  if ((v38 + 2443266) >= 0x3C5)
    v40 = 1862260361;
  else
    v40 = 1862261326;
  v41 = *(_BYTE *)(STACK[0x708] + 282);
  *(_BYTE *)(STACK[0x708] + 282) = *(_BYTE *)(STACK[0x708] + (v38 - 1859818060 + v40));
  *(_BYTE *)(STACK[0x708] + (v37 - 965 * ((4450744 * (unint64_t)v37) >> 32))) = v41;
  v42 = *(_BYTE *)(STACK[0x708] + 944);
  v43 = (v36 ^ v29) + 1498554844 + (~(2 * (v36 ^ v29)) | 0x4D5BBC47) + 1;
  v44 = (662 * (v39 & 7 ^ 5)
                     + 398524
                     - 965 * ((4450744 * (unint64_t)(662 * (v39 & 7 ^ 5) + 398524)) >> 32));
  v45 = ((2 * ((v43 ^ 0x595221DC) + (v30 ^ 0x57A0B475))) & 0xEFEF9DDE)
      + (((v43 ^ 0x595221DC) + (v30 ^ 0x57A0B475)) ^ 0xF7F7CEEF);
  *(_BYTE *)(STACK[0x708] + 944) = *(_BYTE *)(STACK[0x708] + v44);
  *(_BYTE *)(STACK[0x708] + v44) = v42;
  v46 = v43 ^ 0xA6ADDE23;
  v47 = (v43 ^ 0xA6ADDE23) + v35 - ((2 * ((v43 ^ 0xA6ADDE23) + v35) + 263220) & 0x486ADCA8) + 607613038;
  LODWORD(v44) = v47 ^ 0x24356E54;
  v48 = (v45 + 134754577) % 6;
  v49 = (662 * ((v47 ^ 0x24356E54) % 7)
                     + 399186
                     - 965 * ((4450744 * (unint64_t)(662 * ((v47 ^ 0x24356E54) % 7) + 399186)) >> 32));
  v50 = *(_BYTE *)(STACK[0x708] + 641);
  *(_BYTE *)(STACK[0x708] + 641) = *(_BYTE *)(STACK[0x708] + v49);
  *(_BYTE *)(STACK[0x708] + v49) = v50;
  v51 = *(_BYTE *)(STACK[0x708] + 338);
  *(_BYTE *)(STACK[0x708] + 338) = *(_BYTE *)(STACK[0x708]
                                            + (662 * v48
                                                           + 399848
                                                           - 965
                                                           * ((4450744 * (unint64_t)(662 * v48 + 399848)) >> 32)));
  LODWORD(v49) = (((v48 + 604) | (163 - v48)) & 0x296) * (v48 + 604);
  *(_BYTE *)(STACK[0x708] + (v49 - 965 * ((4450744 * (unint64_t)v49) >> 32))) = v51;
  v52 = (662 * ((v43 ^ 0x595221DCu) % 5)
                     + 400510
                     - 965 * ((4450744 * (unint64_t)(662 * ((v43 ^ 0x595221DCu) % 5) + 400510)) >> 32));
  v53 = (v45 - 1901640731) ^ v43;
  LOBYTE(v49) = *(_BYTE *)(STACK[0x708] + 35);
  *(_BYTE *)(STACK[0x708] + 35) = *(_BYTE *)(STACK[0x708] + v52);
  v54 = ((v39 ^ 0x47B6E731 ^ v47) + (v53 ^ 0xA6ADDE23) + 1) ^ 0x438748E7;
  *(_BYTE *)(STACK[0x708] + v52) = v49;
  v55 = v54 & 0x8118F5DD ^ 0x21DA1296 ^ ((v54 & 0x8118F5DE) - ((2 * v54) & 0x30A0A0) + 551178832);
  v56 = v46 - 134754577 - v45 + v44;
  v57 = (_BYTE *)STACK[0x708];
  v58 = (662 * ((-1465667358 - (v55 | 0xA8A3B0E2) + (v55 | 0x575C4F1D)) ^ 0x565C0FD8) + 401172) % 0x3C5;
  LOBYTE(v46) = *(_BYTE *)(STACK[0x708]
                         + (((_WORD)v58 + 26935 - ((2 * (_WORD)v58) & 0x26E)) & 0x2B9 ^ 0x288u)
                         + (unint64_t)(((_WORD)v58 + 26935 - ((2 * (_WORD)v58) & 0x26E)) & 0x2B9 ^ 0x31u));
  v57[697] = *(_BYTE *)(STACK[0x708] + ((v58 - 1616615113 - ((2 * v58) & 0x26E)) ^ 0x9FA46937));
  v57[v58] = v46;
  LOBYTE(v58) = v57[394];
  v59 = (662 * ((v56 + 1) % 3u)
                     + 401834
                     - 965 * ((4450744 * (unint64_t)(662 * ((v56 + 1) % 3u) + 401834)) >> 32));
  v57[394] = v57[v59];
  v57[v59] = v58;
  v60 = 753;
  if ((v53 & 1) == 0)
    v60 = 91;
  v61 = v57[91];
  v57[91] = v57[v60];
  v57[v60] = v61;
  v57[(662 * ((v8 + 36) ^ 0xD6u ^ v57[473]) + 438603) % 0x3C5] = -26;
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v12 + 8 * v8))(2353, 204, 570341916, 214, 1527655497);
}

uint64_t sub_2477EE6F0@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W4>, int a4@<W8>)
{
  int v4;
  int v5;
  uint64_t v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;

  *(_BYTE *)(v10 + a4
                 + v5 * v8
                 - ((((a4 + v5 * v8) * (unint64_t)v7) >> 32) >> 4) * v9) = v5 - ((2 * v5 + 110) & 0xCC) - 99;
  return (*(uint64_t (**)(void))(v6 + 8 * ((((v4 ^ a1) + v5 == a3 + 16) * a2) | v4)))();
}

uint64_t sub_2477EE73C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v45;
  int v46;
  int v47;
  int v48;
  int v49;
  uint64_t v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  _BYTE *v57;
  int v58;
  uint64_t v59;
  char v60;
  unsigned int v61;
  uint64_t v62;
  char v63;
  uint64_t v64;
  unsigned int v65;
  uint64_t v66;
  char v67;
  int v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  char v72;
  unsigned int v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  char v77;
  unsigned int v78;
  unsigned int v79;
  unsigned int v80;
  uint64_t v81;
  int v82;
  char v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  uint64_t v87;
  uint64_t v88;
  unsigned int v89;
  int v90;
  int v91;
  uint64_t v92;
  unsigned int v93;
  unsigned int v94;
  uint64_t v95;
  uint64_t v96;
  unsigned int v97;
  unsigned int v98;

  v58 = ((v49 ^ 0x18B0) - 4139) | 0x1022;
  v59 = ((v48 & 0xF ^ 1) * v52
                     + 393228
                     - ((((v48 & 0xF ^ 1u) * v52 + 393228) * (unint64_t)v56) >> 32) * v54);
  v60 = v57[473];
  v57[473] = v57[v59];
  v57[v59] = v60;
  v61 = (((((v58 ^ 0xED9568C5) + v46) % 0xF) ^ 0x7C5FFFFF) + 2 * (((v58 ^ 0xED9568C5) + v46) % 0xF)) * v52 + 1606812984;
  v62 = v61 - (((v61 * (unint64_t)v51) >> 32) >> 4) * v54;
  v63 = v57[170];
  v57[170] = v57[v62];
  v57[v62] = v63;
  LOBYTE(v62) = v57[832];
  v64 = ((v47 - 1533175776) % 0xEu * v52
                     + 394552
                     - ((((v47 - 1533175776) % 0xEu * v52 + 394552) * (unint64_t)v56) >> 32) * v54);
  v57[832] = v57[v64];
  v57[v64] = v62;
  v65 = ((2 * ((v45 ^ 0x2CA43A1C) + (v48 ^ 0x9752ACC1) + 1)) & 0xB5F8F7FE)
      + (((v45 ^ 0x2CA43A1C) + (v48 ^ 0x9752ACC1) + 1) ^ 0xDAFC7BFF);
  LODWORD(v62) = v47 - ((2 * v47 + 1404889000) & 0x692B3EB4) - 1636560082;
  v66 = ((v45 ^ 0xD35BC5E3) % 0xD * v52
                     + 395214
                     - ((((v45 ^ 0xD35BC5E3) % 0xD * v52 + 395214) * (unint64_t)v56) >> 32) * v54);
  v67 = v57[529];
  LODWORD(v64) = v65 + 620987393;
  v68 = v65 + 620987393 + (v62 ^ 0x34959F5A) + 233199743 - ((2 * (v65 + 620987393 + (v62 ^ 0x34959F5A))) & 0x1BCCB0FE);
  v69 = v62 ^ v45;
  LODWORD(v62) = v65 + v46;
  v70 = ((2 * v69) & 0x9B6F3C6E ^ 0x19281C04) + (v69 ^ 0x4123D175);
  v57[529] = v57[v66];
  v57[v66] = v67;
  LODWORD(v66) = 662
               * (((2 * ((v65 - v70 + 1924866616) % 0xC)) & 0x1C) + (((v65 - v70 + 1924866616) % 0xC) ^ 0xFFD3FFFE))
               + 1909329808;
  v71 = v66 - (((v66 * (unint64_t)v51) >> 32) >> 4) * v54;
  v72 = v57[226];
  v57[226] = v57[v71];
  v73 = v69 ^ 0xEB5A15FB ^ (v62 - ((2 * v62 + 624032614) & 0xCF9CB572) - 93890452);
  v57[v71] = v72;
  v74 = (662 * (v73 % 0xB)
                     + 396538
                     - ((4450744 * (unint64_t)(662 * (v73 % 0xB) + 396538)) >> 32) * v54);
  v75 = v57[888];
  v57[888] = v57[v74];
  v57[v74] = v75;
  v76 = (662 * ((v68 ^ 0xDE6587Fu) % 0xA)
                     + 397200
                     - ((4450744 * (unint64_t)(662 * ((v68 ^ 0xDE6587Fu) % 0xA) + 397200)) >> 32) * v54);
  v77 = v57[585];
  v78 = ((2 * (v73 + (v68 ^ 0xDE6587F))) & 0xF7FFEFE4) + ((v73 + (v68 ^ 0xDE6587F)) ^ 0x7BFFF7F2);
  v57[585] = v57[v76];
  v57[v76] = v77;
  v79 = v65 - 577969737;
  v80 = 662 * (((v70 - 1303879223) % 9 - 159059843 - ((2 * ((v70 - 1303879223) % 9)) & 0x1A)) ^ 0xF684F07D) + 397862;
  LOBYTE(v76) = v57[282];
  v81 = v80 - (((v80 * (unint64_t)v51) >> 32) >> 4) * v54;
  v57[282] = v57[v81];
  v82 = ((v70 - v78 + 776493499) ^ v64) + 852437829 - ((2 * ((v70 - v78 + 776493499) ^ v64)) & 0x659E568A);
  v57[v81] = v76;
  LODWORD(v76) = (v79 & 7 ^ 0xFFEA7D3D) + ((2 * v79) & 0xA);
  v83 = v57[944];
  v84 = (v76 + 1410664) * (v76 + 1410664) - 109561 + (-1410333 - v76) * (v76 + 1410333);
  LOBYTE(v81) = v57[v84 - (((v84 * (unint64_t)v51) >> 32) >> 4) * v54];
  v85 = v82 ^ 0xCD30D4BA;
  LODWORD(v64) = ((2 * (v78 - 2080372721 + (v82 ^ 0xCD30D4BA))) & 0x3F7FE3FE)
               + ((v78 - 2080372721 + (v82 ^ 0xCD30D4BA)) ^ 0x1FBFF1FF);
  v57[944] = v81;
  LODWORD(v81) = ((int)v64 - 532673023) % 7u + 901824465 - 2 * ((((int)v64 - 532673023) % 7u) & 1);
  v57[662 * (_DWORD)v76
    + 933640446
    - ((((662 * v76 + 933640446) * (unint64_t)v51) >> 32) >> 4) * v54] = v83;
  v86 = ((2 * ((v82 ^ 0x32CF2B45) + (v68 ^ 0x58A574A4))) & 0xF7FFDFB6)
      + (((v82 ^ 0x32CF2B45) + (v68 ^ 0x58A574A4)) ^ 0xFBFFEFDB);
  LOBYTE(v78) = v57[641];
  LODWORD(v81) = 662 * ((~(2 * v81) & 2) + (v81 ^ 0x35C0BFD8)) + 393228;
  v87 = v81 - (((v81 * (unint64_t)v51) >> 32) >> 4) * v54;
  v57[641] = v57[v87];
  v57[v87] = v78;
  LOBYTE(v87) = v57[338];
  v88 = (662 * ((v86 + 67112997) % 6)
                     + 399848
                     - ((4450744 * (unint64_t)(662 * ((v86 + 67112997) % 6) + 399848)) >> 32) * v54);
  LODWORD(v76) = (v82 ^ 0x32CF2B45u) % 5;
  v57[338] = v57[v88];
  v57[v88] = v87;
  LODWORD(v87) = 662 * v76;
  LODWORD(v76) = ((662 * v76) ^ 0xCFFF7F7F) + ((1324 * v76) & 0x3EFC);
  LOBYTE(v82) = (v86 - 7) ^ v82;
  LOBYTE(v88) = v57[35];
  v57[35] = v57[(v87 + 400510 - ((4450744 * (unint64_t)(v87 + 400510)) >> 32) * v54)];
  v57[((int)v76 + 805739775)
    % (((((_DWORD)v76 + 433407) & a45) + ((-805739777 - (_DWORD)v76) & 0xDD78DF12)) ^ 0xDD7CDCD7)] = v88;
  LOBYTE(v76) = v57[697];
  v89 = 662 * ((((v64 + 1) ^ v79) + (v82 ^ 2) + 1) & 3) + 401172;
  v90 = v89 - ((4450744 * (unint64_t)v89) >> 32) * v54;
  v91 = v90 - 960972308 - ((2 * v90) & 0x3D8);
  v92 = v91 ^ 0xC6B8B9EC;
  v57[697] = v57[v92];
  v57[v92] = v76;
  v93 = v85 + v64 - v86 - 599786019;
  LOBYTE(v86) = v57[394];
  v94 = 662 * ((v91 & 0xD ^ 0xC) + v93 % 3 + (v91 & 0xD ^ 1)) + 393228;
  v95 = (v94 - ((4450744 * (unint64_t)v94) >> 32) * v54);
  v57[394] = v57[v95];
  v57[v95] = v86;
  LODWORD(v95) = 662 * ((v82 & 1) == 0) + 402496;
  LOBYTE(v93) = v57[91];
  v96 = v95 - (((v95 * (unint64_t)v51) >> 32) >> 4) * v54;
  v57[91] = v57[v96];
  v57[v96] = v93;
  LOBYTE(v82) = (16 * *(_BYTE *)(STACK[0x708] + (662 * (((v58 ^ 0x1D7C) - 2828) & 0x2E5EE00u) + 439568) % 0x3C5)) ^ 0x60;
  v97 = (*(unsigned __int8 *)(STACK[0x708] + 493) ^ 0x5F ^ ((_BYTE)v82 - ((2 * (_BYTE)v82) & 0xC0) - 26) & 0xFE) * v55
      + 359382;
  v98 = 662
      * (*((unsigned __int8 *)off_2518F0F80[v58 ^ 0x1193]
         + (v97 - 1184 * ((3627507 * (unint64_t)v97) >> 32))) ^ 0xDE)
      + 393228;
  *(_BYTE *)(STACK[0x708] + 918) = *(_BYTE *)(STACK[0x708]
                                            + (v98 - 965 * ((4450744 * (unint64_t)v98) >> 32)));
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v50 + 8 * ((247 * (v53 != 777967426)) ^ v58)))(116080198, 234, 3276406598);
}

void sub_2477EEFDC()
{
  JUMPOUT(0x2477EEEC0);
}

uint64_t sub_2477EEFE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;

  v17 = (((v7 - 319050809) >> 3) & 0x7BAF9EE) + (((v7 - 319050809) >> 4) ^ 0x73DD7CF7);
  v18 = (((_BYTE)v7 + 7) & 0xF) * v15 + 439568;
  v19 = ((((v17 + 9) + 664) & v15)
       + ((94 - v17) & 0x96)
       + (((v17 - 95) & 0xDF) + ((94 - v17) & 0xDF) + 33))
      * ((v17 + 9) + 664);
  LOBYTE(v19) = (16 * *(_BYTE *)(a4 + (v19 - ((v19 * (unint64_t)v16) >> 32) * v12))) ^ 0x60;
  v20 = (*(unsigned __int8 *)(a4 + (v18 - ((v18 * (unint64_t)v16) >> 32) * v12)) ^ 0xB3 ^ ((_BYTE)v19 - ((2 * (_BYTE)v19) & 0xC0) - 26) & 0xFE)
      * v10
      + 553879;
  v21 = v13
      + ((*(unsigned __int8 *)(a6 + (v20 - ((v20 * (unint64_t)v11) >> 32) * v14)) >> 4) ^ 0xD)
      * v15;
  LOBYTE(v21) = (16 * *(_BYTE *)(a4 + (v21 - ((v21 * (unint64_t)v16) >> 32) * v12))) ^ 0x60;
  *(_BYTE *)(a4
           + v7 * v15
           - 758238054
           - ((((v7 * v15 - 758238054) * (unint64_t)v9) >> 32) >> 4) * v12) = v21 - ((2 * v21) & 0xC0) - 26;
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((23 * (v7 != 319051064)) ^ v6)) - 4))();
}

uint64_t sub_2477EF14C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;

  v17 = (((((v6 + 84 + v7 - 2141915128) >> 4)
                          - (((v6 + 84 + v7 - 2141915128) >> 3) & 0xE)
                          + 7) ^ 0x29F)
       + ((2
         * (((v6 + 84 + v7 - 2141915128) >> 4)
          - (((v6 + 84 + v7 - 2141915128) >> 3) & 0x103A600E)
          - 1474482169)) & 0x130))
      * v15;
  v18 = (((_BYTE)v7 + 7) & 0xF) * v15 + 439568;
  LOBYTE(v17) = (16 * *(_BYTE *)(a4 + (v17 - ((v17 * (unint64_t)v16) >> 32) * v12))) ^ 0x60;
  v19 = (*(unsigned __int8 *)(a4 + (v18 - ((v18 * (unint64_t)v16) >> 32) * v12)) ^ ((_BYTE)v17 - ((2 * (_BYTE)v17) & 0xC0) - 26) & 0xFE ^ 2)
      * v10
      + 174980;
  LOBYTE(v19) = *(_BYTE *)(a6 + (v19 - ((v19 * (unint64_t)v11) >> 32) * v14));
  v20 = v13 + (((v19 ^ 0xCF) - 32) ^ (8 * v19 + 16)) * v15;
  *(_BYTE *)(a4
           + v7 * v15
           - 606292042
           - ((((v7 * v15 - 606292042) * (unint64_t)v9) >> 32) >> 4) * v12) = *(_BYTE *)(a4 + (v20 - ((v20 * (unint64_t)v16) >> 32) * v12));
  return ((uint64_t (*)(void))(*(_QWORD *)(v8 + 8 * ((182 * (v7 + 1 == a5 + 256)) ^ v6)) - 4))();
}

uint64_t sub_2477EF28C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;

  v15 = *(unsigned __int8 *)(a4 + (v7 * v14 - 2057765286) % ((v6 - 7) ^ 0xF9Du));
  *(_BYTE *)(a4
           + v7 * v14
           - 2057750722
           - ((((v7 * v14 - 2057750722) * (unint64_t)v9) >> 32) >> 4) * v12) = v15 ^ *(_BYTE *)(a6 + ((v15 ^ 0xE5) * v10 + 734243 - ((((v15 ^ 0xE5u) * v10 + 734243) * (unint64_t)v11) >> 32) * v13)) ^ 0xF0;
  return (*(uint64_t (**)(void))(v8 + 8 * ((143 * (v7 != 243160128)) ^ v6)))();
}

uint64_t sub_2477EF33C(unsigned int a1, char a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  int v7;
  int v8;
  char v9;
  uint64_t v10;
  unsigned int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  char v19;
  char v20;
  unsigned int v21;

  v19 = *(_BYTE *)(a6
                 + ((v8 ^ 0xBD70A8DA) * v12
                                + 538400
                                - (((((v8 ^ 0xBD70A8DA) * v12 + 538400) >> 5) * (unint64_t)a1) >> 32) * v15));
  v20 = (8 * v19) ^ (16 * v19) ^ (((v6 - 83) | v9) + 99);
  v21 = v14 + (v19 ^ a2 ^ (v20 - ((2 * v20) & 0xE0) - 11)) * v17;
  *(_BYTE *)(a4
           + a3
           + v7 * v17
           - ((((a3 + v7 * v17) * (unint64_t)v11) >> 32) >> 4) * v13) = *(_BYTE *)(a4 + (v21 - ((v21 * (unint64_t)v18) >> 32) * v13));
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * (((v7 == -348805474) * v16) ^ v6)) - 4))();
}

uint64_t sub_2477EF414(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  int v6;
  uint64_t v7;

  STACK[0x5C0] = a6;
  return (*(uint64_t (**)(void))(v7
                              + 8
                              * ((1486
                                * (((LODWORD(STACK[0x5B8]) == LODWORD(STACK[0x6E8])) ^ (51 * (v6 ^ 0x3A))) & 1)) ^ v6)))();
}

uint64_t sub_2477EF454()
{
  int v0;
  int v1;
  uint64_t v2;
  int v3;
  unsigned int v4;
  _BOOL4 v5;

  v3 = ((v0 ^ 0x7E6) - 3347) | 0xE8C;
  v4 = v1 - 981740270 + v3;
  v5 = v4 < 0xED78CD64 || v4 > 0xED78CD65;
  return (*(uint64_t (**)(void))(v2 + 8 * ((26 * v5) ^ v3)))();
}

void sub_2477EF930()
{
  JUMPOUT(0x2477EF4F4);
}

#error "2477F9C34: call analysis failed (funcsize=8227)"

uint64_t sub_2477F9C38(uint64_t a1)
{
  int v1;
  unint64_t v2;
  int v3;
  int v4;
  int v5;
  unsigned int v6;
  _BOOL4 v7;

  LODWORD(STACK[0x5BC]) = 316274500;
  v2 = STACK[0x6D0];
  v3 = STACK[0x6E8];
  v4 = LODWORD(STACK[0x6E8]) - 794;
  LODWORD(STACK[0x6F0]) = (LODWORD(STACK[0x6E8]) - 1441) | 0x82;
  v5 = (((v1 ^ 0x2C1C0017) << (((v3 + 95) | 0x82) ^ 0xD7)) & 0x1FFFFB5C ^ 0xCC87948) + (v1 ^ 0x587C35C);
  v6 = LODWORD(STACK[0x5B8]) + 1978646301 + v5;
  v7 = v5 - 1645434653 < v6;
  if (v6 < 0x2DECA691 != (v5 - 1645434653) < 0x2DECA691)
    v7 = v6 < 0x2DECA691;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 + 8 * ((6090 * v7) ^ v4)) - 12))(a1, 3477, 4122590600);
}

uint64_t sub_2477FA414@<X0>(int a1@<W1>, int a2@<W2>, uint64_t a3@<X3>, int a4@<W4>, int a5@<W5>, int a6@<W6>, int a7@<W7>, unsigned int a8@<W8>)
{
  int v8;
  int v9;
  uint64_t v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  _BOOL4 v27;

  v21 = (v9 - 2146) | 0x548;
  v22 = 3 * (v21 ^ v12);
  LODWORD(STACK[0x6F0]) = v22;
  v23 = ((v8 + 2138824408) * v19 + v13) % (v22 - 529);
  v24 = STACK[0x708];
  v25 = STACK[0x700] + (v18 + v21 + 2138824408 + v14);
  *(_BYTE *)(v24 + v23) = *(_BYTE *)v25 ^ *(_BYTE *)(STACK[0x708] + v23);
  v26 = ((v8 + 2138824408) * v19 + a2) % 0x3C5u;
  LODWORD(v23) = v20 + 1554976193 * v25 - ((-1185014910 * v25) & a4);
  LODWORD(v23) = ((a5 ^ WORD1(v23)) + v20 - ((2 * (a5 ^ WORD1(v23))) & 0x13D1C)) ^ v23;
  LODWORD(v23) = 1554976193 * v23 - ((-1185014910 * v23) & a6) + a7;
  *(_BYTE *)(v24 + v26) ^= v23 ^ *(_BYTE *)(v10
                                          + ((BYTE3(v23) ^ 0x90) * v17
                                                         - ((3627507 * (unint64_t)((BYTE3(v23) ^ 0x90) * v17)) >> 32)
                                                         * v16)) ^ 0x3C;
  v27 = v8 + 2138824408 + v11 < a8;
  if (a8 < v15 != v8 + 2138824408 + v11 < v15)
    v27 = a8 < v15;
  return ((uint64_t (*)(void))(*(_QWORD *)(a3 + 8 * ((v27 * a1) ^ v21)) - 12))();
}

void sub_2477FA568()
{
  JUMPOUT(0x2477FA434);
}

uint64_t sub_2477FD43C@<X0>(int a1@<W1>, int a2@<W8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32)
{
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unint64_t v41;
  unint64_t v42;
  int v43;
  unsigned int v44;
  uint64_t v45;
  unint64_t v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  unsigned int v50;
  _BYTE *v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  _BYTE *v55;
  uint64_t v56;
  _BYTE *v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  int v61;
  _BYTE *v62;
  _BYTE *v63;
  _BYTE *v64;
  _BYTE *v65;
  uint64_t v66;
  unsigned __int8 *v67;
  _BYTE *v68;
  uint64_t v69;
  int v70;
  _BYTE *v71;
  uint64_t v72;
  _BYTE *v73;
  unsigned int v74;
  int v75;
  unsigned int v76;
  unsigned int v77;

  LODWORD(STACK[0x62C]) = (v35 ^ 0x82B92495) + 1655800382 + a2;
  v39 = STACK[0x6C8];
  LODWORD(STACK[0x650]) = v37 - v33 + 1542227693;
  LODWORD(STACK[0x64C]) = -1205920577 - v33 - ((1914528160 - a1) & 0xFE20D7DE);
  LODWORD(STACK[0x628]) = v38
                        - 1065480293
                        + (v36 ^ 0x54BF745B)
                        - ((2 * (v38 - 1065480293 + (v36 ^ 0x54BF745B)) + 11018698) & 0x29079446)
                        - 1260922104;
  LODWORD(STACK[0x644]) = v34 - v32 - 1753041712;
  LODWORD(STACK[0x6E8]) = v39 - 1765839951;
  LODWORD(STACK[0x6E4]) = v39 - 1765839950;
  LODWORD(STACK[0x6E0]) = v39 - 1765839949;
  LODWORD(STACK[0x6DC]) = v39 + 1557464629;
  LODWORD(STACK[0x6B0]) = v39 - 590019019;
  LODWORD(STACK[0x6C8]) = v39 - 1765839947;
  LODWORD(STACK[0x6C0]) = v39 - 1765839946;
  LODWORD(STACK[0x6A8]) = v39 - 1765839945;
  LODWORD(STACK[0x6A0]) = v39 - 1765839944;
  LODWORD(STACK[0x698]) = v39 - 1765839943;
  LODWORD(STACK[0x694]) = v39 - 1765839942;
  LODWORD(STACK[0x688]) = v39 - 1765839941;
  LODWORD(STACK[0x680]) = v39 - 1765839940;
  LODWORD(STACK[0x67C]) = v39 - 1765839939;
  LODWORD(STACK[0x670]) = v39 - 1765839938;
  LODWORD(STACK[0x6BC]) = v39 - 1765839952;
  LODWORD(STACK[0x668]) = v39 - 1765839937;
  v40 = STACK[0x6F0];
  v41 = STACK[0x700];
  v42 = STACK[0x700] + (LODWORD(STACK[0x6BC]) + 1175820933);
  *(_BYTE *)(STACK[0x708] + 956) ^= *(_BYTE *)v42;
  LODWORD(v42) = v42 * ((v40 - 1460) ^ 0x5CAF0ADF) - 1404816277 - ((962468738 * v42) & 0x588868D6);
  v43 = ((WORD1(v42) ^ 0xAC44) - 1404816277 - 2 * ((WORD1(v42) ^ 0xAC44) & 0x347B ^ WORD1(v42) & 0x10)) ^ v42;
  v44 = 1554976193 * v43 - ((-1185014910 * v43) & 0xEE3F68C6) + 1998566499;
  v45 = (LODWORD(STACK[0x6E8]) + 1175820933);
  v46 = STACK[0x5C0];
  v47 = ((v44 ^ 0x63) + ((v44 ^ 0x63) >> 6 << 7) - 64) ^ *(unsigned __int8 *)(STACK[0x5C0]
                                                                            + (673 * (HIBYTE(v44) ^ 0x8F)
                                                                                           - 1184
                                                                                           * ((3627507
                                                                                             * (unint64_t)(673 * (HIBYTE(v44) ^ 0x8F))) >> 32)));
  *(_BYTE *)(STACK[0x708] + 473) ^= (v47 - ((2 * v47) & 0xCC) - 26) ^ 0xF;
  *(_BYTE *)(STACK[0x708] + 653) ^= *(_BYTE *)(v41 + v45);
  v48 = 1554976193 * (v41 + v45) + 1059718141 - ((962468738 * (v41 + v45)) & 0x7E5407FA);
  v49 = ((HIWORD(v48) ^ 0x3F2A) + 1059718141 - ((2 * (HIWORD(v48) ^ 0x3F2A)) & 0x7FA)) ^ v48;
  v50 = 1554976193 * v49 - ((962468738 * v49) & 0x6FA82E98) - 1210837172;
  LODWORD(v45) = HIBYTE(v50) ^ 0x4F;
  LOBYTE(v50) = ((v50 ^ 0x4C) - 2 * ((v50 ^ 0x4C) & 0x67 ^ v50 & 1) - 26) ^ *(_BYTE *)(STACK[0x708] + 170);
  *(_BYTE *)(STACK[0x708] + 170) = *(_BYTE *)(v46
                                            + (673 * v45
                                                           - 1184
                                                           * ((3627507 * (unint64_t)(673 * v45)) >> 32))) ^ (v50 + ((2 * v50) & 0x80) - 64) ^ 0xF;
  v51 = (_BYTE *)(v41 + (LODWORD(STACK[0x6E4]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 350) ^= *v51;
  v52 = 1554976193 * (_DWORD)v51 + 1016297624 - ((962468738 * (_DWORD)v51) & 0x7926F130);
  v53 = ((HIWORD(v52) ^ 0x3C93) + 1016297624 - ((2 * (HIWORD(v52) ^ 0x3C93)) & 0xF130)) ^ v52;
  v54 = 1554976193 * v53 - ((-1185014910 * v53) & 0x86968184) + 1129005250;
  LOBYTE(v54) = ((v54 ^ 0xC2) - 2 * ((v54 ^ 0xC2) & 0x44 ^ v54 & 4) - 64) ^ *(_BYTE *)(v46
                                                                                     + (673 * (HIBYTE(v54) ^ 0xBB) - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v54) ^ 0xBB))) >> 32)));
  *(_BYTE *)(STACK[0x708] + 832) ^= (v54 - ((2 * v54) & 0xCC) - 26) ^ 0xF;
  v55 = (_BYTE *)(v41 + (LODWORD(STACK[0x6E0]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 47) ^= *v55;
  LODWORD(v55) = 1554976193 * (_DWORD)v55 - 226152666 - ((-1185014910 * (_DWORD)v55) & 0xE50A5E4C);
  LODWORD(v55) = (((v55 >> 16) ^ 0xF285)
                - 226152666
                - ((2 * ((v55 >> 16) ^ 0xF285)) & 0x5E4C)) ^ v55;
  LODWORD(v55) = 1554976193 * (_DWORD)v55 - ((-1185014910 * (_DWORD)v55) & 0xF76238F6) + 2075204731;
  LOBYTE(v55) = *(_BYTE *)(v46
                         + (673 * ((v55 >> 24) ^ 0x83)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v55 >> 24) ^ 0x83))) >> 32))) ^ ((v55 ^ 0x7B) + (~(2 * (v55 ^ 0x7B)) | 0x7F) - 63);
  *(_BYTE *)(STACK[0x708] + 529) ^= ((_BYTE)v55 - ((2 * (_BYTE)v55) & 0xCC) - 26) ^ 0xF;
  LODWORD(v55) = STACK[0x6DC] & 4;
  LODWORD(v51) = LODWORD(STACK[0x6B0]) ^ 4;
  *(_BYTE *)(STACK[0x708] + 709) ^= *(_BYTE *)(v41 + (LODWORD(STACK[0x6B0]) + 4));
  LODWORD(v55) = 1554976193 * (v41 + (_DWORD)v51 + 2 * (_DWORD)v55)
               - 52930272
               - ((-1185014910 * (v41 + (_DWORD)v51 + 2 * (_DWORD)v55)) & 0xF9B0B240);
  LODWORD(v55) = (((v55 >> 16) ^ 0xFCD8) - 52930272 - ((2 * ((v55 >> 16) ^ 0xFCD8)) & 0xB240)) ^ v55;
  LODWORD(v55) = 1554976193 * (_DWORD)v55 - ((-1185014910 * (_DWORD)v55) & 0xE0EFD1D6) + 1886906603;
  v56 = (LODWORD(STACK[0x6C8]) + 1175820933);
  LODWORD(v55) = ((v55 ^ 0xFFFFFFEB) + ((v55 ^ 0xFFFFFFEB) >> 6 << 7) - 64) ^ *(unsigned __int8 *)(v46 + (673 * ((v55 >> 24) ^ 0x88) - 1184 * ((3627507 * (unint64_t)(673 * ((v55 >> 24) ^ 0x88))) >> 32)));
  *(_BYTE *)(STACK[0x708] + 226) ^= ((_BYTE)v55 - ((2 * (_BYTE)v55) & 0xCC) - 26) ^ 0xF;
  *(_BYTE *)(STACK[0x708] + 406) ^= *(_BYTE *)(v41 + v56);
  LODWORD(v51) = 1554976193 * (v41 + v56) + 1565641670 - ((-1185014910 * (v41 + v56)) & 0xBAA3978C);
  LODWORD(v51) = (((v51 >> 16) ^ 0x5D51)
                + 1565641670
                - ((2 * ((v51 >> 16) ^ 0x5D51)) & 0x1978C)) ^ v51;
  LODWORD(v51) = 1554976193 * (_DWORD)v51 - ((157162370 * (_DWORD)v51) & 0xB566B44) + 95106466;
  *(_BYTE *)(STACK[0x708] + 888) ^= v51 ^ 0x8B ^ *(_BYTE *)(v46
                                                                           + (673
                                                                                          * ((v51 >> 24) ^ 0xFD)
                                                                                          - 1184
                                                                                          * ((3627507
                                                                                            * (unint64_t)(673 * ((v51 >> 24) ^ 0xFD))) >> 32)));
  v57 = (_BYTE *)(v41 + (LODWORD(STACK[0x6C0]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 103) ^= *v57;
  v58 = 1554976193 * (_DWORD)v57 - 833166065 - ((-1185014910 * (_DWORD)v57) & 0x9CADCA1E);
  v59 = ((HIWORD(v58) ^ 0xCE56) - 833166065 - ((2 * (HIWORD(v58) ^ 0xCE56)) & 0x1CA1E)) ^ v58;
  v60 = 1554976193 * v59 - ((-1185014910 * v59) & 0xAD3A0E06) - 694352125;
  v61 = *(unsigned __int8 *)(v46
                           + (673 * (HIBYTE(v60) ^ 0x2E)
                                          - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v60) ^ 0x2E))) >> 32))) ^ ((v60 ^ 3) + (v60 >> 6 << 7) - 64);
  *(_BYTE *)(STACK[0x708] + 585) ^= (v61 - ((2 * v61) & 0xCC) - 26) ^ 0xF;
  v62 = (_BYTE *)(v41 + (LODWORD(STACK[0x6A8]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 765) ^= *v62;
  LODWORD(v55) = 1554976193 * (_DWORD)v62 - 1304032948 - ((962468738 * (_DWORD)v62) & 0x648C1298);
  LODWORD(v55) = (((v55 >> 16) ^ 0xB246)
                - 1304032948
                - ((2 * ((v55 >> 16) ^ 0xB246)) & 0x1298)) ^ v55;
  LODWORD(v55) = 1554976193 * (_DWORD)v55 - ((-1185014910 * (_DWORD)v55) & 0x8B11D61A) - 980882675;
  LODWORD(v55) = *(unsigned __int8 *)(v46
                                    + (673 * ((v55 >> 24) ^ 0x3D)
                                                   - 1184
                                                   * ((3627507
                                                     * (unint64_t)(673 * ((v55 >> 24) ^ 0x3D))) >> 32))) ^ ((v55 ^ 0xD) + (v55 >> 6 << 7) - 64);
  *(_BYTE *)(STACK[0x708] + 282) ^= ((_BYTE)v55 - ((2 * (_BYTE)v55) & 0xCC) - 26) ^ 0xF;
  v63 = (_BYTE *)(v41 + (LODWORD(STACK[0x6A0]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 462) ^= *v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - 298086330 - ((-1185014910 * (_DWORD)v63) & 0xDC77208C);
  LODWORD(v63) = (((v63 >> 16) ^ 0xEE3B)
                - 298086330
                - ((2 * ((v63 >> 16) ^ 0xEE3B)) & 0x1208C)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((-1185014910 * (_DWORD)v63) & 0xDE774874) + 1866179642;
  LOBYTE(v56) = *(_BYTE *)(STACK[0x708] + 944) ^ ((v63 ^ 0x3A)
                                                - 2 * ((v63 ^ 0x3A) & 0x67 ^ v63 & 1)
                                                - 26);
  *(_BYTE *)(STACK[0x708] + 944) = *(_BYTE *)(v46
                                            + (673 * ((v63 >> 24) ^ 0x97)
                                                           - 1184
                                                           * ((3627507
                                                             * (unint64_t)(673
                                                                                * ((v63 >> 24) ^ 0x97))) >> 32))) ^ (v56 + ((2 * v56) & 0x80) - 64) ^ 0xF;
  v64 = (_BYTE *)(v41 + (LODWORD(STACK[0x698]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 159) ^= *v64;
  LODWORD(v63) = 1554976193 * (_DWORD)v64 + 1741791485 - ((-1185014910 * (_DWORD)v64) & 0xCFA341FA);
  LODWORD(v63) = (((v63 >> 16) ^ 0x67D1)
                + 1741791485
                - 2 * (((v63 >> 16) ^ 0x67D1) & 0xA0FF ^ (v63 >> 16) & 2)) ^ v63;
  LODWORD(v63) = 1554976193 * (_DWORD)v63 - ((-1185014910 * (_DWORD)v63) & 0x8D9F9906) + 1188023427;
  LOBYTE(v63) = *(_BYTE *)(v46
                         + (673 * ((v63 >> 24) ^ 0xBE)
                                        - 1184
                                        * ((3627507 * (unint64_t)(673 * ((v63 >> 24) ^ 0xBE))) >> 32))) ^ ((v63 ^ 0x83) + (~(2 * (_BYTE)v63) | 0x7F) - 63);
  *(_BYTE *)(STACK[0x708] + 641) ^= ((_BYTE)v63 - ((2 * (_BYTE)v63) & 0xCC) - 26) ^ 0xF;
  v65 = (_BYTE *)(v41 + (LODWORD(STACK[0x694]) + 1175820933));
  *(_BYTE *)(STACK[0x708] + 821) ^= *v65;
  LODWORD(v65) = 1554976193 * (_DWORD)v65 - 1275038943 - ((962468738 * (_DWORD)v65) & 0x6800E642);
  LODWORD(v65) = (((v65 >> 16) ^ 0xB400)
                - 1275038943
                - 2 * (((v65 >> 16) ^ 0xB400) & 0x7339 ^ (v65 >> 16) & 0x18)) ^ v65;
  LODWORD(v65) = 1554976193 * (_DWORD)v65 - ((-1185014910 * (_DWORD)v65) & 0x96D58232) + 1265287449;
  LODWORD(v65) = *(unsigned __int8 *)(v46
                                    + (673 * ((v65 >> 24) ^ 0xB3)
                                                   - 1184
                                                   * ((3627507
                                                     * (unint64_t)(673 * ((v65 >> 24) ^ 0xB3))) >> 32))) ^ ((v65 ^ 0x19) + (v65 >> 6 << 7) - 64);
  v66 = (LODWORD(STACK[0x688]) + 1175820933);
  *(_BYTE *)(STACK[0x708] + 338) ^= ((_BYTE)v65 - ((2 * (_BYTE)v65) & 0xCC) - 26) ^ 0xF;
  *(_BYTE *)(STACK[0x708] + 518) ^= *(_BYTE *)(v41 + v66);
  LODWORD(v65) = 1554976193 * (v41 + v66) - 725603061 - ((-1185014910 * (v41 + v66)) & 0xA9805A16);
  LODWORD(v65) = (((v65 >> 16) ^ 0xD4C0)
                - 725603061
                - 2 * (((v65 >> 16) ^ 0xD4C0) & 0x2D1F ^ (v65 >> 16) & 0x14)) ^ v65;
  LODWORD(v65) = 1554976193 * (_DWORD)v65 - ((962468738 * (_DWORD)v65) & 0x2E0F954E) - 1761097049;
  v67 = (unsigned __int8 *)STACK[0x708];
  LODWORD(v65) = *(unsigned __int8 *)(v46
                                    + (673 * ((v65 >> 24) ^ 0x6F)
                                                   - 1184
                                                   * ((3627507
                                                     * (unint64_t)(673 * ((v65 >> 24) ^ 0x6F))) >> 32))) ^ ((v65 ^ 0xFFFFFFA7) + (v65 >> 6 << 7) - 64);
  *(_BYTE *)(STACK[0x708] + 35) ^= ((_BYTE)v65 - ((2 * (_BYTE)v65) & 0xCC) - 26) ^ 0xF;
  v68 = (_BYTE *)(v41 + (LODWORD(STACK[0x680]) + 1175820933));
  v67[215] ^= *v68;
  LODWORD(v68) = 1554976193 * (_DWORD)v68 - 721564755 - ((-1185014910 * (_DWORD)v68) & 0xA9FB975A);
  LODWORD(v68) = (((v68 >> 16) ^ 0xD4FD)
                - 721564755
                - ((2 * ((v68 >> 16) ^ 0xD4FD)) & 0x1975A)) ^ v68;
  LODWORD(v68) = 1554976193 * (_DWORD)v68 - ((-1185014910 * (_DWORD)v68) & 0x9F9CF5BC) - 808551714;
  v69 = (LODWORD(STACK[0x67C]) + 1175820933);
  v67[697] ^= v68 ^ *(_BYTE *)(v46
                                              + (673 * ((v68 >> 24) ^ 0x37)
                                                             - 1184
                                                             * ((3627507
                                                               * (unint64_t)(673
                                                                                  * ((v68 >> 24) ^ 0x37))) >> 32))) ^ 0xF7;
  v67[877] ^= *(_BYTE *)(v41 + v69);
  v70 = v41 + v69 + 1012053501 - ((2 * (v41 + v69)) & 0x78A56BFA);
  LODWORD(v68) = 1554976193 * (v70 ^ 0x3C52B5FD) - 1457809915 - ((962468738 * (v70 ^ 0x3C52B5FD)) & 0x52372C0A);
  LODWORD(v68) = (((v68 >> 16) ^ 0xA91B)
                - 1457809915
                - ((2 * ((v68 >> 16) ^ 0xA91B)) & 0x12C0A)) ^ v68;
  LODWORD(v68) = 1554976193 * (_DWORD)v68 - ((962468738 * (_DWORD)v68) & 0x68766F26) - 1271187565;
  LODWORD(v68) = *(unsigned __int8 *)(v46
                                    + (673 * ((v68 >> 24) ^ 0x4C)
                                                   - 1184
                                                   * ((3627507
                                                     * (unint64_t)(673 * ((v68 >> 24) ^ 0x4C))) >> 32))) ^ ((v68 ^ 0xFFFFFF93) + (v68 >> 6 << 7) - 64);
  v67[394] ^= ((_BYTE)v68 - ((2 * (_BYTE)v68) & 0xCC) - 26) ^ 0xF;
  v71 = (_BYTE *)(v41 + (LODWORD(STACK[0x670]) + 1175820933));
  v67[574] = *v71 ^ v67[272
                      * (((v70 & 0x8A407982 ^ 0x8403180 | v70 & 0x8A407982 ^ 0x82004802) + 362394741) ^ 0x9FDA2F61)
                      % 0x3C5];
  LODWORD(v71) = 1554976193 * (_DWORD)v71 - 467416121 - ((-1185014910 * (_DWORD)v71) & 0xC847978E);
  LODWORD(v71) = (((v71 >> 16) ^ 0xE423)
                - 467416121
                - ((2 * ((v71 >> 16) ^ 0xE423)) & 0x1978E)) ^ v71;
  LODWORD(v71) = 1554976193 * (_DWORD)v71 - ((962468738 * (_DWORD)v71) & 0x5C30F1F4) - 1374127878;
  LODWORD(v69) = 673 * ((v71 >> 24) ^ 0x56)
               - 1184 * ((3627507 * (unint64_t)(673 * ((v71 >> 24) ^ 0x56))) >> 32);
  LODWORD(v71) = v67[91] ^ ((v71 ^ 0xFFFFFFFA) - ((2 * (v71 ^ 0xFFFFFFFA)) & 0xFFFFFFCC) - 26);
  v72 = (2 * (_DWORD)v71) & 0x80;
  v67[91] = *(_BYTE *)(v46 + v69) ^ ((_BYTE)v71 + ((2 * (_BYTE)v71) & 0x80) - 64) ^ 0xF;
  v73 = (_BYTE *)(v41 + (LODWORD(STACK[0x668]) + 1175820933));
  v67[271] ^= *v73;
  v74 = 1554976193 * (_DWORD)v73 - 302142511 - ((-1185014910 * (_DWORD)v73) & 0xDBFB57A2);
  v75 = ((HIWORD(v74) ^ 0xEDFD) - 302142511 - ((2 * (HIWORD(v74) ^ 0xEDFD)) & 0x157A2)) ^ v74;
  v76 = 1554976193 * v75 - ((962468738 * v75) & 0x2BD71D2E) + 367758999;
  v77 = *(unsigned __int8 *)(v46
                           + (673 * (HIBYTE(v76) ^ 0xED)
                                          - 1184 * ((3627507 * (unint64_t)(673 * (HIBYTE(v76) ^ 0xED))) >> 32))) ^ ((v76 ^ 0xFFFFFF97) + (v76 >> 6 << 7) - 64);
  v67[753] ^= (v77 + (~(2 * v77) | 0x33) - 25) ^ 0xF;
  return (*(uint64_t (**)(unint64_t, uint64_t, uint64_t, unsigned __int8 *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(STACK[0x6D0] + 8 * v40))(v41, 4294967244, 73868, v67, v72, 1184, 103283, 673, a3, a4, a5, a6, a7, a8, a9, a10, a11, a12, a13,
           a14,
           a15,
           a16,
           a17,
           a18,
           a19,
           a20,
           a21,
           a22,
           a23,
           a24,
           a25,
           a26,
           a27,
           a28,
           a29,
           a30,
           a31,
           a32);
}

void sub_2477FE808()
{
  JUMPOUT(0x2477FD5FCLL);
}

uint64_t sub_2477FE810@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned __int8 *v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int *v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  unsigned int v46;
  int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  unsigned int v80;
  int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  int v91;
  unsigned int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;

  LODWORD(STACK[0x630]) = v2;
  LODWORD(STACK[0x634]) = a1;
  LODWORD(STACK[0x648]) = 12 * (v3 ^ 0x789);
  LODWORD(STACK[0x6F0]) = 174768;
  LODWORD(STACK[0x6E8]) = 175430;
  LODWORD(STACK[0x6E4]) = 176092;
  LODWORD(STACK[0x6E0]) = 176754;
  LODWORD(STACK[0x6DC]) = 177416;
  LODWORD(STACK[0x640]) = 178740;
  LODWORD(STACK[0x6C8]) = 179402;
  LODWORD(STACK[0x638]) = 180064;
  LODWORD(STACK[0x6C0]) = 180726;
  LODWORD(STACK[0x6BC]) = 395876;
  LODWORD(STACK[0x6B0]) = 396538;
  LODWORD(STACK[0x6A8]) = 397200;
  LODWORD(STACK[0x6A0]) = 398524;
  LODWORD(STACK[0x698]) = 399186;
  LODWORD(STACK[0x694]) = 399848;
  LODWORD(STACK[0x688]) = 400510;
  LODWORD(STACK[0x680]) = 401172;
  LODWORD(STACK[0x67C]) = 401834;
  LODWORD(STACK[0x670]) = 402496;
  LODWORD(STACK[0x668]) = 403158;
  LODWORD(STACK[0x660]) = 393228;
  LODWORD(STACK[0x658]) = 173444;
  LODWORD(STACK[0x654]) = 178078;
  v4 = STACK[0x64C];
  v5 = STACK[0x644];
  v6 = STACK[0x62C];
  v7 = STACK[0x628];
  LODWORD(STACK[0x644]) = 0;
  LODWORD(STACK[0x5FC]) = 397862;
  LODWORD(STACK[0x624]) = 171458;
  v8 = (LODWORD(STACK[0x648]) - 1834535965) & 0x6D58CFFD;
  LODWORD(STACK[0x64C]) = v8;
  LODWORD(STACK[0x628]) = 167991;
  v9 = v8 - 965 * ((v8 + 167991) / 0x3C5u) + 167991;
  v10 = (unsigned __int8 *)STACK[0x708];
  v11 = ((*(unsigned __int8 *)(STACK[0x708] + v9) ^ 0xB0) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + 653) ^ 0xB0) << 16);
  LODWORD(STACK[0x620]) = 172120;
  v12 = v11 | ((v10[350] ^ 0xB0) << 8);
  LODWORD(STACK[0x62C]) = 282;
  LODWORD(STACK[0x600]) = 395214;
  LODWORD(STACK[0x61C]) = 172782;
  v13 = v10[47] ^ 0xE6;
  LODWORD(STACK[0x604]) = 394552;
  v14 = (v12 | v13) + 189721639 - 2 * ((v12 | v13) & 0xB4EEC79 ^ v13 & 8) + 74;
  v15 = v14 ^ (v6 - 542992620);
  v16 = (unsigned int *)STACK[0x6F8];
  *(_DWORD *)(STACK[0x6F8] + 392) = v15 ^ 0x6B0018AC;
  LODWORD(STACK[0x608]) = 393890;
  v17 = v14 ^ (v1 - 2 * ((v1 + 119897840) & 0xB4EEC7F ^ v1 & 0xE) - 1032557727);
  v18 = v10[529] ^ 0xE6;
  v19 = ((v10[393228 - 965 * (LODWORD(STACK[0x660]) / 0x3C5)] ^ 0xE6) << 24) | ((v10[832] ^ 0xE6) << 8) | ((v10[170] ^ 0xE6) << 16) | v18;
  v20 = v19 + 1369600477 - 2 * (v19 & 0x51A271DF ^ v18 & 2);
  v21 = v20 ^ v7;
  v22 = (v17 ^ 0xFFFFFFA9) + (v17 ^ v20 ^ v7 ^ 0xC521BBA8);
  v23 = 393228 - 965 * (LODWORD(STACK[0x6A8]) / 0x3C5);
  v24 = ((v4 ^ 0xEF9410) + (v4 ^ 0x3A31D011 ^ v20 ^ v7) + 1) ^ ((v7 ^ 0x6B7C35DC) + (v20 ^ 0x51A271DD) + 1);
  v25 = 173444 - 965 * (LODWORD(STACK[0x6E8]) / 0x3C5);
  v26 = LODWORD(STACK[0x630]) - 1242271258;
  *v16 = v21 ^ 0x8FE40211;
  v27 = v4;
  v28 = STACK[0x634];
  v29 = (v24 ^ (v22 + 1))
      - LODWORD(STACK[0x634])
      - ((2 * ((v24 ^ (v22 + 1)) - LODWORD(STACK[0x634])) + 1560918482) & 0x958B73DE);
  v30 = 173444 - 965 * (LODWORD(STACK[0x6F0]) / 0x3C5);
  v16[260] = v29 - 112552232;
  LODWORD(STACK[0x610]) = 174106;
  v16[254] = v26 + (v15 ^ 0xB4EEC27) + 76250368 - ((2 * (v26 + (v15 ^ 0xB4EEC27)) + 1938523682) & 0x958B73DE);
  v31 = v6 + v5 - ((2 * (v6 + v5) + 971782246) & 0x2DAA0C10) + 1405821499;
  v32 = v31 ^ (v1 - 1222279440);
  v33 = v10[v30 + 1324];
  v34 = ((v10[173444 - 965 * (LODWORD(STACK[0x658]) / 0x3C5)] ^ 0xB0) << 24) | ((v10[406] ^ 0xB0) << 16);
  LODWORD(STACK[0x630]) = v32 ^ 0x96D50608;
  v35 = v10[v25 + 1986] ^ 0xE6;
  v36 = (v34 | ((v33 ^ 0xB0) << 8) | v35) + 1606845337 - 2 * ((v34 | ((v33 ^ 0xB0) << 8) | v35) & 0x5FC6839B ^ v35 & 2);
  v37 = v36 ^ ((v32 ^ 0x96D50608) + 759110277);
  v16[23] = v37 ^ 0x3F887744;
  v38 = LODWORD(STACK[0x650]) - 1443909640;
  v39 = v38 + (v7 ^ 0x9483CA23) - 1631681229 - ((2 * (v38 + (v7 ^ 0x9483CA23))) & 0x3D7D0A66);
  v40 = v39 ^ v27;
  v41 = v32 ^ 0x96D50608 ^ (v5 - 581728993);
  v32 ^= 0x692AF9F7u;
  v42 = v26 + v32;
  v43 = v32 + v41 + 1353985592 - ((2 * (v32 + v41 + 1)) & 0xA1685C6E);
  v44 = v40 ^ 0x61AEEEDC;
  v45 = v28 - 1878920323 + (v40 ^ 0x9E511123);
  v46 = (v40 ^ 0x9E511123) + (v40 ^ 0x61AEEEDC ^ v38) + 1;
  v47 = v46 - ((2 * v46) & 0x5A1FC860) + 756016176;
  v48 = (v31 ^ 0x96D50608)
      + (v43 ^ 0xAF4BD1C8)
      + 317675150
      - ((2 * ((v31 ^ 0x96D50608) + (v43 ^ 0xAF4BD1C8) + 1)) & 0x25DEAD1A);
  v49 = (v39 ^ 0x9EBE8533)
      + (v47 ^ 0xD2F01BCF)
      + 2057053863
      - ((2 * ((v39 ^ 0x9EBE8533) + (v47 ^ 0xD2F01BCF) + 1)) & 0xF5384D4C);
  v50 = ((2 * (v44 + 759110277)) & 0x9ABEEFBE) + ((v44 + 759110277) ^ 0x4D5F77DF);
  v51 = ((v10[395876 - 965 * (LODWORD(STACK[0x6BC]) / 0x3C5)] ^ 0xE6) << 24) | ((v10[396538
                                                                                   - 965
                                                                                   * (LODWORD(STACK[0x6B0])
                                                                                    / 0x3C5)] ^ 0xE6) << 16) | v10[LODWORD(STACK[0x62C])] ^ 0xE6 | ((v10[v23 + 3972] ^ 0xE6) << 8);
  v52 = v51 - 88456452 - ((2 * v51) & 0xF57485F8);
  v53 = ((v50 - 1298102239) ^ 0xFABA42FC ^ v52)
      + 1254472175
      - ((2 * ((v50 - 1298102239) ^ 0xFABA42FC ^ v52)) & 0x958B73DE);
  v54 = (v49 ^ 0x8563D959) + (v49 ^ 0x30599F49 ^ v53);
  LODWORD(STACK[0x650]) = 404709 - 965 * (LODWORD(STACK[0x668]) / 0x3C5);
  v55 = v36 ^ v48;
  v16[208] = v53;
  v56 = v36 ^ v48 ^ 0x7EC6CAD ^ v53;
  LODWORD(STACK[0x634]) = 397862 - 965 * (LODWORD(STACK[0x688]) / 0x3C5);
  v57 = v43 ^ (v42 + 1);
  v58 = (v55 ^ 0xB2D62ABD) + v56;
  v59 = (v37 ^ 0x5FC683CF) + (v57 ^ 0x50B42E37);
  v60 = 1298102239 - v50 + (v52 ^ 0xFABA42FC);
  v61 = 397862 - 965 * (LODWORD(STACK[0x694]) / 0x3C5);
  v62 = v47 ^ (v45 + 1);
  v63 = (v62 ^ 0xD2F01BCF) + ((v54 + 1) ^ v60 ^ (v58 + 1));
  v64 = 397862 - 965 * (LODWORD(STACK[0x698]) / 0x3C5);
  v16[185] = v59 - 1991472555 - ((2 * v59 + 2098045132) & 0x958B73DE);
  v65 = 178078 - 965 * (LODWORD(STACK[0x654]) / 0x3C5);
  v16[179] = v63 + 76250369 - ((2 * (v63 + 1) + 1938523682) & 0x958B73DE);
  v66 = v47 ^ 0x5793C296 ^ v49;
  v67 = v49 ^ v62;
  v68 = ((2 * ((v49 ^ 0x7A9C26A6) + 1507285244)) & 0xEFFE5E76) + (((v49 ^ 0x7A9C26A6) + 1507285244) ^ 0x77FF2F3B);
  v69 = v66 + 2013212475 - v68 - ((2 * (v66 + 2013212475 - v68)) & 0xAE9C590A);
  v70 = v48 ^ v57;
  v71 = (((v10[176092 - 965 * (LODWORD(STACK[0x6E4]) / 0x3C5)] ^ 0xB0) << 24) | ((v10[176754
                                                                                    - 965
                                                                                    * (LODWORD(STACK[0x6E0])
                                                                                     / 0x3C5)] ^ 0xB0) << 16) | ((v10[177416 - 965 * (LODWORD(STACK[0x6DC]) / 0x3C5)] ^ 0xB0) << 8) | v10[v65] ^ 0xE6) ^ v70;
  v16[231] = v71 ^ 0xE5860433;
  v72 = ((2 * ((v48 ^ 0x12EF568D) + 1507285244)) & 0xFAFF7F1A) + (((v48 ^ 0x12EF568D) + 1507285244) ^ 0xFD7FBF8D);
  v73 = (v43 ^ 0x425B78BA ^ v48)
      - 41959539
      - v72
      - 260677650
      - ((2 * ((v43 ^ 0x425B78BA ^ v48) - 41959539 - v72)) & 0xE0ECDD6E);
  v74 = v50 - v68 - ((2 * (v50 - v68) + 1430220472) & 0x761C2A54) - 441594746;
  v75 = LODWORD(STACK[0x630]) - v72 - ((2 * (LODWORD(STACK[0x630]) - v72) + 1434301476) & 0x5C138360) + 1489542082;
  v76 = (v75 ^ 0xD1F63E4F)
      + (v48 ^ 0x12EF568D)
      - ((2 * ((v75 ^ 0xD1F63E4F) + (v48 ^ 0x12EF568D)) + 867086842) & 0x5906B650);
  v77 = v75 ^ v70;
  v78 = (v74 ^ 0x44F1EAD5) + v68 - ((2 * ((v74 ^ 0x44F1EAD5) + v68) + 268542348) & 0xD5483C18) + 1923411666;
  v79 = v74 ^ v67;
  v80 = v76 - 2040875995;
  v81 = (((v10[398524 - 965 * (LODWORD(STACK[0x6A0]) / 0x3C5)] ^ 0xE6) << 24) | ((v10[v64 + 1324] ^ 0xE6) << 16) | ((v10[v61 + 1986] ^ 0xE6) << 8) | v10[LODWORD(STACK[0x634]) + 2648] ^ 0xE6) ^ v67;
  v16[133] = v81 ^ 0xDAC5F32D;
  v82 = ((v76 - 2040875995) ^ v75 ^ v70 ^ v81 ^ 0x2F2E571F) + (v71 ^ 0x55195858 ^ (v76 - 2040875995) ^ v75 ^ v70 ^ v81);
  v83 = (v81 ^ 0x90004AC2)
      + (v70 ^ 0x85C8F0EE)
      - 1991472555
      - ((2 * ((v81 ^ 0x90004AC2) + (v70 ^ 0x85C8F0EE)) + 2098045132) & 0x958B73DE);
  v84 = 404709 - 965 * (LODWORD(STACK[0x670]) / 0x3C5);
  v85 = 397862 - 965 * (LODWORD(STACK[0x67C]) / 0x3C5);
  v86 = (v67 ^ 0x6FFFB53D)
      + (((v74 ^ v67 ^ 0x13622843) + (v74 ^ v67 ^ v71 ^ 0x69552704) + 1) ^ ((v78 ^ 0x155BE1F3)
                                                                          + (v78 ^ v71 ^ 0x6F6CEEB4)
                                                                          + 1) ^ (v82 + 1));
  v87 = 397862 - 965 * (LODWORD(STACK[0x680]) / 0x3C5);
  v16[110] = v83;
  v88 = 178078 - 965 * (LODWORD(STACK[0x6C0]) / 0x3C5);
  v89 = v69 + 1464740997;
  v73 += 3785;
  v16[104] = v86 + 76250369 - ((2 * (v86 + 1) + 1938523682) & 0x958B73DE);
  v90 = v77 ^ 0x6C52B90A;
  v91 = ((v73 ^ 0xF899148) + (v77 ^ 0x6C52B90A) + 1) ^ v75;
  v92 = ((2 * v91) & 0xD73FBE7E ^ 0xD3349248) + (v91 ^ 0x820596DB);
  v93 = STACK[0x644];
  v94 = ((2 * ((v75 ^ 0xE99A49E4) - 1196423713)) & 0xDBBFFFFE) + (((v75 ^ 0xE99A49E4) - 1196423713) ^ 0xEDDFFFFF);
  v95 = v78 ^ 0xEAA41E0C;
  v96 = v79 ^ 0xEC9DD7BC;
  v97 = v95 + (v79 ^ 0xEC9DD7BC);
  v98 = ((2 * (((v89 ^ 0xA8B1D37A) + v96 + 1) ^ v74)) & 0xDFAF5FFE ^ 0xD92B1AFC)
      + (((v89 ^ 0xA8B1D37A) + v96 + 1) ^ v74 ^ 0x934A3281);
  v99 = (v73 ^ 0xF1DEC123) - v92;
  v100 = (v80 ^ 0x2C835B28) + v90 - v99;
  v101 = (v89 ^ 0x56E68311) - v98;
  v102 = (((v10[178740 - 965 * (LODWORD(STACK[0x640]) / 0x3C5)] ^ 0xB0) << 24) | ((v10[179402
                                                                                     - 965
                                                                                     * (LODWORD(STACK[0x6C8])
                                                                                      / 0x3C5)] ^ 0xB0) << 16) | ((v10[180064 - 965 * (LODWORD(STACK[0x638]) / 0x3C5)] ^ 0xB0) << 8) | v10[v88 + 2648] ^ 0xE6) ^ (v99 + 1805639487);
  v103 = v102 - 1924020439 - ((2 * v102) & 0x1AA38E52);
  v16[156] = v103 ^ 0xED1F33F4;
  v104 = (((v10[v87 + 3310] ^ 0xE6) << 24) | ((v10[v85 + 3972] ^ 0xE6) << 16) | ((v10[v84 - 2213] ^ 0xE6) << 8) | v10[LODWORD(STACK[0x650]) - 1551] ^ 0xE6) ^ (v101 - 271077377);
  v105 = v104 + 1254472175 - ((2 * v104) & 0x958B73DE);
  v106 = ((-271077377 - (v97 - v101) + ((v97 - v101 + 271077377) ^ 0x4AC5B9EF ^ v105)) ^ (-271077377
                                                                                        - v98
                                                                                        + ((v98 + 271077377) ^ 0x4AC5B9EF ^ v105)) ^ (((v100 - 1805639487) ^ (v92 - 1805639487) ^ v103 ^ 0x72AE3880) + ((v100 - 1805639487) ^ (v92 - 1805639487) ^ v103 ^ v105 ^ 0xC7947E90) + 1))
       - (((2 * ((v74 ^ 0x7C9D9D7E) - 1196423713)) & 0xEBCCEF6A)
        + (((v74 ^ 0x7C9D9D7E) - 1196423713) ^ 0x75E677B5));
  v16[58] = v105;
  v16[35] = v106 - ((2 * v106 + 1759154230) & 0x958B73DE) - 13434358;
  v16[29] = v94
          + 304087041
          + (v103 ^ 0x8D51C77F)
          + 76250368
          - ((2 * (v94 + 304087041 + (v103 ^ 0x8D51C77F)) + 1938523682) & 0x958B73DE);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0]
                                        + 8
                                        * (((2 * ((v93 + 4) < 0x10)) | (8
                                                                                    * ((v93 + 4) < 0x10))) ^ LODWORD(STACK[0x648])))
                            - 4))();
}

void sub_2477FFD0C(int a1@<W2>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;

  LODWORD(STACK[0x630]) = v3;
  LODWORD(STACK[0x634]) = a2;
  LODWORD(STACK[0x650]) = v4;
  LODWORD(STACK[0x668]) += 10592;
  LODWORD(STACK[0x670]) += 10592;
  LODWORD(STACK[0x67C]) += 10592;
  LODWORD(STACK[0x680]) += 10592;
  LODWORD(STACK[0x6C0]) += 10592;
  LODWORD(STACK[0x638]) = a1 + 10592;
  LODWORD(STACK[0x6C8]) += 10592;
  LODWORD(STACK[0x640]) = v2 + 10592;
  LODWORD(STACK[0x688]) += 10592;
  LODWORD(STACK[0x694]) += 10592;
  LODWORD(STACK[0x698]) += 10592;
  LODWORD(STACK[0x6A0]) += 10592;
  LODWORD(STACK[0x654]) += 10592;
  LODWORD(STACK[0x6DC]) += 10592;
  LODWORD(STACK[0x6E0]) += 10592;
  LODWORD(STACK[0x6E4]) += 10592;
  LODWORD(STACK[0x6A8]) += 10592;
  LODWORD(STACK[0x6B0]) += 10592;
  LODWORD(STACK[0x6BC]) += 10592;
  LODWORD(STACK[0x6E8]) += 10592;
  LODWORD(STACK[0x6F0]) += 10592;
  LODWORD(STACK[0x658]) += 10592;
  LODWORD(STACK[0x660]) += 10592;
  JUMPOUT(0x2477FE96CLL);
}

uint64_t sub_2477FFE84@<X0>(int a1@<W0>, int a2@<W8>)
{
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  int v10;
  unint64_t v11;
  unsigned int v12;
  unsigned int v13;
  _DWORD *v14;
  int v15;
  unint64_t v16;
  int v17;
  int v18;
  int v19;
  int v20;
  unsigned int v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  unsigned int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  int v55;
  int v56;
  unsigned int v57;
  int v58;
  unsigned int v59;
  unsigned int v60;
  unsigned int v61;
  unint64_t v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  unsigned int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  unsigned int v114;
  int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  int v174;
  int v175;
  int v176;
  int v177;
  unsigned int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unint64_t v182;
  int v183;
  int v184;

  v9 = STACK[0x64C];
  LODWORD(STACK[0x6E8]) = 0;
  LODWORD(STACK[0x698]) = 2912;
  v10 = 86 * (v9 ^ 0xAD5);
  v11 = STACK[0x6F8];
  v12 = *(_DWORD *)(STACK[0x6F8] + 92);
  LODWORD(STACK[0x688]) = v10;
  LODWORD(STACK[0x694]) = 208;
  v13 = *(_DWORD *)(v11 + 4 * (0xD0u % (v10 - 2469)));
  v14 = (_DWORD *)v11;
  HIDWORD(v16) = v12 ^ 0xB;
  LODWORD(v16) = v12 ^ 0x604EF480;
  v15 = v16 >> 7;
  HIDWORD(v16) = v12 ^ LODWORD(STACK[0x5D0]);
  LODWORD(v16) = v12 ^ 0x604C0000;
  v17 = v16 >> 18;
  HIDWORD(v16) = v13 ^ 0xFFFFFFEF;
  LODWORD(v16) = v13 ^ 0x4AC5B980;
  v18 = v15 ^ (v12 >> 3) ^ v17;
  v19 = (v16 >> 7) ^ (v13 >> 3);
  HIDWORD(v16) = v13 ^ 0x1B9EF;
  LODWORD(v16) = v13 ^ 0x4AC40000;
  v20 = v19 ^ (v16 >> 18);
  v21 = *(_DWORD *)(v11 + 720);
  HIDWORD(v16) = v21 ^ 0xF48B;
  LODWORD(v16) = v21 ^ 0x604E0000;
  v22 = (v16 >> 17) - ((2 * (v16 >> 17)) & 0x7B5C5DE2) - 1112658191;
  HIDWORD(v16) = v21 ^ 0x6F48B;
  LODWORD(v16) = v21 ^ 0x60480000;
  v23 = *(_DWORD *)(v11 + 328);
  v24 = (v23 ^ 0x4AC5B9EF) << ((v22 & 0xF ^ 1) + (v22 & 0xF ^ 0xE));
  v25 = (v16 >> 19) ^ (v21 >> 10) ^ v22;
  HIDWORD(v16) = v23 ^ 0x5B9EF;
  LODWORD(v16) = v23 ^ 0x4AC00000;
  v26 = v16 >> 19;
  v27 = v7 - 2 * ((v7 + 1604491028) & 0x4E615B47 ^ v7 & 3) - 1375473064;
  HIDWORD(v16) = v6 ^ 0x648DCD2 ^ v20;
  LODWORD(v16) = v6 ^ ~v20;
  v28 = v16 >> 28;
  HIDWORD(v16) = v28 ^ 0x55555555;
  LODWORD(v16) = v28 ^ 0x937D6320;
  v29 = (v2 - ((2 * v2 + 1850408416) & 0x9CC2B688) - 2054759884) ^ v27 ^ v18;
  v30 = (v23 >> 10) ^ (v23 >> 17) ^ v26 ^ v24;
  v31 = ((v29 ^ 0xF3F6216E) + (v29 ^ 0x55169AC ^ v20) + 1) ^ ((v8 ^ 0x6B7C35DC) + (v8 ^ 0x9DDB7D1E ^ v20) + 1) ^ ((v6 ^ 0xEF9410) + ((v16 >> 4) ^ 0x5937D632) + 1);
  v32 = v2 - 2 * ((v2 + 388333296) & 0x14752E17 ^ v2 & 7) + 1268428032;
  v33 = ((2 * (v5 + 2036611265 + (v32 ^ 0x6B8AD1EF))) & 0x57D7EDCE)
      + ((v5 + 2036611265 + (v32 ^ 0x6B8AD1EF)) ^ 0xABEBF6E7);
  v34 = ((v3 - 1242271258) ^ 0x94752E10 ^ v32)
      - ((2 * ((v3 - 1242271258) ^ 0x94752E10 ^ v32) + 1891836984) & 0x765B2F46)
      + 865020351;
  v35 = v32 ^ v27;
  v36 = v6 ^ a1;
  v37 = v6 ^ a1 ^ (a2 - 1878920323);
  v38 = ((2 * ((v6 ^ 0xEF9410) + v4 + 1174430618)) & 0xF7F3D6BE) + (((v6 ^ 0xEF9410) + v4 + 1174430618) ^ 0xFBF9EB5F);
  v39 = v36 + (v8 ^ v6 ^ 0x946C5E33) + 1;
  v40 = (v35 ^ 0xA5EB8AAB) + v2 - ((2 * ((v35 ^ 0xA5EB8AAB) + v2) + 1680106836) & 0xC4A7F25E) + 342240217;
  LODWORD(v11) = v37 - ((2 * v37 - 255646664) & 0xCAB1D25A) - 574981303;
  v41 = v11 ^ v8 ^ v6;
  LODWORD(STACK[0x6BC]) = v41;
  LODWORD(STACK[0x6C0]) = v11;
  LODWORD(STACK[0x6E4]) = v34;
  LODWORD(STACK[0x6B0]) = v34 ^ v35;
  v42 = v39 - ((2 * v39 + 1977182066) & 0x743A83CE) - 1257638496;
  LODWORD(STACK[0x6C8]) = v40;
  v43 = v42 ^ 0x3A0FD5EB ^ v30;
  v44 = (v34 ^ v35 ^ v40 ^ v25 ^ 0x4123D96B) + (v30 ^ v34 ^ v35 ^ v40 ^ v25 ^ 0xBECEB298) + 1;
  v45 = (v41 ^ 0xF134B71E) + (v41 ^ 0xED9DCED ^ v30) + 1;
  v46 = v25 ^ 0xBDB63D4C;
  v47 = v45 ^ ((v42 ^ 0xC5E2BE18) + v43 + 1) ^ v44;
  LODWORD(STACK[0x6E0]) = v33;
  v48 = v33 - ((2 * v33 - 1413645428) & 0xCF319790) + 1031244174;
  v49 = ((2 * (v48 ^ v40)) & 0xBBDC76FC ^ 0xB9464CC) + (v48 ^ v40 ^ 0xD8250999);
  LODWORD(STACK[0x6DC]) = v38;
  v50 = v38 - ((2 * v38 + 195138204) & 0x372EC2AA) - 1587008861;
  v51 = ((2 * (v50 ^ v42)) & 0xB7EEFF2E ^ 0x3044124) + (v50 ^ v42 ^ 0xFA7D5F25);
  v52 = ((2 * ((v48 ^ 0xE798CBC8) - v49 - 571589762)) & 0xE7E8E7DE)
      + (((v48 ^ 0xE798CBC8) - v49 - 571589762) ^ 0xF3F473EF);
  LODWORD(STACK[0x6A8]) = v52;
  v53 = ((2 * ((v50 ^ 0x9B976155) - v51 + 1542946711)) & 0xEFED10A6)
      + (((v50 ^ 0x9B976155) - v51 + 1542946711) ^ 0x77F68853);
  LODWORD(STACK[0x6F0]) = v53;
  v54 = (v11 ^ 0x9AA716D2) - a2 + (v14[260] ^ 0x4AC5B9EF) + (v14[151] ^ 0x4AC5B9EF) + v47 - 219124808 + v31;
  v55 = v54 + v52 + 202083345;
  v14[192] = v54 - 1991472555 - ((2 * v54 + 2098045132) & 0x958B73DE);
  v56 = v14[254];
  v57 = v55 + 976339792 - ((2 * v55) & 0x746386A0);
  LODWORD(STACK[0x6A0]) = 0;
  v58 = v14[145] ^ 0x4AC5B9EF;
  v59 = v3 + (v56 ^ 0x4AC5B9EF) + (v34 ^ 0xBB2D97A3) + (v18 ^ 0xC09DE91) - 64049451 + v46;
  v60 = ((2 * v59) & 0xDD7FBF5E) + (v59 ^ 0x6EBFDFAF);
  v14[186] = v58 - 1858068399 + v60 + 1254472175 - ((2 * (v58 - 1858068399 + v60)) & 0x958B73DE);
  v61 = v60 + v58 - v53 + 2066488126 - ((2 * (v60 + v58 - v53) + 518114086) & 0x57766B56);
  v62 = STACK[0x708];
  v63 = 662 * (HIBYTE(v57) & 0xF ^ 0xA) + 439568;
  v64 = 662 * ((v57 >> 20) & 0xF ^ 3) + 439568;
  v65 = 662 * (HIWORD(v57) & 0xF ^ 1) + 439568;
  v66 = 662 * (((unsigned __int16)(v54 + v52 - 29679 - 15536 - ((2 * (v54 + v52 - 29679)) & 0x86A0)) >> 12) ^ 0xC)
      + 439568;
  v67 = ((*(unsigned __int8 *)(STACK[0x708] + (v63 - 965 * ((4450744 * (unint64_t)v63) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (662 * ((v57 >> 28) ^ 3) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v57 >> 28) ^ 3) + 439568)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(STACK[0x708] + (v65 - 965 * ((4450744 * (unint64_t)v65) >> 32))) ^ 0xE6;
  v68 = *(unsigned __int8 *)(STACK[0x708] + (v66 - 965 * ((4450744 * (unint64_t)v66) >> 32))) ^ 0xE6;
  v69 = 662 * ((v57 >> 8) & 0xF ^ 3) + 439568;
  v70 = 662 * ((v57 >> 4) ^ 5) + 439568;
  v71 = ((v67 << 8) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                           + (v64 - 965 * ((4450744 * (unint64_t)v64) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(STACK[0x708] + (v69 - 965 * ((4450744 * (unint64_t)v69) >> 32))) ^ 0xE6) ^ (16 * v68);
  v72 = (v71 << 8) + 1544659837 - ((v71 << 9) & 0xB8234600);
  v73 = 662 * (HIBYTE(v61) & 0xF ^ 0xB) + 439568;
  v74 = *(unsigned __int8 *)(STACK[0x708]
                           + (662 * (v55 & 0xF)
                                          + 439568
                                          - 965 * ((4450744 * (unint64_t)(662 * (v55 & 0xFu) + 439568)) >> 32))) ^ 0xE6;
  v75 = v74 - 1494338591 - ((2 * v74) & 0xFFFFFFC3);
  v76 = 662 * ((v61 >> 20) & 0xF ^ 0xB) + 439568;
  v77 = (v72 ^ 0x5C11A37D | v75 ^ 0xA6EE33E1) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x708]
                                                                     + (v70
                                                                                    - 965
                                                                                    * ((4450744 * (unint64_t)v70) >> 32))) ^ 0xE6));
  v78 = ((*(unsigned __int8 *)(STACK[0x708] + (v73 - 965 * ((4450744 * (unint64_t)v73) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (662 * ((v61 >> 28) ^ 2) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v61 >> 28) ^ 2) + 439568)) >> 32))) ^ 0xE6) << 12);
  v79 = 662 * (HIWORD(v61) & 0xF ^ 0xB) + 439568;
  v80 = *(unsigned __int8 *)(STACK[0x708] + (v76 - 965 * ((4450744 * (unint64_t)v76) >> 32))) ^ 0xE6;
  v81 = 662 * (((unsigned __int16)v61 >> 12) ^ 3) + 439568;
  v82 = v78 | *(unsigned __int8 *)(STACK[0x708] + (v79 - 965 * ((4450744 * (unint64_t)v79) >> 32))) ^ 0xE6;
  v83 = *(unsigned __int8 *)(STACK[0x708] + (v81 - 965 * ((4450744 * (unint64_t)v81) >> 32)));
  v84 = v61 & 0xF ^ 0xB;
  v85 = 662 * ((v61 >> 8) & 0xF ^ 5) + 439568;
  v86 = 796400649 - (v75 & 0xF ^ 0xC | 0x2F781C09) + (v75 & 0xF ^ 0xC | 0xD087E3F6);
  v87 = (v82 << 8) ^ (v80 << 12);
  v88 = 662 * ((v61 >> 4) ^ 0xA) + 439568;
  v89 = *(unsigned __int8 *)(STACK[0x708] + (v85 - 965 * ((4450744 * (unint64_t)v85) >> 32))) ^ 0xE6;
  v90 = ((v87 | v89) << 8) + 440739403 - (((v87 | v89) << 9) & 0x348A4C00);
  v91 = v90 ^ ((v83 ^ 0xE6) << 12);
  v92 = *(unsigned __int8 *)(STACK[0x708]
                           + (662 * v84
                                          + 439568
                                          - 965
                                          * ((4450744 * (unint64_t)(662 * v84 + 439568)) >> 32))) ^ 0xE6;
  v93 = v92 + 802087796 - ((2 * v92) & 0xE8);
  v94 = (v91 ^ 0x1A45264B | v93 ^ 0x2FCEE374) ^ (16
                                               * (*(unsigned __int8 *)(STACK[0x708]
                                                                     + (v88
                                                                                    - 965
                                                                                    * ((4450744 * (unint64_t)v88) >> 32))) ^ 0xE6));
  v95 = v86 ^ 0xD087E3FB;
  v96 = (16 * (v93 & 0xF)) ^ 0x40 | v86 ^ 0xD087E3FB;
  v97 = 662 * ((v96 + 1247763830 - ((2 * v96) & 0x14BEBAEC)) ^ 0x4A5F5D76);
  v98 = ((v77 >> 4) ^ 0x20449C07) & 0xFFF882A ^ 0xBDED0150 ^ (((2 * ((v77 >> 4) ^ 0x20449C07)) & 0x4AC0040)
                                                            - (((v77 >> 4) ^ 0x20449C07) & 0xFFF8825)
                                                            - 1112962731);
  v99 = 662
      * (*(unsigned __int8 *)(STACK[0x708] + (v97 + 466048) % 0x3C5) ^ (16
                                                                      * (*(unsigned __int8 *)(STACK[0x708] + 493) ^ 0xE6)) ^ 0xE6);
  LOBYTE(v83) = *(_BYTE *)(STACK[0x708] + (v99 + 466048) % 0x3C5);
  v100 = (*(unsigned __int8 *)(STACK[0x708] + (v99 - 965 * ((4450744 * (unint64_t)v99) >> 32))) >> 4) ^ 0xE;
  v101 = 662 * ((v100 - ((2 * v100) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v97 % 0x3C5))
       + 466048;
  v102 = (((2 * v98) & 0x8A6008E) - v98 + 2074934184) ^ 0x7BE873AA;
  v103 = 662 * (((v102 | v94 & 0xF0) - 539961759 - ((2 * (v102 | v94 & 0xF0)) & 0xBFA1ACC2)) ^ 0xDFD0D661);
  v104 = *(unsigned __int8 *)(STACK[0x708] + v103 % 0x3C5);
  v105 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v103 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (v101 - 965 * ((4450744 * (unint64_t)v101) >> 32))) ^ 0xE6)) ^ 0xE6);
  v106 = v105 + 466048 - 965 * (((8901487 * (unint64_t)(v105 + 466048)) >> 32) >> 1);
  v107 = *(unsigned __int8 *)(STACK[0x708] + (v105 - 965 * ((4450744 * (unint64_t)v105) >> 32)));
  v108 = (((v107 >> 4) ^ 0xE) - 2 * (((v107 >> 4) ^ 0xE) & 7 ^ ((v107 & 0x10) != 0)) - 26) ^ v104;
  v109 = ((2 * v108) & 0xFFFFFFEF) + (v108 ^ 0xE6E6BEF7);
  LOBYTE(v108) = (v83 ^ 0xE6) - ((2 * (v83 ^ 0xE6)) & 0x1A);
  v110 = (v94 >> 4) & 0xF0 | (v77 >> 8) & 0xF;
  v111 = 662 * ((v110 + 353184112 - 2 * (v110 & 0x7D ^ (v77 >> 8) & 0xD)) ^ 0x150D2970);
  v112 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v111 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + ((v109 + 421086484)
                                                                                               * (v109 + 421086484)
                                                                                               - 109561
                                                                                               + (-421086153 - v109)
                                                                                               * (v109 + 421086153))
                                                                                              % 0x3C5) ^ 0xE6)) ^ 0xE6);
  v113 = *(unsigned __int8 *)(STACK[0x708]
                            + v112
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v112 + 466048)) >> 32) >> 1));
  v114 = (*(unsigned __int8 *)(STACK[0x708] + (v112 - 965 * ((4450744 * (unint64_t)v112) >> 32))) ^ 0xE6u) >> ((v83 & 4 ^ 4) + (v83 & 4));
  v115 = (v114 - ((2 * v114) & 0xCC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v111 % 0x3C5);
  v116 = ((v91 >> 8) & 0xF0 | ((unsigned __int16)v72 >> 12)) ^ 0x2A;
  v117 = 662 * ((v116 - 1177712202 - ((2 * v116) & 0x16C)) ^ 0xB9CD89B6);
  v118 = *(unsigned __int8 *)(STACK[0x708] + (v117 + 466048) % 0x3C5) ^ (16
                                                                       * (*(unsigned __int8 *)(STACK[0x708]
                                                                                             + (662 * v115 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v115 + 466048)) >> 32))) ^ 0xE6)) ^ 0xE6;
  v119 = 662 * v118
       + 466048
       - 965 * (((8901487 * (unint64_t)(662 * v118 + 466048)) >> 32) >> 1);
  v120 = v119 + 893608480 - ((2 * v119) & 0x440);
  v121 = (v120 & 0x296 ^ 0x96 | v120 & 0x296 ^ 0x200) * v118;
  v122 = (*(unsigned __int8 *)(STACK[0x708] + (v121 - 965 * ((4450744 * (unint64_t)v121) >> 32))) >> 4) ^ 0xE;
  v123 = (v122 - ((2 * v122) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v117 % 0x3C5);
  v124 = ((*(unsigned __int8 *)(STACK[0x708] + (v120 ^ 0x35436220u)) ^ 0xE6) << 12) ^ ((v113 ^ 0xE6) << 8);
  v125 = ((v91 >> 12) & 0xF0 | HIWORD(v72) & 0xF) ^ 0x51;
  v126 = 662 * ((v125 + 1070162951 - 2 * (v125 & 7)) ^ 0x3FC96407);
  v127 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v126 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (((v123 ^ 0x7BF96FFF)
                                                                                                + 2 * v123
                                                                                                - 2079943668)
                                                                                               * ((v123 ^ 0x7BF96FFF)
                                                                                                + 2 * v123
                                                                                                - 2079943668)
                                                                                               - 109561
                                                                                               + (2079943999
                                                                                                - ((v123 ^ 0x7BF96FFF)
                                                                                                 + 2 * v123))
                                                                                               * ((v123 ^ 0x7BF96FFFu)
                                                                                                + 2 * v123
                                                                                                - 2079943999))
                                                                                              % 0x3C5) ^ 0xE6)) ^ 0xE6);
  v128 = v127 + 466048 - 965 * (((8901487 * (unint64_t)(v127 + 466048)) >> 32) >> 1);
  v129 = (*(unsigned __int8 *)(STACK[0x708] + (v127 - 965 * ((4450744 * (unint64_t)v127) >> 32))) >> 4) ^ 0xE;
  v130 = (v129 - ((2 * v129) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v126 % 0x3C5);
  v131 = (HIWORD(v90) & 0xF0 | (v72 >> 20) & 0xF) ^ 0x41;
  v132 = 662 * ((v131 + 1761521085 - 2 * (v131 & 0xFFFFFFBF ^ (v72 >> 20) & 2)) ^ 0x68FEADBD);
  v133 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v132 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (662 * v130 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v130 + 466048)) >> 32))) ^ 0xE6)) ^ 0xE6);
  v134 = (v90 >> 20) & 0xF0 | HIBYTE(v72) & 0xF;
  v135 = ((v134 ^ 0xAC) + 1818354753 - ((2 * v134) & 0x82)) ^ 0x6C61E441;
  v136 = 662 * v135;
  v137 = ((662 * v135) ^ 0x7FD8E6FE) + ((1324 * v135) & 0xFFB1CDFC);
  v138 = *(unsigned __int8 *)(STACK[0x708] + (v133 - 965 * ((4450744 * (unint64_t)v133) >> 32)));
  v139 = 662
       * ((((v138 >> 4) ^ 0xE) - ((2 * ((v138 >> 4) ^ 0xE)) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v132 % 0x3C5))
       + 466048;
  LOBYTE(v108) = v108 - 115;
  v140 = ((*(unsigned __int8 *)(STACK[0x708]
                              + v133
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v133 + 466048)) >> 32) >> 1)) ^ 0xE6) << 20) ^ ((*(unsigned __int8 *)(STACK[0x708] + v128) ^ 0xE6) << 16);
  v141 = *(unsigned __int8 *)(STACK[0x708] + (v139 - 965 * ((4450744 * (unint64_t)v139) >> 32))) ^ 0xE6;
  v142 = *(unsigned __int8 *)(STACK[0x708]
                            + (v137 - 2144455294)
                            % (-1032533004 - ((v137 + 406914) & 0x4C82E | (2144455293 - v137) & 0xC274C82F)));
  v143 = v136 % 0x3C5;
  v144 = 662 * (v142 ^ (16 * v141) ^ 0xE6);
  v145 = ((2 * ((16 * (v108 & 0xF)) ^ 0xD0 | v95)) & 0x69FEEDFE) + (((16 * (v108 & 0xF)) ^ 0xD0 | v95) ^ 0x74FF76FF);
  v146 = v144 + 466048 - 965 * (((8901487 * (unint64_t)(v144 + 466048)) >> 32) >> 1);
  v147 = (*(unsigned __int8 *)(STACK[0x708] + (v144 - 965 * ((4450744 * (unint64_t)v144) >> 32))) >> 4) ^ 0xE;
  v148 = 662 * ((v147 - ((2 * v147) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v143)) + 466048;
  v149 = 662 * ((HIBYTE(v90) & 0xF0 | (v72 >> 28)) ^ 0x15) + 466048;
  v150 = *(unsigned __int8 *)(STACK[0x708] + v106) ^ 0xE6;
  v151 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v149 - 965 * ((4450744 * (unint64_t)v149) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x708] + (v148 - 965 * ((4450744 * (unint64_t)v148) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  v152 = (32 * v150) & 0xA00;
  v153 = 16 * v150 + 846423305;
  v154 = v153 - v152;
  LOBYTE(v108) = v153 ^ v108;
  v155 = ((v145 - 1962898538) * (v145 - 1962898538) - 109561 + (1962898869 - v145) * (v145 - 1962898869)) % 0x3C5u;
  v156 = v124 ^ v154;
  v157 = v124 ^ v154 ^ 0xCF6A09C4 ^ v140;
  v158 = v157 ^ ((*(unsigned __int8 *)(STACK[0x708] + v146) ^ 0xE6) << 24);
  v159 = *(unsigned __int8 *)(STACK[0x708] + v155);
  v160 = 662 * (((v156 >> 4) & 0xF0 | (v77 >> 8) & 0xF) ^ 0x50) + 218460;
  v161 = v159 ^ (16
               * (*(unsigned __int8 *)(STACK[0x708] + (662 * (v108 & 0xF0 ^ 0x80 | v102) + 218460) % 0x3C5) ^ 0xE6));
  v162 = v161 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                     + (v160 - 965 * ((4450744 * (unint64_t)v160) >> 32))) ^ 0xE6) << 8);
  v163 = 662 * (((v124 >> 8) & 0xF0 | ((unsigned __int16)v72 >> 12)) ^ 0xA) + 218460;
  v164 = v162 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                     + (v163 - 965 * ((4450744 * (unint64_t)v163) >> 32))) ^ 0xE6) << 12);
  v165 = 662 * (((v157 >> 12) & 0xF0 | HIWORD(v72) & 0xF) ^ 0x91) + 218460;
  v166 = HIWORD(v140) & 0xF0;
  v167 = v165 - 965 * ((4450744 * (unint64_t)v165) >> 32);
  v168 = 662 * ((v166 & 0xFFFFFFF0 | (v72 >> 20) & 0xF) ^ 1) + 218460;
  v169 = v168 - 965 * ((4450744 * (unint64_t)v168) >> 32);
  v170 = ((v158 >> 20) & 0xF0 | HIBYTE(v72) & 0xF) ^ 0xDC;
  v171 = ((v158 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                       + v151
                                       - 965 * (((8901487 * (unint64_t)v151) >> 32) >> 1)) ^ 6) << 28)) >> 24) & 0xF0 | (v72 >> 28);
  v172 = ((2 * v171) & 0x1B2 ^ 0x1A2) + (v171 ^ 0xABF55F2C);
  v173 = ((*(unsigned __int8 *)(STACK[0x708]
                              + ((v172 + 1409983164) * (v172 + 1409983164)
                               - 109561
                               + (-1409982833 - v172) * (v172 + 1409982833))
                              % 0x3C5) ^ 6) << 28) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                                                          + (662 * v170
                                                                                         + 218460
                                                                                         - 965
                                                                                         * ((4450744
                                                                                           * (unint64_t)(662 * v170 + 218460)) >> 32))) ^ 0xE6) << 24);
  v174 = v173 - ((2 * v173) & 0x74000000);
  v175 = 662 * ((v162 >> 8) & 0xF)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((v162 >> 8) & 0xF) + 454132)) >> 32);
  v176 = STACK[0x6A0];
  v177 = (v49 - ((2 * v49 + 111615074) & 0x746386A0) - 41594495) ^ 0x604EF48B ^ v57;
  v178 = v164 ^ ((*(unsigned __int8 *)(STACK[0x708] + v167) ^ 0xE6) << 16);
  v179 = v178 ^ ((*(unsigned __int8 *)(STACK[0x708] + v169) ^ 0xE6) << 20);
  v180 = (((v174 + 988433808) ^ v179) >> 24) ^ 0x3A;
  v181 = *(unsigned __int8 *)(STACK[0x708] + ((v175 - 1776060643 - ((2 * v175) & 0x63A)) ^ 0x9623771D));
  v182 = STACK[0x6F8];
  *(_DWORD *)(STACK[0x6F8] + 4 * (unsigned __int16)(v176 - 18528 - 283 * ((((_WORD)v176 - 18528) & 0xFFF0u) / 0x11B))) = v177;
  v183 = ((v161 >> 4) ^ 0xE) + 1233429887 - ((v161 >> 3) & 2) + 594;
  LODWORD(v14) = STACK[0x64C];
  v184 = ((((((*(unsigned __int8 *)(v62
                                  + (662 * (v180 & 0xF)
                                                 + 454132
                                                 - 965
                                                 * ((4450744 * (unint64_t)(662 * (v180 & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v62 + (662 * (((v180 - ((2 * v180) & 0x60) - 1672989392) >> 4) ^ 0x9C48353) + 454132) % 0x3C5) ^ 0xE6) << 12) | *(unsigned __int8 *)(v62 + (662 * (HIWORD(v178) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v178) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v62 + (662 * ((v179 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v179 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 12) | v181 ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v62 + (662 * ((unsigned __int16)v164 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v164 >> 12) + 454132)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v62 + (662 * (v159 & 0xF ^ 6) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v159 & 0xF ^ 6u) + 454132)) >> 32))) ^ 0xE6;
  *(_DWORD *)(v182 + 4 * (unsigned __int16)(v176 + 3328 - 283 * ((((_WORD)v176 + 3328) & 0xFFF0u) / 0x11B))) = (v51 - ((2 * v51 + 177509424) & 0x75EA768A) - 2143320739) ^ (16 * (*(unsigned __int8 *)(v62 + 662 * (((2 * v183) & 0x15C ^ 0x100) + (v183 ^ 0x4984A57Fu)) % 0x3C5) ^ 0xE6)) ^ 0x703082AA ^ v184;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0]
                                        + 8 * ((3352 * (LODWORD(STACK[0x6E8]) == 47)) ^ ((int)v14 - 1327)))
                            - 8))();
}

void sub_2478017E4()
{
  JUMPOUT(0x2477FFE98);
}

uint64_t sub_24780181C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, int a13, int a14, int a15, int a16, int a17)
{
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  int v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  unsigned int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  unsigned int v42;
  unsigned int v43;
  unsigned int v44;
  int v45;
  unsigned int v46;
  int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  unsigned int v64;
  int v65;
  int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  unsigned int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  unsigned int v85;
  int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unint64_t v101;
  int v102;
  int v103;
  int v104;
  int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  int v110;
  unsigned int v111;
  unsigned int v112;
  int v113;
  int v114;
  int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  unsigned int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  unint64_t v134;
  int v135;
  int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  unsigned int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  unsigned int v153;
  unsigned int v154;
  unsigned int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  unsigned int v178;
  int v179;
  int v180;
  int v181;
  unsigned int v182;
  int v183;
  int v184;
  int v185;
  unsigned int v186;
  int v187;
  unsigned int v188;
  int v189;
  unsigned int v190;
  int v191;
  unsigned int v192;
  int v193;
  int v194;
  unsigned int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  unsigned int v220;
  int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  unsigned int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  unsigned int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  unsigned int v254;
  unsigned int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unsigned int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  int v275;
  unsigned int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  int v280;
  int v281;
  unsigned int v282;
  int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  int v288;
  unsigned int v289;
  int v290;
  unsigned int v291;
  int v292;
  int v293;
  int v294;
  unsigned int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  int v302;
  int v303;
  unsigned int v304;
  unsigned int v305;
  unsigned int v306;
  unint64_t v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  int v338;
  unsigned int v339;
  int v340;
  int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  unsigned int v347;
  unsigned int v348;
  unsigned int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  unsigned __int8 v361;
  int v362;
  int v363;
  int v364;
  int v365;
  BOOL v366;
  int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  int v371;
  unsigned int v372;
  unsigned int v373;
  int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  unsigned int v381;
  int v382;
  unsigned int v383;
  int v384;
  int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  int v393;
  unsigned int v394;
  int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  int v406;
  int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  unsigned int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  int v423;
  unsigned int v424;
  int v425;
  int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  unsigned int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  int v439;
  unsigned int v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  int v445;
  int v446;
  unsigned int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  unsigned int v465;
  unsigned int v466;
  int v467;
  int v468;
  unsigned int v469;
  unint64_t v470;
  int v471;
  unsigned int v472;
  unsigned int v473;
  unsigned int v474;
  int v475;
  int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  int v487;
  int v488;
  unsigned int v489;
  unsigned int v490;
  int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  int v499;
  unsigned int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  int v513;
  int v514;
  int v515;
  int v516;
  int v517;
  int v518;
  int v519;
  int v520;
  unsigned int v521;
  unsigned int v522;
  int v523;
  int v524;
  int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  int v529;
  unsigned int v530;
  unsigned int v531;
  unsigned int v532;
  unsigned int v533;
  int v534;
  int v535;
  int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  unsigned int v549;
  unsigned int v550;
  int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  int v557;
  unsigned int v558;
  uint64_t v559;
  int v560;
  unsigned int v561;
  unsigned int v562;
  unint64_t v563;
  int v564;
  unint64_t v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  int v572;
  unsigned int v573;
  int v574;
  unsigned int v575;
  int v576;
  unsigned int v577;
  int v578;
  int v579;
  unsigned int v580;
  int v581;
  int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  unsigned int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  int v602;
  unsigned int v603;
  int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  int v609;
  unsigned int v610;
  int v611;
  unsigned int v612;
  unsigned int v613;
  unsigned int v614;
  unsigned int v615;
  unsigned int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  int v629;
  int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  unsigned int v642;
  unsigned int v643;
  int v644;
  int v645;
  unsigned int v646;
  unsigned int v647;
  unsigned int v648;
  unsigned int v649;
  int v650;
  int v651;
  int v652;
  int v653;
  int v654;
  int v655;
  unsigned int v656;
  int v657;
  unsigned int v658;
  unsigned int v659;
  int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  unsigned int v671;
  unsigned int v672;
  unsigned int v673;
  unsigned int v674;
  unsigned int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  int v681;
  int v682;
  unsigned int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  int v687;
  int v688;
  unsigned int v689;
  unsigned int v690;
  int v691;
  int v692;
  int v693;
  unsigned int v694;
  unsigned int v695;
  int v696;
  int v697;
  unsigned int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  unsigned int v703;
  int v704;
  unsigned int v705;
  unsigned int v706;
  int v707;
  int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  int v730;
  int v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  int v739;
  int v740;
  int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  int v745;
  int v746;
  unsigned int v747;
  unsigned int v748;
  int v749;
  unsigned int v750;
  int v751;
  unsigned int v752;
  int v753;
  int v754;
  unsigned int v755;
  unsigned int v756;
  int v757;
  int v758;
  unsigned int v759;
  unsigned int v760;
  int v761;
  unint64_t v762;
  int v763;
  unsigned int v764;
  int v765;
  unsigned int v766;
  int v767;
  unsigned int v768;
  int v769;
  unsigned int v770;
  unsigned int v771;
  unsigned int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  unsigned int v777;
  unsigned int v778;
  unsigned int v779;
  unsigned int v780;
  int v781;
  int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  int v786;
  unsigned int v787;
  int v788;
  int v789;
  int v790;
  int v791;
  unsigned int v792;
  unsigned int v793;
  unsigned int v794;
  int v795;
  int v796;
  unsigned int v797;
  int v798;
  unsigned int v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  int v803;
  int v804;
  unsigned int v805;
  int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  int v812;
  int v813;
  int v814;
  unint64_t v815;
  unsigned int v816;
  unsigned int v817;
  int v818;
  int v819;
  int v820;
  int v821;
  int v822;
  int v823;
  int v824;
  int v825;
  int v826;
  int v827;
  int v828;
  int v829;
  int v830;
  int v831;
  unsigned int v832;
  unsigned int v833;
  unsigned int v834;
  unsigned int v835;
  int v836;
  unsigned int v837;
  unsigned int v838;
  int v839;
  int v840;
  int v841;
  int v842;
  int v843;
  int v844;
  int v845;
  unsigned int v846;
  int v847;
  unsigned int v848;
  int v849;
  int v850;
  unsigned int v851;
  unsigned int v852;
  unsigned int v853;
  int v854;
  int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  unsigned int v860;
  int v861;
  int v862;
  unsigned int v863;
  unsigned int v864;
  int v865;
  unsigned int v866;
  unsigned int v867;
  unsigned int v868;
  int v869;
  int v870;
  int v871;
  unsigned int v872;
  unsigned int v873;
  unint64_t v874;
  unsigned int v875;
  unsigned int v876;
  unsigned int v877;
  int v878;
  unsigned int v879;
  int v880;
  unsigned int v881;
  unsigned int v882;
  unsigned int v883;
  int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  unsigned int v888;
  int v889;
  unsigned int v890;
  int v891;
  unsigned int v892;
  int v893;
  unsigned int v894;
  unsigned int v895;
  int v896;
  unsigned int v897;
  int v898;
  unsigned int v899;
  unsigned int v900;
  int v901;
  unsigned int v902;
  unsigned int v903;
  int v904;
  unsigned int v905;
  unsigned int v906;
  unsigned int v907;
  int v908;
  unsigned int v909;
  unsigned int v910;
  unsigned int v911;
  unsigned int v912;
  int v913;
  int v914;
  unsigned int v915;
  unsigned int v916;
  unsigned int v917;
  unsigned int v918;
  int v919;
  unsigned int v920;
  unsigned int v921;
  unsigned int v922;
  unsigned int v923;
  unsigned int v924;
  int v925;
  unsigned int v926;
  unsigned int v927;
  unsigned int v928;
  unsigned int v929;
  unsigned int v930;
  unsigned int v931;
  unsigned int v932;
  unsigned int v933;
  unsigned int v934;
  int v935;
  unsigned int v936;
  unsigned int v937;
  unsigned int v938;
  unsigned int v939;
  unsigned int v940;
  unsigned int v941;
  unsigned int v942;
  unsigned int v943;
  unsigned int v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  unsigned int v949;
  unsigned int v950;
  unsigned int v951;
  unsigned int v952;
  unsigned int v953;
  unsigned int v954;
  unsigned int v955;
  unsigned int v956;
  int v957;
  int v958;
  int v959;
  unsigned int v960;
  unsigned int v961;
  unsigned int v962;
  int v963;
  unsigned int v964;
  int v965;
  int v966;
  int v967;
  int v968;
  int v969;
  int v970;
  unsigned int v971;
  int v972;
  int v974;
  int v975;
  unsigned int v976;
  unsigned int v977;
  unsigned int v978;
  unsigned int v979;
  int v980;
  int v981;
  int v982;
  unsigned int v983;
  unsigned int v984;
  unsigned int v985;
  unsigned int v986;
  int v987;
  unsigned int v988;
  unsigned int v989;
  int v990;
  unsigned int v991;
  unsigned int v992;
  int v993;
  int v994;
  unsigned int v995;
  unsigned int v996;
  unsigned int v997;
  unsigned int v998;
  unsigned int v999;
  unsigned int v1000;
  unsigned int v1001;
  unsigned int v1002;
  int v1003;
  unsigned int v1004;
  unsigned int v1005;
  unsigned int v1006;
  int v1007;
  unsigned int v1008;
  unsigned int v1009;
  unsigned int v1010;
  unsigned int v1011;
  unsigned int v1012;
  int v1013;
  int v1014;
  unsigned int v1015;
  unsigned int v1016;
  unsigned int v1017;
  unsigned int v1018;
  int v1019;
  unsigned int v1020;
  unsigned __int8 v1021;
  unsigned int v1022;
  int v1023;
  unsigned int v1024;

  v28 = STACK[0x708];
  v29 = *(unsigned __int8 *)(STACK[0x708] + 493) ^ 0xE6;
  v30 = 16 * v29;
  LODWORD(STACK[0x680]) = 16 * v29;
  v29 *= 32;
  LODWORD(STACK[0x694]) = v29;
  v31 = v23;
  v32 = v30 + 230400462 - (v29 & 0x380);
  LODWORD(STACK[0x6E4]) = v32;
  v33 = v20 - 1888598399 + ~(2 * ((v20 + 925204208) & 0x5848C791 ^ v20 & 1));
  LODWORD(STACK[0x6E8]) = v33;
  v34 = (a17 & (2 * (v33 ^ (v21 - 1433600647))) ^ 0xB0910D00) + (v33 ^ (v21 - 1433600647) ^ 0xA7B5795F);
  v35 = ((2 * (v24 ^ (v19 + 646637845))) & 0xFA749FDE ^ 0xFA2097DE) + (v24 ^ (v19 + 646637845) ^ 0x822A2400);
  v36 = ((v18 - 2009588582) ^ 0x15403E3B)
      - v34
      + 276679396
      - ((2 * (((v18 - 2009588582) ^ 0x15403E3B) - v34 + 2147335887)) & 0x2100182A);
  LODWORD(STACK[0x6DC]) = v36;
  v37 = ((v36 & 0x15403E3B ^ 0x540322A | v36 & 0x15403E3B ^ 0x10000C11) ^ (v17 - 795853684)) - v35;
  LODWORD(STACK[0x6BC]) = v37;
  v38 = v32 ^ 0xDBBA128;
  v36 ^= 0x90800C15;
  v39 = LODWORD(STACK[0x4F8])
      - 1943290628
      + v36
      - ((2 * (LODWORD(STACK[0x4F8]) - 1943290628 + v36)) & 0x9990AAF8)
      + 1288197500;
  v40 = LODWORD(STACK[0x518])
      - v37
      - 2 * ((LODWORD(STACK[0x518]) - v37 + 2116312) & 0x6AF73C ^ (LODWORD(STACK[0x518]) - v37) & 4);
  v41 = v40 - 2096414165;
  v40 -= 2096414192;
  v42 = 662 * ((~(v39 >> 23) & 0x10) + (HIBYTE(v39) & 0xF ^ 0x294));
  v43 = v39;
  v44 = 662 * ((v39 >> 20) & 0xF ^ 0xC) + 439568;
  v45 = ((*(unsigned __int8 *)(v28 + (v42 - 965 * ((v42 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v39 >> 28) ^ 4) + 439568 - 965 * (((662 * ((v39 >> 28) ^ 4) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v46 = 662 * (HIWORD(v39) & 0xF ^ 8) + 439568;
  v47 = v45 | *(unsigned __int8 *)(v28 + (v46 - 965 * ((v46 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v48 = *(unsigned __int8 *)(v28 + (v44 - 965 * ((v44 * (unint64_t)v27) >> 32))) ^ 0xE6;
  LODWORD(STACK[0x6C0]) = v39;
  v49 = 662 * (((unsigned __int16)v39 >> 12) ^ 5) + 439568;
  v50 = 662 * ((v43 >> 8) & 0xF ^ 5) + 439568;
  v51 = 662 * ((v43 >> 4) ^ 7) + 439568;
  v52 = (v47 << 8) ^ (v48 << 12);
  v53 = *(unsigned __int8 *)(v28
                           + (662 * (v43 & 0xF ^ 0xC)
                                          + 439568
                                          - 965 * (((662 * (v43 & 0xF ^ 0xC) + 439568) * (unint64_t)v27) >> 32)));
  v54 = *(unsigned __int8 *)(v28 + (v50 - 965 * ((v50 * (unint64_t)v27) >> 32))) ^ 0xE6 ^ v52 ^ (16 * (*(unsigned __int8 *)(v28 + (v49 - 965 * ((v49 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v55 = v24;
  v56 = (v54 << 8) - 604801500 - ((v54 << 9) & 0xB7E6EC00);
  v57 = 662 * ((v40 >> 20) & 0xF ^ 6) + 439568;
  v58 = *(unsigned __int8 *)(v28 + (v57 - 965 * ((v57 * (unint64_t)v27) >> 32))) ^ 0xE6;
  LOBYTE(v57) = v53 ^ 0xE6;
  v59 = (v53 ^ 0xE6) - 1298188194 - ((2 * (v53 ^ 0xE6)) & 0xBC);
  v60 = (v56 ^ 0xDBF37624 | v59 ^ 0xB29F385E) ^ (16
                                               * (*(unsigned __int8 *)(v28
                                                                     + (v51
                                                                                    - 965
                                                                                    * ((v51 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v61 = 662 * (HIWORD(v40) & 0xF ^ 0xA) + 439568;
  v62 = 662 * (~(v40 >> 12) & 0xF) + 439568;
  v63 = ((((*(unsigned __int8 *)(v28
                               + (662 * (((v41 + 268435429) >> 24) & 0xF)
                                              + 439568
                                              - 965
                                              * (((662 * (((v41 + 268435429) >> 24) & 0xF) + 439568)
                                                * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v41 + 2147483621) >> 28) + 439568 - 965 * (((662 * ((v41 + 2147483621) >> 28) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v61 - 965 * ((v61 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ (v58 << 12);
  v64 = 662 * ((v40 >> 8) & 0xF ^ 7) + 439568;
  v65 = (v40 >> 4) ^ 3;
  v66 = *(unsigned __int8 *)(v28
                           + (662 * (v40 & 0xF ^ 8)
                                          + 439568
                                          - 965 * (((662 * (v40 & 0xF ^ 8) + 439568) * (unint64_t)v27) >> 32)));
  v67 = ((v63 | *(unsigned __int8 *)(v28 + (v64 - 965 * ((v64 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v62 - 965 * ((v62 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v68 = (v66 ^ 0xE6) - 1615195507 - ((2 * (v66 ^ 0xE6)) & 0x11A);
  v69 = (v68 ^ 0x9FBA128D | v67) ^ (16
                                  * (*(unsigned __int8 *)(v28
                                                        + (662 * v65
                                                                       + 439568
                                                                       - 965
                                                                       * (((662 * v65 + 439568)
                                                                         * (unint64_t)v27) >> 32))) ^ 0xE6));
  v70 = ((v59 & 0xF ^ 0xFFFFF4) + 14880736) & 0x80000F;
  LODWORD(STACK[0x6A8]) = v70;
  v71 = 662
      * (((((16 * (v68 & 0xF)) | v70) ^ 0x8000DA)
        - 990858884
        - 2 * ((((16 * (v68 & 0xF)) | v70) ^ 0x8000DA) & 0x80007D ^ v57 & 1)) ^ 0xC4F0B17C);
  v72 = *(unsigned __int8 *)(v28 + (v71 + 466048) % 0x3C5);
  v73 = *(unsigned __int8 *)(v28 + v71 % 0x3C5);
  LODWORD(STACK[0x698]) = v60;
  v74 = v38;
  v75 = 662 * (v72 ^ v38);
  LODWORD(STACK[0x67C]) = v75;
  LOBYTE(v65) = (*(_BYTE *)(v28 + v75 % 0x3C5) >> 4) ^ 0xE;
  v76 = 662 * ((v65 - 2 * (v65 & 7 ^ ((*(_BYTE *)(v28 + v75 % 0x3C5) & 0x10) != 0)) - 26) ^ v73)
      + 466048;
  v77 = ((v60 >> 4) ^ 0xD630E16A) & 0x9D2B7E84 ^ 0xDE04DE3C ^ ((((v60 >> 4) ^ 0xD630E16A) & 0x9D2B7E8B)
                                                             - (((v60 >> 4) ^ 0xD630E16A) & 0x9C005E02)
                                                             + (((v60 >> 4) ^ 0xD630E16A) & 0xC005E02 ^ 0x4E04DE36));
  LODWORD(STACK[0x6A0]) = v77;
  v78 = 662 * (((v69 & 0xF0 | v77) + 1702083011 - ((2 * (v69 & 0xF0 | v77)) & 0xCAE77386)) ^ 0x6573B9C3);
  v79 = *(unsigned __int8 *)(v28 + (v78 + 466048) % 0x3C5);
  v80 = *(unsigned __int8 *)(v28 + v78 % 0x3C5);
  v81 = 662
      * (v79 ^ (16
              * (*(unsigned __int8 *)(v28 + (v76 - 965 * ((v76 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  LODWORD(STACK[0x668]) = v81;
  v82 = (*(unsigned __int8 *)(v28 + (v81 - 965 * ((v81 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v83 = 662 * ((v82 - ((2 * v82) & 0xC) - 26) ^ v80) + 466048;
  v84 = (v69 >> 4) & 0xF0 | (v60 >> 8) & 0xF;
  v85 = 662 * ((v84 + 127162159 - ((2 * v84) & 0x5E)) ^ 0x794572F);
  v86 = *(unsigned __int8 *)(v28 + (v85 + 466048) % 0x3C5) ^ (16
                                                            * (*(unsigned __int8 *)(v28
                                                                                  + (v83
                                                                                                 - 965
                                                                                                 * ((v83 * (unint64_t)v27) >> 32))) ^ 0xE6));
  LODWORD(STACK[0x658]) = v86 ^ 0xE6;
  v87 = (((v86 ^ 0xE6) + 331) ^ 0x2FDF9F14) - 803184404 + ((2 * ((v86 ^ 0xE6) + 331)) & 0x3E28);
  v88 = (*(unsigned __int8 *)(v28 + ((v86 ^ 0xE6) + (v86 ^ 0xE6) * (v86 ^ 0xFFFFFF19) - 109561 + v87 * v87) % 0x3C5) >> 4) ^ 0xE;
  v89 = (v88 + (~(2 * v88) | 0xF3) - 25) ^ *(unsigned __int8 *)(v28 + v85 % 0x3C5);
  v90 = ((v67 >> 8) & 0xF0 | ((unsigned __int16)v56 >> 12)) ^ 7;
  v91 = 662 * ((v90 - 1531227261 - ((2 * v90) & 0xFFFFFF07)) ^ 0xA4BB5383);
  v92 = 662
      * (*(unsigned __int8 *)(v28 + (v91 + 466048) % 0x3C5) ^ (16
                                                             * (*(unsigned __int8 *)(v28
                                                                                   + (662 * v89
                                                                                                  + 466048
                                                                                                  - 965 * (((662 * v89 + 466048) * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  LODWORD(STACK[0x654]) = v92;
  v93 = v91 % 0x3C5;
  LOBYTE(v87) = (*(_BYTE *)(v28 + (v92 - 965 * ((v92 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v94 = v87 & 7 ^ (*(unsigned __int8 *)(v28 + (v92 - 965 * ((v92 * (unint64_t)v27) >> 32))) >> 4) & 1;
  LODWORD(STACK[0x670]) = 465083;
  v95 = 662 * ((v87 + ~(2 * v94) - 25) ^ *(unsigned __int8 *)(v28 + v93)) + 465083;
  LODWORD(STACK[0x640]) = v56;
  v96 = (HIWORD(v56) ^ 0xF14A1382) & 0x1000FD57 ^ 0x26C44B31 ^ (((HIWORD(v56) ^ 0xF14A1382) & 0x1000FD58)
                                                              - (a16 & (2 * (HIWORD(v56) ^ 0xF14A1382)))
                                                              + 918848353);
  v97 = (v96 | 0x62567D09) - (v96 | 0x9DA982F6) - 1649835274;
  v98 = 662
      * (((v97 ^ 0x7256B558 | (v67 >> 12) & 0xF0)
        + 725751859
        - 2 * (((v97 ^ 0x7256B558) & 0x2B42183F | (v67 >> 12) & 0x30) ^ (v97 ^ 0x7256B558) & 0xC)) ^ 0x2B421833);
  v99 = 662
      * (*(unsigned __int8 *)(v28 + (v98 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v95 % 0x3C5) ^ 0xE6)) ^ 0xE6);
  LODWORD(STACK[0x638]) = v99;
  LOBYTE(v79) = (*(_BYTE *)(v28 + (v99 - 965 * ((v99 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v100 = 662
       * ((v79
                          - 2
                          * (v79 & 7 ^ ((*(_BYTE *)(v28
                                                  + (v99 - 965 * ((v99 * (unint64_t)v27) >> 32))) & 0x10) != 0))
                          - 26) ^ *(unsigned __int8 *)(v28 + v98 % 0x3C5))
       + 466048;
  v101 = (unint64_t)HIWORD(v67) >> ((104 * ((v97 ^ 0x58) + (v97 ^ 0x37)) - 20) & 0xFC);
  v102 = v101 - ((2 * v101) & 0x58A) - 707530043;
  LODWORD(STACK[0x648]) = v102;
  LODWORD(v101) = ((v56 >> 20) & 0xF | (16 * (v102 & 0xF))) ^ 0x5F;
  v103 = (v101 + 1882204253 - ((2 * v101) & 0xBA)) ^ 0x7030285D;
  LODWORD(STACK[0x634]) = v103;
  LODWORD(v101) = *(unsigned __int8 *)(v28 + (662 * v103 + 466048) % 0x3C5u) ^ (16
                                                                              * (*(unsigned __int8 *)(v28 + (v100 - 965 * ((v100 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6;
  LODWORD(STACK[0x630]) = 662 * v101;
  LODWORD(STACK[0x64C]) = v55;
  LODWORD(v101) = 662 * v101 - 805901247 - ((1324 * v101) & 0x6DD880);
  LODWORD(STACK[0x62C]) = (v101 ^ 0xCFF6EC41) % ((v101 & 0x3C4 ^ 0x385) + (v101 & 0x3C4 ^ 0x40));
  LODWORD(STACK[0x644]) = v31;
  v1023 = LODWORD(STACK[0x508])
        + v34
        + v31
        + 1118552300
        - 2
        * ((LODWORD(STACK[0x508]) + v34 + v31 - 1577783146) & 0x676DB2A7 ^ (LODWORD(STACK[0x508])
                                                                          + v34
                                                                          + v31
                                                                          + 1118552300) & 1);
  v1012 = v35 + v22 - ((2 * (v35 + v22) - 283729912) & 0xF9A49932);
  v104 = ((v1012 + 1952291997) ^ 0x32DB366)
       + LODWORD(STACK[0x520])
       - 2
       * ((((v1012 + 1952291997) ^ 0x32DB366) + LODWORD(STACK[0x520]) + 521976344) & 0x26281E47 ^ (((v1012 + 1952291997) ^ 0x32DB366)
                                                                                                 + LODWORD(STACK[0x520])) & 6);
  LOBYTE(v103) = LOBYTE(STACK[0x508])
               + v34
               + v31
               - 20
               - 2 * ((LOBYTE(STACK[0x508]) + v34 + v31 - 106) & 0xA7 ^ (LOBYTE(STACK[0x508]) + v34 + v31 - 20) & 1)
               + 80;
  LODWORD(STACK[0x6E0]) = v1023 - 961093040;
  v105 = 662 * (v103 & 0xF ^ 6) + 439568 - 965 * (((662 * (v103 & 0xF ^ 6u) + 439568) * (unint64_t)v27) >> 32);
  v1007 = v105 - 495910842 - ((2 * v105) & 0x8C);
  v106 = *(unsigned __int8 *)(v28 + (v1007 ^ 0xE2710046)) ^ 0xE6;
  LODWORD(STACK[0x650]) = v106;
  v107 = ((2 * (((_BYTE)v106 + 8) & 0xF ^ 0xB)) | 0xFC35C4D0) - (((_BYTE)v106 + 8) & 0xF ^ 0xB) - 2115691112;
  v1005 = v104 + 1162139737;
  v108 = 662 * ((v104 + 1162139737) & 0xF ^ 1) + 439568;
  v109 = *(unsigned __int8 *)(v28 + (v108 - 965 * ((v108 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v1019 = v109 - 1174069538 - ((2 * v109) & 0x1BC);
  v110 = ((v107 & 0x1012A24F ^ 0x1A09D04) + (v107 & 0x6E084030 ^ 0x4A080021) - 1) ^ 0x35B27F4F;
  v1016 = 662
        * ((((16 * (v1019 & 0xF)) ^ 0xE0 | v110)
          + 1375108088
          - 2 * (((16 * (v1019 & 0xF)) ^ 0xE0 | v110) & 0x51F67BFD ^ v110 & 5)) ^ 0x51F67BF8);
  v111 = (v26 ^ 0x9483CA23) - LODWORD(STACK[0x6F0]);
  v1010 = 662 * (*(unsigned __int8 *)(v28 + (v1016 + 466048) % 0x3C5) ^ v74);
  v112 = v35 - ((2 * v35 + 1534123234) & 0xBA172C16) + 180618364;
  LOBYTE(v107) = *(_BYTE *)(v28 + (v1010 + 466048) % 0x3C5) ^ 0xE6;
  v1021 = v107 - ((2 * v107) & 0x18) + 12;
  v113 = *(unsigned __int8 *)(v28 + (662 * ((16 * (v1021 & 0xF)) ^ 0xC0 | v110) + 218460) % 0x3C5);
  LODWORD(STACK[0x5D8]) = v113;
  v114 = 662 * (v113 & 0xF ^ 6) + 454132 - 965 * (((662 * (v113 & 0xF ^ 6u) + 454132) * (unint64_t)v27) >> 32);
  v115 = v114 - 51158879 - ((2 * v114) & 0x142);
  LODWORD(STACK[0x628]) = v115;
  v116 = v34 + v25 - v31 - ((2 * (v34 + v25 - v31) - 992197866) & 0xA1EEF834);
  v117 = v34 - ((2 * v34 + 1441398562) & 0xA1EEF834) - 68387925;
  LODWORD(STACK[0x604]) = v117;
  v118 = ((2 * v117) & 0xFF9B77DE ^ 0x158A1494) + (v117 ^ 0x7528B5A5);
  LODWORD(STACK[0x6F0]) = v112;
  v119 = ((2 * v112) & 0xEEDF776A ^ 0xE134022) + (v112 ^ 0xF0765FEE);
  v120 = STACK[0x6BC];
  v121 = v119 + (v112 ^ 0x5E26256D ^ (v1012 + 1952291997)) + LODWORD(STACK[0x6BC]);
  v122 = ((v111
         - 646637845
         + (v112 ^ 0x5D0B960B)
         + 1561040395
         - ((2 * (v111 - 646637845 + (v112 ^ 0x5D0B960B))) & 0xBA172C16)) ^ v112)
       - v119
       + 2003811253;
  v123 = v119
       - ((-369382633 - v118) & 0xF1D0196F)
       - ((v118 + 369382632) & 0xF1D0196F)
       + 146030314
       - ((2 * (v119 - ((-369382633 - v118) & 0xF1D0196F) - ((v118 + 369382632) & 0xF1D0196F) - 2003811253)) & 0x47F53E);
  LODWORD(STACK[0x620]) = v123;
  v124 = v122 + (v123 ^ 0x8023FA9F) + 469753753 - ((2 * (v122 + (v123 ^ 0x8023FA9F))) & 0x37FFBF32);
  LODWORD(STACK[0x624]) = v118;
  v125 = 2 * v118 + 482628932;
  LODWORD(STACK[0x61C]) = v125;
  v126 = v118 - (v125 & 0xAC8B78BA) + 1688725247;
  LODWORD(STACK[0x608]) = v126;
  v127 = ((v116 - 1285186139) ^ v117) - ((2 * ((v116 - 1285186139) ^ v117) + 476040482) & 0x1F4BD386) - 1646931884;
  v128 = v127 ^ LODWORD(STACK[0x6DC]);
  v129 = (v36
        - ((v34 + v31 - 1473530293) ^ (v34 - 1426784367))
        + v118
        + 369382632
        + (v115 & 0x329 ^ 0x21)
        + (v115 & 0x329 ^ 0xEA2DEF08)) ^ v126;
  LODWORD(STACK[0x610]) = v129;
  LODWORD(v101) = ((2 * ((v127 ^ 0x8FA5E9C3) + (v129 ^ 0xA9BA43A2) + 1)) & 0xBEE3BF4C)
                + (((v127 ^ 0x8FA5E9C3) + (v129 ^ 0xA9BA43A2) + 1) ^ 0x5F71DFA6);
  v130 = v121 - ((2 * v121 + 194324598) & 0x5ED807C2) + 892770332;
  LODWORD(STACK[0x6C8]) = v130;
  v131 = v124 ^ (v120 + 2100973551);
  v132 = v123 ^ v130;
  v133 = (v132 ^ 0x50B00681)
       + (v124 ^ 0x1BFFDF99)
       - 1600368687
       - ((2 * ((v132 ^ 0x50B00681) + (v124 ^ 0x1BFFDF99) + 1)) & 0x41389FA0);
  LODWORD(STACK[0x5F0]) = v133;
  LODWORD(STACK[0x660]) = v101 - 1601298342;
  HIDWORD(v134) = v128 ^ 0x1D6 ^ (v101 + 90);
  LODWORD(v134) = v128 ^ 0x1F25E400 ^ (v101 - 1601298342);
  LODWORD(v101) = v134 >> 9;
  HIDWORD(v134) = v101 ^ 0x7D4A8C;
  LODWORD(v134) = v101 ^ 0xBC000000;
  v1014 = (v134 >> 23) - ((2 * (v134 >> 23)) & 0xA4135A1C) - 771117810;
  v135 = ((v129 ^ 0x5645BC5D) - 501969881) ^ 0x4DE3F232;
  LODWORD(STACK[0x600]) = v135;
  LODWORD(v101) = (v1014 ^ 0x48F7E9A) + v135 + 369680577;
  v136 = (v1014 ^ 0x48F7E9A) + v135;
  v1003 = v136;
  v137 = v101 + LODWORD(STACK[0x4FC]) - ((2 * (v101 + LODWORD(STACK[0x4FC])) + 844829268) & 0x3F83B22A) + 955212351;
  v138 = 662 * (~HIBYTE(v137) & 0xF) + 439568;
  v139 = 662 * ((v137 >> 20) & 0xF ^ 0xC) + 439568;
  LODWORD(STACK[0x6BC]) = v131 ^ v133;
  v140 = ((v132 ^ 0xAF4FF97E) - 501969881) ^ 0x4DE3F232;
  LODWORD(STACK[0x5F8]) = v140;
  v997 = (v131 ^ v133 ^ 0x97705AA5) + v140;
  v141 = LODWORD(STACK[0x57C])
       - (v997
        - 2013856440)
       - ((2 * (LODWORD(STACK[0x57C]) - (v997 - 2013856440)) + 1797077542) & 0xCCE8C2C8);
  v142 = 662 * (HIWORD(v137) & 0xF ^ 1) + 439568;
  v143 = ((*(unsigned __int8 *)(v28 + (v138 - 965 * ((v138 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v137 >> 28) ^ 9) + 439568 - 965 * (((662 * ((v137 >> 28) ^ 9) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v142 - 965 * ((v142 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v144 = 662 * (((unsigned __int16)v137 >> 12) ^ 0xD) + 439568;
  v145 = v144 - 965 * ((v144 * (unint64_t)v27) >> 32);
  v146 = (v143 << 8) ^ ((*(unsigned __int8 *)(v28 + (v139 - 965 * ((v139 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v147 = 662 * ((v137 >> 8) & 0xF ^ 9) + 439568;
  LODWORD(STACK[0x5FC]) = v137;
  v148 = 662 * ((v137 >> 4) ^ 1) + 439568;
  v149 = v146 | *(unsigned __int8 *)(v28 + (v147 - 965 * ((v147 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v150 = (v149 << 8) - 1763670682 - ((v149 << 9) & 0x2DC10A00);
  v151 = *(unsigned __int8 *)(v28
                            + (662 * (v137 & 0xF ^ 5)
                                           + 439568
                                           - 965 * (((662 * (v137 & 0xF ^ 5) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6;
  v152 = v151 - 784366748 - ((2 * v151) & 0xC8);
  v153 = v150 ^ ((*(unsigned __int8 *)(v28 + v145) ^ 0xE6) << 12);
  v1015 = v150;
  v154 = (v153 ^ 0x96E08566 | v152 ^ 0xD13F8364) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v148
                                                                                       - 965
                                                                                       * ((v148 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v141 -= 1677525385;
  v155 = 662 * (HIBYTE(v141) & 0xF ^ 6) + 439568;
  v156 = 662 * ((v141 >> 20) & 0xF ^ 7) + 439568;
  v157 = 662 * (HIWORD(v141) & 0xF ^ 4) + 439568;
  v158 = ((*(unsigned __int8 *)(v28 + (v155 - 965 * ((v155 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v141 >> 28) ^ 0xE) + 439568 - 965 * (((662 * ((v141 >> 28) ^ 0xE) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v159 = 662 * (((unsigned __int16)v141 >> 12) ^ 6) + 439568;
  v160 = v158 | *(unsigned __int8 *)(v28 + (v157 - 965 * ((v157 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v161 = 662 * ((v141 >> 8) & 0xF ^ 1) + 439568;
  v162 = (v160 << 8) ^ ((*(unsigned __int8 *)(v28 + (v156 - 965 * ((v156 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v163 = 662 * ((v141 >> 4) ^ 6) + 439568;
  v164 = v162 | *(unsigned __int8 *)(v28 + (v161 - 965 * ((v161 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v165 = (v164 << 8) - 538533629 - ((v164 << 9) & 0xBFCD4200);
  v166 = *(unsigned __int8 *)(v28
                            + (662 * (v141 & 0xF ^ 4)
                                           + 439568
                                           - 965 * (((662 * (v141 & 0xF ^ 4) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6;
  v167 = v166 + 1470703486 - ((2 * v166) & 0xFC);
  v168 = v165 ^ ((*(unsigned __int8 *)(v28 + (v159 - 965 * ((v159 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v1018 = v165;
  v169 = (v168 ^ 0xDFE6A103 | v167 ^ 0x57A9277E) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v163
                                                                                       - 965
                                                                                       * ((v163 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v170 = ((v152 & 0xD | ~v152 & 0xF) - (~v152 & 0xD) - 1087426064) ^ 0xBFA721FD;
  v171 = (((2 * v170) | 0xC50E056E) - v170 + 494468425) ^ 0xE20F12BC;
  LODWORD(STACK[0x5DC]) = v171;
  v172 = 849462029 - ((2 * v171) & 0x6543861A) + ((16 * (v167 & 0xF)) ^ 0xE0 | v171);
  v173 = ((v154 >> 4) ^ 0xC6721E9) & 0x765EA9E ^ 0x365A2145 ^ (-2
                                                             - ((~(((v154 >> 4) ^ 0xC6721E9) & 0x765EA91) | 0x323F01C4)
                                                              + (((v154 >> 4) ^ 0xC6721E9) & 0x2250080 | 0xCDC0FE3B)));
  v174 = (v173 - ((2 * v173) & 0x92EA68C) - 2070457530) ^ 0x80F273CE;
  LODWORD(STACK[0x5D4]) = v174;
  v175 = *(unsigned __int8 *)(v28 + (662 * (v172 ^ 0x32A1C30Du) + 466048) % 0x3C5);
  LODWORD(STACK[0x6B0]) = v74;
  v1009 = 662 * (v175 ^ v74);
  v176 = (*(unsigned __int8 *)(v28 + v1009 % 0x3C5) >> 4) ^ 0xE;
  v177 = 662
       * ((v176 - ((2 * v176) & 0xC) - 26) ^ *(unsigned __int8 *)(v28
                                                                                 + (v172 & 0x96 ^ 0x292 | v172 & 0x96 ^ 4)
                                                                                 * (v172 ^ 0x32A1C30Du)
                                                                                 % 0x3C5))
       + 466048;
  v178 = 662 * (((v174 | v169 & 0xF0) + 526994080 - ((2 * (v174 | v169 & 0xF0)) & 0x3ED29540)) ^ 0x1F694AA0);
  v1004 = 662
        * (*(unsigned __int8 *)(v28 + (v178 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v28
                                                                                      + (v177 - 965 * ((v177 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v179 = (*(unsigned __int8 *)(v28 + (v1004 - 965 * ((v1004 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v180 = (v179 - ((2 * v179) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v178 % 0x3C5);
  LODWORD(STACK[0x5EC]) = v154;
  v181 = (v169 >> 4) & 0xF0 | (v154 >> 8) & 0xF;
  v182 = 662 * ((v181 + 100229086 - 2 * (v181 & 0xFFFFFFDF ^ (v154 >> 8) & 1)) ^ 0x5F95FDE);
  v1002 = 662
        * (*(unsigned __int8 *)(v28 + (v182 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v28
                                                                                      + (662 * v180 + 466048 - 965 * (((662 * v180 + 466048) * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v183 = (*(unsigned __int8 *)(v28 + (v1002 - 965 * ((v1002 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v184 = (v183 - ((2 * v183) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v182 % 0x3C5);
  v185 = ((v168 >> 8) & 0xF0 | ((unsigned __int16)v153 >> 12)) ^ 0xA8;
  v186 = 662 * ((v185 - 1167564610 - 2 * (v185 & 0xFFFFFFBF ^ (v153 >> 12) & 1)) ^ 0xBA6860BE);
  v1001 = 662
        * (*(unsigned __int8 *)(v28 + (v186 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v28
                                                                                      + (662 * v184 + 466048 - 965 * (((662 * v184 + 466048) * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v187 = (*(unsigned __int8 *)(v28 + (v1001 - 965 * ((v1001 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v188 = 662 * ((v187 - ((2 * v187) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v186 % 0x3C5)) + 466048;
  LODWORD(STACK[0x5E0]) = v153;
  v189 = (v168 >> 12) & 0xF0 | HIWORD(v153) & 0xF;
  v190 = 662 * (((v189 ^ 0x60) + 1274941181 + ((2 * (v189 ^ (HIWORD(v153) | 0x7FFFFFFD))) ^ 0xC5) + 1) ^ 0x4BFE0EFD);
  v999 = 662
       * (*(unsigned __int8 *)(v28 + (v190 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v188 - 965 * ((v188 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v191 = (*(unsigned __int8 *)(v28 + (v999 - 965 * ((v999 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v192 = 662 * ((v191 - ((2 * v191) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v190 % 0x3C5)) + 466048;
  v193 = (HIWORD(v165) & 0xF0 | (v150 >> 20) & 0xF) ^ 0xEE;
  v998 = 662 * ((v193 - 766068633 - ((2 * v193) & 0xCE)) ^ 0xD256B867);
  v194 = *(unsigned __int8 *)(v28 + (v998 + 466048) % 0x3C5) ^ (16
                                                              * (*(unsigned __int8 *)(v28
                                                                                    + (v192 - 965 * ((v192 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6;
  v996 = 662 * v194;
  v195 = ((662 * v194) ^ 0xFDFDBEEF) + ((1324 * v194) & 0x7B7DDC);
  v1000 = (v195 + 34168209) % (((v195 + 145) | (109 - v195)) & 0x84 | 0x341);
  v196 = v136 - ((2 * v101 + 279128296) & 0x20EAADB2) + 1322241038;
  v993 = v196;
  v197 = LODWORD(STACK[0x514]) - 665471692 + (v196 ^ 0xA67828C2);
  v198 = v197 - ((2 * v197) & 0x5DFC3A60) - 1359078096;
  LODWORD(v101) = v997 - ((2 * (v997 - 2013856440) + 80146394) & 0x7D0F2FC) - 1035800909;
  LODWORD(STACK[0x6DC]) = v101;
  LODWORD(v101) = LODWORD(STACK[0x504])
                - 986212055
                + (v101 ^ 0xCA1AF89A)
                - ((2 * (LODWORD(STACK[0x504]) - 986212055 + (v101 ^ 0xCA1AF89A)) + 49245082) & 0x15B81518);
  v199 = 662 * (HIBYTE(v198) & 0xF ^ 0xE) + 439568;
  v200 = 662 * (~(v198 >> 20) & 0xF) + 439568;
  v201 = 662 * (HIWORD(v198) & 0xF ^ 0xE) + 439568;
  v202 = ((*(unsigned __int8 *)(v28 + (v199 - 965 * ((v199 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v198 >> 28) ^ 0xA) + 439568 - 965 * (((662 * ((v198 >> 28) ^ 0xA) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v201 - 965 * ((v201 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v203 = 662 * (((unsigned __int16)(v197 - ((2 * v197) & 0x3A60) + 7472) >> 12) ^ 1) + 439568;
  v204 = v203 - 965 * ((v203 * (unint64_t)v27) >> 32);
  v205 = (v202 << 8) ^ ((*(unsigned __int8 *)(v28 + (v200 - 965 * ((v200 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v995 = v198;
  v206 = 662 * ((v198 >> 8) & 0xF ^ 0xD) + 439568;
  v207 = 662 * (((v197 - ((2 * v197) & 0x60) + 48) >> 4) ^ 3) + 439568;
  v208 = v205 | *(unsigned __int8 *)(v28 + (v206 - 965 * ((v206 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v209 = (v208 << 8) - 212059867 - ((v208 << 9) & 0xE6B87200);
  v210 = *(unsigned __int8 *)(v28
                            + (662 * (v197 & 0xF)
                                           + 439568
                                           - 965 * (((662 * (v197 & 0xF) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6;
  v211 = v210 + 1061424705 - ((2 * v210) & 0x82);
  v212 = v209 ^ ((*(unsigned __int8 *)(v28 + v204) ^ 0xE6) << 12);
  v213 = 662 * ((v101 + a14) >> 28)
       + 439568
       - 965 * (((662 * ((v101 + a14) >> 28) + 439568) * (unint64_t)v27) >> 32);
  v214 = v101 - 1135361959;
  LODWORD(v101) = 662 * (((v101 - 1135361959) >> 24) & 0xF ^ 0xA) + 439568;
  v215 = v101 - 965 * ((v101 * (unint64_t)v27) >> 32);
  LODWORD(v101) = (v212 ^ 0xF35C3925 | v211 ^ 0x3F440E41) ^ (16
                                                           * (*(unsigned __int8 *)(v28
                                                                                 + (v207
                                                                                                - 965
                                                                                                * ((v207
                                                                                                  * (unint64_t)v27) >> 32))) ^ 0xE6));
  v216 = 662 * ((v214 >> 20) & 0xF ^ 0xD) + 439568;
  v217 = 662 * (HIWORD(v214) & 0xF ^ 0xC) + 439568;
  v218 = ((((*(unsigned __int8 *)(v28 + v215) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + v213) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v217 - 965 * ((v217 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v216 - 965 * ((v216 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v219 = 662 * ((v214 >> 8) & 0xF ^ 0xA) + 439568;
  v220 = 662 * ((v214 >> 4) ^ 8) + 439568;
  v221 = v218 | *(unsigned __int8 *)(v28 + (v219 - 965 * ((v219 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v222 = (v221 << 8) + 1213864142 - ((v221 << 9) & 0x90B43000);
  v223 = *(unsigned __int8 *)(v28
                            + (662 * (v214 & 0xF ^ 0xC)
                                           + 439568
                                           - 965 * (((662 * (v214 & 0xF ^ 0xC) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6;
  v224 = v222 ^ ((*(unsigned __int8 *)(v28
                                     + (662 * ((unsigned __int16)v214 >> 12)
                                                    + 439568
                                                    - 965
                                                    * (((662 * ((unsigned __int16)v214 >> 12) + 439568)
                                                      * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v225 = *(unsigned __int8 *)(v28 + (v220 - 965 * ((v220 * (unint64_t)v27) >> 32)));
  v226 = (v211 & 0xF ^ 1) - 2 * ((v211 & 0xF ^ 1) & 3) - 881192237;
  v227 = (v226 & 0x891202A0) + (v226 ^ 0x9B7A16F3) - ((v226 ^ 0x9B7A16F3) & 0x20);
  v228 = (v224 ^ 0x485A18CE | (v223 + 396815680 - ((2 * v223) & 0x80)) ^ 0x17A6ED40) ^ (16 * (v225 ^ 0xE6));
  v229 = 16 * (v223 & 0xF);
  v230 = (v227 + 545572864) ^ 0xF996CE80;
  v231 = 662 * (((v230 | v229) + 3155135 - ((2 * (v230 | v229)) & 0x60497E)) ^ 0x3024BF);
  v232 = 662 * (*(unsigned __int8 *)(v28 + (v231 + 466048) % 0x3C5) ^ v74);
  v233 = *(unsigned __int8 *)(v28 + (v232 + 466048) % 0x3C5) ^ 0xE6;
  v234 = v233 + 1380917743 + (~(2 * v233) | 0xFFFFFE23);
  v235 = *(unsigned __int8 *)(v28 + v232 % 0x3C5);
  v236 = (((v235 >> 4) ^ 0xE) + ~(2 * (((v235 >> 4) ^ 0xE) & 7 ^ ((v235 & 0x10) != 0))) - 25) ^ *(unsigned __int8 *)(v28 + v231 % 0x3C5);
  v237 = ((v101 >> 4) ^ 0xFF8FB4F6) & 0x63D5894 ^ 0xF2B9F18 ^ (-153522059
                                                                           - (((v101 >> 4) ^ 0xFF8FB4F6) & 0x24088A | 0xF6D97075)
                                                                           + (((v101 >> 4) ^ 0xFF8FB4F6) & 0x26195011 | 0x9268F8A));
  v238 = (v237 - ((2 * v237) & 0x4F615AE0) - 1481593488) ^ 0x81BDBDE4;
  v239 = 662 * (((v238 | v228 & 0xF0) + 405314440 - 2 * ((v238 & 0x18289B8F | v228 & 0x80) ^ v238 & 7)) ^ 0x18289B88);
  v240 = v239 % 0x3C5;
  v241 = 662
       * (*(unsigned __int8 *)(v28 + (v239 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (662 * v236 + 466048 - 965 * (((662 * v236 + 466048) * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v242 = v241 + 466048 - 965 * (((8901487 * (unint64_t)(v241 + 466048)) >> 32) >> 1);
  v243 = *(unsigned __int8 *)(v28 + (v241 - 965 * ((v241 * (unint64_t)v27) >> 32)));
  v244 = 662
       * ((((v243 >> 4) ^ 0xE) + ~(2 * (((v243 >> 4) ^ 0xE) & 7 ^ ((v243 & 0x10) != 0))) - 25) ^ *(unsigned __int8 *)(v28 + v240))
       + 466048;
  v245 = 662
       * ((((v101 >> 8) & 0xF) + ((v228 >> 4) & 0xF0) - 780620480 - ((v228 >> 3) & 0x80)) ^ 0xD178AD40);
  v246 = v245 % 0x3C5;
  v247 = 662
       * (*(unsigned __int8 *)(v28 + (v245 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v244 - 965 * ((v244 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v248 = v247 - 965 * ((v247 * (unint64_t)v27) >> 32);
  v249 = 662
       * ((((*(_BYTE *)(v28 + v248) >> 4) ^ 0xE)
                          - 2 * (((*(_BYTE *)(v28 + v248) >> 4) ^ 0xE) & 7 ^ ((*(_BYTE *)(v28 + v248) & 0x10) != 0))
                          - 26) ^ *(unsigned __int8 *)(v28 + v246))
       + 466048;
  v250 = ((v224 >> 8) & 0xF0 | ((unsigned __int16)v212 >> 12)) ^ 0x13;
  v251 = 662 * ((v250 - 1551301157 - 2 * (v250 & 0xFFFFFFDF ^ (v212 >> 12) & 4)) ^ 0xA38905DB);
  v252 = 662
       * (*(unsigned __int8 *)(v28 + (v251 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v249 - 965 * ((v249 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v253 = v252 + 466048 - 965 * (((8901487 * (unint64_t)(v252 + 466048)) >> 32) >> 1);
  v254 = *(unsigned __int8 *)(v28 + (v252 - 965 * ((v252 * (unint64_t)v27) >> 32)));
  v255 = 662
       * ((((v254 >> 4) ^ 0xE) - 2 * (((v254 >> 4) ^ 0xE) & 7 ^ ((v254 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v251 % 0x3C5))
       + 466048;
  v256 = v255 - 965 * ((v255 * (unint64_t)v27) >> 32);
  v257 = (v224 >> 12) & 0xF0 | HIWORD(v212) & 0xF;
  v258 = (v257 ^ 0xAC) - 2085002734 - ((2 * v257) & 0x24);
  v259 = ((*(unsigned __int8 *)(v28 + v253) ^ 0xE6) << 12) ^ ((*(unsigned __int8 *)(v28
                                                                                  + v247
                                                                                  + 466048
                                                                                  - 965
                                                                                  * (((8901487 * (unint64_t)(v247 + 466048)) >> 32) >> 1)) ^ 0xE6) << 8);
  v260 = 662 * (v258 ^ 0x83B96212);
  v261 = 662
       * (*(unsigned __int8 *)(v28 + (v260 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v256) ^ 0xE6)) ^ 0xE6);
  LOBYTE(v253) = (*(_BYTE *)(v28 + (v261 - 965 * ((v261 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v262 = (v253
                         - 2
                         * (v253 & 7 ^ ((*(_BYTE *)(v28
                                                  + (v261 - 965 * ((v261 * (unint64_t)v27) >> 32))) & 0x10) != 0))
                         - 26) ^ *(unsigned __int8 *)(v28 + v260 % 0x3C5);
  v263 = v261 + 466048 - 965 * (((8901487 * (unint64_t)(v261 + 466048)) >> 32) >> 1);
  v264 = 662 * v262 + 466048 - 965 * (((662 * v262 + 466048) * (unint64_t)v27) >> 32);
  v265 = (HIWORD(v222) & 0xF0 | (v209 >> 20) & 0xF) ^ 0x55;
  v266 = 662 * ((v265 + 1856116774 - ((2 * v265) & 0x4C)) ^ 0x6EA21826);
  v267 = 662
       * (*(unsigned __int8 *)(v28 + (v266 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v264) ^ 0xE6)) ^ 0xE6);
  v268 = v267 + 466048 - 965 * (((8901487 * (unint64_t)(v267 + 466048)) >> 32) >> 1);
  v269 = (*(unsigned __int8 *)(v28 + (v267 - 965 * ((v267 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v270 = 662 * ((v269 - ((2 * v269) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v266 % 0x3C5)) + 466048;
  v271 = ((*(unsigned __int8 *)(v28 + v268) ^ 0xE6) << 20) ^ ((*(unsigned __int8 *)(v28 + v263) ^ 0xE6) << 16);
  v272 = ((v222 >> 20) & 0xF0 | HIBYTE(v209) & 0xF) ^ 0x83;
  v273 = 662 * ((v272 + 605039114 - ((2 * v272) & 0x14)) ^ 0x24102A0A);
  v274 = 662
       * (*(unsigned __int8 *)(v28 + (v273 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v270 - 965 * ((v270 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v275 = (*(unsigned __int8 *)(v28 + (v274 - 965 * ((v274 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v276 = 662 * ((v275 - ((2 * v275) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v273 % 0x3C5)) + 466048;
  v277 = HIBYTE(v222) & 0xF0;
  v278 = ~v209;
  v279 = 662 * ((v277 & 0xFFFFFFF0 | (~v209 >> 28)) ^ 0x40) + 466048;
  v280 = *(unsigned __int8 *)(v28 + (v279 - 965 * ((v279 * (unint64_t)v27) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v276 - 965 * ((v276 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v281 = *(unsigned __int8 *)(v28 + v242);
  v282 = 662 * (v280 ^ 0xE6)
       + 466048
       - 965 * (((8901487 * (unint64_t)(662 * (v280 ^ 0xE6u) + 466048)) >> 32) >> 1);
  v283 = v234 ^ (16 * (v281 ^ 0xE6));
  LODWORD(v101) = 662 * ((((v259 ^ v283) >> 4) & 0xF0 | (v101 >> 8) & 0xF) ^ 0x10) + 218460;
  LODWORD(v101) = (*(unsigned __int8 *)(v28 + (662 * ((16 * (v234 & 0xF)) ^ 0xE0 | v230) + 218460) % 0x3C5) ^ 0xE6 | ((*(unsigned __int8 *)(v28 + (v101 - 965 * ((v101 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8)) ^ (16 * (*(unsigned __int8 *)(v28 + (662 * (v283 & 0xF0 ^ 0xE0 | v238) + 218460) % 0x3C5) ^ 0xE6));
  v284 = 662 * (((v259 >> 8) & 0xF0 | ((unsigned __int16)v212 >> 12)) ^ 3) + 218460;
  LODWORD(v101) = v101 ^ ((*(unsigned __int8 *)(v28 + (v284 - 965 * ((v284 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v285 = v259 ^ v283 ^ 0x249F4434 ^ v271;
  v286 = v285 ^ ((*(unsigned __int8 *)(v28
                                     + v274
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v274 + 466048)) >> 32) >> 1)) ^ 0xE6) << 24);
  v287 = 662 * (((v285 >> 12) & 0xF0 | HIWORD(v212) & 0xF) ^ 0xC) + 218460;
  v288 = v101 ^ ((*(unsigned __int8 *)(v28 + (v287 - 965 * ((v287 * (unint64_t)v27) >> 32))) ^ 0xE6) << 16);
  LODWORD(v101) = 662 * ((HIWORD(v271) & 0xF0 | (v209 >> 20) & 0xF) ^ 5) + 218460;
  v289 = 662 * (((v286 >> 20) & 0xF0 | HIBYTE(v209) & 0xF) ^ 0x63) + 218460;
  v290 = v288 ^ ((*(unsigned __int8 *)(v28
                                     + (v101 - 965 * ((v101 * (unint64_t)v27) >> 32))) ^ 0xE6) << 20) ^ ((*(unsigned __int8 *)(v28 + (v289 - 965 * ((v289 * (unint64_t)v27) >> 32))) ^ 0xE6) << 24);
  v291 = 662 * ((((v286 ^ ((*(unsigned __int8 *)(v28 + v282) ^ 6) << 28)) >> 24) & 0xF0 | (v278 >> 28)) ^ 0x70) + 218460;
  v292 = v291 - 965 * ((v291 * (unint64_t)v27) >> 32);
  v991 = v290 ^ ((unint64_t)(*(unsigned __int8 *)(v28 + ((v292 + 410230310 - ((2 * v292) & 0x44C)) ^ 0x18739E26u)) ^ 0xE6u) << (((v292 + 38 - ((2 * v292) & 0x4C)) & 0x1C ^ 0x18) + ((v292 + 38 - ((2 * v292) & 0x4C)) & 0x1C ^ 4u)));
  v293 = *(unsigned __int8 *)(v28
                            + (662 * (HIWORD(v991) & 0xF)
                                           + 454132
                                           - 965
                                           * (((662 * (HIWORD(v991) & 0xF) + 454132) * (unint64_t)v27) >> 32))) ^ 0xE6;
  v294 = ((*(unsigned __int8 *)(v28
                              + (662 * (HIBYTE(v991) & 0xF)
                                             + 454132
                                             - 965
                                             * (((662 * (HIBYTE(v991) & 0xF) + 454132) * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * (v991 >> 28) + 454132 - 965 * (((662 * (v991 >> 28) + 454132) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12) | v293;
  v994 = v196 ^ 0x7A6D79EB;
  v295 = LODWORD(STACK[0x4F4])
       - 328792993
       + (v196 ^ 0x7A6D79EB)
       - ((2 * (LODWORD(STACK[0x4F4]) - 328792993 + (v196 ^ 0x7A6D79EB))) & 0xE2B87C48);
  v990 = v294 - 2 * (v294 & 0xBEACE ^ v293 & 4) - 1177818422;
  LODWORD(v101) = 662 * ((LODWORD(STACK[0x6E0]) >> 28) ^ 6) + 439568;
  v296 = 662 * (HIBYTE(LODWORD(STACK[0x6E0])) & 0xF ^ 7) + 439568;
  v297 = 662 * ((LODWORD(STACK[0x6E0]) >> 20) & 0xF ^ 6) + 439568;
  v298 = 662 * (HIWORD(LODWORD(STACK[0x6E0])) & 0xF ^ 0xD) + 439568;
  LODWORD(v101) = ((*(unsigned __int8 *)(v28 + (v296 - 965 * ((v296 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v101 - 965 * ((v101 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v299 = 662 * (((unsigned __int16)LODWORD(STACK[0x6E0]) >> 12) ^ 0xB) + 439568;
  LODWORD(v101) = ((v101 | *(unsigned __int8 *)(v28
                                                            + (v298
                                                                           - 965
                                                                           * ((v298 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v297 - 965 * ((v297 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v300 = 662 * ((LODWORD(STACK[0x6E0]) >> 8) & 0xF ^ 2) + 439568;
  v301 = 662 * ((LODWORD(STACK[0x6E0]) >> 4) ^ 0xA) + 439568;
  LODWORD(v101) = v101 | *(unsigned __int8 *)(v28 + (v300 - 965 * ((v300 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v302 = ((_DWORD)v101 << 8) + 495211382 - (((_DWORD)v101 << 9) & 0x3B08A600);
  LODWORD(v101) = LODWORD(STACK[0x650]) + 608896168 - ((2 * LODWORD(STACK[0x650])) & 0x150);
  v303 = *(unsigned __int8 *)(v28 + (v299 - 965 * ((v299 * (unint64_t)v27) >> 32))) ^ 0xE6;
  LODWORD(STACK[0x650]) = v22;
  v984 = v302 ^ (v303 << 12);
  v985 = v302;
  v304 = 662 * ((v1007 & 0x298) + ((v1005 >> 28) ^ 2) + (v1007 & 0x298 ^ 0x298));
  LODWORD(v101) = (v984 ^ 0x1D845376 | v101 ^ 0x244B04A8) ^ (16
                                                           * (*(unsigned __int8 *)(v28
                                                                                 + (v301
                                                                                                - 965
                                                                                                * ((v301
                                                                                                  * (unint64_t)v27) >> 32))) ^ 0xE6));
  v305 = 662 * (HIBYTE(v1005) & 0xF ^ 6) + 439568;
  v306 = 662 * ((v1005 >> 20) & 0xF ^ 2) + 439568;
  v307 = (unint64_t)(v1005 ^ 0x26281E41) >> (((98 - v1012) & 8 ^ 8) + ((98 - v1012) & 8));
  v308 = 662 * (HIWORD(v1005) & 0xF ^ 8) + 439568;
  v981 = (((*(unsigned __int8 *)(v28 + (v305 - 965 * ((v305 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v304 - 965 * ((v304 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v308 - 965 * ((v308 * (unint64_t)v27) >> 32)))) ^ (16 * (*(unsigned __int8 *)(v28 + (v306 - 965 * ((v306 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v309 = (~(2 * (v307 - ((2 * v307) & 0xC40EEED6) - 502827157)) & 0x10)
       + ((v307 - ((2 * v307) & 0xC40EEED6) - 502827157) & 0xF ^ 0x293);
  v310 = 662 * (((v307 - ((2 * v307) & 0xD6) + 107) >> 4) ^ 6) + 439568;
  v311 = 662 * ((v1005 >> 4) ^ 4) + 439568;
  v983 = ((v981 << 16) ^ 0xE60000) - 1704323551 - ((2 * ((v981 << 16) ^ 0xE60000)) & 0x34D40000);
  v979 = ((v983 ^ 0x9A6A1621)
        + ((*(unsigned __int8 *)(v28
                               + (662 * v309
                                              - 965 * (((662 * v309) * (unint64_t)v27) >> 32))) ^ 0xE6) << 8)) ^ ((*(unsigned __int8 *)(v28 + (v310 - 965 * ((v310 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v312 = (v979 | v1019 ^ 0xBA051EDE) ^ (16
                                      * (*(unsigned __int8 *)(v28
                                                            + (v311
                                                                           - 965
                                                                           * ((v311 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v313 = (*(unsigned __int8 *)(v28 + v1010 % 0x3C5) >> 4) ^ 0xE;
  v314 = 662 * ((v313 + (~(2 * v313) | 0xF3) - 25) ^ *(unsigned __int8 *)(v28 + v1016 % 0x3C5))
       + 466048;
  v315 = v101 >> (((-97 - v1023) & 4 ^ 4) + ((-97 - v1023) & 4));
  v316 = v315 - ((2 * v315) & 0xE274A9C4) - 247835422;
  v317 = 662
       * ((((v312 & 0xF0 | v316 & 0xF) ^ 2) + 1154744950 - 2
                                                         * (((v312 & 0xF0 | v316 & 0xF) ^ 2) & 0x77777777 ^ v315 & 1)) ^ 0x44D40276);
  v318 = 662
       * (*(unsigned __int8 *)(v28 + (v317 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v314 - 965 * ((v314 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  LODWORD(v307) = *(unsigned __int8 *)(v28
                                     + v318
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v318 + 466048)) >> 32) >> 1));
  v319 = (*(unsigned __int8 *)(v28 + (v318 - 965 * ((v318 * (unint64_t)v27) >> 32))) ^ 0xE6u) >> ((v307 & 4 ^ 4) + (v307 & 4));
  v320 = 662 * ((v319 - ((2 * v319) & 0xCC) - 26) ^ *(unsigned __int8 *)(v28 + v317 % 0x3C5)) + 466048;
  v321 = ((v312 >> 4) & 0xF0 | (v316 >> 4)) ^ 0xE;
  v322 = 662 * ((v321 + 1670965836 - ((2 * v321) & 0x98)) ^ 0x6398EA4C);
  v323 = 662
       * (*(unsigned __int8 *)(v28 + (v322 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v320 - 965 * ((v320 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v324 = (*(unsigned __int8 *)(v28 + (v323 - 965 * ((v323 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v325 = 662 * ((v324 - ((2 * v324) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v322 % 0x3C5)) + 466048;
  v326 = ((v979 >> 8) & 0xF0 | (v316 >> 8) & 0xF) ^ 4;
  v977 = 662 * ((v326 + 161445820 - 2 * (v326 & 0xBD ^ (v316 >> 8) & 1)) ^ 0x99F77BC);
  v327 = 662
       * (*(unsigned __int8 *)(v28 + (v977 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v325 - 965 * ((v325 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v328 = *(unsigned __int8 *)(v28
                            + v327
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v327 + 466048)) >> 32) >> 1)) ^ 0xE6;
  v329 = 662 * (((16 * (v307 ^ 0xE6) + 7) ^ v1021) & 0xF0 | (v101 >> 4)) + 218460;
  v975 = (v328 << 12) - ((v328 << 13) & 0xC000) + 1635806073;
  v976 = v975 ^ ((*(unsigned __int8 *)(v28
                                     + v323
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v323 + 466048)) >> 32) >> 1)) ^ 0xE6) << 8);
  v982 = LODWORD(STACK[0x5D8]) ^ (16
                                * (*(unsigned __int8 *)(v28
                                                      + (v329
                                                                     - 965 * ((v329 * (unint64_t)v27) >> 32))) ^ 0xE6));
  LODWORD(v101) = 662
                * ((((v976 ^ (16 * (v307 ^ 0xE6)
                            - 1053291513
                            - ((32 * (v307 ^ 0xE6)) & 0x800))) >> 4) & 0xF0 | (v101 >> 8) & 0xF) ^ 0x70)
                + 218460;
  v978 = v982 ^ ((*(unsigned __int8 *)(v28
                                     + (v101 - 965 * ((v101 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8);
  LODWORD(v101) = 662 * ((v978 >> 8) & 0xF)
                + 454132
                - 1930 * ((2225372 * (unint64_t)(662 * ((v978 >> 8) & 0xF) + 454132)) >> 32);
  v980 = ((2 * v101) & 0xDFC) + (v101 ^ 0xEF6FF6FE);
  LODWORD(v101) = (LODWORD(STACK[0x6DC]) ^ 0x160FA9B3)
                + LODWORD(STACK[0x50C])
                - ((2 * ((LODWORD(STACK[0x6DC]) ^ 0x160FA9B3) + LODWORD(STACK[0x50C])) + 1468518862) & 0xF396A992);
  v992 = v295 + 1901870628;
  v330 = 662 * (((v295 + 1901870628) >> 28) ^ 7) + 439568;
  v331 = 662 * (((v295 + 1901870628) >> 24) & 0xF ^ 1) + 439568;
  v332 = 662 * (((v295 + 1901870628) >> 20) & 0xF ^ 5) + 439568;
  v333 = *(unsigned __int8 *)(v28
                            + (662 * (((v295 + 1901870628) >> 16) & 0xF ^ 0xC) + 439568)
                            % (v990 & 0x3C5 ^ 0x2C0 | v990 & 0x3C5 ^ 0x105u)) ^ 0xE6 | ((*(unsigned __int8 *)(v28 + (v331 - 965 * ((v331 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v330 - 965 * ((v330 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v334 = 662 * (((unsigned __int16)(v295 + 15908) >> 12) ^ 3) + 439568;
  v335 = 662 * (((v295 + 1901870628) >> 8) & 0xF ^ 0xE) + 439568;
  LODWORD(v307) = 662 * (((v295 + 36) >> 4) ^ 2) + 439568;
  v336 = 662 * (((_BYTE)v295 + 52) & 0xF ^ 4) + 439568;
  v337 = 662 * ((1517339215 - v101) >> 28)
       + 439568
       - 965 * (((662 * ((1517339215 - v101) >> 28) + 439568) * (unint64_t)v27) >> 32);
  v338 = ((v333 << 8) ^ ((*(unsigned __int8 *)(v28 + (v332 - 965 * ((v332 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v335 - 965 * ((v335 * (unint64_t)v27) >> 32))) ^ 0xE6) ^ (16 * (*(unsigned __int8 *)(v28 + (v334 - 965 * ((v334 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v339 = (v338 << 8) + 1518088941 - ((v338 << 9) & 0xB4F86400);
  v340 = *(unsigned __int8 *)(v28 + (v336 - 965 * ((v336 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v341 = v340 - 501830181 - ((2 * v340) & 0x1B6);
  LODWORD(v101) = v101 - 1517339216;
  v342 = 662 * (BYTE3(v101) & 0xF ^ 9) + 439568;
  v343 = (v339 ^ 0x5A7C32ED | v341 ^ 0xE216ADDB) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v307
                                                                                       - 965
                                                                                       * ((v307
                                                                                         * (unint64_t)v27) >> 32))) ^ 0xE6));
  v344 = 662 * ((v101 >> 20) & 0xF ^ 0xC) + 439568;
  v345 = 662 * (WORD1(v101) & 0xF ^ 0xB) + 439568;
  v1013 = *(unsigned __int8 *)(v28 + (v345 - 965 * ((v345 * (unint64_t)v27) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v344 - 965 * ((v344 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v346 = ((*(unsigned __int8 *)(v28 + (v342 - 965 * ((v342 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + v337) ^ 0xE6) << 12);
  v347 = 662 * (((unsigned __int16)v101 >> 12) ^ 5) + 439568;
  v348 = v1013 ^ 0xF2BD55AC ^ (v346 + 87370 - ((2 * v346) & 0xAA00));
  v349 = 662 * ((v101 >> 8) & 0xF ^ 4) + 439568;
  v350 = 662 * ((v101 >> 4) ^ 0xC) + 439568;
  v1024 = (v348 << 16) - 2123444672 - ((v348 << 17) & 0x2DC0000);
  v351 = ((v1024 ^ 0x816ECE40)
        + ((*(unsigned __int8 *)(v28 + (v349 - 965 * ((v349 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8)) ^ ((*(unsigned __int8 *)(v28 + (v347 - 965 * ((v347 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v352 = (v341 & 0xF ^ 7) - ((2 * (v341 & 0xF ^ 7)) & 0xFFFFFFFB) - 1086477107;
  v353 = (v352 & 0x1310842E ^ 0x40000026) + (v352 ^ 0x131AE5C9) - ((v352 ^ 0x131AE5C9) & 0x2825002E);
  v354 = *(unsigned __int8 *)(v28
                            + (662 * (v101 & 0xF ^ 9)
                                           + 439568
                                           - 965 * (((662 * (v101 & 0xF ^ 9) + 439568) * v27) >> 32))) ^ 0xE6;
  LODWORD(v101) = v354 - 378651567 - ((2 * v354) & 0xA2);
  v355 = (v351 | v101 ^ 0xE96E3C51) ^ (16
                                     * (*(unsigned __int8 *)(v28
                                                           + (v350
                                                                          - 965 * ((v350 * (unint64_t)v27) >> 32))) ^ 0xE6));
  v1022 = v353 ^ 0xD712CD26;
  LODWORD(v101) = (16 * (v101 & 0xF)) ^ 0x10 | v353 ^ 0xD712CD26;
  LODWORD(v101) = 662 * ((v101 - 5711334 - ((2 * v101) & 0x7F51B434)) ^ 0xFFA8DA1A);
  LODWORD(STACK[0x5D8]) = v343;
  v356 = ((v343 >> 4) ^ 0x74395AFB) & 0x42FC6CB4 ^ 0x213B08B9 ^ ((((v343 >> 4) ^ 0x74395AFB) & 0x230408A ^ 0x31034003)
                                                               + (((v343 >> 4) ^ 0x74395AFB) & 0xCC2C31)
                                                               - 1);
  v1011 = 662 * (*(unsigned __int8 *)(v28 + ((int)v101 + 466048) % 0x3C5u) ^ LODWORD(STACK[0x6B0]));
  LOBYTE(v350) = (*(_BYTE *)(v28 + v1011 % 0x3C5) >> 4) ^ 0xE;
  LODWORD(v101) = (v350 - 2 * (v350 & 7 ^ ((*(_BYTE *)(v28 + v1011 % 0x3C5) & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v101 % 0x3C5);
  v1020 = (-1192467000 - (v356 | 0xB8EC65C8) + (v356 | 0x47139A37)) ^ 0x172BD287;
  v357 = 662 * (((v1020 | v355 & 0xF0) - 1267057303 - ((2 * (v1020 | v355 & 0xF0)) & 0x68F47AD2)) ^ 0xB47A3D69);
  v1008 = 662
        * (*(unsigned __int8 *)(v28 + (v357 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v28
                                                                                      + (662 * v101 + 466048 - 965 * (((662 * v101 + 466048) * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  LOBYTE(v356) = (*(_BYTE *)(v28 + (v1008 - 965 * ((v1008 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  LODWORD(v101) = (v356
                                  + ~(2
                                    * (v356 & 7 ^ ((*(_BYTE *)(v28
                                                             + (v1008
                                                                            - 965
                                                                            * ((v1008 * (unint64_t)v27) >> 32))) & 0x10) != 0)))
                                  - 25) ^ *(unsigned __int8 *)(v28 + v357 % 0x3C5);
  v358 = 662
       * ((((v355 >> 4) & 0xF0 | (v343 >> 8) & 0xF)
         + 923097155
         - 2 * (((v355 >> 4) & 0x50 | (v343 >> 8) & 3) ^ (v355 >> 4) & 0x10)) ^ 0x37055843);
  v359 = ((v351 >> 8) & 0xF0 | ((unsigned __int16)v339 >> 12)) ^ 3;
  v1017 = v339;
  v1006 = 662
        * (*(unsigned __int8 *)(v28 + (v358 + 466048) % 0x3C5) ^ (16
                                                                * (*(unsigned __int8 *)(v28
                                                                                      + ((((2 * (_DWORD)v101) & 0x134)
                                                                                        + (v101 ^ 0xE7FFAB9A)
                                                                                        + 806) & 0x296 | (217 - (((2 * (_DWORD)v101) & 0x134) + (v101 ^ 0xE7FFAB9A))) & 0x96)
                                                                                      * (((2 * (_DWORD)v101) & 0x134)
                                                                                       + (v101 ^ 0xE7FFAB9A)
                                                                                       + 402675494)
                                                                                      % 0x3C5) ^ 0xE6)) ^ 0xE6);
  LOBYTE(v356) = (*(_BYTE *)(v28 + (v1006 - 965 * ((v1006 * (unint64_t)v27) >> 32))) >> 4) ^ 0xE;
  v360 = 662
       * ((v356
                          - 2
                          * (v356 & 7 ^ ((*(_BYTE *)(v28
                                                   + (v1006 - 965
                                                                          * ((v1006 * (unint64_t)v27) >> 32))) & 0x10) != 0))
                          - 26) ^ *(unsigned __int8 *)(v28 + v358 % 0x3C5))
       + 466048;
  LODWORD(v101) = 662 * ((v359 + 220838802 - 2 * (v359 & 0x96 ^ (v339 >> 12) & 4)) ^ 0xD29BB92);
  v989 = 662
       * (*(unsigned __int8 *)(v28 + ((int)v101 + 466048) % 0x3C5u) ^ (16
                                                                     * (*(unsigned __int8 *)(v28
                                                                                           + (v360 - 965 * ((v360 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6);
  v361 = *(_BYTE *)(v28 + (v989 - 965 * ((v989 * (unint64_t)v27) >> 32)));
  LODWORD(v101) = 662
                * ((((v361 >> 4) ^ 0xE) - 2 * (((v361 >> 4) ^ 0xE) & 7 ^ ((v361 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v101 % 0x3C5))
                + 466048;
  v362 = ((v351 >> 12) & 0xF0 | HIWORD(v339) & 0xF) ^ 0xC;
  v988 = 662 * ((v362 + 996582526 - ((2 * v362) & 0xFC)) ^ 0x3B66A47E);
  v363 = *(unsigned __int8 *)(v28 + (v988 + 466048) % 0x3C5) ^ (16
                                                              * (*(unsigned __int8 *)(v28
                                                                                    + (v101 - 965 * ((v101 * (unint64_t)v27) >> 32))) ^ 0xE6)) ^ 0xE6;
  v987 = 662 * v363;
  v364 = 662 * v363 + 1249238104 - ((1324 * v363) & 0x6BB8B0);
  if ((v980 + 277874946) >= 0x3C5)
    v365 = 1961982433;
  else
    v365 = 1961983398;
  v974 = v365;
  v366 = ((v361 ^ 0xE0) & 0xF0) == 0;
  v367 = v364 ^ 0x4A75DF9D;
  if (v366)
    v367 = 965;
  v986 = (v364 ^ 0x4A75DC58u) % (v367 & (v364 ^ 0xB58A23A7) | v364 & 0x3C4 ^ 0x40);
  v368 = LODWORD(STACK[0x644]) + LODWORD(STACK[0x5A8]);
  v369 = v368 + 1064290356 - ((2 * v368 - 874042744) & 0xB2F865E0);
  v370 = 662 * ((v369 >> (LODWORD(STACK[0x688]) ^ 0xD8)) & 0xF ^ 9) + 439568;
  v371 = ((*(unsigned __int8 *)(v28 + (v370 - 965 * ((v370 * (unint64_t)v27) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v369 >> 28) ^ 0xD) + 439568 - 965 * (((662 * ((v369 >> 28) ^ 0xD) + 439568) * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v372 = 662 * ((v369 >> 20) & 0xF ^ 7) + 439568;
  v373 = 662 * (HIWORD(v369) & 0xF ^ 0xC) + 439568;
  v374 = v371 | *(unsigned __int8 *)(v28 + (v373 - 965 * ((v373 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v375 = 662 * (((unsigned __int16)(v368 - 14284 - ((2 * v368 + 10888) & 0x65E0)) >> 12) ^ 3) + 439568;
  v376 = v375 - 965 * ((v375 * (unint64_t)v27) >> 32);
  v377 = (v374 << 8) ^ ((*(unsigned __int8 *)(v28 + (v372 - 965 * ((v372 * (unint64_t)v27) >> 32))) ^ 0xE6) << 12);
  v378 = 662 * ((v369 >> 8) & 0xF ^ 2) + 439568;
  v379 = 662 * (~(v369 >> 4) & 0xF) + 439568;
  v380 = v379 - 965 * ((v379 * (unint64_t)v27) >> 32);
  v381 = 662 * ((v368 + 1064290356) & 0xF)
       + 439568
       - 965 * (((662 * ((v368 + 1064290356) & 0xFu) + 439568) * (unint64_t)v27) >> 32);
  v382 = v377 | *(unsigned __int8 *)(v28 + (v378 - 965 * ((v378 * (unint64_t)v27) >> 32))) ^ 0xE6;
  v383 = (v382 << 8) - 1824117901 - ((v382 << 9) & 0x268C5600);
  v384 = *(unsigned __int8 *)(v28 + v376) ^ 0xE6;
  v385 = *(unsigned __int8 *)(v28 + v381) ^ 0xE6;
  LOBYTE(v376) = v385 + 55;
  v386 = v385 - 1529719753 - ((2 * v385) & 0x4A) - 18;
  v387 = v383 ^ (v384 << 12);
  v388 = (v387 ^ 0x93462B73 | v386 ^ 0xA4D25425) ^ (16 * (*(unsigned __int8 *)(v28 + v380) ^ 0xE6));
  v389 = LODWORD(STACK[0x524])
       - LODWORD(STACK[0x650])
       - ((2 * (LODWORD(STACK[0x524]) - LODWORD(STACK[0x650])) - 1211141536) & 0xBB3A2D7A)
       + 965005293;
  v390 = 662 * (HIBYTE(v389) & 0xF ^ 0xD) + 439568;
  v391 = 662 * ((v389 >> 20) & 0xF ^ 9) + 439568;
  v392 = 662 * (HIWORD(v389) & 0xF ^ 0xD) + 439568;
  v393 = ((*(unsigned __int8 *)(v28 + (v390 - 965 * ((4450744 * (unint64_t)v390) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v389 >> 28) ^ 5) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v389 >> 28) ^ 5) + 439568)) >> 32))) ^ 0xE6) << 12);
  v394 = 662
       * (((unsigned __int16)(LOWORD(STACK[0x524])
                            - LOWORD(STACK[0x650])
                            - ((2 * (LOWORD(STACK[0x524]) - LOWORD(STACK[0x650])) + 29280) & 0x2D7A)
                            - 12307) >> 12) ^ 1)
       + 439568;
  v395 = v393 | *(unsigned __int8 *)(v28 + (v392 - 965 * ((4450744 * (unint64_t)v392) >> 32))) ^ 0xE6;
  v396 = 662 * ((v389 >> 8) & 0xF ^ 6) + 439568;
  v397 = (v395 << 8) ^ ((*(unsigned __int8 *)(v28
                                            + (v391 - 965 * ((4450744 * (unint64_t)v391) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v396 - 965 * ((4450744 * (unint64_t)v396) >> 32))) ^ 0xE6;
  v398 = (v397 << 8) - 1851166038 - ((v397 << 9) & 0x2352E400);
  v399 = 662
       * (((LOBYTE(STACK[0x524])
                           - LOBYTE(STACK[0x650])
                           - ((2 * (LOBYTE(STACK[0x524]) - LOBYTE(STACK[0x650])) + 96) & 0x7A)
                           - 19) >> 4) ^ 0xB)
       + 439568;
  v400 = ((v376 & 1) + (v386 & 0xE ^ 0x82C5CA05) - 1) ^ 0xC7ED443D;
  v401 = *(unsigned __int8 *)(v28
                            + (662 * (v389 & 0xF ^ 0xD)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v389 & 0xF ^ 0xD) + 439568)) >> 32))) ^ 0xE6;
  v402 = v401 + 1594382940 - ((2 * v401) & 0xB8);
  v403 = v398 ^ ((*(unsigned __int8 *)(v28 + (v394 - 965 * ((4450744 * (unint64_t)v394) >> 32))) ^ 0xE6) << 12);
  v404 = v403 ^ 0x91A972AA | v402 ^ 0x5F085A5C;
  v405 = (v400 | 0x361E98CC) - (v400 | 0xC9E16733) - 907974861;
  v406 = v405 ^ 0x733616F0;
  v407 = (16 * (v402 & 0xF)) ^ 0xC0 | v405 ^ 0x733616F0;
  v408 = 662 * ((v407 - 18485251 - 2 * (v407 & 0x7EE5EFFF ^ v405 & 2)) ^ 0xFEE5EFFD);
  v409 = v404 ^ (16
               * (*(unsigned __int8 *)(v28 + (v399 - 965 * ((4450744 * (unint64_t)v399) >> 32))) ^ 0xE6));
  v410 = 662 * (*(unsigned __int8 *)(v28 + (v408 + 466048) % 0x3C5) ^ LODWORD(STACK[0x6E4]) ^ 0xDBBA128);
  LOBYTE(v404) = (*(_BYTE *)(v28 + v410 % 0x3C5) >> 4) ^ 0xE;
  v411 = (v404 - 2 * (v404 & 7 ^ ((*(_BYTE *)(v28 + v410 % 0x3C5) & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v408 % 0x3C5);
  v412 = (v410 + 466048) % 0x3C5;
  v413 = ((v388 >> 4) ^ 0xEFE58364) & 0xE98E22C7 ^ 0xA1DF31E1 ^ (((2 * (((v388 >> 4) ^ 0xEFE58364) & 0xE98E22C8)) | 0x43BE63CA)
                                                               - (((v388 >> 4) ^ 0xEFE58364) & 0xE98E22C8)
                                                               + 1579208219);
  v414 = 662 * (((v409 & 0xF0 | v413) + 1236125338 - ((2 * (v409 & 0xF0 | v413)) & 0x935B8D34)) ^ 0x49ADC69A);
  v415 = 662
       * (*(unsigned __int8 *)(v28 + (v414 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (662 * v411 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v411 + 466048)) >> 32))) ^ 0xE6)) ^ 0xE6);
  v416 = v415 + 466048 - 965 * (((8901487 * (unint64_t)(v415 + 466048)) >> 32) >> 1);
  v417 = v415 - 965 * ((4450744 * (unint64_t)v415) >> 32);
  v418 = ((2 * ((v388 >> 8) & 0xF)) | 0xCBFBEE4A) - ((v388 >> 8) & 0xF) - 108934981;
  v419 = (((v409 >> 4) & 0xF0 | v418) ^ 0xC57DB705)
       - 585601387
       - 2 * ((((v409 >> 4) & 0xF0 | v418) ^ 0xC57DB705) & 0x1C186E9D ^ v418 & 8);
  LOBYTE(v409) = (*(_BYTE *)(v28 + v417) >> 4) ^ 0xE;
  v420 = 662
       * ((v409 - 2 * (v409 & 7 ^ ((*(_BYTE *)(v28 + v417) & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v414 % 0x3C5))
       + 466048;
  v421 = 662 * (v419 ^ 0xDD186E95);
  v422 = 662
       * (*(unsigned __int8 *)(v28 + (v421 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v420 - 965 * ((4450744 * (unint64_t)v420) >> 32))) ^ 0xE6)) ^ 0xE6);
  v423 = (*(unsigned __int8 *)(v28 + (v422 - 965 * ((4450744 * (unint64_t)v422) >> 32))) >> 4) ^ 0xE;
  v424 = 662 * ((v423 - ((2 * v423) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v421 % 0x3C5)) + 466048;
  v425 = v424 - 965 * ((4450744 * (unint64_t)v424) >> 32);
  v426 = v425 + 981408207 - ((2 * v425) & 0x39E);
  LOBYTE(v425) = (-17 - (v425 - 49 - ((2 * v425) & 0x9E))) & 8;
  v427 = *(unsigned __int8 *)(v28 + v412) ^ (16 * (*(unsigned __int8 *)(v28 + v416) ^ 0xE6)) ^ ((*(unsigned __int8 *)(v28 + v422 + 466048 - 965 * (((8901487 * (unint64_t)(v422 + 466048)) >> 32) >> 1)) ^ 0xE6) << ((v425 ^ 8) + v425));
  v428 = ((v403 >> 8) & 0xF0 | ((unsigned __int16)v387 >> 12)) ^ 0x72;
  v429 = 662 * ((v428 + 2139781525 - ((2 * v428) & 0x12A)) ^ 0x7F8A7995);
  v430 = v429 % 0x3C5;
  v431 = 662
       * (*(unsigned __int8 *)(v28 + (v429 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28 + (v426 ^ 0x3A7F19CFu)) ^ 0xE6)) ^ 0xE6);
  v432 = v431 + 466048 - 965 * (((8901487 * (unint64_t)(v431 + 466048)) >> 32) >> 1);
  v433 = *(unsigned __int8 *)(v28 + (v431 - 965 * ((4450744 * (unint64_t)v431) >> 32)));
  v434 = 662
       * ((((v433 >> 4) ^ 0xE) - 2 * (((v433 >> 4) ^ 0xE) & 7 ^ ((v433 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v430))
       + 466048;
  v435 = (v403 >> 12) & 0xF0 | HIWORD(v387) & 0xF;
  v436 = 662 * (((v435 ^ 0x96) + 1881818361 + ((2 * ((v435 ^ 0x96 | 0x7FFFFFF9) ^ v435)) ^ 0x121) + 1) ^ 0x702A44F9);
  v437 = 662
       * (*(unsigned __int8 *)(v28 + (v436 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v434 - 965 * ((4450744 * (unint64_t)v434) >> 32))) ^ 0xE6)) ^ 0xE6);
  v438 = v437 + 466048 - 965 * (((8901487 * (unint64_t)(v437 + 466048)) >> 32) >> 1);
  v439 = (*(unsigned __int8 *)(v28 + (v437 - 965 * ((4450744 * (unint64_t)v437) >> 32))) >> 4) ^ 0xE;
  v440 = 662 * ((v439 - ((2 * v439) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v436 % 0x3C5)) + 466048;
  v441 = *(unsigned __int8 *)(v28 + v438);
  v442 = 662 * ((v383 >> 20) & 0xF ^ (((v398 >> 20) & 0xF ^ 0xA) << ((v441 & 4 ^ 4) + (v441 & 4))) ^ 4);
  v443 = 662
       * (*(unsigned __int8 *)(v28 + (v442 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v440 - 965 * ((4450744 * (unint64_t)v440) >> 32))) ^ 0xE6)) ^ 0xE6);
  v444 = v443 + 466048 - 965 * (((8901487 * (unint64_t)(v443 + 466048)) >> 32) >> 1);
  v445 = (*(unsigned __int8 *)(v28 + (v443 - 965 * ((4450744 * (unint64_t)v443) >> 32))) >> 4) ^ 0xE;
  v446 = ((*(unsigned __int8 *)(v28 + v444) ^ 0xE6) << 20) ^ ((v441 ^ 0xE6) << 16);
  v447 = 662 * ((v445 + (~(2 * v445) | 0xF3) - 25) ^ *(unsigned __int8 *)(v28 + v442 % 0x3C5)) + 466048;
  v448 = (v398 >> 20) & 0xF0 | HIBYTE(v383) & 0xF;
  v449 = 662 * (((v448 ^ 0x13) + 1471829580 - ((2 * v448) & 0x98)) ^ 0x57BA564C);
  v450 = 662
       * (*(unsigned __int8 *)(v28 + (v449 + LODWORD(STACK[0x670])) % 0x3C5) ^ (16
                                                                              * (*(unsigned __int8 *)(v28 + (v447 - 965 * ((4450744 * (unint64_t)v447) >> 32))) ^ 0xE6)) ^ 0xE6);
  v451 = v450 + 466048 - 965 * (((8901487 * (unint64_t)(v450 + 466048)) >> 32) >> 1);
  v452 = (*(unsigned __int8 *)(v28 + (v450 - 965 * ((4450744 * (unint64_t)v450) >> 32))) >> 4) ^ 0xE;
  v453 = 662 * ((v452 - ((2 * v452) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v449 % 0x3C5)) + 466048;
  v454 = 662 * ((HIBYTE(v398) & 0xF0 | (v383 >> 28)) ^ 0x99) + 466048;
  v455 = 662
       * (*(unsigned __int8 *)(v28 + (v454 - 965 * ((4450744 * (unint64_t)v454) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v453 - 965 * ((4450744 * (unint64_t)v453) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  v456 = 662 * ((16 * ((v427 ^ 0xE6) & 0xF)) | v406) + 218460;
  v457 = v427 ^ 0xE6 ^ ((*(unsigned __int8 *)(v28 + v432) ^ 0xE6) << 12);
  v458 = 662 * ((v427 ^ 0xE6) & 0xF0 | v413) + 218460;
  v459 = 662 * (((v457 >> 8) & 0xF0 | ((unsigned __int16)v387 >> 12)) ^ 2) + 218460;
  v460 = 662 * ((((v446 ^ v457) >> 12) & 0xF0 | HIWORD(v387) & 0xF) ^ 6) + 218460;
  v461 = ((*(unsigned __int8 *)(v28 + (v459 - 965 * ((4450744 * (unint64_t)v459) >> 32))) ^ 0xE6) << 12) ^ ((*(unsigned __int8 *)(v28 + (662 * (((v427 >> 4) & 0xF0 | v418) ^ 0xC57DB705) + 218460) % 0x3C5) ^ 0xE6) << 8);
  v462 = v446 ^ v457 ^ ((*(unsigned __int8 *)(v28 + v451) ^ 0xE6) << 24);
  v463 = 662 * ((((v446 ^ v457) >> 16) & 0xF0 | (v383 >> 20) & 0xF) ^ 4) + 218460;
  v464 = ((*(unsigned __int8 *)(v28 + (v463 - 965 * ((4450744 * (unint64_t)v463) >> 32))) ^ 0xE6) << 20) ^ ((*(unsigned __int8 *)(v28 + (v460 - 965 * ((4450744 * (unint64_t)v460) >> 32))) ^ 0xE6) << 16);
  v465 = 662
       * ((((v462 ^ ((*(unsigned __int8 *)(v28
                                         + v455
                                         - 965 * (((8901487 * (unint64_t)v455) >> 32) >> 1)) ^ 6) << 28)) >> 24) & 0xF0 | (v383 >> 28)) ^ 9)
       + 218460;
  v466 = 662 * (((v462 >> 20) & 0xF0 | HIBYTE(v383) & 0xF) ^ 3) + 218460;
  v467 = *(unsigned __int8 *)(v28 + v456 % 0x3C5);
  v468 = v467 ^ (16 * (*(unsigned __int8 *)(v28 + v458 % 0x3C5) ^ 0xE6));
  v469 = ((*(unsigned __int8 *)(v28 + (v465 - 965 * ((4450744 * (unint64_t)v465) >> 32))) ^ 6) << 28) ^ 0xA661DCBB ^ (v461 ^ v468 | ((*(unsigned __int8 *)(v28 + (v466 - 965 * ((4450744 * (unint64_t)v466) >> 32))) ^ 0xE6) << 24)) ^ (v464 - 1503536035 - ((2 * v464) & 0xCC20000));
  v470 = (unint64_t)(v469 >> (v468 & 0x10)) >> (v468 & 0x10 ^ 0x10u);
  LOBYTE(v464) = v470 - ((2 * v470) & 0xF8) + 124;
  LODWORD(v470) = 662 * ((v464 >> 4) ^ 7) + 454132;
  v471 = *(unsigned __int8 *)(v28
                            + (662 * (v464 & 0xF ^ 0xC)
                                           + 454132
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v464 & 0xF ^ 0xCu) + 454132)) >> 32))) ^ 0xE6 ^ ((*(unsigned __int8 *)(v28 + (662 * (HIBYTE(v469) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIBYTE(v469) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * (v469 >> 28) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v469 >> 28) + 454132)) >> 32))) ^ 6) << 12) ^ (16 * (*(unsigned __int8 *)(v28 + (v470 - 965 * ((4450744 * (unint64_t)v470) >> 32))) ^ 0xE6));
  v472 = v461 ^ v468 ^ 0x88B65C92;
  v473 = ((v472 & 0x296 ^ 0x282) + (v472 & 0x296 ^ 0x14)) * (((unsigned __int16)v461 >> 12) + 686);
  v474 = 662 * ((v472 >> 8) & 0xF ^ 0xC) + 454132;
  LODWORD(v470) = 662 * ((v468 >> 4) ^ 0xE) + 454132;
  LODWORD(STACK[0x6E4]) = LODWORD(STACK[0x64C]) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (v470
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v470) >> 32))) ^ 0xE6)) ^ 0x50FF7485 ^ (((*(unsigned __int8 *)(v28 + (v474 - 965 * ((4450744 * (unint64_t)v474) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v473 - 965 * ((4450744 * (unint64_t)v473) >> 32))) ^ 0xE6) << 12) ^ (v471 << 16) | *(unsigned __int8 *)(v28 + (662 * (v467 & 0xF ^ 6) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v467 & 0xF ^ 6u) + 454132)) >> 32))) ^ 0xE6);
  LODWORD(STACK[0x6E8]) ^= v369 ^ 0x36AE3BDC;
  v475 = (*(unsigned __int8 *)(v28 + (v327 - 965 * ((4450744 * (unint64_t)v327) >> 32))) >> 4) ^ 0xE;
  v476 = (v475 - ((2 * v475) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v977 % 0x3C5);
  v477 = (v979 >> 12) & 0xF0 | ((unsigned __int16)v316 >> 12);
  v478 = 662 * (((v477 ^ 5) + 1788614200 - ((2 * v477) & 0x70)) ^ 0x6A9C1638);
  v479 = 662
       * (*(unsigned __int8 *)(v28 + (v478 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (662 * v476 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v476 + 466048)) >> 32))) ^ 0xE6)) ^ 0xE6);
  v480 = v479 + 466048 - 965 * (((8901487 * (unint64_t)(v479 + 466048)) >> 32) >> 1);
  v481 = *(unsigned __int8 *)(v28 + (v479 - 965 * ((4450744 * (unint64_t)v479) >> 32)));
  v482 = 662
       * ((((v481 >> 4) ^ 0xE) - 2 * (((v481 >> 4) ^ 0xE) & 7 ^ ((v481 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v478 % 0x3C5))
       + 466048;
  v483 = (v981 & 0xF0 | HIWORD(v316) & 0xF) ^ 0xEA;
  v484 = 662 * ((v483 - 1348004249 - ((2 * v483) & 0xCE)) ^ 0xAFA71667);
  v485 = 662
       * (*(unsigned __int8 *)(v28 + (v484 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v482 - 965 * ((4450744 * (unint64_t)v482) >> 32))) ^ 0xE6)) ^ 0xE6);
  v486 = *(unsigned __int8 *)(v28
                            + v485
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v485 + 466048)) >> 32) >> 1)) ^ 0xE6;
  v487 = *(unsigned __int8 *)(v28 + v480) ^ 0xE6;
  LODWORD(v470) = (v487 << 17) & 0x600000;
  v488 = (v487 << 16) - 1766829731;
  v489 = *(unsigned __int8 *)(v28 + (v485 - 965 * ((4450744 * (unint64_t)v485) >> 32)));
  v490 = 662
       * ((((v489 >> 4) ^ 0xE) - 2 * (((v489 >> 4) ^ 0xE) & 7 ^ ((v489 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v484 % 0x3C5))
       + 466048;
  v491 = ((v983 >> 20) & 0xF0 | (v316 >> 20) & 0xF) ^ 0xA3;
  v492 = 662 * ((v491 + 376694262 + (~(2 * v491) | 0xFFFFFE13) + 1) ^ 0x1673E5F6);
  v493 = 662
       * (*(unsigned __int8 *)(v28 + (v492 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v490 - 965 * ((4450744 * (unint64_t)v490) >> 32))) ^ 0xE6)) ^ 0xE6);
  v494 = v493 + 466048 - 965 * (((8901487 * (unint64_t)(v493 + 466048)) >> 32) >> 1);
  v495 = *(unsigned __int8 *)(v28 + (v493 - 965 * ((4450744 * (unint64_t)v493) >> 32)));
  v496 = 662
       * ((((v495 >> 4) ^ 0xE) + ~(2 * (((v495 >> 4) ^ 0xE) & 7 ^ ((v495 & 0x10) != 0))) - 25) ^ *(unsigned __int8 *)(v28 + v492 % 0x3C5))
       + 466048;
  v497 = 662 * ((HIBYTE(v983) & 0xF0 | HIBYTE(v316) & 0xF) ^ 0x91) + 466048;
  v498 = 662
       * (*(unsigned __int8 *)(v28 + (v497 - 965 * ((4450744 * (unint64_t)v497) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v496 - 965 * ((4450744 * (unint64_t)v496) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  v499 = (v486 << 20) - ((v486 << 21) & 0x7400000) + 1403646017;
  v500 = v499 ^ (v488 - v470);
  LODWORD(v470) = (*(unsigned __int8 *)(v28 + v494) ^ 0xE6) << 24;
  v501 = v470 ^ ((*(unsigned __int8 *)(v28 + v498
                                           - 965 * (((8901487 * (unint64_t)v498) >> 32) >> 1)) ^ 6) << 28);
  v502 = v470 ^ v499;
  LODWORD(v470) = 662 * (((v976 >> 8) & 0xF0 | ((unsigned __int16)v984 >> 12)) ^ 0x65) + 218460;
  v503 = 662 * ((((v488 ^ v975) >> 12) & 0xF0 | HIWORD(v984) & 0xF) ^ 4) + 218460;
  LODWORD(v470) = v978 ^ ((*(unsigned __int8 *)(v28
                                              + (v470
                                                             - 965
                                                             * ((4450744 * (unint64_t)v470) >> 32))) ^ 0xE6) << 12);
  v504 = 662 * ((HIWORD(v500) & 0xF0 | (v985 >> 20) & 0xF) ^ 0x18) + 218460;
  v505 = 662 * (((v502 >> 20) & 0xF0 | HIBYTE(v985) & 0xF) ^ 0x3D) + 218460;
  v506 = 662 * ((HIBYTE(v501) & 0xF0 | (v985 >> 28)) ^ 1) + 218460;
  v507 = v470 ^ ((*(unsigned __int8 *)(v28 + (v503 - 965 * ((4450744 * (unint64_t)v503) >> 32))) ^ 0xE6) << 16);
  v508 = v507 ^ ((*(unsigned __int8 *)(v28 + (v504 - 965 * ((4450744 * (unint64_t)v504) >> 32))) ^ 0xE6) << 20);
  v509 = v508 ^ ((*(unsigned __int8 *)(v28 + (v505 - 965 * ((4450744 * (unint64_t)v505) >> 32))) ^ 0xE6) << 24);
  v510 = 662
       * ((v509 ^ ((*(unsigned __int8 *)(v28 + (v506 - 965 * ((4450744 * (unint64_t)v506) >> 32))) ^ 6) << 28)) >> 28)
       + 454132;
  v511 = ((((*(unsigned __int8 *)(v28
                                + (662 * (HIBYTE(v509) & 0xF)
                                               + 454132
                                               - 965
                                               * ((4450744 * (unint64_t)(662 * (HIBYTE(v509) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v510 - 965 * ((4450744 * (unint64_t)v510) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (HIWORD(v507) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v507) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v508 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v508 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 12);
  v512 = 662 * ((v982 >> 4) ^ 0xE) + 454132;
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x6E0]) ^ LODWORD(STACK[0x604]);
  LODWORD(STACK[0x6F0]) ^= (16
                          * (*(unsigned __int8 *)(v28
                                                + (v512 - 965 * ((4450744 * (unint64_t)v512) >> 32))) ^ 0xE6)) ^ 0xF2E48961 ^ (((v511 | *(unsigned __int8 *)(v28 + (v980 - 1684108452 + v974)) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((unsigned __int16)v470 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v470 >> 12) + 454132)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (LODWORD(STACK[0x628]) ^ 0xFCF360A1)) ^ 0xE6);
  LOBYTE(v511) = *(_BYTE *)(v28 + (LODWORD(STACK[0x67C]) + 466048) % 0x3C5u) ^ 0xE6;
  v513 = *(unsigned __int8 *)(v28 + (662 * LODWORD(STACK[0x658]) + 466048) % 0x3C5u);
  v514 = *(unsigned __int8 *)(v28
                            + LODWORD(STACK[0x668])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x668]) + 466048)) >> 32) >> 1)) ^ 0xE6;
  LODWORD(v470) = 16 * v514 + 1783588487;
  v515 = v470 - ((32 * v514) & 0xD00);
  v516 = ((v513 ^ 0xE6) << 8) - ((v513 << 9) & 0x22222222) - 1620307585;
  v517 = *(unsigned __int8 *)(v28
                            + LODWORD(STACK[0x654])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x654]) + 466048)) >> 32) >> 1)) ^ 0xE6;
  v518 = (v517 << 13) & 0xD0000;
  v519 = (v517 << 12) + 1404471959;
  v520 = v519 - v518;
  v521 = v519 ^ v516;
  v522 = v516 ^ v515;
  v523 = *(unsigned __int8 *)(v28
                            + LODWORD(STACK[0x638])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x638]) + 466048)) >> 32) >> 1)) ^ 0xE6;
  v524 = *(unsigned __int8 *)(v28
                            + LODWORD(STACK[0x630])
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(LODWORD(STACK[0x630]) + 466048)) >> 32) >> 1)) ^ 0xE6;
  LOBYTE(v369) = (*(_BYTE *)(v28 + LODWORD(STACK[0x62C])) >> 4) ^ 0xE;
  v525 = (STACK[0x648] & 0xF0 | HIBYTE(LODWORD(STACK[0x640])) & 0xF) ^ 0xCB;
  v526 = 662
       * ((v369 - 2 * (v369 & 7 ^ ((*(_BYTE *)(v28 + LODWORD(STACK[0x62C])) & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + LODWORD(STACK[0x634]) * (((LODWORD(STACK[0x640]) >> 20) & 0xB) + ((LODWORD(STACK[0x640]) >> 20) & 0xB ^ 0xB) + 651) % 0x3C5))
       + 466048;
  v527 = 662 * ((v525 - 1865850304 - ((2 * v525) & 0x80)) ^ 0x90C96240);
  v528 = 662
       * (*(unsigned __int8 *)(v28 + (v527 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v526 - 965 * ((4450744 * (unint64_t)v526) >> 32))) ^ 0xE6)) ^ 0xE6);
  v529 = *(unsigned __int8 *)(v28
                            + v528
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v528 + 466048)) >> 32) >> 1));
  v530 = *(unsigned __int8 *)(v28 + (v528 - 965 * ((4450744 * (unint64_t)v528) >> 32)));
  v531 = 662
       * ((((v530 >> 4) ^ 0xE) - 2 * (((v530 >> 4) ^ 0xE) & 7 ^ ((v530 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v527 % 0x3C5))
       + 466048;
  v532 = 662 * (((LODWORD(STACK[0x648]) >> 4) & 0xF0 | (LODWORD(STACK[0x640]) >> 28)) ^ 0x2D) + 466048;
  v533 = 662
       * (*(unsigned __int8 *)(v28 + (v532 - 965 * ((4450744 * (unint64_t)v532) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v531 - 965 * ((4450744 * (unint64_t)v531) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  v534 = (v523 << 16) - ((v523 << 17) & 0x1C80000) - 1092348258;
  v535 = (v524 << 20) - ((v524 << 21) & 0x2A00000) - 1319129922;
  v536 = ((v529 ^ 0xE6) << 24) - ((v529 & 1) << 25) + 32034995;
  LOBYTE(v511) = v511 - ((2 * v511) & 0x5A) - 83;
  LOBYTE(v470) = v470 ^ v511;
  v537 = 662 * (((v522 >> 4) & 0xF0 | (LODWORD(STACK[0x698]) >> 8) & 0xF) ^ 0x70) + 218460;
  v538 = 662 * (((v521 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x640]) >> 12)) ^ 0x97) + 218460;
  v539 = 662 * ((((v534 ^ v520) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x640])) & 0xF) ^ 0x23) + 218460;
  v540 = 662 * ((((v535 ^ v534) >> 16) & 0xF0 | (LODWORD(STACK[0x640]) >> 20) & 0xF) ^ 0xBF) + 218460;
  v541 = 662 * ((((v536 ^ v535) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x640])) & 0xF) ^ 0xB) + 218460;
  v542 = *(unsigned __int8 *)(v28 + (662 * (((16 * (v511 & 0xF)) | LODWORD(STACK[0x6A8])) ^ 0x8000DAu) + 218460) % 0x3C5);
  v543 = 662
       * (((((((*(unsigned __int8 *)(v28 + v533 - 965 * (((8901487 * (unint64_t)v533) >> 32) >> 1)) ^ 6) << 28) | 0xE8D0B3) ^ v536) >> 24) & 0xF0 | (LODWORD(STACK[0x640]) >> 28)) ^ 0xD)
       + 218460;
  v544 = *(unsigned __int8 *)(v28 + (v543 - 965 * ((4450744 * (unint64_t)v543) >> 32))) ^ 6;
  LODWORD(v470) = v542 ^ (16
                        * (*(unsigned __int8 *)(v28
                                              + (662 * (v470 & 0xF0 ^ 0x20 | LODWORD(STACK[0x6A0])) + 218460) % 0x3C5) ^ 0xE6));
  v545 = v470 ^ ((*(unsigned __int8 *)(v28 + (v537 - 965 * ((4450744 * (unint64_t)v537) >> 32))) ^ 0xE6) << 8);
  v546 = v545 ^ ((*(unsigned __int8 *)(v28 + (v538 - 965 * ((4450744 * (unint64_t)v538) >> 32))) ^ 0xE6) << 12);
  v547 = v546 ^ ((*(unsigned __int8 *)(v28 + (v539 - 965 * ((4450744 * (unint64_t)v539) >> 32))) ^ 0xE6) << 16);
  v548 = v547 ^ ((*(unsigned __int8 *)(v28 + (v540 - 965 * ((4450744 * (unint64_t)v540) >> 32))) ^ 0xE6) << 20);
  v549 = v548 ^ ((*(unsigned __int8 *)(v28 + (v541 - 965 * ((4450744 * (unint64_t)v541) >> 32))) ^ 0xE6) << 24);
  v550 = 662 * (((((v544 << 28) - (v544 >> 1 << 30) + 1610726150) ^ v549) >> 28) ^ 6) + 454132;
  LODWORD(v470) = 662 * ((v470 >> 4) ^ 0xE) + 454132;
  v551 = ((((*(unsigned __int8 *)(v28
                                + (662 * (HIBYTE(v549) & 0xF)
                                               + 454132
                                               - 965
                                               * ((4450744 * (unint64_t)(662 * (HIBYTE(v549) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v550 - 965 * ((4450744 * (unint64_t)v550) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (HIWORD(v547) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v547) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v548 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v548 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * ((v545 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v545 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xE6;
  v552 = *(unsigned __int8 *)(v28
                            + (662 * ((unsigned __int16)v546 >> 12)
                                           + 454132
                                           - 965
                                           * ((4450744
                                             * (unint64_t)(662 * ((unsigned __int16)v546 >> 12)
                                                                + 454132)) >> 32)));
  LODWORD(STACK[0x6E0]) = LODWORD(STACK[0x6C0]) ^ 0x6C13708D ^ LODWORD(STACK[0x608]);
  LODWORD(STACK[0x6C0]) = LODWORD(STACK[0x620]) ^ (16
                                                 * (*(unsigned __int8 *)(v28
                                                                       + (v470
                                                                                      - 965
                                                                                      * ((4450744
                                                                                        * (unint64_t)v470) >> 32))) ^ 0xE6)) ^ 0x2FCCE5F5 ^ ((v551 << 8) ^ ((v552 ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (v542 & 0xF ^ 6) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v542 & 0xF ^ 6u) + 454132)) >> 32))) ^ 0xE6);
  LODWORD(STACK[0x6A8]) = LODWORD(STACK[0x610]) ^ (LODWORD(STACK[0x624]) - (STACK[0x61C] & 0xFB48677A) + 201743967);
  LODWORD(v470) = (LODWORD(STACK[0x6BC]) ^ 0x449C6FB6)
                + LODWORD(STACK[0x500])
                - ((2 * ((LODWORD(STACK[0x6BC]) ^ 0x449C6FB6) + LODWORD(STACK[0x500])) - 2079101792) & 0xB964A3C2);
  LODWORD(STACK[0x698]) = v1014 ^ 0x289CB476;
  v553 = LODWORD(STACK[0x510]) - 1250242224 + (v1014 ^ 0x289CB476);
  v554 = v553 - ((2 * v553) & 0x6E77E6E0) - 1220807824;
  v555 = 662 * (HIBYTE(v554) & 0xF ^ 7) + 439568;
  v556 = 662 * ((v554 >> 20) & 0xF ^ 3) + 439568;
  v557 = ((*(unsigned __int8 *)(v28 + (v555 - 965 * ((4450744 * (unint64_t)v555) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((v554 >> 28) ^ 0xB) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v554 >> 28) ^ 0xB) + 439568)) >> 32))) ^ 0xE6) << 12);
  v558 = 662 * ((~(v554 >> 15) & 0x10) + (HIWORD(v554) & 0xF ^ 0x293));
  v559 = v557 | *(unsigned __int8 *)(v28 + (v558 - 965 * ((4450744 * (unint64_t)v558) >> 32))) ^ 0xE6u;
  v560 = *(unsigned __int8 *)(v28 + (v556 - 965 * ((4450744 * (unint64_t)v556) >> 32)));
  v561 = 662 * (~(v554 >> 12) & 0xF) + 439568;
  LODWORD(STACK[0x6A0]) = v554;
  v562 = 662 * ((v554 >> 8) & 0xF ^ 3) + 439568;
  v563 = (v559 << 8) ^ ((unint64_t)(v560 ^ 0xE6u) << 12);
  v564 = *(unsigned __int8 *)(v28 + (v562 - 965 * ((4450744 * (unint64_t)v562) >> 32)));
  v565 = v563 | v564 & 0xFE ^ 0xE6;
  LODWORD(v563) = 662 * (((v553 - ((2 * v553) & 0xE0) + 112) >> 4) ^ 7) + 439568;
  v566 = (((2 * (v565 >> 1)) ^ (16
                                            * (*(unsigned __int8 *)(v28
                                                                  + (v561
                                                                                 - 965
                                                                                 * ((4450744 * (unint64_t)v561) >> 32))) ^ 0xE6)) | (((v565 >> 1) ^ (v564 << 31)) >> 31)) << 8) ^ 0x19C0B500;
  LODWORD(v565) = v566 - 1400993481 - ((2 * v566) & 0x58FD1200);
  v567 = v470 - 1631844303;
  LODWORD(v470) = 662 * (((v470 - 1631844303) >> 28) ^ 5) + 439568;
  v568 = v470 - 965 * ((4450744 * (unint64_t)v470) >> 32);
  LODWORD(v470) = 662 * (HIBYTE(v567) & 0xF ^ 0xC) + 439568;
  v569 = v470 - 965 * ((4450744 * (unint64_t)v470) >> 32);
  LODWORD(v470) = 662 * ((v567 >> 20) & 0xF ^ 0xB) + 439568;
  v570 = v470 - 965 * ((4450744 * (unint64_t)v470) >> 32);
  LODWORD(v470) = *(unsigned __int8 *)(v28
                                     + (662 * (v553 & 0xF)
                                                    + 439568
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * (v553 & 0xFu) + 439568)) >> 32))) ^ 0xE6;
  LODWORD(v470) = v470 + 1056019349 - ((2 * v470) & 0x12A);
  v571 = 662 * (HIWORD(v567) & 0xF ^ 2) + 439568;
  v572 = ((*(unsigned __int8 *)(v28 + v569) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + v568) ^ 0xE6) << 12);
  v573 = 662 * (((unsigned __int16)v567 >> 12) ^ 5) + 439568;
  v574 = v572 | *(unsigned __int8 *)(v28 + (v571 - 965 * ((4450744 * (unint64_t)v571) >> 32))) ^ 0xE6;
  v575 = 662 * ((v567 >> 8) & 0xF ^ 1) + 439568;
  v576 = (v574 << 8) ^ ((*(unsigned __int8 *)(v28 + v570) ^ 0xE6) << 12);
  v577 = 662 * ((v567 >> 4) ^ 0xE) + 439568;
  v578 = ((v470 & 0xF ^ 9) + (v470 & 3 ^ 0x4BE6F452) - ((v470 & 0xF ^ 9) & 3)) ^ 0x4BE2F0CF;
  v579 = v576 | *(unsigned __int8 *)(v28 + (v575 - 965 * ((4450744 * (unint64_t)v575) >> 32))) ^ 0xE6;
  v580 = (v579 << 8) - 1601584848 - ((v579 << 9) & 0x41138200);
  v581 = *(unsigned __int8 *)(v28
                            + (662 * (v567 & 0xF ^ 1)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v567 & 0xF ^ 1) + 439568)) >> 32))) ^ 0xE6;
  v582 = v581 + 336612057 - ((2 * v581) & 0x1B2);
  v583 = v580 ^ ((*(unsigned __int8 *)(v28 + (v573 - 965 * ((4450744 * (unint64_t)v573) >> 32))) ^ 0xE6) << 12);
  v584 = (v583 ^ 0xA089C130 | v582 ^ 0x14104AD9) ^ (16
                                                  * (*(unsigned __int8 *)(v28
                                                                        + (v577
                                                                                       - 965
                                                                                       * ((4450744
                                                                                         * (unint64_t)v577) >> 32))) ^ 0xE6));
  v585 = (v578 | 0x6EACCBCC) - (v578 | 0x91533433) - 1856818125;
  LODWORD(STACK[0x67C]) = v585 ^ 0x6EA8CF5C;
  v586 = (16 * (v582 & 0xF)) ^ 0x90 | v585 ^ 0x6EA8CF5C;
  v587 = 662
       * ((v586
         + 843197541
         - 2 * (v586 & 0x32422C67 ^ ((v578 | 0xCC) - (v578 | 0x33) + 51) & 2)) ^ 0x32422C65);
  v588 = 662 * (*(unsigned __int8 *)(v28 + (v587 + 466048) % 0x3C5) ^ LODWORD(STACK[0x6B0]));
  v589 = (v588 + 466048) % 0x3C5;
  v590 = *(unsigned __int8 *)(v28 + v588 % 0x3C5);
  v591 = (((v590 >> 4) ^ 0xE) + ~(2 * (((v590 >> 4) ^ 0xE) & 7 ^ ((v590 & 0x10) != 0))) - 25) ^ *(unsigned __int8 *)(v28 + v587 % 0x3C5);
  LODWORD(v563) = *(unsigned __int8 *)(v28
                                     + (v563
                                                    - 965 * ((4450744 * (unint64_t)v563) >> 32))) ^ 0xE6;
  LODWORD(STACK[0x6B0]) = v565 ^ 0xAC7E8937;
  LODWORD(v470) = v565 ^ 0xAC7E8937 | v470 ^ 0x3EF19395;
  LODWORD(v563) = v470 ^ (16 * v563);
  v592 = ((v563 >> 4) ^ 0x6F7F58AB) & 0x20F13E37 ^ 0x1607236E ^ ((((v563 >> 4) ^ 0x6F7F58AB) & 0x60F13E38)
                                                                             - ((2
                                                                               * ((v563 >> 4) ^ 0x6F7F58AB)) & 0x40E07400)
                                                                             + 913718086);
  v593 = 662 * v591 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v591 + 466048)) >> 32);
  v594 = ((2 * v592) | 0x1506AE9C) - v592 - 176379726;
  v595 = 662
       * (((v594 ^ 0x6AF24F6D | v584 & 0xF0)
         + 2024559666
         - 2 * (((v594 ^ 0x6AF24F6D) & 0x78AC543E | v584 & 0x30) ^ (v594 ^ 0x6AF24F6D) & 0xC)) ^ 0x78AC5432);
  v596 = 662
       * (*(unsigned __int8 *)(v28 + (v595 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v593) ^ 0xE6)) ^ 0xE6);
  v597 = v596 - 965 * ((4450744 * (unint64_t)v596) >> 32);
  v598 = 662
       * ((((*(_BYTE *)(v28 + v597) >> 4) ^ 0xE)
                          - 2 * (((*(_BYTE *)(v28 + v597) >> 4) ^ 0xE) & 7 ^ ((*(_BYTE *)(v28 + v597) & 0x10) != 0))
                          - 26) ^ *(unsigned __int8 *)(v28 + v595 % 0x3C5))
       + 466048;
  v599 = v598 - 965 * ((4450744 * (unint64_t)v598) >> 32);
  v600 = (((v563 >> 8) & 9) + 1686443456 + ((v563 >> 8) & 6)) ^ 0x648515C5;
  LODWORD(v563) = 662 * ((((v584 >> 4) & 0xF0) + 262101760 + v600) ^ 0xF9F5B00);
  v601 = 662
       * (*(unsigned __int8 *)(v28 + ((int)v563 + 466048) % 0x3C5u) ^ (16 * (*(unsigned __int8 *)(v28 + v599) ^ 0xE6)) ^ 0xE6);
  v602 = (*(unsigned __int8 *)(v28 + (v601 - 965 * ((4450744 * (unint64_t)v601) >> 32))) >> 4) ^ 0xE;
  LODWORD(v563) = 662
                * ((v602 - ((2 * v602) & 0xC) - 26) ^ *(unsigned __int8 *)(v28
                                                                                          + v563 % 0x3C5))
                + 466048;
  v603 = v563 - 965 * ((4450744 * (unint64_t)v563) >> 32);
  LODWORD(v563) = ((*(unsigned __int8 *)(v28
                                       + v601
                                       + 466048
                                       - 965
                                       * (((8901487 * (unint64_t)(v601 + 466048)) >> 32) >> 1)) ^ 0xE6) << 8) ^ (16 * (*(unsigned __int8 *)(v28 + v596 + 466048 - 965 * (((8901487 * (unint64_t)(v596 + 466048)) >> 32) >> 1)) ^ 0xE6));
  LODWORD(v470) = ((v470 >> 12) ^ 0xFFED6544) & 0x88042C30 ^ 0x215CD94E ^ (((2
                                                                                         * (((v470 >> 12) ^ 0xFFED6544) & 0x88042C3F)) | 0x52B1E282)
                                                                                       - (((v470 >> 12) ^ 0xFFED6544) & 0x88042C3F)
                                                                                       + 1453788863);
  LODWORD(v470) = ((2 * v470) & 0x22AF25E4) - v470 - 290951923;
  v604 = (v470 | (v583 >> 8) & 0xF0 ^ 0xC0) ^ 0x66AC450D;
  v605 = 662 * ((v604 + 1061801898 - ((2 * v604) & 0x7E939F54)) ^ 0x3F49CFAA);
  v606 = 662
       * (*(unsigned __int8 *)(v28 + (v605 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v603) ^ 0xE6)) ^ 0xE6);
  v607 = *(unsigned __int8 *)(v28 + (v606 - 965 * ((4450744 * (unint64_t)v606) >> 32)));
  v608 = v606 + 466048 - 965 * (((8901487 * (unint64_t)(v606 + 466048)) >> 32) >> 1);
  v609 = (((v607 >> 4) ^ 0xE) - 2 * (((v607 >> 4) ^ 0xE) & 7 ^ ((v607 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v605 % 0x3C5);
  v610 = (WORD1(v565) ^ 0xB2DAC6BE) & 0x32C07BEB ^ 0xCC16609A ^ (19527077
                                                               - ((WORD1(v565) ^ 0xB2DAC6BE) & 0x32C00A40 | 0x129F5A5)
                                                               + ((WORD1(v565) ^ 0xB2DAC6BE) & 0x71A4 | 0xFED60A5A));
  v611 = (v583 >> 12) & 0xF0 ^ 0x90;
  v612 = (2034883691 - (v610 | 0x7949DC6B) + (v610 | 0x86B62394)) ^ 0xB4764954;
  v613 = 662 * (((v612 | v611) - 1573860312 - ((2 * (v612 | v611)) & 0x44619850)) ^ 0xA230CC28);
  v614 = 662
       * (*(unsigned __int8 *)(v28 + (v613 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (662 * v609 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v609 + 466048)) >> 32))) ^ 0xE6)) ^ 0xE6);
  v615 = v614 + 466048 - 965 * (((8901487 * (unint64_t)(v614 + 466048)) >> 32) >> 1);
  v616 = *(unsigned __int8 *)(v28 + (v614 - 965 * ((4450744 * (unint64_t)v614) >> 32)));
  v617 = (((v616 >> 4) ^ 0xE) - 2 * (((v616 >> 4) ^ 0xE) & 7 ^ ((v616 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v613 % 0x3C5);
  v618 = ((v565 >> 20) ^ 0x6017AE14) & 0x520 ^ 0x1F2D518 ^ (-32690200
                                                                        - (((v565 >> 20) ^ 0x6017AE14) & 7 | 0xFE0D2FE8)
                                                                        + (((v565 >> 20) ^ 0x6017AE14) & 0x60010528 | 0x1F2D017));
  v619 = 662 * v617 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v617 + 466048)) >> 32);
  v620 = (v618 | 0xAA4729B4) - (v618 | 0x55B8D64B) + 1438176843;
  v621 = v620 ^ 0xCA462CB4;
  v622 = v620 ^ 0xCA462CB4 | HIWORD(v580) & 0xF0 ^ 0x80;
  v623 = 662 * ((v622 + 1071493274 - 2 * (v622 & 0x3FDDB09B ^ v620 & 1)) ^ 0x3FDDB09A);
  v624 = 662
       * (*(unsigned __int8 *)(v28 + (v623 + 466048) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v619) ^ 0xE6)) ^ 0xE6);
  v625 = v624 + 466048 - 965 * (((8901487 * (unint64_t)(v624 + 466048)) >> 32) >> 1);
  LODWORD(v565) = (BYTE3(v565) ^ 0xED28C876) & 0x90000AC ^ 0x2CF90AA ^ (((BYTE3(v565) ^ 0xED28C876) & 0x690000A3)
                                                                      - ((2 * (BYTE3(v565) ^ 0xED28C876)) & 0x80000002)
                                                                      - 992472995);
  v626 = *(unsigned __int8 *)(v28 + (v624 - 965 * ((4450744 * (unint64_t)v624) >> 32)));
  v627 = 662
       * ((((v626 >> 4) ^ 0xE) - 2 * (((v626 >> 4) ^ 0xE) & 7 ^ ((v626 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v623 % 0x3C5))
       + 466048;
  LODWORD(v565) = (-789319502 - (v565 | 0xD0F3F0B2) + (v565 | 0x2F0C0F4D)) ^ 0x891B8FB9;
  v628 = ((2 * (v565 | (v580 >> 20) & 0xF0)) & 0x55EBFFAE) + ((v565 | (v580 >> 20) & 0xF0) ^ 0x2AF5FFD7);
  v629 = *(unsigned __int8 *)(v28 + v589);
  v630 = (v629 ^ 0xE6) - 1500915432;
  v631 = (v630 - ((2 * v629) & 0x30)) ^ 0x162164B9 ^ v563;
  v632 = 662
       * (*(unsigned __int8 *)(v28 + (662 * (v628 + (v631 & 0x2C0 ^ 0x240 | v631 & 0x2C0 ^ 0x80u)) - 404985338) % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + (v627 - 965 * ((4450744 * (unint64_t)v627) >> 32))) ^ 0xE6)) ^ 0xE6);
  v633 = v632 + 466048 - 965 * (((8901487 * (unint64_t)(v632 + 466048)) >> 32) >> 1);
  v634 = *(unsigned __int8 *)(v28 + (v632 - 965 * ((4450744 * (unint64_t)v632) >> 32)));
  v635 = 662
       * ((((v634 >> 4) ^ 0xE) - 2 * (((v634 >> 4) ^ 0xE) & 7 ^ ((v634 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + (662 * v628 - 404985338) % 0x3C5u))
       + 466048;
  v636 = 662 * ((HIBYTE(v580) & 0xF0 | (LODWORD(STACK[0x6B0]) >> 28)) ^ 0xA1) + 466048;
  v637 = 662
       * (*(unsigned __int8 *)(v28 + (v636 - 965 * ((4450744 * (unint64_t)v636) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v635 - 965 * ((4450744 * (unint64_t)v635) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  v638 = (v631 & 0xF0) + (~(2 * v631) & 0x140) - 160;
  v639 = (v638 - (v638 | v594 ^ 0x6AF24F6D)) ^ ((v594 ^ 0x950DB092) + 1);
  v640 = 662 * ((v594 ^ 0x1BCD8AED ^ (v639 - ((2 * v639) & 0xE27F8B00) + 1900004736)) + v638) + 218460;
  v641 = v563 ^ ((*(unsigned __int8 *)(v28 + v608) ^ 0xE6) << 12);
  LODWORD(v563) = 662 * (((v563 >> 4) & 0xF0) + v600) + 218460;
  v642 = v641 ^ ((*(unsigned __int8 *)(v28 + v615) ^ 0xE6) << 16);
  LODWORD(v470) = 662 * (((v641 >> 8) & 0xF0 | v470) ^ 0x66AC450D) + 218460;
  v643 = v642 ^ ((*(unsigned __int8 *)(v28 + v625) ^ 0xE6) << 20);
  v644 = *(unsigned __int8 *)(v28 + (662 * ((16 * (v630 & 0xF)) ^ 0x80u | LODWORD(STACK[0x67C])) + 218460) % 0x3C5);
  v645 = v644 ^ (16 * (*(unsigned __int8 *)(v28 + v640 % 0x3C5) ^ 0xE6));
  LODWORD(v563) = (v645 | ((*(unsigned __int8 *)(v28 + v470 % 0x3C5) ^ 0xE6) << 12)) ^ ((*(unsigned __int8 *)(v28 + v563 % 0x3C5) ^ 0xE6) << 8);
  LODWORD(v470) = v643 ^ ((*(unsigned __int8 *)(v28 + v633) ^ 0xE6) << 24);
  v646 = v470 ^ ((*(unsigned __int8 *)(v28 + v637
                                           - 965 * (((8901487 * (unint64_t)v637) >> 32) >> 1)) ^ 6) << 28);
  LODWORD(v470) = 662 * ((v470 >> 20) & 0xF0 | v565) + 218460;
  v647 = 662 * ((HIBYTE(v646) & 0xF0 | (LODWORD(STACK[0x6B0]) >> 28)) ^ 1) + 218460;
  v648 = v563 ^ ((*(unsigned __int8 *)(v28 + (662 * ((v642 >> 12) & 0xF0 | v612) + 218460) % 0x3C5) ^ 0xE6) << 16);
  LODWORD(v565) = v648 ^ ((*(unsigned __int8 *)(v28 + (662 * (HIWORD(v643) & 0xF0 | v621) + 218460) % 0x3C5) ^ 0xE6) << 20);
  LODWORD(v470) = v565 ^ ((*(unsigned __int8 *)(v28 + v470 % 0x3C5) ^ 0xE6) << 24);
  v649 = 662
       * (((v470 ^ (((*(unsigned __int8 *)(v28
                                                       + (v647
                                                                      - 965 * ((4450744 * (unint64_t)v647) >> 32))) ^ 6) << 28)
                                - 1982115117)) >> 28) ^ 8)
       + 454132;
  LODWORD(v470) = *(unsigned __int8 *)(v28
                                     + (662 * (BYTE3(v470) & 0xF)
                                                    + 454132
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * (BYTE3(v470) & 0xF) + 454132)) >> 32))) ^ 0xE6;
  LODWORD(v470) = ((_DWORD)v470 << 8) - 1862310608 - (((_DWORD)v470 << 9) & 0xCA00);
  v650 = *(unsigned __int8 *)(v28 + (v649 - 965 * ((4450744 * (unint64_t)v649) >> 32))) ^ 0xE6;
  v651 = ((v650 << 12) - 1862310608 - (a15 & (v650 << 13))) ^ v470;
  LODWORD(v470) = 662 * ((v470 & 0x200 | (v565 >> 20) & 0xF) + (v470 & 0x200 ^ 0x2AE));
  LODWORD(v565) = 662 * ((unsigned __int16)v563 >> 12)
                + 454132
                - 965
                * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v563 >> 12) + 454132)) >> 32);
  LODWORD(v563) = 662 * (((v563 >> 8) & 0xF ^ 0x2AE) + ((v563 >> 7) & 0x1C));
  LODWORD(v563) = ((v651
                  + (*(unsigned __int8 *)(v28
                                        + (662 * (HIWORD(v648) & 0xF)
                                                       + 454132
                                                       - 965
                                                       * ((4450744
                                                         * (unint64_t)(662 * (HIWORD(v648) & 0xF) + 454132)) >> 32))) ^ 0xE6)) << 8) ^ ((*(unsigned __int8 *)(v28 + (v470 - 965 * ((4450744 * (unint64_t)v470) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (v563 - 965 * ((4450744 * (unint64_t)v563) >> 32))) ^ 0xE6;
  LODWORD(v470) = 662 * ((v645 >> 4) ^ 0xE) + 454132;
  v652 = 662 * (v644 & 0xF ^ 6)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * (v644 & 0xF ^ 6u) + 454132)) >> 32);
  v653 = v652 - 1215883852 - ((2 * v652) & 0x368);
  LODWORD(v563) = ((_DWORD)v563 << 8) ^ ((*(unsigned __int8 *)(v28 + v565) ^ 0xE6) << 12);
  v654 = STACK[0x6A8];
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x6A8]) ^ 0x84B1EC03 ^ LODWORD(STACK[0x6A0]);
  v655 = *(unsigned __int8 *)(v28 + (v653 ^ 0xB78715B4)) ^ 0xE6;
  LODWORD(v563) = (v563 | v655) ^ (16
                                 * (*(unsigned __int8 *)(v28
                                                       + (v470
                                                                      - 965
                                                                      * ((4450744 * (unint64_t)v470) >> 32))) ^ 0xE6));
  v656 = (v654 ^ 0x451486DF) + 366088407 + (v653 & 0x329 ^ 0x120) + (v653 & 0x329 ^ 0xEA2DEE09);
  v657 = LODWORD(STACK[0x698]) + LODWORD(STACK[0x660]);
  LODWORD(STACK[0x6A8]) = v563 + 795608033 - 2 * (v563 & 0x2F6C03EB ^ v655 & 0xA);
  v658 = (LODWORD(STACK[0x6BC]) ^ 0xBB639049) + (LODWORD(STACK[0x5F0]) ^ 0xA09C4FD0);
  v659 = v657 - ((2 * v657) & 0xFBDC483A);
  LODWORD(v563) = *(unsigned __int8 *)(v28
                                     + v1004
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v1004 + 466048)) >> 32) >> 1)) ^ 0xE6;
  LODWORD(v470) = 16 * v563 - ((32 * v563) & 0xFFFFF1FF);
  v660 = *(unsigned __int8 *)(v28 + (v1009 + 466048) % 0x3C5) ^ 0xE6;
  LODWORD(v565) = v660 - ((2 * v660) & 0xFFFFFF3F);
  v661 = ((*(unsigned __int8 *)(v28
                              + v1001
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v1001 + 466048)) >> 32) >> 1)) ^ 0xE6) << 12) ^ ((*(unsigned __int8 *)(v28 + v1002 + 466048 - 965 * (((8901487 * (unint64_t)(v1002 + 466048)) >> 32) >> 1)) ^ 0xE6) << 8);
  LODWORD(v563) = (*(unsigned __int8 *)(v28 + (v996 - 965 * ((4450744 * (unint64_t)v996) >> 32))) >> 4) ^ 0xE;
  v662 = (v563 - ((2 * v563) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v998 % 0x3C5);
  LODWORD(v563) = ((v1018 >> 20) & 0xF0 | HIBYTE(v1015) & 0xF) ^ 0xF6;
  LODWORD(v563) = 662 * ((v563 - 636195234 - 2 * (v563 & 0x5F ^ HIBYTE(v1015) & 1)) ^ 0xDA146E5E);
  v663 = 662
       * (*(unsigned __int8 *)(v28 + ((int)v563 + 466048) % 0x3C5u) ^ (16
                                                                     * (*(unsigned __int8 *)(v28
                                                                                           + (662 * v662 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v662 + 466048)) >> 32))) ^ 0xE6)) ^ 0xE6);
  v664 = v663 + 466048 - 965 * (((8901487 * (unint64_t)(v663 + 466048)) >> 32) >> 1);
  v665 = *(unsigned __int8 *)(v28 + (v663 - 965 * ((4450744 * (unint64_t)v663) >> 32)));
  v666 = 662
       * ((((v665 >> 4) ^ 0xE) - 2 * (((v665 >> 4) ^ 0xE) & 7 ^ ((v665 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v563 % 0x3C5))
       + 466048;
  v667 = v666 - 965 * ((4450744 * (unint64_t)v666) >> 32);
  v668 = (v656 ^ 0xA15B4C73) - ((2 * (v656 ^ 0xA15B4C73) + 750501000) & 0x7946F406) + 1392597063;
  LOBYTE(v638) = ((v656 ^ 0x73) - ((2 * (v656 ^ 0x73) - 120) & 6) + 71) & 4;
  v669 = 662
       * (*(unsigned __int8 *)(v28
                             + (662 * ((((v1018 >> 28) ^ 0xD) << v638 << (v638 ^ 4)) ^ (v1015 >> 28) ^ 9) + 466048)
                             % 0x3C5) ^ (16 * (*(unsigned __int8 *)(v28 + v667) ^ 0xE6)) ^ 0xE6)
       + 466048;
  LODWORD(v565) = v565 - 1209597537;
  v670 = 662 * (~(16 * v565) & 0xF0 | LODWORD(STACK[0x5DC])) + 218460;
  LODWORD(v470) = v470 + 699836658;
  LODWORD(v565) = (v470 ^ v565) & 0xF0 ^ 0x60 | LODWORD(STACK[0x5D4]);
  LODWORD(v470) = v470 ^ 0x4A414817 ^ v661;
  v671 = v470 ^ ((*(unsigned __int8 *)(v28
                                     + v999
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v999 + 466048)) >> 32) >> 1)) ^ 0xE6) << 16);
  v672 = (v470 >> 4) & 0xF0 | (LODWORD(STACK[0x5EC]) >> 8) & 0xF;
  LODWORD(v470) = *(unsigned __int8 *)(v28 + v670 % 0x3C5);
  LODWORD(v565) = (v470 ^ 0xE6 | ((*(unsigned __int8 *)(v28
                                                      + (662 * v672
                                                                     + 218460
                                                                     - 965
                                                                     * ((4450744
                                                                       * (unint64_t)(662 * v672 + 218460)) >> 32))) ^ 0xE6) << 8)) ^ (16 * (*(unsigned __int8 *)(v28 + (662 * (int)v565 + 218460) % 0x3C5u) ^ 0xE6));
  v673 = 662 * (((v661 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5E0]) >> 12)) ^ 8) + 218460;
  v674 = v671 ^ ((*(unsigned __int8 *)(v28 + v1000) ^ 0xE6) << 20);
  v675 = 662 * (((v671 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x5E0])) & 0xF) ^ 0x70) + 218460;
  v676 = v674 ^ ((*(unsigned __int8 *)(v28 + v664) ^ 0xE6) << 24);
  v677 = 662 * ((HIWORD(v674) & 0xF0 | (v1015 >> 20) & 0xF) ^ 0xFE) + 218460;
  v678 = v676 ^ ((*(unsigned __int8 *)(v28 + v669
                                           - 965 * (((8901487 * (unint64_t)v669) >> 32) >> 1)) ^ 6) << 28);
  v679 = 662 * (((v676 >> 20) & 0xF0 | HIBYTE(v1015) & 0xF) ^ 0x36) + 218460;
  v680 = 662 * ((HIBYTE(v678) & 0xF0 | (v1015 >> 28)) ^ 0x69) + 218460;
  v681 = *(unsigned __int8 *)(v28 + (v680 - 965 * ((4450744 * (unint64_t)v680) >> 32)));
  v682 = v565 ^ ((*(unsigned __int8 *)(v28 + (v673 - 965 * ((4450744 * (unint64_t)v673) >> 32))) ^ 0xE6) << 12);
  v683 = ((*(unsigned __int8 *)(v28 + (v677 - 965 * ((4450744 * (unint64_t)v677) >> 32))) ^ 0xE6) << 20) ^ ((*(unsigned __int8 *)(v28 + (v675 - 965 * ((4450744 * (unint64_t)v675) >> 32))) ^ 0xE6) << 16) ^ v682;
  v684 = v683 ^ ((*(unsigned __int8 *)(v28 + (v679 - 965 * ((4450744 * (unint64_t)v679) >> 32))) ^ 0xE6) << 24);
  v685 = 662 * ((((((v681 ^ 6) << 28) - ((v681 & 1) << 29) - 1790760728) ^ v684) >> 28) ^ 9) + 454132;
  v686 = 662 * ((v683 >> 20) & 0xF)
       + 454132
       - 965 * ((4450744 * (unint64_t)(662 * ((v683 >> 20) & 0xF) + 454132)) >> 32);
  LODWORD(v470) = ((((((*(unsigned __int8 *)(v28
                                           + (662 * (HIBYTE(v684) & 0xF)
                                                          + 454132
                                                          - 965
                                                          * ((4450744
                                                            * (unint64_t)(662 * (HIBYTE(v684) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v685 - 965 * ((4450744 * (unint64_t)v685) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (HIWORD(v683) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v683) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + v686) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * ((v565 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v565 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((unsigned __int16)v682 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v682 >> 12) + 454132)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (v470 & 0xF ^ 6) + 454132 - 965 * ((4450744 * (662 * (v470 & 0xF ^ 6) + 454132)) >> 32))) ^ 0xE6;
  v687 = STACK[0x6C8];
  v688 = (v997 + 199597561) ^ LODWORD(STACK[0x6C8]) ^ (v658 - ((2 * v658) & 0x76E2272C) + 997266326);
  LODWORD(STACK[0x658]) = v688;
  v689 = LODWORD(STACK[0x5FC]) ^ 0x18262056 ^ ((v656 ^ 0xA15B4C73) + 9162093);
  v690 = LODWORD(STACK[0x600])
       + 199597561
       + (v993 ^ 0xEF8AA926)
       + (v668 ^ 0x29716AD5)
       + ((2 * v668) & 0xD45BDE52 ^ 0xAFBD2BFD);
  v691 = v687 ^ 0x60C246AD;
  v692 = (v687 ^ 0x60C246AD) - ((2 * (v687 ^ 0x60C246AD) + 18324186) & 0x270FA936) - 1810652664;
  LODWORD(STACK[0x6BC]) = v692 ^ (16
                                * (*(unsigned __int8 *)(v28
                                                      + (662 * (v565 >> 4)
                                                                     + 454132
                                                                     - 965
                                                                     * ((4450744
                                                                       * (unint64_t)(662
                                                                                          * (v565 >> 4)
                                                                                          + 454132)) >> 32))) ^ 0xE6)) ^ 0x566D4AD7 ^ v470;
  v693 = STACK[0x6DC];
  LODWORD(v470) = LODWORD(STACK[0x5F8]) + 199597561 + (v692 ^ 0x6C782B64) + (LODWORD(STACK[0x6DC]) ^ 0x7C178681);
  LODWORD(v565) = v691 - 2 * ((v691 + 224358934) & 0x554F6FFF ^ v691 & 1);
  v694 = ((((v990 << 8) ^ ((*(unsigned __int8 *)(v28
                                               + (662 * ((v991 >> 20) & 0xF)
                                                              + 454132
                                                              - 965
                                                              * ((4450744
                                                                * (unint64_t)(662 * ((v991 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * ((v991 >> 8) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v991 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (662 * ((unsigned __int16)v991 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v991 >> 12) + 454132)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (v991 & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v991 & 0xF) + 454132)) >> 32))) ^ 0xE6) ^ ((16 * (*(unsigned __int8 *)(v28 + (662 * (v991 >> 4) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (v991 >> 4) + 454132)) >> 32))) ^ 0xE6)) | 0xEACA0000);
  LODWORD(STACK[0x660]) = v694 - ((2 * v694) & 0xAA9EDFFC);
  LODWORD(v563) = (v656 ^ 0xA15B4C73) + 224358934;
  v695 = (v690 + 3) ^ 0xD248A134;
  v696 = (v695 + (v563 ^ 0x12FDF2A0) - ((2 * (v695 + (v563 ^ 0x12FDF2A0))) & 0xE03C72B8) + 1881028956) ^ v993;
  LODWORD(STACK[0x6B0]) = v995 ^ 0x3BE416D3 ^ v563;
  LODWORD(STACK[0x67C]) = v565 - 491855340;
  LODWORD(v563) = (v470 + 2) ^ 0xD248A134;
  LODWORD(STACK[0x6A0]) = (v1003 + 199597561) ^ (v659 + 2112758813) ^ 0x1FA6E056 ^ v656;
  v697 = (v563
        + ((v565 - 491855340) ^ 0xC7B29D5E)
        - ((2 * (v563 + ((v565 - 491855340) ^ 0xC7B29D5E))) & 0x7D0F2FC)
        - 2081916546) ^ v693;
  v698 = (v688 ^ 0x98A0DD03)
       + 1593311431
       + (v697 ^ 0x2FC7BCD)
       - 814910647
       - ((2 * ((v688 ^ 0x98A0DD03) + 1593311431 + (v697 ^ 0x2FC7BCD))) & 0x9EDAE692);
  LODWORD(v565) = (v697 ^ 0x2FC7BCD) + v563;
  LODWORD(v563) = *(unsigned __int8 *)(v28
                                     + v1008
                                     + 466048
                                     - 965 * (((8901487 * (unint64_t)(v1008 + 466048)) >> 32) >> 1)) ^ 0xE6;
  LOBYTE(v470) = *(_BYTE *)(v28 + (v1011 + 466048) % 0x3C5) ^ 0xE6;
  v699 = *(unsigned __int8 *)(v28
                            + v1006
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v1006 + 466048)) >> 32) >> 1));
  v700 = *(unsigned __int8 *)(v28
                            + v989
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v989 + 466048)) >> 32) >> 1)) ^ 0xE6;
  v701 = *(unsigned __int8 *)(v28
                            + v987
                            + 466048
                            - 965
                            * (((8901487 * (unint64_t)(v987 + 466048)) >> 32) >> 1)) ^ 0xE6;
  v702 = (v701 << 16) + 2073521725 - ((v701 << 17) & 0x12E0000);
  LOBYTE(v688) = (*(_BYTE *)(v28 + v986) >> 4) ^ 0xE;
  v703 = 662
       * ((v688 + ~(2 * (v688 & 7 ^ ((*(_BYTE *)(v28 + v986) & 0x10) != 0))) - 25) ^ *(unsigned __int8 *)(v28 + v988 % 0x3C5))
       + 466048;
  v704 = (v1013 & 0xF0 | (v1017 >> 20) & 0xF) ^ 0xE7;
  v705 = 662 * ((v704 + 664790047 - 2 * (v704 & 0x1F)) ^ 0x279FE41F);
  v706 = 662
       * (*(unsigned __int8 *)(v28 + (v705 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v703 - 965 * ((4450744 * (unint64_t)v703) >> 32))) ^ 0xE6)) ^ 0xE6);
  v707 = *(unsigned __int8 *)(v28
                            + v706
                            + 466048
                            - 965 * (((8901487 * (unint64_t)(v706 + 466048)) >> 32) >> 1)) ^ 0xE6;
  v708 = (*(unsigned __int8 *)(v28 + (v706 - 965 * ((4450744 * (unint64_t)v706) >> 32))) >> 4) ^ 0xE;
  v709 = 662 * ((v708 - ((2 * v708) & 0xC) - 26) ^ *(unsigned __int8 *)(v28 + v705 % 0x3C5)) + 466048;
  v710 = 662
       * ((-1725349824 - ((v1024 >> 19) & 0x80) + (((v1024 >> 20) & 0xF0 | HIBYTE(v1017) & 0xF) ^ 0x1A)) ^ 0x99294040);
  v711 = 662
       * (*(unsigned __int8 *)(v28 + (v710 + 466048) % 0x3C5) ^ (16
                                                               * (*(unsigned __int8 *)(v28
                                                                                     + (v709 - 965 * ((4450744 * (unint64_t)v709) >> 32))) ^ 0xE6)) ^ 0xE6);
  v712 = v711 + 466048 - 965 * (((8901487 * (unint64_t)(v711 + 466048)) >> 32) >> 1);
  v713 = *(unsigned __int8 *)(v28 + (v711 - 965 * ((4450744 * (unint64_t)v711) >> 32)));
  v714 = 662
       * ((((v713 >> 4) ^ 0xE) - 2 * (((v713 >> 4) ^ 0xE) & 7 ^ ((v713 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(v28 + v710 % 0x3C5))
       + 466048;
  v715 = 662 * ((HIBYTE(v1024) & 0xF0 | (v1017 >> 28)) ^ 0x85) + 466048;
  v716 = 662
       * (*(unsigned __int8 *)(v28 + (v715 - 965 * ((4450744 * (unint64_t)v715) >> 32))) ^ (16 * (*(unsigned __int8 *)(v28 + (v714 - 965 * ((4450744 * (unint64_t)v714) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  v717 = *(unsigned __int8 *)(v28 + v716 - 965 * (((8901487 * (unint64_t)v716) >> 32) >> 1));
  v718 = ((v707 << 20) + 2073521725 - ((v707 << 21) & 0x17200000)) ^ v702 ^ ((*(unsigned __int8 *)(v28 + v712) ^ 0xE6) << 24) ^ ((v717 ^ 6) << 28);
  LODWORD(v563) = 16 * v563 - ((32 * v563) & 0xDDDDDDDD) - 1754689810;
  LOBYTE(v470) = v470 - ((2 * v470) & 0xE6) + 115;
  v719 = ((v699 ^ 0xE6) << 8) - ((v699 << 9) & 0x22222222) - 2048323077;
  v720 = (v700 << 12) - ((v700 << 13) & 0x99999999) - 773013315;
  v721 = v702 ^ v720;
  v722 = v720 ^ v719;
  v723 = (662 * ((v563 ^ v470) & 0xF0 ^ 0x90 | v1020) + 218460) % 0x3C5;
  LODWORD(v563) = 662 * ((((v719 ^ v563) >> 4) & 0xF0 | (LODWORD(STACK[0x5D8]) >> 8) & 0xF) ^ 0xF0)
                + 218460;
  v724 = v563 - 965 * ((4450744 * (unint64_t)v563) >> 32);
  LODWORD(v563) = 662 * (((v722 >> 8) & 0xF0 | ((unsigned __int16)v1017 >> 12)) ^ 0xD3) + 218460;
  v725 = v563 - 965 * ((4450744 * (unint64_t)v563) >> 32);
  LODWORD(v563) = (v718 >> 20) + 1847472110 - ((v718 >> 19) & 0x1FDC);
  v726 = 662 * (((v721 >> 12) & 0xF0 | HIWORD(v1017) & 0xF) ^ 0xBC) + 218460;
  v727 = (v563 ^ 0x6E1E2FEE) >> (((v717 | 0xFB) - 16) ^ 0xEF);
  LODWORD(v563) = 662 * (((v1017 >> 20) & 0xF | (16 * (v563 & 0xF))) ^ 0xE7) + 218460;
  v728 = v563 - 965 * ((4450744 * (unint64_t)v563) >> 32);
  LOBYTE(v563) = (v727 >> (v717 & 4)) - ((2 * (v727 >> (v717 & 4))) & 0xDA) - 19;
  v729 = 662 * ((HIBYTE(v1017) & 0xF | (16 * (v563 & 0xF))) ^ 0xDA) + 218460;
  v730 = v563 & 0xF0 | (v1017 >> 28);
  LODWORD(v563) = *(unsigned __int8 *)(v28 + (662 * ((16 * (v470 & 0xF)) ^ 0x30 | v1022) + 218460) % 0x3C5);
  LODWORD(v470) = *(unsigned __int8 *)(v28
                                     + (662 * (v730 ^ 0xE5)
                                                    + 218460
                                                    - 965
                                                    * ((4450744 * (unint64_t)(662 * (v730 ^ 0xE5u) + 218460)) >> 32))) ^ 6;
  v731 = v563 ^ (16 * (*(unsigned __int8 *)(v28 + v723) ^ 0xE6));
  v732 = v731 ^ ((*(unsigned __int8 *)(v28 + v724) ^ 0xE6) << 8);
  v733 = v732 ^ ((*(unsigned __int8 *)(v28 + v725) ^ 0xE6) << 12);
  v734 = v733 ^ ((*(unsigned __int8 *)(v28 + (v726 - 965 * ((4450744 * (unint64_t)v726) >> 32))) ^ 0xE6) << 16);
  v735 = v734 ^ ((*(unsigned __int8 *)(v28 + v728) ^ 0xE6) << 20);
  v736 = v735 ^ ((*(unsigned __int8 *)(v28 + (v729 - 965 * ((4450744 * (unint64_t)v729) >> 32))) ^ 0xE6) << 24);
  LODWORD(v470) = 662 * ((((((_DWORD)v470 << 28) + (v470 >> 2 << 31) + 1230085862) ^ v736) >> 28) ^ 4)
                + 454132;
  v737 = 662 * (((v735 >> 20) & 0xF ^ 0x2AE) + ((v735 >> 19) & 0x1C));
  v738 = 662 * (((v733 >> 11) & 0x1C) + (((unsigned __int16)v733 >> 12) ^ 0x2AE));
  LODWORD(v470) = ((((*(unsigned __int8 *)(v28
                                         + (662 * (HIBYTE(v736) & 0xF)
                                                        + 454132
                                                        - 965
                                                        * ((4450744
                                                          * (unint64_t)(662 * (HIBYTE(v736) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v470 - 965 * ((4450744 * (unint64_t)v470) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(v28 + (662 * (HIWORD(v734) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v734) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(v28 + (v737 - 965 * ((4450744 * (unint64_t)v737) >> 32))) ^ 0xE6) << 12);
  v739 = v696 ^ 0x62971448;
  v740 = LODWORD(STACK[0x6A0])
       + 366088407
       + v739
       - ((2 * (LODWORD(STACK[0x6A0]) + 366088407 + v739) + 306962400) & 0x4DF49F1A)
       + 1881161597;
  v741 = STACK[0x6BC];
  v742 = v992 ^ 0x942CD32F ^ v696;
  v743 = 662 * ((v731 >> 4) ^ 0xE) + 454132;
  LODWORD(v470) = v470 | *(unsigned __int8 *)(v28
                                            + (662 * ((v732 >> 8) & 0xF)
                                                           + 454132
                                                           - 965
                                                           * ((4450744
                                                             * (unint64_t)(662 * ((v732 >> 8) & 0xF) + 454132)) >> 32))) ^ 0xE6;
  v744 = v739 + (v740 ^ 0xD905B072) + 617662567 - ((2 * (v739 + (v740 ^ 0xD905B072) + 1)) & 0x49A190CC);
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x688]) ^ 0x7F;
  LODWORD(v563) = *(unsigned __int8 *)(v28
                                     + (662 * (v563 & 0xF ^ 6)
                                                    + 454132
                                                    - 965 * ((4450744 * (662 * (v563 & 0xF ^ 6) + 454132)) >> 32))) ^ v697;
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x4F0]) - 1558319790;
  v745 = LODWORD(STACK[0x660]) - 716214274;
  v746 = v563 ^ (((*(unsigned __int8 *)(v28 + (v738 - 965 * ((4450744 * (unint64_t)v738) >> 32))) ^ 0xE6) << 12) | (16 * (*(unsigned __int8 *)(v28 + (v743 - 965 * ((4450744 * (unint64_t)v743) >> 32))) ^ 0xE6))) ^ ((_DWORD)v470 << 8) ^ 0xC716E567;
  v747 = (LODWORD(STACK[0x658]) ^ 0x675F22FC)
       - ((2 * (LODWORD(STACK[0x658]) ^ 0x675F22FC) + 1108344436) & 0xF87E6E08)
       - 1656277442;
  LODWORD(v563) = (v740 ^ 0xE9E83829 ^ v744) + 2 * ((v744 ^ 0x24D0C866) & (v740 ^ 0x4D38F04F));
  v748 = (v698 ^ 0x24AFCC8B)
       + (v747 ^ 0xFC3F3704)
       - 889088042
       - ((2 * ((v698 ^ 0x24AFCC8B) + (v747 ^ 0xFC3F3704))) & 0x96032FAC);
  v749 = (v565 - 814910647 - ((2 * v565) & 0x9EDAE692)) ^ v698 ^ v748;
  v750 = v749 ^ ((v698 ^ 0xCF6D7349) + (LODWORD(STACK[0x6DC]) ^ 0xE9F0564C));
  LODWORD(STACK[0x658]) = (v750 ^ 0x34FBF029) + 1526726331 + ((2 * v750) & 0xFFF4CFFE ^ 0x96000FAC);
  v751 = v563 - 1914664939 - ((2 * v563) & 0x1BC1102A);
  LODWORD(v563) = v740 ^ ((v696 ^ 0x62971448) + v695 + 653938573 - ((2 * ((v696 ^ 0x62971448) + v695)) & 0x4DF49F1A)) ^ v751;
  v752 = v747 ^ 0xE33E0C12 ^ v749;
  v753 = (v563 ^ ((v740 ^ 0x26FA4F8D) + v994) ^ 0xEF17EF2A)
       - 9569044
       + ((2 * (v563 ^ ((v740 ^ 0x26FA4F8D) + v994))) & 0xC5EECE7E ^ 0x1C0002A);
  LODWORD(STACK[0x6A8]) ^= LODWORD(STACK[0x6C8]) ^ 0x411A1655;
  v754 = v563 ^ 0xF5D80A2B ^ v744;
  v755 = (((v749 ^ 0xCB0197D6) + 749426951) ^ 0x6FE7BB6E) + ((2 * ((v749 ^ 0xCB0197D6) + 749426951)) & 0xDFCF76DC);
  LODWORD(STACK[0x650]) = v755 - 1136919144;
  v756 = LODWORD(STACK[0x67C]) ^ 0xD7176CEC ^ v745;
  v757 = STACK[0x6B0];
  LODWORD(STACK[0x654]) = 1136919144 - v755;
  LODWORD(STACK[0x5F8]) = ((LODWORD(STACK[0x57C]) + 213536477) | 0xC8812365)
                        + ((860205346 - LODWORD(STACK[0x57C])) & 0x377EDC9A)
                        + 1;
  LODWORD(STACK[0x5F0]) = LODWORD(STACK[0x680]) - 1778456809 - (STACK[0x694] & 0xE20);
  LODWORD(STACK[0x608]) = 2034106382;
  LODWORD(STACK[0x6DC]) = 29120;
  LODWORD(STACK[0x6C8]) = 14976;
  LODWORD(STACK[0x610]) = 2;
  LODWORD(STACK[0x67C]) = 63;
  LODWORD(STACK[0x660]) = STACK[0x528];
  v758 = v746;
  v759 = v756;
  LODWORD(v565) = STACK[0x698];
  v760 = (LODWORD(STACK[0x698]) + 191202624) & 0xF49A77DB;
  HIDWORD(v762) = v741 ^ 0xC;
  LODWORD(v762) = v741 ^ 0xC5EA9E40;
  v761 = v762 >> 6;
  HIDWORD(v762) = v741 ^ 0x64C;
  LODWORD(v762) = v741 ^ 0xC5EA9800;
  v763 = v762 >> 11;
  v764 = v689 ^ 0x87E7F943;
  LODWORD(STACK[0x604]) = v760;
  v765 = v746 ^ (v760 - 974481807);
  LODWORD(STACK[0x644]) = v746;
  v766 = (v764 & v765) + 1210112763 - ((2 * (v764 & v765)) & 0x9041B5F6);
  HIDWORD(v762) = v689 ^ 3;
  LODWORD(v762) = v689 ^ 0x87E7F940;
  v767 = v762 >> 6;
  v768 = v741 ^ 0xC5EA9E4C;
  LODWORD(STACK[0x6BC]) = v741;
  HIDWORD(v762) = v741 ^ 0x1EA9E4C;
  LODWORD(v762) = v741 ^ 0xC4000000;
  LODWORD(v470) = v763 ^ v761 ^ (v762 >> 25);
  LODWORD(STACK[0x680]) = v470;
  HIDWORD(v762) = v689 ^ 0x143;
  LODWORD(v762) = v689 ^ 0x87E7F800;
  v769 = v762 >> 11;
  LODWORD(STACK[0x688]) = v689;
  HIDWORD(v762) = v689 ^ 0x1E7F943;
  LODWORD(v762) = v689 ^ 0x86000000;
  LODWORD(STACK[0x694]) = v759;
  v770 = v759 ^ 0xC5EA9E4C;
  v771 = (v689 ^ 0x87E7F943) & (v759 ^ 0xC5EA9E4C);
  LODWORD(STACK[0x6B0]) = v757;
  v772 = v742;
  v773 = v757 ^ v742;
  v774 = (v757 ^ v742) & v768 ^ v771;
  v775 = v769 ^ (v762 >> 25) ^ v767;
  v776 = LODWORD(STACK[0x5F8])
       + (LODWORD(STACK[0x670]) ^ 0x379ACEBC)
       + 1990105516
       - 2 * ((LODWORD(STACK[0x5F8]) + (LODWORD(STACK[0x670]) ^ 0x379ACEBC)) & 0x769E99AD ^ STACK[0x670] & 1);
  v777 = (v774 + (v766 ^ 0xB7DF2504 ^ v774) + 1) ^ ((v766 ^ 0xB7DF2504) + 1);
  v778 = ((v777 + 1210112763 - ((2 * v777) & 0x9041B5F6)) ^ v766) + v774;
  v779 = v751 ^ 0x8DE08815;
  v780 = (v751 ^ 0x8DE08815) - ((2 * (v751 ^ 0x8DE08815) + 107943916) & 0x43F24584) + 623947448;
  v781 = v753 + (v780 ^ 0x8E1A42E0);
  LODWORD(STACK[0x5EC]) = v764;
  LODWORD(STACK[0x5E0]) = v770;
  LODWORD(STACK[0x600]) = v768;
  v782 = v768 & v765 ^ v742 ^ v768 & v770 ^ v773 & v764;
  v783 = v752;
  v784 = (v752 ^ 0x2BFF533F) + (v752 ^ 0xD400ACC0 ^ v775);
  v785 = (v748 ^ 0x34FE6829) + (v748 ^ 0xCB0197D6 ^ v775);
  v786 = (v754 ^ v751 ^ v470 ^ 0x2EF73DB2) + (v775 ^ 0xD108C24D ^ v754 ^ v751 ^ v470);
  v787 = ((2 * (v779 + 53971958)) & 0xFDC996F2) + ((v779 + 53971958) ^ 0x7EE4CB79);
  v788 = (v784 + 1) ^ (v785 + 1) ^ (v786 + 1);
  v789 = v787 + (v563 ^ 0x8DE08815) + (v780 ^ 0x21F922C2);
  v790 = v780 ^ v754 ^ 0x7D11689A;
  v791 = v790 - v787 - ((2 * (v790 - v787) + 231315186) & 0xD8663D4);
  v792 = (v748 ^ 0xCB0197D6) - ((2 * (v748 ^ 0xCB0197D6) + 107943916) & 0x73744B86) + 1022472633;
  v793 = v783 ^ 0xEDBA8903 ^ v792;
  v794 = (v792 ^ 0xC645DA3C) + v793 - 2108454333 - ((2 * ((v792 ^ 0xC645DA3C) + v793 + 1)) & 0x4A71484);
  v795 = ((2 * v792) ^ 0x73744B86) + LODWORD(STACK[0x650]);
  v796 = v778 ^ v758;
  v791 -= 2052588189;
  LODWORD(v470) = v791 ^ v780;
  v797 = ((v792 ^ 0x69A6BA1E) + (v792 ^ 0x53B3DBAD ^ v796) + 1) ^ ((v791 ^ v780 ^ v782 ^ 0xF0C175B6)
                                                                 + (v791 ^ v780 ^ v782 ^ 0xCAD41405 ^ v796)
                                                                 + 1);
  v798 = ((v781 + v790 - 985171753) ^ 0x2FE3FD4F) - 599863298 + ((2 * (v781 + v790 - 985171753)) & 0x5FC7FA9E);
  v799 = LODWORD(STACK[0x658]) + (v792 ^ 0x965945E1) + v793 - 860719544;
  v800 = ((2 * v799) & 0xFB9EFFFE) + (v799 ^ 0xFDCF7FFF);
  LODWORD(STACK[0x670]) = v794 ^ v792;
  v801 = v797 ^ ((v794 ^ 0x7DAC75BD) + (v794 ^ 0x47B9140E ^ v796) + 1);
  v802 = ((2 * (v800 + 36732929 + (v794 ^ 0x82538A42))) & 0x7FD7B9CE)
       + ((v800 + 36732929 + (v794 ^ 0x82538A42)) ^ 0xBFEBDCE7);
  v803 = v798 + (v791 ^ 0x6C331EA);
  v804 = v803 + 1742417613;
  v805 = v798 + ((v803 + 162481034) ^ 0xEA2DEF29) + 918763976 + ((2 * (v803 + 1742417613) + 1135094138) & 0xD45BDE52);
  v806 = *((_DWORD *)off_2518F0F80[(int)v565 - 2505] + 7);
  v807 = *((_DWORD *)off_2518F0F80[(int)v565 - 2505] + 187);
  v808 = LODWORD(STACK[0x654]) + LODWORD(STACK[0x6A0]) + v789;
  v809 = v789;
  LODWORD(STACK[0x640]) = v789;
  v810 = v808 + (v782 ^ 0x87E7F943);
  v811 = STACK[0x6A8];
  v812 = STACK[0x6C0];
  v813 = STACK[0x6F0];
  v814 = v810 + v788;
  v815 = STACK[0x6F8];
  v816 = LODWORD(STACK[0x6DC]) % 0x11B;
  v817 = v814
       + (*(_DWORD *)(STACK[0x6F8] + 4 * (LODWORD(STACK[0x6C8]) % 0x11B)) ^ 0x4AC5B9EF)
       + 602640665
       + (v806 ^ 0x966E51A9);
  LODWORD(STACK[0x620]) = v817;
  v818 = *(_DWORD *)(v815 + 4 * v816);
  v819 = v795;
  LODWORD(STACK[0x650]) = v795;
  v820 = (v563 ^ 0x8DE08815)
       - v795
       + LODWORD(STACK[0x660])
       + LODWORD(STACK[0x680])
       + (v818 ^ 0x4AC5B9EF)
       + (((v807 ^ 0x1A96F00F) + 536929007) ^ 0x53D5FEB5)
       - 351942092;
  v821 = STACK[0x6E4];
  HIDWORD(v762) = LODWORD(STACK[0x6E4]) ^ 2;
  LODWORD(v762) = LODWORD(STACK[0x6E4]) ^ 0xAFEF1F68;
  v822 = v762 >> 2;
  HIDWORD(v762) = LODWORD(STACK[0x6E4]) ^ 0x2F1F6A;
  LODWORD(v762) = LODWORD(STACK[0x6E4]) ^ 0xAFC00000;
  v823 = v762 >> 22;
  HIDWORD(v762) = LODWORD(STACK[0x6E4]) ^ 0x1F6A;
  LODWORD(v762) = LODWORD(STACK[0x6E4]) ^ 0xAFEF0000;
  LODWORD(STACK[0x6F0]) = v820 + v801;
  v824 = (v762 >> 13) ^ v822 ^ v823;
  LODWORD(STACK[0x64C]) = v824;
  v825 = LODWORD(STACK[0x6E8]) ^ 0x379ACEBC;
  HIDWORD(v762) = STACK[0x6E8];
  LODWORD(v762) = v825;
  v826 = v762 >> 2;
  HIDWORD(v762) = LODWORD(STACK[0x6E8]) ^ 0xEBC;
  LODWORD(v762) = LODWORD(STACK[0x6E8]) ^ 0x379AC000;
  v827 = (v762 >> 13) ^ v826;
  HIDWORD(v762) = LODWORD(STACK[0x6E8]) ^ 0x1ACEBC;
  LODWORD(v762) = LODWORD(STACK[0x6E8]) ^ 0x37800000;
  LODWORD(STACK[0x680]) = v776;
  LODWORD(v565) = LODWORD(STACK[0x6E0]) ^ 0x769E99AC;
  v828 = (v812 ^ 0xAFEF1F6A ^ v813 ^ 0xAFEF1F6A) & v825 ^ (v812 ^ 0xAFEF1F6A) & (v776 ^ 0x769E99AC) ^ (v821 ^ 0xAFEF1F6A) & (v776 ^ 0x769E99AC) ^ v565 & (v821 ^ v813);
  LODWORD(STACK[0x5FC]) = v812 ^ 0xAFEF1F6A;
  LODWORD(STACK[0x6C0]) = v813;
  LODWORD(STACK[0x6A8]) = v812;
  LODWORD(STACK[0x5D4]) = v821 ^ 0xAFEF1F6A;
  LODWORD(STACK[0x5DC]) = v776 ^ 0x769E99AC;
  LODWORD(STACK[0x5D8]) = v565;
  v829 = (v812 ^ 0xAFEF1F6A) & (v813 ^ 0xAFEF1F6A) ^ (v821 ^ 0xAFEF1F6A) & (v812 ^ v813) ^ v565 & v825 ^ (v776 ^ 0x769E99AC) & v825 ^ v565 & (v776 ^ 0x769E99AC);
  LODWORD(STACK[0x648]) = v829;
  LODWORD(v470) = v470 ^ 0x863E8E97;
  v830 = v802 - ((2 * v802 + 1227302462) & 0x5FBAD76C) + 342949589;
  v831 = LODWORD(STACK[0x670]) ^ v830;
  LODWORD(STACK[0x660]) = ((v831 ^ 0xC4285BEA) + (v831 ^ 0x3BD7A415 ^ v827 ^ (v762 >> 22)) + 1) ^ ((v830 ^ 0xD0229449)
                                                                                                 + (v827 ^ (v762 >> 22) ^ 0x2FDD6BB6 ^ v830)
                                                                                                 + 1) ^ ((v470 ^ v824 ^ 0xF1180262) + (v827 ^ (v762 >> 22) ^ 0xEE7FD9D ^ v470 ^ v824) + 1);
  LODWORD(STACK[0x658]) = v805;
  LODWORD(v563) = ((v803 + 1742417613 - 2 * ((v803 + 1750901433) & 0xEE7FD9F ^ (v803 + 1742417613) & 2) + 1063874953) ^ v470)
                + 2 * v805
                + 1004162488;
  LODWORD(v563) = v563 + 1838362075 - ((2 * v563) & 0xDB265BB6);
  v832 = v802 + v800;
  LODWORD(STACK[0x634]) = v802 + v800;
  v833 = ((2 * ((v831 ^ 0x3BD7A415) + 2 * v832 + 1177526806)) & 0xFDDE7EFC)
       + (((v831 ^ 0x3BD7A415) + 2 * v832 + 1177526806) ^ 0xFEEF3F7E);
  LODWORD(v470) = (v829 ^ 0x6D932DDB ^ (v803 - 1411441524) ^ v563)
                + 783768722
                - ((2 * (v829 ^ 0x6D932DDB ^ (v803 - 1411441524) ^ v563)) & 0x5D6EB924);
  LODWORD(STACK[0x654]) = (-17875074 - v833 + ((v833 + 17875074) ^ v828)) ^ ((v828 ^ (v802 - 132772622))
                                                                           - v802
                                                                           + 132772622) ^ ((v470 ^ 0xD148A36D)
                                                                                         + (v828 ^ 0x2EB75C92 ^ v470)
                                                                                         + 1);
  v834 = v805 + v803 + 1742417613;
  LODWORD(v470) = ((2 * ((v563 ^ 0x6D932DDB) - v834 + 504294245)) & 0xB2FFDBBE)
                + (((v563 ^ 0x6D932DDB) - v834 + 504294245) ^ 0x597FEDDF);
  v835 = v832 + v802;
  v836 = v832 + v802 - 1783083827;
  LODWORD(v563) = v833 - v836;
  v837 = v833 - (v832 - 1783083827);
  v838 = ((v837 + 1940995140) ^ (v819 - v836 - 679067065))
       + 1970208349
       - ((2 * ((v837 + 1940995140) ^ (v819 - v836 - 679067065))) & 0xEADDFCBA);
  v839 = v837 + v563 - 562458552 - ((2 * (v837 + v563 - 562458552) + 564508316) & 0x371EB2A8);
  v840 = v804 + v470 - 1764608;
  v841 = (v840 - 358683424) ^ (v809 - v834 + 1425343856);
  v842 = v840 + v470 + 762871202;
  LODWORD(STACK[0x670]) = ((v841 + (v772 ^ 0x87E7F943)) ^ 0x6DCF67FD)
                        - 404710
                        + ((2 * (v841 + (v772 ^ 0x87E7F943))) & 0xDB9ECFFA);
  v843 = v470 - ((2 * v470 - 453669422) & 0x8AD38622) - 1209759238;
  v844 = v843 ^ v772 ^ (v842 - ((2 * v842 + 122487486) & 0xFCFF286) - 342984030);
  v845 = v563 - ((2 * v563 - 1892956108) & 0xA0146E28) - 1751114962;
  v839 -= 1402850142;
  v846 = v835 - ((2 * v836 - 352838106) & 0xEADDFCBA);
  v847 = v845 ^ LODWORD(STACK[0x5CC]) ^ v839;
  LODWORD(STACK[0x6A0]) = (v838 ^ 0x8A9101A2)
                        - 1886220200
                        + (((v839 ^ 0x6470A6AB) + (LODWORD(STACK[0x644]) ^ 0x5E65C718 ^ v839) + 1) ^ ((v845 ^ 0x2FF5C8EB) + (LODWORD(STACK[0x644]) ^ 0x15E0A958 ^ v845) + 1) ^ ((v844 ^ 0x3A963CEE) + (LODWORD(STACK[0x644]) ^ 0x835D5D ^ v844) + 1));
  v848 = (v842 + 688931953 + ~((2 * v842 - 951254338) & 0x8AD38622)) ^ v843;
  v849 = v838 ^ (v846 + 10705469);
  v850 = v838 ^ 0x756EFE5D;
  v851 = ((2 * ((v838 ^ 0x756EFE5D) - 1228702806)) & 0x7F6EFFEE) + (((v838 ^ 0x756EFE5D) - 1228702806) ^ 0xBFB77FF7);
  v852 = ((v841 - 1228702806) ^ 0xFEBCBFF9) + 2145119479 + ((2 * (v841 - 1228702806)) & 0xFD797FF2) + 2560;
  v853 = v848 + v852;
  v854 = v470 + v852;
  v855 = (((v834 - ((2 * v834 - 1544608516) & 0xDD76886A) - 1062021453) ^ 0x6EBB4435 ^ v841) + v841) ^ (v470 - 2045373213);
  LODWORD(v470) = ((2 * v855) & 0xD36EF7DA) + (v855 ^ 0xE9B77BED);
  v856 = v854 + 686477411;
  v857 = (v853 - 2123937520) ^ v811 ^ (v854
                                     + 686477411
                                     - 2 * ((v854 + 1199398387) & 0x2FEF1F6B ^ (v854 + 686477411) & 1)
                                     - 1904104198);
  v858 = (v563 - ((2 * v563 - 1235065816) & 0xD9C44F58) - 938255936) ^ 0x6CE227AC;
  v859 = v858 + 1078493193 + v851 + 1635988992 + (~(2 * (v858 + 1078493193 + v851)) | 0x3CF993FF);
  v860 = v851 + v847;
  v861 = v849 + v850;
  LODWORD(v563) = ((2 * (v850 - 2138462770)) & 0x3FBBA572) + ((v850 - 2138462770) ^ 0x9FDDD2B9);
  v862 = v859 + 1;
  v863 = ((v859 + 1) ^ 0x9E7CC9FF) + (LODWORD(STACK[0x668]) ^ 0x171DAFAC ^ (v859 + 1));
  v864 = ((2 * (v841 - 2138462770)) & 0xDFFFFB7C) + ((v841 - 2138462770) ^ 0xEFFFFDBE);
  v865 = v858 ^ v861;
  v866 = (v862 ^ 0x61833600) + (v858 ^ v861) + 1953539732 - ((2 * ((v862 ^ 0x61833600) + (v858 ^ v861))) & 0xE8E14D28);
  v867 = (v863 + 1) ^ (-1078493193 - v860 + (LODWORD(STACK[0x668]) ^ 0x769E99AC ^ (v860 + 1078493193))) ^ (((v857 - ((2 * v857) & 0xE1BA15B8) - 253949220) ^ 0xF22F523) + (LODWORD(STACK[0x668]) ^ 0x86439370 ^ (v857 - ((2 * v857) & 0xE1BA15B8) - 253949220)) + 1);
  v868 = ((2 * (v864 + 268436034)) & 0xBEDEFFBA ^ 0x86CE9A00) + ((v864 + 268436034) ^ 0x9C9832DF);
  v869 = v856 + v470;
  LODWORD(STACK[0x62C]) = v869;
  LODWORD(STACK[0x668]) = v868;
  LODWORD(v470) = (v470 - v868 - 172489744) ^ (v869 - 186969693);
  LODWORD(STACK[0x638]) = v470 - ((2 * v470 + 15020846) & 0x27F6C0A4);
  v870 = (v811 ^ 0xAFEF1F6A) + v817 + v864 - 780586532 + v470;
  v871 = ((2 * (v563 + 1612852551)) & 0xFFD7F97C ^ 0x87C69804) + ((v563 + 1612852551) ^ 0x3C1CB1BC);
  v872 = ((2 * (v866 ^ (v865 - v871 + 2146172094))) & 0xE3DDEBB4 ^ 0xE0C14920)
       + (v866 ^ (v865 - v871 + 2146172094) ^ 0x59E534E);
  LODWORD(STACK[0x628]) = (v868 - 561035761) ^ (v853 - v864 + 1902593742);
  v873 = v870 - ((2 * v870) & 0xDD540ADC) - 290847378;
  LODWORD(STACK[0x630]) = ((2 * ((v866 ^ 0x7470A694) + 1571000102)) & 0xFF3E64D6)
                        + (((v866 ^ 0x7470A694) + 1571000102) ^ 0xFF9F326B);
  LODWORD(STACK[0x61C]) = (v871 + 1041418542) ^ (v860 - v563 - 534359358);
  v874 = STACK[0x708];
  v875 = 662 * (HIBYTE(v873) & 0xF ^ 0xE) + 439568;
  v876 = 662 * ((v873 >> 20) & 0xF ^ 0xA) + 439568;
  v877 = v876 - 965 * ((4450744 * (unint64_t)v876) >> 32);
  v878 = LODWORD(STACK[0x6F0]) - v563 - v872 + 1476855170 + v867;
  LODWORD(v563) = v878 - 1443286128 - ((2 * v878) & 0x53F26720);
  v879 = 662 * (HIWORD(v873) & 0xF ^ 0xA) + 439568;
  v880 = ((((*(unsigned __int8 *)(STACK[0x708] + (v875 - 965 * ((4450744 * (unint64_t)v875) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (662 * ((v873 >> 28) ^ 0xE) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v873 >> 28) ^ 0xE) + 439568)) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(STACK[0x708] + (v879 - 965 * ((4450744 * (unint64_t)v879) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + v877) ^ 0xE6) << 12);
  v881 = 662 * ((v873 >> 8) & 0xF ^ 5) + 439568;
  v882 = v881 - 965 * ((4450744 * (unint64_t)v881) >> 32);
  v883 = 662 * ((v873 >> 4) ^ 6) + 439568;
  v884 = ((v880 | *(unsigned __int8 *)(STACK[0x708] + v882) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                                                                                 + (662 * ((unsigned __int16)v873 >> 12) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v873 >> 12) + 439568)) >> 32))) ^ 0xE6) << 12);
  v885 = *(unsigned __int8 *)(STACK[0x708]
                            + (662 * (v873 & 0xF ^ 0xE)
                                           + 439568
                                           - 965
                                           * ((4450744 * (unint64_t)(662 * (v873 & 0xF ^ 0xE) + 439568)) >> 32))) ^ 0xE6;
  v886 = (((v885 - 418685297 - ((2 * v885) & 0xFFFFFF1F)) ^ 0x18F4A170) + 1) ^ (v885
                                                                              - 418685297
                                                                              - ((2 * v885) & 0xFFFFFF1F)) ^ (v884 - ((v885 - 418685297 - ((2 * v885) & 0xFFFFFF1F)) ^ 0xE70B5E8F | v884));
  LODWORD(v815) = (v886 ^ 0xE70B5E8F) + v884 - ((2 * ((v886 ^ 0xE70B5E8F) + v884)) & 0x150AC4F2);
  v887 = 662 * (BYTE3(v563) & 0xF ^ 9) + 439568;
  v888 = 662
       * ((((((2 * v563) ^ 0xAC0D98DF)
           + (v563 ^ 0xA9F93390)
           - ((2 * (((2 * v563) ^ 0xAC0D98DF) + (v563 ^ 0xA9F93390))) & 0x320)
           + 912) ^ v563) & 0x298)
        + (~(v563 >> 20) & 0xF));
  v889 = ((*(unsigned __int8 *)(STACK[0x708] + (v887 - 965 * ((4450744 * (unint64_t)v887) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (662 * ((v563 >> 28) ^ 0xA) + 439568 - 965 * ((4450744 * (unint64_t)(662 * ((v563 >> 28) ^ 0xA) + 439568)) >> 32))) ^ 0xE6) << 12);
  v890 = 662 * (WORD1(v563) & 0xF ^ 9) + 439568;
  v891 = v889 | *(unsigned __int8 *)(STACK[0x708]
                                   + (v890 - 965 * ((4450744 * (unint64_t)v890) >> 32))) ^ 0xE6;
  v892 = 662 * (((unsigned __int16)(v878 + 13200 - ((2 * v878) & 0x6720)) >> 12) ^ 3) + 439568;
  v893 = (v891 << 8) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                            + (v888 - 965 * ((4450744 * (unint64_t)v888) >> 32))) ^ 0xE6) << 12);
  v894 = 662 * ((v563 >> 8) & 0xF ^ 3) + 439568;
  LODWORD(v563) = 662 * ((v563 >> 4) ^ 9) + 439568;
  v895 = v563 - 965 * ((4450744 * (unint64_t)v563) >> 32);
  LODWORD(v563) = 662 * (v878 & 0xF)
                + 439568
                - 965 * ((4450744 * (unint64_t)(662 * (v878 & 0xFu) + 439568)) >> 32);
  v896 = v893 | *(unsigned __int8 *)(STACK[0x708]
                                   + (v894 - 965 * ((4450744 * (unint64_t)v894) >> 32))) ^ 0xE6;
  v897 = (v896 << 8) - 1831192438 - ((v896 << 9) & 0x25B47000);
  v898 = *(unsigned __int8 *)(STACK[0x708] + v563) ^ 0xE6;
  LODWORD(v563) = v897 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                              + (v892 - 965 * ((4450744 * (unint64_t)v892) >> 32))) ^ 0xE6) << 12);
  v899 = (v563 ^ 0x92DA388A | (v898 + 904021728 - ((2 * v898) & 0x1C0)) ^ 0x35E246E0) ^ (16
                                                                                       * (*(unsigned __int8 *)(STACK[0x708] + v895) ^ 0xE6));
  v900 = ((v886 & 5) + 1815300527 + (v886 & 0xA ^ 3)) ^ 0xEE336935;
  v901 = (((2 * v900) & 0x4004050) - v900 - 1192211753) ^ 0x3AF06A5F;
  v902 = 662
       * (((v901 | (16 * (v898 & 0xF))) + 1517055431 - ((2 * (v901 | (16 * (v898 & 0xF)))) & 0x34D8DB8E)) ^ 0x5A6C6DC7);
  v903 = 662 * (*(unsigned __int8 *)(STACK[0x708] + (v902 + 466048) % 0x3C5) ^ LODWORD(STACK[0x5F0]) ^ 0x95FEE7F1);
  LOBYTE(v866) = (*(_BYTE *)(STACK[0x708] + v903 % 0x3C5) >> 4) ^ 0xE;
  v904 = (v866 - 2 * (v866 & 7 ^ ((*(_BYTE *)(STACK[0x708] + v903 % 0x3C5) & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v902 % 0x3C5);
  v905 = 662 * v904 + 466048 - 965 * ((4450744 * (unint64_t)(662 * v904 + 466048)) >> 32);
  v906 = (v815 + 176513657) ^ (16
                             * (*(unsigned __int8 *)(STACK[0x708]
                                                   + (v883
                                                                  - 965 * ((4450744 * (unint64_t)v883) >> 32))) ^ 0xE6));
  v907 = ((v906 >> 4) ^ 0x2A463A62) & 0x79E1648 ^ 0x54AECED6 ^ (((2 * (((v906 >> 4) ^ 0x2A463A62) & 0x79E1647)) | 0xAC419526)
                                                              - (((v906 >> 4) ^ 0x2A463A62) & 0x79E1647)
                                                              - 1444989587);
  v908 = (((2 * v907) | 0x7B32CAD2) - v907 - 1033463145) ^ 0x3F176129;
  v909 = 662 * (((v908 | v899 & 0xF0) + 834751015 - ((2 * (v908 | v899 & 0xF0)) & 0x6382944E)) ^ 0x31C14A27);
  v910 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v909 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708] + v905) ^ 0xE6)) ^ 0xE6);
  v911 = v910 + 466048 - 965 * (((8901487 * (unint64_t)(v910 + 466048)) >> 32) >> 1);
  v912 = *(unsigned __int8 *)(STACK[0x708] + (v910 - 965 * ((4450744 * (unint64_t)v910) >> 32)));
  v913 = *(unsigned __int8 *)(STACK[0x708] + (v903 + 466048) % 0x3C5) ^ 0xE6;
  v914 = v913 - ((2 * v913) & 0x1FC);
  v915 = 662
       * ((((v912 >> 4) ^ 0xE) - 2 * (((v912 >> 4) ^ 0xE) & 7 ^ ((v912 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v909 % 0x3C5))
       + 466048;
  LODWORD(v470) = (1582314654
                 - ((v906 >> 8) & 0xF ^ 0x10000022 | 0x5E50349E)
                 + ((v906 >> 8) & 0xF ^ 0x10000022 | 0xA1AFCB61)) ^ 0xB1AFCB41;
  v916 = 662
       * (((v470 | (v899 >> 4) & 0xF0) - 650736273 - ((2 * (v470 | (v899 >> 4) & 0xF0)) & 0x326D1ADE)) ^ 0xD9368D6F);
  v917 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v916 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (v915 - 965 * ((4450744 * (unint64_t)v915) >> 32))) ^ 0xE6)) ^ 0xE6);
  v918 = v917 + 466048 - 965 * (((8901487 * (unint64_t)(v917 + 466048)) >> 32) >> 1);
  v919 = (*(unsigned __int8 *)(STACK[0x708] + (v917 - 965 * ((4450744 * (unint64_t)v917) >> 32))) >> 4) ^ 0xE;
  v920 = 662 * ((v919 + (~(2 * v919) | 0xF3) - 25) ^ *(unsigned __int8 *)(STACK[0x708] + v916 % 0x3C5))
       + 466048;
  v921 = ((v563 >> 8) & 0xF0 | ((unsigned __int16)(v815 + 25209) >> 12)) ^ 0x36;
  v922 = 662 * ((v921 - 430006423 - ((2 * v921) & 0xD2)) ^ 0xE65E9F69);
  v923 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v922 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (v920 - 965 * ((4450744 * (unint64_t)v920) >> 32))) ^ 0xE6)) ^ 0xE6);
  v924 = ((*(unsigned __int8 *)(STACK[0x708]
                              + v923
                              + 466048
                              - 965 * (((8901487 * (unint64_t)(v923 + 466048)) >> 32) >> 1)) ^ 0xE6) << 12) ^ ((*(unsigned __int8 *)(STACK[0x708] + v918) ^ 0xE6) << 8);
  v925 = (*(unsigned __int8 *)(STACK[0x708] + (v923 - 965 * ((4450744 * (unint64_t)v923) >> 32))) >> 4) ^ 0xE;
  v926 = 662 * ((v925 - ((2 * v925) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v922 % 0x3C5))
       + 466048;
  LODWORD(v563) = ((v563 >> 12) & 0xF0 | ((v815 + 176513657) >> 16) & 0xF) ^ 0xA5;
  LODWORD(v563) = 662 * ((v563 + 2022063456 - ((2 * v563) & 0xC0)) ^ 0x78863D60);
  v927 = v563 % 0x3C5;
  v928 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + ((int)v563 + 466048) % 0x3C5u) ^ (16
                                                                              * (*(unsigned __int8 *)(STACK[0x708] + (v926 - 965 * ((4450744 * (unint64_t)v926) >> 32))) ^ 0xE6)) ^ 0xE6);
  LODWORD(v563) = v928 + 466048 - 965 * (((8901487 * (unint64_t)(v928 + 466048)) >> 32) >> 1);
  v929 = *(unsigned __int8 *)(STACK[0x708] + (v928 - 965 * ((4450744 * (unint64_t)v928) >> 32)));
  v930 = 662
       * ((((v929 >> 4) ^ 0xE) - 2 * (((v929 >> 4) ^ 0xE) & 7 ^ ((v929 & 0x10) != 0)) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v927))
       + 466048;
  v931 = (HIWORD(v897) & 0xF0 | ((v815 + 176513657) >> 20) & 0xF) ^ 0xD8;
  v932 = 662 * ((v931 + 729530802 - ((2 * v931) & 0x164)) ^ 0x2B7BC1B2);
  v933 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v932 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (v930 - 965 * ((4450744 * (unint64_t)v930) >> 32))) ^ 0xE6)) ^ 0xE6);
  v934 = v933 + 466048 - 965 * (((8901487 * (unint64_t)(v933 + 466048)) >> 32) >> 1);
  v935 = (*(unsigned __int8 *)(STACK[0x708] + (v933 - 965 * ((4450744 * (unint64_t)v933) >> 32))) >> 4) ^ 0xE;
  v936 = 662 * ((v935 - ((2 * v935) & 0xC) - 26) ^ *(unsigned __int8 *)(STACK[0x708] + v932 % 0x3C5))
       + 466048;
  v937 = ((v897 >> 20) & 0xF0 | ((v815 + 176513657) >> 24) & 0xF) ^ 0x2A;
  v938 = 662 * ((v937 + 2011520304 - ((2 * v937) & 0x60)) ^ 0x77E55D30);
  v939 = v938 % 0x3C5;
  v940 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v938 + 466048) % 0x3C5) ^ (16
                                                                        * (*(unsigned __int8 *)(STACK[0x708]
                                                                                              + (v936 - 965 * ((4450744 * (unint64_t)v936) >> 32))) ^ 0xE6)) ^ 0xE6);
  v941 = v940 + 466048 - 965 * (((8901487 * (unint64_t)(v940 + 466048)) >> 32) >> 1);
  v942 = *(unsigned __int8 *)(STACK[0x708] + (v940 - 965 * ((4450744 * (unint64_t)v940) >> 32)));
  v943 = 662
       * ((((v942 >> 4) ^ 0xE) + ~(2 * (((v942 >> 4) ^ 0xE) & 7 ^ ((v942 & 0x10) != 0))) - 25) ^ *(unsigned __int8 *)(STACK[0x708] + v939))
       + 466048;
  v944 = 662 * ((HIBYTE(v897) & 0xF0 | ((v815 + 176513657) >> 28)) ^ 0x90) + 466048;
  v945 = 662
       * (*(unsigned __int8 *)(STACK[0x708] + (v944 - 965 * ((4450744 * (unint64_t)v944) >> 32))) ^ (16 * (*(unsigned __int8 *)(STACK[0x708] + (v943 - 965 * ((4450744 * (unint64_t)v943) >> 32))) ^ 0xE6)) ^ 0xE6)
       + 466048;
  LODWORD(v565) = (v914 + 315698174) ^ (16 * (*(unsigned __int8 *)(STACK[0x708] + v911) ^ 0xE6));
  v946 = (662 * (v908 | ~(_DWORD)v565 & 0xF0u) + 218460) % 0x3C5;
  v947 = v565 ^ 0xCA15BC6D ^ v924;
  LODWORD(v565) = v947 ^ ((*(unsigned __int8 *)(STACK[0x708] + v563) ^ 0xE6) << 16);
  LODWORD(v563) = (662 * ((v947 >> 4) & 0xF0 ^ 0x70 | v470) + 218460) % 0x3C5;
  v948 = 662 * (((v924 >> 8) & 0xF0 | ((unsigned __int16)(v815 + 25209) >> 12)) ^ 6) + 218460;
  v949 = v948 - 965 * ((4450744 * (unint64_t)v948) >> 32);
  v950 = v565 ^ ((*(unsigned __int8 *)(STACK[0x708] + v934) ^ 0xE6) << 20);
  v951 = 662 * (((v565 >> 12) & 0xF0 | ((v815 + 176513657) >> 16) & 0xF) ^ 0x45) + 218460;
  LODWORD(v565) = v950 ^ ((*(unsigned __int8 *)(STACK[0x708] + v941) ^ 0xE6) << 24);
  v952 = 662 * ((HIWORD(v950) & 0xF0 | ((v815 + 176513657) >> 20) & 0xF) ^ 0xC8) + 218460;
  v953 = v952 - 965 * ((4450744 * (unint64_t)v952) >> 32);
  v954 = v565 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                     + v945
                                     - 965 * (((8901487 * (unint64_t)v945) >> 32) >> 1)) ^ 6) << 28);
  LODWORD(v565) = 662 * (((v565 >> 20) & 0xF0 | ((v815 + 176513657) >> 24) & 0xF) ^ 0x8A)
                + 218460;
  v955 = 662 * ((HIBYTE(v954) & 0xF0 | ((-176513658 - v815) >> 28)) ^ 0xDF) + 218460;
  v956 = v955 - 965 * ((4450744 * (unint64_t)v955) >> 32);
  v957 = *(unsigned __int8 *)(STACK[0x708]
                            + (662 * ((16 * ((v914 + 315698174) & 0xF)) ^ 0xE0 | v901) + 218460) % 0x3C5);
  v958 = v957 ^ (16 * (*(unsigned __int8 *)(STACK[0x708] + v946) ^ 0xE6));
  LODWORD(v563) = v958 ^ ((*(unsigned __int8 *)(STACK[0x708] + v563) ^ 0xE6) << 8);
  v959 = v563 ^ ((*(unsigned __int8 *)(STACK[0x708] + v949) ^ 0xE6) << 12);
  v960 = v959 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                     + (v951 - 965 * ((4450744 * (unint64_t)v951) >> 32))) ^ 0xE6) << 16);
  v961 = v960 ^ ((*(unsigned __int8 *)(STACK[0x708] + v953) ^ 0xE6) << 20);
  LODWORD(v565) = v961 ^ ((*(unsigned __int8 *)(STACK[0x708]
                                              + (v565
                                                             - 965
                                                             * ((4450744 * (unint64_t)v565) >> 32))) ^ 0xE6) << 24);
  v962 = 662 * ((v565 ^ ((*(unsigned __int8 *)(STACK[0x708] + v956) ^ 6) << 28)) >> 28) + 454132;
  LODWORD(v563) = *(unsigned __int8 *)(STACK[0x708]
                                     + (662 * ((v563 >> 8) & 0xF)
                                                    + 454132
                                                    - 965
                                                    * ((4450744
                                                      * (unint64_t)(662 * ((v563 >> 8) & 0xF)
                                                                         + 454132)) >> 32))) ^ 0xE6 ^ ((((*(unsigned __int8 *)(STACK[0x708] + (662 * (BYTE3(v565) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (BYTE3(v565) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (v962 - 965 * ((4450744 * (unint64_t)v962) >> 32))) ^ 0xE6) << 12) | *(unsigned __int8 *)(STACK[0x708] + (662 * (HIWORD(v960) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * (HIWORD(v960) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (662 * ((v961 >> 20) & 0xF) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((v961 >> 20) & 0xF) + 454132)) >> 32))) ^ 0xE6) << 12) ^ (16 * (*(unsigned __int8 *)(STACK[0x708] + (662 * ((unsigned __int16)v959 >> 12) + 454132 - 965 * ((4450744 * (unint64_t)(662 * ((unsigned __int16)v959 >> 12) + 454132)) >> 32))) ^ 0xE6));
  v963 = LODWORD(STACK[0x668]) - ((2 * LODWORD(STACK[0x668]) + 1300746144) & 0x7315AC90);
  v964 = 662 * ((v958 >> 4) ^ 0xE) + 454132;
  LODWORD(v470) = STACK[0x628];
  LODWORD(STACK[0x668]) = v873 ^ LODWORD(STACK[0x628]);
  LODWORD(STACK[0x644]) = v963 - 531710440;
  v965 = LODWORD(STACK[0x638]) - 730990103;
  LODWORD(v565) = LODWORD(STACK[0x62C]) + 1384030409 + (v965 ^ 0x13FB6052);
  v966 = ((v963 - 531710440) ^ 0xB98AD648) + v470 + (v965 ^ 0x13FB6052);
  v967 = *(unsigned __int8 *)(v874 + (v964 - 965 * ((4450744 * (unint64_t)v964) >> 32)));
  LODWORD(STACK[0x624]) = v966 - 42981585 - ((2 * v966) & 0xFAE04E5E);
  v968 = STACK[0x61C];
  LODWORD(STACK[0x62C]) = *(unsigned __int8 *)(v874
                                             + (662 * (v957 & 0xF ^ 6)
                                                            + 454132
                                                            - 965
                                                            * ((4450744
                                                              * (unint64_t)(662 * (v957 & 0xF ^ 6u) + 454132)) >> 32))) ^ LODWORD(STACK[0x61C]) ^ (16 * (v967 ^ 0xE6)) ^ ((_DWORD)v563 << 8);
  LODWORD(STACK[0x628]) = v565 + 335241298 - ((2 * v565) & 0x27F6C0A4);
  v969 = v871 - ((2 * v871 + 210687454) & 0xDDD5148) - 1925835885;
  LODWORD(STACK[0x638]) = v969;
  v970 = v968 + (v969 ^ 0x6EEA8A4);
  v971 = LODWORD(STACK[0x630]) + v872;
  LODWORD(STACK[0x630]) = v970 + 1317249981 + v872 + 1440381984 - ((2 * (v970 + 1317249981 + v872)) & 0xABB4F840);
  LODWORD(STACK[0x6F0]) = v971 - ((2 * v971 - 1647779164) & 0xE9A2FD0A);
  v972 = (LODWORD(STACK[0x644]) ^ 0x1F3F32A4) - (v965 ^ LODWORD(STACK[0x5C8]) ^ LODWORD(STACK[0x628]));
  return ((uint64_t (*)(_QWORD, _QWORD))(*(_QWORD *)(STACK[0x6D0]
                                                             + 8
                                                             * ((127 * (LODWORD(STACK[0x67C]) != 0)) ^ LODWORD(STACK[0x698])))
                                                 - 8))((LODWORD(STACK[0x670]) + 3266), v972 - ((2 * v972 - 1087011754) & 0xF071047C) - 674020247);
}

void sub_24780BB2C(int a1, uint64_t a2, int a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;

  LODWORD(STACK[0x658]) = v5;
  LODWORD(STACK[0x660]) = a1;
  v8 = STACK[0x610];
  v9 = LODWORD(STACK[0x608]) + 1;
  LODWORD(STACK[0x650]) = a3 - 1201023944;
  LODWORD(STACK[0x654]) = 1201023944 - a3;
  LODWORD(STACK[0x6DC]) += 208;
  LODWORD(STACK[0x6C8]) += 208;
  LODWORD(STACK[0x610]) = v8 + 2;
  LODWORD(STACK[0x67C]) = a5 - 1;
  LODWORD(STACK[0x670]) = STACK[0x6E8];
  LODWORD(STACK[0x6E8]) = v7;
  LODWORD(STACK[0x6F0]) = STACK[0x6E4];
  LODWORD(STACK[0x6E4]) = v6;
  LODWORD(STACK[0x668]) = STACK[0x6E0];
  LODWORD(STACK[0x608]) = v9;
  LODWORD(STACK[0x6E0]) = STACK[0x680];
  JUMPOUT(0x247808B74);
}

uint64_t sub_24780BC04(int a1, int a2, int a3, uint64_t a4, uint64_t a5, int a6, uint64_t a7, int a8, uint64_t a9, uint64_t a10, char a11, int a12, char a13, int a14, int a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  int v49;
  int v50;
  int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  int v56;
  int v57;
  int v58;
  int v59;
  unsigned int v60;
  BOOL v61;
  unsigned int v62;
  unsigned int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  int v105;
  unsigned int v106;
  int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  int v111;
  int v112;
  unsigned int v113;
  int v114;
  int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  unsigned int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  unsigned int v161;
  unsigned int v162;
  _BYTE *v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  unsigned int v175;
  unsigned int v176;
  int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  unsigned int v190;
  unsigned int v191;
  int v192;
  unsigned int v193;
  int v194;
  int v195;
  unsigned int v196;
  int v197;
  unsigned int v198;
  int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  int v212;
  unsigned int v213;
  int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  unsigned int v233;
  int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  uint64_t v243;
  unsigned int v244;
  uint64_t v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  uint64_t v250;
  char v251;
  char v252;
  char v253;
  char v254;

  LODWORD(STACK[0x658]) = LODWORD(STACK[0x5D8]) + LODWORD(STACK[0x500]);
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x5D4]) + LODWORD(STACK[0x508]);
  LODWORD(STACK[0x670]) = LODWORD(STACK[0x5EC]) + LODWORD(STACK[0x504]);
  LODWORD(STACK[0x67C]) = LODWORD(STACK[0x5DC]) + LODWORD(STACK[0x4F8]);
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x50C]) + LODWORD(STACK[0x5E0]);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x4FC]) + v52;
  LODWORD(STACK[0x5BC]) += 64;
  LODWORD(STACK[0x6DC]) = LODWORD(STACK[0x4F0]) + LODWORD(STACK[0x6A0]);
  v60 = LODWORD(STACK[0x5B8]) + 1163639816;
  LODWORD(STACK[0x6A0]) = (a49 + 1244507139) < 0x6D58A5CE;
  LODWORD(STACK[0x654]) = v60 < 0x6D58A5CE;
  v61 = a49 + 1244507139 >= v60;
  v62 = (LODWORD(STACK[0x604]) + 1733361148) & 0x98AEFFFE;
  LODWORD(STACK[0x6F0]) = v62;
  v63 = (v55 ^ 0x5CE84A58) - ((2 * (v55 ^ 0x5CE84A58) + 732176814) & 0xBB1A9BAA) + 1935629996;
  v64 = ((2 * v63) & 0xD45BDE52 ^ 0x901A9A02) + (v63 ^ 0xB7A0A2FC);
  v65 = (v53 ^ v55 ^ v58 ^ 0x196DF30E) + (v57 ^ 0x497D139B ^ v53 ^ v55 ^ v58);
  v66 = a8 - ((v62 ^ 0xA85EEE74) & (2 * v50 + 1406283240)) - 353459901;
  v67 = a3 + 1603977771 + (v66 ^ 0x542F75D1) + 1347456258 - ((2 * (a3 + 1603977771 + (v66 ^ 0x542F75D1))) & 0xA0A11A04);
  v68 = v49 - ((2 * a6 + 1157378822) & 0x4B258430) - 1135481462;
  LODWORD(STACK[0x650]) = a2 ^ 0x7838823E;
  v69 = (v68 ^ 0x2592C218)
      + (a2 ^ 0x7838823E)
      - 463893600
      - ((2 * ((v68 ^ 0x2592C218) + (a2 ^ 0x7838823E))) & 0xC8B31740);
  LODWORD(STACK[0x64C]) = ((v54 ^ 0x34FE6829) + (v57 ^ v54 ^ 0x64EE88BC) + 1) ^ ((v51 ^ 0x2BFF533F)
                                                                               + (v51 ^ v57 ^ 0x7BEFB3AA)
                                                                               + 1) ^ (v65 + 1);
  v70 = ((2 * (v64 - ((2 * v64) & 0x6B9F6890) + 902804552)) & 0x2FD7F208 ^ 0x756A200)
      + ((v64 - ((2 * v64) & 0x6B9F6890) + 902804552) ^ 0x9C44A816);
  v71 = (v54 ^ 0xCB0197D6)
      - 1511535791
      + (v67 ^ 0x50508D02)
      + 511754937
      - ((2 * ((v54 ^ 0xCB0197D6) - 1511535791 + (v67 ^ 0x50508D02))) & 0x3D018572);
  v72 = ((2 * ((v69 ^ 0xE4598BA0) + (v53 ^ 0x8DE08815))) & 0xE6DEFFDA)
      + (((v69 ^ 0xE4598BA0) + (v53 ^ 0x8DE08815)) ^ 0xF36F7FED);
  v73 = v70 - ((2 * v70 - 732176814) & 0xF4E628DC) + 1688273815;
  v74 = v73 ^ v69;
  LODWORD(STACK[0x644]) = v73 ^ v69;
  v75 = (v68 ^ 0xC1CB49B8 ^ v69) + (v73 ^ v69 ^ 0x61D56031) + 1;
  v76 = v75 - ((2 * v75) & 0x66575F22);
  v77 = (v51 ^ 0x6A60499A) - ((2 * (v51 ^ 0x6A60499A) + 70504538) & 0x5A5A0DA0) + 793177853;
  v78 = (v67 ^ v77 ^ 0x8282742D) + 1;
  LODWORD(STACK[0x648]) = v78;
  v79 = (v72 - 1300739228) ^ LODWORD(STACK[0x6E4]) ^ (v70 - 366088407);
  LODWORD(STACK[0x6E8]) = ((v79 ^ 0x5010E095) + (LODWORD(STACK[0x6E8]) ^ 0x9875D1D6 ^ v79) + 1) ^ ((v77 ^ 0xD2D2F92F)
                                                                                                 + (LODWORD(STACK[0x6E8]) ^ 0x1AB7C86C ^ v77)
                                                                                                 + 1) ^ ((v71 ^ 0xE17F3D46) + (LODWORD(STACK[0x6E8]) ^ 0x291A0C05 ^ v71) + 1);
  v80 = 2 * v72 + 741877670;
  v81 = (v72 + 213563694 - (v80 & 0xED3D3358) - 2991) ^ LODWORD(STACK[0x680]);
  v82 = v78 + (v66 ^ 0x47FF8D3 ^ v67) - ((2 * (v78 + (v66 ^ 0x47FF8D3 ^ v67))) & 0x5AFE6420) - 1384173040;
  v83 = v77 ^ a15 ^ v82;
  v84 = v71 ^ v67 ^ v77;
  v85 = v82 ^ v84;
  v76 -= 1288982639;
  v86 = v73 ^ 0xC958BBFF ^ v76;
  v87 = v74 ^ (v72 - 1300739228);
  v88 = v76 ^ v87;
  v89 = v72 - (v80 & 0xC50C2EF6);
  v90 = v71 ^ 0x1E80C2B9;
  v91 = (v71 ^ 0x1E80C2B9) - ((2 * (v71 ^ 0x1E80C2B9) - 951611170) & 0xD271FA58) - 857946725;
  v92 = v83 + (v85 ^ 0x317D8484) + 1 - ((2 * (v83 + (v85 ^ 0x317D8484) + 1)) & 0xBE6BB97A) - 550118211;
  v93 = (v92 ^ 0x20CA2342) + (LODWORD(STACK[0x6C0]) ^ 0x70DAC3D7 ^ v92);
  v94 = v92 ^ v91;
  v95 = v86 + (v88 ^ 0xD2FECFA0) + 1 - ((2 * (v86 + (v88 ^ 0xD2FECFA0) + 1)) & 0x2CC9FCBC) + 375717470;
  LODWORD(STACK[0x6E4]) = ((v91 ^ 0x16C702D3) + (LODWORD(STACK[0x6C0]) ^ 0x46D7E246 ^ v91) + 1) ^ (v93 + 1) ^ ((v81 ^ v95 ^ 0xE99B01A1) + (LODWORD(STACK[0x6C0]) ^ 0xB98BE134 ^ v81 ^ v95) + 1);
  v89 += 2023893838;
  v96 = v87 ^ 0x68A36F16;
  v97 = v95 ^ v89;
  v98 = ((2 * (v96 + (v95 ^ v89 ^ 0xB1D16DA) + 1)) & 0xB6FF7FFE) + ((v96 + (v95 ^ v89 ^ 0xB1D16DA) + 1) ^ 0x5B7FBFFF);
  v99 = ((2 * ((v89 ^ 0xE286177B) + 1535098879 - v98)) & 0xFA87FFEA)
      + (((v89 ^ 0xE286177B) + 1535098879 - v98) ^ 0x7D43FFF5);
  v100 = ((2 * ((v84 ^ 0x9574B9B3) + (v94 ^ a14) + 1)) & 0xBBFCFF7E)
       + (((v84 ^ 0x9574B9B3) + (v94 ^ a14) + 1) ^ 0xDDFE7FBF);
  v101 = (v94 ^ 0x360D2191 ^ (v100 + 570523713))
       + 1548460244
       - ((2 * (v94 ^ 0x360D2191 ^ (v100 + 570523713))) & 0xB89741A8);
  v102 = (v97 ^ 0xF4E2E925 ^ (v98 - 1535098879))
       + 1190218770
       - ((2 * (v97 ^ 0xF4E2E925 ^ (v98 - 1535098879))) & 0x8DE29824);
  v103 = v90 - v100;
  v104 = v103 - 1115010321;
  v105 = v102 ^ LODWORD(STACK[0x6E0]) ^ (v99 - 2 * ((v99 + 2124677836) & 0x769E99AE ^ v99 & 2) - 180183944);
  v106 = ((LODWORD(STACK[0x5FC]) ^ (v103 - 1115010321)) - v103 + 1115010321) ^ ((v101 ^ 0xA3B45F2B)
                                                                              + (LODWORD(STACK[0x6A8]) ^ 0xF3A4BFBE ^ v101)
                                                                              + 1) ^ ((v105 ^ 0xB90EB3ED)
                                                                                    + (LODWORD(STACK[0x6A8]) ^ 0xE91E5378 ^ v105)
                                                                                    + 1);
  v107 = v102 ^ v88;
  v102 ^= 0x46F14C12u;
  v108 = ((2 * (v99 - 2101608437 + v102)) & 0x9BCB5CDE) + ((v99 - 2101608437 + v102) ^ 0xCDE5AE6F);
  v109 = v101 ^ v85;
  v101 ^= 0x5C4BA0D4u;
  v110 = v101 + v104 + 1088707989 - ((2 * (v101 + v104)) & 0x81C8BB2A);
  v111 = (v102 - ((2 * v102 + 166307116) & 0x7FF45BDE) - 990969723) ^ v107;
  v112 = (v108 + 771904594) ^ v107;
  v113 = v111 ^ (v108 - ((2 * v108 + 217382366) & 0x8BD53C98) + 1281695035) ^ v59;
  v114 = (v101 - 2064330090) ^ v109;
  v115 = v110 ^ v109;
  v116 = (v110 ^ 0x40E45D95) - ((2 * (v110 ^ 0x40E45D95) + 821056826) & 0x33AC422C) + 1917733811;
  v117 = (v116 ^ 0xE629DEE9) + (LODWORD(STACK[0x668]) ^ 0xF77C2478 ^ v116);
  v118 = v115 ^ 0x93976A54 ^ v116;
  v119 = (v114 ^ 0x9DED31DE) + 1;
  v120 = (v119 + (LODWORD(STACK[0x668]) ^ 0x8CB8CB4F ^ v114)) ^ (v117 + 1) ^ ((v113 ^ 0x5B2EBBD3)
                                                                            + (LODWORD(STACK[0x668]) ^ 0x4A7B4142 ^ v113)
                                                                            + 1);
  v121 = v98 - ((2 * v98 - 24984714) & 0x85ACB1E0) + 1108851371;
  v122 = ((2 * ((v121 ^ 0x416E82AD) + (v111 ^ 0x5B2EBBD3) + 1)) & 0xFDDD9FEC)
       + (((v121 ^ 0x416E82AD) + (v111 ^ 0x5B2EBBD3) + 1) ^ 0xFEEECFF6);
  v123 = v100 - ((2 * v100 - 108706826) & 0x9B3F6DF0) - 899524365;
  v124 = ((2 * (v119 + (v123 ^ 0x4E276CA5))) & 0xF5E5BEDE) + ((v119 + (v123 ^ 0x4E276CA5)) ^ 0x7AF2DF6F);
  v125 = (v121 ^ 0xBE917D52) + 1;
  v126 = ((2 * ((v112 ^ 0x544DA873) + v125)) & 0xFF99C77C) + (((v112 ^ 0x544DA873) + v125) ^ 0x7FCCE3BE);
  v127 = v112 ^ v121 ^ 0x41BD2A9E ^ (((v108 - 2038792465) ^ 0xF0DB158E)
                                   + 13871155
                                   - ((2 * ((v108 - 2038792465) ^ 0xF0DB158E)) & 0x1A75066));
  v128 = (v122 + 1523444160 + (v121 ^ 0xBE917D52 ^ (v122 + 1523444160)) + 1) ^ v125;
  v129 = ((v128 + 13871155 - ((2 * v128) & 0x1A75066)) ^ v121 ^ 0x41BD2A9E) + v122 + 1523444160;
  v130 = v129 - 13958511 - ((2 * v129) & 0xFE560522);
  v131 = ((2 * ((v123 ^ 0xB1D8935A) + (v115 ^ 0xED905204) + 1)) & 0xFDF7EC6E)
       + (((v123 ^ 0xB1D8935A) + (v115 ^ 0xED905204) + 1) ^ 0x7EFBF637);
  v132 = ((2 * ((v123 ^ 0x4E276CA5) - 1074086811)) & 0xF963BBFC) + (((v123 ^ 0x4E276CA5) - 1074086811) ^ 0xFCB1DDFE);
  v133 = ((v121 ^ 0x416E82AD) - ((2 * (v121 ^ 0x416E82AD) + 267745482) & 0xFCFF286) + 1206039976) ^ LODWORD(STACK[0x688]) ^ v127;
  v134 = (-55452162 - v132 + (LODWORD(STACK[0x600]) ^ (v132 + 55452162))) ^ ((v118 ^ v123 ^ 0xE1A8B6B2 ^ 0xF8C7FD1E)
                                                                           + (LODWORD(STACK[0x6BC]) ^ 0xC2D29CAD ^ v118 ^ v123 ^ 0xE1A8B6B2)
                                                                           + 1) ^ ((v133 ^ 0x940F83B2)
                                                                                 + (LODWORD(STACK[0x6BC]) ^ 0xAE1AE201 ^ v133)
                                                                                 + 1);
  v135 = v130 ^ v127;
  v136 = v135 ^ 0x94DB7EDC;
  v137 = ((2 * ((v135 ^ 0x94DB7EDC) - 434367386)) & 0xEDDDCDFE) + (((v135 ^ 0x94DB7EDC) - 434367386) ^ 0xF6EEE6FF);
  v138 = v130 ^ 0xFF2B0291;
  v139 = (v121 ^ 0x416E82AD) - v126;
  v140 = (v130 ^ 0xFF2B0291) - v139 + (v135 & 0xEA2DEF29 ^ 0x7FF691F7) + (v135 & 0xEA2DEF29 ^ 0x95DB7EDE) + 415772926;
  v141 = ((2 * v140) & 0xF7D3E7BE) + (v140 ^ 0x7BE9F3DF);
  v142 = v124 - ((2 * v124 + 1033090190) & 0x4D5EA95A) - 2055655692;
  v143 = v142 ^ v123 ^ 0xE1A8B6B2;
  v144 = v142 ^ v118 ^ 0xE188C5B;
  v145 = v132 - v131;
  v146 = v145 - ((2 * v145 + 905695790) & 0x2C05FFAC) - 251598611;
  v147 = (v139 + 410743041) ^ LODWORD(STACK[0x694]) ^ (v137 + 152115457);
  v148 = ((2 * (v144 - 434367386)) & 0x7F5DEEF8) + ((v144 - 434367386) ^ 0xBFAEF77C);
  v149 = ((v146 ^ 0x69FD0029) + (LODWORD(STACK[0x6B0]) ^ 0x11E50695 ^ v146) + 1) ^ (-1079052420
                                                                                  - v148
                                                                                  + (LODWORD(STACK[0x6B0]) ^ 0x87E7F943 ^ (v148 + 1079052420))) ^ ((v147 ^ 0x3A1561B3) + (LODWORD(STACK[0x6B0]) ^ 0x420D670F ^ v147) + 1);
  v150 = v126 + v136;
  v151 = v131 + v144;
  LODWORD(STACK[0x520]) += LODWORD(STACK[0x648]) + LODWORD(STACK[0x6E8]);
  LODWORD(STACK[0x500]) = LODWORD(STACK[0x658]) + (v121 ^ 0x42D658F0);
  LODWORD(STACK[0x5A8]) = LODWORD(STACK[0x5A8]) - a3 - 1603977771 + LODWORD(STACK[0x64C]);
  v152 = LODWORD(STACK[0x510]) + (v123 ^ 0xB2604907) + v106;
  v153 = LODWORD(STACK[0x514]) + (v143 ^ 0xF6DF7145) + v134;
  LODWORD(STACK[0x508]) = LODWORD(STACK[0x660]) + (LODWORD(STACK[0x644]) ^ 0x9E2A9FCE);
  v154 = !v61;
  if (LODWORD(STACK[0x654]) != LODWORD(STACK[0x6A0]))
    v155 = STACK[0x654];
  else
    v155 = v154;
  LODWORD(STACK[0x524]) += LODWORD(STACK[0x650]) + (v56 ^ 0x55DA7CC6);
  LODWORD(STACK[0x504]) = LODWORD(STACK[0x670]) + v138;
  LODWORD(STACK[0x57C]) = LODWORD(STACK[0x57C]) + 2062737263 - v124 + v120;
  LODWORD(STACK[0x528]) = LODWORD(STACK[0x528]) - 1841907673 + a1;
  v156 = LODWORD(STACK[0x518]) + (v84 ^ 0x6A8B464C);
  v157 = v150 + v137 + 105817765;
  v158 = v141 - 2039543586 - v157;
  v159 = v156 + LODWORD(STACK[0x6E4]);
  v160 = (v143 ^ 0x9208EBA) - v145;
  v161 = v151 + v148;
  LODWORD(STACK[0x4F8]) = LODWORD(STACK[0x67C]) + v96;
  LODWORD(STACK[0x50C]) = LODWORD(STACK[0x698]) - 2078929887 + v141;
  v162 = v160 - (v161 - 1796456436);
  v163 = (_BYTE *)STACK[0x708];
  v163[473] = v148 - (65 - v161) - 2 * ((v148 - (65 - v161) + 76) & 0xE7 ^ (v148 - (65 - v161)) & 1) - 78;
  v163[170] = v145
            - 19
            + v160
            - (v161
             + 12)
            + 77
            + ~(2 * ((((v145 - 19 + v160 - (v161 + 12) + 77) & 0x67) + 96) ^ (v145 - 19 + v160 - (v161 + 12) + 77) & 1))
            - 57;
  v163[956] = (v137 - 57 - (23 - v157) - 87) ^ 0xB0;
  v163[47] = (v157 + 37) ^ 0xB0;
  LODWORD(STACK[0x4FC]) = LODWORD(STACK[0x6C8]) + v122 + 17903626;
  v164 = v139
       + v158
       - 449081321
       + v158
       + 482986917
       - ((2 * (v139 + v158 - 449081321 + v158 + 482986917) + 268117036) & 0xAF032154)
       - 545316160;
  v165 = v148 - (1587304257 - v161) + 1569398346;
  v166 = LODWORD(STACK[0x4F4]) - v160;
  v163[529] = v161 + 12 - ((2 * (v161 + 12) - 112) & 0xCC) - 82;
  v167 = ((v158 + 2058450085) ^ 0xCBAB92E) + 1607441053 - ((2 * ((v158 + 2058450085) ^ 0xCBAB92E)) & 0xBF9F353A);
  v163[653] = (v139 + v158 + 23 + 22) ^ 0xB0;
  v163[832] = v162 + 77 - ((2 * (v162 + 77) + 94) & 0xCC) + 21;
  v168 = v145 - 604861459 + v162 - 209152179 + v162 - 209152179;
  v169 = v168 - ((2 * v168 + 653877790) & 0x7FF41698) - 747193253;
  v170 = ((2 * ((v167 ^ 0xA0306562) + (v164 ^ 0x578190AA) + 1)) & 0xC5EFEF2E)
       + (((v167 ^ 0xA0306562) + (v164 ^ 0x578190AA) + 1) ^ 0x62F7F797);
  v171 = v164 ^ (v137 + 2145361351 - (-v157 - 449081321) - 290765273);
  v163[709] = v171 ^ 0x1A;
  v172 = v169 ^ v165;
  v173 = ((2 * ((v167 ^ 0x5FCF9A9D) + 357086072)) & 0xD3F24FEC) + (((v167 ^ 0x5FCF9A9D) + 357086072) ^ 0xE9F927F6);
  v163[226] = v169 ^ v165 ^ 0xAA;
  v174 = ((v162 - 1079052420) ^ 0xCBAB92E) - 454178563 - ((2 * ((v162 - 1079052420) ^ 0xCBAB92E)) & 0xC9DB91FA);
  v175 = ((2 * ((v174 ^ 0x1B123702) + (v169 ^ 0x3FFA0B4C) + 1)) & 0xEFE7FF9A)
       + (((v174 ^ 0x1B123702) + (v169 ^ 0x3FFA0B4C) + 1) ^ 0x77F3FFCD);
  v176 = ((2 * ((v174 ^ 0xE4EDC8FD) + 357086072)) & 0xE59F9F26) + (((v174 ^ 0xE4EDC8FD) + 357086072) ^ 0x72CFCF93);
  v177 = v171 ^ (v157 + 1092969740);
  v178 = v172 ^ (v161 + 2139416763);
  v163[103] = (v173 + 10) ^ 0xB0;
  v163[282] = v178 ^ 0xAA;
  v163[350] = (v158 - 91) ^ 0xB0;
  v179 = ((2 * ((v177 ^ 0x578190AA) + v173 + 369547274)) & 0xFECEAB9C)
       + (((v177 ^ 0x578190AA) + v173 + 369547274) ^ 0x7F6755CE);
  v163[585] = v176 - ((2 * v176 - 38) & 0xCC) + 83;
  v178 ^= 0x3FFA0B4Cu;
  v180 = ((2 * (v178 + v176 - 1926221715)) & 0xEA9ED57A) + ((v178 + v176 - 1926221715) ^ 0xF54F6ABD);
  v163[888] = v175 - ((2 * v175 + 102) & 0xCC) + 25;
  v181 = v171 ^ 0xA87E6F55;
  v182 = ((2 * ((v172 ^ 0x3FFA0B4C) + 212972025)) & 0xD7DF3FDE)
       + (((v172 ^ 0x3FFA0B4C) + 212972025) ^ 0x6BEF9FEF)
       - v180;
  v183 = ((v170 + 497070747 + v179) ^ (v179 - 2137478606))
       - 1169069688
       - ((2 * ((v170 + 497070747 + v179) ^ (v179 - 2137478606))) & 0x74A2D310);
  v184 = (v171 ^ 0x578190AA) - v179;
  v163[765] = v177 ^ 0x1A;
  v163[944] = v182 - ((2 * v182 - 100) & 0xCC) - 76;
  v185 = v178 - 179344707 - v180 - ((2 * (v178 - 179344707 - v180)) & 0x2BBCFE6) - 2124552205;
  v186 = ((v180 + 179344707) ^ (v175 - 1833134730 + v180))
       + 604167339
       + (~(2 * ((v180 + 179344707) ^ (v175 - 1833134730 + v180))) | 0xB7FA46A9)
       + 1;
  v163[462] = (v184 - 57) ^ 0xB0;
  v163[406] = (v170 + 105) ^ 0xB0;
  v187 = v181 + 2137478606 + (v177 ^ 0x578190AA) + v184;
  v188 = (2 * v187 + 2) & 0x53BEA300;
  v187 += 702501249;
  v163[159] = v183 ^ 0x38;
  v163[641] = v186 ^ 0x4D;
  v163[35] = v185 ^ 0x15;
  v189 = v183 ^ 0xBA516988;
  v190 = ((2 * (v184 - 1944516665 + (v183 ^ 0xBA516988))) & 0x2FB3B73E)
       + ((v184 - 1944516665 + (v183 ^ 0xBA516988)) ^ 0x17D9DB9F);
  v191 = ((2 * (v183 ^ (v187 - v188))) & 0x7E5FFF7E ^ 0x261C7010) + (v183 ^ (v187 - v188) ^ 0xACA1C7B7);
  v192 = v186 ^ 0x2402DCAB;
  v193 = ((2 * (v182 - 1990210866 + (v186 ^ 0x2402DCAB))) & 0xDF2EBFF8)
       + ((v182 - 1990210866 + (v186 ^ 0x2402DCAB)) ^ 0xEF975FFC);
  v194 = v186 ^ v185;
  v195 = v179 - v191 - ((2 * (v179 - v191) + 1996293590) & 0x74519862) - 1247326436;
  v163[338] = v180 - ((2 * v180 + 122) & 0xCC) + 35;
  v163[518] = v187 ^ 0x30;
  v196 = v191 + v190 - ((2 * (v191 + v190) + 1374439748) & 0xDB3DCF06) + 378866725;
  v197 = (v194 ^ 0x5AA0C4A7) + v180 - ((2 * ((v194 ^ 0x5AA0C4A7) + v180) + 214752380) & 0x43BBA3C0) - 398180322;
  v198 = (v194 ^ 0xA55F3B58)
       + 275292164
       + v193
       + 428449458
       - ((2 * ((v194 ^ 0xA55F3B58) + 275292164 + v193)) & 0x33133D64);
  v199 = v195 ^ (v190 + 377059134);
  v200 = v193 - ((2 * v193 + 2105009602) & 0xADF1B7B4) - 1783312709;
  v163[821] = (v179 + 44) ^ 0xB0;
  v163[697] = (v193 - ((2 * v193 - 62) & 0xB4) - 69) ^ 0x3C;
  v201 = v196 ^ (v189 + 1470844795);
  v202 = v198 ^ (v192 + 1470844795);
  v163[394] = v202 ^ 0x54;
  v163[877] = v201 ^ 0x33;
  v203 = v200 ^ v197;
  v204 = v201 ^ v199;
  v163[91] = v200 ^ v197 ^ 0xDC;
  v163[753] = v198 ^ 0x54;
  v205 = v202 ^ v200 ^ v197;
  v163[574] = v199 ^ 0x81;
  v206 = v197 ^ 0xB8544F52 ^ v202;
  v207 = v195 ^ 0xD7B62BB2 ^ v201;
  v208 = ((2 * ((v201 ^ v199 ^ 0xD7B62BB2) + (v196 ^ 0x6D9EE783))) & 0xB99FFFCE)
       + (((v201 ^ v199 ^ 0xD7B62BB2) + (v196 ^ 0x6D9EE783)) ^ 0xDCCFFFE7);
  v209 = ((2 * ((v205 ^ 0xEEAC9488) + (v198 ^ 0x19899EB2))) & 0xDFF15DD8)
       + (((v205 ^ 0xEEAC9488) + (v198 ^ 0x19899EB2)) ^ 0x6FF8AEEC);
  v210 = v207 - 590348313 - v208 - 1169151167 - ((2 * (v207 - 590348313 - v208)) & 0x74A05682);
  v163[271] = v196 ^ 0x33;
  v211 = (v203 ^ v198 ^ (v209 - 1878568684) ^ 0xEEAC9488)
       - 644853619
       - 2 * ((v203 ^ v198 ^ (v209 - 1878568684) ^ 0xEEAC9488) & 0x5990508F ^ (v203 ^ v198 ^ (v209 - 1878568684)) & 2);
  v163[215] = (v190 + 62) ^ 0xB0;
  v212 = v206 + 1878568684 - v209 + 545774767 - ((2 * (v206 + 1878568684 - v209)) & 0x410FB95E);
  LOBYTE(v206) = v210 ^ v204;
  v213 = (v196 ^ 0xD7B62BB2 ^ v199 ^ (v208 + 590348313))
       + 1890116633
       - ((2 * (v196 ^ 0xD7B62BB2 ^ v199 ^ (v208 + 590348313))) & 0xE151C832);
  v214 = v212 ^ v205;
  v163[933] = v210 ^ 0xF1;
  v163[809] = v211 ^ 0x6B;
  v163[147] = v212 ^ v205 ^ 0xC1;
  v215 = v210 ^ v204 ^ 0x6DE600F3;
  v210 ^= 0xBA502B41;
  v216 = ((2 * (v215 + v210)) & 0xD6FDFFFE) + ((v215 + v210) ^ 0xEB7EFFFF);
  LOBYTE(v198) = ((2 * (v210 - v208 - 25)) & 0x46) + ((v210 - v208 - 25) ^ 0xA3);
  v163[450] = v212 ^ 0x49;
  v163[630] = v206 ^ 0x43;
  v163[327] = v213 ^ 0xA9;
  v212 ^= 0x2087DCAFu;
  v217 = ((2 * ((v214 ^ 0xCE2B4827) + v212)) & 0x7F7EFBE2) + (((v214 ^ 0xCE2B4827) + v212) ^ 0x3FBF7DF1);
  v163[506] = v209 - 2 * ((v209 + 106) & 0xE7 ^ v209 & 1) - 48;
  v218 = ((v213 ^ 0x70A8E419) - v216 - 343998465) ^ (v208 + 733780756);
  v219 = v218 + 967987478 - ((2 * v218) & 0x7364A22C);
  v220 = (v211 ^ 0xD990508D) + 1069514225 - v217;
  v221 = ((2 * (v212 - v209 + 1380972822)) & 0xFFBFD93E) + ((v212 - v209 + 1380972822) ^ 0xFFDFEC9F);
  v222 = v209 - ((2 * v209 + 824694814) & 0x87936886) + 1549639762;
  v163[24] = (v208 - 17) ^ 0xB0;
  v223 = v220 ^ v222;
  v163[562] = v223 ^ 0xA5;
  v224 = ((2 * ((v222 ^ 0x3C364BBC) - 1069514224 + v217)) & 0xBFEFADDE)
       + (((v222 ^ 0x3C364BBC) - 1069514224 + v217) ^ 0x5FF7D6EF);
  v163[259] = v209 - 2 * ((v209 + 94) & 0xE7 ^ v209 & 1) + 68;
  v163[203] = v221 - ((2 * v221 - 36) & 0xCC) - 44;
  v223 ^= 0xC3C9B443;
  v225 = ((2 * (v223 - 520242382)) & 0xE5AFF1FE) + ((v223 - 520242382) ^ 0xF2D7F8FF);
  v163[865] = v224 - ((2 * v224 + 34) & 0xCC) - 9;
  v163[686] = (v198 + 20) ^ 0xB0;
  v226 = v219 ^ 0x39B25116;
  v227 = ((2 * ((v219 ^ 0x39B25116) - 520242382)) & 0xB4FB5BFE) + (((v219 ^ 0x39B25116) - 520242382) ^ 0xDA7DADFF);
  v228 = v216 - v208;
  v163[80] = v219 ^ 0xA6;
  LOBYTE(v198) = v228 - v198;
  v163[742] = (v208 + 99) ^ 0xB0;
  v163[383] = (v228 - 19) ^ 0xB0;
  v229 = v209 - v224 + 1680632210 + v225;
  v163[12] = v229 - ((2 * v229 + 120) & 0xCC) - 94;
  v163[439] = (v228 - 54) ^ 0xB0;
  v163[315] = 2 * (v223 + 50) + ~(v223 + 50) - ((2 * (2 * (v223 + 50) + ~(v223 + 50)) + 2) & 0xCC) - 25;
  LOBYTE(v222) = v198 - ((2 * v198 + 14) & 0x3E) + 38;
  v230 = v224 - v221;
  v163[136] = (((2 * v222) & 0x52 ^ 0x12) + (v222 ^ 0xB6)) ^ 0xB0;
  v163[798] = (2 * ((v219 ^ 0x16) + 50) + ~((v219 ^ 0x16) + 50) + 1) ^ 0xB0;
  v231 = v227 + v208 - v228;
  v163[618] = v230 - 2 * ((v230 + 122) & 0xE7 ^ v230 & 1) - 32;
  LOBYTE(v222) = v227 + v198;
  v232 = v229 + v225 - ((2 * (v229 + v225) - 606249606) & 0xDDD9CFCE) - 589588828;
  v163[921] = v224 - ((2 * v224 - 36) & 0xCC) - 44;
  v163[495] = (v231 + 119) ^ 0xB0;
  v233 = v225 + v230;
  LOBYTE(v229) = v198 + v228 - ((2 * (v198 + v228) - 12) & 0xAE) - 47;
  v234 = v230 + v224 - 2 * ((v230 + v224 + 10936808) & 0xEE579B ^ (v230 + v224) & 3) - 1164625536;
  LOBYTE(v225) = (v230 + v224 - 2 * ((v230 + v224 - 24) & 0x9B ^ (v230 + v224) & 3) + 0x80) ^ 0x7E;
  v163[674] = v225;
  v235 = v223 - 756629542;
  v236 = v231 + v227 - 2 * ((v231 + v227 + 1295786360) & 0x47615C55 ^ (v231 + v227) & 4) + 345865673;
  v237 = v236 ^ (v226 - 756629542);
  v163[371] = (v233 - ((2 * v233 - 24) & 0x76) + 47) ^ 0xDD;
  v238 = v232 ^ v235;
  LOBYTE(v236) = (v236 ^ 0x51) - ((2 * (v236 ^ 0x51) - 58) & 0x8A) + 40;
  v239 = (v232 ^ 0xEEECE7E7) - ((2 * (v232 ^ 0xEEECE7E7) + 2009165766) & 0x6D5BA2AC) - 225539783;
  LOBYTE(v224) = v236 ^ (v227 + v198 - 86);
  v240 = v239 ^ (v233 - ((2 * v233 + 664309736) & 0xC8008C76) + 2009894447);
  v163[730] = ((v232 ^ 0xE7) - ((2 * (v232 ^ 0xE7) - 58) & 0xAC) + 57) ^ 0xB0;
  LOBYTE(v198) = v238 ^ 0xE7;
  v163[854] = (v222 - 86) ^ 0xB0;
  v241 = v237 ^ 0x47615C51;
  v242 = ((v238 ^ 0xEEECE7E7)
        + (v240 ^ 0x2D526892)
        + 1
        - ((2 * ((v238 ^ 0xEEECE7E7) + (v240 ^ 0x2D526892) + 1)) & 0x6D5BA2AC)
        - 1230122666) ^ v239;
  LOBYTE(v233) = ((v237 ^ 0x51) + (v224 ^ 0xBA) + 1) ^ v236;
  v163[248] = v236 ^ 0xF5;
  v163[192] = v229 ^ 0xE7;
  LOBYTE(v238) = v238 ^ 1;
  v163[68] = v238;
  LOBYTE(v237) = v237 ^ 0xE1;
  v163[551] = v237;
  v163[910] = v229 ^ 0xE7;
  v163[427] = v225;
  v243 = (v241 - ((2 * v241) & 0x15Au) + 429) & 0x1E3;
  v163[124] = (v240 ^ 0x6D) + (~(2 * (v240 ^ 0x6D) + 38) | 0x33) - 6;
  v163[607] = ((v236 ^ (v222 - 86) ^ 0x45) + 19) ^ 0xB0;
  v244 = (v240 ^ 0xD2AD976D) - 847298151;
  v163[304] = v237;
  v245 = (v243 ^ 0x42) + (v243 ^ 0x1A1);
  v163[786] = v238;
  LOBYTE(v241) = ((2 * (v241 - 121)) & 0xFC) + ((v241 - 121) ^ 0xFE);
  LOBYTE(v236) = (a13 & (2 * (v198 - 121))) + ((v198 - 121) ^ 0x2E);
  LOBYTE(v243) = v229 ^ 0xCF;
  v163[1] = v233 ^ 0xDC;
  LOBYTE(v237) = (v233 ^ 0x6C) + (v229 ^ 0xD6);
  LOBYTE(v238) = (v224 ^ 0x45) - ((2 * (v224 ^ 0x45) + 50) & 0x8A) - 34;
  v163[v245] = v242 ^ 0xCF;
  LOBYTE(v245) = v229 ^ 0x7F;
  v246 = ((2 * ((v234 ^ 0xA1DE9C19) + (v242 ^ 0xAD180829) + 1)) & 0xEFF9FE36)
       + (((v234 ^ 0xA1DE9C19) + (v242 ^ 0xAD180829) + 1) ^ a12);
  v163[663] = v245;
  v163[236] = v246 - ((2 * v246 - 78) & 0xCC) - 65;
  LOBYTE(v238) = ((2 * v238) & 0xAE ^ 0x82) + (v238 ^ 0xBE);
  v163[539] = v236 - v246 - ((2 * (v236 - v246) - 14) & 0xCC) - 33;
  v163[180] = v234 ^ 0xE6;
  v163[360] = (v238 + 41) ^ 0xB0;
  LOBYTE(v224) = v238 + v241 - ((2 * (v238 + v241) + 86) & 0xF4) - 91;
  v247 = ((2 * v244) & 0xDA5FEFBE ^ 0x9A4B6618) + (v244 ^ 0xA28A44F3);
  v163[842] = v247 - ((2 * v247 + 66) & 0xCC) + 7;
  LOBYTE(v242) = 99 - v238 - ((-82 - 2 * v238) & 0x18);
  LOBYTE(v245) = ((v237 - 29) ^ 0x8C ^ v242) - ((2 * ((v237 - 29) ^ 0x8C ^ v242)) & 0x4C) + 38;
  v163[719] = (v237 - 11) ^ 0xB0;
  LOBYTE(v238) = ((2 * (v243 + 119 + (v245 ^ 0xD9))) & 0x1E) + ((v243 + 119 + (v245 ^ 0xD9)) ^ 0x8F);
  v163[57] = (v241 - v237 + 13) ^ 0xB0;
  v248 = 334366246 - v247 - ((1516236734 - 2 * v247) & 0x4D7C1C8E);
  v163[292] = v248 ^ 0xA1;
  v163[416] = (v238 + 113) ^ 0xB0;
  v249 = (v248 ^ 0xA6BE0E47 ^ (v246 - 2886969))
       - 2078373686
       - ((2 * (v248 ^ 0xA6BE0E47 ^ (v246 - 2886969))) & 0x83D1194);
  v163[113] = v224 ^ 0x7D;
  LOBYTE(v243) = v236 - 13 + v247;
  v163[595] = v243 ^ 0x51;
  v163[775] = v242 ^ 0x3C;
  LOBYTE(v236) = ((2 * ((v242 ^ 0x73) + 114 + v238)) & 0x5E) + (((v242 ^ 0x73) + 114 + v238) ^ 0x2F);
  LOWORD(v234) = ((2 * ((v234 ^ 0x8800) + 27255 + (v249 ^ 0x7735))) & 0x9FBE)
               + (((v234 ^ 0x8800) + 27255 + (v249 ^ 0x7735)) ^ 0x4FDF);
  v163[898] = v234 - ((2 * v234 + 66) & 0xCC) + 7;
  v250 = ((v249 ^ 0x841E88CA) - ((2 * (v249 ^ 0x841E88CA)) & 0x92) + 73) & 0x3BALL;
  LOWORD(v247) = v234 + v247;
  LOBYTE(v242) = (v242 ^ 0x48) + v237;
  LODWORD(STACK[0x510]) = v152 + 1;
  LODWORD(STACK[0x514]) = v153 + 1;
  LODWORD(STACK[0x518]) = v159 + 1;
  LOBYTE(v159) = v224 ^ 0xCD;
  LOBYTE(v224) = v245 ^ 0x96;
  LOBYTE(v245) = v236 + v237 - ((2 * (v236 + v237) + 82) & 0xE6) - 100;
  v251 = v242 - v236 - ((2 * (v242 - v236) + 58) & 0xB2) + 118;
  v163[472] = v224;
  LOBYTE(v234) = v245 ^ v251;
  v163[v250 ^ 0x3B2 | v250 ^ 8] = v249 ^ 0x2C;
  LOWORD(v250) = v246 + (v248 ^ 0x7A83);
  LOWORD(v237) = v247 + v246 - 2 * ((v247 + v246 + 29822) & 0x89F ^ (v247 + v246) & 1) + 32028;
  LOBYTE(v159) = v159 - v242 - v236 + 76 - ((2 * (v159 - v242 - v236 + 76)) & 0x52) + 41;
  v163[707] = v237 ^ 0x78;
  v163[45] = v250 - ((2 * v250 - 114) & 0xCC) - 83;
  LOBYTE(v224) = (v243 ^ 0xB7) - v250 - v247 - 9 - ((2 * ((v243 ^ 0xB7) - v250 - v247 - 9)) & 0x94) + 74;
  v163[831] = v159 ^ 0x99;
  v163[169] = (v236 + 70) ^ 0xB0;
  v163[651] = v247 + (~(2 * v247 + 110) | 0x33) - 98;
  LOWORD(v243) = v250 - v247 - ((2 * (v250 - v247) - 7648) & 0x871C) + 13470;
  v163[348] = v224 ^ 0xAC;
  LOBYTE(v248) = v245 ^ v251 ^ v159;
  LOWORD(v237) = v237 ^ v243;
  LOBYTE(v250) = v237 ^ v224;
  v163[225] = v245 ^ 0xC3;
  v163[528] = (v242 - 29) ^ 0xB0;
  LOBYTE(v159) = v247 - 124 + (v237 ^ 0xB) - ((2 * (v247 - 124 + (v237 ^ 0xB))) & 0xB6) + 91;
  LOWORD(v224) = (v247 + 14468 + (v237 ^ 0x480B) - ((2 * (v247 + 14468 + (v237 ^ 0x480B))) & 0x3EB6) + 8027) & 0x3D5B;
  LOBYTE(v246) = ((2 * (v236 - 54 + (v234 ^ 0xB1))) & 0xFC) + ((v236 - 54 + (v234 ^ 0xB1)) ^ 0xFE);
  LOBYTE(v245) = (v243 ^ 0x8E) - ((2 * (v243 ^ 0x8E) + 102) & 0x58) - 33;
  LOBYTE(v236) = (v251 ^ 0xD9) - ((2 * (v251 ^ 0xD9) + 102) & 0x1E) + 66;
  v163[584] = v248 ^ 0x33;
  v163[887] = (v246 + 75) ^ 0xB0;
  v163[404] = v159 ^ 0xBD;
  v252 = v236 ^ v234;
  v163[(unsigned __int16)(25919 * ((v224 ^ 0x1D5B) + (v224 ^ 0x2000)))] = v250 ^ 0xBC;
  v163[763] = v245 ^ 0x4A;
  v163[460] = v237 ^ 0xED;
  LOBYTE(v247) = v236 ^ 0xBF;
  LOBYTE(v246) = v248 ^ 0x83 ^ (v246 + 75);
  LOBYTE(v236) = ((2 * (v246 + (v236 ^ 0xF))) & 0xEE) + ((v246 + (v236 ^ 0xF)) ^ 0xF7);
  LOBYTE(v224) = ((2 * (v245 ^ v237)) & 0x2E ^ 0xE) + (v245 ^ v237 ^ 0x30);
  LOBYTE(v237) = ((2 * ((v248 ^ 0x83) + 9 + v236)) & 0xFA) + (((v248 ^ 0x83) + 9 + v236) ^ 0xFD);
  v163[943] = v234 ^ 1;
  v163[281] = v247;
  LOBYTE(v246) = ((2 * (v246 + 3 + v237)) & 0x5A) + ((v246 + 3 + v237) ^ 0xAD);
  LOBYTE(v159) = v250 ^ 1 ^ v159;
  LOBYTE(v234) = ((2 * (v159 + (v245 ^ 0xAC))) & 0xD6) + ((v159 + (v245 ^ 0xAC)) ^ 0x6B);
  LOBYTE(v247) = v237 + (v252 ^ 0x41) - ((2 * (v237 + (v252 ^ 0x41)) + 8) & 0xEA) + 121;
  LOBYTE(v250) = ((2 * ((v250 ^ 0x5A) - 107 + v234)) & 0xAA) + (((v250 ^ 0x5A) - 107 + v234) ^ 0xD5);
  LOBYTE(v237) = ((2 * (v159 + 43 + v250)) & 0x7E) + ((v159 + 43 + v250) ^ 0xBF);
  LOBYTE(v234) = v237 + v234 - ((2 * (v237 + v234) - 84) & 0xD4) - 64;
  v163[157] = v237 - ((2 * v237 - 126) & 0xCC) + 39;
  LOBYTE(v159) = v250 - v224 - ((2 * (v250 - v224) - 124) & 0xFE) - 63;
  LOBYTE(v250) = v246 + v236 - ((2 * (v246 + v236) - 72) & 0xFC) - 38;
  LOBYTE(v236) = v224 - v237 - ((2 * (v224 - v237) + 80) & 0xA) + 45;
  LOBYTE(v245) = (v252 ^ 0xBE) - 83 - v246 - ((2 * ((v252 ^ 0xBE) - 83 - v246)) & 0x10) + 8;
  v163[213] = v236 ^ 0xE3;
  v253 = v245 ^ v247;
  v163[819] = v159 ^ 0x19;
  LOBYTE(v243) = v236 ^ v159;
  v163[640] = (v246 + 83) ^ 0xB0;
  v163[337] = v247 ^ 0xC5;
  v163[696] = v245 ^ 0xB8;
  v163[516] = v234 ^ 0xC;
  LOBYTE(v224) = ((2 * v253) ^ 5) + v246 - 2 + (~(2 * (((2 * v253) ^ 5) + v246) - 88) | 0x8F) - 113;
  v163[34] = v250 ^ 0xCE;
  LOBYTE(v242) = ((2 * ((v253 ^ 0x7D) - 42)) & 0xDE) + (((v253 ^ 0x7D) - 42) ^ 0xEF);
  LOBYTE(v237) = ((2 * v243) ^ 0xB) + v237 - ((2 * (((2 * v243) ^ 0xB) + v237) - 124) & 0x28) + 86;
  v163[875] = v237 ^ 0xF2;
  v163[393] = (((2 * (v245 ^ v247)) ^ 5) + v246 - 2 + (~(2 * (((2 * (v245 ^ v247)) ^ 5) + v246) - 88) | 0x8F) - 113) ^ 0x88;
  LOBYTE(v243) = ((2 * ((v243 ^ a11) - 42)) & 0xFA) + (((v243 ^ a11) - 42) ^ 0xFD);
  v163[572] = v243 - ((2 * v243 + 6) & 0xCC) - 23;
  LOBYTE(v248) = (v245 ^ 0x41 ^ v250) - 17 - v242 - ((2 * ((v245 ^ 0x41 ^ v250) - 17 - v242)) & 0x34) - 102;
  v254 = (v236 ^ v234 ^ 0xD8) - 3 - v243 - ((2 * ((v236 ^ v234 ^ 0xD8) - 3 - v243)) & 0x62) - 79;
  v163[269] = v254 ^ 0x57;
  v163[90] = ((v245 ^ v247 ^ 0x7D) - 42) ^ 0xB0;
  v163[931] = v234 ^ 0xC;
  v163[752] = v248 ^ 0x2A;
  v163[449] = v250 ^ 0xCE;
  v163[146] = ((v224 ^ 0x38) - ((2 * (v224 ^ 0x38) - 126) & 2) - 62) ^ 0xBA;
  v163[22] = v254 ^ v237 ^ 0x7F;
  v163[808] = ((v248 ^ 0x65)
             + v242
             + (v248 ^ v224 ^ 0x61)
             - ((2 * ((v248 ^ 0x65) + v242 + (v248 ^ v224 ^ 0x61)) + 38) & 0x3C)
             + 49) ^ 0xAE;
  v163[505] = v248 ^ v224 ^ 0x2E;
  v163[628] = ((v237 ^ 0x14) - 63) ^ 0xED;
  v163[325] = ((v254 ^ 0x4E)
             + v243
             + (v254 ^ v237 ^ 0x66)
             - ((2 * ((v254 ^ 0x4E) + v243 + (v254 ^ v237 ^ 0x66)) + 10) & 0xB4)
             - 33) ^ 0x3C;
  v163[684] = ((v234 ^ 0xEA) + 126) ^ 0xB6;
  v163[202] = ((v250 ^ 0x7E) - ((2 * (v250 ^ 0x7E) - 4) & 0xE2) - 17) ^ 0x91;
  LODWORD(STACK[0x4F4]) = v166 + 333985347 + v149;
  LODWORD(STACK[0x4F0]) = LODWORD(STACK[0x6DC]) + 1886220201;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * (LODWORD(STACK[0x604]) ^ (62 * v155))) - 12))();
}

uint64_t sub_24780E7FC(uint64_t a1, int a2, int a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, int a9, char a10, int a11, int a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,int a48,int a49)
{
  int v49;
  int v50;
  int v51;
  unsigned int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  int v57;
  char v58;
  int v59;
  unsigned int v60;
  char v61;
  char v62;
  int v63;
  unsigned int v64;
  char v65;
  char v66;
  int v67;
  unsigned int v68;
  int v69;
  int v70;
  int v71;
  int v72;
  unsigned int v73;
  char v74;
  char v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  char v86;
  unsigned int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  int v102;
  unsigned int v103;
  int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  unsigned int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  char v120;
  unsigned int v121;
  unsigned int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  _BYTE *v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  int v130;
  char v131;
  unsigned int v132;
  char v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  int v137;
  int v138;
  uint64_t v139;
  char v140;
  char v141;
  char v142;
  char v143;
  char v144;
  char v145;
  char v146;
  char v147;
  char v148;
  char v149;
  char v150;
  char v151;
  char v152;
  char v153;
  char v154;
  char v155;
  char v156;
  unsigned int v157;
  unsigned int v158;
  _BOOL4 v159;
  int v161;
  char v162;
  char v163;
  char v164;
  char v165;
  int v166;
  int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  char v171;
  char v172;
  char v173;
  char v174;
  unsigned int v175;
  int v176;
  char v177;

  v167 = (LODWORD(STACK[0x604]) + 37) | 0x483;
  v168 = ((v167 ^ 0xFABDCBDA) & (2 * ((a3 ^ 0x7513969E) + (v166 ^ 0x2C5F9AF5) + 1)))
       + (((a3 ^ 0x7513969E) + (v166 ^ 0x2C5F9AF5) + 1) ^ 0x7D5EE3AC);
  v169 = ((2 * (a2 ^ v166)) & 0xEBFFFEF6 ^ 0x84D0452) + (a2 ^ v166 ^ 0xF9D97DD2);
  v170 = ((2 * ((a2 ^ 0x5F86E7A3) - 1979711355 + v169)) & 0xEE6E7FDE)
       + (((a2 ^ 0x5F86E7A3) - 1979711355 + v169) ^ 0xF7373FEF);
  v171 = ((2 * (v165 ^ v163)) ^ 0xD8) + (v165 ^ v163 ^ 0x13);
  v172 = ((2 * ((v163 ^ 0xF4) + (v162 ^ 0x99) + 1)) & 0x4E) + (((v163 ^ 0xF4) + (v162 ^ 0x99) + 1) ^ 0x27);
  v173 = (v165 ^ 0x67) - 62 + v171 - 82 - ((2 * ((v165 ^ 0x67) - 62 + v171 - 65)) & 0xDE);
  v174 = ((v172 - 66 + (v173 ^ 0x10)) ^ 0xFB) - 42 + ((2 * (v172 - 66 + (v173 ^ 0x10))) & 0xF6);
  v175 = (v161 ^ 0x40CC6B21) + v169 - v168;
  v176 = v168 - v170 - 1008473507;
  v177 = (v164 ^ 0x50) - v172 - 80 + v171;
  LODWORD(STACK[0x6C8]) = a49;
  v49 = 3 * (v167 ^ 0x8C5);
  v50 = v170 + 1369653537 + v169 - 465224088;
  v51 = v168 + 361180030 - (v175 + 705388306);
  LODWORD(STACK[0x6E8]) = v167 - 398;
  LODWORD(STACK[0x6F0]) = v49;
  v52 = v175 + 705388306 - ((2 * (v175 + 705388306) + ((v167 - 398) ^ 0xD2A6D4CF ^ v49)) & 0xA60A94DA) - 1135037471;
  v53 = v50 ^ 0xFF602B1C;
  LOBYTE(v50) = v174 - v177 + (v173 ^ 0xEF) - 127 + 3 - ((2 * (v174 - v177 + (v173 ^ 0xEF) - 127)) & 6);
  v54 = v176 + 2 * (v175 + 705388306) - 566587657 + (v52 ^ 0x2CFAB592);
  v55 = ((2 * v54) & 0xFD7BDBBA) + (v54 ^ 0x7EBDEDDD);
  v56 = v53 - 2126376413 + v55 - ((2 * (v53 - 2126376413 + v55)) & 0xFEDC8960) + 2137932976;
  v57 = (v52 ^ 0x5394F122 ^ v56) + v51 - ((2 * ((v52 ^ 0x5394F122 ^ v56) + v51) + 1146008012) & 0x6183A6CA) - 756470709;
  v58 = v177 - ((2 * v177 - 102) & 0xDC) - 69;
  v59 = v57 ^ v52;
  v60 = ((2 * (v55 + 699244595 + (v59 ^ 0x63C49908))) & 0xF9F78F96)
      + ((v55 + 699244595 + (v59 ^ 0x63C49908)) ^ 0xFCFBC7CB);
  v61 = v174 + 2 * v177 + (v58 ^ 0x91) + 14;
  v62 = ((2 * v61) & 0xCE) + (v61 ^ 0x67);
  v63 = ((v60 + 50608181) ^ (v51 + 573004005)) + 485266935 - ((2 * ((v60 + 50608181) ^ (v51 + 573004005))) & 0x39D92BEE);
  LOBYTE(v175) = v62
               + ((v171 + 116 + (v173 ^ 0xEF)) ^ 0x1C)
               - 103
               - ((2 * (v62 + ((v171 + 116 + (v173 ^ 0xEF)) ^ 0x1C) - 103)) & 0xA8)
               - 44;
  v64 = ((2 * ((v63 ^ 0x1CEC95F7) + (v56 ^ 0xCFAF97D5 ^ v57))) & 0xFF2FD784)
      + (((v63 ^ 0x1CEC95F7) + (v56 ^ 0xCFAF97D5 ^ v57)) ^ 0xFF97EBC2);
  LOBYTE(v56) = (v50 ^ 3) + (v58 ^ 0x45 ^ v175) + 1;
  LOBYTE(v56) = v56 - ((2 * v56) & 0xB4) - 38;
  LOBYTE(v175) = v175 ^ 0xE ^ v56;
  LOBYTE(v56) = v56 ^ v58;
  v65 = ((2 * (v62 - 87 + (v56 ^ 0xB4))) & 0xB4) + ((v62 - 87 + (v56 ^ 0xB4)) ^ 0xDA);
  LOBYTE(v50) = ((v65 + 38) ^ v50 ^ 3) + 112 - 2 * (((v65 + 38) ^ v50 ^ 3) & 0x74 ^ ((v65 + 38) ^ v50) & 4);
  v66 = (v50 ^ 0x70) + v175 - ((2 * ((v50 ^ 0x70) + v175) + 102) & 0x84) - 11;
  v67 = (v64 - 28383119) ^ (v60 - 403123468);
  v68 = v59 ^ 0x24948669 ^ (v60 - ((2 * v60 - 852664432) & 0xC7893210) - 899987248);
  LOBYTE(v175) = v66 ^ (v65 - 27);
  v69 = (v63 ^ 0x16B08C75) + 6819860 + v64 + v67 + 1066;
  v70 = ((2 * v69) & 0x35FFF26C) + (v69 ^ 0x1AFFF936);
  v60 += 222059699;
  v71 = (v70 + 1415410257) ^ v60;
  LOBYTE(v50) = (v50 ^ 0xF2) + (v66 ^ 0xC2) + (v175 ^ 0xC2) + 84;
  LOBYTE(v175) = v50 + (v175 ^ 0xE6);
  LOBYTE(v56) = v50 + (v56 ^ 0x69 ^ (v65 - ((2 * v65 + 114) & 0x68) + 109));
  v60 ^= 0x770390Eu;
  v72 = ((2 * (v60 + 623525687)) & 0x3F72F7FE) + ((v60 + 623525687) ^ 0x1FB97BFF);
  v73 = (v71 ^ 0x4A5ADA87 ^ (v70 + 1415410257 + v68 - ((2 * (v70 + 1415410257 + v68)) & 0x9A55C712) + 1294656393)) + v72;
  v74 = (v65 - 92) ^ 0xE;
  LOBYTE(v50) = (v74 ^ v50) - 91 - ((2 * (v74 ^ v50)) & 0x4A);
  v75 = 2 * (v74 + 55) + ~(v74 + 55);
  v76 = (v67 ^ 0x45BE4024) + v70 - v73 - 630714040;
  LOBYTE(v67) = ((v56 - 91 - ((2 * v56) & 0x4A)) ^ v50) + v75;
  LOBYTE(v175) = v175 + v67 - 51 - 2 * (v67 - 51);
  v77 = ((2 * (v60 + 532249599 - v73)) & 0x9FF38E4A) + ((v60 + 532249599 - v73) ^ 0xCFF9C725);
  v78 = v72 + ((v72 - 532249599) ^ 0x770390E ^ v71) - v77 - 2053364073;
  v79 = v78 + 1930018991 - ((2 * v78) & 0xE613815E);
  LOBYTE(v72) = v74 - v67;
  v80 = v79 ^ (v76 + 1930018991 - ((2 * v76) & 0xE613815E));
  LOBYTE(v78) = v75 + ((v75 + 1) ^ 0xA5 ^ v50) - (v74 - v67) + 115;
  LOBYTE(v50) = v78 - 113 - ((2 * v78) & 0x1E);
  LOBYTE(v78) = (v175 - ((2 * v175 - 120) & 0x1E) + 83) ^ v50;
  LOBYTE(v175) = ((2 * v78) ^ 0xA6) + (v78 ^ 0xAC);
  v81 = v77 - ((2 * v77 + 667451706) & 0x2103D20C) + 73804195;
  v82 = (v79 ^ 0x7309C0AF) - 17516090 + (~(2 * (v79 ^ 0x7309C0AF) + 1039932470) | 0xC012A8AB);
  v83 = (v73 - 1239920983 + (v80 ^ 0x814EF8AC)) ^ v81;
  v84 = -1521113927 - v77 + (v80 ^ 0x7EB10753) + (v83 ^ 0xEF7E16F9) - 546;
  v85 = ((2 * v84) & 0xBEDFDAF4) + (v84 ^ 0x5F6FED7A);
  v86 = v74 - v67 + 37 + (~(2 * (v74 - v67) - 126) | 0x39);
  LOBYTE(v67) = (v67 - v175 - 89) ^ v86;
  LOBYTE(v50) = (v50 ^ 0x8F) + 27;
  LOBYTE(v175) = v175 - v72 + 36 + (v67 ^ 0x9C);
  v87 = (v83 ^ 0x8F7742AC ^ v82)
      - 1601170810
      + v85
      + 1774937592
      - ((2 * ((v83 ^ 0x8F7742AC ^ v82) - 1601170810 + v85)) & 0xD396CBF0);
  LOBYTE(v72) = 2 * ((v86 ^ 0x63) + ~(_BYTE)v50 + 1) + ~((v86 ^ 0x63) + ~(_BYTE)v50 + 1);
  v88 = ((2 * (v87 ^ v83)) & 0x72FFED7E ^ 0x7295097C) + (v87 ^ v83 ^ 0xC0357A41);
  LOBYTE(v50) = (v50 ^ 0x63 ^ v67) + 80 + v175 - 121 - ((2 * ((v50 ^ 0x63 ^ v67) + 80 + v175)) & 0xE);
  v89 = (v81 ^ 0x1081E906) + (v82 ^ 0x60095455) + 1182796098 + v88;
  v90 = (a11 & (2 * v89)) + (v89 ^ a12);
  LOBYTE(v82) = ((2 * (v50 ^ v67)) & 0x7E ^ 0x48) + (v50 ^ v67 ^ 0x5B);
  v91 = v85 - v90 + v88 - ((2 * (v85 - v90 + v88) - 1945467958) & 0xB28D89B2) - 1622407490;
  LOBYTE(v67) = v82 + v72;
  LOBYTE(v175) = v175 - v72 - ((2 * (v175 - v72) + 82) & 0x50) - 47;
  v92 = (v87 ^ 0x69CB65F8) + v88 - v90 + 478153977 + (v91 ^ 0x5946C4D9);
  v93 = v92 - 920013694 - ((2 * v92) & 0x92536904);
  v94 = v93 ^ (v88 + 855945942);
  v95 = v91 ^ 0x906F705B ^ v94;
  v96 = (((v94 ^ 0xC929B482) + 1611192199) ^ 0xF7CFF7D7)
      + 2046671723
      + ((2 * ((v94 ^ 0xC929B482) + 1611192199)) & 0xEF9FEFAE);
  LOBYTE(v50) = (v50 ^ 0x87) + (v175 ^ 0x28) - v72 - 13;
  LOBYTE(v50) = v50 + 127 - 2 * v50;
  v97 = v95 - 7783409 + v96;
  v98 = v90 - 164979866 + v96;
  LOBYTE(v82) = v50 ^ (v82 - 42);
  LOBYTE(v175) = v175 ^ 0x57 ^ v82;
  LOBYTE(v82) = (((v82 ^ 0x7F) - 121) ^ 0xDF) - 67 + ((2 * ((v82 ^ 0x7F) - 121)) & 0xBE);
  LOBYTE(v175) = v175 + v82;
  LOBYTE(v82) = v67 - 52 + v82;
  LOBYTE(v50) = (v50 ^ 0x7F) - v82;
  v99 = (v93 ^ 0xC929B482) - v97 - v98;
  v100 = v99 + v97;
  v101 = v100 - 512648810;
  LOBYTE(v82) = v82 - (v50 + 124) + 19 + (~(2 * (v82 - (v50 + 124)) + 122) | 0x55);
  LOBYTE(v72) = v50 + 80;
  v102 = v98 - v100 + 797605764 - ((2 * (v98 - v100 + 797605764) + 84978786) & 0x7AC6CB7A) - 1328146;
  LOBYTE(v175) = v50 + 124 - v175 + 95;
  LOBYTE(v50) = v82 ^ 0x55;
  v103 = (v102 ^ 0xC29C9A42) - v90 + ((v99 + 1039915478) ^ 0x3D6365BD ^ v102) + 1234060865;
  v104 = v103 - ((2 * v103) & 0x288AD566) - 1807390029;
  v105 = ((2 * ((v101 ^ 0xDAE5085A) + (v104 ^ 0x6BBA954C) + 1)) & 0xFB7FB772)
       + (((v101 ^ 0xDAE5085A) + (v104 ^ 0x6BBA954C) + 1) ^ 0x7DBFDBB9);
  v106 = ((2 * ((v104 ^ 0xBF52F95D) - v90 - 875664760 + v105)) & 0xFF3ECFBE)
       + (((v104 ^ 0xBF52F95D) - v90 - 875664760 + v105) ^ 0x7F9F67DF);
  LOBYTE(v175) = (v82 ^ 0xAA) - v67 + (v82 ^ 0x55 ^ v175) + 59;
  LOBYTE(v175) = v175 - ((2 * v175) & 0xD4) + 106;
  LOBYTE(v82) = ((2 * ((v72 ^ 0x5A) + (v175 ^ 0x95) + 1)) & 0x6E) + (((v72 ^ 0x5A) + (v175 ^ 0x95) + 1) ^ 0xB7);
  v107 = (v104 ^ 0x40AD06A2) + (v102 ^ 0x3D6365BD);
  v108 = ((v106 - 2141153247) ^ v102 ^ 0x3D6365BD)
       + 1978341604
       - 2 * (((v106 - 2141153247) ^ v102 ^ 0x3D6365BD) & 0x75EB18E6 ^ ((v106 - 2141153247) ^ v102) & 2);
  v109 = ((2 * (v108 ^ (v105 + 889778067))) & 0xBFBAFDEA ^ 0xAB9231C8) + (v108 ^ (v105 + 889778067) ^ 0x2A366611);
  LOBYTE(v67) = 2 * ((v175 ^ 0x84) - v67 - 124 + v82) + (((v175 ^ 0x84) - v67 - 124 + v82) ^ 0x7F);
  LOBYTE(v175) = (v175 ^ 0x7B) + v50;
  LOBYTE(v50) = (v50 ^ (v67 - 127)) - 8 - ((2 * (v50 ^ (v67 - 127))) & 0xF0);
  v108 ^= 0x75EB18E4u;
  v110 = ((2 * (v107 + v108)) & 0x9FEFFD48) + ((v107 + v108) ^ 0x4FF7FEA4);
  v111 = v106 - v109 - 532801770;
  LOBYTE(v82) = ((2 * (v50 ^ (v82 - 107))) & 0xBE ^ 0xB0) + (v50 ^ (v82 - 107) ^ 0xA7);
  v112 = v109 + v110;
  v113 = ((2 * (v108 - v106 + 2141153247)) & 0x72F7FEDE) + ((v108 - v106 + 2141153247) ^ 0xB97BFF6F);
  LOBYTE(v106) = v50 ^ 0xF8;
  LOBYTE(v50) = (v175 ^ 0x7E) + ((2 * v175) & 0xFC) - 126 + (v50 ^ 0xF8);
  LOBYTE(v50) = ((2 * v50) & 0x9E) + (v50 ^ 0x4F);
  LOBYTE(v106) = ((2 * (v106 - v67 + 127)) & 0xE4) + ((v106 - v67 + 127) ^ 0x72);
  LOBYTE(v67) = v67 - v82 - 2 * ((v67 - v82 - 32) & 0xDD ^ (v67 - v82) & 8) - 75;
  LOBYTE(v175) = v82 + v50;
  LOBYTE(v82) = v106 + v50;
  v114 = v113 + v110;
  LOBYTE(v72) = v106 - 29 + (v67 ^ 0xA1);
  v115 = v112
       + ((2 * (v111 ^ 0x404BD274)) ^ 0xA2B41B6D)
       - 2
       * ((v112 + ((2 * (v111 ^ 0x404BD274)) ^ 0xA2B41B6D) + 1344963176) & 0x794B705F ^ (v112
                                                                                       + ((2 * (v111 ^ 0x404BD274)) ^ 0xA2B41B6D)) & 4)
       - 915017021;
  v116 = v113 + 1628741350 + (v111 ^ 0x404BD274);
  LOBYTE(v50) = v175 + ((2 * v67) ^ 0x2F) - ((2 * (v175 + ((2 * v67) ^ 0x2F)) - 90) & 0x12) - 36;
  v117 = ((2 * (v114 + 287088706 + (v111 ^ 0xEEEE203D))) & 0xFEFF9FAE)
       + ((v114 + 287088706 + (v111 ^ 0xEEEE203D)) ^ 0x7F7FCFD7);
  v118 = ((2 * ((v116 ^ 0xA760D25F) - 2139082711 + v117 + 1)) & 0xFEDFFEFC)
       + (((v116 ^ 0xA760D25F) - 2139082711 + v117 + 1) ^ 0xFF6FFF7E);
  LOBYTE(v111) = ((2 * (v82 - 108 + (v67 ^ 0xE8))) & 0xD2) + ((v82 - 108 + (v67 ^ 0xE8)) ^ 0xE9);
  LOBYTE(v67) = ((2 * v72) & 0x90) + (v72 ^ 0x68);
  v119 = (v116 ^ 0x589F2DA0) - v114 - ((2 * ((v116 ^ 0x589F2DA0) - v114) - 574177412) & 0xCC3E51B2) + 1426229399;
  LOBYTE(v114) = v111 - v67;
  LOBYTE(v67) = v67 - v82 - 2 * ((v67 - v82 - 92) & 0x4B ^ (v67 - v82) & 2) - 19;
  LOBYTE(v72) = ((2 * (v114 - 33 + (v67 ^ 0x49))) & 0x76) + ((v114 - 33 + (v67 ^ 0x49)) ^ 0x3B);
  LOBYTE(v82) = (v50 ^ 0xC0 ^ v67) - v72;
  v120 = v114 + v82 + 37;
  v121 = ((2 * ((v119 ^ 0x661F28D9) + 9437314 + v118)) & 0xE4FFEEEC)
       + (((v119 ^ 0x661F28D9) + 9437314 + v118) ^ 0x727FF776);
  v122 = ((2 * (v117 - 2139082711 + (v115 ^ 0x794B705B))) & 0xF8FCD7EE)
       + ((v117 - 2139082711 + (v115 ^ 0x794B705B)) ^ 0x7C7E6BF7);
  v123 = (v119 ^ 0x1F545882 ^ v115) - v121;
  v124 = v123 + v118;
  LOBYTE(v115) = ((2 * (v111 + 23 + (v50 ^ 0x89))) & 0x30) + ((v111 + 23 + (v50 ^ 0x89)) ^ 0x98);
  v125 = v123 + v118 - 1430762199;
  v126 = (_BYTE *)STACK[0x708];
  v126[956] = (v123 + 118) ^ 0xB0;
  v126[473] = v82 + 37 - ((2 * (v82 + 37) + 44) & 0xCC) - 4;
  v126[529] = v72 - ((2 * v72 - 118) & 0xCC) - 85;
  LOBYTE(v82) = 2 * ((v120 - 11) ^ (v82 + 59)) + ~((v120 - 11) ^ (v82 + 59));
  LOBYTE(v118) = v72 - (v120 - 19);
  v127 = ((2 * ((v124 + 1930426360) ^ (v123 + 1920989046))) & 0xDFA36F0E)
       + ((v124 + 1930426360) ^ (v123 + 1920989046) ^ 0x6FD1B787);
  v126[653] = (v124 - 8) ^ 0xB0;
  v126[832] = v115 - 2 * ((v115 + 104) & 0xE7 ^ v115 & 1) + 78;
  v126[47] = (v121 - 118) ^ 0xB0;
  v126[350] = (v122 + 9) ^ 0xB0;
  v126[170] = v120 - 19 - ((2 * (v120 - 19) + 16) & 0xCC) - 18;
  v128 = v127 + v122 - v125 - 2 * ((v127 + v122 - v125 + 106803276) & 0x5F19C3F ^ (v127 + v122 - v125) & 3) + 1548700808;
  v129 = v121 - v124 + v127;
  LOBYTE(v121) = v129 + 10;
  LOBYTE(v125) = v125 - (v129 + 10);
  LOBYTE(v124) = v82 + v118;
  v130 = ((v129 - 1432463093) ^ (v127 - 1598518510))
       + 1157087846
       + (~(2 * ((v129 - 1432463093) ^ (v127 - 1598518510))) | 0x76107B33)
       + 1;
  LOBYTE(v115) = v82 + v115 - (v120 - 19) - ((2 * (v82 + v115 - (v120 - 19)) - 12) & 0xBE) - 39;
  v131 = v120 - 19 - v124;
  LOBYTE(v82) = v82 - ((2 * v82 + 52) & 0xFC) + 24;
  v126[709] = (v127 + 18) ^ 0xB0;
  v126[406] = (v125 + 53) ^ 0xB0;
  v126[585] = v115 ^ 0x39;
  v126[226] = v82 ^ 0x98;
  v126[103] = v128 ^ 0x8C;
  LOBYTE(v127) = (v129 + 11) ^ 0xB0;
  v132 = ((2 * ((v130 ^ 0x44F7C266) - 85983868 + (v128 ^ 0x650A2217))) & 0xCF77F97C)
       + (((v130 ^ 0x44F7C266) - 85983868 + (v128 ^ 0x650A2217)) ^ 0x67BBFCBE);
  LOBYTE(v129) = ((2 * (v125 + 54 + (v130 ^ 0x99))) & 0xDC) + ((v125 + 54 + (v130 ^ 0x99)) ^ 0xEE);
  v126[765] = v127;
  v126[888] = v131 - ((2 * v131 + 98) & 0xCC) - 105;
  LOBYTE(v125) = ((v124 - 66) ^ 0x7E ^ v82) - 9 - ((2 * ((v124 - 66) ^ 0x7E ^ v82)) & 0xEE);
  LOBYTE(v130) = ((2 * ((v128 ^ 0xE8) + 19 + v129)) & 0x7A) + (((v128 ^ 0xE8) + 19 + v129) ^ 0xBD);
  LOBYTE(v127) = ((2 * (v131 - 78 + (v125 ^ 8))) & 0x1E) + ((v131 - 78 + (v125 ^ 8)) ^ 0x8F);
  v133 = ((2 * ((v125 ^ 0xF7) + (v115 ^ 0xF4))) & 0xD2) + (((v125 ^ 0xF7) + (v115 ^ 0xF4)) ^ 0xE9);
  v126[282] = v124 - 2 * ((v124 + 62) & 0xE7 ^ v124 & 1) - 92;
  LOBYTE(v124) = v124 - v127 + 77;
  v134 = v128 ^ 0xF6A67E10;
  LOBYTE(v125) = ((2 * ((v115 ^ 0xB) + 114 + v127)) & 0x5E) + (((v115 ^ 0xB) + 114 + v127) ^ 0x2F);
  v126[944] = v133 + (~(2 * v133 + 46) | 0x33) - 2;
  v126[159] = (v130 + 67) ^ 0xB0;
  LOBYTE(v129) = v121 - v129 - ((2 * (v121 - v129) - 34) & 0x76) + 42;
  v135 = v132 - 2 * ((v132 + 167592168) & 0x5E49965F ^ v132 & 6) + 1749473089;
  v126[462] = (v132 - 66) ^ 0xB0;
  v126[821] = v128 ^ 0xA0;
  v126[518] = v129 ^ 0x9B;
  v126[338] = v115 ^ 0x15;
  v126[35] = v124 ^ 0xF6;
  LOBYTE(v128) = v133 - ((2 * v133 - 126) & 0xBE) - 96;
  LOBYTE(v127) = v124 ^ 0x10;
  v136 = ((2 * v135) & 0xF8B7FDF8 ^ 0x50812080) + (v135 ^ 0x543F6FBF);
  v126[641] = v125 - ((2 * v125 - 94) & 0xCC) - 73;
  v137 = v136 - 1317582417 - ((2 * v136 + 2097675536) & 0x65E6964E);
  LOBYTE(v115) = (v115 ^ 0xF3) - ((2 * (v115 ^ 0xF3) - 42) & 0xBE) - 54;
  LOBYTE(v132) = v130 + v134 + v136;
  LOBYTE(v130) = v132 + (v129 ^ 0x2B) + (v135 ^ 0xA6);
  v138 = (((2 * v137) & 0xA4004F8 ^ 0x400448) + (v137 ^ 0x37D3495B)) ^ (v134 - 304105621);
  v139 = (((v138 + 302416305 - ((2 * v138) & 0x240D0362)) ^ 0x120681B1)
        - ((2 * ((v138 + 302416305 - ((2 * v138) & 0x240D0362)) ^ 0x120681B1)) & 0x1Au)
        + 525) & 0x2B9;
  LOBYTE(v125) = (v115 ^ 0x5F) + v125 - 47 + (v128 ^ 0x45);
  LOBYTE(v125) = ((2 * v125) & 0xF6) + (v125 ^ 0xFB);
  v140 = v128 ^ v115;
  v126[215] = v135 ^ 0xF3;
  v126[v139 ^ 0xB0 | v139 ^ 0x209] = v128 ^ 0xA3;
  LOBYTE(v115) = ((2 * (v132 - 78 + (v137 ^ 0x27))) & 0xEE) + ((v132 - 78 + (v137 ^ 0x27)) ^ 0xF7);
  v126[877] = (v132 - 78) ^ 0xB0;
  v126[91] = v140 ^ 0xFC;
  v126[394] = v125 - ((2 * v125 + 10) & 0xCC) - 21;
  LOBYTE(v127) = v127 + (v128 ^ 0xA0) + v125 + 1;
  v126[753] = v127 + ((2 * v127 - 118) & 0xCC ^ 0x7F) - 20;
  v126[574] = (v138 - 79 - ((2 * v138) & 0x62)) ^ 1;
  LOBYTE(v129) = (v128 ^ 0x45) + 5;
  LOBYTE(v127) = v127 + v129 + 102 - ((2 * (v127 + v129)) & 0xCC);
  LOBYTE(v129) = v125 + v129 + 2 - ((2 * (v125 + v129)) & 4);
  v126[271] = (v130 - 77) ^ 0xB0;
  LOBYTE(v125) = v130 + v136 + 34 - ((2 * (v130 + v136 + 34) + 42) & 0x22) + 38;
  LOBYTE(v130) = (v127 ^ 0x66) + (v140 ^ 0x1A) - ((2 * ((v127 ^ 0x66) + (v140 ^ 0x1A)) - 58) & 0x32);
  LOBYTE(v138) = (v125 ^ 0x91)
               - 29
               + ((v138 - 79 - ((2 * v138) & 0x62)) ^ 0xB1)
               - ((2 * ((v125 ^ 0x91) - 29 + ((v138 - 79 - ((2 * v138) & 0x62)) ^ 0xB1))) & 0x32)
               - 103;
  v141 = v125 ^ v135;
  LOBYTE(v128) = v128 ^ 0x11;
  LOBYTE(v127) = v127 ^ v128;
  LOBYTE(v128) = v129 ^ v128;
  v126[450] = v128 ^ 0xAC;
  v126[147] = (v129 ^ 2) - ((2 * (v129 ^ 2) - 6) & 0xCC) + 99;
  LOBYTE(v125) = (v136 - 74 + v132) ^ v135;
  v126[933] = v125 ^ 0xEF;
  v126[630] = (v115 + 2) ^ 0xB0;
  v126[506] = v127 ^ 0xC8;
  v126[327] = v138 ^ 0x29;
  v126[809] = 3 - v130;
  v126[24] = v141 ^ 0x7E;
  LOBYTE(v132) = (((v127 ^ 0x2E) + 83) ^ 0x77) - 4 + ((2 * ((v127 ^ 0x2E) + 83)) & 0xEE);
  LOBYTE(v127) = (((v141 ^ 0xCE) + 83) ^ 0xBC) - 114 + ((2 * ((v141 ^ 0xCE) + 83)) & 0x78) + 94;
  LOBYTE(v138) = (v138 ^ 0xA6) - v127;
  v142 = ((v130 - 4) ^ 0x26) - v132;
  LOBYTE(v136) = v115 - v138;
  v143 = v115 - v138 - 44;
  LOBYTE(v137) = v128 ^ 0x85;
  LOBYTE(v135) = (v129 ^ 2) - v142;
  LOBYTE(v128) = v135 - 63;
  LOBYTE(v115) = v132 - (v135 - 63);
  v126[865] = v135 - 63 - 2 * ((v135 - 53) & 0xE7 ^ (v135 - 63) & 1) - 16;
  LOBYTE(v127) = v127 - v143;
  LOBYTE(v137) = v137 - 30 + v142 - 111 + 54 + (~(2 * (v137 - 30 + v142 - 111)) | 0x95);
  v126[686] = (v138 - 88 + (v125 ^ 0x90)) ^ 0xB0;
  v126[203] = v137 ^ 0xD3;
  LOBYTE(v132) = v127 + v138 + 27;
  LOBYTE(v135) = v132 - ((2 * v132 - 4) & 0x74) - 72;
  v126[562] = v142 - 111 - 2 * ((v142 - 13) & 0xE7 ^ (v142 - 111) & 1) - 56;
  v126[259] = v115 - ((2 * v115 + 6) & 0xCC) + 105;
  v144 = v143 - v127 - 20;
  v126[742] = (v127 + 17) ^ 0xB0;
  v126[80] = (v138 - 88) ^ 0xB0;
  LOBYTE(v127) = v127 - 2 * ((v127 + 96) & 0x8F ^ v127 & 0xD) - 30;
  LOBYTE(v130) = v115 + v142 - 111;
  v126[136] = v144 ^ 0xB0;
  v126[315] = (v130 - ((2 * v130 - 118) & 0x8C) - 117) ^ 0xA0;
  v145 = (((v125 ^ 0x90) - 115 + v138 + 27) ^ 0xB8) - 93;
  LOBYTE(v137) = (v137 ^ 0x8D) - ((2 * (v137 ^ 0x8D) + 70) & 0x34) - 67;
  v126[383] = (v136 + 27) ^ 0xB0;
  v126[439] = v145 ^ 0xB0;
  LOBYTE(v128) = v128 - v115 - ((2 * (v128 - v115) + 122) & 0xB0) - 107;
  v146 = v115 - ((2 * v115 - 92) & 0xF4) - 52;
  v126[12] = v146 ^ 0x1C;
  v126[921] = v137 ^ 0xFC;
  v126[618] = v128 ^ 0xBE;
  v126[495] = v127 ^ 0x32;
  LOBYTE(v138) = v132 - ((2 * v132 + 70) & 0xF4) - 99;
  LOBYTE(v136) = v144 ^ v145;
  v147 = (v145 ^ 0x93) + (v138 ^ 5) + 60 - ((2 * ((v145 ^ 0x93) + (v138 ^ 5) + 1)) & 0x76);
  LOBYTE(v129) = v137 ^ v128;
  v148 = v130 - ((2 * v130 - 44) & 0xC) - 16;
  LOBYTE(v115) = v127 ^ v135 ^ 0xB8;
  v126[798] = v135 ^ 0x8A;
  LOBYTE(v137) = (v148 ^ 0x79) + (v137 ^ 0x89) - 53 - ((2 * ((v148 ^ 0x79) + (v137 ^ 0x89) + 1)) & 0x94);
  v126[674] = v137 ^ 0x2C;
  v126[854] = ((v138 ^ 0x28) + (v136 ^ 0x93)) ^ 0xB0;
  v126[371] = (v129 ^ 0xD1) + (v148 ^ 0x54) - ((2 * ((v129 ^ 0xD1) + (v148 ^ 0x54))) & 0xCC) - 26;
  LOBYTE(v132) = v146 ^ 0xBC ^ (v130 - ((2 * v130 - 118) & 0x8C) - 117);
  LOBYTE(v139) = v132 - ((2 * v132 + 42) & 0x3C) - 77;
  v126[730] = v139 ^ 0xF8;
  v126[192] = v147 ^ 0x8B;
  LOBYTE(v127) = v147 ^ 0xD9 ^ (v115 - ((2 * v115 + 42) & 0xC4) + 119);
  v126[551] = v138 ^ 0x98;
  v126[68] = v148 ^ 0xB2;
  LOBYTE(v138) = ((2 * ((v147 ^ 0x3B) + (v138 ^ 0x28))) & 0xA2) + (((v147 ^ 0x3B) + (v138 ^ 0x28)) ^ 0xD1);
  v126[248] = (v115 - ((2 * v115 + 42) & 0xC4) + 119) ^ 0x52;
  v149 = v127 + v138 + v115 - ((2 * (v127 + v138 + v115)) & 0x70) + 56;
  LOBYTE(v127) = ((2 * ((v137 ^ 0xCA) + (v148 ^ 0x54))) & 0xD2) + (((v137 ^ 0xCA) + (v148 ^ 0x54)) ^ 0xE9);
  LOBYTE(v135) = v127 + v132;
  v150 = (v139 ^ 0xD4 ^ v137) - 24 + v127 + v132;
  LOBYTE(v137) = v150 - ((2 * v150) & 0x46) + 35;
  v126[910] = v149 ^ 0x88;
  LOBYTE(v129) = ((2 * ((v129 ^ 0xD1) + 60)) & 0x4E) + (((v129 ^ 0xD1) + 60) ^ 0xA7);
  v126[427] = v137 ^ 0xC5;
  v126[607] = ((v136 ^ 0x93) + 60) ^ 0xB0;
  v126[304] = (v138 - 110) ^ 0xB0;
  v126[786] = v127 - 2 * ((v127 + 122) & 0xE7 ^ v127 & 1) + 96;
  LOBYTE(v139) = (v149 ^ 0xC7) + (v136 ^ 0x93);
  v126[483] = v127 + v132 - ((2 * (v127 + v132) - 48) & 0xCC) - 50;
  v126[1] = (v138 + v115) ^ 0xB0;
  v151 = v139 - v115;
  LOBYTE(v136) = 10 - v115 - ((-106 - 2 * v115) & 0x7E);
  v126[124] = v129 - ((2 * v129 - 78) & 0xCC) + 63;
  LOBYTE(v115) = (v137 ^ 0xDC) + v129;
  v152 = (-(((v127 + 122) | (-123 - v127)) & 0xD6) - 91 + v151) ^ v149;
  LOBYTE(v129) = v115 - v132;
  LOBYTE(v130) = (v115 - v132 - 20) ^ v137;
  v126[360] = (v151 - 49) ^ 0xB0;
  LOBYTE(v132) = 90 - v132 - ((-106 - 2 * v132) & 0x1E);
  v126[539] = v132 ^ 0xE9;
  v126[842] = v129 - ((2 * v129 - 40) & 0xCC) - 46;
  LOBYTE(v115) = v115 + v127 - ((2 * (v115 + v127) + 22) & 0xD0) - 13;
  LOBYTE(v127) = v151 - ((2 * v151 + 44) & 0xB8) + 114;
  LOBYTE(v128) = (v152 ^ 0x93) - 124 + (v127 ^ 0x23) + 1;
  LOBYTE(v128) = ((2 * v128) & 0xEA) + (v128 ^ 0x75);
  v126[236] = v115 ^ 0x8E;
  v126[57] = v136 ^ 0xF;
  LOBYTE(v125) = v139 + v138 - ((2 * (v139 + v138) + 12) & 0x50) + 46;
  v126[663] = v152 ^ 0x23;
  LOBYTE(v137) = v115 ^ v132;
  LOBYTE(v115) = (v125 ^ 0xA8) - v151 + 56 + v128 - 37 - ((2 * ((v125 ^ 0xA8) - v151 + 56 + v128)) & 0xB6);
  LOBYTE(v127) = v115 ^ v127;
  v126[180] = v130 ^ 0x6E;
  v153 = v125 ^ v136 ^ (v128 - 35 + ~((2 * v128 + 58) & 0x7E));
  LOBYTE(v138) = v129 - 3 - ((2 * v129 + 102) & 0xE4) + 40;
  LOBYTE(v132) = ((2 * ((v130 ^ 0x88) + (v138 ^ 0x8D) + 1)) & 0xDE) + (((v130 ^ 0x88) + (v138 ^ 0x8D) + 1) ^ 0x6F);
  LOBYTE(v136) = v132 + v135 - 2 * ((v132 + v135 + 48) & 0x17 ^ (v132 + v135) & 6) + 65;
  LOBYTE(v135) = v132 - ((2 * v132 + 78) & 0x66) + 90;
  v126[898] = v135 ^ 0x55;
  LOBYTE(v138) = v136 ^ v138;
  LOBYTE(v129) = v137 ^ v135;
  v126[595] = v138 ^ 0x85;
  v126[719] = v125 ^ 0x18;
  v126[416] = (v128 + 29) ^ 0xB0;
  v126[775] = v153 ^ 0x18;
  v126[292] = v137 ^ v135 ^ 0x32;
  LOBYTE(v135) = (v127 ^ 0x8F) + (v153 ^ v115 ^ 0x8C) + 1;
  LOBYTE(v135) = ((2 * v135) & 0xEE) + (v135 ^ 0xF7);
  LOBYTE(v125) = ((2 * ((v153 ^ v115 ^ 0x73) + 102)) & 0xFA) + (((v153 ^ v115 ^ 0x73) + 102) ^ 0xFD);
  v126[113] = v127 ^ 0xB7;
  v126[954] = v136 ^ 0xF7;
  LOBYTE(v127) = v136 ^ v129;
  LOBYTE(v129) = v125 + v128;
  LOBYTE(v128) = ((2 * ((v127 ^ 0x3A) + (v138 ^ 0xEB) + 1)) & 0xBE) + (((v127 ^ 0x3A) + (v138 ^ 0xEB) + 1) ^ 0xDF);
  LOBYTE(v130) = (v115 ^ 0xDB) - ((2 * (v115 ^ 0xDB) + 124) & 0x82) + 127;
  v126[348] = v128 - ((2 * v128 + 66) & 0xCC) + 7;
  LOBYTE(v127) = ((2 * ((v127 ^ 0xC5) + 102)) & 0x5A) + (((v127 ^ 0xC5) + 102) ^ 0xAD);
  v154 = v127 + v132 + 89;
  v126[651] = v154 ^ 0x66;
  v126[472] = v115 ^ 0x6B;
  LOBYTE(v115) = (v136 ^ 0x11) - ((2 * (v136 ^ 0x11) + 124) & 0xC6) - 95;
  v126[169] = (v129 - 1) ^ 0xB0;
  v126[707] = v115 ^ 0x85;
  v126[45] = v127 - ((2 * v127 - 90) & 0xCC) + 57;
  LOBYTE(v132) = ((2 * ((v129 - 1) ^ v130)) & 0xEA ^ 0x82) + ((v129 - 1) ^ v130 ^ 0x34);
  v126[831] = (v135 + 9) ^ 0xB0;
  v126[528] = (v125 + 3) ^ 0xB0;
  LOBYTE(v136) = v125 + v132;
  v155 = v115 ^ 0xE3 ^ v154;
  LOBYTE(v127) = ((2 * (v127 + 83 + v155)) & 0xEC) + ((v127 + 83 + v155) ^ 0xF6);
  LOBYTE(v125) = v130 ^ 0x41;
  v126[225] = v130 ^ 0xF1;
  LOBYTE(v130) = (v115 ^ 0x63) - 10;
  LOBYTE(v115) = v128 + 3 - 2 * v128 + v155 + 110;
  v156 = v115 - ((2 * v115) & 0x46) - 93;
  v126[404] = v156 ^ 0x45;
  LOBYTE(v115) = v132 - v135;
  LOBYTE(v138) = v135 - (v136 + 48);
  LOBYTE(v132) = ((v125 + 110) & 0x7C) + ((v125 + 110) & 0x7C ^ 0x7C) + v132 - v135 + v136 + 48;
  LOBYTE(v135) = v138 - 53;
  LOBYTE(v128) = v128 - v127;
  v126[460] = v130 - v127 - 2 * ((v130 - v127 + 68) & 0xE7 ^ (v130 - v127) & 1) + 42;
  v126[584] = (v138 - 17) ^ 0xB0;
  v126[101] = v128 - ((2 * v128 - 74) & 0xCC) + 65;
  v126[887] = (v115 + 20) ^ 0xB0;
  v126[943] = (v125 - (v136 + 48) - 26) ^ 0xB0;
  v126[763] = v127 - 2 * ((v127 + 52) & 0xE7 ^ v127 & 1) + 26;
  LOBYTE(v129) = ((2 * v156) & 0x3A ^ 2) + (v156 ^ 0x3E);
  LOBYTE(v127) = v127 + 52 + v129;
  v126[281] = (v136 - 72) ^ 0xB0;
  LOBYTE(v125) = v125 + 34 + v132 + 53 - ((2 * (v125 + 34 + v132 + 53) + 62) & 0x78) + 91;
  LOBYTE(v137) = v127 + v130 - ((2 * (v127 + v130) - 122) & 0x64) - 11;
  v126[516] = v127 - ((2 * v127 - 106) & 0xCC) - 79;
  LOBYTE(v128) = v128 - 44 + (v156 ^ 0x5C);
  LOBYTE(v130) = v128 + v129;
  v126[157] = v129 - ((2 * v129 - 42) & 0xCC) - 47;
  v126[640] = (v115 - 100) ^ 0xB0;
  LOBYTE(v129) = v127 - (v128 + v129);
  LOBYTE(v136) = v127 - v128 + 29;
  LOBYTE(v128) = (v138 + 119) ^ 0xB0;
  LOBYTE(v127) = v132 + 53 - (v138 - 53);
  v126[213] = v137 ^ 0x54;
  LOBYTE(v138) = ((2 * v137) & 0x6E ^ 0x4C) + (v137 ^ 0x99);
  v126[337] = v128;
  LOBYTE(v128) = v129 - v138 - ((2 * (v129 - v138) + 30) & 0x60) - 65;
  LOBYTE(v138) = v138 + v136 - ((2 * (v138 + v136) - 34) & 6) - 14;
  v126[819] = v130 - ((2 * v130 - 26) & 0xCC) + 89;
  v126[34] = (v132 - 120) ^ 0xB0;
  LOBYTE(v115) = v127 + v115;
  v126[696] = v125 ^ 0xC;
  LOBYTE(v127) = (v125 ^ a10) + v127 - ((2 * ((v125 ^ a10) + v127) + 80) & 0xC6) + 11;
  LOBYTE(v125) = v115 + 67 + (v125 ^ 0x20) + 61 - ((2 * (v115 + 67 + (v125 ^ 0x20))) & 0x7A);
  LOBYTE(v129) = (v125 ^ 0x3D) + v135 - ((2 * ((v125 ^ 0x3D) + v135) - 16) & 0x8E) + 63;
  LOBYTE(v130) = v130 + 63 + (v138 ^ 0x83) - 108 - ((2 * (v130 + 63 + (v138 ^ 0x83))) & 0x28);
  v126[393] = (v115 - 80) ^ 0xB0;
  v126[875] = v136 - ((2 * v136 + 38) & 0xCC) + 121;
  LOBYTE(v132) = v115 - 80 + (v127 ^ 0x63) - 81 - ((2 * (v115 - 80 + (v127 ^ 0x63))) & 0x5E);
  v126[269] = v128 ^ 0x56;
  v126[90] = v129 ^ 0x77;
  v126[931] = v138 ^ 0x65;
  v126[752] = v127 ^ 0xD3;
  LOBYTE(v115) = ((2 * v127) ^ 0x6E) + (v127 ^ 0x48);
  LOBYTE(v127) = ((2 * (v136 - 109 + (v128 ^ 0xB0))) & 0xBE) + ((v136 - 109 + (v128 ^ 0xB0)) ^ 0xDF);
  v126[449] = v125 ^ 0x8D;
  LOBYTE(v136) = (v125 ^ 0xFA ^ v129) - v115;
  v126[572] = v130 ^ 0x72;
  v126[146] = (((2 * ((v132 ^ 0xAF) - v115 - 1)) & 0x26) + (((v132 ^ 0xAF) - v115 - 1) ^ 0x93) + 109) ^ 0xB0;
  LOBYTE(v128) = ((2 * v128) & 0xF4 ^ 0xC0) + (v128 ^ 0x1E);
  v126[325] = ((v130 ^ 0x94 ^ (v127 + 33)) - ((2 * (v130 ^ 0x94 ^ (v127 + 33))) & 0x4C) - 90) ^ 0xBD;
  v126[628] = v127 - v128 - ((2 * (v127 - v128) + 54) & 0xCC) - 127;
  v126[684] = (v138 ^ 0x17 ^ v130) - v128 - ((2 * ((v138 ^ 0x17 ^ v130) - v128) - 12) & 0xCC) + 96;
  v126[808] = v132 ^ v129 ^ 0x25;
  v157 = LODWORD(STACK[0x6C8]) + 1531358626;
  v158 = LODWORD(STACK[0x5B8]) + 1450491239;
  v126[22] = v128 - ((2 * v128 + 96) & 0xCC) + 22;
  v126[505] = (v115 - 85) ^ 0xB0;
  v126[202] = (v136 - 1) ^ 0xB0;
  if (v158 < 0x7E71A72D != v157 < 0x7E71A72D)
    v159 = v157 < 0x7E71A72D;
  else
    v159 = v157 > v158;
  return (*(uint64_t (**)(void))(STACK[0x6D0] + 8 * ((622 * !v159) ^ v167)))();
}

void sub_24780EA28(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,int a39,int a40,int a41,int a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int a49,int a50,int a51,int a52,int a53,int a54,int a55,int a56,int a57,int a58,int a59,int a60,int a61,int a62,int a63)
{
  int a64;
  int a65;
  char a66;
  int a67;
  int a68;
  int a69;
  int a70;
  int a71;
  int a72;
  int a73;
  int a74;
  int a75;
  int a76;
  int a77;
  unsigned int a78;
  int a79;
  int a80;
  int a81;
  int a82;
  int a83;
  unsigned int a84;
  int a85;
  int a86;
  int a87;
  int a88;
  int a89;
  int a90;
  int a91;
  int a92;
  int a93;
  int a94;
  int a95;
  int a96;
  int a97;
  int a98;
  int a99;
  int a100;
  int v100;
  int v101;
  int v102;
  unsigned int v103;
  int v104;
  int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  int v110;
  unsigned int v111;
  int v112;
  int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  unsigned int v126;
  unsigned int v127;
  int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  int v132;
  unsigned int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  int v141;
  unsigned int v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  int v151;
  int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  unsigned int v157;
  int v158;
  int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  int v165;
  int v166;
  int v167;
  unsigned int v168;
  int v169;
  int v170;
  int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  unsigned int v181;
  int v182;
  int v183;
  int v184;
  int v185;
  int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  int v196;
  int v197;
  unsigned int v198;
  int v199;
  int v200;
  unsigned int v201;
  int v202;
  unsigned int v203;
  unsigned int v204;
  int v205;
  int v206;
  unsigned int v207;
  int v208;
  unsigned int v209;
  int v210;
  int v211;
  unsigned int v212;
  int v213;
  int v214;
  int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  int v220;
  int v221;
  int v222;
  int v223;
  unsigned int v224;
  unsigned int v225;
  unint64_t v226;
  int v227;
  int v228;
  unsigned int v229;
  unsigned int v230;
  int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  int v239;
  int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  int v245;
  unsigned int v246;
  unsigned int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  int v255;
  unsigned int v256;
  int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  unsigned int v263;
  int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  int v268;
  int v269;
  unsigned int v270;
  unsigned int v271;
  unsigned int v272;
  unsigned int v273;
  int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  int v278;
  unsigned int v279;
  int v280;
  int v281;
  int v282;
  int v283;
  int v284;
  int v285;
  int v286;
  int v287;
  int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  int v294;
  int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  int v299;
  unsigned int v300;
  int v301;
  int v302;
  unsigned int v303;
  int v304;
  unsigned int v305;
  unsigned int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  int v314;
  int v315;
  unsigned int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  BOOL v320;
  unsigned int v321;
  unsigned int v322;
  unsigned int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  unsigned int v327;
  unint64_t v328;
  int v329;
  int v330;
  unsigned int v331;
  int v332;
  unsigned int v333;
  unsigned int v334;
  int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  unsigned int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  int v360;
  int v361;
  int v362;
  int v363;
  unsigned int v364;
  unsigned int v365;
  int v366;
  int v367;
  unsigned int v368;
  int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  int v381;
  int v382;
  int v383;
  unsigned int v384;
  int v385;
  unsigned int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  unsigned int v390;
  unsigned int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  int v419;
  int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  int v424;
  unsigned int v425;
  int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  int v433;
  int v434;
  int v435;
  unsigned int v436;
  int v437;
  int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  int v442;
  int v443;
  unsigned int v444;
  int v445;
  unsigned int v446;
  int v447;
  int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  unsigned int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  int v463;
  int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  int v469;
  int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  int v479;
  unsigned int v480;
  int v481;
  int v482;
  int v483;
  int v484;
  unsigned int v485;
  int v486;
  int v487;
  int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  int v493;
  int v494;
  unsigned int v495;
  int v496;
  int v497;
  unsigned int v498;
  unsigned int v499;
  int v500;
  int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  unsigned int v510;
  int v511;
  unsigned int v512;
  int v513;
  int v514;
  int v515;
  unsigned int v516;
  int v517;
  int v518;
  unsigned int v519;
  int v520;
  int v521;
  unsigned int v522;
  int v523;
  int v524;
  unsigned int v525;
  int v526;
  unsigned int v527;
  int v528;
  unsigned int v529;
  unsigned int v530;
  int v531;
  unsigned int v532;
  int v533;
  int v534;
  unsigned int v535;
  int v536;
  int v537;
  unsigned int v538;
  int v539;
  int v540;
  int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  unsigned int v549;
  int v550;
  int v551;
  int v552;
  unsigned int v553;
  int v554;
  int v555;
  int v556;
  int v557;
  unsigned int v558;
  unsigned int v559;
  int v560;
  unsigned int v561;
  unsigned int v562;
  int v563;
  int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  int v568;
  int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  int v578;
  int v579;
  int v580;
  unsigned __int8 *v581;
  int v582;
  int v583;
  int v584;
  unsigned int v585;
  int v586;
  int v587;
  int v588;
  int v589;
  int v590;
  int v591;
  int v592;
  int v593;
  int v594;
  int v595;
  int v596;
  int v597;
  int v598;
  int v599;
  unsigned int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  uint64_t v604;
  int v605;
  int v606;
  int v607;
  int v608;
  int v609;
  unsigned int v610;
  int v611;
  int v612;
  uint64_t v613;
  unsigned int v614;
  unsigned int v615;
  int v616;
  unsigned int v617;
  int v618;
  int v619;
  int v620;
  unsigned int v621;
  int v622;
  unsigned int v623;
  unsigned int v624;
  int v625;
  int v626;
  unsigned int v627;
  int v628;
  int v629;
  int v630;
  unsigned int v631;
  unsigned int v632;
  unsigned int v633;
  int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  unsigned int v640;
  int v641;
  int v642;
  unsigned int v643;
  unsigned int v644;
  int v645;
  int v646;
  int v647;
  int v648;
  unsigned int v649;
  int v650;
  int v651;
  int v652;
  int v653;
  unsigned int v654;
  unsigned int v655;
  int v656;
  unsigned int v657;
  unsigned int v658;
  int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  int v665;
  unsigned int v666;
  unsigned int v667;
  int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  unsigned int v672;
  int v673;
  int v674;
  int v675;
  unsigned int v676;
  unsigned int v677;
  int v678;
  int v679;
  int v680;
  unsigned int v681;
  unsigned int v682;
  int v683;
  int v684;
  int v685;
  int v686;
  int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  int v691;
  unsigned int v692;
  int v693;
  int v694;
  unsigned int v695;
  unsigned int v696;
  int v697;
  int v698;
  int v699;
  int v700;
  int v701;
  int v702;
  int v703;
  int v704;
  int v705;
  int v706;
  int v707;
  unsigned int v708;
  unsigned int v709;
  unsigned int v710;
  unsigned int v711;
  unsigned int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  unsigned int v721;
  unsigned int v722;
  unsigned int v723;
  unsigned int v724;
  int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  int v733;
  unsigned int v734;
  int v735;
  int v736;
  unsigned int v737;
  int v738;
  unsigned int v739;
  int v740;
  unsigned int v741;
  int v742;
  unsigned int v743;
  int v744;
  unsigned int v745;
  int v746;
  unsigned int v747;
  unsigned int v748;
  int v749;
  int v750;
  int v751;
  unsigned int v752;
  int v753;
  int v754;
  int v755;
  unsigned int v756;
  unsigned int v757;
  int v758;
  unsigned int v759;
  int v760;
  int v761;
  int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  unsigned int v770;
  int v771;
  unsigned int v772;
  int v773;
  unsigned int v774;
  int v775;
  unsigned int v776;
  unsigned int v777;
  int v778;
  unsigned int v779;
  unsigned int v780;
  int v781;
  int v782;
  int v783;
  int v784;
  int v785;
  int v786;
  int v787;
  int v788;
  int v789;
  int v790;
  int v791;
  unsigned int v792;
  int v793;
  unsigned int v794;
  int v795;
  unsigned int v796;
  unsigned int v797;
  int v798;
  unsigned int v799;
  int v800;
  unsigned int v801;
  unsigned int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  int v807;
  unsigned int v808;
  unsigned int v809;
  unsigned int v810;
  unsigned int v811;
  int v812;
  int v813;
  unsigned int v814;
  int v815;
  unsigned int v816;
  int v817;
  int v818;
  unsigned int v819;
  int v820;
  unsigned int v821;
  int v822;
  int v823;
  int v824;
  int v825;
  unsigned int v826;
  unsigned int v827;
  int v828;
  int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  int v833;
  unsigned int v834;
  int v835;
  unsigned int v836;
  unsigned int v837;
  int v838;
  int v839;
  int v840;
  unsigned int v841;
  unsigned int v842;
  int v843;
  unsigned int v844;
  unsigned int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  unsigned int v850;
  int v851;
  unsigned int v852;
  int v853;
  unsigned int v854;
  unsigned int v855;
  int v856;
  int v857;
  int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  unsigned int v863;
  unsigned int v864;
  unsigned int v865;
  int v866;
  unsigned int v867;
  unsigned int v868;
  int v869;
  unsigned int v870;
  int v871;
  unsigned int v872;
  int v873;
  unsigned int v874;
  unsigned int v875;
  unsigned int v876;
  int v877;
  unsigned int v878;
  int v879;
  int v880;
  int v881;
  int v882;
  unsigned int v883;
  unsigned int v884;
  uint64_t v885;
  unsigned int v886;
  unsigned int v887;
  unsigned int v888;
  unsigned int v889;
  int v890;
  unsigned int v891;
  unsigned int v892;
  unsigned int v893;
  unsigned int v894;
  unsigned int v895;
  int v896;
  int v897;
  unsigned int v898;
  int v899;
  unsigned int v900;
  unsigned int v901;
  unsigned int v902;
  unsigned int v903;
  int v904;
  int v905;
  unsigned int v906;
  unsigned int v907;
  int v908;
  unsigned int v909;
  int v910;
  unsigned int v911;
  unsigned int v912;
  unsigned int v913;
  unsigned int v914;
  int v915;
  unsigned int v916;
  int v917;
  int v918;
  unsigned int v919;
  unsigned int v920;
  unsigned int v921;
  int v922;
  int v923;
  uint64_t v924;
  int v925;
  int v926;
  int v927;
  int v928;
  unsigned int v929;
  unsigned int v930;
  unsigned int v931;
  unsigned int v932;
  int v933;
  int v934;
  unsigned int v935;
  unsigned int v936;
  unsigned int v937;
  unsigned int v938;
  int v939;
  int v940;
  int v941;
  unsigned int v942;
  int v943;
  unsigned int v944;
  int v945;
  int v946;
  unsigned int v947;
  unsigned int v948;
  unsigned int v949;
  int v950;
  int v951;
  int v952;
  unsigned int v953;
  int v954;
  int v955;
  unsigned int v956;
  int v957;
  unsigned int v958;

  v100 = LODWORD(STACK[0x288]) | (LODWORD(STACK[0x284]) << 7);
  LODWORD(STACK[0x62C]) = a52 ^ a51;
  LODWORD(STACK[0x630]) = a57 ^ a58;
  v101 = LODWORD(STACK[0x278]) ^ LODWORD(STACK[0x418]);
  v102 = LODWORD(STACK[0x22C]) ^ LODWORD(STACK[0x208]);
  LODWORD(STACK[0x61C]) = a60 ^ a59;
  LODWORD(STACK[0x634]) = a75 ^ a77;
  LODWORD(STACK[0x600]) = a49 - LODWORD(STACK[0x5BC]);
  v103 = STACK[0x4A0];
  v104 = a53 ^ (LODWORD(STACK[0x4A0]) >> 20) ^ (LODWORD(STACK[0x480]) >> 1) ^ 0x78CCC33F;
  v105 = (v104 + 184685427 - ((2 * v104) & 0x160426E6)) ^ LODWORD(STACK[0x464]);
  v106 = (v105 - 1723255263 - ((2 * v105) & 0x32926C42)) ^ LODWORD(STACK[0x45C]);
  v107 = (v106 - 1739998249 - ((2 * v106) & 0x309377AE)) ^ LODWORD(STACK[0x46C]);
  v108 = (v107 - 215732688 - ((2 * v107) & 0xE6485C60)) ^ LODWORD(STACK[0x468]);
  v109 = (v108 - 588087370 - ((2 * v108) & 0xB9E4FF6C)) ^ LODWORD(STACK[0x460]);
  v110 = (v109 + 205862418 - ((2 * v109) & 0x188A6C24)) ^ a55;
  v111 = (v110 - 880560143 - ((2 * v110) & 0x97076FE2)) ^ a54;
  v112 = (v111 + 375560447 - ((2 * v111) & 0x2CC531FE)) ^ LODWORD(STACK[0x458]);
  v113 = (v112 + 142120559 - ((2 * v112) & 0x10F12CDE)) ^ a56;
  v114 = (v113 + 1546245557 - ((2 * v113) & 0xB853AB6A)) ^ a50;
  v115 = (SLODWORD(STACK[0x244]) >= 0) ^ (LODWORD(STACK[0x244]) >> 26);
  v116 = (v115 - 1023637273 - ((2 * v115) & 0xFFFFFFCF)) ^ LODWORD(STACK[0x210]);
  v117 = (v116 - 1141448045 - ((2 * v116) & 0x7204C526)) ^ LODWORD(STACK[0x200]);
  v118 = (v117 - 1295877457 - ((2 * v117) & 0x6584F55E)) ^ LODWORD(STACK[0x21C]);
  v119 = (v118 + 309168057 - ((2 * v118) & 0x24DB0F72)) ^ LODWORD(STACK[0x204]);
  v120 = (v119 + 1584606394 - ((2 * v119) & 0x3CE65974)) ^ LODWORD(STACK[0x218]);
  v121 = (v120 - 1380819287 - ((2 * v120) & 0x5B64BD52)) ^ LODWORD(STACK[0x20C]);
  v122 = (v121 + 2127587847 - ((2 * v121) & 0x7DA0D40E)) ^ a100;
  v123 = (v122 - 1871212087 - ((2 * v122) & 0x20EF2392)) ^ LODWORD(STACK[0x214]);
  v124 = (v123 - 567398754 - ((2 * v123) & 0x3C5C5D3C)) ^ a98;
  v125 = a90 ^ a85 ^ (v124 + 367616555 - ((2 * v124) & 0x2BD2C456));
  v126 = a99 & 0x17448E2 ^ (LODWORD(STACK[0x244]) >> 3) ^ (v125 & 0xE68BB71D ^ a99 & 0x8BB71D | v125 & 0x197448E2);
  v127 = a89 ^ a88 ^ ((v126 ^ 0xF2E06B) - 774381485 - 2 * ((v126 ^ 0xF2E06B) & 0x51D7E057 ^ v126 & 4));
  v128 = (v127 >> 21) ^ (v127 >> 27);
  v129 = (2 * LODWORD(STACK[0x244])) ^ (LODWORD(STACK[0x244]) << 6) ^ (LODWORD(STACK[0x244]) << 29) ^ (4 * v127) ^ (v127 << 11) ^ (32 * v127) ^ (4 * v128) ^ (32 * v128) ^ (v128 << 11) ^ 0xDEBADB48;
  v130 = (v129 + 1303397747 - ((2 * v129) & 0x9B608AE6)) ^ a97;
  v131 = (v130 - 875649725 - ((2 * v130) & 0x979D4A86)) ^ LODWORD(STACK[0x228]);
  v132 = (v131 + 878059297 - ((2 * v131) & 0x68AC3E42)) ^ LODWORD(STACK[0x224]);
  v133 = (v132 - 225821757 - ((2 * v132) & 0xE5147786)) ^ LODWORD(STACK[0x3E4]);
  v134 = (v133 + 1568027528 - ((2 * v133) & 0xBAEC6710)) ^ LODWORD(STACK[0x3D8]);
  v135 = (v134 + 3988119 - ((2 * v134) & 0x79B52E)) ^ LODWORD(STACK[0x540]);
  v136 = (v135 + 1077919637 - ((2 * v135) & 0x807F7F2A)) ^ LODWORD(STACK[0x3E0]);
  v137 = (v136 + 2038009271 - ((2 * v136) & 0xF2F31B6E)) ^ LODWORD(STACK[0x3DC]);
  v138 = (v137 - 2059421597 - ((2 * v137) & 0xA7F70C6)) ^ LODWORD(STACK[0x220]);
  v139 = (v138 - 1093083057 - ((2 * v138) & 0x7DB1C09E)) ^ LODWORD(STACK[0x3C8]);
  v140 = (v139 + 138998984 - ((2 * v139) & 0x1091E990)) ^ LODWORD(STACK[0x3D4]);
  v141 = (v140 - 1690206206 - ((2 * v140) & 0x36830004)) ^ LODWORD(STACK[0x3C4]);
  v142 = (v141 + 1215354771 - ((2 * v141) & 0x90E1AF26)) ^ LODWORD(STACK[0x3CC]);
  v143 = (v142 - 1510789203 - ((2 * v142) & 0x4BE65F5A)) ^ LODWORD(STACK[0x3D0]);
  v144 = (v143 + 1606980136 - ((2 * v143) & 0xBF912450)) ^ LODWORD(STACK[0x53C]);
  v145 = v127 ^ 0xDDD2821E ^ (v144 - ((2 * v144) & 0xBB5F9968) - 575681356);
  v146 = (v145 - ((2 * v145) & 0xBDE2C726) - 554605677) ^ v128;
  v147 = a73 ^ (a78 >> 21);
  v148 = (32 * a87) ^ (16 * a87) ^ (a87 << 30) ^ a86 ^ v146 ^ (32 * a78) ^ (4 * a78) ^ ((a78 ^ v147) << 11) ^ (32 * v147) ^ (4 * v147) ^ 0xA680D254;
  v149 = (v148 - 112273530 - 2 * (v148 & 0x794ED787 ^ v146 & 1)) ^ LODWORD(STACK[0x538]);
  v150 = (v149 + 1481247349 - ((2 * v149) & 0xB09414EA)) ^ LODWORD(STACK[0x398]);
  v151 = (v150 + 953966467 - ((2 * v150) & 0x71B8BF06)) ^ LODWORD(STACK[0x530]);
  v152 = (v151 - 1094051288 - ((2 * v151) & 0x7D943450)) ^ LODWORD(STACK[0x534]);
  v153 = (v152 + 335532574 - ((2 * v152) & 0x27FFA43C)) ^ LODWORD(STACK[0x3C0]);
  v154 = (v153 + 1636644521 - ((2 * v153) & 0xC31A6D52)) ^ LODWORD(STACK[0x3AC]);
  v155 = (v154 + 1038594350 - ((2 * v154) & 0x7BCF625C)) ^ a83;
  v156 = (v155 + 781774011 - ((2 * v155) & 0x5D31D976)) ^ LODWORD(STACK[0x3A8]);
  v157 = (v156 + 1795628865 - ((2 * v156) & 0xD60E3E82)) ^ LODWORD(STACK[0x3A0]);
  v158 = (v157 + 386085239 - ((2 * v157) & 0x2E0662EE)) ^ LODWORD(STACK[0x39C]);
  v159 = (v158 - 1381336872 - ((2 * v158) & 0x5B54F1B0)) ^ LODWORD(STACK[0x52C]);
  v160 = (v159 + 556301736 - ((2 * v159) & 0x4250FB50)) ^ LODWORD(STACK[0x3A4]);
  v161 = (v160 + 2142881308 - ((2 * v160) & 0xFF738C38)) ^ LODWORD(STACK[0x3BC]);
  v162 = a78 ^ (v161 - 2061432468 - ((2 * v161) & 0xA4212D8)) ^ 0x8C1D25C3;
  v163 = v147 ^ (v162 - ((2 * v162) & 0x99C02C6A) - 857729483) ^ (LODWORD(STACK[0x480]) << 12) ^ (~LODWORD(STACK[0x480]) << 31) ^ a65 ^ ((unint64_t)(LODWORD(STACK[0x480]) ^ 0xF19985B5) << (((STACK[0x48C] & 0xD0 ^ 0x10 | STACK[0x48C] & 0xD0 ^ 0xC3) + 63) & 0xFE));
  v164 = a52 ^ a51 ^ (v114 + 1994072780 - ((2 * v114) & 0xEDB64598));
  LODWORD(STACK[0x620]) = LODWORD(STACK[0x4A0]) >> 31;
  v165 = (v103 >> 31) ^ (v164 >> 21) ^ (v164 >> 27);
  v166 = v163 ^ (4 * v164) ^ (32 * v164) ^ (v164 << 11) ^ (4 * v165) ^ (32 * v165) ^ (v165 << 11) ^ 0x779992B5;
  v167 = (v166 - 1729204323 - ((2 * v166) & 0x31DCDF3A)) ^ LODWORD(STACK[0x450]);
  v168 = (v167 - 155263421 - ((2 * v167) & 0xED7DBC86)) ^ LODWORD(STACK[0x568]);
  v169 = (v168 - 2109315831 - ((2 * v168) & 0x48CCA12)) ^ LODWORD(STACK[0x564]);
  v170 = (v169 + 891370538 - ((2 * v169) & 0x6A427854)) ^ a62;
  v171 = (v170 - 1334420178 - ((2 * v170) & 0x60ECBA5C)) ^ LODWORD(STACK[0x484]);
  v172 = (v171 - 1074436271 - ((2 * v171) & 0x7FEACEA2)) ^ LODWORD(STACK[0x558]);
  v173 = (v172 + 1919720485 - ((2 * v172) & 0xE4D9384A)) ^ a61;
  v174 = (v173 - 303119220 - ((2 * v173) & 0xDBDD8918)) ^ LODWORD(STACK[0x560]);
  v175 = (v174 - 1904376733 - ((2 * v174) & 0x1CFB08C6)) ^ LODWORD(STACK[0x550]);
  v176 = (v175 + 406612416 - ((2 * v175) & 0x3078D380)) ^ a64;
  v177 = (v176 + 1577425566 - ((2 * v176) & 0xBC0B353C)) ^ a63;
  v178 = (v177 + 276721852 - ((2 * v177) & 0x20FCE178)) ^ LODWORD(STACK[0x47C]);
  v179 = v164 ^ 0x9863F23B ^ (v178 - ((2 * v178) & 0x2EF4D4C0) - 1753585056);
  LODWORD(STACK[0x6BC]) = (v179 - ((2 * v179) & 0x4D378246) + 647741731) ^ v165;
  v180 = (LODWORD(STACK[0x4BC]) ^ 0xF6C77Eu) >> ((a66 & 0xE ^ 8) + (a66 & 0xE ^ 6));
  v181 = v180 + 1565583279 - ((2 * v180) & 0xBAA1CF5E);
  v182 = (LODWORD(STACK[0x4C0]) >> 17) ^ HIBYTE(LODWORD(STACK[0x4C0])) ^ 0x7B;
  v183 = v182 + 1565583279 - ((2 * v182) & 0xCF5E);
  v184 = (v181 >> 27) ^ (v181 >> 30);
  v185 = ((v181 ^ v183) - ((2 * (v181 ^ v183)) & 0x63C25A5E) + 836840751) ^ a57 ^ a58;
  v186 = (v185 - 1283413296 - ((2 * v185) & 0x670155A0)) ^ a70;
  v187 = (v186 + 1694416701 - ((2 * v186) & 0xC9FD7E7A)) ^ a69;
  v188 = (v187 - 1178655493 - ((2 * v187) & 0x737E49F6)) ^ LODWORD(STACK[0x56C]);
  v189 = (v188 + 1622960011 - ((2 * v188) & 0xC178CF16)) ^ LODWORD(STACK[0x49C]);
  v190 = (v189 + 37327642 - ((2 * v189) & 0x4732634)) ^ a68;
  v191 = (v190 + 1055558741 - ((2 * v190) & 0x7DD518AA)) ^ a67;
  v192 = (v191 + 2067502377 - ((2 * v191) & 0xF6772A52)) ^ LODWORD(STACK[0x490]);
  v193 = (v192 - 304012070 - ((2 * v192) & 0xDBC249B4)) ^ LODWORD(STACK[0x4B4]);
  v194 = (LODWORD(STACK[0x4BC]) >> 9) ^ 0xE511B7E3;
  LODWORD(STACK[0x624]) = v194;
  v195 = (v193 - 451818368 - ((2 * v193) & 0xCA239900)) ^ v194;
  v196 = (v195 - 1615925051 - ((2 * v195) & 0x3F5DE18A)) ^ a72;
  v197 = (v196 + 51684370 - ((2 * v196) & 0x6294824)) ^ a71;
  v198 = v197 + 1928983810 - ((2 * v197) & 0xE5F3EA04);
  v199 = STACK[0x598];
  v200 = (LODWORD(STACK[0x598]) >> 20) ^ (LODWORD(STACK[0x598]) >> 1) ^ 0xF6C767E;
  v201 = (v200 + 1630027466 - ((2 * v200) & 0xC2507D94)) ^ LODWORD(STACK[0x4CC]);
  v202 = (v201 - 489680791 + (~(2 * v201) | 0x3A5FDF2D) + 1) ^ LODWORD(STACK[0x4D0]);
  v203 = (v202 + 1502014154 - ((2 * v202) & 0xB30DD594)) ^ a96;
  v204 = (v203 - 330442696 - ((2 * v203) & 0xD89BB070)) ^ LODWORD(STACK[0x4DC]);
  v205 = (v204 - 1425524170 - ((2 * v204) & 0x5610746C)) ^ LODWORD(STACK[0x4D8]);
  v206 = (v205 - 1793119797 - ((2 * v205) & 0x2A3E5396)) ^ LODWORD(STACK[0x4C8]);
  v207 = (v206 - 290519000 - ((2 * v206) & 0xDD5E1050)) ^ a94;
  v208 = (v207 + 736662922 - ((2 * v207) & 0x57D12B14)) ^ a93;
  v209 = (v208 - 884494795 - ((2 * v208) & 0x968F5C6A)) ^ LODWORD(STACK[0x4C4]);
  v210 = (v209 + 1031817983 - ((2 * v209) & 0x7B0095FE)) ^ a95;
  v211 = (v210 + 62130351 - ((2 * v210) & 0x768115E)) ^ a91;
  v212 = a92 ^ LODWORD(STACK[0x4D4]) ^ (v211 - 2102260813 - ((2 * v211) & 0x5641766));
  v213 = LODWORD(STACK[0x290]) ^ (LODWORD(STACK[0x2D0]) >> 26) ^ 0x2B;
  v214 = (v213 - 370038987 - ((2 * v213) & 0x6A)) ^ LODWORD(STACK[0x2CC]);
  v215 = (v214 + 318650457 - ((2 * v214) & 0x25FC70B2)) ^ LODWORD(STACK[0x2B8]);
  v216 = (v215 + 153589702 - ((2 * v215) & 0x124F2F8C)) ^ LODWORD(STACK[0x2A4]);
  v217 = (v216 + 1684571781 - ((2 * v216) & 0x48D10D0A)) ^ LODWORD(STACK[0x438]);
  v218 = (v217 - 104040669 - ((2 * v217) & 0x7398EE46)) ^ LODWORD(STACK[0x2A0]);
  v219 = (v218 - 1600757523 - ((2 * v218) & 0x412CC1DA)) ^ LODWORD(STACK[0x448]);
  v220 = (v219 - 861061871 - ((2 * v219) & 0x195A7A22)) ^ LODWORD(STACK[0x29C]);
  v221 = (v220 - 407860934 - ((2 * v220) & 0x4F611274)) ^ LODWORD(STACK[0x2C8]);
  v222 = (v221 - 135954235 - ((2 * v221) & 0x6FCB018A)) ^ LODWORD(STACK[0x298]);
  v223 = (v222 + 1055699091 - ((2 * v222) & 0x7DD96126)) ^ LODWORD(STACK[0x42C]);
  v224 = (v223 + 1241557502 - ((2 * v223) & 0x940153FC)) ^ LODWORD(STACK[0x28C]);
  v225 = v101 ^ (v224 + 2108614212 - ((2 * v224) & 0xFB5DCC88));
  HIDWORD(v226) = v225 ^ 0xB38869;
  LODWORD(v226) = v225 ^ 0x2000000;
  v227 = (v226 >> 25) ^ v100;
  HIDWORD(v226) = v227 ^ 0x17;
  LODWORD(v226) = v227 ^ 0xDB515680;
  v228 = (v226 >> 7) - 174822896 - ((2 * (v226 >> 7)) & 0xEB28D420);
  v229 = v228 ^ (((LODWORD(STACK[0x2D0]) >> 3) ^ 0x159C434D)
               - 174822896
               - 2 * (((LODWORD(STACK[0x2D0]) >> 3) ^ 0x159C434D) & 0x15946A30 ^ (LODWORD(STACK[0x2D0]) >> 3) & 0x20));
  v230 = (2 * LODWORD(STACK[0x2D0])) ^ (LODWORD(STACK[0x2D0]) << 6) ^ (LODWORD(STACK[0x2D0]) << 29) ^ (4 * v229) ^ (v229 << 11) ^ (32 * v229) ^ 0xBFA89BDE;
  v231 = (v230 - 1394468247 - ((2 * v230) & 0x59C434D2)) ^ LODWORD(STACK[0x2D0]);
  v232 = (v231 + 1838763310 - ((2 * v231) & 0xDB329A5C)) ^ LODWORD(STACK[0x2C0]);
  v233 = (v232 + 440791902 - ((2 * v232) & 0x348BE6BC)) ^ LODWORD(STACK[0x2C4]);
  v234 = (v233 - 1045955178 - ((2 * v233) & 0x834FFB2C)) ^ LODWORD(STACK[0x41C]);
  v235 = (v234 + 1219916559 - ((2 * v234) & 0x916CE61E)) ^ LODWORD(STACK[0x430]);
  v236 = (v235 - 1868438802 - ((2 * v235) & 0x2143C5DC)) ^ LODWORD(STACK[0x2AC]);
  v237 = (v236 - 1279580168 - ((2 * v236) & 0x67764FF0)) ^ LODWORD(STACK[0x2B0]);
  v238 = (v237 - 1948932196 - ((2 * v237) & 0x17AB4F38)) ^ LODWORD(STACK[0x440]);
  v239 = (v238 + 743326672 - ((2 * v238) & 0x589C87A0)) ^ LODWORD(STACK[0x2BC]);
  v240 = (v239 - 1936604014 - ((2 * v239) & 0x19238924)) ^ LODWORD(STACK[0x420]);
  v241 = (v240 - 192443225 - ((2 * v240) & 0xE90F194E)) ^ LODWORD(STACK[0x428]);
  v242 = (v241 - 1939686699 - ((2 * v241) & 0x18C575AA)) ^ LODWORD(STACK[0x424]);
  v243 = (v242 - 1668512586 - ((2 * v242) & 0x3919096C)) ^ LODWORD(STACK[0x548]);
  v244 = (v243 + 1491979240 - ((2 * v243) & 0xB1DB97D0)) ^ LODWORD(STACK[0x2B4]);
  v245 = (v244 - 2106927924 - ((2 * v244) & 0x4D5A998)) ^ LODWORD(STACK[0x2A8]);
  v246 = (v229 >> 27) ^ (~v228 >> 30) ^ (v229 >> 21);
  v247 = v229 ^ 0xEFF54CF9 ^ (v245 - ((2 * v245) & 0x951B9FE4) - 896675854);
  v248 = (LODWORD(STACK[0x280]) << 30) ^ (32 * LODWORD(STACK[0x27C])) ^ (16 * LODWORD(STACK[0x27C])) ^ 0x727ECE70;
  v249 = (v248 + 1848464744 - ((2 * v248) & 0xDC5AAAC0)) ^ LODWORD(STACK[0x3F4]);
  v250 = (v249 + 1392057050 - ((2 * v249) & 0xA5F235B4)) ^ LODWORD(STACK[0x3F8]);
  v251 = (v250 - 354606843 - ((2 * v250) & 0xD5BA420A)) ^ LODWORD(STACK[0x544]);
  v252 = (v251 - 419056738 - ((2 * v251) & 0xCE0B673C)) ^ LODWORD(STACK[0x410]);
  v253 = (v252 - 85277956 - ((2 * v252) & 0xF5D585F8)) ^ LODWORD(STACK[0x274]);
  v254 = (v253 + 1040708656 - ((2 * v253) & 0x7C0FE860)) ^ LODWORD(STACK[0x3EC]);
  v255 = (v254 + 176233254 - ((2 * v254) & 0x1502364C)) ^ LODWORD(STACK[0x258]);
  v256 = (v255 + 1313727917 - ((2 * v255) & 0x9C9BCB5A)) ^ LODWORD(STACK[0x254]);
  v257 = (v256 + 998106864 - ((2 * v256) & 0x76FBCDE0)) ^ LODWORD(STACK[0x40C]);
  v258 = (v257 - 1111721868 - ((2 * v257) & 0x7B78F0E8)) ^ LODWORD(STACK[0x3E8]);
  v259 = (v258 + 1906487838 - ((2 * v258) & 0xE345643C)) ^ LODWORD(STACK[0x408]);
  v260 = (v259 + 1862890641 - ((2 * v259) & 0xDE12E922)) ^ LODWORD(STACK[0x3F0]);
  v261 = (((LODWORD(STACK[0x280]) >> 2) ^ 0xACE21A)
        - 93994523
        - ((2 * ((LODWORD(STACK[0x280]) >> 2) ^ 0xACE21A)) & 0x74CB83CA)) ^ LODWORD(STACK[0x268]);
  v262 = (v261 - 1165875388 - ((2 * v261) & 0x75044E88)) ^ LODWORD(STACK[0x264]);
  v263 = (v262 - 271159451 - ((2 * v262) & 0xDFACDECA)) ^ LODWORD(STACK[0x260]);
  v264 = (LODWORD(STACK[0x294]) >> 27) ^ (LODWORD(STACK[0x294]) >> 28) ^ LODWORD(STACK[0x3FC]) ^ 0x22710D62 ^ (v263 - ((2 * v263) & 0x4FAC4354) - 1479138902);
  v265 = (v264 - 764305635 - ((2 * v264) & 0xA4E33E3A)) ^ LODWORD(STACK[0x270]);
  v266 = (v265 + 1828295043 - ((2 * v265) & 0xD9F3369A) + 2506) ^ LODWORD(STACK[0x25C]);
  v267 = (v266 - 485310275 - ((2 * v266) & 0xC625817A)) ^ LODWORD(STACK[0x250]);
  v268 = (v267 - 1619405687 - ((2 * v267) & 0x3EF3A912)) ^ LODWORD(STACK[0x24C]);
  v269 = (v268 - 2144826774 - ((2 * v268) & 0x5114D4)) ^ LODWORD(STACK[0x26C]);
  v270 = (v269 - ((2 * v269) & 0x94A14AAA) - 900684459) ^ LODWORD(STACK[0x248]);
  v271 = ((v270 ^ 0xCA77D407) + 2083732198 - 2 * ((v270 ^ 0xCA77D407) & 0x7C333AEE ^ v270 & 8)) ^ LODWORD(STACK[0x400]);
  v272 = v102 ^ (v271 - ((2 * v271) & 0x119A9692) + 147671881);
  v273 = v246 ^ (32 * v246) ^ (4 * v246) ^ (v246 << 11) ^ LODWORD(STACK[0x414]) ^ (v247
                                                                                 - ((2 * v247) & 0xB0054CC0)
                                                                                 - 670914976) ^ (32 * v272) ^ (v272 << 11) ^ (4 * v272) ^ (v260 + 1282537114 - ((2 * v260) & 0x98E3ED34));
  v274 = (v272 >> 27) ^ (v272 >> 21);
  v275 = v273 ^ (4 * v274) ^ (32 * v274) ^ (v274 << 11) ^ 0x88764CC7;
  v276 = v272 ^ 0x8DB6FFA7 ^ (v275 - ((2 * v275) & 0x7C51712) - 2082305143);
  v277 = ((a84 << 27) ^ 0x38000000) + (a76 & 0x80000000) - 1056429211;
  LODWORD(STACK[0x604]) = v277;
  v278 = (a84 << 8) ^ (a84 << 15) ^ a82 ^ a81 ^ 0x2342700;
  v279 = (v278 - 894798828 - ((2 * v278) & 0x9554E800)) ^ LODWORD(STACK[0x3B4]);
  v280 = (v279 + 497819470 - ((2 * v279) & 0x3B583E9C)) ^ a60 ^ a59;
  v281 = (v280 + 957622867 - ((2 * v280) & 0x722854A6)) ^ LODWORD(STACK[0x3B8]);
  v282 = (a74 ^ 0x2E053800) + 802431179 - ((2 * (a74 ^ 0x2E053800)) & 0x5FA84000);
  LODWORD(STACK[0x608]) = v282;
  v283 = (v281 + 802431179 - ((2 * v281) & 0x5FA84196)) ^ v282;
  v284 = (v283 + 623960126 - ((2 * v283) & 0x4A61C07C)) ^ LODWORD(STACK[0x574]);
  v285 = (v284 + 816394346 - ((2 * v284) & 0x615260D4)) ^ LODWORD(STACK[0x4AC]);
  v286 = (v285 - 1754222835 - ((2 * v285) & 0x2EE15E1A)) ^ a79;
  v287 = (v286 - 1611662723 - ((2 * v286) & 0x3FDFF4FA)) ^ LODWORD(STACK[0x4A8]);
  v288 = a80 ^ (a84 >> 5);
  LODWORD(STACK[0x5DC]) = v288;
  v289 = ((a84 << 23) ^ 0x53800000) - 294606301 - ((2 * ((a84 << 23) ^ 0x53800000)) & 0xDC000000);
  LODWORD(STACK[0x610]) = v289;
  v290 = (v287 + 1600385618 - ((2 * v287) & 0xBEC7E4A4)) ^ LODWORD(STACK[0x578]);
  v291 = (v290 - 294606301 - ((2 * v290) & 0xDCE15446)) ^ v289;
  v292 = (v291 - 149569305 - ((2 * v291) & 0xEE2B81CE)) ^ LODWORD(STACK[0x3B0]);
  v293 = (v292 - 1835037886 - ((2 * v292) & 0x253F1684)) ^ LODWORD(STACK[0x4B0]);
  v294 = (v274 | (LODWORD(STACK[0x230]) << 31)) ^ (v199 << 12) ^ (v276 - ((2 * v276) & 0x71870F96) + 952338379);
  v295 = LODWORD(STACK[0x5A0]) >> 31;
  LODWORD(STACK[0x5E0]) = v295;
  v296 = v295 ^ (v212 >> 21) ^ (v212 >> 27);
  v297 = v184 ^ ((v288 ^ v198) >> 21);
  LODWORD(STACK[0x628]) = v297;
  v298 = v294 ^ (32 * v212) ^ (4 * v212) ^ (v212 << 11) ^ (4 * v296) ^ (32 * v296) ^ (v296 << 11) ^ v277 ^ (v293 - 1056429211 - ((2 * v293) & 0x821056CA)) ^ (4 * (v288 ^ v198)) ^ (32 * (v288 ^ v198)) ^ ((v288 ^ v198) << 11) ^ (4 * v297) ^ (32 * v297) ^ (v297 << 11) ^ 0xD724D284;
  v299 = (v298 + 387364055 - ((2 * v298) & 0x2E2D69AE)) ^ LODWORD(STACK[0x584]);
  v300 = (v299 - 67409416 - ((2 * v299) & 0xF7F6D3F0)) ^ LODWORD(STACK[0x59C]);
  v301 = (v300 + 457361473 - ((2 * v300) & 0x36859082)) ^ LODWORD(STACK[0x454]);
  v302 = (v301 - 1974680915 - ((2 * v301) & 0x1499855A)) ^ LODWORD(STACK[0x594]);
  v303 = (v302 + 1927937180 - ((2 * v302) & 0xE5D3F938)) ^ LODWORD(STACK[0x234]);
  v304 = (v303 - 1151663805 - ((2 * v303) & 0x76B60286)) ^ LODWORD(STACK[0x4EC]);
  v305 = (v304 + 1233944225 - ((2 * v304) & 0x9318FD42)) ^ LODWORD(STACK[0x4E4]);
  v306 = (v305 + 1980948394 - ((2 * v305) & 0xEC25BF54)) ^ LODWORD(STACK[0x58C]);
  v307 = (v306 - 834874954 - ((2 * v306) & 0x9C79A36C)) ^ LODWORD(STACK[0x23C]);
  v308 = (v307 - 573245058 - ((2 * v307) & 0xBBA9F2FC)) ^ LODWORD(STACK[0x238]);
  v309 = (v308 + 339816139 - ((2 * v308) & 0x28825D96)) ^ LODWORD(STACK[0x590]);
  v310 = (v309 + 1789212539 - ((2 * v309) & 0xD54A6EF6)) ^ LODWORD(STACK[0x240]);
  v311 = (v310 + 1671822981 - ((2 * v310) & 0xC74BFD0A)) ^ LODWORD(STACK[0x580]);
  v312 = (v311 - 602716076 - ((2 * v311) & 0xB82690A8)) ^ LODWORD(STACK[0x588]);
  v313 = v212 ^ 0x997D34B3 ^ (v312 - ((2 * v312) & 0x31217482) - 1735345599);
  v314 = v288 ^ v198 ^ v296;
  v315 = v313 - ((2 * v313) & 0x4AAE9A9A) - 1521005235;
  v316 = v314 ^ v315;
  v317 = v314 ^ ~v315;
  LODWORD(STACK[0x5FC]) = v317;
  v317 >>= 29;
  LODWORD(STACK[0x5C0]) = v317;
  LODWORD(STACK[0x5B8]) = v316;
  LODWORD(STACK[0x5D8]) = v316 >> 25;
  v318 = ((v317 ^ HIBYTE(v316) ^ 0xF0)
        + 1373147721
        - 2 * ((v317 ^ HIBYTE(v316) ^ 0xF0) & 0x4B ^ (v317 ^ HIBYTE(v316)) & 2)) ^ (v316 >> 25);
  LODWORD(STACK[0x5F0]) = v318;
  v319 = (v318 & 0x10 | (32 * (((v318 & 0x10) >> 4) & 1)) | 0xDFAFFFC6) ^ 0x20;
  LODWORD(STACK[0x5D4]) = v316 >> 22;
  LODWORD(STACK[0x5EC]) = (v316 >> 22) ^ 0x3C1;
  v320 = ((v319 + 42) & ((v316 >> 22) ^ 0x3C1)) == 0;
  v321 = v319 + 27134;
  v322 = 27050 - v319;
  if (v320)
    v322 = v321;
  LODWORD(STACK[0x5F8]) = v322;
  v323 = STACK[0x5B4];
  LODWORD(STACK[0x698]) = ((4 * LODWORD(STACK[0x5B4])) ^ 0xDB4F4740)
                        - 736548245
                        - 2
                        * (((4 * LODWORD(STACK[0x5B4])) ^ 0xDB4F4740) & 0x54192A6C ^ (4 * LODWORD(STACK[0x5B4])) & 4);
  LODWORD(STACK[0x694]) = ((8 * v323) ^ 0xB69E8E80) + 1126109392 - ((2 * ((8 * v323) ^ 0xB69E8E80)) & 0x863E21A0);
  LODWORD(STACK[0x6F8]) = ((v323 << 10) ^ 0x4F474000) + 1524873513 - ((2 * ((v323 << 10) ^ 0x4F474000)) & 0xB5C77000);
  LODWORD(STACK[0x6A0]) = ((v323 << 22) ^ 0x74000000) + 738451433 - ((2 * ((v323 << 22) ^ 0x74000000)) & 0x58000000);
  LODWORD(STACK[0x6DC]) = ((v323 << 7) ^ 0x69E8E800) + 1102258364 - ((2 * ((v323 << 7) ^ 0x69E8E800)) & 0x83664100);
  LODWORD(STACK[0x700]) = ((v323 << 13) ^ 0x7A3A0000) - 70130138 - ((2 * ((v323 << 13) ^ 0x7A3A0000)) & 0xF7A3C000);
  LODWORD(STACK[0x6E0]) = ((v323 << 16) ^ 0xD1D00000) - 642431846 - ((2 * ((v323 << 16) ^ 0xD1D00000)) & 0xB36A0000);
  LODWORD(STACK[0x6C0]) = ((v323 << 20) ^ 0x1D000000) - 1066168811 - ((v323 << 21) & 0x80FFFFFF);
  LODWORD(STACK[0x6B0]) = ((v323 << 14) ^ 0xF4740000) + 1354432918 - ((2 * ((v323 << 14) ^ 0xF4740000)) & 0xA1760000);
  LODWORD(STACK[0x688]) = ((v323 << 24) ^ 0xD0000000) + 1459731236 + (~(2 * ((v323 << 24) ^ 0xD0000000)) | 0x51FFFFFF);
  LODWORD(STACK[0x6C8]) = ((v323 << 25) ^ 0xA0000000) - 1198048200 - ((2 * ((v323 << 25) ^ 0xA0000000)) & 0x70000000);
  LODWORD(STACK[0x6E8]) = ((v323 << 26) ^ 0x40000000) - 112182724 - (((v323 << 26) ^ 0x40000000) >> 27 << 28);
  LODWORD(STACK[0x6E4]) = ((v323 << 11) ^ 0x9E8E8000) + 1327989479 - ((2 * ((v323 << 11) ^ 0x9E8E8000)) & 0x9E4F0000);
  v324 = *(unsigned __int8 *)(STACK[0x708] + 202);
  LODWORD(STACK[0x414]) = v324;
  v325 = ((v323 << 18) ^ 0x47400000) - 158101279 - ((2 * ((v323 << 18) ^ 0x47400000)) & 0xED200000);
  LODWORD(STACK[0x658]) = v325;
  v326 = ((v323 << 21) ^ 0x3A000000) + 1910357928 - ((2 * ((v323 << 21) ^ 0x3A000000)) & 0xE3800000);
  LODWORD(STACK[0x660]) = v326;
  LODWORD(STACK[0x6A8]) = ((v323 << 19) ^ 0x8E800000) + 1892574160 - ((2 * ((v323 << 19) ^ 0x8E800000)) & 0xE1900000);
  v327 = ((v323 << 23) ^ 0xE8000000) + 314441286 - ((v323 << 24) & 0x25000000);
  LODWORD(STACK[0x548]) = v327;
  LODWORD(STACK[0x648]) = v323 << 28;
  LODWORD(STACK[0x67C]) = (v323 << 27) - ((v323 << 28) & 0xD0000000);
  v328 = v323 ^ 0x76D3D1D0;
  STACK[0x400] = v328;
  v329 = (unsigned __int16)(v328 >> (v324 & 0x15 ^ 4 | v324 & 0x15 ^ 0x11));
  LODWORD(v328) = STACK[0x570];
  v330 = LODWORD(STACK[0x570]) >> 11;
  v331 = v323 >> 10;
  v332 = (LODWORD(STACK[0x570]) >> 28) ^ (LODWORD(STACK[0x570]) >> 27) ^ v330 ^ (v323 >> 2) ^ (v323 >> 10) ^ 0x1DA79AF3 ^ v329;
  v333 = (LODWORD(STACK[0x570]) >> 29) ^ 0xB35E97C7;
  LODWORD(STACK[0x538]) = v333;
  v334 = (v328 >> 30) ^ 0xF2E1741E;
  LODWORD(STACK[0x52C]) = v334;
  v335 = v333 ^ v334;
  v336 = (v332 + 1103094747 - ((2 * v332) & 0x37FC7B6)) ^ v333 ^ v334;
  v337 = (v328 >> 19) ^ 0xCB4640F6;
  v338 = (v336 - 884584916 - ((2 * v336) & 0x968C9C58)) ^ v337;
  v339 = v328 >> 18;
  v340 = (v328 >> 18) ^ 0xF37B9DAB;
  LODWORD(STACK[0x530]) = v340;
  v341 = (v338 - 210010081 - ((2 * v338) & 0xE6F7003E)) ^ v340;
  v342 = (v328 >> 15) ^ 0x9CD5BF39;
  LODWORD(STACK[0x534]) = v342;
  v343 = (v341 - 1663741282 - ((2 * v341) & 0x39AAA53C)) ^ v342;
  v344 = v328 >> 14;
  v345 = v328;
  v346 = (v328 >> 14) ^ 0x13B5ACF0;
  v347 = (v343 + 330594239 - ((2 * v343) & 0x2768EF7E)) ^ v346;
  v348 = v347 - 1255644586 - ((2 * v347) & 0x6A50C4AC);
  v349 = (v328 >> 13) ^ 0xB52BD4C8;
  v350 = v323 >> 6;
  v351 = (v323 >> 6) ^ a42;
  v352 = ((v348 ^ v349) - 1622078460 - ((2 * (v348 ^ v349)) & 0x3EA21808)) ^ v351;
  v353 = (v323 >> 9) ^ 0xD1579C0D;
  v354 = (v352 - 781388315 - ((2 * v352) & 0xA2D9EBCA)) ^ v353;
  LODWORD(STACK[0x680]) = v351 ^ (v323 >> 4);
  v355 = v354 - ((2 * v354) & 0xC6B0ADBE) - 480749857;
  v356 = v323 >> 5;
  v357 = v323;
  v358 = (v323 >> 5) ^ (v323 >> 4) ^ v355;
  LODWORD(STACK[0x5BC]) = v358;
  v358 ^= 0xE0EEC851;
  LODWORD(STACK[0x544]) = v358;
  LODWORD(STACK[0x540]) = v358 >> 21;
  LODWORD(v328) = WORD1(v328);
  LODWORD(STACK[0x438]) = v328;
  v359 = v328 ^ (v345 >> 20) ^ v339 ^ (v323 >> 1) ^ 0x3B6984E2 ^ (unsigned __int16)((unint64_t)(v323 ^ 0x76D3D1D0) >> (((v358 >> 21) & 0x16 ^ 4) + ((v358 >> 21) & 0x16 ^ 0x12)));
  v360 = v359 + 30852711 - ((2 * v359) & 0x3AD8CCE);
  v361 = (v345 >> 21) ^ 0x1D6C5D1;
  v362 = (v345 >> 25) ^ 0x2F0935F;
  v363 = ((v360 ^ v361) + 49320804 - ((2 * (v360 ^ v361)) & 0x5E126C8)) ^ v362;
  LODWORD(STACK[0x428]) = v362;
  v364 = v337;
  LODWORD(STACK[0x53C]) = v337;
  v365 = (v363 - 884584916 - ((2 * v363) & 0x968C9C58)) ^ v337;
  v366 = (v365 + 330594239 - ((2 * v365) & 0x2768EF7E)) ^ v346;
  v367 = (v345 >> 12) ^ 0x5C56324F;
  v368 = (v366 + 1548836722 - ((2 * v366) & 0xB8A2BEE4)) ^ v367;
  LODWORD(STACK[0x424]) = v367;
  v369 = (v368 - 1255644586 - ((2 * v368) & 0x6A50C4AC)) ^ v349;
  v370 = (v369 - 817184451 - ((2 * v369) & 0x9E95827A)) ^ v330 ^ 0xCF441B47;
  v371 = (v323 >> 7) ^ 0xCC850FD7;
  LODWORD(STACK[0x418]) = v371;
  v372 = (v370 - 865556364 - ((2 * v370) & 0x98D150E8)) ^ v371;
  LODWORD(STACK[0x644]) = v372 - 1622078460 - ((2 * v372) & 0x3EA21808);
  LODWORD(STACK[0x410]) = v345 >> 22;
  v373 = HIBYTE(v345) ^ (v345 >> 17) ^ (v345 >> 22) ^ v367 ^ ((v344 ^ v328 ^ 0x1AD9C)
                                                            + 1548836722
                                                            - 2
                                                            * ((v344 ^ v328 ^ 0x1AD9C) & 0x15F73 ^ (v344 ^ v328) & 1));
  v374 = ((v373 ^ 0x3AC4) + 49320804 - 2 * ((v373 ^ 0x3AC4) & 0x2F09367 ^ v373 & 3)) ^ v362;
  v375 = (v374 + 1103094747 - ((2 * v374) & 0x37FC7B6)) ^ v335;
  v376 = (v375 + 30852711 - ((2 * v375) & 0x3AD8CCE)) ^ v361;
  v377 = (v376 - 884584916 - ((2 * v376) & 0x968C9C58)) ^ v364;
  v378 = (v377 - 817184451 - ((2 * v377) & 0x9E95827A)) ^ v330 ^ 0xCF441B47;
  LODWORD(STACK[0x40C]) = v331 ^ 0xA74883F;
  v379 = (v378 + 174669003 - ((2 * v378) & 0x14D27996)) ^ v331 ^ 0xA74883F;
  v380 = (v379 - 781388315 - ((2 * v379) & 0xA2D9EBCA)) ^ v353;
  v381 = (v357 >> 8) ^ 0x17CC254A;
  LODWORD(STACK[0x408]) = v381;
  v382 = v381 ^ (v357 >> 7) ^ (v380 + 398128795 - ((2 * v380) & 0x2F75ED36));
  v383 = LODWORD(STACK[0x67C]) + 1856055856;
  LODWORD(STACK[0x430]) = v383;
  LODWORD(v328) = v356 ^ v350 ^ v382;
  v384 = ((unint64_t)(v328 ^ 0x280766A) >> (((v382 & 0x7F ^ 0x5C)
                                                                                                  + (v382 & 0x7F ^ 0x23)) & ((v382 & 0x9B ^ 0x18) + (v382 & 0x9B ^ 0x83)))) ^ (v328 >> 21);
  v385 = LODWORD(STACK[0x6BC]) ^ (v357 << 8) ^ (v357 << 15) ^ ((v383 ^ 0x56361608 ^ LODWORD(STACK[0x6C8]))
                                                             - ((2 * (v383 ^ 0x56361608 ^ LODWORD(STACK[0x6C8]))) & 0x11DE1A3C)
                                                             + 149884170) ^ (4 * v328) ^ (32 * v328) ^ ((_DWORD)v328 << 11) ^ (4 * v384) ^ (32 * v384) ^ (v384 << 11) ^ 0x91DC71E3;
  v386 = (v385 + 1102258364 - ((2 * v385) & 0x83664178)) ^ LODWORD(STACK[0x6DC]);
  v387 = (v386 - 736548245 - ((2 * v386) & 0xA83254D6)) ^ LODWORD(STACK[0x698]);
  v388 = (v387 + 1126109392 - ((2 * v387) & 0x863E21A0)) ^ LODWORD(STACK[0x694]);
  v389 = (v388 + 1524873513 - ((2 * v388) & 0xB5C77252)) ^ LODWORD(STACK[0x6F8]);
  v390 = (v389 + 1327989479 - ((2 * v389) & 0x9E4F05CE)) ^ LODWORD(STACK[0x6E4]);
  v391 = (v390 - 70130138 - ((2 * v390) & 0xF7A3CC4C)) ^ LODWORD(STACK[0x700]);
  v392 = (v391 - 642431846 - ((2 * v391) & 0xB36A8934)) ^ LODWORD(STACK[0x6E0]);
  v393 = (v392 - 158101279 - ((2 * v392) & 0xED2721C2)) ^ v325;
  v394 = (v393 - 1066168811 - ((2 * v393) & 0x80E71C2A)) ^ LODWORD(STACK[0x6C0]);
  v395 = (v394 + 1910357928 - ((2 * v394) & 0xE3BB7F50)) ^ v326;
  v396 = (v395 + 738451433 - ((2 * v395) & 0x5807BFD2)) ^ LODWORD(STACK[0x6A0]);
  v397 = (v396 + 314441286 - ((2 * v396) & 0x257BFC8C)) ^ v327;
  v398 = (~((2 * v397) & 0xAE037646) + v397 + 1459731236) ^ LODWORD(STACK[0x688]);
  v399 = v328 ^ LODWORD(STACK[0x6E8]) ^ (v398 - 112182724 - ((2 * v398) & 0xF2A07478));
  v400 = v399 ^ v384;
  v401 = v399 ^ v384 ^ 0xF5A63341;
  v402 = ((4 * v401) ^ 0xDC9914FC) + 1256014438 + ~((2 * ((4 * v401) ^ 0xDC9914FC)) & 0x95BA84C8);
  LODWORD(STACK[0x448]) = v402;
  v403 = ((8 * v401) ^ 0xB93229F8) + 213382402 - ((2 * ((8 * v401) ^ 0xB93229F8)) & 0x196FEA00);
  LODWORD(STACK[0x440]) = v403;
  v404 = ((v401 << 11) ^ 0x3229F800) - 175124254 - ((2 * ((v401 << 11) ^ 0x3229F800)) & 0xEB1FA000);
  LODWORD(STACK[0x67C]) = v404;
  v405 = ((v401 << 18) ^ 0x14FC0000) - 673638207 - ((2 * ((v401 << 18) ^ 0x14FC0000)) & 0xAFB00000);
  LODWORD(STACK[0x670]) = v405;
  v406 = ((v401 << 21) ^ 0xA7E00000) - 1735849175 - ((2 * ((v401 << 21) ^ 0xA7E00000)) & 0x31000000);
  LODWORD(STACK[0x668]) = v406;
  v407 = v399 ^ v384 ^ 0xA59CCBE;
  LODWORD(STACK[0x3F4]) = v407 << 28;
  LODWORD(STACK[0x3F8]) = v407;
  v408 = (v407 << 27) + 492578488 - ((v407 << 28) & 0x30000000);
  LODWORD(STACK[0x42C]) = v408;
  v409 = ((v401 << 22) ^ 0x4FC00000) + 1961314027 - ((2 * ((v401 << 22) ^ 0x4FC00000)) & 0xE9800000);
  LODWORD(STACK[0x420]) = v409;
  v410 = ((v401 << 23) ^ 0x9F800000) + 404700299 - ((2 * ((v401 << 23) ^ 0x9F800000)) & 0x30000000);
  LODWORD(STACK[0x41C]) = v410;
  v411 = (v407 << 26) - 1044004503 + ((v407 << 27) & 0x80000000);
  LODWORD(STACK[0x654]) = v411;
  v412 = ((v401 << 7) ^ 0x93229F80) + 1166489273 - ((2 * ((v401 << 7) ^ 0x93229F80)) & 0x8B0E6D00);
  LODWORD(STACK[0x3F0]) = v412;
  v413 = ((v401 << 10) ^ 0x9914FC00) - 1856671375 - ((2 * ((v401 << 10) ^ 0x9914FC00)) & 0x22AAE000);
  LODWORD(STACK[0x3EC]) = v413;
  v414 = ((v401 << 13) ^ 0xC8A7E000) + 1826242066 - ((2 * ((v401 << 13) ^ 0xC8A7E000)) & 0xD9B44000);
  LODWORD(STACK[0x3E8]) = v414;
  v415 = ((v401 << 16) ^ 0x453F0000) + 251477261 - ((2 * ((v401 << 16) ^ 0x453F0000)) & 0x1DFA0000);
  LODWORD(STACK[0x3E4]) = v415;
  v416 = ((v401 << 20) ^ 0x53F00000) - 1843874823 - ((2 * ((v401 << 20) ^ 0x53F00000)) & 0x24200000);
  LODWORD(STACK[0x3E0]) = v416;
  v417 = ((v401 << 25) ^ 0x7E000000) - 1107327915 - ((2 * ((v401 << 25) ^ 0x7E000000)) & 0x78000000);
  LODWORD(STACK[0x3DC]) = v417;
  LODWORD(STACK[0x650]) = v401;
  LODWORD(v328) = ((v399 ^ v384) << 24) ^ (v401 << 15) ^ (v401 << 8) ^ 0x7ADABF00;
  LODWORD(v328) = (v328 + 213382402 - ((2 * v328) & 0x196FEA00)) ^ v403;
  LODWORD(v328) = (~((2 * v328) & 0x95BA84CA) + v328 + 1256014438) ^ v402;
  LODWORD(v328) = (v328 + 1166489273 - ((2 * v328) & 0x8B0E6D72)) ^ v412;
  LODWORD(v328) = (v328 - 1856671375 - ((2 * v328) & 0x22AAE2E2)) ^ v413;
  LODWORD(v328) = (v328 + 1826242066 - ((2 * v328) & 0xD9B47C24)) ^ v414;
  LODWORD(v328) = (v328 - 175124254 - ((2 * v328) & 0xEB1FA1C4)) ^ v404;
  LODWORD(v328) = (v328 + 251477261 - ((2 * v328) & 0x1DFA7A1A)) ^ v415;
  LODWORD(v328) = (v328 - 673638207 - ((2 * v328) & 0xAFB23182)) ^ v405;
  LODWORD(v328) = (v328 - 1843874823 - ((2 * v328) & 0x243167F2)) ^ v416;
  LODWORD(v328) = (v328 - 1735849175 - ((2 * v328) & 0x31121652)) ^ v406;
  LODWORD(v328) = (v328 + 1961314027 - ((2 * v328) & 0xE9CE8DD6)) ^ v409;
  LODWORD(STACK[0x3FC]) = v399;
  LODWORD(STACK[0x64C]) = v399 ^ v384;
  v418 = HIBYTE(v399) ^ 0x28134 ^ (v399 >> 17) ^ ((v399 ^ v384) >> 8);
  v419 = (v399 >> 29) ^ 0x75A21237 ^ (v399 >> 30);
  LODWORD(STACK[0x398]) = v419;
  v420 = (v418 + 1973555767 - ((2 * v418) & 0x144246E)) ^ v419;
  v421 = (v399 >> 25) ^ 0xBAC56269;
  LODWORD(STACK[0x3C8]) = v421;
  v422 = (v420 - 1161469336 - ((2 * v420) & 0x758AC4D0)) ^ v421;
  v423 = (v399 >> 21) ^ 0x9380EDB6;
  LODWORD(STACK[0x3C4]) = v423;
  v424 = (v422 - 1820267102 - ((2 * v422) & 0x2701DB44)) ^ v423;
  v425 = (v399 >> 22) ^ 0x8EE7D7E3;
  LODWORD(STACK[0x3B4]) = v425;
  v426 = (v424 - 1897408535 - ((2 * v424) & 0x1DCFAFD2)) ^ v425;
  LODWORD(STACK[0x2CC]) = v399 >> 19;
  v427 = (v399 >> 19) ^ 0x811DFD88;
  LODWORD(STACK[0x3C0]) = v427;
  v428 = (v426 - 2128740904 - ((2 * v426) & 0x23BFBB0)) ^ v427;
  v429 = HIWORD(v399) ^ 0xFD7E77CC;
  LODWORD(STACK[0x3BC]) = v429;
  v430 = (v428 - 42044084 - ((2 * v428) & 0xFAFCEA98)) ^ v429;
  v431 = (v399 >> 14) ^ 0x72EDF17A;
  LODWORD(STACK[0x3B8]) = v431;
  v432 = (v430 + 1928199035 - ((2 * v430) & 0xE5DBF6F6)) ^ v431;
  v433 = (v399 >> 11) ^ 0x135291D2;
  LODWORD(STACK[0x3AC]) = v433;
  v434 = (v432 + 324190684 - ((2 * v432) & 0x26A583B8)) ^ v433;
  v435 = (v399 >> 12) ^ 0x4BFA230F;
  LODWORD(STACK[0x3B0]) = v435;
  v436 = (v434 + 1274678024 - ((2 * v434) & 0x97F41610)) ^ v435;
  v437 = (v400 >> 10) ^ 0x30392C56;
  LODWORD(STACK[0x2C8]) = v437;
  v438 = (v436 + 809077835 - ((2 * v436) & 0x60731896)) ^ v437;
  LODWORD(v328) = (v328 + 404700299 - ((2 * v328) & 0x303E7916)) ^ v410;
  v439 = (v400 >> 9) ^ 0xCC16E2D3;
  LODWORD(STACK[0x2C4]) = v439;
  v440 = (v438 - 870866200 - ((2 * v438) & 0x982F45D0)) ^ v439;
  v441 = (v400 >> 7) ^ 0x87CE79E4;
  LODWORD(STACK[0x2D0]) = v441;
  v442 = (v440 - 2016708344 - ((2 * v440) & 0xF96F210)) ^ v441;
  LODWORD(v328) = (v328 - 1107327915 - ((2 * v328) & 0x7BFF08AA)) ^ v417;
  v443 = v328 - 1044004503 - ((2 * v328) & 0x838B82D2);
  LODWORD(STACK[0x2C0]) = v401 >> 5;
  v444 = (v400 >> 6) ^ 0xDBA760D0;
  LODWORD(STACK[0x39C]) = v444;
  LODWORD(v328) = (v401 >> 5) ^ v444 ^ (v442 - 609394423 - ((2 * v442) & 0xB75AC212));
  v445 = STACK[0x5B4];
  v446 = LODWORD(STACK[0x680]) ^ LODWORD(STACK[0x644]);
  v447 = (LODWORD(STACK[0x570]) >> 31) ^ (v446 >> 21) ^ (v446 >> 27);
  v448 = (LODWORD(STACK[0x5B4]) << 12) ^ (LODWORD(STACK[0x5B4]) << 31) ^ v408 ^ (4 * v328) ^ (32 * v328) ^ ((_DWORD)v328 << 11) ^ (v328 >> 21) ^ (32 * (v328 >> 21)) ^ (v328 >> 21 << 11) ^ (((4 * (v328 >> 21)) ^ 0xF4) + 1622310128 + (~(2 * ((4 * (v328 >> 21)) ^ 0xF4)) | 0xFFFFC627)) ^ ((v443 ^ v411) + 492578488 - ((2 * (v443 ^ v411)) & 0x3AB84D70)) ^ (4 * v446) ^ (32 * v446) ^ (v446 << 11) ^ (4 * v447) ^ (32 * v447) ^ (v447 << 11) ^ 0xE40736AE;
  v449 = (v448 + 1354432918 - ((2 * v448) & 0xA176032C)) ^ LODWORD(STACK[0x6B0]);
  v450 = (v449 - 642431846 - ((2 * v449) & 0xB36A8934)) ^ LODWORD(STACK[0x6E0]);
  v451 = (v450 + 1892574160 - ((2 * v450) & 0xE19CC7A0)) ^ LODWORD(STACK[0x6A8]);
  v452 = (v451 + 1102258364 - ((2 * v451) & 0x83664178)) ^ LODWORD(STACK[0x6DC]);
  v453 = LODWORD(STACK[0x5B4]) ^ 0x2C1A11FC;
  LODWORD(STACK[0x2A4]) = v453;
  v454 = (v452 + 1523171372 - ((2 * v452) & 0xB5938058)) ^ v453;
  v455 = (v454 + 1524873513 - ((2 * v454) & 0xB5C77252)) ^ LODWORD(STACK[0x6F8]);
  v456 = (v455 + 1327989479 - ((2 * v455) & 0x9E4F05CE)) ^ LODWORD(STACK[0x6E4]);
  v457 = (v456 - 70130138 - ((2 * v456) & 0xF7A3CC4C)) ^ LODWORD(STACK[0x700]);
  v458 = (v457 - 158101279 - ((2 * v457) & 0xED2721C2)) ^ LODWORD(STACK[0x658]);
  v459 = (v458 - 1066168811 - ((2 * v458) & 0x80E71C2A)) ^ LODWORD(STACK[0x6C0]);
  v460 = (v459 + 1910357928 - ((2 * v459) & 0xE3BB7F50)) ^ LODWORD(STACK[0x660]);
  v461 = (v460 - 1198048200 - ((2 * v460) & 0x712E7870)) ^ LODWORD(STACK[0x6C8]);
  v462 = (v461 - 112182724 - ((2 * v461) & 0xF2A07478)) ^ LODWORD(STACK[0x6E8]);
  v463 = LODWORD(STACK[0x648]) + 1892002226;
  LODWORD(STACK[0x2A0]) = v445 << 29;
  v464 = v463 - (v445 << 29);
  LODWORD(STACK[0x2A8]) = v464;
  v465 = (v462 + 1892002226 - ((2 * v462) & 0xE18B5364)) ^ v464;
  v466 = STACK[0x4A4];
  v467 = (v465 - ((2 * v465) & 0xE1F96436) - 251874789) ^ LODWORD(STACK[0x4A4]);
  v468 = v446 ^ 0x6193A769 ^ ((v467 ^ 0xCBFD6658) + 1727961716 - 2 * ((v467 ^ 0xCBFD6658) & 0x66FE9A77 ^ v467 & 3));
  v469 = (v468 - ((2 * v468) & 0xCC15BA3C) + 1711987998) ^ v328;
  LODWORD(STACK[0x3D8]) = v469;
  LODWORD(v328) = v469 ^ v447;
  v470 = ((8 * (v469 ^ v447)) ^ 0xD9F7860) + 1046458619 - ((2 * ((8 * (v469 ^ v447)) ^ 0xD9F7860)) & 0x7CBF61F0);
  LODWORD(STACK[0x3D0]) = v470;
  v471 = ((4 * (v469 ^ v447)) ^ 0x86CFBC30) - 1675374659 - ((2 * ((4 * (v469 ^ v447)) ^ 0x86CFBC30)) & 0x38479F78);
  LODWORD(STACK[0x3CC]) = v471;
  v472 = (a41 ^ ((v469 ^ v447) << 7)) + 177636609 - ((2 * (a41 ^ ((v469 ^ v447) << 7))) & 0x152D0A00);
  LODWORD(STACK[0x648]) = v472;
  v473 = (((v469 ^ v447) << 10) ^ 0xCFBC3000) + 534777639 - ((2 * (((v469 ^ v447) << 10) ^ 0xCFBC3000)) & 0x3FC01800);
  LODWORD(STACK[0x644]) = v473;
  v474 = (((v469 ^ v447) << 14) ^ 0xFBC30000) - 2051170925 - ((2 * (((v469 ^ v447) << 14) ^ 0xFBC30000)) & 0xB7B0000);
  LODWORD(STACK[0x2B8]) = v474;
  v475 = (((v469 ^ v447) << 13) ^ 0x7DE18000) + 1116196823 - ((2 * (((v469 ^ v447) << 13) ^ 0x7DE18000)) & 0x850F8000);
  LODWORD(STACK[0x3A8]) = v475;
  v476 = (((v469 ^ v447) << 20) ^ 0xF0C00000) + 931616147 - ((2 * (((v469 ^ v447) << 20) ^ 0xF0C00000)) & 0x6F000000);
  LODWORD(STACK[0x640]) = v476;
  v477 = (((v469 ^ v447) << 16) ^ 0xEF0C0000) + 265499483 - ((2 * (((v469 ^ v447) << 16) ^ 0xEF0C0000)) & 0x1FA60000);
  LODWORD(STACK[0x3A4]) = v477;
  v478 = (((v469 ^ v447) << 22) ^ 0xC3000000) - 1554261568 - ((2 * (((v469 ^ v447) << 22) ^ 0xC3000000)) & 0x46800000);
  LODWORD(STACK[0x3A0]) = v478;
  v479 = (2 * (v469 ^ v447)) ^ ((v469 ^ v447) << 6) ^ ((v469 ^ v447) << 17) ^ 0x71841D18;
  v480 = v479 + LODWORD(STACK[0x394]) - ((2 * v479) & 0xDA1BCD08);
  LODWORD(STACK[0x2B4]) = v328 ^ 0xCBE0989;
  LODWORD(STACK[0x3D4]) = v328;
  v481 = ((v480 ^ v328 ^ 0xCBE0989) - 1675374659 - ((2 * (v480 ^ v328 ^ 0xCBE0989)) & 0x38479F7A)) ^ v471;
  v482 = (v481 + 1046458619 - ((2 * v481) & 0x7CBF61F6)) ^ v470;
  v483 = (v482 + 177636609 - ((2 * v482) & 0x152D0A02)) ^ v472;
  v484 = (v483 + 534777639 - ((2 * v483) & 0x3FC01E4E)) ^ v473;
  v485 = (v484 + 1116196823 - ((2 * v484) & 0x850F9FAE)) ^ v475;
  v486 = (v485 - 2051170925 - ((2 * v485) & 0xB7B3B26)) ^ v474;
  v487 = (((_DWORD)v328 << 24) ^ 0xC000000) + 2143776906 - 2 * (((_DWORD)v328 << 24) ^ 0xC000000);
  LODWORD(STACK[0x2BC]) = v487;
  v488 = (v486 + 265499483 - ((2 * v486) & 0x1FA666B6)) ^ v477;
  v489 = (v488 + 931616147 - ((2 * v488) & 0x6F0EAB26)) ^ v476;
  LODWORD(v328) = (((_DWORD)v328 << 25) ^ 0x18000000)
                - 1150884746
                - ((2 * (((_DWORD)v328 << 25) ^ 0x18000000)) & 0x77777777);
  LODWORD(STACK[0x638]) = v328;
  v490 = v478 ^ v487 ^ (v489 - 1554261568 - ((2 * v489) & 0x46B7B380));
  LODWORD(STACK[0x2B0]) = v490;
  v491 = ((-2 - v328) & 0x8000000 ^ 0xFFEDFFAE) + 2 * ((-2 - v328) & 0x8000000);
  LODWORD(STACK[0x2AC]) = v491;
  v320 = ((v490 ^ 0x78000000) & (v491 + 1179730)) == 0;
  v492 = STACK[0x480];
  v493 = LODWORD(STACK[0x620]) ^ (LODWORD(STACK[0x4A0]) >> 26) ^ (LODWORD(STACK[0x480]) >> 3) ^ LODWORD(STACK[0x32C]) ^ LODWORD(STACK[0x330]) ^ 0x1F219A3D;
  v494 = (v493 - 1536424625 - ((2 * v493) & 0x8D80A9E)) ^ LODWORD(STACK[0x478]);
  v495 = (((v494 - 226766975 - ((2 * v494) & 0xE4F79F02)) ^ LODWORD(STACK[0x33C]))
        + 184685427
        - 2
        * (((v494 - 226766975 - ((2 * v494) & 0xE4F79F02)) ^ LODWORD(STACK[0x33C])) & 0xB02137B ^ (v494
                                                                                                 - 226766975
                                                                                                 - ((2 * v494) & 0xE4F79F02)) & 8)) ^ LODWORD(STACK[0x464]);
  v496 = (v495 - 1723255263 - ((2 * v495) & 0x32926C42)) ^ LODWORD(STACK[0x45C]);
  v497 = (v496 - 1739998249 - ((2 * v496) & 0x309377AE)) ^ LODWORD(STACK[0x46C]);
  v498 = (v497 - 215732688 - ((2 * v497) & 0xE6485C60)) ^ LODWORD(STACK[0x468]);
  v499 = (v498 - 588087370 - ((2 * v498) & 0xB9E4FF6C)) ^ LODWORD(STACK[0x460]);
  v500 = (v499 + 257992319 - ((2 * v499) & 0x1EC14CFE)) ^ LODWORD(STACK[0x338]);
  v501 = (v500 + 375560447 - ((2 * v500) & 0x2CC531FE)) ^ LODWORD(STACK[0x458]);
  v502 = (v501 + 1319084048 - ((2 * v501) & 0x9D3F4020)) ^ LODWORD(STACK[0x334]);
  v503 = LODWORD(STACK[0x62C]) ^ (v502 + 1994072780 - ((2 * v502) & 0xEDB64598));
  v504 = (LODWORD(STACK[0x6F0]) + 1909990441) & 0x8E27DF7B;
  LODWORD(STACK[0x4A0]) = v504;
  v505 = (v503 >> 21) ^ (v503 >> 27);
  v506 = (v492 << 29) ^ (v492 << 6) ^ LODWORD(STACK[0x340]) ^ LODWORD(STACK[0x474]) ^ LODWORD(STACK[0x470]) ^ (4 * v503) ^ (32 * v503) ^ (v503 << 11) ^ v505 ^ (4 * v505) ^ (32 * v505) ^ (v505 << 11) ^ (v492 << (v504 - 122));
  v507 = ((v506 ^ 0xB7DC6C0) - 1729204323 - 2 * ((v506 ^ 0xB7DC6C0) & 0x18EE6F9F ^ v506 & 2)) ^ LODWORD(STACK[0x450]);
  v508 = (v507 + 282347580 - ((2 * v507) & 0x21A89078)) ^ LODWORD(STACK[0x48C]);
  v509 = (v508 - 2140854148 - ((2 * v508) & 0xCA50F8)) ^ LODWORD(STACK[0x348]);
  v510 = (v509 - 155263421 - ((2 * v509) & 0xED7DBC86)) ^ LODWORD(STACK[0x568]);
  v511 = (v510 - 2109315831 - ((2 * v510) & 0x48CCA12)) ^ LODWORD(STACK[0x564]);
  v512 = (v511 - 908769001 - ((2 * v511) & 0x93AA922E)) ^ LODWORD(STACK[0x488]);
  v513 = (v512 - 1334420178 - ((2 * v512) & 0x60ECBA5C)) ^ LODWORD(STACK[0x484]);
  v514 = (v513 - 1074436271 - ((2 * v513) & 0x7FEACEA2)) ^ LODWORD(STACK[0x558]);
  v515 = (v514 + 927682850 - ((2 * v514) & 0x6E96A244)) ^ LODWORD(STACK[0x344]);
  v516 = (v515 - 303119220 - ((2 * v515) & 0xDBDD8918)) ^ LODWORD(STACK[0x560]);
  v517 = (v516 - 1904376733 - ((2 * v516) & 0x1CFB08C6)) ^ LODWORD(STACK[0x550]);
  v518 = (v517 + 276721852 - ((2 * v517) & 0x20FCE178)) ^ LODWORD(STACK[0x47C]);
  v519 = (v518 - ((2 * v518) & 0xA17F9628) + 1354746644) ^ v503;
  LODWORD(STACK[0x458]) = v519;
  LODWORD(STACK[0x568]) = (LODWORD(STACK[0x324]) ^ (-1673081951 * LODWORD(STACK[0x2DC])
                                                  - 454042217
                                                  - ((948803394 * LODWORD(STACK[0x2DC]) + 968328188) & 0x90283732)))
                        + LODWORD(STACK[0x2F0]);
  v520 = -1673081951 * LODWORD(STACK[0x2D4])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x2D4]) + 968328188) & 0x5CD4F1FA);
  LODWORD(v328) = -1673081951 * LODWORD(STACK[0x2E0])
                + 310404763
                - ((948803394 * LODWORD(STACK[0x2E0]) + 968328188) & 0xEB49493A);
  v521 = -1673081951 * LODWORD(STACK[0x2E4])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x2E4]) + 968328188) & 0x5CD4F1FA);
  v522 = -1673081951 * LODWORD(STACK[0x2E8])
       + 310404763
       - ((948803394 * LODWORD(STACK[0x2E8]) + 968328188) & 0xEB49493A);
  v523 = -1673081951 * LODWORD(STACK[0x2EC])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x2EC]) + 968328188) & 0x5CD4F1FA);
  v524 = -1673081951 * LODWORD(STACK[0x2F8])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x2F8]) + 968328188) & 0x5CD4F1FA);
  v525 = -1673081951 * LODWORD(STACK[0x2F4])
       + 310404763
       - ((948803394 * LODWORD(STACK[0x2F4]) + 968328188) & 0xEB49493A);
  v526 = -1673081951 * LODWORD(STACK[0x2FC])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x2FC]) + 968328188) & 0x5CD4F1FA);
  v527 = -1673081951 * LODWORD(STACK[0x300])
       + 310404763
       - ((948803394 * LODWORD(STACK[0x300]) + 968328188) & 0xEB49493A);
  v528 = -1673081951 * LODWORD(STACK[0x304])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x304]) + 968328188) & 0x5CD4F1FA);
  v529 = -1673081951 * LODWORD(STACK[0x308])
       + 310404763
       - ((948803394 * LODWORD(STACK[0x308]) + 968328188) & 0xEB49493A);
  v530 = -1673081951 * LODWORD(STACK[0x30C])
       + 310404763
       - ((948803394 * LODWORD(STACK[0x30C]) + 968328188) & 0xEB49493A);
  v531 = -1673081951 * LODWORD(STACK[0x310])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x310]) + 968328188) & 0x5CD4F1FA);
  v532 = -1673081951 * LODWORD(STACK[0x314])
       + 310404763
       - ((948803394 * LODWORD(STACK[0x314]) + 968328188) & 0xEB49493A);
  v533 = STACK[0x320];
  LODWORD(STACK[0x564]) = LODWORD(STACK[0x320]) ^ (-1673081951 * LODWORD(STACK[0x2D8])
                                                 + 310404763
                                                 - ((948803394 * LODWORD(STACK[0x2D8]) + 968328188) & 0xEB49493A));
  LODWORD(STACK[0x558]) = v533 ^ v328;
  LODWORD(STACK[0x550]) = v533 ^ v522;
  LODWORD(STACK[0x484]) = v533 ^ v525;
  LODWORD(STACK[0x480]) = v533 ^ v527;
  LODWORD(STACK[0x474]) = v533 ^ v529;
  LODWORD(STACK[0x468]) = v533 ^ v530;
  LODWORD(STACK[0x470]) = v533 ^ v532;
  v534 = -1673081951 * LODWORD(STACK[0x318])
       + 1262893819
       - ((948803394 * LODWORD(STACK[0x318]) + 968328188) & 0x5CD4F1FA);
  LODWORD(v328) = STACK[0x328];
  LODWORD(STACK[0x560]) = LODWORD(STACK[0x328]) ^ v520;
  LODWORD(STACK[0x48C]) = v328 ^ v521;
  LODWORD(STACK[0x488]) = v328 ^ v523;
  LODWORD(STACK[0x46C]) = v328 ^ v524;
  LODWORD(STACK[0x47C]) = v328 ^ v526;
  LODWORD(STACK[0x478]) = v328 ^ v528;
  LODWORD(STACK[0x464]) = v328 ^ v531;
  LODWORD(STACK[0x460]) = v328 ^ v534;
  v535 = (LODWORD(STACK[0x4C0]) >> 28) ^ (LODWORD(STACK[0x4C0]) >> 27) ^ (LODWORD(STACK[0x4BC]) >> 4) ^ (LODWORD(STACK[0x4BC]) >> 2);
  v536 = ((LODWORD(STACK[0x630]) ^ 0x31D3F087 ^ v535)
        + 1622960011
        - ((2 * (LODWORD(STACK[0x630]) ^ 0x31D3F087 ^ v535)) & 0x4178CF16)) ^ LODWORD(STACK[0x49C]);
  v537 = (v536 - 1178655493 - ((2 * v536) & 0x737E49F6)) ^ LODWORD(STACK[0x56C]);
  v538 = (v537 + 1173228066 - ((2 * v537) & 0x8BDC1444)) ^ LODWORD(STACK[0x354]);
  v539 = (v538 + 168209812 - ((2 * v538) & 0x140D5B28)) ^ LODWORD(STACK[0x35C]);
  v540 = (v539 + 457287646 - ((2 * v539) & 0x36834FBC)) ^ LODWORD(STACK[0x350]);
  v541 = (v540 - 2126568474 - ((2 * v540) & 0x27E47CC)) ^ LODWORD(STACK[0x34C]);
  v542 = (v541 + 2067502377 - ((2 * v541) & 0xF6772A52)) ^ LODWORD(STACK[0x490]);
  v543 = (v542 - 304012070 - ((2 * v542) & 0xDBC249B4)) ^ LODWORD(STACK[0x4B4]);
  v544 = (v543 - 451818368 - ((2 * v543) & 0xCA239900)) ^ LODWORD(STACK[0x624]);
  v545 = LODWORD(STACK[0x5DC]) ^ (v544 + 1928983810 - ((2 * v544) & 0xE5F3EA04));
  v546 = (v545 >> 21) ^ (v535 >> 27);
  LODWORD(v328) = ((LODWORD(STACK[0x5E0]) ^ (LODWORD(STACK[0x598]) >> 26) ^ 7)
                 - 1570445227
                 - 2
                 * ((LODWORD(STACK[0x5E0]) ^ (LODWORD(STACK[0x598]) >> 26) ^ 7) & 0x35 ^ (LODWORD(STACK[0x598]) >> 26) & 0x20)) ^ LODWORD(STACK[0x370]);
  LODWORD(v328) = (v328 + 367733366 - ((2 * v328) & 0x2BD654EC)) ^ LODWORD(STACK[0x374]);
  LODWORD(v328) = (v328 + 1630027466 - ((2 * v328) & 0x42507D94)) ^ LODWORD(STACK[0x4CC]);
  LODWORD(v328) = (v328 - 489680791 - ((2 * v328) & 0x45A020D2)) ^ LODWORD(STACK[0x4D0]);
  LODWORD(v328) = (v328 - 330442696 - ((2 * v328) & 0x589BB070)) ^ LODWORD(STACK[0x4DC]);
  LODWORD(v328) = (v328 - 1425524170 - ((2 * v328) & 0x5610746C)) ^ LODWORD(STACK[0x4D8]);
  LODWORD(v328) = (v328 - 1793119797 - ((2 * v328) & 0x2A3E5396)) ^ LODWORD(STACK[0x4C8]);
  LODWORD(v328) = (v328 - 884494795 - ((2 * v328) & 0x168F5C6A)) ^ LODWORD(STACK[0x4C4]);
  LODWORD(v328) = (v328 + 128855488 - ((2 * v328) & 0xF5C5B80)) ^ LODWORD(STACK[0x378]);
  LODWORD(v328) = (v328 - 562841354 - ((2 * v328) & 0xBCE771EC)) ^ LODWORD(STACK[0x36C]);
  LODWORD(v328) = LODWORD(STACK[0x634]) ^ 0x3DB1DE ^ (v328 - 482321761 - ((2 * v328) & 0xC680B53E));
  LODWORD(v328) = v328 + (LODWORD(STACK[0x368]) ^ 0x7B63BC) - 2 * (v328 & (LODWORD(STACK[0x368]) ^ 0x7B63BC));
  v547 = v328 - 992138460 - ((2 * v328) & 0x89BA5648);
  LODWORD(v328) = (((LODWORD(STACK[0x598]) >> 3) ^ 0x3DB1DE4)
                 - 992138460
                 - 2 * (((LODWORD(STACK[0x598]) >> 3) ^ 0x3DB1DE4) & 0x4DD2B2D ^ (LODWORD(STACK[0x598]) >> 3) & 9)) ^ LODWORD(STACK[0x4D4]) ^ v547;
  v548 = 16 * LODWORD(STACK[0x4BC]);
  v549 = (32 * LODWORD(STACK[0x4BC])) ^ (LODWORD(STACK[0x4BC]) << 30) ^ v548 ^ 0x91B49820;
  v550 = (v549 + 497819470 - 2 * (v549 & 0x1DAC1F50 ^ v548 & 0x10)) ^ LODWORD(STACK[0x61C]);
  v551 = (v550 + 802431179 - ((2 * v550) & 0x5FA84196)) ^ LODWORD(STACK[0x608]);
  v552 = (v551 + 623960126 - ((2 * v551) & 0x4A61C07C)) ^ LODWORD(STACK[0x574]);
  v553 = (v552 + 2102862010 - ((2 * v552) & 0xFAAE4174)) ^ LODWORD(STACK[0x4B8]);
  v554 = (v553 - 1715987393 - ((2 * v553) & 0x3370387E)) ^ LODWORD(STACK[0x364]);
  v555 = (v554 + 816394346 - ((2 * v554) & 0x615260D4)) ^ LODWORD(STACK[0x4AC]);
  v556 = (v555 + 428015254 - ((2 * v555) & 0x3305FD2C)) ^ LODWORD(STACK[0x358]);
  v557 = (v556 - 1611662723 - ((2 * v556) & 0x3FDFF4FA)) ^ LODWORD(STACK[0x4A8]);
  v558 = (v557 + 1600385618 - ((2 * v557) & 0xBEC7E4A4)) ^ LODWORD(STACK[0x578]);
  v559 = (v558 - 294606301 - ((2 * v558) & 0xDCE15446)) ^ LODWORD(STACK[0x610]);
  v560 = (v559 - 1835037886 - ((2 * v559) & 0x253F1684)) ^ LODWORD(STACK[0x4B0]);
  v561 = (v560 - 1056429211 - ((2 * v560) & 0x821056CA)) ^ LODWORD(STACK[0x604]);
  v562 = (v328 >> 27) ^ (~v547 >> 30) ^ (v328 >> 21);
  v563 = (~LODWORD(STACK[0x5A0]) << 29) ^ (LODWORD(STACK[0x598]) << 6) ^ (2 * LODWORD(STACK[0x598])) ^ (4 * v328) ^ (32 * v328) ^ ((_DWORD)v328 << 11) ^ (4 * v562) ^ (32 * v562) ^ (v562 << 11) ^ LODWORD(STACK[0x360]) ^ (4 * v545) ^ (32 * v545) ^ (v545 << 11) ^ (4 * v546) ^ (32 * v546) ^ (v546 << 11) ^ (v561 - 2006349377 - ((2 * v561) & 0x10D3137E)) ^ 0xEA9F63DA;
  v564 = (v563 + 457361473 - ((2 * v563) & 0x36859082)) ^ LODWORD(STACK[0x454]);
  v565 = (v564 + 1421232705 - ((2 * v564) & 0xA96C9482)) ^ LODWORD(STACK[0x37C]);
  v566 = (v565 - 54395989 - ((2 * v565) & 0xF983F756)) ^ LODWORD(STACK[0x380]);
  v567 = (v566 - 67409416 - ((2 * v566) & 0xF7F6D3F0)) ^ LODWORD(STACK[0x59C]);
  v568 = (v567 - 1974680915 - ((2 * v567) & 0x1499855A)) ^ LODWORD(STACK[0x594]);
  v569 = (v568 - 1151663805 - ((2 * v568) & 0x76B60286)) ^ LODWORD(STACK[0x4EC]);
  v570 = (v569 + 1233944225 - ((2 * v569) & 0x9318FD42)) ^ LODWORD(STACK[0x4E4]);
  v571 = (v570 + 1980948394 - ((2 * v570) & 0xEC25BF54)) ^ LODWORD(STACK[0x58C]);
  v572 = (v571 - 397025475 - ((2 * v571) & 0xD0ABBE7A)) ^ LODWORD(STACK[0x384]);
  v573 = (v572 + 339816139 - ((2 * v572) & 0x28825D96)) ^ LODWORD(STACK[0x590]);
  v574 = (v573 - 895998413 - ((2 * v573) & 0x95304C66)) ^ LODWORD(STACK[0x4E8]);
  v575 = (v574 + 505935370 - ((2 * v574) & 0x3C4FEC14)) ^ LODWORD(STACK[0x4E0]);
  v576 = (v575 + 1671822981 - ((2 * v575) & 0xC74BFD0A)) ^ LODWORD(STACK[0x580]);
  v577 = (v576 - 602716076 - ((2 * v576) & 0xB82690A8)) ^ LODWORD(STACK[0x588]);
  v578 = (v577 + 387364055 - ((2 * v577) & 0x2E2D69AE)) ^ LODWORD(STACK[0x584]);
  LODWORD(v328) = v328 ^ 0x59196FAC ^ (v578 - ((2 * v578) & 0xB1E9C2BC) + 1492443486);
  LODWORD(v328) = v562 ^ 0x35AF8AFC ^ (v328 + 900696819 - ((2 * v328) & 0x6B5F15E6));
  v579 = v545 ^ 0x4492F7BA ^ (v328 - ((2 * v328) & 0x886DB37E) + 1144445375);
  v580 = (v579 - ((2 * v579) & 0x2CA315AE) - 1773040937) ^ v546;
  LODWORD(STACK[0x490]) = v580;
  v581 = (unsigned __int8 *)STACK[0x708];
  v582 = ((*(unsigned __int8 *)(STACK[0x708] + 956) ^ 0xE6) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + 653) ^ 0xB0) << 8) | *(unsigned __int8 *)(STACK[0x708] + 350) ^ 0xB0;
  LODWORD(v328) = *(unsigned __int8 *)(STACK[0x708] + 170) ^ 0xE6;
  v583 = v328 | ((*(unsigned __int8 *)(STACK[0x708] + 473) ^ 0xE6) << 8);
  v584 = v583 - 2 * (v583 & 0xFFFFBFFF ^ v328 & 0x38) - 151142457;
  LODWORD(v328) = (v584 & 0xB4F6FFFF ^ 0xF7FDBFC7)
                - 122913829
                + ((2 * (v584 & 0xB4F6FFFF ^ 0xF7FDBFC7)) & 0x6148F7B4 ^ 0x7FEFFFFF);
  v585 = (((_DWORD)v328 << 8) ^ 0xAC7BDA00) - ((2 * (((_DWORD)v328 << 8) ^ 0xAC7BDA00)) & 0x70AE6000) + 945238218;
  v586 = *(unsigned __int8 *)(STACK[0x708] + 709) ^ 0xE6 ^ (((((unsigned __int16)v584 ^ 0xBFC7)
                                                            + 31707
                                                            + ~((2 * ((unsigned __int16)v584 ^ 0xBFC7)) & 0xF7B4)) & 0x7A56 ^ 0x7A52)
                                                          + (v584 & 0x7A56 ^ 0x4010));
  LOWORD(v328) = ((LODWORD(STACK[0x5A8]) + 5496) | 0x4CC2) - ((LODWORD(STACK[0x5A8]) + 5496) & 0xB33D);
  LODWORD(STACK[0x4EC]) = *(unsigned __int8 *)(STACK[0x708] + 529) ^ 0xE6 | ((v585 ^ 0x5730CA | *(unsigned __int8 *)(STACK[0x708] + 832) ^ 0xE6) << 8);
  LODWORD(STACK[0x4B0]) = v581[47] ^ 0xE6 | (v582 << 8);
  LODWORD(STACK[0x4E8]) = (v586 << 16) | ((v581[406] ^ 0xE6) << 8) | v581[103] ^ 0xE6;
  LODWORD(STACK[0x588]) = v581[585] ^ 0xE6 | ((v581[888] ^ 0xE6) << 8) | ((v581[(unsigned __int16)(v328
                                                                                                 + (v585 & 0xB400 ^ 0x841F)
                                                                                                 + (v585 & 0xB400 ^ 0x3000)
                                                                                                 + 1)] ^ 0xE6) << 16);
  v587 = ((v581[641] ^ 0xE6) << 8) | ((v581[944] ^ 0xE6) << 16);
  LODWORD(STACK[0x4D4]) = v581[518] ^ 0xE6 | ((((v581[159] ^ 0xE6) << 8) | ((v581[462] ^ 0xE6) << 16) | v581[821] ^ 0xE6) << 8);
  v588 = v587 | v581[338] ^ 0xE6;
  v589 = ((v581[877] ^ 0xE6) << 8) | ((v581[215] ^ 0xE6) << 16);
  LODWORD(STACK[0x4B4]) = v581[35] ^ 0xE6 | (v588 << 8);
  LODWORD(STACK[0x4E0]) = v589 | v581[574] ^ 0xE6;
  LODWORD(STACK[0x4C0]) = v581[753] ^ 0xE6 | ((((v581[394] ^ 0xE6) << 8) | ((v581[697] ^ 0xE6) << 16) | v581[91] ^ 0xE6) << 8);
  LODWORD(STACK[0x590]) = v581[24] ^ 0xE6 | ((((v581[933] ^ 0xE6) << 16) | ((v581[630] ^ 0xE6) << 8) | v581[327] ^ 0xE6) << 8);
  LODWORD(STACK[0x574]) = v581[506] ^ 0xE6 | ((v581[809] ^ 0xE6 | ((v581[450] ^ 0xE6) << 16) | ((v581[147] ^ 0xE6) << 8)) << 8);
  v590 = ((v581[203] ^ 0xE6) << 16) | ((v581[865] ^ 0xE6) << 8);
  LODWORD(STACK[0x59C]) = ((v581[686] ^ 0xE6) << 16) | ((v581[383] ^ 0xE6) << 8) | v581[80] ^ 0xE6;
  LODWORD(STACK[0x4C4]) = v590 | v581[562] ^ 0xE6;
  v591 = v581[136] ^ 0xE6;
  v592 = (v591 << 9) & 0x1C000;
  v593 = (v591 << 8) - 100212518;
  v594 = (v593 - v592) ^ 0x6E0DA | ((v581[439] ^ 0xE6) << 16);
  LODWORD(STACK[0x594]) = ((v581[921] ^ 0xE6) << 16) | ((v581[618] ^ 0xE6) << 8) | v581[315] ^ 0xE6;
  LODWORD(STACK[0x4C8]) = v581[495] ^ 0xE6 | (((v581[v593 & 0x300 ^ 0x11ELL | v593 & 0x300 ^ 0x200] ^ 0xE6) + v594) << 8);
  v595 = v581[248];
  LODWORD(STACK[0x5E0]) = v595 ^ 0xE6 | ((v581[551] ^ 0xE6 | ((v581[854] ^ 0xE6) << 8) | ((v581[192] ^ 0xE6) << 16)) << 8);
  LODWORD(STACK[0x4AC]) = ((v581[371] ^ 0xE6) << 8) | ((v581[((v595 & 0x1C ^ 0x18) + (v595 & 0x1C ^ 4)) ^ 0x2BE] ^ 0xE6) << 16) | v581[68] ^ 0xE6;
  LODWORD(STACK[0x598]) = ((v581[910] ^ 0xE6) << 24) | ((v581[607] ^ 0xB0) << 16) | ((v581[304] ^ 0xE6) << 8) | v581[1] ^ 0xE6;
  LODWORD(STACK[0x4B8]) = v581[483] ^ 0xE6 | ((((v581[124] ^ 0xE6) << 8) | ((v581[427] ^ 0xE6) << 16) | v581[786] ^ 0xE6) << 8);
  LODWORD(STACK[0x4BC]) = v581[57] ^ 0xE6 | ((v581[663] ^ 0xE6) << 16) | ((v581[360] ^ 0xE6) << 8);
  LODWORD(STACK[0x4CC]) = ((v581[180] ^ 0xE6) << 16) | ((v581[842] ^ 0xE6) << 8) | v581[539] ^ 0xE6;
  LODWORD(STACK[0x578]) = v581[472] ^ 0xE6 | ((((v581[416] ^ 0xE6) << 16) | ((v581[113] ^ 0xE6) << 8) | v581[775] ^ 0xB0) << 8);
  LODWORD(STACK[0x5DC]) = ((v581[595] ^ 0xE6) << 8) | ((v581[898] ^ 0xE6) << 16) | v581[292] ^ 0xE6;
  LODWORD(STACK[0x4D8]) = v581[528] ^ 0xE6 | ((v581[831] ^ 0xE6) << 8) | ((v581[169] ^ 0xE6) << 16);
  LODWORD(STACK[0x4DC]) = v581[45] ^ 0xE6 | ((v581[348] ^ 0xE6) << 8) | ((v581[651] ^ 0xE6) << 16);
  v596 = v581[281] ^ 0xE6 | ((v581[584] ^ 0xE6) << 8) | ((v581[887] ^ 0xE6) << 16);
  LODWORD(STACK[0x580]) = ((v581[404] ^ 0xE6) << 16) | ((v581[101] ^ 0xE6) << 8) | v581[763] ^ 0xE6;
  LODWORD(STACK[0x5A0]) = v581[943] ^ 0xE6 | (v596 << 8);
  LODWORD(STACK[0x56C]) = ((v581[640] ^ 0xE6) << 16) | ((v581[337] ^ 0xE6) << 8) | v581[34] ^ 0xE6;
  LODWORD(STACK[0x4E4]) = ((v581[157] ^ 0xE6) << 16) | ((v581[819] ^ 0xE6) << 8) | v581[516] ^ 0xE6;
  v597 = ((v581[393] ^ 0xE6) << 16) | ((v581[90] ^ 0xE6) << 8) | v581[752] ^ 0xE6;
  LODWORD(STACK[0x4D0]) = ((v581[875] ^ 0xE6) << 16) | ((v581[572] ^ 0xE6) << 8) | v581[269] ^ 0xE6;
  LODWORD(v328) = v581[449];
  LOBYTE(v531) = v581[449];
  LODWORD(STACK[0x49C]) = v328;
  LODWORD(STACK[0x584]) = v328 ^ 0xE6 | (v597 << 8);
  v598 = v581[505] ^ 0xE6 | ((v581[808] ^ 0xE6) << 8) | ((v581[146] ^ 0xE6) << 16);
  LODWORD(STACK[0x58C]) = v581[22] ^ 0xE6 | ((v581[325] ^ 0xE6) << 8) | ((v581[628] ^ 0xE6) << 16);
  v599 = STACK[0x414];
  v600 = ((LODWORD(STACK[0x414]) ^ 0xE6) - 1985997955 - ((2 * (LODWORD(STACK[0x414]) ^ 0xE6)) & 0xFA)) ^ 0x89A0137D | (v598 << 8);
  v601 = v600 - ((2 * v600) & 0x9F7827FA);
  LODWORD(STACK[0x820]) = -2009212831 * (LODWORD(STACK[0x54C]) ^ 0xEE6FE00F) - 75026750;
  LODWORD(STACK[0x824]) = -2009212831 * (v580 ^ 0xF08BC96B) - 75026750;
  LODWORD(STACK[0x828]) = -2009212831 * (LODWORD(STACK[0x5B0]) ^ 0x17FB3E2E) - 75026750;
  v602 = STACK[0x5B8];
  v603 = LODWORD(STACK[0x5B8]) ^ LODWORD(STACK[0x628]);
  v604 = v603 ^ 0xF057B274;
  LODWORD(STACK[0x82C]) = -2009212831 * v604 - 75026750;
  LODWORD(STACK[0x834]) = -2009212831 * (v466 ^ 0x3B01D443) - 75026750;
  LODWORD(STACK[0x838]) = -2009212831 * (LODWORD(STACK[0x6BC]) ^ 0xFBB64AD1) - 75026750;
  LODWORD(STACK[0x830]) = -2009212831 * (v519 ^ 0x42734FB4) - 75026750;
  LODWORD(STACK[0x630]) = (((v603 ^ 0x2356B637) << 11) ^ 0x8221800)
                        + 1621737388
                        - ((2 * (((v603 ^ 0x2356B637) << 11) ^ 0x8221800)) & 0xC1537000);
  LODWORD(STACK[0x83C]) = -75026750 - 2009212831 * STACK[0x400];
  LODWORD(STACK[0x608]) = ((8 * (v603 ^ 0x2356B637)) ^ 0x98082218)
                        - 1251633743
                        - ((2 * ((8 * (v603 ^ 0x2356B637)) ^ 0x98082218)) & 0x6ACB2B60);
  v605 = v581[12];
  LODWORD(STACK[0x4A8]) = v605;
  LOBYTE(v525) = (v605 & 0xD ^ 4) + (v605 & 0xD ^ 9);
  LODWORD(STACK[0x6F0]) = (((v603 ^ 0x2356B637) << 14) ^ 0x4110C000)
                        + 1607477932
                        - ((2 * (((v603 ^ 0x2356B637) << 14) ^ 0x4110C000)) & 0xBFA00000);
  v606 = (v602 >> 27) ^ (v602 >> 28) ^ LODWORD(STACK[0x5C0]) ^ 0x11;
  v607 = (v603 ^ 0x2356B637) << 26;
  LODWORD(STACK[0x634]) = (v607 ^ 0xC000000) + 261954712 - ((2 * (v607 ^ 0xC000000)) & 0x18000000);
  v608 = (v603 ^ 0x2356B637) << 19;
  LODWORD(STACK[0x6BC]) = (((v603 ^ 0x2356B637) << 18) ^ 0x110C0000) + 575678995 - (v608 & 0x44A00000);
  v609 = (v608 ^ 0x22180000) + 337010327 - ((2 * (v608 ^ 0x22180000)) & 0x28200000);
  LODWORD(STACK[0x4A4]) = v609;
  LODWORD(v328) = (((v603 ^ 0x2356B637) << 22) ^ 0x10C00000)
                - 788710447
                - ((2 * (((v603 ^ 0x2356B637) << 22) ^ 0x10C00000)) & 0xA1800000);
  LODWORD(STACK[0x380]) = v328;
  LODWORD(STACK[0x5C0]) = v601 - 809757699;
  v610 = (((v603 ^ 0x2356B637) << 23) ^ 0x21800000)
       - 297241838
       - ((2 * (((v603 ^ 0x2356B637) << 23) ^ 0x21800000)) & 0xDC000000);
  LODWORD(STACK[0x450]) = v610;
  v611 = (_DWORD)v604 << ((~(v601 + 21) & 2) + (~(_BYTE)v599 & 2));
  v612 = (_DWORD)v604 << v525;
  v613 = v604 << ((v531 & 0x75 ^ 0x64 | v531 & 0x75 ^ 0x11) ^ 0x60u);
  v614 = v604 >> (((((v601 - 3) ^ 2) - 2 * (((v601 - 3) ^ 2) & 7 ^ (v601 - 3) & 1) + 6) ^ v599) & 0xB);
  v615 = v614 + 1993422894 - ((2 * v614) & 0xEDA2705C);
  LODWORD(STACK[0x604]) = (((v603 ^ 0x2356B637) << 27) ^ 0x18000000)
                        + 252191216
                        - ((2 * (((v603 ^ 0x2356B637) << 27) ^ 0x18000000)) & 0x10000000);
  v616 = (((v603 ^ 0x2356B637) << 28) ^ 0x30000000)
       - 1429289057
       - ((2 * (((v603 ^ 0x2356B637) << 28) ^ 0x30000000)) & 0x40000000);
  LODWORD(STACK[0x45C]) = v616;
  v617 = v602;
  LODWORD(v604) = (v602 >> 30) ^ 0x51D8924A;
  v618 = v604 ^ (v602 >> 15) ^ ((v603 ^ 0x2356B637) >> 2) ^ 0x34C1A1BF ^ (v606 + 1373147721 - ((2 * v606) & 0x12));
  v619 = v615 ^ (v618 + 1993422894 - ((2 * v618) & 0x6DA2705C));
  v620 = v619 - 2071288988 - ((2 * v619) & 0x91546C8);
  v621 = (v602 >> 21) ^ 0x848AA4E6;
  v622 = (v602 >> 19) ^ 0x6BB534CF;
  v623 = ((v620 ^ v621) + 1807035077 - ((2 * (v620 ^ v621)) & 0xD76A558A)) ^ v622;
  v624 = (v602 >> 18) ^ 0x9CEA11E7;
  v625 = (v623 - 1662374414 - ((2 * v623) & 0x39D45BE4)) ^ v624;
  v626 = (v602 >> 14) ^ 0x6C05D78D;
  v627 = (v625 + 1812338387 - ((2 * v625) & 0xD80C2DA6)) ^ v626;
  v628 = (v602 >> 13) ^ 0x251F4341;
  v629 = (v627 + 622379516 - ((2 * v627) & 0x4A3183F8)) ^ v628;
  v630 = (v603 >> 10) ^ 0x593EA155;
  LODWORD(STACK[0x414]) = v630;
  v631 = (v629 + 1493349561 - ((2 * v629) & 0xB2056972)) ^ v630;
  v632 = (v603 >> 9) ^ 0xE0A0966F;
  LODWORD(STACK[0x400]) = v632;
  v633 = (v631 - 522666570 - ((2 * v631) & 0xC1B17B6C)) ^ v632;
  v634 = v633 - 1681614470 - ((2 * v633) & 0x378932F4);
  v635 = (v603 >> 6) ^ 0x9805C7B3;
  v636 = (v603 ^ 0x2356B637) >> 4;
  v637 = (v603 ^ 0x2356B637) >> 5;
  LODWORD(STACK[0x384]) = v637;
  LODWORD(v581) = v637 ^ v636 ^ ((v634 ^ v635) - ((2 * (v634 ^ v635)) & 0xB8DCAF60) - 596748368);
  LODWORD(STACK[0x62C]) = (((v603 ^ 0x2356B637) << 13) ^ 0x20886000)
                        + 964732145
                        - ((2 * (((v603 ^ 0x2356B637) << 13) ^ 0x20886000)) & 0x73014000);
  v638 = (v603 << 30) ^ (32 * (v603 ^ 0x2356B637)) ^ (16 * (v603 ^ 0x2356B637)) ^ ((v603 ^ 0x2356B637) << 17) ^ v612 ^ v613 ^ v611;
  v639 = ((v581 ^ 0xDAF65F92) >> 27) ^ (v615 >> 30) ^ ((v581 ^ 0xDAF65F92) >> 21);
  v640 = v638 ^ (4 * (v581 ^ 0xDAF65F92)) ^ (32 * (v581 ^ 0xDAF65F92)) ^ ((v581 ^ 0xDAF65F92) << 11) ^ (32 * v639) ^ (4 * v639) ^ (v639 << 11) ^ 0x4AF5E144;
  v641 = (v640 - 1251633743 - ((2 * v640) & 0x6ACB2B62)) ^ LODWORD(STACK[0x608]);
  v642 = STACK[0x630];
  v643 = (v641 + 1621737388 - ((2 * v641) & 0xC1537F58)) ^ LODWORD(STACK[0x630]);
  v644 = (v643 + 1607477932 - ((2 * v643) & 0xBFA05558)) ^ LODWORD(STACK[0x6F0]);
  v645 = STACK[0x6BC];
  v646 = (v644 + 575678995 - ((2 * v644) & 0x44A05426)) ^ LODWORD(STACK[0x6BC]);
  v647 = (v646 + 337010327 - ((2 * v646) & 0x282CBD2E)) ^ v609;
  v648 = (v647 - 788710447 - ((2 * v647) & 0xA1FA77A2)) ^ v328;
  v649 = (v648 - 297241838 - ((2 * v648) & 0xDC90E624)) ^ v610;
  v650 = STACK[0x634];
  v651 = (v649 + 261954712 - ((2 * v649) & 0x1F3A3930)) ^ LODWORD(STACK[0x634]);
  v652 = (v651 - 1429289057 - ((2 * v651) & 0x559D8F3E)) ^ v616;
  v653 = (v652 + 252191216 - ((2 * v652) & 0x1E1043E0)) ^ LODWORD(STACK[0x604]);
  v654 = LODWORD(STACK[0x54C]) ^ (v653 - ((2 * v653) & 0xCA563A38) - 450159332) ^ 0xB44FD13;
  v655 = v581 ^ 0x6DB3B12B ^ (v654 - ((2 * v654) & 0x74EBFDFA) - 1166672131);
  LODWORD(STACK[0x454]) = (v655 + 1369651901 + (~(2 * v655) | 0x5CB98A87)) ^ v639;
  LODWORD(STACK[0x610]) = (((v603 ^ 0x2356B637) << 7) ^ 0x80822180)
                        + 1400617464
                        - ((2 * (((v603 ^ 0x2356B637) << 7) ^ 0x80822180)) & 0xA6F77300);
  LODWORD(STACK[0x61C]) = (((v603 ^ 0x2356B637) << 10) ^ 0x4110C00)
                        - 1538639686
                        - ((2 * (((v603 ^ 0x2356B637) << 10) ^ 0x4110C00)) & 0x48947000);
  v656 = (((v603 ^ 0x2356B637) << 16) ^ 0x4430000)
       - 1414707574
       - ((2 * (((v603 ^ 0x2356B637) << 16) ^ 0x4430000)) & 0x575A0000);
  LODWORD(STACK[0x54C]) = v656;
  LODWORD(STACK[0x624]) = (((v603 ^ 0x2356B637) << 20) ^ 0x44300000)
                        - 1244117890
                        - ((2 * (((v603 ^ 0x2356B637) << 20) ^ 0x44300000)) & 0x6BA00000);
  LODWORD(STACK[0x628]) = (((v603 ^ 0x2356B637) << 25) ^ 0x86000000) - 917425945 - (v607 & 0x90000000);
  LODWORD(STACK[0x620]) = (((v603 ^ 0x2356B637) << 21) ^ 0x88600000)
                        + 1484557333
                        - ((2 * (((v603 ^ 0x2356B637) << 21) ^ 0x88600000)) & 0xB0C00000);
  v657 = HIWORD(v617) ^ 0xF244B1E9;
  v658 = ((((v603 ^ 0x2356B637) >> 1) ^ (v617 >> 20) ^ 0x69808D24)
        - 230407746
        - 2
        * ((((v603 ^ 0x2356B637) >> 1) ^ (v617 >> 20) ^ 0x69808D24) & 0x724441BF ^ (((v603 ^ 0x2356B637) >> 1) ^ (v617 >> 20)) & 1)) ^ v657;
  v659 = (v658 - 1662374414 - ((2 * v658) & 0x39D45BE4)) ^ v624;
  v660 = LODWORD(STACK[0x5D8]) ^ 0xA023793B ^ (v659 - 1608287941 - ((2 * v659) & 0x4046F286) + 8);
  v661 = LODWORD(STACK[0x5D4]) ^ 0x7570142E ^ (v660 + 1970279470 - ((2 * v660) & 0xEAE02FDE) + 961);
  v662 = (v661 - 2071288988 - ((2 * v661) & 0x91546C8)) ^ v621;
  v663 = (v662 + 1807035077 - ((2 * v662) & 0xD76A558A)) ^ v622;
  v664 = (v663 + 1812338387 - ((2 * v663) & 0xD80C2DA6)) ^ v626;
  v665 = (v664 + 622379516 - ((2 * v664) & 0x4A3183F8)) ^ v628;
  v666 = (v617 >> 12) ^ 0xE9596C02;
  v667 = (v665 - 380212871 - ((2 * v665) & 0xD2ACD2F2)) ^ v666;
  v668 = (v617 >> 11) ^ 0x75EB3241;
  v669 = (v667 + 1979005111 - ((2 * v667) & 0xEBEA716E)) ^ v668;
  v670 = (v603 >> 7) ^ 0x9A17E563;
  v671 = (v669 - 1678292473 - ((2 * v669) & 0x37EE940E)) ^ v670;
  v672 = v636 ^ v635 ^ (v671 - 1681614470 - ((2 * v671) & 0x378932F4));
  LODWORD(STACK[0x5D8]) = v672;
  v673 = (v672 >> 21) ^ (LODWORD(STACK[0x5FC]) >> 31) ^ (v672 >> 27);
  LODWORD(STACK[0x5FC]) = v673;
  LODWORD(STACK[0x5D4]) = ((4 * v673) ^ 0x1A0) - 551630818 - ((2 * ((4 * v673) ^ 0x1A0)) & 0x1208);
  LODWORD(v604) = (v617 >> 17) ^ (v603 >> 8) ^ (LODWORD(STACK[0x5F0]) ^ v604) & 0xEF ^ 0xF02FF1 ^ (unsigned __int16)(LODWORD(STACK[0x5EC]) - 27092 + LODWORD(STACK[0x5F8]));
  LODWORD(v604) = (v604 - 2071288988 - ((2 * v604) & 0x11546C8)) ^ v621;
  LODWORD(v604) = (v604 + 1807035077 - ((2 * v604) & 0x576A558A)) ^ v622;
  LODWORD(v604) = (v604 - 230407746 - ((2 * v604) & 0x6488837C)) ^ v657;
  LODWORD(v604) = (v604 + 1812338387 - ((2 * v604) & 0xD80C2DA6)) ^ v626;
  LODWORD(v604) = (v604 - 380212871 - ((2 * v604) & 0xD2ACD2F2)) ^ v666;
  LODWORD(v604) = (v604 + 1979005111 - ((2 * v604) & 0xEBEA716E)) ^ v668;
  LODWORD(v604) = (v604 + 1493349561 - ((2 * v604) & 0xB2056972)) ^ LODWORD(STACK[0x414]);
  LODWORD(v604) = (v604 - 522666570 - ((2 * v604) & 0xC1B17B6C)) ^ LODWORD(STACK[0x400]);
  LODWORD(v604) = (v604 - 1678292473 - ((2 * v604) & 0x37EE940E)) ^ v670;
  LODWORD(v604) = LODWORD(STACK[0x384]) ^ v635 ^ (v604 - 1681614470 - ((2 * v604) & 0x378932F4));
  v674 = (4 * v603) ^ (v603 << 8) ^ (v603 << 15) ^ (v603 << 24) ^ (4 * v604) ^ 0x21B69D58;
  LODWORD(v328) = (v674 - 1251633743 - ((2 * v674) & 0x6ACB2B62)) ^ LODWORD(STACK[0x608]);
  LODWORD(v328) = (v328 + 1400617464 - ((2 * v328) & 0xA6F773F0)) ^ LODWORD(STACK[0x610]);
  LODWORD(v328) = (v328 - 1538639686 - ((2 * v328) & 0x48947174)) ^ LODWORD(STACK[0x61C]);
  LODWORD(v328) = (v328 - 1414707574 - ((2 * v328) & 0x575A8D14)) ^ v656;
  LODWORD(v328) = (v328 + 964732145 - ((2 * v328) & 0x730149E2)) ^ LODWORD(STACK[0x62C]);
  LODWORD(v328) = (v328 + 1621737388 - ((2 * v328) & 0xC1537F58)) ^ v642;
  LODWORD(v328) = (v328 + 575678995 - ((2 * v328) & 0x44A05426)) ^ v645;
  LODWORD(v328) = (v328 - 1244117890 - ((2 * v328) & 0x6BB088FC)) ^ LODWORD(STACK[0x624]);
  LODWORD(v328) = (v328 + 1484557333 - ((2 * v328) & 0xB0F9182A)) ^ LODWORD(STACK[0x620]);
  v675 = (v328 - 788710447 - ((2 * v328) & 0xA1FA77A2)) ^ LODWORD(STACK[0x380]);
  v676 = (v675 - 297241838 - ((2 * v675) & 0xDC90E624)) ^ LODWORD(STACK[0x450]);
  v677 = (v676 - 917425945 - ((2 * v676) & 0x92A261CE)) ^ LODWORD(STACK[0x628]);
  v678 = (v677 + 261954712 - ((2 * v677) & 0x1F3A3930)) ^ v650;
  v679 = (v678 + 252191216 - ((2 * v678) & 0x1E1043E0)) ^ LODWORD(STACK[0x604]);
  v680 = v604 ^ LODWORD(STACK[0x5B0]) ^ (v679 - ((2 * v679) & 0xA5C46CC2) - 756926879);
  v681 = v604 >> 21;
  v682 = (4 * (v604 >> 21)) ^ ((_DWORD)v604 << 11) ^ (32 * (v604 >> 21)) ^ (v604 >> 21 << 11) ^ v680 ^ ((v604 ^ 0x6980822) << ((v680 & 5 ^ 5) + (v680 & 5)));
  v683 = STACK[0x5B4];
  LODWORD(v328) = ((LODWORD(STACK[0x5B4]) << 17) ^ 0xA3A00000)
                - 1145930735
                - ((2 * ((LODWORD(STACK[0x5B4]) << 17) ^ 0xA3A00000)) & 0x77640000);
  v684 = LODWORD(STACK[0x410]) ^ (LODWORD(STACK[0x570]) >> 26) ^ ((LODWORD(STACK[0x570]) >> 31) | 0xEDA7BFC) ^ (LODWORD(STACK[0x5B4]) >> 3);
  v685 = (v684 - 220105698 - ((2 * v684) & 0x25C2E83E) + 1) ^ LODWORD(STACK[0x52C]);
  v686 = (v685 - 1285646396 - ((2 * v685) & 0x66BD2F88)) ^ LODWORD(STACK[0x538]);
  v687 = (v686 + 49320804 - ((2 * v686) & 0x5E126C8)) ^ LODWORD(STACK[0x428]);
  v688 = (v687 - 884584916 - ((2 * v687) & 0x968C9C58)) ^ LODWORD(STACK[0x53C]);
  v689 = (v688 - 210010081 - ((2 * v688) & 0xE6F7003E)) ^ LODWORD(STACK[0x530]);
  v690 = LODWORD(STACK[0x438]) ^ 0xD947E399 ^ (v689 - ((2 * v689) & 0xB28F2A94) - 649620150);
  v691 = (v690 - 1663741282 - ((2 * v690) & 0x39AAA53C)) ^ LODWORD(STACK[0x534]);
  v692 = (v691 + 1548836722 - ((2 * v691) & 0xB8A2BEE4)) ^ LODWORD(STACK[0x424]);
  v693 = (v692 + 174669003 - ((2 * v692) & 0x14D27996)) ^ LODWORD(STACK[0x40C]);
  v694 = (v693 + 398128795 - ((2 * v693) & 0x2F75ED36)) ^ LODWORD(STACK[0x408]);
  v695 = (v694 - 865556364 - ((2 * v694) & 0x98D150E8)) ^ LODWORD(STACK[0x418]);
  v696 = LODWORD(STACK[0x680]) ^ (v695 - 1622078460 - ((2 * v695) & 0x3EA21808));
  LODWORD(v604) = (2 * LODWORD(STACK[0x5B4])) ^ (LODWORD(STACK[0x5B4]) << 6) ^ LODWORD(STACK[0x2A0]);
  v697 = (v696 >> 27) ^ (v696 >> 21);
  LODWORD(STACK[0x680]) = v697;
  LODWORD(v604) = v604 ^ (4 * v696) ^ (v696 << 11) ^ (32 * v696) ^ (4 * v697) ^ (32 * v697) ^ (v697 << 11) ^ 0xC0A9B7F8;
  LODWORD(v604) = (v604 + 1523171372 - ((2 * v604) & 0xB5938058)) ^ LODWORD(STACK[0x2A4]);
  v698 = STACK[0x698];
  LODWORD(v604) = (v604 - 736548245 - ((2 * v604) & 0xA83254D6)) ^ LODWORD(STACK[0x698]);
  v699 = STACK[0x694];
  LODWORD(v604) = (v604 + 1126109392 - ((2 * v604) & 0x863E21A0)) ^ LODWORD(STACK[0x694]);
  LODWORD(v604) = (v604 + 1102258364 - ((2 * v604) & 0x83664178)) ^ LODWORD(STACK[0x6DC]);
  LODWORD(v604) = (v604 + 1524873513 - ((2 * v604) & 0xB5C77252)) ^ LODWORD(STACK[0x6F8]);
  v700 = STACK[0x700];
  LODWORD(v604) = (v604 - 70130138 - ((2 * v604) & 0xF7A3CC4C)) ^ LODWORD(STACK[0x700]);
  LODWORD(v581) = STACK[0x6B0];
  LODWORD(v604) = (v604 + 1354432918 - ((2 * v604) & 0xA176032C)) ^ LODWORD(STACK[0x6B0]);
  LODWORD(v604) = (v604 - 642431846 - ((2 * v604) & 0xB36A8934)) ^ LODWORD(STACK[0x6E0]);
  LODWORD(v604) = (v604 - 1145930735 - ((2 * v604) & 0x7764F822)) ^ v328;
  LODWORD(v604) = (v604 - 1066168811 - ((2 * v604) & 0x80E71C2A)) ^ LODWORD(STACK[0x6C0]);
  v701 = STACK[0x6A0];
  LODWORD(v604) = (v604 + 738451433 - ((2 * v604) & 0x5807BFD2)) ^ LODWORD(STACK[0x6A0]);
  LODWORD(v604) = (v604 + 1459731236 + ~((2 * v604) & 0xAE037646)) ^ LODWORD(STACK[0x688]);
  LODWORD(v604) = (v604 - 1198048200 - ((2 * v604) & 0x712E7870)) ^ LODWORD(STACK[0x6C8]);
  v702 = STACK[0x6E8];
  LODWORD(v604) = (v604 - 112182724 - ((2 * v604) & 0xF2A07478)) ^ LODWORD(STACK[0x6E8]);
  v703 = STACK[0x2A8];
  v704 = v696 ^ 0xB7125987 ^ (((v604 + 1892002226 - ((2 * v604) & 0xE18B5364)) ^ LODWORD(STACK[0x2A8]))
                            - 2
                            * (((v604 + 1892002226 - ((2 * v604) & 0xE18B5364)) ^ LODWORD(STACK[0x2A8])) & 0x307F649F ^ (v604 + 1892002226 - ((2 * v604) & 0xE18B5364) + 8) & 5)
                            - 1333828454);
  LODWORD(STACK[0x6F8]) = v704 - ((2 * v704) & 0x713E5CC8);
  v705 = LODWORD(STACK[0x540]) ^ (LODWORD(STACK[0x544]) >> 27);
  v706 = (16 * v683) ^ (32 * v683) ^ (v683 << 30) ^ (4 * LODWORD(STACK[0x544])) ^ (32 * LODWORD(STACK[0x544])) ^ (LODWORD(STACK[0x544]) << 11);
  LODWORD(STACK[0x6E0]) = v705;
  v707 = v706 ^ (4 * v705) ^ (32 * v705) ^ (v705 << 11) ^ 0x2EBD4758;
  v708 = (v707 + 1126109392 - ((2 * v707) & 0x863E21A0)) ^ v699;
  v709 = (v708 - 736548245 - ((2 * v708) & 0xA83254D6)) ^ v698;
  v710 = (v709 + 1327989479 - ((2 * v709) & 0x9E4F05CE)) ^ LODWORD(STACK[0x6E4]);
  v711 = (v710 - 70130138 - ((2 * v710) & 0xF7A3CC4C)) ^ v700;
  v712 = (v711 + 1354432918 - ((2 * v711) & 0xA176032C)) ^ v581;
  LODWORD(v328) = (v712 - 1145930735 - ((2 * v712) & 0x7764F822)) ^ v328;
  LODWORD(v328) = (v328 - 158101279 - ((2 * v328) & 0xED2721C2)) ^ LODWORD(STACK[0x658]);
  LODWORD(v328) = (v328 + 1892574160 - ((2 * v328) & 0xE19CC7A0)) ^ LODWORD(STACK[0x6A8]);
  LODWORD(v328) = (v328 + 1910357928 - ((2 * v328) & 0xE3BB7F50)) ^ LODWORD(STACK[0x660]);
  LODWORD(v328) = (v328 + 738451433 - ((2 * v328) & 0x5807BFD2)) ^ v701;
  LODWORD(v328) = (v328 + 314441286 - ((2 * v328) & 0x257BFC8C)) ^ LODWORD(STACK[0x548]);
  LODWORD(v328) = (v328 - 112182724 - ((2 * v328) & 0xF2A07478)) ^ v702;
  LODWORD(v328) = (v328 + 1892002226 - ((2 * v328) & 0xE18B5364)) ^ v703;
  LODWORD(v328) = (v328 - ((2 * v328) & 0xDD425460) - 291427792) ^ LODWORD(STACK[0x430]);
  LODWORD(v328) = LODWORD(STACK[0x458]) ^ (v328 - ((2 * v328) & 0x948E2142) - 901312351) ^ 0x88345F15;
  LODWORD(v328) = LODWORD(STACK[0x5BC]) ^ 0xA4D474D6 ^ (v328 - ((2 * v328) & 0x86AF0334) + 1129808282);
  LODWORD(STACK[0x6E8]) = v328 - ((2 * v328) & 0x5ADCBEC2);
  v713 = v682 ^ 0xB961DFD8 ^ v681;
  v714 = ((4 * v713) ^ 0xEA81A744) - 110711249 - ((2 * ((4 * v713) ^ 0xEA81A744)) & 0xF2CD5C58);
  LODWORD(STACK[0x6E4]) = v714;
  v715 = ((v713 << 16) ^ 0x69D10000) + 1455042840 - ((2 * ((v713 << 16) ^ 0x69D10000)) & 0xAD740000);
  LODWORD(STACK[0x5F8]) = v715;
  v716 = ((8 * v713) ^ 0xD5034E88) + 115497567 - ((2 * ((8 * v713) ^ 0xD5034E88)) & 0xDC4B4B0);
  LODWORD(STACK[0x6C0]) = v716;
  v717 = ((v713 << 10) ^ 0x81A74400) + 1552767664 - ((2 * ((v713 << 10) ^ 0x81A74400)) & 0xB91AB000);
  LODWORD(STACK[0x658]) = v717;
  v718 = ((v713 << 7) ^ 0x5034E880) - 397459129 - ((2 * ((v713 << 7) ^ 0x5034E880)) & 0xD09E8200);
  LODWORD(STACK[0x660]) = v718;
  v719 = ((v713 << 14) ^ 0x1A744000) - 485094164 - ((2 * ((v713 << 14) ^ 0x1A744000)) & 0xC62C0000);
  LODWORD(v581) = ((v713 << 13) ^ 0xD3A2000) + 1685856190 - ((2 * ((v713 << 13) ^ 0xD3A2000)) & 0xC8F80000);
  v720 = ((v713 << 20) ^ 0x9D100000) + 1540739102 - ((2 * ((v713 << 20) ^ 0x9D100000)) & 0xB7A00000);
  LODWORD(STACK[0x5F0]) = v720;
  v721 = ((v713 << 25) ^ 0xA2000000) + 1385353791 - ((2 * ((v713 << 25) ^ 0xA2000000)) & 0xA4000000);
  LODWORD(STACK[0x5EC]) = v721;
  LODWORD(v613) = ((v713 << 22) ^ 0x74400000) + 126950213 - ((2 * ((v713 << 22) ^ 0x74400000)) & 0xF000000);
  LODWORD(STACK[0x6DC]) = v613;
  LODWORD(STACK[0x6A8]) = v713 << 24;
  LODWORD(v328) = ((v713 << 24) ^ 0xD1000000) - 1858431623 - ((2 * ((v713 << 24) ^ 0xD1000000)) & 0x22222222);
  LODWORD(STACK[0x6B0]) = v328;
  LODWORD(STACK[0x700]) = ((v713 << 26) ^ 0x44000000) + 1060533370 - ((2 * ((v713 << 26) ^ 0x44000000)) & 0x78000000);
  v722 = (2 * v713) ^ (v713 << 6) ^ (v713 << 17) ^ (v713 << 29) ^ ((v713 ^ 0xBAA069D1) << 28) ^ 0x2EF8A7E2;
  LODWORD(STACK[0x698]) = v713 ^ 0xF473F56C;
  v723 = (v722 + 1322491069 - ((2 * v722) & 0x9DA7397A)) ^ v713 ^ 0xF473F56C;
  v724 = (v723 - 110711249 - ((2 * v723) & 0xF2CD5C5E)) ^ v714;
  v725 = (v724 + 115497567 - ((2 * v724) & 0xDC4B4BE)) ^ v716;
  v726 = (v725 - 397459129 - ((2 * v725) & 0xD09E828E)) ^ v718;
  LODWORD(STACK[0x608]) = -1189431968;
  v727 = (v726 + 1552767664 - ((2 * v726) & 0xB91AB560)) ^ v717;
  v728 = (v727 + 1685856190 - ((2 * v727) & 0xC8F83F7C)) ^ v581;
  v729 = (v728 - 485094164 - ((2 * v728) & 0xC62C19D8)) ^ v719;
  v730 = (v729 + 1455042840 - ((2 * v729) & 0xAD746230)) ^ v715;
  v731 = (v730 + 1540739102 - ((2 * v730) & 0xB7ABA03C)) ^ v720;
  v732 = (v731 + 126950213 - ((2 * v731) & 0xF22368A)) ^ v613;
  v733 = (v732 - 1858431623 - ((2 * v732) & 0x22752AF2)) ^ v328;
  v734 = (v733 + 1385353791 - ((2 * v733) & 0xA525A47E)) ^ v721;
  v735 = v734 + 1060533370 - ((2 * v734) & 0x7E6CE8F4);
  LODWORD(STACK[0x694]) = v682 >> 31;
  v736 = (v682 >> 15) ^ (v682 >> 26) ^ (v682 >> 31) ^ (v713 >> 3) ^ 0x17540AB9;
  v737 = ((v682 ^ 0xB961DFD8) >> 30) | 0x8A2AC7AC;
  LODWORD(STACK[0x688]) = v737;
  v738 = (v736 - 1976907858 - ((2 * v736) & 0x14558F5C)) ^ v737;
  LODWORD(STACK[0x604]) = v682 >> 29;
  v739 = (v738 + 1561463352 - ((2 * v738) & 0xBA241470)) ^ ((v682 >> 29) | 0x5D120A38);
  v740 = (v682 >> 25) ^ 0x4A8DF660;
  v741 = (v739 + 1250817633 - ((2 * v739) & 0x951BECC2)) ^ v740;
  LODWORD(v613) = (v682 >> 22) ^ 0x442030BC;
  v742 = (v741 + 1142960307 - ((2 * v741) & 0x88406166)) ^ v613;
  v743 = (v682 >> 18) ^ 0xB269BC2B;
  v744 = (v742 - 1301693221 - ((2 * v742) & 0x64D379B6)) ^ v743;
  v745 = (v682 >> 19) ^ 0xAA929CA3;
  LODWORD(STACK[0x5B0]) = v745;
  v746 = (v744 - 1433232165 - ((2 * v744) & 0x552539B6)) ^ v745;
  v747 = HIWORD(v682) ^ 0xC83D87F8;
  LODWORD(v604) = (v746 - 935492551 - ((2 * v746) & 0x907B0872)) ^ v747;
  v748 = (v682 >> 12) ^ 0x88C534E5;
  v749 = (v604 - 2000353026 - ((2 * v604) & 0x118A11FC)) ^ v748;
  v750 = (v713 >> 10) ^ 0x2B494C31;
  LODWORD(STACK[0x5BC]) = v750;
  v751 = (v749 + 728228907 - ((2 * v749) & 0x56CFC856)) ^ v750;
  v752 = (v713 >> 8) ^ 0xB8B7DF03;
  LODWORD(STACK[0x5B8]) = v752;
  v753 = (v751 - 1207074966 - ((2 * v751) & 0x701AFED4)) ^ v752;
  LODWORD(STACK[0x570]) = v713 >> 7;
  LODWORD(v604) = (v713 >> 7) ^ 0x967AD808;
  v754 = (v753 - 1760585509 - ((2 * v753) & 0x2E1F31B6)) ^ v604;
  v755 = STACK[0x700];
  LODWORD(v328) = (v735 ^ LODWORD(STACK[0x700])) - ((2 * (v735 ^ LODWORD(STACK[0x700]))) & 0xE611F374);
  v756 = ((v713 << 11) ^ 0x34E8800) - 39268442 - ((2 * ((v713 << 11) ^ 0x34E8800)) & 0xFB519000);
  LODWORD(STACK[0x544]) = v756;
  v757 = (v713 >> 6) ^ 0xB8096169;
  v758 = v757 ^ (v713 >> 4);
  v759 = v758 ^ (v754 - 1159470898 - ((2 * v754) & 0x75C7C19C));
  v760 = (v759 >> 27) ^ (v759 >> 21);
  LODWORD(STACK[0x6C8]) = v760;
  v761 = v759 ^ (32 * v759) ^ (v759 << 11) ^ (4 * (v759 ^ v760)) ^ (32 * v760) ^ (v760 << 11) ^ 0x737C3403 ^ (v328 + 1929968058);
  LODWORD(STACK[0x6A0]) = v761 - ((2 * v761) & 0x51DED22);
  LODWORD(v328) = v719 ^ (v713 << 12);
  v762 = v581 ^ 0x7E08FCAD ^ v328;
  LODWORD(v328) = v328 ^ 0xE58B1CEC;
  v763 = (v762 + v328 + 1) ^ ((v581 ^ 0x9B83E041) + 1);
  v764 = ((v763 + 1685856190 - ((2 * v763) & 0xC8F83F7C)) ^ v581) + v328;
  LODWORD(STACK[0x540]) = ((v713 << 18) ^ 0xA7440000) + 2055782858 - ((2 * ((v713 << 18) ^ 0xA7440000)) & 0xF5100000);
  v765 = ((v713 << 21) ^ 0x3A200000) + 762511353 - ((2 * ((v713 << 21) ^ 0x3A200000)) & 0x5AC00000);
  LODWORD(STACK[0x548]) = v765;
  v766 = (v682 >> 13) ^ (v682 >> 20) ^ (v713 >> 1) ^ (unsigned __int16)((v713 ^ 0xBAA069D1) >> ((v682 >> 25) & 0x13 ^ 0x12 | (v682 >> 25) & 0x13 ^ 1));
  v767 = ((v766 ^ 0x5D502AD9) + 1250817633 - 2 * ((v766 ^ 0x5D502AD9) & 0x4A8DF663 ^ v766 & 2)) ^ v740;
  v768 = (v767 + 1142960307 - ((2 * v767) & 0x88406166)) ^ v613;
  v769 = (v682 >> 21) ^ 0x4E13321A;
  v770 = (v768 + 1309880836 - ((2 * v768) & 0x9C266408)) ^ v769;
  v771 = (v770 - 1301693221 - ((2 * v770) & 0x64D379B6)) ^ v743;
  v772 = (v771 - 935492551 - ((2 * v771) & 0x907B0872)) ^ v747;
  v773 = (v682 >> 14) ^ 0x5EA02300;
  v774 = (v772 + 1587555334 - ((2 * v772) & 0xBD40580C)) ^ v773;
  v775 = (v774 - 2000353026 - ((2 * v774) & 0x118A11FC)) ^ v748;
  v776 = (v682 >> 11) ^ 0xFC8FFF53;
  v777 = (v775 - 57702555 - ((2 * v775) & 0xF91F0ECA)) ^ v776;
  v778 = (v777 - 1760585509 - ((2 * v777) & 0x2E1F31B6)) ^ v604;
  v779 = v758 ^ (v778 - 1159470898 - ((2 * v778) & 0x75C7C19C));
  v780 = ((8 * v779) & 0xF7BFFA90 ^ 0x55103080) + ((4 * v779) ^ 0x5577E73F);
  LODWORD(v328) = (v713 << 28) ^ (v713 << 19) ^ ((v682 ^ 0xB961DFD8 ^ ~v681) << 31) ^ v764 ^ ((LODWORD(STACK[0x454]) ^ 0x51A33AD5)
                                                                                            + 1840957253
                                                                                            + ~(2
                                                                                              * ((LODWORD(STACK[0x454]) ^ 0x51A33AD5) & 0x6DBAC746 ^ STACK[0x454] & 2))) ^ v779;
  LODWORD(v328) = ((v328 ^ 0x3898C1D9) + 1322491069 - 2 * ((v328 ^ 0x3898C1D9) & 0x4ED39CBF ^ v328 & 2)) ^ LODWORD(STACK[0x698]);
  v781 = STACK[0x660];
  LODWORD(v328) = (v328 - 397459129 - ((2 * v328) & 0xD09E828E)) ^ LODWORD(STACK[0x660]);
  v782 = STACK[0x608];
  v783 = STACK[0x658];
  LODWORD(v328) = (v328 + 1552767664 - (LODWORD(STACK[0x608]) & (2 * v328))) ^ LODWORD(STACK[0x658]);
  LODWORD(v328) = (v328 - 39268442 - ((2 * v328) & 0xFB519F4C)) ^ v756;
  v784 = STACK[0x5F8];
  LODWORD(v328) = (v328 + 1455042840 - ((2 * v328) & 0xAD746230)) ^ LODWORD(STACK[0x5F8]);
  v785 = STACK[0x5F0];
  LODWORD(v328) = (v328 + 1540739102 - ((2 * v328) & 0xB7ABA03C)) ^ LODWORD(STACK[0x5F0]);
  LODWORD(v328) = (v328 + 762511353 - ((2 * v328) & 0x5AE5FFF2)) ^ v765;
  v786 = STACK[0x540];
  LODWORD(v328) = (v328 + 2055782858 - ((2 * v328) & 0xF5118394)) ^ LODWORD(STACK[0x540]);
  v787 = STACK[0x5EC];
  LODWORD(v328) = v755 ^ LODWORD(STACK[0x5EC]) ^ (v328 + 1385353791 - ((2 * v328) & 0xA525A47E));
  v788 = LODWORD(STACK[0x694]) ^ (v779 >> 21) ^ (v779 >> 27);
  LODWORD(STACK[0x694]) = v788;
  LODWORD(v604) = (((v682 >> 29) & 3) - 1976907858 - ((v682 >> 28) & 4)) ^ LODWORD(STACK[0x688]) | STACK[0x604] & 4;
  v789 = (32 * v779) ^ (v779 << 11) ^ (4 * v788) ^ (32 * v788) ^ ((unint64_t)(v788 ^ 0x5Cu) << (38 - (v788 & 0x1B ^ 0x18 | v788 & 0x1B ^ 3u))) ^ (v780 + (v328 ^ 0x3F36747A) - 2 * ((v328 ^ 0x3F367478) & (v780 + 69206709)) - 2078276939);
  LODWORD(STACK[0x698]) = (v789 ^ 0x25743150) + 1980359792 - 2 * ((v789 ^ 0x25743150) & 0x7609E471 ^ v789 & 1);
  v790 = (v682 >> 17) ^ HIBYTE(v682) ^ (v713 >> 9) ^ (v713 >> 5) ^ v604 ^ 0x5885299;
  v791 = (v790 - 1159470898 - ((2 * v790) & 0x75C7C19C)) ^ v757;
  v792 = (v791 + 1250817633 - ((2 * v791) & 0x951BECC2)) ^ v740;
  v793 = (v792 + 1142960307 - ((2 * v792) & 0x88406166)) ^ v613;
  v794 = (v793 + 1309880836 - ((2 * v793) & 0x9C266408)) ^ v769;
  v795 = (v794 - 1433232165 - ((2 * v794) & 0x552539B6)) ^ LODWORD(STACK[0x5B0]);
  v796 = (v795 - 935492551 - ((2 * v795) & 0x907B0872)) ^ v747;
  v797 = (v796 + 1587555334 - ((2 * v796) & 0xBD40580C)) ^ v773;
  v798 = (v797 - 2000353026 - ((2 * v797) & 0x118A11FC)) ^ v748;
  v799 = (v798 - 57702555 - ((2 * v798) & 0xF91F0ECA)) ^ v776;
  v800 = (v799 + 728228907 - ((2 * v799) & 0x56CFC856)) ^ LODWORD(STACK[0x5BC]);
  v801 = LODWORD(STACK[0x5B8]) ^ LODWORD(STACK[0x570]) ^ (v800 - 1207074966 - ((2 * v800) & 0x701AFED4));
  v802 = (v713 << 15) ^ (v713 << 8) ^ (v713 << 27) ^ (((v713 << 23) ^ 0xE8800000)
                                                    - 1858431623
                                                    - (STACK[0x6A8] & 0x22222222)) ^ LODWORD(STACK[0x6B0]) ^ 0x1C815100;
  v803 = (v802 + 1455042840 - ((2 * v802) & 0xAD746236)) ^ v784;
  v804 = (v803 + 115497567 - ((2 * v803) & 0xDC4B4BE)) ^ LODWORD(STACK[0x6C0]);
  v805 = (v804 - 110711249 - ((2 * v804) & 0xF2CD5C5E)) ^ LODWORD(STACK[0x6E4]);
  v806 = (v805 - 397459129 - ((2 * v805) & 0xD09E828E)) ^ v781;
  v807 = (v806 + 1552767664 - (v782 & (2 * v806))) ^ v783;
  v808 = (v807 - 39268442 - ((2 * v807) & 0xFB519F4C)) ^ LODWORD(STACK[0x544]);
  v809 = (v808 + 1685856190 - ((2 * v808) & 0xC8F83F7C)) ^ v581;
  v810 = (v809 + 2055782858 - ((2 * v809) & 0xF5118394)) ^ v786;
  v811 = (v810 + 1540739102 - ((2 * v810) & 0xB7ABA03C)) ^ v785;
  v812 = (v811 + 762511353 - ((2 * v811) & 0x5AE5FFF2)) ^ LODWORD(STACK[0x548]);
  v813 = (v812 + 126950213 - ((2 * v812) & 0xF22368A)) ^ LODWORD(STACK[0x6DC]);
  v814 = (v813 + 1385353791 - ((2 * v813) & 0xA525A47E)) ^ v787;
  v815 = ((v603 << 31) | 0x5C62059F) ^ ((v603 ^ 0x2356B637) << 12) ^ (4 * LODWORD(STACK[0x5D8])) ^ (32
                                                                                                  * LODWORD(STACK[0x5D8])) ^ (LODWORD(STACK[0x5D8]) << 11) ^ LODWORD(STACK[0x5FC]) ^ (32 * LODWORD(STACK[0x5FC])) ^ (LODWORD(STACK[0x5FC]) << 11) ^ (LODWORD(STACK[0x5D4]) + 233) ^ LODWORD(STACK[0x700]) ^ (4 * v801) ^ (32 * v801) ^ (v801 << 11) ^ (4 * (v801 >> 21)) ^ (32 * (v801 >> 21)) ^ (v801 >> 21 << 11) ^ (v814 + 1060533370 - ((2 * v814) & 0x7E6CE8F4));
  v816 = (v815 + 1400617464 - ((2 * v815) & 0xA6F773F0)) ^ LODWORD(STACK[0x610]);
  v817 = v603 ^ 0x60B03CFD ^ (v816 - ((2 * v816) & 0x21CF1D12) - 1863872887);
  v818 = (v817 - 1538639686 - ((2 * v817) & 0x48947174)) ^ LODWORD(STACK[0x61C]);
  v819 = (v818 + 1621737388 - ((2 * v818) & 0xC1537F58)) ^ LODWORD(STACK[0x630]);
  v820 = (v819 + 964732145 - ((2 * v819) & 0x730149E2)) ^ LODWORD(STACK[0x62C]);
  v821 = (v820 + 1607477932 - ((2 * v820) & 0xBFA05558)) ^ LODWORD(STACK[0x6F0]);
  v822 = (v821 - 1414707574 - ((2 * v821) & 0x575A8D14)) ^ LODWORD(STACK[0x54C]);
  v823 = (v822 + 575678995 - ((2 * v822) & 0x44A05426)) ^ LODWORD(STACK[0x6BC]);
  v824 = (v823 + 337010327 - ((2 * v823) & 0x282CBD2E)) ^ LODWORD(STACK[0x4A4]);
  v825 = (v824 - 1244117890 - ((2 * v824) & 0x6BB088FC)) ^ LODWORD(STACK[0x624]);
  v826 = (v825 + 1484557333 - ((2 * v825) & 0xB0F9182A)) ^ LODWORD(STACK[0x620]);
  v827 = (v826 - 917425945 - ((2 * v826) & 0x92A261CE)) ^ LODWORD(STACK[0x628]);
  v828 = (v827 + 261954712 - ((2 * v827) & 0x1F3A3930)) ^ LODWORD(STACK[0x634]);
  v829 = (v828 - 1429289057 - ((2 * v828) & 0x559D8F3E)) ^ LODWORD(STACK[0x45C]);
  v830 = LODWORD(STACK[0x5D8]) ^ 0xE4BC0445 ^ (v829 - ((2 * v829) & 0xD3182802) - 376695807);
  v831 = v801 ^ LODWORD(STACK[0x490]) ^ (v830 - ((2 * v830) & 0x98069C0C) - 872198650);
  v832 = v831 ^ (v801 >> 21);
  v833 = STACK[0x64C];
  LODWORD(STACK[0x6BC]) = (LODWORD(STACK[0x64C]) ^ 0x280767E) << ((v831 ^ (v801 >> 21) ^ 0x3B) & 0xD ^ 0xC) << ((v831 ^ (v801 >> 21) ^ 0x3B) & 0xD ^ 1);
  v834 = STACK[0x650];
  v835 = ((LODWORD(STACK[0x650]) << 19) ^ 0x29F80000)
       - 1904934197
       - ((2 * ((LODWORD(STACK[0x650]) << 19) ^ 0x29F80000)) & 0x1CE00000);
  LODWORD(STACK[0x6E4]) = v835;
  v836 = ((v834 << 14) ^ 0x914FC000) - 513569529 - ((2 * ((v834 << 14) ^ 0x914FC000)) & 0xC2C70000);
  LODWORD(STACK[0x6DC]) = v836;
  LODWORD(STACK[0x700]) = LODWORD(STACK[0x3F4]) - 1363995799 - ((LODWORD(STACK[0x3F8]) << 29) & 0x40000000);
  v837 = STACK[0x3FC];
  v838 = (LODWORD(STACK[0x3FC]) >> 28) ^ (LODWORD(STACK[0x3FC]) >> 27) ^ (LODWORD(STACK[0x3FC]) >> 15) ^ LODWORD(STACK[0x2CC]) ^ (v834 >> 2) ^ 0x3DC9941F;
  v839 = STACK[0x3C4];
  v840 = (((v838 + 1973555767 - ((2 * v838) & 0x6B44246E)) ^ LODWORD(STACK[0x398]))
        - 1820267102
        - 2
        * (((v838 + 1973555767 - ((2 * v838) & 0x6B44246E)) ^ LODWORD(STACK[0x398])) & 0x1380EDAA ^ (v838 + 1973555767 - ((2 * v838) & 0x6B44246E)) & 8)) ^ LODWORD(STACK[0x3C4]);
  v841 = (LODWORD(STACK[0x3FC]) >> 18) ^ 0xCD6C47AF;
  v842 = (v840 - 848541937 - ((2 * v840) & 0x9AD88E1E)) ^ v841;
  v843 = STACK[0x3B8];
  v844 = (v842 + 1928199035 - ((2 * v842) & 0xE5DBF6F6)) ^ LODWORD(STACK[0x3B8]);
  v845 = (LODWORD(STACK[0x3FC]) >> 13) ^ 0xB79FABDC;
  v846 = (v844 - 1214267425 - ((2 * v844) & 0x6F3F7FBE)) ^ v845;
  v847 = STACK[0x3AC];
  v848 = (v846 + 324190684 - ((2 * v846) & 0x26A583B8)) ^ LODWORD(STACK[0x3AC]);
  v849 = (v848 + 809077835 - ((2 * v848) & 0x60731896)) ^ LODWORD(STACK[0x2C8]);
  v850 = (v849 - 870866200 - ((2 * v849) & 0x982F45D0)) ^ LODWORD(STACK[0x2C4]);
  v851 = STACK[0x39C];
  v852 = (v850 - 609394423 - ((2 * v850) & 0xB75AC212)) ^ LODWORD(STACK[0x39C]);
  v853 = (v834 >> 4) ^ LODWORD(STACK[0x2C0]) ^ (v852 - ((2 * v852) & 0x228F82FE) - 1857568385);
  LODWORD(STACK[0x6C0]) = v853;
  LODWORD(STACK[0x62C]) = v853 ^ 0x96FEF356;
  v854 = (((v853 ^ 0x96FEF356) >> 26) & 0x3A ^ 2) + (((v853 ^ 0x96FEF356) >> 27) ^ 0xEE9FF69C);
  v855 = (((v853 ^ 0x96FEF356) >> 20) & 0x3FE ^ 0xF6) + (((v853 ^ 0x96FEF356) >> 21) ^ 0xECEBF984);
  v856 = v854 + v855 - 2 * ((v854 + 291506531) & (v855 + 320079361)) + 611585892;
  LODWORD(STACK[0x6A8]) = (v856 ^ 0x5FFBEDB1) + 4687 + ((2 * v856) & 0xBFF7DB62);
  v857 = (((v837 >> 20) ^ (v834 >> 1) ^ 0x7B9322B7)
        + 324190684
        - ((2 * ((v837 >> 20) ^ (v834 >> 1) ^ 0x7B9322B7)) & 0x26A583B8)) ^ v847;
  v858 = (v857 - 2016708344 - ((2 * v857) & 0xF96F210)) ^ LODWORD(STACK[0x2D0]);
  v859 = (v858 - 1897408535 - ((2 * v858) & 0x1DCFAFD2)) ^ LODWORD(STACK[0x3B4]);
  v860 = (v859 - 1820267102 - ((2 * v859) & 0x2701DB44)) ^ v839;
  v861 = (v860 - 1161469336 - ((2 * v860) & 0x758AC4D0)) ^ LODWORD(STACK[0x3C8]);
  v862 = (v861 - 2128740904 - ((2 * v861) & 0x23BFBB0)) ^ LODWORD(STACK[0x3C0]);
  v863 = (v862 - 848541937 - ((2 * v862) & 0x9AD88E1E)) ^ v841;
  v864 = (v863 - 42044084 - ((2 * v863) & 0xFAFCEA98)) ^ LODWORD(STACK[0x3BC]);
  v865 = (v864 + 1928199035 - ((2 * v864) & 0xE5DBF6F6)) ^ v843;
  v866 = (v865 - 1214267425 - ((2 * v865) & 0x6F3F7FBE)) ^ v845;
  v867 = (v866 + 1274678024 - ((2 * v866) & 0x97F41610)) ^ LODWORD(STACK[0x3B0]);
  v868 = (v834 >> 4) ^ v851 ^ (v867 - 609394423 - ((2 * v867) & 0xB75AC212));
  v869 = (v868 >> 27) ^ (v837 >> 31) ^ (v868 >> 21);
  v870 = (v833 << 31) ^ (v834 << 12) ^ (4 * v868) ^ (v868 << 11) ^ (32 * v868) ^ (4 * v869) ^ (v869 << 11) ^ (32 * v869) ^ LODWORD(STACK[0x6E0]) ^ (LODWORD(STACK[0x6E8]) - 1385275551) ^ 0x8999F2DE;
  v871 = v833 ^ 0x32B3E37D ^ (v870 - ((2 * v870) & 0x60672A06) + 808686851);
  v872 = (v871 + 1166489273 - ((2 * v871) & 0x8B0E6D72)) ^ LODWORD(STACK[0x3F0]);
  v873 = (v872 - 1856671375 - ((2 * v872) & 0x22AAE2E2)) ^ LODWORD(STACK[0x3EC]);
  v874 = (v873 - 175124254 - ((2 * v873) & 0xEB1FA1C4)) ^ LODWORD(STACK[0x67C]);
  v875 = (v874 + 1826242066 - ((2 * v874) & 0xD9B47C24)) ^ LODWORD(STACK[0x3E8]);
  v876 = (v875 - 513569529 - ((2 * v875) & 0xC2C71A0E)) ^ v836;
  v877 = (v876 + 251477261 - ((2 * v876) & 0x1DFA7A1A)) ^ LODWORD(STACK[0x3E4]);
  v878 = (v877 - 673638207 - ((2 * v877) & 0xAFB23182)) ^ LODWORD(STACK[0x670]);
  v879 = (v878 - 1904934197 - ((2 * v878) & 0x1CEA0596)) ^ v835;
  v880 = (v879 - 1843874823 - ((2 * v879) & 0x243167F2)) ^ LODWORD(STACK[0x3E0]);
  v881 = (v880 - 1735849175 - ((2 * v880) & 0x31121652)) ^ LODWORD(STACK[0x668]);
  v882 = (v881 - 1107327915 - ((2 * v881) & 0x7BFF08AA)) ^ LODWORD(STACK[0x3DC]);
  v883 = (((v882 - 1044004503 - ((2 * v882) & 0x838B82D2)) ^ LODWORD(STACK[0x654]))
        - 1363995799
        - 2
        * (((v882 - 1044004503 - ((2 * v882) & 0x838B82D2)) ^ LODWORD(STACK[0x654])) & 0x2EB3136D ^ (v882 - 1044004503 - ((2 * v882) & 0x838B82D2)) & 4)) ^ LODWORD(STACK[0x700]);
  LODWORD(STACK[0x6B0]) = v869 ^ v868 ^ (v883 - ((2 * v883) & 0x5E357E88) + 790282052);
  LODWORD(STACK[0x6E0]) = (((v832 ^ 0xA90C333B) << 13) ^ 0x3E91C000)
                        - 486125268
                        - ((2 * (((v832 ^ 0xA90C333B) << 13) ^ 0x3E91C000)) & 0xC60C8000);
  v884 = (((v832 ^ 0xA90C333B) << 11) ^ 0x8FA47000)
       + 1476775437
       - ((2 * (((v832 ^ 0xA90C333B) << 11) ^ 0x8FA47000)) & 0xB00B9000);
  LODWORD(STACK[0x660]) = v884;
  LODWORD(STACK[0x688]) = (((v832 ^ 0xA90C333B) << 18) ^ 0xD2380000)
                        + 557481913
                        - ((2 * (((v832 ^ 0xA90C333B) << 18) ^ 0xD2380000)) & 0x42700000);
  LODWORD(STACK[0x6E8]) = (((v832 ^ 0xA90C333B) << 27) ^ 0x70000000)
                        + 469444702
                        - ((2 * (((v832 ^ 0xA90C333B) << 27) ^ 0x70000000)) & 0x30000000);
  v885 = v832 ^ 0x3DFDC7B5;
  v886 = v885 >> (STACK[0x5B4] & 0xF) >> (STACK[0x5B4] & 0xF ^ 0xF);
  v887 = v886 + 916311264 - ((2 * v886) & 0x6D3B99C0);
  v888 = (v832 ^ 0xA90C333B) << 23;
  v889 = (v888 ^ 0x47000000) + 1869731221 - ((2 * (v888 ^ 0x47000000)) & 0xDE000000);
  v890 = (v831 >> 28) ^ (v831 >> 27) ^ (v831 >> 18) ^ 0xF7B;
  v891 = (((v832 ^ 0xA90C333B) << 21) ^ 0x91C00000)
       + 1996629110
       - ((2 * (((v832 ^ 0xA90C333B) << 21) ^ 0x91C00000)) & 0xEE000000);
  v892 = (((v832 ^ 0xA90C333B) << 26) ^ 0x38000000)
       - 1110522599
       - ((2 * (((v832 ^ 0xA90C333B) << 26) ^ 0x38000000)) & 0x78000000);
  v893 = (((v832 ^ 0xA90C333B) << 22) ^ 0x23800000) - 804984253 - (v888 & 0xA0000000);
  v894 = (v831 >> 13) ^ ((v832 ^ 0xA90C333B) >> 4) ^ v887 ^ 0x94EF0A6 ^ (v890 + 916311264 - ((2 * v890) & 0x19C0));
  v895 = (v831 >> 29) ^ 0xC2236F1A ^ (v831 >> 30);
  v896 = (v894 - 1037865190 + (~(2 * v894) | 0x7BB921C9) + 2) ^ v895;
  LODWORD(v613) = (v831 >> 21) ^ 0x3DE5FA49;
  v897 = (v896 + 1038482342 - ((2 * v896) & 0x7BCBF74C)) ^ v613;
  v898 = (v831 >> 19) ^ 0xB69B3C07;
  v899 = (v897 - 1231340616 - ((2 * v897) & 0x6D367770)) ^ v898;
  v900 = (v831 >> 14) ^ 0xFD0C7691;
  v901 = (v899 - 49512090 - ((2 * v899) & 0xFA1902CC)) ^ v900;
  v902 = (v831 >> 11) ^ 0xD49357ED;
  v903 = (v901 - 728438699 - ((2 * v901) & 0xA929D0AA)) ^ v902;
  v904 = (v832 >> 10) ^ 0x143DF94E;
  v905 = (v903 + 338855487 - ((2 * v903) & 0x28650C7E)) ^ v904;
  LODWORD(v581) = (v832 >> 9) ^ 0x747D5C4D;
  v906 = (v905 + 1952686766 - ((2 * v905) & 0xE8C7455C)) ^ v581;
  v907 = (v832 >> 6) ^ ((v832 ^ 0xA90C333B) >> 5) ^ 0x8C7E3E95;
  v908 = v907 ^ (v906 - 1937127029 - ((2 * v906) & 0x19139316));
  v909 = v908 ^ ((v832 ^ 0xA90C333B) >> 2);
  v910 = (v909 >> 27) ^ (v887 >> 30) ^ (v909 >> 21);
  v911 = LODWORD(STACK[0x6C8]) ^ (LODWORD(STACK[0x6A0]) + 42923665) ^ (16 * (v832 ^ 0xA90C333B)) ^ (32
                                                                                                  * (v832 ^ 0xA90C333B)) ^ ((v832 ^ 0xA90C333B) << 14) ^ ((v832 ^ 0xA90C333B) << 17) ^ ((v832 ^ 0xA90C333B) << 19) ^ ((v832 ^ 0xA90C333B) << 28) ^ ((v832 ^ 0xA90C333B) << 30) ^ (4 * v909) ^ (32 * v909) ^ (v910 | (v909 << 11)) ^ (4 * v910) ^ (32 * v910) ^ (v910 << 11) ^ 0xE96D6939;
  v912 = (4 * (v832 ^ 0xA90C333B)) ^ (8 * (v832 ^ 0xA90C333B)) ^ 0x8F7D505F;
  v913 = (v911 + 2067080727 - ((2 * v911) & 0xF66A4C2E)) ^ v912;
  v914 = (v913 + 1476775437 - ((2 * v913) & 0xB00B9C1A)) ^ v884;
  v915 = STACK[0x6E0];
  v916 = (v914 - 486125268 - ((2 * v914) & 0xC60CA258)) ^ LODWORD(STACK[0x6E0]);
  v917 = STACK[0x688];
  v918 = (v916 + 557481913 - ((2 * v916) & 0x4274FF72)) ^ LODWORD(STACK[0x688]);
  v919 = (v918 + 1996629110 - ((2 * v918) & 0xEE0448EC)) ^ v891;
  v920 = (v919 - 804984253 - ((2 * v919) & 0xA009D486)) ^ v893;
  v921 = (v920 + 1869731221 - ((2 * v920) & 0xDEE3AB2A)) ^ v889;
  v922 = (v921 - 1110522599 - ((2 * v921) & 0x7B9D8A32)) ^ v892;
  v923 = STACK[0x6E8];
  LODWORD(STACK[0x6F0]) = v909 ^ LODWORD(STACK[0x6E8]) ^ (v922 + 469444702 - ((2 * v922) & 0x37F650BC));
  v924 = v885 << ((85 * ((v908 & 0xD3 ^ 0x80) + (v908 & 0xD3 ^ 0x53))) | 6u);
  LODWORD(v885) = (v831 >> 22) ^ 0x45FA43 ^ HIBYTE(v831) ^ (v831 >> 25) ^ (v831 >> 17) ^ HIWORD(v831) ^ (v831 >> 12) ^ (v832 >> 7) ^ (v832 >> 8);
  LODWORD(v885) = (v885 + 1038482342 - ((2 * v885) & 0x7BCBF74C)) ^ v613;
  LODWORD(v885) = (v885 - 1037865190 - ((2 * v885) & 0x446DE36) + 1) ^ v895;
  LODWORD(v885) = (v885 - 1231340616 - ((2 * v885) & 0x6D367770)) ^ v898;
  LODWORD(v885) = (v885 - 49512090 - ((2 * v885) & 0xFA1902CC)) ^ v900;
  LODWORD(v885) = (v885 - 728438699 - ((2 * v885) & 0xA929D0AA)) ^ v902;
  LODWORD(v885) = (v885 + 338855487 - ((2 * v885) & 0x28650C7E)) ^ v904;
  LODWORD(v885) = (v885 + 1952686766 - ((2 * v885) & 0xE8C7455C)) ^ v581;
  LODWORD(v885) = v907 ^ (v885 - 1937127029 - ((2 * v885) & 0x19139316));
  v925 = ((32 * v885) ^ 0x94F1F480) - 1116331069 - 2 * (((32 * v885) ^ 0x94F1F480) & 0x3D7623E0 ^ (32 * v885) & 0x20);
  LOBYTE(v831) = ~(((32 * v885) ^ 0x80) - 61 - 2 * (((32 * v885) ^ 0x80) & 0xE0 ^ (32 * v885) & 0x20)) & 0x80;
  v926 = ((unint64_t)((v885 >> 21) ^ 0x25) << ((119 * ((v831 ^ 0x8E) + v831)) & 0xFE)) ^ __ROR4__(v885, 21);
  v927 = (4 * v885) ^ (32 * (v885 >> 21)) ^ (v885 >> 21 << 11) ^ 0x2EE23215 ^ v926;
  LODWORD(v885) = v885 ^ 0x360AEA59 ^ (v927 + 850224637 - 2 * (v927 & 0x32AD65FF ^ v926 & 2));
  v928 = (LODWORD(STACK[0x694]) | (v832 << 24)) ^ (v832 << 25) ^ ((v832 ^ 0xA90C333B) << 8) ^ ((v832 ^ 0xA90C333B) << 7) ^ ((v832 ^ 0xA90C333B) << 10) ^ ((v832 ^ 0xA90C333B) << 16) ^ ((v832 ^ 0xA90C333B) << 20) ^ v912 ^ v924 ^ LODWORD(STACK[0x698]) ^ (v885 + 2067080727 - ((2 * v885) & 0xF66A4C2E));
  LODWORD(STACK[0x6A0]) = v928;
  v929 = ((((LODWORD(STACK[0x660]) ^ 0x3BEDB21 ^ v928)
          - 486125268
          - ((2 * (LODWORD(STACK[0x660]) ^ 0x3BEDB21 ^ v928)) & 0xC60CA258)) ^ v915)
        + 557481913
        - ((2
          * (((LODWORD(STACK[0x660]) ^ 0x3BEDB21 ^ v928)
            - 486125268
            - ((2 * (LODWORD(STACK[0x660]) ^ 0x3BEDB21 ^ v928)) & 0xC60CA258)) ^ v915)) & 0x4274FF72)) ^ v917;
  v930 = (v929 + 1996629110 - ((2 * v929) & 0xEE0448EC)) ^ v891;
  v931 = (v930 - 804984253 - ((2 * v930) & 0xA009D486)) ^ v893;
  v932 = (v931 + 1869731221 - ((2 * v931) & 0xDEE3AB2A)) ^ v889;
  v933 = (v932 - 1110522599 - ((2 * v932) & 0x7B9D8A32)) ^ v892;
  LODWORD(STACK[0x660]) = v933 + 469444702 - ((2 * v933) & 0x37F650BC);
  LODWORD(STACK[0x658]) = v925 ^ v923;
  v934 = LODWORD(STACK[0x2AC]) + 1459609050;
  if (!v320)
    v934 = 1457249590 - LODWORD(STACK[0x2AC]);
  v935 = STACK[0x3D4];
  v936 = ((v935 << 26) ^ 0x30000000) + 1775890252 - ((2 * ((v935 << 26) ^ 0x30000000)) & 0xD0000000);
  v937 = (STACK[0x638] & a40 ^ 0xB2000000 ^ ((LODWORD(STACK[0x2B0]) ^ 0x7FC7708A) - 1458429320 + v934))
       + 1775890252
       - 2
       * ((STACK[0x638] & a40 ^ 0xB2000000 ^ ((LODWORD(STACK[0x2B0]) ^ 0x7FC7708A) - 1458429320 + v934)) & 0x69D9EF5C ^ ((LODWORD(STACK[0x2B0]) ^ 0x7FC7708A) - 1458429320 + v934) & 0x10);
  v938 = STACK[0x3D8];
  v939 = (v938 >> 29) ^ (v938 >> 31) ^ (v938 >> 26) ^ (v938 >> 15) ^ (LODWORD(STACK[0x3D4]) >> 3) ^ 0xC36BE9D;
  v940 = (LODWORD(STACK[0x3D8]) >> 30) ^ 0x39EEC95F;
  LODWORD(STACK[0x694]) = v940;
  v941 = (v939 + 971950430 - ((2 * v939) & 0x73DD92BC)) ^ v940;
  v942 = (v941 - 1006035623 - ((2 * v941) & 0x88123AB2)) ^ (v938 >> 25) ^ 0xC4091D69;
  v943 = (v942 + 114046558 - ((2 * v942) & 0xD986CBC)) ^ (v938 >> 22) ^ 0x6CC37D8;
  v944 = (v943 + 1474114017 - ((2 * v943) & 0xAFBA63C2)) ^ (v938 >> 19) ^ 0x57DD3DD7;
  v945 = (v938 >> 18) ^ 0x36182E1A ^ (v944 + 907554330 - ((2 * v944) & 0x6C306CEC) + 2140);
  v946 = (v945 + 840413115 - ((2 * v945) & 0x642F5F76)) ^ HIWORD(v938) ^ 0x3217CE08;
  v947 = (v946 - 1018255082 - ((2 * v946) & 0x869D522C)) ^ (v938 >> 12) ^ 0xC348B228;
  v948 = (v935 >> 10) ^ 0xE46EAB46;
  LODWORD(STACK[0x688]) = v948;
  v949 = (v947 - 461977667 - ((2 * v947) & 0xC8ED8F7A)) ^ v948;
  v950 = (v935 >> 8) ^ 0x1E009C8;
  LODWORD(STACK[0x698]) = v950;
  v951 = (v949 + 25279015 - ((2 * v949) & 0x303744E)) ^ v950;
  v952 = (v951 + 884993354 - ((2 * v951) & 0x697FDA94)) ^ (v935 >> 7) ^ 0x347C8A94;
  v953 = (v935 >> 6) ^ (v935 >> 4) ^ 0xAF9A22A7 ^ (v952 - 1373836005 - ((2 * v952) & 0x5C39DA36));
  v954 = (v953 >> 27) ^ (v953 >> 21);
  LODWORD(STACK[0x634]) = v936;
  v955 = v936 ^ (v935 << 29) ^ (4 * v953) ^ (32 * v953) ^ (v953 << 11) ^ (4 * v954) ^ v937;
  LODWORD(STACK[0x630]) = ((v935 << 11) ^ 0x9F786000) + 831371314 - ((2 * ((v935 << 11) ^ 0x9F786000)) & 0x631B7000);
  LODWORD(STACK[0x6E8]) = v954;
  v956 = (32 * v954) ^ (v954 << 11) ^ 0x82FD2300 ^ v955;
  v957 = v956 + 178910400 - 2 * (v956 & 0xAA9F4C8 ^ v955 & 8);
  v958 = v953 ^ 0xC462E91F ^ ((v957 ^ (((v935 << 28) ^ 0xCAA9F4DB) - 27))
                            - 2 * ((v957 ^ (((v935 << 28) ^ 0xCAA9F4DB) - 27)) & 0x4279D7FF ^ v957 & 0x10)
                            - 1032202257);
  LODWORD(STACK[0x6C8]) = v958 - ((2 * v958) & 0xA348B646);
  JUMPOUT(0x247817408);
}

uint64_t sub_247819758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38)
{
  int v38;
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  uint64_t v42;

  v40 = STACK[0x710];
  v41 = *(_QWORD *)(a38 + 24);
  v42 = (v38 - 951);
  STACK[0x700] = (unint64_t)&STACK[0x840] + STACK[0x710] + 80;
  STACK[0x708] = (unint64_t)&STACK[0x840] + v40 + 1184;
  STACK[0x710] = (v42 ^ 0xF8E) + v40;
  STACK[0x438] = v41;
  STACK[0x5A8] = (unint64_t)&STACK[0x840] + v40;
  STACK[0x430] = (unint64_t)&STACK[0x840] + v40 + 2144;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v39
                                                                                 + 8
                                                                                 * (int)((3085 * (v41 == 0)) ^ v42))
                                                                     - 4))(563559274, 1523786290, 2512294909, 2225998150);
}

uint64_t sub_247819B88@<X0>(int a1@<W0>, int a2@<W1>, int a3@<W2>, int a4@<W3>, int a5@<W4>, uint64_t a6@<X6>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  int v22;
  unint64_t v23;
  int v24;
  int v25;
  int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  int v34;

  v17 = (a5 ^ 0x7F) + (a3 ^ v11) + 934268241 * (a6 + *((_DWORD *)&STACK[0x718] + a6 - 1967813573) * v12) - 1302236613;
  v18 = (v17 ^ 0x7EB9FF9F) - 2126118815 + ((2 * v17) & 0xFD73FF3E);
  v19 = (v18 - 875632995 * (v18 % 0xE4B) + v10 - (a2 & (2 * (v18 - 875632995 * (v18 % 0xE4B))))) ^ a1;
  v20 = ((v19 + v8 - (v16 & (2 * v19))) ^ v9) + (v14 ^ 0x9B8E926B);
  v21 = v14 ^ 0x9B8E926B ^ (v20 + 2068969146);
  v22 = ((2 * ((a1 ^ v10) + a4 - v20)) & 0x6B7EEFDA) + (((a1 ^ v10) + a4 - v20) ^ v13);
  HIDWORD(v23) = v20 + 2068969146;
  LODWORD(v23) = v20 + 2068969146;
  v24 = (v9 ^ v8) + a4 - v20 - ((2 * ((v9 ^ v8) + a4 - v20)) & 0x376992D8) - 1682650772;
  v25 = (v23 >> 31) - v22 + v13;
  v26 = v25 ^ v24;
  v27 = v21 - ((2 * v21) & 0x79AAB55A) - 1126868307;
  v28 = v25 ^ v27;
  HIDWORD(v23) = v26 ^ v27 ^ 0x727FCF92;
  LODWORD(v23) = v26 ^ ~v27;
  v29 = v22 + 1245743123 + (v26 ^ v27 ^ v15) + a7 - (v7 & (2 * (v22 + 1245743123 + (v26 ^ v27 ^ v15))));
  v30 = (v26 ^ 0xB1556AC0) + (v28 ^ 0x9634F901) + (((v23 >> 31) + a7 - (v7 & (2 * (v23 >> 31)))) ^ v29);
  v31 = v30 - ((2 * v30 + 958594190) & 0xF5BDD714) + 393243089;
  v32 = ((2 * ((v31 ^ 0x7ADEEB8A) + (v29 ^ a7))) & 0x1FFFF7BE) + (((v31 ^ 0x7ADEEB8A) + (v29 ^ a7)) ^ 0x8FFFFBDF);
  HIDWORD(v23) = v31 ^ 0x1ADEEB8A;
  LODWORD(v23) = v31 ^ 0x60000000;
  v33 = ((v23 >> 29)
       - v32
       + ((2 * ((v28 ^ 0x69CB06FE) + (v31 ^ 0x85211475) + 1)) & 0x7EBFBBFE)
       + (((v28 ^ 0x69CB06FE) + (v31 ^ 0x85211475) + 1) ^ 0x3F5FDDFF)
       + 1352670688) ^ v31 ^ v26;
  v34 = (v33 ^ 0x34747EB5) - ((2 * (v33 ^ 0x34747EB5) + 240188878) & 0xFFD63AE) + 1327968446;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6D0] + 8 * ((127 * (a6 == 1967813646)) ^ a5)) - 4))(v32 + 1879049249 + (v34 ^ v11) + v10 - (a2 & (2 * (v32 + 1879049249 + (v34 ^ v11)))));
}

uint64_t sub_247819EE8()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * ((6069 * (v0 == 1159562611)) ^ v1)) - 4))();
}

uint64_t sub_24781A308(int a1, uint64_t a2, int a3)
{
  unsigned int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  _BYTE *v10;
  unsigned int v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v15;
  unsigned int v16;
  char v17;
  unsigned int v18;
  char v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  unsigned int v30;
  char v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  unsigned int v35;
  unsigned int v36;
  int v37;
  int v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  unsigned int v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  unint64_t v50;

  v9 = v6 - 37;
  v10 = (_BYTE *)STACK[0x5A8];
  v10[1632] = 0x80;
  v10[2063] = -127;
  v10[1537] = -126;
  v10[1968] = -125;
  v10[1442] = -124;
  v10[1873] = -123;
  v10[1347] = -122;
  v10[1778] = -121;
  v10[1252] = -120;
  v10[1683] = -119;
  v10[2114] = -118;
  v10[1588] = -117;
  v10[2019] = -116;
  v10[1493] = -115;
  v10[1924] = -114;
  v10[1398] = -113;
  v11 = a1 ^ v5;
  v12 = (431
       * (((((a3 & 0xF ^ 0xFFFFFFF8) + 976476832) ^ 0x360BDA9F | 0x4E32DBA8)
         - (((a3 & 0xF ^ 0xFFFFFFF8) + 976476832) ^ 0x360BDA9F | 0xB1CD2457)
         - 1311955881) ^ 0x420ADBA8)
       + 139213)
      % 0x3BD;
  v13 = STACK[0x708];
  v10[1632] = *(_BYTE *)(STACK[0x708] + v12);
  *(_BYTE *)(v13 + v12) = 0x80;
  v14 = v10[2063];
  v15 = (431 * ((v11 % (v9 ^ 0x624u) - ((2 * (v11 % (v9 ^ 0x624u))) & 0x10) - 298169016) ^ 0xEE3A4D48) + 139644) % 0x3BD;
  v10[2063] = *(_BYTE *)(v13 + v15);
  *(_BYTE *)(v13 + v15) = v14;
  v16 = (((v4 ^ v3) % 0xE) ^ 0x66565FFF) + 2 * ((v4 ^ v3) % 0xE);
  v17 = v10[1537];
  v10[1537] = *(_BYTE *)(v13 + (v16 - 1716936378) * ((a3 & 0x1AF ^ 0x187) + (((v8 ^ 0x14A) + 281) & 0x1AF)) % 0x3BD);
  *(_BYTE *)(v13 + (((185 - v16) | (v16 + 70)) & 0xA7 | 0x108) * (v16 - 1716936378) % 0x3BD) = v17;
  v18 = 2 * (((v7 ^ 0x338ACF62u) % 0xD) & 7) + (((v7 ^ 0x338ACF62u) % 0xD) ^ 0xD6CFFFB7);
  v19 = v10[1968];
  v20 = a1 ^ a3;
  v10[1968] = *(_BYTE *)(v13 + (431 * (v18 + ((435 - v18) & 0x143 ^ v18 & 3)) + 1473282036) % 0x3BD);
  v21 = (431 * v18 + 1473421249) % 0x3BD - ((2 * ((431 * v18 + 1473421249) % 0x3BD)) & 0x1B6) + 574875867;
  *(_BYTE *)(v13 + (v21 ^ 0x2243E8DB)) = v19;
  v22 = ((2 * ((v7 ^ 0xE9648273) + (v20 ^ 0x5568DF31) + 1)) & 0x77BBABDE)
      + (((v7 ^ 0xE9648273) + (v20 ^ 0x5568DF31) + 1) ^ 0xBBDDD5EF);
  v23 = (v21 & 0x131 ^ 0x11 | v21 & 0x131 ^ 0xEDEC1120) ^ v20;
  v24 = ((2 * v23) & 0xBBFDDFE6 ^ 0x112C4184) + (v23 ^ 0x7769CF3D);
  v25 = v11 - v24;
  v26 = v25 - 2039975090;
  v27 = (431 * ((v24 + 570494989) % 0xC)
                     + 140937
                     - 957 * ((4487950 * (unint64_t)(431 * ((v24 + 570494989) % 0xC) + 140937)) >> 32));
  v28 = v10[1442];
  v10[1442] = *(_BYTE *)(v13 + v27);
  v29 = (431 * (((v25 - 2039975090) % 0xB - ((2 * ((v25 - 2039975090) % 0xB)) & 0xC) + 1163515174) ^ 0x4559D526) + 141368)
      % 0x3BD;
  *(_BYTE *)(v13 + v27) = v28;
  v30 = v24 + (v4 ^ 0xA5386EBD);
  v31 = v10[1873];
  v10[1873] = *(_BYTE *)(v13 + v29);
  *(_BYTE *)(v13 + v29) = v31;
  v32 = (431 * ((v30 + 570494989) % 0xA)
                     + 141799
                     - 957 * ((4487950 * (unint64_t)(431 * ((v30 + 570494989) % 0xA) + 141799)) >> 32));
  v33 = v10[1347];
  v10[1347] = *(_BYTE *)(v13 + v32);
  *(_BYTE *)(v13 + v32) = v33;
  v34 = (431 * ((v22 + 1143089681) % 9)
                     + 142230
                     - 957 * ((4487950 * (unint64_t)(431 * ((v22 + 1143089681) % 9) + 142230)) >> 32));
  v35 = v25 + v22;
  v36 = ((2 * v26) & 0x7C1FBEFA ^ 0x70009AE8) + (v26 ^ 0x868F9209);
  LODWORD(v29) = v24 - v35 + v36 - 100684320;
  v37 = v35 - (v29 + 1350196086);
  v38 = v24 + v30 - 2 * ((v30 + 570494989) & (v24 + 570494989)) + v36 - 100684320;
  LODWORD(v15) = v38 + 854755965;
  LOBYTE(v30) = v10[1778];
  v10[1778] = *(_BYTE *)(v13 + v34);
  *(_BYTE *)(v13 + v34) = v30;
  LODWORD(v34) = 431 * (((_BYTE)v29 + 121) & 7) + 142661;
  v39 = (v34 - 957 * ((4487950 * (unint64_t)v34) >> 32));
  LOBYTE(v26) = v10[1252];
  v10[1252] = *(_BYTE *)(v13 + v39);
  v40 = v37 + v38 + 854755965;
  *(_BYTE *)(v13 + v39) = v26;
  LOBYTE(v39) = v10[1683];
  v41 = (431 * ((v36 - 285644370) % 7)
                     + 143092
                     - 957 * ((4487950 * (unint64_t)(431 * ((v36 - 285644370) % 7) + 143092)) >> 32));
  v10[1683] = *(_BYTE *)(v13 + v41);
  *(_BYTE *)(v13 + v41) = v39;
  v42 = ((2 * ((v37 - 73526396) % 5u)) & 4) + (((v37 - 73526396) % 5u) ^ 0x75FBF572);
  v43 = (431 * ((v38 + 200446653) % 6u)
                     + 143523
                     - 957 * ((4487950 * (unint64_t)(431 * ((v38 + 200446653) % 6u) + 143523)) >> 32));
  LOBYTE(v30) = v10[2114];
  v10[2114] = *(_BYTE *)(v13 + v43);
  *(_BYTE *)(v13 + v43) = v30;
  LOBYTE(v43) = v15 - (v29 + 118);
  LODWORD(v15) = (v15 - (v29 + 1350196086) + 169049701) ^ (v36 - 285644370);
  LODWORD(v15) = (v15 - ((2 * v15) & 0x8536D51E) - 1030002033) ^ 0xC29B6A8F;
  LOBYTE(v36) = v36 + v29 + 118 - 119 + v15;
  LOBYTE(v30) = v10[1588];
  v44 = v13;
  LOBYTE(v43) = v43 - (v36 ^ 0x3F);
  v10[1588] = *(_BYTE *)(v13 + (431 * v42 + 1557133156) % 0x3BD);
  *(_BYTE *)(v13
           + 431
           * (((v42 + 768141503 - ((2 * (_BYTE)v42 + 2) & 0xC)) ^ 0xA3C4DF65) + ((2 * (((_BYTE)v42 - 65) & 3)) ^ 4))
           % 0x3BD) = v30;
  v45 = 431 * (((v36 ^ 0x3F) + 2 * (_BYTE)v36 + 1) & 3) + 144385;
  v46 = (v45 - 957 * ((4487950 * (unint64_t)v45) >> 32));
  LOBYTE(v23) = v10[2019];
  v10[2019] = *(_BYTE *)(v13 + v46);
  *(_BYTE *)(v13 + v46) = v23;
  v47 = (431 * ((v40 - 727835708 + (int)v15) % 3u)
                     + 144816
                     - 957 * ((4487950 * (unint64_t)(431 * ((v40 - 727835708 + (int)v15) % 3u) + 144816)) >> 32));
  LOBYTE(v23) = v10[1493];
  v10[1493] = *(_BYTE *)(v13 + v47);
  *(_BYTE *)(v13 + v47) = v23;
  v48 = v10[1924];
  v49 = 214;
  if ((v43 & 1) == 0)
    v49 = 740;
  v10[1924] = *(_BYTE *)(v13 + v49);
  *(_BYTE *)(v13 + v49) = v48;
  v50 = STACK[0x6D0];
  *(_BYTE *)(v44 + (431 * (*(unsigned __int8 *)(v44 + 448) ^ 0x80u) + 279719) % ((v6 - 697339737) & 0x29908BBD ^ 0x108u)) = 0x80;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v50 + 8 * (v9 ^ 0x7B)) - 12))(139213);
}

void sub_24781AB70()
{
  JUMPOUT(0x24781AB1CLL);
}

uint64_t sub_24781AB7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, int a6, uint64_t a7, int a8)
{
  _BYTE *v8;
  int v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  unsigned int v14;
  int v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned int v21;
  uint64_t v22;
  char v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  uint64_t v27;
  int v28;
  int v29;
  char v30;
  unsigned int v31;
  uint64_t v32;
  uint64_t v33;
  int v34;
  uint64_t v35;
  char v36;
  unsigned int v37;
  int v38;
  int v39;
  unsigned int v40;
  char v41;
  char v42;
  unsigned int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  int v47;
  uint64_t v48;
  unsigned int v49;
  unsigned int v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  unint64_t v54;
  unsigned int v55;
  unsigned int v56;

  v15 = v9 ^ 1;
  v8[1632] = 0x80;
  v8[2063] = -127;
  v8[1537] = -126;
  v8[1968] = -125;
  v8[1442] = -124;
  v8[1873] = -123;
  v8[1347] = -122;
  v8[1778] = -121;
  v8[1252] = -120;
  v8[1683] = -119;
  v8[2114] = -118;
  v8[1588] = -117;
  v8[2019] = -116;
  v8[1493] = -115;
  v8[1924] = -114;
  v8[1398] = -113;
  v16 = (v12
                     + 431 * (v11 & 0xF ^ 4)
                     - 957 * ((4487950 * (unint64_t)(v12 + 431 * (v11 & 0xF ^ 4u))) >> 32));
  v8[1632] = *(_BYTE *)(v13 + v16);
  *(_BYTE *)(v13 + v16) = 0x80;
  v17 = v8[2063];
  v18 = (v12 + 431 * ((v10 ^ v14) % ((v9 ^ 1u) - 677)) + 431) % 0x3BD;
  v8[2063] = *(_BYTE *)(v13 + v18);
  *(_BYTE *)(v13 + v18) = v17;
  LODWORD(v18) = v12 + 431 * ((a6 ^ 0x66487BCBu) % 0xE) + 862;
  v19 = (v18 - 957 * ((4487950 * (unint64_t)v18) >> 32));
  v20 = v8[1537];
  v8[1537] = *(_BYTE *)(v13 + v19);
  *(_BYTE *)(v13 + v19) = v20;
  v21 = v12 + 431 * ((a8 ^ 0x9EB3FC9C) % 0xD) + 1293;
  LODWORD(v19) = v10 ^ v11;
  v22 = (v21 - 957 * ((4487950 * (unint64_t)v21) >> 32));
  v23 = v8[1968];
  v24 = (v10 ^ v14) - 1469480100 + (v10 ^ v11 ^ 0x9730F2DD);
  v25 = ((2 * v24) & 0xF1F9B6FE) + (v24 ^ 0x78FCDB7F);
  v26 = v10 ^ v11 ^ 0x68CF0D22;
  v8[1968] = *(_BYTE *)(v13 + v22);
  *(_BYTE *)(v13 + v22) = v23;
  LODWORD(v22) = v25 - 2029837183;
  v27 = (v12
                     + 431 * (v26 % 0xC)
                     + 1724
                     - 957 * ((4487950 * (unint64_t)(v12 + 431 * (v26 % 0xC) + 1724)) >> 32));
  v28 = (a8 ^ 0x445DB18D) + (v10 ^ v11 ^ 0x7ADCE3EC) + 1;
  v29 = v26 + (a6 ^ 0x24F02D5) - ((2 * (v26 + (a6 ^ 0x24F02D5))) & 0x69DB1FB8) + 887984092;
  v30 = v8[1442];
  v31 = ((2 * v28) & 0xCFFE1FFE) + (v28 ^ 0x67FF0FFF);
  v8[1442] = *(_BYTE *)(v13 + v27);
  *(_BYTE *)(v13 + v27) = v30;
  v32 = (v12 + 431 * (((v25 - 2029837183) % 0xB - 2 * (((v25 - 2029837183) % 0xB) & 1) - 1998996383) ^ 0x88D9BC61) + 2155)
      % 0x3BD;
  LOBYTE(v27) = v8[1873];
  v8[1873] = *(_BYTE *)(v13 + v32);
  *(_BYTE *)(v13 + v32) = v27;
  v33 = (v12
                     + 431 * ((v29 ^ 0x34ED8FDCu) % 0xA)
                     + 2586
                     - 957 * ((4487950 * (unint64_t)(v12 + 431 * ((v29 ^ 0x34ED8FDCu) % 0xA) + 2586)) >> 32));
  LOBYTE(v27) = *(_BYTE *)(v13 + v33);
  v34 = v19 ^ 0x5C2282FE ^ v29;
  v35 = v13;
  v36 = v8[1347];
  v8[1347] = v27;
  v37 = v25 + v31;
  v38 = ((2 * v22) & 0xFF9FFFDE ^ 0x71009AC8) + (v22 ^ 0xC74FB29B);
  LODWORD(v19) = v26 - v37 + v38 - 1162158117;
  v39 = v37 - (v19 + 412594079);
  *(_BYTE *)(v35 + v33) = v36;
  v40 = 431 * (((2 * ((v31 - 1744769023) % 9)) & 0x1C) + (((v31 - 1744769023) % 9) ^ 0xEF2EDDBE));
  LODWORD(v22) = v34 + v38 - 1162158117;
  v41 = v8[1778];
  LODWORD(v33) = (((843 - v40) & 0x3AD) + ((v40 + 180) & 0x3AD)) | 0x18;
  v40 += 1343936692;
  v8[1778] = *(_BYTE *)(v35 + v40 % v33);
  *(_BYTE *)(v35 + v40 % 0x3BD) = v41;
  v42 = v8[1252];
  v43 = v12 + 431 * (((_BYTE)v19 - 92) & 7) + 3448;
  v44 = (v43 - 957 * ((4487950 * (unint64_t)v43) >> 32));
  v8[1252] = *(_BYTE *)(v35 + v44);
  *(_BYTE *)(v35 + v44) = v42;
  v45 = (431 * (((2 * ((v38 - 1388754628) % 7u)) & 0xC) + (((v38 - 1388754628) % 7u) ^ 0x7E7B0F1E)) + 248757106) % 0x3BD;
  LOBYTE(v44) = v8[1683];
  v8[1683] = *(_BYTE *)(v35 + v45);
  *(_BYTE *)(v35 + v45) = v44;
  LOBYTE(v45) = v8[2114];
  v46 = (431 * (((2 * (((int)v22 - 982179786) % 6u)) & 0xC) + ((((int)v22 - 982179786) % 6u) ^ 0x4E7FF7BE)) - 695199807)
      % 0x3BD;
  v8[2114] = *(_BYTE *)(v35 + v46);
  v47 = (v22
       + 611238141
       - (v19
        + 412594079)
       - ((2 * (v22 + 611238141 - (v19 + 412594079)) + 643434056) & 0xBF2E43C6)
       - 222026489) ^ (v38 - 1388754628);
  *(_BYTE *)(v35 + v46) = v45;
  v48 = (a5 + 431 * ((v39 - 1859471251) % 5u) - 431) % 0x3BD;
  v49 = ((v47 ^ 0xDF9721E3) - 2 * ((v47 ^ 0xDF9721E3) & 0x56C455DD ^ v47 & 8) - 691776043) ^ 0xD6C455D5;
  LOBYTE(v47) = v8[1588];
  v8[1588] = *(_BYTE *)(v35 + v48);
  *(_BYTE *)(v35 + v48) = v47;
  v50 = a5 + 431 * ((((v49 + v38 + 81 + v19 - 97) ^ 2) + 2) & 3);
  LOBYTE(v48) = v8[2019];
  v51 = (v50 - 957 * ((4487950 * (unint64_t)v50) >> 32));
  v8[2019] = *(_BYTE *)(v35 + v51);
  *(_BYTE *)(v35 + v51) = v48;
  v52 = (a5
                     + 431 * ((v39 + (_DWORD)v22 + 611238141 + 842078118 + v49) % 3)
                     + 431
                     - 957
                     * ((4487950
                       * (unint64_t)(a5 + 431 * ((v39 + (_DWORD)v22 + 611238141 + 842078118 + v49) % 3) + 431)) >> 32));
  LOBYTE(v48) = v8[1493];
  v8[1493] = *(_BYTE *)(v35 + v52);
  *(_BYTE *)(v35 + v52) = v48;
  LODWORD(v19) = ((((v38 + 991077713 + v19 + 412594079) & 0xBAB96DD2 ^ 0xBAB96DD2)
                 + ((v38 + 991077713 + v19 + 412594079) & 0xBAB96DD2))
                * (((v19 + 644942772) & 0x315A896F ^ 0x315A896F) + ((v19 + 644942772) & 0x315A896F))) & 0xFFFFFFFE | ((_BYTE)v49 + (_BYTE)v38 + 81 + (_BYTE)v22 - 3) & 1;
  LODWORD(v19) = ((2 * v19) & 0xFE7C6FFE) + (v19 ^ 0xFF3E37FF);
  LODWORD(v48) = (431 * (int)v19 + 1178720636) % 0x3BDu
               - ((2 * ((431 * (int)v19 + 1178720636) % 0x3BDu)) & 0x3A)
               + 164443165;
  LODWORD(v22) = v48 ^ 0x9CD341D;
  LODWORD(v19) = (unint64_t)(431
                                  * (v19 + (((v48 & 0x18B ^ 0x7D) + (v48 & 0x18B ^ 0x1F6) + 396) & 0x143))
                                  + 1178581423)
               % 0x3BD;
  LOBYTE(v48) = v8[1924];
  v8[1924] = *(_BYTE *)(v35 + v22);
  *(_BYTE *)(v35 + v19) = v48;
  v53 = STACK[0x708];
  v54 = STACK[0x6D0];
  v55 = *((unsigned __int8 *)off_2518F0F80[v15 ^ 0x3A9u]
        + (unsigned __int16)(69 * (*(unsigned __int8 *)(v53 + 275) ^ 0x37 ^ (16 * (*(_BYTE *)(v53 + 275) & 0xF))) + 1311)
        % 0x3A0u
        - 4);
  v56 = 431 * (v55 ^ 0xBD ^ (95 - ((v55 >> 3) ^ ((~v55 & 0x80) >> 7) ^ 0x19)))
      + 139213;
  *(_BYTE *)(v53 + 954) = *(_BYTE *)(v53 + (v56 - 957 * ((4487950 * (unint64_t)v56) >> 32)));
  return ((uint64_t (*)(uint64_t, uint64_t))(*(_QWORD *)(v54 + 8 * (v15 ^ 1u)) - 8))(3890100738, 778870397);
}

uint64_t sub_24781B490(uint64_t a1, uint64_t a2, unsigned int a3)
{
  uint64_t v3;
  int v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;

  v8 = 431 * (((_BYTE)v4 + 3) & 0xF) + 279719;
  v9 = 431 * ((v4 + 3171) >> (a3 + 80)) + 279719;
  LOBYTE(v9) = *(_BYTE *)(v7
                        + (unsigned __int16)(69
                                           * (*(unsigned __int8 *)(v6
                                                                 + (v8
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v8) >> 32))) ^ 0x7A ^ (16 * (*(_BYTE *)(v6 + (v9 - 957 * ((4487950 * (unint64_t)v9) >> 32))) & 0xF)))
                                           + 20769)
                        % 0x3A0u);
  LOBYTE(v9) = (v9 ^ 0x5F) - ((2 * (v9 ^ 0x5F) - 98) & 0xAE) + 38;
  v10 = v5 + 431 * (((((~(96 * (v9 ^ 0x57)) | 0x5F) + 48 * (v9 ^ 0x57) + 88) ^ v9) >> 4) ^ 7);
  *(_BYTE *)(v6 + (431 * v4 + 649169581) % 0x3BDu) = (16
                                                    * *(_BYTE *)(v6
                                                               + (v10
                                                                              - 957
                                                                              * ((4487950 * (unint64_t)v10) >> 32)))) ^ 0x80;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((1069 * (v4 == 825599132)) ^ a3)) - 8))();
}

uint64_t sub_24781B5E8(uint64_t a1, uint64_t a2, uint64_t a3, __int16 a4, int a5, unsigned int a6, int a7)
{
  __int16 v7;
  int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;

  v16 = v15 + 4049;
  v17 = v15 * a7 + 783078615;
  v18 = v15 + 1;
  v19 = (v16 >> 4) * a7 + 279719;
  LOWORD(v19) = (*(unsigned __int8 *)(v13
                                    + ((v18 & 0xF) * a7
                                                   + 279719
                                                   - ((((v18 & 0xFu) * a7 + 279719) * (unint64_t)v10) >> 32)
                                                   * v11)) ^ 0xAA ^ (16
                                                                   * (*(_BYTE *)(v13
                                                                               + (v19
                                                                                              - ((v19
                                                                                                * (unint64_t)v10) >> 32)
                                                                                              * v11)) & 0xF)))
              * v7
              - 24481;
  v20 = v12
      + (*(unsigned __int8 *)(v14
                            + (unsigned __int16)(v19
                                               - ((unsigned __int16)(((unsigned __int16)v19 * v8) >> 16) >> 8)
                                               * a4)) ^ 0xDF)
      * a7;
  *(_BYTE *)(v13
           + v17
           - ((((v17 * (unint64_t)a6) >> 32)
                           + ((v17 - ((v17 * (unint64_t)a6) >> 32)) >> 1)) >> 9)
           * v11) = *(_BYTE *)(v13 + (v20 - ((v20 * (unint64_t)v10) >> 32) * v11));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((1792 * (v18 != 227381551)) ^ a5)) - 8))();
}

uint64_t sub_24781B6C8(int a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;

  v8 = (431 * a1 - 1595892919) % 0x3BDu
     + ((a5 - 164749722) & 0x9D1E1A2 ^ 0x7455D183)
     - ((2 * ((431 * a1 - 1595892919) % 0x3BDu)) & 0x42);
  v9 = 69 * ((v8 & 0x11A) + (v8 & 0x11A ^ 0x11A) + (*(unsigned __int8 *)(v6 + (v8 ^ 0x7455D021)) ^ 0x8F));
  *(_BYTE *)(v6 + (431 * a1 - 1595767929) % 0x3BDu) = *(_BYTE *)(v7
                                                               + (v9
                                                                              - 928
                                                                              * ((4628198 * (unint64_t)v9) >> 32))) ^ 0xC5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * ((59 * (a1 == -404866543)) ^ a5)) - 8))();
}

uint64_t sub_24781B7E4(uint64_t a1, uint64_t a2, int a3)
{
  int v3;
  unsigned int v4;
  int v5;
  unsigned int v6;
  int v7;
  int v8;
  uint64_t v9;
  int v10;
  unsigned int v11;
  uint64_t v12;
  uint64_t v13;
  unsigned int v14;

  v14 = ((((((v6 + 602098236) & 0x1C1CBDFF ^ 0x99F) & v7 ^ 1) + ((82 - v8) & 0x41)) | ~(v7 ^ (v11 + 6) | v7 ^ 0xC3B65601) | 0x142)
       + (*(unsigned __int8 *)(v13 + (v7 ^ v11) * v10 - (v7 ^ v11) * v10 / 0x3A0 * a3) ^ 0xCA))
      * v3;
  *(_BYTE *)(v12
           + v8 * v3
           - 1183883286
           - (((((v8 * v3 - 1183883286) * (unint64_t)v4) >> 32)
                           + ((v8 * v3
                                           - 1183883286
                                           - (((v8 * v3 - 1183883286) * (unint64_t)v4) >> 32)) >> 1)) >> 9)
           * v5) = *(_BYTE *)(v12
                            + v14
                            - ((((v14 * (unint64_t)v4) >> 32)
                                            + ((v14 - ((v14 * (unint64_t)v4) >> 32)) >> 1)) >> 9)
                            * v5);
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((3792 * (v8 == -973834398)) ^ v6)) - 8))();
}

uint64_t sub_24781B914@<X0>(int a1@<W1>, int a2@<W8>)
{
  unsigned int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  unsigned int v10;
  int v11;
  unint64_t v12;
  unsigned int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  v3 = -2086125663 - (((1163550541 << ((-63 * (a2 ^ 0xDC)) ^ 0x83)) - 859285066) & 0xAFD366F2);
  v4 = (a1 + -1673081951 * LODWORD(STACK[0x718]) * ((a2 + 1258919457) & 0xB4F66CF9 ^ 0xF2270478)) ^ 0x99C91727;
  v5 = v2 + v4 - ((2 * v4) & 0x18D4601E);
  if ((v5 ^ v2) >= 0x87A7CE23)
    v6 = (v5 ^ v2) - ((2 * (v5 ^ v2) + 279995322) & 0x18D4601E) - 2067635732;
  else
    v6 = v5;
  v7 = (((v2 - 1587129527 * ((v6 ^ v2) % 0x6AD) - ((46966418 * ((v6 ^ v2) % 0x6AD)) & 0x18D4601E)) ^ v5) - 1953860528) ^ v3;
  v8 = ((2 * v7) & 0xFB2563DC ^ 0xAB0162D0) + (v7 ^ 0xAA7B0297);
  v9 = v8 - 217407928;
  v10 = v8 - ((2 * v8 + 174762556) & 0x970AD2B6) + 1354415737;
  v11 = v10 ^ v3;
  HIDWORD(v12) = v8 + 204804830 + (((144603601 - v8) | (v8 + 123831854)) & 0x9004240);
  LODWORD(v12) = v8 + 87381278;
  v13 = (v10 ^ 0xEC0F12BA) - ((2 * (v10 ^ 0xEC0F12BA)) & 0x9610BE2C) - 888643818;
  v14 = (v12 >> 28) - (v8 - 217407928) + 164974780 + (v13 ^ 0x34F7A0E9);
  v15 = (v14 - 1670587870 - ((2 * v14) & 0x38D9B444)) ^ v11;
  v16 = v15 - ((2 * v15 - 214807126) & 0xAFD9D264) - 779743225;
  v17 = v16 ^ 0xA81316CD;
  v18 = ((2 * (v9 - 164974778 + (v16 ^ 0xA81316CD))) & 0xEFD37F26)
      + ((v9 - 164974778 + (v16 ^ 0xA81316CD)) ^ 0xF7E9BF93);
  HIDWORD(v12) = v16 ^ 0x7ECE932;
  LODWORD(v12) = v16 ^ 0x55555555;
  v19 = v16 ^ v13;
  v20 = (v11 ^ 0x9C6CDA22) + v17 + 192063582 - ((2 * ((v11 ^ 0x9C6CDA22) + v17 + 1)) & 0x16E550BA);
  v21 = (v20 ^ 0xF48D57A2)
      + (((v12 >> 28) + 135676013 + v18 - 1662732764 - ((2 * ((v12 >> 28) + 135676013 + v18)) & 0x39C96C48)) ^ v19)
      + 1;
  v22 = ((2 * v21) & 0x2EFDCFCE) + (v21 ^ 0x977EE7E7);
  v23 = ((2 * ((v19 ^ 0x9CE4B624) - v22 + 1276770468)) & 0xFFFEFEDC)
      + (((v19 ^ 0x9CE4B624) - v22 + 1276770468) ^ 0x7FFF7F6E);
  HIDWORD(v12) = v22 + 333842268;
  LODWORD(v12) = v22 - 1276770468;
  v24 = ((v12 >> 29)
       + v23
       + ((v18 - v22 - 1528353150 + (~(2 * (v18 - v22) - 1470074334) | 0x5E92151F)) ^ 0xAF490A8F)
       - 2147450733) ^ (v22 - 1276770468) ^ v20;
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6D0] + 8 * a2) - 8))(v23
                                                                                      - (((2 * v24) & 0xFEDDF6BA ^ 0x16C550BA)
                                                                                       + (v24 ^ 0x741C5300)) - 1197628489);
}

void sub_24781BE0C()
{
  JUMPOUT(0x24781B9A8);
}

uint64_t sub_24781BE30(int a1, int a2, uint64_t a3, uint64_t a4, int a5)
{
  int v5;
  int v6;
  int v7;
  int v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;
  unsigned int v13;
  unsigned int v14;
  unsigned int v15;
  unint64_t v16;
  int v17;
  int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;

  LODWORD(STACK[0x5F0]) = a5;
  LODWORD(STACK[0x6DC]) = a1;
  LODWORD(STACK[0x5F8]) = v5 - 1874856440;
  v8 = (v7 ^ 0xB72A85D) - 537973936 + v5;
  LODWORD(STACK[0x5EC]) = 2 * v8;
  LODWORD(STACK[0x5E0]) = (v8 ^ 0x276FBBFF) - 560867364;
  v9 = ((a2 + 764453921 * LODWORD(STACK[0x718])) ^ 0x99C91727)
     - 1401089097
     - ((((a2 + 764453921 * LODWORD(STACK[0x718])) ^ 0x99C91727) << ((v6 - 33) ^ 0x60)) & 0x58FA276E);
  v10 = ((-1401089097
        - 1587129527 * ((v9 ^ 0xAC7D13B7) % 0x6AD)
        - ((1120708242 * ((v9 ^ 0xAC7D13B7) % 0x6AD)) & 0x58FA276E)) ^ v9)
      - 1953860528;
  v11 = (v10 + 67562657 - ((2 * v10) & 0x80DD942)) ^ 0xAFB86089;
  v12 = v11 - ((2 * v11 + 93326872) & 0x4807FD02) - 1496578675;
  v13 = v12 ^ 0xAFB86089;
  v14 = (v12 ^ 0x83898560) + 1002476583 - 2 * ((v12 ^ 0x83898560) & 0x3BC0943F ^ (v12 ^ 0xA78A7BE1) & 0x18);
  v15 = ((2 * ((v12 ^ 0x2403FE81) - 469763985)) & 0xDAF2EFEE) + (((v12 ^ 0x2403FE81) - 469763985) ^ 0xED7977F7);
  HIDWORD(v16) = v12 ^ 0x403FE81;
  LODWORD(v16) = v12 ^ 0x20000000;
  v17 = (v16 >> 28) - 310806537 - v15 + (v14 ^ 0xC43F6BD8) + 1;
  v18 = (v17 + 537203232 - ((2 * v17) & 0x400A2440)) ^ v13;
  v19 = v18 - ((2 * v18 - 214807126) & 0xC1453B66) - 633617272;
  v20 = v19 ^ v14;
  v21 = (v13 ^ 0x20051220)
      + (v19 ^ 0x9F5D624C)
      + 1
      - ((2 * ((v13 ^ 0x20051220) + (v19 ^ 0x9F5D624C) + 1)) & 0x62A4724A)
      + 827472165;
  v22 = ((2 * (v15 + 310806538 + (v19 ^ 0x9F5D624C))) & 0xC19DF6EA)
      + ((v15 + 310806538 + (v19 ^ 0x9F5D624C)) ^ 0x60CEFB75);
  HIDWORD(v16) = v19 ^ 0xA29DB3;
  LODWORD(v16) = v19 ^ 0x60000000;
  v23 = (v21 ^ 0xCEADC6DA)
      + (((v16 >> 28) - 1624177525 + v22 + 1533151636 - ((2 * ((v16 >> 28) - 1624177525 + v22)) & 0xB6C41328)) ^ v20)
      + 1;
  v24 = v23 - ((2 * v23 - 1765155194) & 0xE568167E) - 1105659262;
  v25 = (v24 ^ 0x8D4BF4C0) + v22 - ((2 * ((v24 ^ 0x8D4BF4C0) + v22) + 1046612248) & 0xE5717784) - 1846951858;
  HIDWORD(v16) = v24 ^ 0x12B40B3F;
  LODWORD(v16) = v24 ^ 0x60000000;
  v26 = ((v16 >> 29)
       + ((2 * ((v20 ^ 0x5B620994) + (v24 ^ 0x8D4BF4C0) + 1)) & 0xFBB69BDC)
       + (((v20 ^ 0x5B620994) + (v24 ^ 0x8D4BF4C0) + 1) ^ 0x7DDB4DEE)
       - 2111524333
       + (v25 ^ 0xD47443D)) ^ v24 ^ v21;
  v27 = ((2 * v26) & 0xED845A9E ^ 0x85844014) + (v26 ^ 0x35241F55);
  LODWORD(STACK[0x6E8]) = v27 + 279307957;
  LODWORD(STACK[0x6F0]) = ((2 * ((v27 - 392431266) ^ v25)) & 0xF95EEEFC ^ 0xE1506684)
                        + ((v27 - 392431266) ^ v25 ^ 0x8E17CCBC)
                        - 664588;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6D0] + 8 * v6) - 8))(3984160759);
}

void sub_24781C2D0()
{
  JUMPOUT(0x24781BF30);
}

uint64_t sub_24781C2F0()
{
  int v0;
  int v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  unsigned __int8 v7;
  unsigned __int8 v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  unsigned int v15;
  unsigned int v16;
  int v17;
  int v18;
  unsigned int v19;
  unsigned int v20;
  unsigned int v21;
  unsigned int v22;
  int v23;
  unsigned int v24;
  unsigned int v25;
  unsigned int v26;
  int v27;
  int v28;
  int v29;
  int v30;
  unsigned int v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  unsigned int v39;
  unsigned int v40;
  int v41;
  int v42;
  unsigned int v43;
  int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  int v51;
  unsigned int v52;
  int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  unsigned int v57;
  int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  unint64_t v63;
  unsigned int v64;
  unsigned int v65;
  unsigned int v66;
  int v67;
  int v68;
  int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  int v84;
  int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  int v90;
  unsigned int v91;
  unsigned int v92;
  int v93;
  int v94;
  int v95;
  int v96;
  int v97;
  int v98;
  int v99;
  int v100;
  unsigned int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  int v107;
  int v108;
  int v109;
  unsigned int v110;
  int v111;
  unsigned int v112;
  int v113;
  int v114;
  unsigned int v115;
  unsigned int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  unsigned int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  unsigned int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  int v131;
  unsigned int v132;
  unsigned int v133;
  unsigned int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  int v150;
  unsigned int v151;
  int v152;
  int v153;
  unsigned int v154;
  unsigned int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  unsigned int v159;
  int v160;
  int v161;
  int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  int v167;
  int v168;
  int v169;
  unsigned int v170;
  int v171;
  int v172;
  int v173;
  int v174;
  unsigned int v175;
  int v176;
  int v177;
  int v178;
  int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  unsigned int v183;
  int v184;
  unsigned int v185;
  int v186;
  int v187;
  int v188;
  int v189;
  unsigned int v190;
  int v191;
  int v192;
  int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  int v204;
  int v205;
  unsigned int v206;
  int v207;
  unsigned int v208;
  unsigned int v209;
  unsigned int v210;
  int v211;
  int v212;
  int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  int v217;
  int v218;
  int v219;
  unsigned int v220;
  unsigned int v221;
  int v222;
  unsigned int v223;
  unsigned int v224;
  unsigned int v225;
  unsigned int v226;
  uint64_t v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  int v235;
  unsigned int v236;
  int v237;
  unsigned int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  int v242;
  int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  unsigned int v249;
  unsigned int v250;
  unsigned int v251;
  int v252;
  unsigned int v253;
  unsigned int v254;
  int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  int v260;
  char v261;
  int v262;
  int v263;
  int v264;
  unsigned int v265;
  int v266;
  unsigned int v267;
  int v268;
  int v269;
  int v270;
  unsigned int v271;
  int v272;
  int v273;
  int v274;
  int v275;
  int v276;
  int v277;
  int v278;
  int v279;
  int v280;
  int v281;
  unsigned int v282;
  unsigned int v283;
  int v284;
  int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  unint64_t v290;
  unsigned int v291;
  int v292;
  unsigned int v293;
  int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  unsigned int v306;
  int v307;
  int v308;
  int v309;
  unsigned int v310;
  int v311;
  int v312;
  int v313;
  int v314;
  int v315;
  int v316;
  int v317;
  unsigned int v318;
  int v319;
  unsigned int v320;
  unsigned int v321;
  unsigned int v322;
  int v323;
  int v324;
  unsigned int v325;
  unsigned int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  unsigned int v343;
  unsigned int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  unsigned int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  unsigned int v352;
  int v353;
  int v354;
  int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  unsigned int v359;
  unsigned int v360;
  unsigned int v361;
  int v362;
  int v363;
  int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  int v373;
  int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  unsigned int v380;
  unsigned int v381;
  unsigned int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unint64_t v386;
  int v387;
  int v388;
  unsigned int v389;
  int v390;
  int v391;
  int v392;
  int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  unsigned int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  int v406;
  unsigned int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  int v414;
  unsigned int v415;
  unsigned int v416;
  int v417;
  unsigned int v418;
  int v419;
  unsigned int v420;
  unsigned int v421;
  int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  int v428;
  unsigned int v429;
  int v430;
  int v431;
  int v432;
  int v433;
  unsigned int v434;
  int v435;
  int v436;
  int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  int v454;
  int v455;
  int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  unsigned int v466;
  unsigned int v467;
  unsigned int v468;
  unsigned int v469;
  int v470;
  unsigned int v471;
  unsigned int v472;
  int v473;
  unsigned int v474;
  unsigned int v475;
  unsigned int v476;
  int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  int v485;
  unsigned int v486;
  int v487;
  unsigned int v488;
  int v489;
  int v490;
  int v491;
  int v492;
  unsigned int v493;
  unsigned int v494;
  int v495;
  int v496;
  int v497;
  int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  int v503;
  int v504;
  int v505;
  int v506;
  int v507;
  int v508;
  int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  unsigned int v513;
  unsigned int v514;
  unsigned int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  int v521;
  int v522;
  int v523;
  unsigned int v524;
  unsigned int v525;
  int v526;
  int v527;
  int v528;
  int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  unsigned int v534;
  int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  unsigned int v540;
  unsigned int v541;
  unsigned int v542;
  int v543;
  int v544;
  unsigned int v545;
  int v546;
  int v547;
  int v548;
  int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  unsigned int v561;
  unsigned int v562;
  unsigned int v563;
  unsigned int v564;
  int v565;
  unsigned int v566;
  unsigned int v567;
  int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  int v572;
  int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  int v577;
  int v578;
  int v579;
  int v580;
  int v581;
  int v582;
  unsigned int v583;
  int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  int v589;
  unsigned int v590;
  int v591;
  int v592;
  unsigned int v593;
  unsigned int v594;
  int v595;
  int v596;
  int v597;
  unsigned int v598;
  int v599;
  int v600;
  unsigned int v601;
  unsigned int v602;
  unsigned int v603;
  unsigned int v604;
  int v605;
  unsigned int v606;
  int v607;
  unsigned int v608;
  int v609;
  int v610;
  unsigned int v611;
  unsigned int v612;
  unsigned int v613;
  int v614;
  int v615;
  int v616;
  int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  int v624;
  int v625;
  unsigned int v626;
  int v627;
  int v628;
  unsigned int v629;
  int v630;
  int v631;
  unsigned int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  int v636;
  unsigned int v637;
  int v638;
  unsigned int v639;
  int v640;
  int v641;
  int v642;
  int v643;
  unsigned int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  int v650;
  unsigned int v651;
  int v652;
  int v653;
  unsigned int v654;
  int v655;
  int v656;
  unsigned int v657;
  unsigned int v658;
  int v659;
  int v660;
  int v661;
  int v662;
  unsigned int v663;
  int v664;
  unsigned int v665;
  unsigned int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  unsigned int v671;
  int v672;
  int v673;
  int v674;
  unsigned int v675;
  unsigned int v676;
  int v677;
  int v678;
  int v679;
  int v680;
  int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  int v685;
  int v686;
  int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  int v691;
  int v692;
  int v693;
  int v694;
  unsigned int v695;
  int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  int v700;
  unsigned int v701;
  int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  int v706;
  int v707;
  unsigned int v708;
  int v709;
  int v710;
  unsigned int v711;
  int v712;
  int v713;
  int v714;
  int v715;
  int v716;
  int v717;
  unsigned int v718;
  unsigned int v719;
  int v720;
  unsigned int v721;
  int v722;
  unsigned int v723;
  unsigned int v724;
  unsigned int v725;
  unsigned int v726;
  int v727;
  int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  int v732;
  unsigned int v733;
  int v734;
  int v735;
  unsigned int v736;
  unsigned int v737;
  int v738;
  unsigned int v739;
  int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  unsigned int v747;
  unsigned int v748;
  unsigned int v749;
  int v750;
  unsigned int v751;
  unsigned int v752;
  int v753;
  unsigned int v754;
  int v755;
  int v756;
  unsigned int v757;
  int v758;
  int v759;
  int v760;
  unsigned int v761;
  int v762;
  unsigned int v763;
  int v764;
  int v765;
  int v766;
  int v767;
  int v768;
  int v769;
  int v770;
  int v771;
  int v772;
  int v773;
  unsigned int v774;
  int v775;
  int v776;
  unsigned int v777;
  unsigned int v778;
  int v779;
  unsigned int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  int v784;
  unsigned int v785;
  unsigned int v786;
  int v787;
  int v788;
  unsigned int v789;
  unsigned int v790;
  int v791;
  int v792;
  _BYTE *v793;
  int v794;
  int v795;
  int v796;
  int v797;
  int v798;
  unint64_t v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  int v803;
  unsigned int v804;
  int v805;
  unsigned int v806;
  int v807;
  unsigned int v808;
  unsigned int v809;
  unsigned int v810;
  int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  unsigned int v815;
  unsigned int v816;
  int v817;
  int v818;
  unsigned int v819;
  int v820;
  int v821;
  unsigned int v822;
  unsigned int v823;
  int v824;
  int v825;
  int v826;
  int v827;
  int v828;
  int v829;
  int v830;
  int v831;
  int v832;
  int v833;
  int v834;
  int v835;
  int v836;
  int v837;
  int v838;
  int v839;
  int v840;
  int v841;
  int v842;
  int v843;
  int v844;
  int v845;
  int v846;
  int v847;
  int v848;
  int v849;
  int v850;
  unint64_t v851;
  int v852;
  int v853;
  int v854;
  unsigned int v855;
  int v856;
  int v857;
  unsigned int v858;
  int v859;
  int v860;
  int v861;
  int v862;
  int v863;
  int v864;
  int v865;
  int v866;
  unsigned int v867;
  int v868;
  int v869;
  unsigned int v870;
  int v871;
  int v872;
  int v873;
  int v874;
  int v875;
  unsigned int v876;
  int v877;
  int v878;
  unsigned int v879;
  int v880;
  int v881;
  int v882;
  int v883;
  int v884;
  int v885;
  unsigned int v886;
  unsigned int v887;
  int v888;
  int v889;
  int v890;
  int v891;
  int v892;
  int v893;
  int v894;
  int v895;
  int v896;
  int v897;
  int v898;
  int v899;
  int v900;
  unsigned int v901;
  int v902;
  int v903;
  int v904;
  int v905;
  int v906;
  int v907;
  int v908;
  int v909;
  int v910;
  int v911;
  int v912;
  int v913;
  uint64_t (*v914)(void);

  LODWORD(STACK[0x6C0]) = v3;
  LODWORD(STACK[0x6A8]) = v4;
  LODWORD(STACK[0x5D4]) = 1022193143;
  LODWORD(STACK[0x5D8]) = -1132458916;
  LODWORD(STACK[0x5C0]) = 615446528;
  v5 = (v0 + 30) & 0x14;
  LODWORD(STACK[0x5BC]) = -2000104680;
  LODWORD(STACK[0x5C8]) = 1121064946;
  LODWORD(STACK[0x638]) = -1107763465;
  LODWORD(STACK[0x640]) = -8389632;
  LODWORD(STACK[0x5CC]) = 554141678;
  LODWORD(STACK[0x5D0]) = 1568452158;
  LODWORD(STACK[0x5A0]) = -718504403;
  v6 = (v1 + 2) & 0x17;
  LODWORD(STACK[0x634]) = v6;
  LODWORD(STACK[0x540]) = v6 ^ 0x17;
  LODWORD(STACK[0x590]) = 667604353;
  LODWORD(STACK[0x558]) = -1725632063;
  LODWORD(STACK[0x630]) = -1683861504;
  LODWORD(STACK[0x53C]) = 1159321468;
  LODWORD(STACK[0x5FC]) = 655809853;
  LODWORD(STACK[0x530]) = -252252672;
  LODWORD(STACK[0x52C]) = 635306512;
  LODWORD(STACK[0x534]) = 235918558;
  LODWORD(STACK[0x538]) = 635306518;
  LODWORD(STACK[0x688]) = -755052582;
  LODWORD(STACK[0x584]) = -1965078947;
  LODWORD(STACK[0x658]) = 219634511;
  LODWORD(STACK[0x580]) = -1164944174;
  LODWORD(STACK[0x578]) = 1996382208;
  LODWORD(STACK[0x698]) = 2037667195;
  LODWORD(STACK[0x64C]) = 876968182;
  LODWORD(STACK[0x5DC]) = 895321880;
  LODWORD(STACK[0x608]) = -748967568;
  v7 = v0 + 6;
  v8 = 1 - v0;
  LODWORD(STACK[0x600]) = (v7 | v8) & 6;
  LODWORD(STACK[0x5B0]) = v5 + (v8 & 0x14);
  LODWORD(STACK[0x58C]) = 1683891954;
  LODWORD(STACK[0x604]) = -767221930;
  LODWORD(STACK[0x550]) = -1218641315;
  LODWORD(STACK[0x644]) = 413673922;
  LODWORD(STACK[0x598]) = 343555814;
  LODWORD(STACK[0x62C]) = 540343721;
  v9 = STACK[0x83C];
  v10 = STACK[0x82C];
  v11 = STACK[0x834];
  v12 = 948803394 * LODWORD(STACK[0x82C]);
  LODWORD(STACK[0x56C]) = -1663319554 - 1673081951 * LODWORD(STACK[0x838]);
  v13 = (-1663319554 - 1673081951 * v11) ^ (v9 << 31);
  LODWORD(STACK[0x61C]) = (-1663319554 - 1673081951 * LODWORD(STACK[0x824])) ^ (v10 << 31);
  LODWORD(STACK[0x528]) = -1663319554 - 1673081951 * LODWORD(STACK[0x828]);
  LODWORD(STACK[0x564]) = -1663319554 - 1673081951 * LODWORD(STACK[0x830]);
  v14 = -1663319554 - 1673081951 * LODWORD(STACK[0x820]);
  v15 = -1673081951 * v9 - ((948803394 * v9 + 968328188) & 0xC8D7F602);
  v16 = ((2126004992 - v15) >> 30) | 0x391AC7C8;
  v17 = 2056 * (v2 ^ 0xB63);
  LODWORD(STACK[0x6F8]) = v17;
  v18 = v10 * (v17 - 1673086063);
  LODWORD(STACK[0x518]) = 14 - (((2 - v12) & 0xFFFFFFFB) + v18);
  v19 = v18 - ((v12 + 968328188) & 0xBC57247A);
  v20 = v15 - 2126004993;
  LODWORD(STACK[0x514]) = ((v19 << 30) - 0x40000000) ^ v14;
  v21 = (2126004992 - v15) >> 31;
  LODWORD(STACK[0x620]) = v21;
  LODWORD(STACK[0x57C]) = v13 ^ ((v15 - 2126004993) << 12);
  v22 = ((v15 - 2126004993) >> 29) ^ 0xC37EED6A;
  v23 = (v21 ^ (v20 >> 26) ^ 0x39)
      - 1343614796
      + ((2 * ((v21 ^ (v20 >> 26) ^ 0x39 | 0x7FFFFFF4) ^ v21 ^ (v20 >> 26))) ^ 0x65)
      + 1;
  v24 = ((4 * v20) ^ 0x91AFEC04) - ((2 * ((4 * v20) ^ 0x91AFEC04)) & 0xEB9A71C0) - 171099933;
  v25 = (v20 >> 30) ^ 0xAFEA10B7;
  v26 = ((8 * v20) ^ 0x235FD808) - ((2 * ((8 * v20) ^ 0x235FD808)) & 0xD4A32A20) + 1783731472;
  v27 = ((v23 ^ v25) - ((2 * (v23 ^ v25)) & 0x6FDDADA) - 1015091859) ^ v22;
  LODWORD(STACK[0x648]) = v24 ^ v26;
  v28 = (v20 >> 12) ^ 0x198F97A7;
  LODWORD(STACK[0x6B0]) = ((v20 << 13) ^ 0x7F602000) - ((2 * ((v20 << 13) ^ 0x7F602000)) & 0x23C10000) - 1847552431;
  LODWORD(STACK[0x5B4]) = v20 ^ v24 ^ (((2 * v20) ^ (v20 << 6) ^ 0xD2293642)
                                     - 2 * (((2 * v20) ^ (v20 << 6) ^ 0xD2293642) & 0x646BFB1C ^ (2 * v20) & 0x1C)
                                     - 462685439);
  v29 = (v20 >> 25) ^ 0x697F679F;
  v30 = (v27 - ((2 * v27) & 0x52FECFDA) + 1769957357) ^ v29;
  v31 = (v20 >> 19) ^ 0xD644A90C;
  v32 = HIWORD(v20) ^ 0x34459C9F;
  LODWORD(STACK[0x5B8]) = -889169413;
  v33 = ((v20 << 7) ^ 0x35FD8080) - ((2 * ((v20 << 7) ^ 0x35FD8080)) & 0x9E0B6900) + 1325774044;
  LODWORD(STACK[0x654]) = v33;
  LODWORD(STACK[0x6A0]) = ((v20 << 14) ^ 0xFEC04000) - ((2 * ((v20 << 14) ^ 0xFEC04000)) & 0x64868000) + 843277598;
  v34 = (v20 >> 22) ^ 0x9556F4AD;
  v35 = (v30 - ((2 * v30) & 0x2AADEE78) - 1789462724) ^ v34;
  v36 = v35 - ((2 * v35) & 0x2C896B02) - 700140159;
  v37 = (((v20 >> 22) ^ HIBYTE(v20) ^ 0x375) - ((2 * ((v20 >> 22) ^ HIBYTE(v20) ^ 0x375)) & 0x2DA) - 1015091859) ^ v22;
  v38 = (v37 - ((2 * v37) & 0x5FD42168) - 1343614796) ^ v25;
  v39 = ((v20 << 10) ^ 0xAFEC0400) - ((2 * ((v20 << 10) ^ 0xAFEC0400)) & 0x355D8000) - 1699822708;
  LODWORD(STACK[0x588]) = v39;
  LODWORD(STACK[0x610]) = (v20 >> 18) ^ v16;
  LODWORD(STACK[0x624]) = (v20 >> 18) ^ 0x8045F1E7;
  v40 = (v20 >> 15) ^ 0x9645F7E0;
  LODWORD(STACK[0x6E4]) = ((v20 << 20) ^ 0xB0100000) - ((2 * ((v20 << 20) ^ 0xB0100000)) & 0x78400000) - 1137949627;
  v41 = v31 ^ (v20 >> 18) ^ v36;
  v42 = v41 ^ 0x391A;
  LODWORD(STACK[0x6E0]) = ((v20 << 16) ^ 0xFB010000) - ((2 * ((v20 << 16) ^ 0xFB010000)) & 0xD6C40000) - 345863282;
  v43 = (v20 >> 8) ^ 0xADD9C88C;
  v44 = (v20 >> 7) ^ 0x522E7A90;
  LODWORD(STACK[0x560]) = (v20 >> 7) ^ v43 ^ 0x1C8D7F6;
  v45 = ((HIWORD(v20) ^ 0xFFFF228E ^ v41) + (v41 ^ 0x391A) + 1) ^ ((HIWORD(v20) ^ 0xFFFF1B94) + 1);
  LODWORD(STACK[0x668]) = ((v20 << 17) ^ 0xF6020000) - ((2 * ((v20 << 17) ^ 0xF6020000)) & 0xBA740000) + 1564101805;
  v46 = (v20 >> 10) ^ 0x7B4568FE;
  v47 = ((v45 - ((2 * v45) & 0x688AF1E8) + 876968180) ^ v32) + v42;
  LODWORD(STACK[0x6C8]) = ((v20 << 25) ^ 0x2000000) - ((2 * ((v20 << 25) ^ 0x2000000)) & 0xDC000000) - 300441785;
  LODWORD(STACK[0x680]) = ((v20 << 24) ^ 0x1000000) - ((2 * ((v20 << 24) ^ 0x1000000)) & 0xE3FFFFFF) - 239762362;
  LODWORD(STACK[0x670]) = ((v20 << 22) ^ 0xC0400000) - ((v20 << 23) & 0x14000000) - 1978407526;
  LODWORD(STACK[0x574]) = ((v20 << 23) ^ 0x80800000) - ((v20 << 24) & 0xE2000000) + 1900958195;
  LODWORD(STACK[0x59C]) = v20 << 26;
  LODWORD(STACK[0x67C]) = ((v20 << 26) ^ 0x4000000) - ((2 * ((v20 << 26) ^ 0x4000000)) & 0xEFFFFFFF) - 160928854;
  v48 = ((v20 << 28) ^ 0x10000000) - ((2 * ((v20 << 28) ^ 0x10000000)) & 0xA0000000) - 652628375;
  LODWORD(STACK[0x6BC]) = v48;
  LODWORD(STACK[0x508]) = v20 ^ 0xE46BFB01;
  v49 = (((v20 >> 3) ^ 0x1C8D7F60) - ((2 * ((v20 >> 3) ^ 0x1C8D7F60)) & 0xDC117AA) - 958362667) ^ ((v20 ^ 0xE46BFB01) >> 6) ^ 0xC6E08BD5 ^ v47;
  v50 = (v49 - ((2 * v49) & 0x2C887E6E) - 1773912265) ^ v40;
  v51 = (v50 - ((2 * v50) & 0x3303A230) + 427938072) ^ v28;
  v52 = (v51 - ((2 * v51) & 0xF6F8E400) + 2071753216) ^ v46;
  v53 = (v52 - ((2 * v52) & 0x5A7B46EE) - 1388469385) ^ v43;
  v54 = v44 ^ (v20 >> 4) ^ (v53 - ((2 * v53) & 0xA7CD5ACC) + 1407626598);
  LODWORD(STACK[0x548]) = v54;
  v55 = (v54 >> 27) ^ (v47 >> 30) ^ (v54 >> 21);
  LODWORD(STACK[0x594]) = v55;
  v56 = (v20 << 29) ^ (4 * v54) ^ (32 * v54) ^ (v54 << 11) ^ (4 * v55) ^ (32 * v55) ^ (v55 << 11) ^ 0xE4331F6C;
  v57 = (v56 - ((2 * v56) & 0xD4A32A20) + 1783731472) ^ v26;
  LODWORD(STACK[0x544]) = v57 - ((2 * v57) & 0x87A600EC) - 1009581962;
  v58 = (v20 >> 21) ^ LODWORD(STACK[0x698]);
  v59 = v29 ^ (v20 >> 21) ^ (v38 - ((2 * v38) & 0x52FECFDA) + 1769957357);
  LODWORD(STACK[0x698]) = ((v20 << 19) ^ 0xD8080000) - ((v20 << 20) & 0x47C00000) + 602014718;
  v60 = v59 ^ 0x723;
  v61 = (v20 >> 13) ^ 0xB71D9F0A;
  v62 = v33 ^ v20 ^ v39;
  HIDWORD(v63) = v62 ^ 0xC51;
  LODWORD(v63) = v62 ^ 0x31C08000;
  LODWORD(STACK[0x570]) = v63 >> 15;
  v64 = (((v20 >> 19) ^ 0xFFFFE451 ^ v59) + (v59 ^ 0x723) + 1) ^ (((v20 >> 19) ^ 0xFFFFE372) + 1);
  LODWORD(STACK[0x628]) = (v20 << 10) ^ (v20 << 18);
  LODWORD(STACK[0x694]) = ((v20 << 18) ^ 0xEC040000) - ((2 * ((v20 << 18) ^ 0xEC040000)) & 0x5FF80000) + 805199239;
  LODWORD(STACK[0x568]) = v48 ^ 0xD919AE69;
  v65 = (v20 >> 5) ^ 0xD229640B;
  v66 = (((v64 - ((2 * v64) & 0xAC896B02) - 700140159) ^ v31) + v60) ^ (v20 >> 17);
  LODWORD(STACK[0x660]) = ((v20 << 27) ^ 0x8000000) - ((2 * ((v20 << 27) ^ 0x8000000)) & 0x55555555) - 1395778153;
  v67 = (v20 >> 14) ^ 0x5D7EE38;
  v68 = (v20 >> 6) ^ 0x610FCD03;
  v69 = v68 ^ (v20 >> 4);
  LODWORD(STACK[0x650]) = ((v20 << 21) ^ 0x60200000) - ((2 * ((v20 << 21) ^ 0x60200000)) & 0x75000000) - 1164944175;
  v70 = (v20 >> 11) ^ 0x5922AB89;
  v71 = (v20 >> 9) ^ 0x88B3ADAC;
  v72 = (v66 ^ 0x7235) - 2 * ((v66 ^ 0x7235) & STACK[0x64C] ^ v66 & 2) + 876968180;
  LODWORD(STACK[0x4FC]) = LODWORD(STACK[0x564]) ^ (32 * v20) ^ (16 * v20) ^ (v20 << 30);
  v73 = (v20 >> 2) ^ (v20 >> 28) ^ (v20 >> 27) ^ LODWORD(STACK[0x610]);
  v74 = (v73 - ((2 * v73) & 0x6FDDADA) - 1015091859) ^ v22;
  v75 = LODWORD(STACK[0x56C]) ^ (v20 << 8) ^ (v20 << 15);
  v76 = v19 - 83405765;
  v77 = (v74 + 2037666392 + (LODWORD(STACK[0x658]) | ~(2 * v74)) + 1) ^ v58;
  v78 = (((v20 >> 20) ^ (v20 >> 1) ^ 0x7235F3C6)
       - (STACK[0x688] & (2 * ((v20 >> 20) ^ (v20 >> 1) ^ 0x7235F3C6)))
       + 1769957357) ^ v29;
  v79 = (v78 - ((2 * v78) & 0x2AADEE78) - 1789462724) ^ v34;
  v80 = (v79 - ((2 * v79) & 0xF2E8A4B0) + 2037666392) ^ v58;
  LODWORD(STACK[0x4F4]) = LODWORD(STACK[0x61C]) ^ (v19 - 83405765) ^ ((v19 - 83405765) << 12);
  v81 = (v77 - ((2 * v77) & 0xAC896B02) - 700140159) ^ v31;
  v82 = (v81 - ((2 * v81) & 0x2C887E6E) - 1773912265) ^ v40;
  v83 = (v80 - ((2 * v80) & 0xAC896B02) - 700140159) ^ v31;
  v84 = LODWORD(STACK[0x624]) ^ (v83 - ((2 * v83) & 0x8B91FA) - 2142910211);
  v85 = (v84 - ((2 * v84) & 0x688AF1E8) + 876968180) ^ v32;
  v86 = (v82 - ((2 * v82) & 0xBA8FF2E) + 97812375) ^ v67;
  v87 = (v86 - ((2 * v86) & 0x6E3578AA) - 1222984619) ^ v61;
  v88 = (v87 - ((2 * v87) & 0xB27C4DEC) + 1497245430) ^ v70;
  v89 = (v88 - ((2 * v88) & 0xF6F8E400) + 2071753216) ^ v46;
  v90 = (v89 - ((2 * v89) & 0x118330A2) - 2000578479) ^ v71;
  v91 = (v90 - ((2 * v90) & 0xC53CC5DE) + 1654547183) ^ v68;
  v92 = v65 ^ (v20 >> 4) ^ (v91 - ((2 * v91) & 0xAA1477A6) - 720749613);
  LODWORD(STACK[0x564]) = v92 ^ 0xFCE8D3BD;
  v93 = (v85 - ((2 * v85) & 0xBA8FF2E) + 97812375) ^ v67;
  v94 = (v93 - ((2 * v93) & 0x6E3578AA) - 1222984619) ^ v61;
  v95 = ((v72 ^ v32) - ((2 * (v72 ^ v32)) & 0xBA8FF2E) + 97812375) ^ v67;
  v96 = 8 * (v19 - 83405765);
  LODWORD(STACK[0x4EC]) = v96 ^ 0xA20C4D;
  v97 = (v94 - ((2 * v94) & 0x3303A230) + 427938072) ^ v28;
  v98 = (v95 - ((2 * v95) & 0x3303A230) + 427938072) ^ v28;
  v99 = (v92 >> 27) ^ (v92 >> 21);
  LODWORD(STACK[0x56C]) = v99 ^ 0xF3EE491E;
  v100 = (4 * (v19 - 83405765)) ^ 0x78AE48F4;
  v101 = (v97 - ((2 * v97) & 0xB27C4DEC) + 1497245430) ^ v70;
  v102 = (v101 - ((2 * v101) & 0xA7CD5ACC) + 1407626598) ^ v44;
  v103 = v69 ^ (v102 - ((2 * v102) & 0xC53CC5DE) + 1654547183);
  LODWORD(STACK[0x64C]) = v103;
  LODWORD(STACK[0x658]) = LODWORD(STACK[0x620]) ^ (v103 >> 21) ^ (v103 >> 27);
  v104 = ((v19 - 83405765) >> 14) ^ 0x5CBA3965;
  v105 = (v98 - ((2 * v98) & 0xB27C4DEC) + 1497245430) ^ v70;
  v106 = (v105 - ((2 * v105) & 0xF6F8E400) + 2071753216) ^ v46;
  v107 = (v100 - ((2 * v100) & 0x11EEA198) - 1997057843) ^ v96;
  LODWORD(STACK[0x4E4]) = v107 ^ 0x1DF5E7F7;
  v108 = (v106 - ((2 * v106) & 0x118330A2) - 2000578479) ^ v71;
  v109 = LODWORD(STACK[0x560]) ^ (v108 - ((2 * v108) & 0x5A7B46EE) - 1388469385);
  v110 = (v19 - 83405765) >> 19;
  LODWORD(STACK[0x4F8]) = v110 ^ LODWORD(STACK[0x62C]);
  LODWORD(STACK[0x4E0]) = (-v100 & 4 ^ 7) + (-v100 & 4);
  v111 = v109 + ((v20 >> 6) ^ 0x391AFEC) - 2 * (v109 & ((v20 >> 6) ^ 0x391AFEC));
  v112 = v111 - ((2 * v111) & 0x6EC2D976) + 929131707;
  v113 = (((v19 - 83405765) << 11) ^ 0x5C91E800)
       - ((2 * (((v19 - 83405765) << 11) ^ 0x5C91E800)) & 0x147A3000)
       - 1975705741;
  LODWORD(STACK[0x62C]) = v113;
  v114 = v112 ^ v65;
  v115 = (((v19 - 83405765) << 14) ^ 0xE48F4000)
       - ((2 * (((v19 - 83405765) << 14) ^ 0xE48F4000)) & 0xA9FF0000)
       + 1426045963;
  LODWORD(STACK[0x524]) = v115;
  LODWORD(STACK[0x500]) = (((v19 - 83405765) << 22) ^ 0x8F400000)
                        - ((2 * (((v19 - 83405765) << 22) ^ 0x8F400000)) & 0x65000000)
                        + 850898748;
  v116 = (((v19 - 83405765) >> 29) ^ ((v19 - 83405765) >> 30)) - 815263840;
  LODWORD(STACK[0x510]) = v116;
  v117 = (v19 - 83405765) >> 21;
  v118 = ((v19 - 83405765) >> 28) ^ ((v19 - 83405765) >> 27) ^ ((v19 - 83405765) >> 15) ^ ((v19 - 83405765) >> 2) ^ v117 ^ v110;
  v119 = (v115 ^ v113 ^ 0xDEC2A378) - ((2 * (v115 ^ v113 ^ 0xDEC2A378)) & 0xEE1BBA7A) - 150086339;
  v120 = ((v112 ^ v65) >> 21) ^ (v112 >> 27) ^ ((v112 >> 30) | 0xDE561AC0);
  LODWORD(STACK[0x688]) = v120;
  v121 = v75 ^ (4 * (v112 ^ v65)) ^ ((v112 ^ v65) << 11) ^ (32 * (v112 ^ v65)) ^ (4 * v120);
  v122 = LODWORD(STACK[0x628]) ^ (v120 << 11) ^ (32 * v120) ^ v121 ^ 0x489A1054;
  v123 = (v122 - 2 * (v122 & 0x1F9CADFB ^ v121 & 8) - 1617121805) ^ LODWORD(STACK[0x648]);
  v124 = ((v118 ^ 0x178A51E2) - 2 * ((v118 ^ 0x178A51E2) & 0x4F680FAF ^ v118 & 0xC) - 815263837) ^ v116;
  LODWORD(STACK[0x560]) = v114 ^ LODWORD(STACK[0x660]);
  v125 = v117 ^ LODWORD(STACK[0x644]);
  v126 = ((((v19 - 83405765) << 13) ^ 0x7247A000)
        - 150086339
        + (~(2 * (((v19 - 83405765) << 13) ^ 0x7247A000)) | 0x11E47FFF)) | 1;
  LODWORD(STACK[0x61C]) = v126;
  v127 = ((v19 - 83405765) >> 18) ^ 0x41F160C2;
  LODWORD(STACK[0x628]) = (((v19 - 83405765) << 19) ^ 0x91E80000)
                        - ((2 * (((v19 - 83405765) << 19) ^ 0x91E80000)) & 0x87900000)
                        - 1010298141;
  v128 = ((v19 - 83405765) >> 13) ^ 0x6F7849B3;
  LODWORD(STACK[0x50C]) = v128;
  v129 = (v124 - ((2 * v124) & 0x83E2EE90) + 1106343752) ^ v127;
  v130 = ((v19 - 83405765) >> 10) ^ 0x2037CE98;
  LODWORD(STACK[0x4F0]) = v130;
  v131 = (((v19 - 83405765) << 18) ^ 0x48F40000)
       - ((2 * (((v19 - 83405765) << 18) ^ 0x48F40000)) & 0x2BB80000)
       - 1780524958;
  v132 = (v123 - ((2 * v123) & 0x9E0B69B8) + 1325774044) ^ LODWORD(STACK[0x654]);
  LODWORD(STACK[0x624]) = (((v19 - 83405765) << 21) ^ 0x47A00000)
                        - ((2 * (((v19 - 83405765) << 21) ^ 0x47A00000)) & 0x33800000)
                        + 433223635;
  v133 = ((v19 - 83405765) >> 11) ^ 0x873A9E9A;
  LODWORD(STACK[0x644]) = (((v19 - 83405765) << 23) ^ 0x1E800000)
                        - ((2 * (((v19 - 83405765) << 23) ^ 0x1E800000)) & 0xA4000000)
                        - 764026153;
  v134 = ((v19 - 83405765) >> 6) ^ 0xD5010E16;
  v135 = (v129 - ((2 * v129) & 0xB9768396) + 1555775947) ^ v104;
  v136 = (v19 - 83405765) >> 5;
  v137 = (v135 - ((2 * v135) & 0xDEF571DE) + 1870313711) ^ v128;
  LODWORD(STACK[0x620]) = (((v19 - 83405765) << 26) ^ 0xF4000000)
                        - ((2 * (((v19 - 83405765) << 26) ^ 0xF4000000)) & 0x8000000)
                        - 2025989667;
  v138 = (v137 - ((2 * v137) & 0xE62B7D0) - 2026808344) ^ v133;
  v139 = (v138 - ((2 * v138) & 0x404088F8) + 538985596) ^ v130;
  LODWORD(STACK[0x504]) = (((v19 - 83405765) << 27) ^ 0xE8000000)
                        - ((2 * (((v19 - 83405765) << 27) ^ 0xE8000000)) & 0xA0000000)
                        + 1426824234;
  LODWORD(STACK[0x4E8]) = v134 ^ v136;
  v140 = ((v19 - 83405765) >> 9) ^ 0x9A3AB201;
  v141 = (v139 - ((2 * v139) & 0x342B4F90) - 1709856824) ^ v140;
  LODWORD(STACK[0x54C]) = v132 - ((2 * v132) & 0x76FE6418) + 998191628;
  LODWORD(STACK[0x610]) = (((v19 - 83405765) << 28) ^ 0xD0000000)
                        + ((((v19 - 83405765) << 28) ^ 0xD0000000) >> 30 << 31)
                        - 940671886;
  v142 = (((v19 - 83405765) << 7) ^ 0x15C91E80)
       - ((2 * (((v19 - 83405765) << 7) ^ 0x15C91E80)) & 0xBC572400)
       + 1579913789;
  v143 = LODWORD(STACK[0x604]) ^ ((v19 - 83405765) >> 22);
  v144 = (v19 - 83405765) >> 4;
  v145 = (v141 - ((2 * v141) & 0xA8F340BC) - 730226594) ^ v134;
  v146 = v136 ^ v144 ^ (v145 - ((2 * v145) & 0x6B58BD98) - 1246994740);
  v147 = LODWORD(STACK[0x514]) ^ (32 * (v19 - 83405765)) ^ (16 * (v19 - 83405765)) ^ ((v19 - 83405765) << 17) ^ v126 ^ v119;
  LODWORD(STACK[0x604]) = ((((v19 - 83405765) << 16) ^ 0x923D0000)
                         + 1398478433
                         + (~(2 * (((v19 - 83405765) << 16) ^ 0x923D0000)) | 0x5949FFFF)) | 1;
  v148 = v146 ^ 0xFFE4AA2E;
  v149 = (v19 - 83405765) >> 25;
  v150 = v149 ^ 0x2F15CCD3;
  v151 = v146 ^ LODWORD(STACK[0x550]);
  v152 = v149 ^ LODWORD(STACK[0x608]);
  v153 = v147 ^ (4 * v151) ^ (32 * v151) ^ (v151 << 11);
  v154 = ((v19 - 83405765) >> 16) ^ 0xDDF7AF70;
  LODWORD(STACK[0x608]) = (((v19 - 83405765) << 20) ^ 0x23D00000)
                        - ((2 * (((v19 - 83405765) << 20) ^ 0x23D00000)) & 0x41600000)
                        + 548813976;
  v155 = v151 >> 27;
  v151 >>= 21;
  v156 = v151 ^ 0x2F;
  LODWORD(STACK[0x4F4]) ^= (v76 << 10) ^ v142;
  v157 = ((v151 ^ 0x2F) + (v151 ^ v155 ^ 0xFFFFFFD0) + 1) ^ -v155;
  v158 = (v155 ^ 0xC2A915A1 ^ (v157 - ((2 * v157) & 0x85522B42) - 1029106271)) + v156;
  v159 = (v76 >> 7) ^ 0x91BF09DC;
  v160 = (v76 >> 12) ^ 0x46DA5408;
  LODWORD(STACK[0x514]) = v159 ^ v144;
  v161 = v107 ^ ((v76 ^ 0x5E2B923D) << LODWORD(STACK[0x4E0]));
  HIDWORD(v63) = v161 ^ 5;
  LODWORD(v63) = v161 ^ 0x79ABC120;
  v162 = v63 >> 5;
  v163 = v158 - ((2 * v158) & 0x2E97E056) + 390852651;
  v164 = (v76 ^ 0x5E2B923D) >> LODWORD(STACK[0x600]);
  LODWORD(STACK[0x600]) = ((v76 << 25) ^ 0x7A000000) - ((2 * ((v76 << 25) ^ 0x7A000000)) & 0xF7FFFFFF) + 2047828815;
  v165 = (v76 >> 1) ^ (v76 >> 20) ^ v164;
  v166 = v150 ^ v165;
  v167 = LODWORD(STACK[0x4E4]) ^ ((v153 ^ (4 * v163) ^ (32 * v163) ^ (v163 << 11) ^ 0x16752150)
                                - 2
                                * ((v153 ^ (4 * v163) ^ (32 * v163) ^ (v163 << 11) ^ 0x16752150) & STACK[0x58C] ^ (v153 ^ (4 * v163) ^ (32 * v163)) & 0x20)
                                + 1683891922);
  HIDWORD(v63) = LODWORD(STACK[0x4EC]) ^ v162;
  LODWORD(v63) = v162 ^ 0xBFFFFFFF;
  LODWORD(STACK[0x520]) = v131;
  v168 = (v167 - ((2 * v167) & 0x2BBEB0C4) - 1780524958) ^ v131;
  v169 = LODWORD(STACK[0x528]) ^ (v76 << 15) ^ (v76 << 24) ^ (v76 << 10) ^ (v63 >> 27);
  v170 = (v168 - ((2 * v168) & 0x879025C6) - 1010298141) ^ LODWORD(STACK[0x628]);
  v171 = STACK[0x624];
  v172 = (v170 - ((2 * v170) & 0x33A4EFA6) + 433223635) ^ LODWORD(STACK[0x624]);
  v173 = LODWORD(STACK[0x4FC]) ^ (LODWORD(STACK[0x508]) << ((v76 ^ LODWORD(STACK[0x518])) & 0xE)) ^ (32 * v92) ^ (4 * v92) ^ (v92 << 11) ^ (4 * v99) ^ (32 * v99) ^ (v99 << 11) ^ 0x4FF3CF5C;
  v174 = (v173 - ((2 * v173) & 0x3F395BE6) - 1617121805) ^ LODWORD(STACK[0x648]);
  LODWORD(STACK[0x550]) = v174 - ((2 * v174) & 0x76FE6418) + 998191628;
  v175 = (v172 - ((2 * v172) & 0xA4EBC5AE) - 764026153) ^ LODWORD(STACK[0x644]);
  v176 = STACK[0x500];
  v177 = (v175 - ((2 * v175) & 0x656F5E78) + 850898748) ^ LODWORD(STACK[0x500]);
  v178 = STACK[0x620];
  v179 = (v177 - ((2 * v177) & 0xE7BB3BA) - 2025989667) ^ LODWORD(STACK[0x620]);
  v180 = STACK[0x504];
  v181 = (v179 - ((2 * v179) & 0xAA173854) + 1426824234) ^ LODWORD(STACK[0x504]);
  v182 = (v181 - ((2 * v181) & 0x8FDCF8E4) - 940671886) ^ LODWORD(STACK[0x610]);
  v183 = v148 ^ (v182 - ((2 * v182) & 0x9AB622A0) + 1297813840);
  v184 = (v183 - ((2 * v183) & 0x2E97E056) + 390852651) ^ v163;
  v185 = (v166 - ((2 * v166) & 0xA48A3C5C) - 767222226) ^ v143;
  v186 = (v185 - ((2 * v185) & 0x31505666) + 413674291) ^ v125;
  v187 = HIBYTE(v76) ^ (v76 >> 17) ^ (v76 >> 8) ^ 0x5E04D9;
  v188 = (v187 - ((2 * v187) & 0xD01F46) - 815263837) ^ LODWORD(STACK[0x510]);
  v189 = v152 ^ (v188 - ((2 * v188) & 0x26B752BE) - 748967585);
  v190 = (v189 - ((2 * v189) & 0xA48A3C5C) - 767222226) ^ v143;
  v191 = (v190 - ((2 * v190) & 0x31505666) + 413674291) ^ v125;
  LODWORD(STACK[0x508]) = 270336;
  v192 = (v186 + 540341868 - ((2 * v186) & 0x4069ECD8)) ^ LODWORD(STACK[0x4F8]);
  v193 = (v191 + 540341868 - ((2 * v191) & 0x4069ECD8)) ^ LODWORD(STACK[0x4F8]);
  v194 = (v192 - ((2 * v192) & 0x83E2EE90) + 1106343752) ^ v127;
  v195 = (v194 - ((2 * v194) & 0xBBEFE2B6) - 570953381) ^ v154;
  v196 = (v193 - ((2 * v193) & 0xBBEFE2B6) - 570953381) ^ v154;
  v197 = (v195 - ((2 * v195) & 0xB9768396) + 1555775947) ^ v104;
  v198 = (v197 - ((2 * v197) & 0xDEF571DE) + 1870313711) ^ LODWORD(STACK[0x50C]);
  v199 = (v196 - ((2 * v196) & 0xB9768396) + 1555775947) ^ v104;
  v200 = (v198 - ((2 * v198) & 0x8DBF6D62) + 1189066417) ^ v160;
  v201 = (v199 - ((2 * v199) & 0x8DBF6D62) + 1189066417) ^ v160;
  v202 = (v200 - ((2 * v200) & 0xE62B7D0) - 2026808344) ^ v133;
  v203 = (v201 - ((2 * v201) & 0xE62B7D0) - 2026808344) ^ v133;
  v204 = (v203 - ((2 * v203) & 0x404088F8) + 538985596) ^ LODWORD(STACK[0x4F0]);
  v205 = (v204 - ((2 * v204) & 0x342B4F90) - 1709856824) ^ v140;
  v206 = LODWORD(STACK[0x514]) ^ (v202 - ((2 * v202) & 0x2206BDF0) - 1862050056);
  v207 = (v205 - ((2 * v205) & 0x2206BDF0) - 1862050056) ^ v159;
  v208 = LODWORD(STACK[0x4E8]) ^ (v207 - ((2 * v207) & 0xA8F340BC) - 730226594);
  LODWORD(STACK[0x514]) = v206 ^ 0x2A41F6E4;
  v209 = v208 >> 21;
  v210 = v169 ^ (4 * v208) ^ (32 * v208) ^ (v208 << 11) ^ (4 * v209) ^ (32 * v209) ^ (v209 << 11) ^ 0x855CA6D8;
  v211 = (v210 - (STACK[0x598] & (2 * v210)) - 1975705741) ^ LODWORD(STACK[0x62C]);
  v212 = LODWORD(STACK[0x4F4]) ^ (4 * v206) ^ (32 * v206) ^ (v206 << 11);
  v213 = (v206 >> 21) ^ (v165 >> 30) ^ (v206 >> 27);
  LODWORD(STACK[0x50C]) = v212 ^ (4 * v213) ^ (32 * v213) ^ (v213 << 11);
  LODWORD(STACK[0x510]) = v213 ^ 0xCFBBD39E;
  v214 = (v211 - ((2 * v211) & 0xEE1BBA7A) - 150086339) ^ LODWORD(STACK[0x61C]);
  v215 = (v214 - ((2 * v214) & 0xA6B62CC2) + 1398478433) ^ LODWORD(STACK[0x604]);
  v216 = (v215 - ((2 * v215) & 0x2BBEB0C4) - 1780524958) ^ v131;
  v217 = (v216 - ((2 * v216) & 0x416C7930) + 548813976) ^ LODWORD(STACK[0x608]);
  v218 = (v217 - ((2 * v217) & 0x33A4EFA6) + 433223635) ^ v171;
  v219 = (v218 - ((2 * v218) & 0x656F5E78) + 850898748) ^ v176;
  v220 = (v219 - ((2 * v219) & 0xA4EBC5AE) - 764026153) ^ LODWORD(STACK[0x644]);
  v221 = (v220 - ((2 * v220) & 0xF41EC69E) + 2047828815) ^ LODWORD(STACK[0x600]);
  v222 = (v221 - ((2 * v221) & 0xE7BB3BA) - 2025989667) ^ v178;
  v223 = v208 ^ v180 ^ (v222 - ((2 * v222) & 0xAA173854) + 1426824234);
  LODWORD(STACK[0x598]) = 1830359062;
  LODWORD(STACK[0x58C]) = (HIBYTE(v223) & 0xB ^ 2) + (HIBYTE(v223) & 0xB ^ 9);
  LODWORD(STACK[0x4FC]) = HIBYTE(v223) ^ LODWORD(STACK[0x638]);
  LODWORD(STACK[0x5FC]) ^= v223 >> 29;
  v224 = v223 ^ (v208 >> 21);
  LODWORD(STACK[0x4EC]) = v184 ^ (v224 << 19) ^ (v224 << 12);
  v225 = (v223 >> 30) ^ 0xB57DAE0D;
  LODWORD(STACK[0x4F4]) = v225;
  LODWORD(STACK[0x528]) = v224 ^ 0x783B3F45;
  v226 = v225 ^ ((((int)v223 >> 30) & 0xFFFFFFFE | (v223 >> 31)) - 1250054643);
  v227 = v224 ^ 0x3D22E831;
  v228 = ((4 * v224) ^ 0xF48BA0C4) - ((2 * ((4 * v224) ^ 0xF48BA0C4)) & 0xE0FD4D8) + 117959279;
  v229 = ((8 * v224) ^ 0xE9174188) - (STACK[0x52C] & (2 * ((8 * v224) ^ 0xE9174188))) + 317653259;
  v230 = (_DWORD)v227 << LODWORD(STACK[0x634]) << LODWORD(STACK[0x540]);
  v231 = ((v224 << 7) ^ 0x91741880) - (STACK[0x530] & (2 * ((v224 << 7) ^ 0x91741880))) + 2021357419;
  v232 = v228 ^ v231;
  LODWORD(STACK[0x540]) = v231;
  LODWORD(STACK[0x4F0]) = (v227 >> 11) - ((v227 >> 10) & 0x2D8B86) - 55130685;
  v233 = (((2 * v224) ^ (v224 << 6) ^ 0x32FFDC22)
        - 2 * (((2 * v224) ^ (v224 << 6) ^ 0x32FFDC22) & STACK[0x53C] ^ (2 * v224) & 8)
        + 1159321460) ^ v224 ^ 0x783B3F45;
  v234 = (v233 - (STACK[0x534] & (2 * v233)) + 117959279) ^ v228;
  v235 = (v234 - (STACK[0x538] & (2 * v234)) + 317653259) ^ v229;
  v236 = (v224 << 10) ^ 0x8BA0C400;
  v237 = STACK[0x630] & (2 * v236);
  v238 = ((v224 << 16) ^ 0xE8310000) - ((2 * ((v224 << 16) ^ 0xE8310000)) & 0xC6100000) - 485949717;
  LODWORD(STACK[0x648]) = v238;
  v239 = (v235 - ((2 * v235) & 0xF0F6EED6) + 2021357419) ^ v231;
  v240 = v236 - 841930301 - v237;
  LODWORD(STACK[0x534]) = v240;
  v241 = ((v224 << 24) ^ 0x31000000) - ((2 * ((v224 << 24) ^ 0x31000000)) & 0xA8000000) - 731704431;
  LODWORD(STACK[0x504]) = v241;
  v242 = (v224 << 27) ^ (v224 << 15) ^ v230 ^ v240 & STACK[0x640];
  v243 = ((v224 << 13) ^ 0x5D062000) - ((v224 << 14) & 0x45410000) + 580948989;
  LODWORD(STACK[0x644]) = v243;
  v244 = ((v224 << 14) ^ 0xBA0C4000) - ((2 * ((v224 << 14) ^ 0xBA0C4000)) & 0x5B6F0000) - 1380469666;
  LODWORD(STACK[0x538]) = v244;
  v245 = v244 & 0xF1440000;
  v246 = (v224 >> 8) ^ 0x8D5FDA9F;
  v247 = v244 & 0xEBBC000;
  v248 = ((v224 << 20) ^ 0x83100000) - ((2 * ((v224 << 20) ^ 0x83100000)) & 0x4AA00000) - 1521113927;
  LODWORD(STACK[0x53C]) = v248;
  v249 = v240 ^ v243 ^ (v239 - ((2 * v239) & 0x9BA25386) - 841930301);
  v250 = (v249 & 0xF144160B ^ v245 | v249 & 0xEBBE9F4 ^ v247) ^ (v224 << 17) ^ 0x5F7513FD;
  v251 = (v250 - ((2 * v250) & 0xC611FDD6) - 485949717) ^ v238;
  v252 = (v251 - ((2 * v251) & 0x4AAB4972) - 1521113927) ^ v248;
  v253 = ((v224 << 22) ^ 0xC400000) - ((2 * ((v224 << 22) ^ 0xC400000)) & 0xC9800000) + 1694066872;
  LODWORD(STACK[0x500]) = v253;
  v254 = (v224 >> 10) ^ 0xB0BD5A92;
  v255 = ((v224 << 25) ^ 0x62000000) - ((v224 << 26) & 0x8000000) + 90371120;
  LODWORD(STACK[0x530]) = v255;
  v256 = (v252 - ((2 * v252) & 0xC9F2D170) + 1694066872) ^ v253;
  LODWORD(STACK[0x640]) = (((v224 << 28) ^ 0x10000000) + ((v224 << 29) ^ 0xDFFFFFFF) - 140645075) | 1;
  v257 = ((v224 << 26) ^ 0xC4000000) + 2145060888 - 2 * ((v224 << 26) ^ 0xC4000000);
  LODWORD(STACK[0x52C]) = v257;
  v258 = (v256 - ((2 * v256) & 0xA8C62722) - 731704431) ^ v241;
  v259 = v224 >> 4;
  LODWORD(STACK[0x518]) = v257 ^ v255;
  v260 = v257 ^ v255 ^ (v258 - ((2 * v258) & 0xAC5E860) + 90371120);
  LODWORD(STACK[0x4F8]) = v260 ^ 0xDD5CB9E6;
  LODWORD(STACK[0x630]) = ((v224 << 11) ^ 0x17418800) - ((2 * ((v224 << 11) ^ 0x17418800)) & 0xBAF95000) + 1568452154;
  v261 = ((v260 & 0xFE ^ 0xE6) + (v260 & 0xFE ^ 0x18)) & 0x46 ^ 0x44;
  LODWORD(STACK[0x634]) = ((v224 << 18) ^ 0xA0C40000) - ((2 * ((v224 << 18) ^ 0xA0C40000)) & 0xD2900000) + 1766549721;
  v262 = (v224 >> 7) ^ 0x217DC23A;
  LODWORD(STACK[0x638]) = ((v224 << 21) ^ 0x6200000) - ((2 * ((v224 << 21) ^ 0x6200000)) & 0xA5000000) + 1384679672;
  v263 = (((v224 << 8) ^ 0x22E83100) - ((2 * ((v224 << 8) ^ 0x22E83100)) & 0x25DE0200) + 317653259) ^ v229 ^ v232;
  v264 = LODWORD(STACK[0x558]) ^ (v223 >> 25);
  LODWORD(STACK[0x558]) = v262 ^ (v224 >> 6);
  v265 = (~v240 & 0x800000 | ((((~v240 & 0x800000) >> 23) & 1) << 24)) ^ 0x7EC9FF4F;
  v266 = LODWORD(STACK[0x590]) ^ (v223 >> 19);
  v267 = -1723107751 - v265;
  v268 = HIWORD(v223) ^ 0x1023C911;
  v269 = (v223 >> 22) ^ LODWORD(STACK[0x5A0]);
  v270 = (v223 >> 26) ^ (v223 >> 18) ^ (v223 >> 15) ^ (v223 >> 22) ^ (v224 >> 3) ^ v226;
  v271 = ((v270 ^ 0x7A428F0) - 2 * ((v270 ^ 0x7A428F0) & 0x1C92EA9F ^ v270 & 4) - 1668093285) ^ ((v227 >> 7)
                                                                                               - ((v227 >> 6) & 0x125D536)
                                                                                               - 1668093285);
  v272 = (v223 >> 12) ^ 0x5D0A57B;
  if (((v265 - 2127167311) & (v263 ^ 0x7F000000)) == 0)
    v267 = v265 - 1682475077;
  v273 = v242 ^ ((v263 ^ 0x7F7C9D04) - 444692234 + v267);
  v274 = (v223 >> 14) ^ 0x1C15F0F5;
  v275 = (v271 - ((2 * v271) & 0x4E2DBA78) + 655809852) ^ LODWORD(STACK[0x5FC]);
  v276 = (v275 - ((2 * v275) & 0x3249E3BE) - 1725632033) ^ v264;
  v277 = (v276 - ((2 * v276) & 0x4F95A44A) + 667603493) ^ v266;
  v278 = (v277 - ((2 * v277) & 0x2047E866) + 270791731) ^ v268;
  v279 = (v278 - ((2 * v278) & 0xBA6EEAA) + 97744725) ^ v272;
  v280 = (v279 - ((2 * v279) & 0x61642450) - 1330507224) ^ v254;
  v281 = (v280 - ((2 * v280) & 0x1AC5F0EE) - 1922893705) ^ v246;
  v282 = (v281 - ((2 * v281) & 0x8DC62F7E) - 958195777) ^ v259;
  v283 = (v224 >> 6) ^ 0xC6179C1F ^ v282;
  v284 = (v224 << 29) ^ (32 * v283) ^ (4 * v283) ^ (v283 << 11);
  v285 = LODWORD(STACK[0x4EC]) ^ ((v223 ^ ~v209) << 31);
  v286 = (v223 >> 13) ^ (v223 >> 20) ^ (v223 >> 21) ^ (v224 >> 1) ^ (v227 >> 18) ^ 0x1E909F34;
  v287 = (v223 >> 21) ^ (v223 >> 17) ^ 0x1F78;
  v288 = v223 >> 11;
  v289 = (v283 >> 21) ^ (v282 >> 27);
  v290 = (unint64_t)(v289 ^ 6u) << v261;
  v291 = v227 >> ((v288 & 0x4B ^ 0x49) + (v288 & 0x4B ^ 2) - 69);
  v292 = v291 - ((2 * v291) & 0x6EEBFF5A) - 1217003603;
  v293 = (v286 - ((2 * v286) & 0xAA58FDB2) - 718504231) ^ v269;
  v294 = (v293 - ((2 * v293) & 0x3249E3BE) - 1725632033) ^ v264;
  v295 = (v294 - ((2 * v294) & 0x4F95A44A) + 667603493) ^ v266;
  v296 = (v295 - ((2 * v295) & 0x2047E866) + 270791731) ^ v268;
  v297 = (v296 - ((2 * v296) & 0x382A08FC) + 471139454) ^ v274;
  v298 = (v297 - ((2 * v297) & 0xBA6EEAA) + 97744725) ^ v272;
  v299 = (v298 - ((2 * v298) & 0xBB68D7AC) - 575378474) ^ v288;
  v300 = v299 & 4;
  v301 = v273 ^ (v227 << ((v292 & 0x63 ^ 0x21 | v292 & 0x63 ^ 0x42) ^ 0x77u));
  v289 ^= 0x6B300B66u;
  v302 = v299 ^ 0xDDB3CF8B;
  v303 = ((v289 << 11) ^ 0x805B0000) - ((2 * ((v289 << 11) ^ 0x805B0000)) & 0x598000) + 1298974380;
  v304 = v292 ^ v262 ^ (v302 - 2 * (v302 & STACK[0x5CC] ^ v300) + 554141674);
  v305 = (v224 >> 9) ^ (v224 >> 5) ^ LODWORD(STACK[0x4F0]) ^ (v287 - ((2 * v287) & 0x8B86) - 55130685);
  v306 = v304 ^ v259;
  v307 = ((v305 ^ 0x1F78635) - 2 * ((v305 ^ 0x1F78635) & 0x357DAE0F ^ v305 & 2) - 1250054643) ^ LODWORD(STACK[0x4F4]);
  LODWORD(v290) = LODWORD(STACK[0x4F8]) ^ ((v284 ^ (32 * v289) ^ 0xA2781E6C ^ v290)
                                         - ((2 * (v284 ^ (32 * v289) ^ 0xA2781E6C ^ v290)) & 0x450F63FC)
                                         - 1568165378);
  v308 = (v307 - ((2 * v307) & 0x4E2DBA78) + 655809852) ^ LODWORD(STACK[0x5FC]);
  v309 = (v308 - ((2 * v308) & 0x3249E3BE) - 1725632033) ^ v264;
  v310 = (v309 - ((2 * v309) & 0xAA58FDB2) - 718504231) ^ v269;
  v311 = LODWORD(STACK[0x4FC]) ^ (v310 - ((2 * v310) & 0x7BF1BD94) - 1107763510);
  v312 = (v311 - ((2 * v311) & 0x4F95A44A) + 667603493) ^ v266;
  v313 = (v312 - ((2 * v312) & 0x2047E866) + 270791731) ^ v268;
  v314 = (v313 - ((2 * v313) & 0x382A08FC) + 471139454) ^ v274;
  v315 = (v314 - ((2 * v314) & 0xBA6EEAA) + 97744725) ^ v272;
  v316 = (v315 - ((2 * v315) & 0x61642450) - 1330507224) ^ v254;
  v317 = (v316 - ((2 * v316) & 0x1AC5F0EE) - 1922893705) ^ v246;
  v318 = LODWORD(STACK[0x558]) ^ (v317 - ((2 * v317) & 0x420F0FD4) + 554141674);
  v319 = v301 ^ v318 ^ (32 * v318) ^ (v318 << 11);
  LODWORD(v290) = (v290 - ((2 * v290) & 0xEF3BDA5A) - 140645075) ^ LODWORD(STACK[0x640]);
  v320 = ((LODWORD(STACK[0x50C]) ^ (4 * v318) ^ 0xAAACAF30)
        - 2
        * ((LODWORD(STACK[0x50C]) ^ (4 * v318) ^ 0xAAACAF30) & 0xA3D1F7F ^ (LODWORD(STACK[0x50C]) ^ (4 * v318)) & 0xC)
        - 1975705741) ^ LODWORD(STACK[0x62C]);
  v321 = (v320 - ((2 * v320) & 0xA9FF7816) + 1426045963) ^ LODWORD(STACK[0x524]);
  v322 = (v321 - ((2 * v321) & 0xEE1BBA7A) - 150086339) ^ LODWORD(STACK[0x61C]);
  v318 >>= 21;
  v323 = v285 ^ ((v304 ^ v259) << 11) ^ (4 * (v304 ^ v259 ^ 0x3A40FD52)) ^ (32 * (v304 ^ v259 ^ 0x3A40FD52));
  v324 = v289 ^ v283 ^ (v290 - 1488657600 + (~(2 * v290) | 0xB1763981));
  v325 = (v324 & 0x2704259E ^ v303 & STACK[0x508] | v324 & 0xD8FBDA61 ^ v303 & 0x3BD800) ^ 0xCF8A06DC;
  LODWORD(v290) = (((v322 - ((2 * v322) & 0xA6B62CC2) + 1398478433) ^ LODWORD(STACK[0x604]))
                 - 2
                 * (((v322 - ((2 * v322) & 0xA6B62CC2) + 1398478433) ^ LODWORD(STACK[0x604])) & 0x15DF586E ^ (v322 - ((2 * v322) & 0xA6B62CC2) + 1398478433) & 0xC)
                 - 1780524958) ^ LODWORD(STACK[0x520]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0x879025C6) - 1010298141) ^ LODWORD(STACK[0x628]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0x416C7930) + 548813976) ^ LODWORD(STACK[0x608]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0x33A4EFA6) + 433223635) ^ LODWORD(STACK[0x624]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0xF41EC69E) + 2047828815) ^ LODWORD(STACK[0x600]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0xE7BB3BA) - 2025989667) ^ LODWORD(STACK[0x620]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0x8FDCF8E4) - 940671886) ^ LODWORD(STACK[0x610]);
  LODWORD(v290) = LODWORD(STACK[0x514]) ^ (v290 - ((2 * v290) & 0x5F469F8E) + 799231943);
  v326 = v325 - ((2 * v325) & 0xF49274C4) - 95864222;
  v327 = LODWORD(STACK[0x510]) ^ (v290 - 809774178 - ((2 * v290) & 0x9F77A762) + 19);
  v328 = v319 ^ (4 * v318) ^ (32 * v318) ^ (v318 << 11) ^ (v327 - ((2 * v327) & 0x59BD9F88) + 752799684);
  v329 = (v306 >> 27) ^ (v304 >> 30) ^ (v306 >> 21);
  v330 = ((v328 ^ 0xA7AFA098) - 2 * ((v328 ^ 0xA7AFA098) & STACK[0x5D0] ^ v328 & 4) + 1568452154) ^ LODWORD(STACK[0x630]);
  v331 = (v330 - ((2 * v330) & 0x454127FA) + 580948989) ^ LODWORD(STACK[0x644]);
  v332 = (v331 - ((2 * v331) & 0xC611FDD6) - 485949717) ^ LODWORD(STACK[0x648]);
  v333 = (v332 - ((2 * v332) & 0xD296D1B2) + 1766549721) ^ LODWORD(STACK[0x634]);
  v334 = (v333 - ((2 * v333) & 0xA51111F0) + 1384679672) ^ LODWORD(STACK[0x638]);
  v335 = (v334 - ((2 * v334) & 0xC9F2D170) + 1694066872) ^ LODWORD(STACK[0x500]);
  v336 = (v335 - ((2 * v335) & 0xA8C62722) - 731704431) ^ LODWORD(STACK[0x504]);
  v337 = LODWORD(STACK[0x518]) ^ (v336 - ((2 * v336) & 0xAC5E860) + 90371120);
  LODWORD(STACK[0x590]) = 1280060301;
  v338 = v337 ^ v318;
  LODWORD(v290) = v337 ^ v318 ^ 0xCB167452;
  STACK[0x5A0] = ((v326 & 0x8EC55FE4 ^ 0x4844584) + (v326 & 0x8EC55FE4 ^ 0x8A411A60)) ^ 0x8EC55FEF;
  LODWORD(STACK[0x558]) = -996499225;
  v339 = (v337 >> 29) ^ (v337 >> 30) ^ 0xFF4E9591;
  LODWORD(STACK[0x610]) = (4 * v290) ^ (8 * v290) ^ 0xA340DD;
  v340 = (v337 >> 19) ^ 0x5F2A4018;
  LODWORD(STACK[0x608]) = v340;
  LODWORD(STACK[0x5CC]) = 1780371935;
  LODWORD(STACK[0x5D0]) = LODWORD(STACK[0x658]) ^ 0x6A1E51AF;
  v341 = (((_DWORD)v290 << 13) ^ 0xAF89A000) - ((2 * (((_DWORD)v290 << 13) ^ 0xAF89A000)) & 0xCBC90000) - 438004580;
  v342 = ((v337 ^ v318) >> 10) ^ 0x1C332CF4;
  LODWORD(STACK[0x620]) = v342;
  v343 = (((_DWORD)v290 << 21) ^ 0x89A00000) - ((2 * (((_DWORD)v290 << 21) ^ 0x89A00000)) & 0xB5000000) - 627152569;
  v344 = (((_DWORD)v290 << 18) ^ 0xF1340000) - ((2 * (((_DWORD)v290 << 18) ^ 0xF1340000)) & 0x76400000) + 992212871;
  v345 = (v337 >> 11) ^ 0xEF21DE11;
  LODWORD(STACK[0x61C]) = v345;
  v346 = v337 ^ v318 ^ 0x7FDB081F;
  v347 = (v337 >> 28) ^ (v337 >> 27) ^ (v337 >> 21) ^ (v337 >> 18) ^ (v337 >> 13) ^ 0x3E2D8;
  v348 = (((_DWORD)v290 << 22) ^ 0x13400000) - ((2 * (((_DWORD)v290 << 22) ^ 0x13400000)) & 0xC4000000) + 1644973550;
  v349 = (v337 >> 14) ^ 0x276B1272;
  v350 = (((_DWORD)v290 << 23) ^ 0x26800000) - ((2 * (((_DWORD)v290 << 23) ^ 0x26800000)) & 0xDE000000) + 1862426480;
  v351 = (((_DWORD)v290 << 26) ^ 0x34000000) - ((2 * (((_DWORD)v290 << 26) ^ 0x34000000)) & 0x8FFFFFFF) + 1183447769;
  v352 = (((_DWORD)v290 << 27) ^ 0x68000000) - ((2 * (((_DWORD)v290 << 27) ^ 0x68000000)) & 0xBFFFFFFF) + 1496344985;
  LODWORD(STACK[0x604]) = v323 ^ (4 * v329) ^ (32 * v329) ^ (v329 << 11) ^ v352;
  v353 = (v347 - ((2 * v347) & 0x5DCFF084) - 1360529342) ^ ((v346 >> 15) - ((v346 >> 14) & 0x3F084) - 1360529342);
  v354 = (v353 - 11627119 - ((2 * v353) & 0x7E9D2B26) + 2) ^ v339;
  v355 = (v354 - ((2 * v354) & 0x3E549FC6) + 1596608483) ^ v340;
  LODWORD(STACK[0x600]) = -1322637885;
  v356 = (v355 - ((2 * v355) & 0x4ED5DA3C) + 661318942) ^ v349;
  v357 = (v338 >> 6) ^ 0x967F28D6;
  v358 = (v356 - ((2 * v356) & 0xDE5C4AE0) - 282188432) ^ v345;
  v359 = (v290 >> 9) ^ v342 ^ v357 ^ (((v290 >> 4) ^ (v290 >> 2) ^ 0x267F88D7)
                                                  - 2
                                                  * (((v290 >> 4) ^ (v290 >> 2) ^ 0x267F88D7) & 0x178044FE ^ ((v290 >> 4) ^ (v290 >> 2)) & 8)
                                                  - 1753201418) ^ (v358 - ((2 * v358) & 0x3859B46C) + 472701494);
  LODWORD(STACK[0x524]) = (v290 >> 5) ^ v357;
  v360 = v359 ^ (v290 >> 5);
  v361 = ((LODWORD(STACK[0x5B4]) ^ 0x361E3895 ^ LODWORD(STACK[0x544]))
        - ((2 * (LODWORD(STACK[0x5B4]) ^ 0x361E3895 ^ LODWORD(STACK[0x544]))) & 0x9E0B69B8)
        + 1325774044) ^ LODWORD(STACK[0x654]);
  v362 = (v361 - ((2 * v361) & 0x23C12CA2) - 1847552431) ^ LODWORD(STACK[0x6B0]);
  v363 = (v362 - (STACK[0x5DC] & (2 * v362)) - 1699822708) ^ LODWORD(STACK[0x588]);
  v364 = (v363 - ((2 * v363) & 0x6486CA3C) + 843277598) ^ LODWORD(STACK[0x6A0]);
  v365 = (v364 - ((2 * v364) & 0xD6C5171C) - 345863282) ^ LODWORD(STACK[0x6E0]);
  v366 = (v365 - ((2 * v365) & 0xBA74995A) + 1564101805) ^ LODWORD(STACK[0x668]);
  v367 = (v366 - ((2 * v366) & 0x7858888A) - 1137949627) ^ LODWORD(STACK[0x6E4]);
  v368 = (v367 - ((2 * v367) & 0x1427CB34) - 1978407526) ^ LODWORD(STACK[0x670]);
  v369 = (v368 - ((2 * v368) & 0xE36B088C) - 239762362) ^ LODWORD(STACK[0x680]);
  v370 = (v369 - ((2 * v369) & 0xDC2F3E8E) - 300441785) ^ LODWORD(STACK[0x6C8]);
  v371 = (v370 - ((2 * v370) & 0xECD0D754) - 160928854) ^ LODWORD(STACK[0x67C]);
  v372 = (v371 - ((2 * v371) & 0xB2335CD2) - 652628375) ^ LODWORD(STACK[0x6BC]);
  v373 = (v372 - ((2 * v372) & 0xF233132) + 126982297) ^ LODWORD(STACK[0x548]);
  v374 = ((_DWORD)v290 << 28) ^ ((_DWORD)v290 << 30) ^ (32 * v290) ^ (16 * v290) ^ ((_DWORD)v290 << 11) ^ ((_DWORD)v290 << 14) ^ ((_DWORD)v290 << 17) ^ ((_DWORD)v290 << 19) ^ 0x6B7B6570;
  LODWORD(STACK[0x588]) = (v373 ^ 0x9D72729) - 2 * ((v373 ^ 0x9D72729) & 0x7CD48673 ^ v373 & 2) - 53180815;
  v375 = (v360 >> 21) ^ (v359 >> 27);
  v376 = STACK[0x610];
  v377 = (v374 - ((2 * v374) & 0xEBFAA71A) + 1979536257) ^ LODWORD(STACK[0x610]);
  v378 = (v377 - ((2 * v377) & 0xCBC92938) - 438004580) ^ v341;
  v379 = (v378 - ((2 * v378) & 0x7647EF0E) + 992212871) ^ v344;
  v380 = (v379 - ((2 * v379) & 0xB53CD28E) - 627152569) ^ v343;
  v381 = (v380 - ((2 * v380) & 0xC4189BDC) + 1644973550) ^ v348;
  v382 = (v381 - ((2 * v381) & 0xDE04BEE0) + 1862426480) ^ v350;
  v383 = (v382 + 1183447769 + (~(2 * v382) | 0x72EC0A4D) + 1) ^ v351;
  v384 = (v383 - ((2 * v383) & 0xB260D332) + 1496344985) ^ v352;
  v385 = v360 ^ 0x3C6F8D44 ^ v326 ^ (v384 - ((2 * v384) & 0xF49274C4) - 95864222);
  HIDWORD(v386) = v385 ^ 0x39938018;
  LODWORD(v386) = v385;
  v387 = (v386 >> 30) ^ ((v359 >> 28) & 3 | (16 * (v360 ^ 0x3C6F8D44)));
  LODWORD(STACK[0x624]) = v375;
  HIDWORD(v386) = v387 ^ 1;
  LODWORD(v386) = v387 ^ 0x12215A6C;
  v388 = (v337 >> 22) ^ (v337 >> 25) ^ (v337 >> 17);
  LODWORD(STACK[0x628]) = ((v386 >> 2) - ((2 * (v386 >> 2)) & 0x9DEBF13C) + 1324742814) ^ (((32 * (v360 ^ 0x3C6F8D44)) ^ ((v360 ^ 0x3C6F8D44) << 11) ^ 0xAE70C300)
                                                                                         - ((2
                                                                                           * ((32 * (v360 ^ 0x3C6F8D44)) ^ ((v360 ^ 0x3C6F8D44) << 11) ^ 0xAE70C300)) & 0x9DEBF100)
                                                                                         + 1324742814);
  v389 = v346 << ((((v386 >> 2) - ((2 * (v386 >> 2)) & 0x3C) - 98) ^ 0xFE | ~(((v386 >> 2)
                                                                             - ((2 * (v386 >> 2)) & 0x3C)
                                                                             - 98) ^ (32 * (v360 ^ 0x44) - 98))) & 0xB);
  LODWORD(STACK[0x62C]) = (4 * v375) ^ (32 * (v375 ^ 0x152)) ^ ((v375 ^ 0x152) << 11);
  v390 = HIWORD(v337) ^ (v337 >> 12) ^ (v338 >> 7) ^ (v338 >> 8) ^ ((v346 >> 21) - ((v346 >> 20) & 0xA5A) - 1599845075);
  v391 = (v338 << 20) ^ (v338 << 25) ^ ((_DWORD)v290 << 24) ^ ((_DWORD)v290 << 16) ^ ((_DWORD)v290 << 8) ^ ((_DWORD)v290 << 7) ^ ((_DWORD)v290 << 10) ^ ((_DWORD)v290 << 15);
  v392 = v390 ^ 0x87EF73 ^ ((v388 ^ 0x3E2D) - 2 * ((v388 ^ 0x3E2D) & 0x4D3F ^ v388 & 0x12) - 1599845075);
  v393 = (v392 - ((2 * v392) & 0x2F7E937E) - 675329601) ^ HIBYTE(v337);
  v394 = ((v393 ^ 0xD7BF49C0) - 11627119 + ~(2 * ((v393 ^ 0xD7BF49C0) & 0x7F4E9597 ^ v393 & 4)) + 3) ^ v339;
  v395 = (v394 - ((2 * v394) & 0xBE549FC6) + 1596608483) ^ LODWORD(STACK[0x608]);
  v396 = ((v391 ^ 0xAEA8DF80 ^ v389) - 2 * ((v391 ^ 0xAEA8DF80 ^ v389) & 0x75FD5397 ^ v389 & 0x16) + 1979536257) ^ v376;
  v397 = (v396 - ((2 * v396) & 0xCBC92938) - 438004580) ^ v341;
  v398 = (v397 - ((2 * v397) & 0x7647EF0E) + 992212871) ^ v344;
  v399 = (v398 - ((2 * v398) & 0xB53CD28E) - 627152569) ^ v343;
  v400 = (v399 - ((2 * v399) & 0xC4189BDC) + 1644973550) ^ v348;
  v401 = (v400 - ((2 * v400) & 0xDE04BEE0) + 1862426480) ^ v350;
  v402 = (v401 - ((2 * v401) & 0x8D13F5B2) + 1183447769) ^ v351;
  v403 = LODWORD(STACK[0x604]) ^ (v402 - ((2 * v402) & 0xB260D332) + 1496344985);
  v404 = (v395 + 661318942 + (LODWORD(STACK[0x600]) | ~(2 * v395)) + 1) ^ v349;
  v405 = (v404 - ((2 * v404) & 0xDE5C4AE0) - 282188432) ^ LODWORD(STACK[0x61C]);
  v406 = (v405 - ((2 * v405) & 0x3859B46C) + 472701494) ^ LODWORD(STACK[0x620]);
  LODWORD(STACK[0x5FC]) = -1219131136;
  v407 = (v290 >> 9) ^ 0xCE65CA2B ^ (v406 - 834687850 + (~(2 * v406) | 0x6380A6D5));
  v408 = LODWORD(STACK[0x524]) ^ (v407 - ((2 * v407) & 0x2F0089EC) - 1753201418);
  v409 = ((v403 ^ 0xB6D67694) - 2 * ((v403 ^ 0xB6D67694) & 0x4519D77F ^ v403 & 0xB) + 1159321460) ^ LODWORD(STACK[0x528]);
  v410 = (v409 - ((2 * v409) & 0xF0F6EED6) + 2021357419) ^ LODWORD(STACK[0x540]);
  v411 = (v410 - ((2 * v410) & 0x9BA25386) - 841930301) ^ LODWORD(STACK[0x534]);
  v412 = (v411 - ((2 * v411) & 0xBAF95C74) + 1568452154) ^ LODWORD(STACK[0x630]);
  v413 = (v412 - ((2 * v412) & 0x454127FA) + 580948989) ^ LODWORD(STACK[0x644]);
  v414 = (v413 - ((2 * v413) & 0x5B6F68BC) - 1380469666) ^ LODWORD(STACK[0x538]);
  v415 = (v414 - ((2 * v414) & 0xC611FDD6) - 485949717) ^ LODWORD(STACK[0x648]);
  v416 = (v415 - ((2 * v415) & 0xD296D1B2) + 1766549721) ^ LODWORD(STACK[0x634]);
  v417 = (v416 - ((2 * v416) & 0x4AAB4972) - 1521113927) ^ LODWORD(STACK[0x53C]);
  v418 = (v417 - ((2 * v417) & 0xA51111F0) + 1384679672) ^ LODWORD(STACK[0x638]);
  v419 = (v418 - ((2 * v418) & 0xAC5E860) + 90371120) ^ LODWORD(STACK[0x530]);
  v420 = (v419 - ((2 * v419) & 0xFFB61030) + 2145060888) ^ LODWORD(STACK[0x52C]);
  v421 = (((v420 - ((2 * v420) & 0xEF3BDA5A) - 140645075) ^ LODWORD(STACK[0x640]))
        - 2
        * (((v420 - ((2 * v420) & 0xEF3BDA5A) - 140645075) ^ LODWORD(STACK[0x640])) & 0x519ED277 ^ (v420
                                                                                                  - ((2 * v420) & 0xEF3BDA5A)
                                                                                                  - 140645075) & 0x10)
        - 778120601) ^ v306;
  v422 = v329 ^ 0x79AE75BB ^ ((v421 ^ 0x65390349) - 2 * ((v421 ^ 0x65390349) & 0x79AE700E ^ v421 & 4) + 2041475082);
  v423 = v408 ^ (4 * v408) ^ (32 * v408) ^ (v408 << 11) ^ (v422 - ((2 * v422) & 0x88CBBEBC) - 999956642);
  LODWORD(STACK[0x5DC]) = 1655225912;
  v424 = (v408 >> 21) ^ 0x8196E63C;
  v425 = (32 * v424) ^ (v424 << 11) ^ (((4 * v424) ^ 0x65B9844) - ((2 * ((4 * v424) ^ 0x65B9844)) & 0x3978) + 1704082621) ^ v423;
  LODWORD(STACK[0x620]) = v425;
  LODWORD(STACK[0x634]) = (v423 >> 31) ^ (v425 >> 26) ^ (v425 >> 29) ^ (v425 >> 30);
  LODWORD(STACK[0x608]) = -2137702400;
  LODWORD(STACK[0x630]) = v425 ^ v424;
  LODWORD(STACK[0x5B4]) = -827313609;
  LODWORD(STACK[0x600]) = v425 ^ v424 ^ 0x9904499C;
  LODWORD(STACK[0x604]) = 2073931776;
  v426 = ((v425 ^ v424 ^ 0x9904499C) << 26) ^ 0x90000000;
  LODWORD(STACK[0x61C]) = -684866351;
  LODWORD(STACK[0x610]) = 95162;
  v427 = ((v20 << 11) ^ 0x5FD80800) - (STACK[0x578] & (2 * ((v20 << 11) ^ 0x5FD80800))) + 998191628;
  v428 = ((LODWORD(STACK[0x54C]) ^ v427) - ((2 * (LODWORD(STACK[0x54C]) ^ v427)) & 0x23C12CA2) - 1847552431) ^ LODWORD(STACK[0x6B0]);
  v429 = (v428 - ((2 * v428) & 0xD6C5171C) - 345863282) ^ LODWORD(STACK[0x6E0]);
  v430 = (v429 - ((2 * v429) & 0x7858888A) - 1137949627) ^ LODWORD(STACK[0x6E4]);
  v431 = LODWORD(STACK[0x550]) ^ v427;
  v432 = LODWORD(STACK[0x570]) ^ (LODWORD(STACK[0x568]) | (v427 >> 15));
  v433 = (v431 - ((2 * v431) & 0x23C12CA2) - 1847552431) ^ LODWORD(STACK[0x6B0]);
  v434 = (v433 - ((2 * v433) & 0xBA74995A) + 1564101805) ^ LODWORD(STACK[0x668]);
  v435 = STACK[0x580];
  LODWORD(v290) = STACK[0x650];
  v436 = (v430 + LODWORD(STACK[0x580]) + (LODWORD(STACK[0x584]) | ~(2 * v430))) ^ LODWORD(STACK[0x650]);
  v437 = (v434 - ((2 * v434) & 0x5FFCBB0E) + 805199239) ^ LODWORD(STACK[0x694]);
  v438 = (v437 - ((2 * v437) & 0x47C407FC) + 602014718) ^ LODWORD(STACK[0x698]);
  v439 = LODWORD(STACK[0x584]) | ~(2 * v438);
  HIDWORD(v386) = v432 ^ 0x1E8DC;
  LODWORD(v386) = v432 ^ 0x14360000;
  LODWORD(STACK[0x57C]) ^= (v386 >> 17) ^ (4 * LODWORD(STACK[0x64C])) ^ (32 * LODWORD(STACK[0x64C])) ^ (LODWORD(STACK[0x64C]) << 11) ^ (4 * LODWORD(STACK[0x658])) ^ (32 * LODWORD(STACK[0x658])) ^ (LODWORD(STACK[0x658]) << 11);
  v440 = (((v438 + v435 + v439) ^ v290) - ((2 * ((v438 + v435 + v439) ^ v290)) & 0x1427CB34) - 1978407526) ^ LODWORD(STACK[0x670]);
  v441 = (v436 - ((2 * v436) & 0x1427CB34) - 1978407526) ^ LODWORD(STACK[0x670]);
  v442 = (v440 - ((2 * v440) & 0xE29CA3E6) + 1900958195) ^ LODWORD(STACK[0x574]);
  v443 = (v441 - ((2 * v441) & 0xE29CA3E6) + 1900958195) ^ LODWORD(STACK[0x574]);
  v444 = (v442 - ((2 * v442) & 0xECD0D754) - 160928854) ^ LODWORD(STACK[0x67C]);
  v445 = (v444 - ((2 * v444) & 0x599C3B2E) - 1395778153) ^ LODWORD(STACK[0x660]);
  v446 = (v445 - ((2 * v445) & 0xB2335CD2) - 652628375) ^ LODWORD(STACK[0x6BC]);
  v447 = LODWORD(STACK[0x564]) ^ (v446 - ((2 * v446) & 0xE55CD81A) - 223450099);
  v448 = (v443 - ((2 * v443) & 0xDC2F3E8E) - 300441785) ^ LODWORD(STACK[0x6C8]);
  v449 = (v448 - ((2 * v448) & 0xE36B088C) - 239762362) ^ LODWORD(STACK[0x680]);
  v450 = (v449 - ((2 * v449) & 0xECD0D754) - 160928854) ^ LODWORD(STACK[0x67C]);
  v451 = LODWORD(STACK[0x560]) ^ (v450 - ((2 * v450) & 0x599C3B2E) - 1395778153);
  v452 = LODWORD(STACK[0x56C]) ^ (v447 - 202487522 - ((2 * v447) & 0xE7DC92DA) + 79);
  LODWORD(STACK[0x580]) = v452 - ((2 * v452) & 0x2CADF5D0) + 374799080;
  v453 = v451 ^ LODWORD(STACK[0x688]);
  v454 = HIBYTE(v451) ^ (v451 >> 17) ^ (v453 >> 8) ^ (v453 >> 7) ^ 0x443608;
  v455 = (v451 >> 30) ^ (v451 >> 29);
  v456 = v455 ^ LODWORD(STACK[0x558]) ^ (v454 - ((2 * v454) & 0x13541C6) - 996499229);
  LODWORD(STACK[0x578]) = v456 - ((2 * v456) & 0x1600B314) - 889169526;
  v457 = v453 ^ 0xF21DE080;
  v458 = (v453 >> 9) ^ 0x46DE7AC9;
  v459 = (v453 >> 6) ^ 0x893D1E00;
  v460 = (v453 << 24) ^ (v453 << 15) ^ ((v453 ^ 0xF21DE080) << 8) ^ 0x38F4BD00;
  v461 = (v453 >> 10) ^ 0x76DF46AF;
  v462 = v453;
  v463 = (4 * (v453 ^ 0xF21DE080)) ^ (8 * (v453 ^ 0xF21DE080)) ^ 0x249EE91A;
  LODWORD(STACK[0x564]) = v463;
  v464 = (v453 ^ 0xF21DE080) << 13;
  LODWORD(STACK[0x574]) = (v464 ^ 0x1547A000) - ((2 * (v464 ^ 0x1547A000)) & 0xF3A04000) + 2043685100;
  LODWORD(STACK[0x640]) = (((v453 ^ 0xF21DE080) << 11) ^ 0x551E800)
                        - ((2 * (((v453 ^ 0xF21DE080) << 11) ^ 0x551E800)) & 0x34A80000)
                        - 1705769236;
  LODWORD(STACK[0x668]) = (((v453 ^ 0xF21DE080) << 14) ^ 0x2A8F4000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 14) ^ 0x2A8F4000)) & 0x2B438000)
                        - 1784557753;
  LODWORD(STACK[0x638]) = (((v453 ^ 0xF21DE080) << 18) ^ 0xA8F40000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 18) ^ 0xA8F40000)) & 0x2BF80000)
                        - 1778492617;
  LODWORD(STACK[0x67C]) = (((v453 ^ 0xF21DE080) << 19) ^ 0x51E80000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 19) ^ 0x51E80000)) & 0x700000)
                        + 4037144;
  LODWORD(STACK[0x648]) = (((v453 ^ 0xF21DE080) << 21) ^ 0x47A00000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 21) ^ 0x47A00000)) & 0xC4C00000)
                        - 496347089;
  LODWORD(STACK[0x56C]) = (((v453 ^ 0xF21DE080) << 22) ^ 0x8F400000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 22) ^ 0x8F400000)) & 0xF1FFFFFF)
                        - 120564464;
  LODWORD(STACK[0x570]) = (((v453 ^ 0xF21DE080) << 23) ^ 0x1E800000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 23) ^ 0x1E800000)) & 0x8E000000)
                        + 1193220223;
  v465 = (v453 ^ 0xF21DE080) >> 5;
  LODWORD(STACK[0x654]) = (((v453 ^ 0xF21DE080) << 10) ^ 0x82A8F400)
                        - (STACK[0x5C0] & (2 * (((v453 ^ 0xF21DE080) << 10) ^ 0x82A8F400)))
                        - 1839759852;
  LODWORD(STACK[0x660]) = (((v453 ^ 0xF21DE080) << 16) ^ 0xAA3D0000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 16) ^ 0xAA3D0000)) & 0xDF560000)
                        + 1873511339;
  LODWORD(STACK[0x670]) = (((v453 ^ 0xF21DE080) << 20) ^ 0xA3D00000)
                        - ((2 * (((v453 ^ 0xF21DE080) << 20) ^ 0xA3D00000)) & 0xEDA00000)
                        - 153860967;
  v466 = v465 ^ ((v453 ^ 0xF21DE080) >> 4);
  LODWORD(STACK[0x568]) = v465 ^ v459;
  v467 = ((v453 ^ 0x3C3D4ABD) >> LODWORD(STACK[0x5B0])) ^ (v457 >> 7) ^ (v457 >> 1);
  LODWORD(STACK[0x644]) = ((v453 << 26) ^ 0xF4000000) - ((2 * ((v453 << 26) ^ 0xF4000000)) & 0xB0000000) + 1507453497;
  LODWORD(STACK[0x680]) = ((v453 << 28) ^ 0xD0000000) - (((v453 << 28) ^ 0xD0000000) >> 29 << 30) - 473236838;
  v468 = (v453 ^ 0x3C3D4ABD) >> LODWORD(STACK[0x58C]);
  LODWORD(STACK[0x588]) ^= (LODWORD(STACK[0x594]) | (v453 << 30)) ^ (32 * (v453 ^ 0xF21DE080)) ^ (16
                                                                                                * (v453 ^ 0xF21DE080)) ^ ((v453 ^ 0xF21DE080) << 17);
  v469 = v468 - ((2 * v468) & 0xA3344F2) + 85566073;
  LODWORD(STACK[0x5C0]) = v426 - ((2 * v426) & 0xE8000000);
  v470 = LODWORD(STACK[0x5BC]) ^ (v451 >> 21);
  LODWORD(STACK[0x584]) = v453;
  v471 = (v451 >> 18) ^ 0xE89186E8;
  LODWORD(STACK[0x658]) = ((v453 << 25) ^ 0x7A000000) - ((2 * ((v453 << 25) ^ 0x7A000000)) & 0xB4000000) - 633948450;
  v472 = ((v462 << 27) ^ 0xE8000000) - ((2 * ((v462 << 27) ^ 0xE8000000)) & 0xA0000000) + 1361800352;
  LODWORD(STACK[0x594]) = v472;
  v473 = LODWORD(STACK[0x5C8]) ^ (v451 >> 19);
  v474 = (v451 >> 13) ^ 0xF53B0541;
  LODWORD(STACK[0x560]) = v474;
  LODWORD(STACK[0x5BC]) = LODWORD(STACK[0x59C]) ^ v472;
  v475 = ((v457 << 7) ^ 0x10551E80) - ((2 * ((v457 << 7) ^ 0x10551E80)) & 0x940F1400) + 1242008144;
  LODWORD(STACK[0x5C8]) = v475;
  v476 = (v451 >> 14) ^ 0xE18AC0A9;
  LODWORD(STACK[0x5B0]) = (((v460 - ((2 * v460) & 0x940F1400) + 1242008144) ^ v475)
                         - ((2 * ((v460 - ((2 * v460) & 0x940F1400) + 1242008144) ^ v475)) & 0xDA32200C)
                         + 1830359046) ^ v463;
  v477 = (((v451 >> 15) ^ (v457 >> 2) ^ 0x3389EE59)
        - ((2 * ((v451 >> 15) ^ (v457 >> 2) ^ 0x3389EE59)) & 0xA3344F2)
        + 85566073) ^ v469;
  v478 = (v477 - ((2 * v477) & 0x85A4177E) + 1121061823) ^ v473;
  v479 = HIWORD(v451) ^ 0xA07EA89F;
  v480 = v470 ^ v455 ^ (((v451 >> 27) ^ (v451 >> 28) ^ 0x12)
                      - 2000104437
                      - 2 * (((v451 >> 27) ^ (v451 >> 28) ^ 0x12) & 0xF ^ ((v451 >> 27) ^ (v451 >> 28)) & 4)) ^ 0x7768F552 ^ (v478 + 2003367250 - ((2 * v478) & 0xEED1EAAC) + 4);
  v481 = v467 ^ ((v462 ^ 0x3C3D4ABD) >> (v462 & 6 ^ 2 | v462 & 6 ^ 4));
  LODWORD(STACK[0x58C]) = v481;
  v482 = (v480 - ((2 * v480) & 0xD1237CE4) - 393101710) ^ v471;
  v483 = (v482 - 511096572 + (LODWORD(STACK[0x5D4]) | ~(2 * v482)) + 1) ^ v476;
  v484 = (v483 - ((2 * v483) & 0xEA782C36) - 180611557) ^ v474;
  v485 = v461;
  v486 = (v484 - ((2 * v484) & 0xEDA093FA) + 1993361917) ^ v461;
  v487 = (v451 >> 25) ^ LODWORD(STACK[0x5B8]);
  v488 = (v486 - ((2 * v486) & 0x8D80C8D8) + 1187013740) ^ v458;
  v489 = (v451 >> 12) ^ 0x58287161;
  v490 = (v488 - ((2 * v488) & 0x139BD654) - 1982993622) ^ v459;
  v491 = v466 ^ (v490 - ((2 * v490) & 0x13BCB666) - 1981916365);
  v492 = v491 ^ LODWORD(STACK[0x5D8]);
  v493 = (v451 >> 22) ^ 0x9D0D255A ^ ((LODWORD(STACK[0x578]) ^ v487)
                                    - 1660082854
                                    - ((2 * (LODWORD(STACK[0x578]) ^ v487)) & 0x3A1A4DA6)
                                    + 377);
  v494 = (((v451 >> 22) ^ 0x668C17C3 ^ v481) - ((2 * ((v451 >> 22) ^ 0x668C17C3 ^ v481)) & 0x9600B314) - 889169526) ^ v487;
  LODWORD(STACK[0x5D8]) = (((v451 >> 25) ^ 0x6A) + ((v451 >> 25) & 0x64 ^ 0x9F) + 1) | (v451 >> 25) & 0x1B ^ 0x11;
  v495 = (v451 >> 11) ^ 0x2902132B;
  v496 = (v494 - ((2 * v494) & 0x1191A816) - 2000104437) ^ v470;
  v497 = v451 ^ ~LODWORD(STACK[0x688]);
  v498 = (v493 - ((2 * v493) & 0x1191A816) - 2000104437) ^ v470;
  v499 = (((v491 ^ 0x8FAF5E62) >> 27) ^ (v469 >> 30) | 0x43937A80) ^ ((v491 ^ 0x8FAF5E62) >> 21);
  LODWORD(v290) = (32 * v499) ^ (v499 << 11) ^ LODWORD(STACK[0x588]) ^ (4 * (v491 ^ 0x8FAF5E62)) ^ (32
                                                                                                  * (v491 ^ 0x8FAF5E62)) ^ ((v491 ^ 0x8FAF5E62) << 11) ^ (4 * v499) ^ 0x96D883C6;
  LODWORD(v290) = (v290
                 - 2
                 * (v290 & LODWORD(STACK[0x598]) ^ ((LOBYTE(STACK[0x588]) ^ (4 * (v491 ^ 0x62)) ^ (32 * (v491 ^ 0x62))) ^ (4 * v499)) & 0x10)
                 + 1830359046) ^ LODWORD(STACK[0x564]);
  v500 = (((v496 - ((2 * v496) & 0x85A4177E) + 1121061823) ^ v473)
        - ((2 * ((v496 - ((2 * v496) & 0x85A4177E) + 1121061823) ^ v473)) & 0xD1237CE4)
        - 393101710) ^ v471;
  v501 = (v498 - ((2 * v498) & 0x85A4177E) + 1121061823) ^ v473;
  v502 = STACK[0x640];
  LODWORD(v290) = (v290 - ((2 * v290) & 0x34A80DD8) - 1705769236) ^ LODWORD(STACK[0x640]);
  v503 = STACK[0x574];
  LODWORD(v290) = (v290 - ((2 * v290) & 0xF3A051D8) + 2043685100) ^ LODWORD(STACK[0x574]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0x2B439E8E) - 1784557753) ^ LODWORD(STACK[0x668]);
  v504 = STACK[0x638];
  LODWORD(v290) = (v290 - ((2 * v290) & 0x2BFCB66E) - 1778492617) ^ LODWORD(STACK[0x638]);
  LODWORD(v290) = (v290 - ((2 * v290) & 0x7B3430) + 4037144) ^ LODWORD(STACK[0x67C]);
  v505 = STACK[0x648];
  LODWORD(v290) = (v290 - ((2 * v290) & 0xC4D4B05E) - 496347089) ^ LODWORD(STACK[0x648]);
  v506 = STACK[0x56C];
  LODWORD(v290) = (v290 - ((2 * v290) & 0xF1A0AA20) - 120564464) ^ LODWORD(STACK[0x56C]);
  v507 = STACK[0x570];
  LODWORD(v290) = (v290 - ((2 * v290) & 0x8E3E30FE) + 1193220223) ^ LODWORD(STACK[0x570]);
  v508 = (v500 - ((2 * v500) & 0x40FC95E8) - 1602336012) ^ v479;
  v509 = (v501 - ((2 * v501) & 0x40FC95E8) - 1602336012) ^ v479;
  v510 = (v508 - ((2 * v508) & 0xC3129208) - 511096572) ^ v476;
  v511 = (v510 - ((2 * v510) & 0xEA782C36) - 180611557) ^ LODWORD(STACK[0x560]);
  v512 = (v509 - ((2 * v509) & 0xC3129208) - 511096572) ^ v476;
  v513 = (v511 - ((2 * v511) & 0xB04CAFA8) + 1478907860) ^ v489;
  v514 = (v512 - ((2 * v512) & 0xB04CAFA8) + 1478907860) ^ v489;
  v515 = (v457 >> 4) ^ v495 ^ (v513 - ((2 * v513) & 0x523CBC82) + 689856065);
  v516 = (v514 - ((2 * v514) & 0x523CBC82) + 689856065) ^ v495;
  v517 = (v516 - ((2 * v516) & 0xEDA093FA) + 1993361917) ^ v485;
  v518 = (v517 - ((2 * v517) & 0x8D80C8D8) + 1187013740) ^ v458;
  v519 = LODWORD(STACK[0x568]) ^ (v518 - ((2 * v518) & 0x139BD654) - 1982993622);
  v520 = v519 ^ 0xF8F8E3AD;
  v521 = LODWORD(STACK[0x580]) ^ (v497 << 31) ^ (v457 << 12) ^ v464 ^ v515 ^ (32 * v515) ^ (4 * v515) ^ (v515 << 11);
  v522 = STACK[0x644];
  v523 = (v290 + 1507453497 + (LODWORD(STACK[0x590]) | ~(2 * v290)) + 1) ^ LODWORD(STACK[0x644]);
  v524 = (v523 - ((2 * v523) & 0xA256D940) + 1361800352) ^ LODWORD(STACK[0x594]);
  v525 = (v524 - ((2 * v524) & 0xC795F534) - 473236838) ^ LODWORD(STACK[0x680]);
  v526 = v492 ^ (v525 - ((2 * v525) & 0x7F9AB13A) + 1070422173);
  LODWORD(v290) = (v526 - ((2 * v526) & 0x67ECE970) - 1275693896) ^ v499;
  v527 = (LODWORD(STACK[0x5B0]) - ((2 * LODWORD(STACK[0x5B0])) & 0x24AEFC28) - 1839759852) ^ LODWORD(STACK[0x654]);
  v528 = LODWORD(STACK[0x57C]) ^ (4 * v519) ^ (32 * v519) ^ (v519 << 11);
  v519 >>= 21;
  v529 = v528 ^ (4 * v519);
  v530 = LODWORD(STACK[0x5BC]) ^ (32 * v519) ^ (v519 << 11);
  LODWORD(STACK[0x59C]) = v519;
  v531 = (v515 >> 21) ^ (LODWORD(STACK[0x58C]) >> 30) ^ ((v515 ^ 0xCE20AA3) >> LODWORD(STACK[0x5D8]));
  v532 = (v527 - ((2 * v527) & 0x34A80DD8) - 1705769236) ^ v502;
  v533 = (v532 - ((2 * v532) & 0xF3A051D8) + 2043685100) ^ v503;
  LODWORD(STACK[0x5D8]) = v531;
  v534 = (v533 - ((2 * v533) & 0xDF570756) + 1873511339) ^ LODWORD(STACK[0x660]);
  v535 = (v534 - ((2 * v534) & 0x2BFCB66E) - 1778492617) ^ v504;
  v536 = (v535 - ((2 * v535) & 0xEDA88932) - 153860967) ^ LODWORD(STACK[0x670]);
  v537 = (v536 - ((2 * v536) & 0xC4D4B05E) - 496347089) ^ v505;
  v538 = (v537 - ((2 * v537) & 0xF1A0AA20) - 120564464) ^ v506;
  v539 = (v538 - ((2 * v538) & 0x8E3E30FE) + 1193220223) ^ v507;
  v540 = (v539 - ((2 * v539) & 0xB46D6DBC) - 633948450) ^ LODWORD(STACK[0x658]);
  v541 = (v540 - ((2 * v540) & 0xB3B3D472) + 1507453497) ^ v522;
  v542 = v529 ^ (v541 - ((2 * v541) & 0xA256D940) + 1361800352);
  v543 = ((v530 ^ 0x204CA6A4 ^ v542) - 2 * ((v530 ^ 0x204CA6A4 ^ v542) & 0x11E0965B ^ v542 & 0xA) - 1847552431) ^ LODWORD(STACK[0x6B0]);
  v544 = (v543 - ((2 * v543) & 0x6486CA3C) + 843277598) ^ LODWORD(STACK[0x6A0]);
  v545 = (v544 - ((2 * v544) & 0xD6C5171C) - 345863282) ^ LODWORD(STACK[0x6E0]);
  v546 = (v545 - ((2 * v545) & 0x5FFCBB0E) + 805199239) ^ LODWORD(STACK[0x694]);
  v547 = (v546 - ((2 * v546) & 0x47C407FC) + 602014718) ^ LODWORD(STACK[0x698]);
  v548 = (v547 - ((2 * v547) & 0x7858888A) - 1137949627) ^ LODWORD(STACK[0x6E4]);
  v549 = (v548 - ((2 * v548) & 0x7520B9A2) - 1164944175) ^ LODWORD(STACK[0x650]);
  v550 = (v549 - ((2 * v549) & 0xDC2F3E8E) - 300441785) ^ LODWORD(STACK[0x6C8]);
  v551 = (v550 - ((2 * v550) & 0xB2335CD2) - 652628375) ^ LODWORD(STACK[0x6BC]);
  v552 = (v551 - ((2 * v551) & 0xB2A3258) - 2053826260) ^ LODWORD(STACK[0x64C]);
  v553 = v521 ^ (4 * v531) ^ (32 * v531) ^ ((unint64_t)(v531 ^ 0x66u) << STACK[0x5A0]);
  LODWORD(STACK[0x6B0]) = -1901150802;
  v554 = LODWORD(STACK[0x5D0]) ^ ((v552 ^ 0x8BD3A69C)
                                + 1780371887
                                - 2 * ((v552 ^ 0x8BD3A69C) & STACK[0x5CC] ^ v552 & 3)
                                + 45);
  v555 = v520 ^ (v554 - ((2 * v554) & 0xFD13CDF8) - 24516868);
  v556 = v555 - ((2 * v555) & 0xED9811BE);
  v557 = -1993083104 - v556;
  LODWORD(STACK[0x6C8]) = -1808172006;
  v558 = v556 + 1993083103;
  v559 = (v556 + 1993083103) ^ v519;
  LODWORD(STACK[0x6A0]) = v290 ^ (v559 << 19) ^ (v559 << 12);
  v560 = ((v556 + 1993083103) >> 30) - 1965063556;
  LODWORD(STACK[0x578]) = v560;
  v561 = (v556 + 1993083103) >> 16;
  LODWORD(STACK[0x6E4]) = v559 ^ 0x65ABF7EA;
  LODWORD(STACK[0x588]) = v561 ^ 0x7460E82C;
  LODWORD(STACK[0x5B4]) ^= (v556 + 1993083103) >> 22;
  v562 = ((v559 ^ 0x65ABF7EA) >> 29) - 655033320;
  LODWORD(STACK[0x580]) = v562;
  LODWORD(v290) = (v556 + 1993083103) >> 18;
  LODWORD(STACK[0x6BC]) = ((v559 << 7) ^ 0xEE817B80) - (STACK[0x5FC] & (2 * ((v559 << 7) ^ 0xEE817B80))) + 1537918095;
  v563 = ((4 * v559) ^ 0xE7740BDC) - 1319870689 - (STACK[0x5DC] & (2 * ((4 * v559) ^ 0xE7740BDC)));
  LODWORD(STACK[0x590]) = v563;
  v564 = ((v559 << 13) ^ 0xA05EE000) - (STACK[0x608] & (2 * ((v559 << 13) ^ 0xA05EE000))) + 1078633710;
  v565 = ((v559 << 10) ^ 0x740BDC00) - (STACK[0x604] & (2 * ((v559 << 10) ^ 0x740BDC00))) + 1036966240;
  v566 = ((v559 << 14) ^ 0x40BDC000) - ((2 * ((v559 << 14) ^ 0x40BDC000)) & 0xA6398000) - 753080647;
  LODWORD(STACK[0x694]) = v566;
  v567 = ((8 * v559) ^ 0xCEE817B8) - ((2 * ((8 * v559) ^ 0xCEE817B8)) & 0x94397C10) + 1243397645;
  LODWORD(STACK[0x58C]) = v567;
  v568 = ((v559 << 20) ^ 0x2F700000) - ((2 * ((v559 << 20) ^ 0x2F700000)) & 0x1C00000) + 15538644;
  v569 = ((v559 << 22) ^ 0xBDC00000) - ((2 * ((v559 << 22) ^ 0xBDC00000)) & 0xD6800000) + 1800060732;
  LODWORD(STACK[0x594]) = v569;
  v570 = (v559 >> 7) ^ 0xA87F22FE;
  LODWORD(STACK[0x5B0]) = v559 << 25;
  v571 = ((v559 << 25) ^ 0xEE000000) - ((2 * ((v559 << 25) ^ 0xEE000000)) & 0x9C000000) - 814203582;
  LODWORD(STACK[0x688]) = v571;
  v572 = (v559 >> 10) ^ (v559 >> 8);
  v573 = ((v559 << 28) ^ 0x70000000) - ((2 * ((v559 << 28) ^ 0x70000000)) & 0x40000000) + 718394947;
  LODWORD(STACK[0x64C]) = v573;
  v574 = ((v559 << 24) ^ 0xF7000000) - ((2 * ((v559 << 24) ^ 0xF7000000)) & 0xA000000) - 2056069826;
  LODWORD(STACK[0x598]) = v574;
  v575 = v572 ^ (v558 >> 26) ^ (v557 >> 31) ^ v290 ^ (v559 >> 3);
  LODWORD(STACK[0x608]) = v290 ^ (v558 >> 20);
  LODWORD(STACK[0x5A0]) = v572 ^ HIBYTE(v558) ^ (v558 >> 17) ^ (v559 >> 9) ^ (v559 >> 5);
  v576 = ((v559 << 26) ^ 0xDC000000) - ((2 * ((v559 << 26) ^ 0xDC000000)) & 0x38000000) + 528994618;
  LODWORD(STACK[0x5BC]) = v553 ^ v576;
  LODWORD(STACK[0x650]) = v576;
  LODWORD(STACK[0x5B8]) = v570 ^ (v559 >> 6);
  v577 = (v558 >> 19) ^ 0x5A679737;
  LODWORD(STACK[0x574]) = v577;
  LODWORD(STACK[0x5DC]) = v577 ^ v561;
  LODWORD(STACK[0x6E0]) = ((v559 << 11) ^ 0xE817B800) - ((2 * ((v559 << 11) ^ 0xE817B800)) & 0x17911000) + 197691603;
  v578 = LODWORD(STACK[0x61C]) ^ (v558 >> 25);
  v579 = (LODWORD(STACK[0x610]) ^ (v558 >> 15)) - ((2 * (LODWORD(STACK[0x610]) ^ (v558 >> 15))) & 0x256CA) - 852546715;
  LODWORD(STACK[0x61C]) = v558 >> 12;
  LODWORD(v290) = (v558 >> 12) ^ 0xCD24B6B5;
  LODWORD(STACK[0x57C]) = v290;
  v580 = v558 ^ ~LODWORD(STACK[0x59C]);
  v581 = LODWORD(STACK[0x6B0]) ^ (v558 >> 21);
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x6A0]) ^ (v580 << 31);
  v582 = ((v575 ^ v290 ^ v579 ^ 0x17AC2445) - ((2 * (v575 ^ v290 ^ v579 ^ 0x17AC2445)) & 0x15BF04FC) - 1965063554) ^ v560;
  v583 = (v582 - ((2 * v582) & 0xB1E9F83C) - 655033314) ^ v562;
  v584 = STACK[0x5B4];
  v585 = (v583 - ((2 * v583) & 0x9D6061A0) - 827313968) ^ LODWORD(STACK[0x5B4]);
  v586 = (v585 - ((2 * v585) & 0xAE5B891A) - 684866419) ^ v578;
  v587 = (v586 - ((2 * v586) & 0xB4CF0018) + 1516732428) ^ (v558 >> 19) ^ 0x5A679737;
  v588 = (v587 - ((2 * v587) & 0xE8C0A3E2) + 1952469489) ^ v561 ^ 0x7460E82C;
  v589 = (v588 - ((2 * v588) & 0x521931F6) - 1458792197) ^ v570;
  v590 = (v559 >> 6) ^ (v559 >> 4) ^ 0x1AB52195 ^ (v589 - ((2 * v589) & 0x30A4AB3C) + 408049054);
  v591 = (2 * v559) ^ (v559 << 6) ^ (v559 << 17) ^ (v580 << 29) ^ (4 * v590) ^ (32 * v590) ^ (v590 << 11);
  LODWORD(STACK[0x6A0]) = -816098109;
  v592 = (v590 >> 21) ^ (v590 >> 27);
  v593 = v591 ^ (4 * v592) ^ (32 * v592) ^ (v592 << 11) ^ 0xB25A67A6;
  v594 = (v593 - ((2 * v593) & 0xB8EDEA3A) - 596183779) ^ LODWORD(STACK[0x6E4]);
  v595 = (v594 - ((2 * v594) & 0x62A8BE3E) - 1319870689) ^ v563;
  v596 = (v595 - (STACK[0x6C8] & (2 * v595)) + 1243397645) ^ v567;
  v597 = STACK[0x6BC];
  v598 = (v596 - ((2 * v596) & 0xB755891E) + 1537918095) ^ LODWORD(STACK[0x6BC]);
  v599 = v565;
  LODWORD(STACK[0x5FC]) = v565;
  v600 = (v598 - ((2 * v598) & 0x7B9DB2C0) + 1036966240) ^ v565;
  LODWORD(STACK[0x5CC]) = v564;
  v601 = (v600 - ((2 * v600) & 0x809549DC) + 1078633710) ^ v564;
  v602 = (v601 - ((2 * v601) & 0xA639CD72) - 753080647) ^ v566;
  v603 = ((v559 << 16) ^ 0x2F70000) - ((2 * ((v559 << 16) ^ 0x2F70000)) & 0x89680000) - 994780302;
  LODWORD(STACK[0x604]) = v603;
  v604 = (v602 - ((2 * v602) & 0x8969B6E4) - 994780302) ^ v603;
  LODWORD(STACK[0x5D4]) = v568;
  v605 = (v604 - ((2 * v604) & 0x1DA33A8) + 15538644) ^ v568;
  v606 = (v605 - ((2 * v605) & 0xD6957E78) + 1800060732) ^ v569;
  v607 = (v606 - ((2 * v606) & 0xAE5BA7C) - 2056069826) ^ v574;
  v608 = (v607 - ((2 * v607) & 0x9EF07A84) - 814203582) ^ v571;
  v609 = (v608 - ((2 * v608) & 0x3F0FA274) + 528994618) ^ v576;
  v610 = (v609 - ((2 * v609) & 0x55A3AC86) + 718394947) ^ v573;
  v611 = (v610 - ((2 * v610) & 0x9748205A) + 1269043245) ^ v590;
  v612 = v558 >> 14;
  LODWORD(STACK[0x6B0]) = v592 ^ ((v611 ^ 0x4039C002) - 2 * ((v611 ^ 0x4039C002) & 0x7D38045D ^ v611 & 5) + 2100823128);
  v613 = ((v559 << 21) ^ 0x5EE00000) - ((2 * ((v559 << 21) ^ 0x5EE00000)) & 0xEE000000) - 149275855;
  LODWORD(STACK[0x5D0]) = v613;
  v614 = ((LODWORD(STACK[0x608]) ^ 0x25EA) - ((2 * (LODWORD(STACK[0x608]) ^ 0x25EA)) & 0x91A) - 684866419) ^ v578;
  LODWORD(v290) = v584;
  v615 = (v614 - ((2 * v614) & 0x1D6061A0) - 827313968) ^ v584;
  v616 = (v615 - ((2 * v615) & 0x1D5D70C0) - 1901152160) ^ v581;
  v617 = LODWORD(STACK[0x5DC]) ^ (v616 - ((2 * v616) & 0x34CF0018) + 1516732428);
  v618 = (v558 >> 14) ^ 0x2E774;
  STACK[0x490] = 0;
  STACK[0x440] = 0;
  v619 = ((v559 << 18) ^ 0xBDC0000) - ((2 * ((v559 << 18) ^ 0xBDC0000)) & 0xF0D00000) + 2020135154;
  LODWORD(STACK[0x5DC]) = v619;
  STACK[0x448] = 0;
  v620 = (v618 + ((v558 >> 14) ^ 0xFFFDA156 ^ v617) + 1) ^ ((v617 ^ 0xFFFF4622) + 1);
  v621 = (v617 ^ 0x31C5DEB8 ^ (v620 - ((2 * v620) & 0x638ACECA) + 835020645)) + v618;
  v622 = (v558 >> 11) ^ 0x9ED5D855;
  v623 = (v559 >> 1) ^ (v558 >> 13) ^ v621;
  v624 = ((v623 ^ LODWORD(STACK[0x61C]) ^ 0x5CE0D243)
        - 2 * ((v623 ^ LODWORD(STACK[0x61C]) ^ 0x5CE0D243) & 0x1EC2E3FD ^ (v623 ^ LODWORD(STACK[0x61C])) & 8)
        - 1631394827) ^ v622;
  v625 = (v624 - ((2 * v624) & 0x521931F6) - 1458792197) ^ v570;
  v626 = (v559 >> 6) ^ (v559 >> 4) ^ 0x1AB52195 ^ (v625 + 408049054 + (LODWORD(STACK[0x6A0]) | ~(2 * v625)) + 1);
  LODWORD(STACK[0x608]) = v626;
  LODWORD(STACK[0x61C]) = ((4 * v626) ^ 0x2E7740BC) - ((2 * ((4 * v626) ^ 0x2E7740BC)) & 0x41AD50C0) - 1596544927;
  LODWORD(STACK[0x610]) = (v626 >> 27) ^ (v623 >> 30);
  v627 = ((LODWORD(STACK[0x5A0]) ^ 0x505F083) - ((2 * (LODWORD(STACK[0x5A0]) ^ 0x505F083)) & 0x15BF04FC) - 1965063554) ^ LODWORD(STACK[0x578]);
  v628 = (v627 - ((2 * v627) & 0x31E9F83C) - 655033314) ^ LODWORD(STACK[0x580]);
  v629 = (v628 - ((2 * v628) & 0xAE5B891A) - 684866419) ^ v578;
  v630 = (v629 - ((2 * v629) & 0x9D6061A0) - 827313968) ^ v290;
  v631 = (v630 - ((2 * v630) & 0x1D5D70C0) - 1901152160) ^ v581;
  v632 = (v631 - ((2 * v631) & 0xB4CF0018) + 1516732428) ^ LODWORD(STACK[0x574]);
  v633 = (v632 - ((2 * v632) & 0xE8C0A3E2) + 1952469489) ^ LODWORD(STACK[0x588]);
  v634 = v612 ^ 0xAD1BE1F9 ^ (v633 - ((2 * v633) & 0x5A320D1A) - 1390868851);
  v635 = (v634 - ((2 * v634) & 0x9A5E56CA) - 852546715) ^ LODWORD(STACK[0x57C]);
  v636 = (v635 - ((2 * v635) & 0x3D85C7EA) - 1631394827) ^ v622;
  v637 = LODWORD(STACK[0x5B8]) ^ (v636 - ((2 * v636) & 0x521931F6) - 1458792197);
  v638 = (v559 << 8) ^ (v559 << 15) ^ (v559 << 23) ^ (v559 << 27) ^ LODWORD(STACK[0x5B0]) ^ 0x71F97700;
  v639 = (v638 - ((2 * v638) & 0x94397C3A) + 1243397645) ^ LODWORD(STACK[0x58C]);
  v640 = (v639 - ((2 * v639) & 0x62A8BE3E) - 1319870689) ^ LODWORD(STACK[0x590]);
  v641 = (v640 + 1537918095 + (~(2 * v640) | 0x48AA76E1) + 1) ^ v597;
  v642 = (v641 - ((2 * v641) & 0x7B9DB2C0) + 1036966240) ^ v599;
  v643 = (v642 - ((2 * v642) & 0x179111A6) + 197691603) ^ LODWORD(STACK[0x6E0]);
  v644 = (v643 - ((2 * v643) & 0x809549DC) + 1078633710) ^ v564;
  v645 = (v644 - ((2 * v644) & 0x8969B6E4) - 994780302) ^ v603;
  v646 = (v645 - ((2 * v645) & 0xF0D1A1E4) + 2020135154) ^ v619;
  v647 = (v646 - ((2 * v646) & 0x1DA33A8) + 15538644) ^ v568;
  v648 = (v647 - ((2 * v647) & 0xEE347662) - 149275855) ^ v613;
  v649 = (v648 - ((2 * v648) & 0xD6957E78) + 1800060732) ^ LODWORD(STACK[0x594]);
  v650 = (v649 - ((2 * v649) & 0xAE5BA7C) - 2056069826) ^ LODWORD(STACK[0x598]);
  v651 = STACK[0x600];
  v652 = ((LODWORD(STACK[0x600]) << 7) ^ 0x12573200) - ((2 * ((LODWORD(STACK[0x600]) << 7) ^ 0x12573200)) & 0x4FA5F000);
  v653 = ((2 * LODWORD(STACK[0x600])) ^ 0x50495CC8) - ((2 * ((2 * LODWORD(STACK[0x600])) ^ 0x50495CC8)) & 0x3B6DF440);
  v654 = ((LODWORD(STACK[0x600]) << 10) ^ 0x92B99000)
       - ((2 * ((LODWORD(STACK[0x600]) << 10) ^ 0x92B99000)) & 0x76BEC000);
  v655 = LODWORD(STACK[0x5BC]) ^ (4 * v637) ^ (32 * v637) ^ (v637 << 11);
  LODWORD(STACK[0x6A0]) = v637 >> 21;
  v656 = v655 ^ (4 * (v637 >> 21)) ^ (32 * (v637 >> 21)) ^ (v637 >> 21 << 11) ^ (v650
                                                                               - ((2 * v650) & 0x3F0FA274)
                                                                               + 528994618);
  v657 = LODWORD(STACK[0x584]) ^ 0x708C4A56 ^ ((v656 ^ 0xD61F580F)
                                             - 2 * ((v656 ^ 0xD61F580F) & 0x4CB100FB ^ v656 & 0x10)
                                             + 1286668523);
  v658 = (v657 - ((2 * v657) & 0x940F14A0) + 1242008144) ^ LODWORD(STACK[0x5C8]);
  v659 = (v658 - ((2 * v658) & 0x24AEFC28) - 1839759852) ^ LODWORD(STACK[0x654]);
  v660 = (v659 - ((2 * v659) & 0x34A80DD8) - 1705769236) ^ LODWORD(STACK[0x640]);
  v661 = (v660 - ((2 * v660) & 0x2B439E8E) - 1784557753) ^ LODWORD(STACK[0x668]);
  v662 = (v661 - ((2 * v661) & 0x2BFCB66E) - 1778492617) ^ LODWORD(STACK[0x638]);
  v663 = (v662 - ((2 * v662) & 0xDF570756) + 1873511339) ^ LODWORD(STACK[0x660]);
  v664 = (v663 - ((2 * v663) & 0x7B3430) + 4037144) ^ LODWORD(STACK[0x67C]);
  v665 = (v664 - ((2 * v664) & 0xEDA88932) - 153860967) ^ LODWORD(STACK[0x670]);
  v666 = (v665 - ((2 * v665) & 0xC4D4B05E) - 496347089) ^ LODWORD(STACK[0x648]);
  v667 = (v666 - ((2 * v666) & 0xB46D6DBC) - 633948450) ^ LODWORD(STACK[0x658]);
  v668 = (v667 - ((2 * v667) & 0xB3B3D472) + 1507453497) ^ LODWORD(STACK[0x644]);
  v669 = (v668 - ((2 * v668) & 0xC795F534) - 473236838) ^ LODWORD(STACK[0x680]);
  LODWORD(STACK[0x5D8]) ^= v637 ^ (v669 - ((2 * v669) & 0x50BEA228) - 1470148332);
  v670 = (LODWORD(STACK[0x634]) ^ 0x2B) - ((2 * (LODWORD(STACK[0x634]) ^ 0x2B)) & 0xFFFFFFC7);
  v671 = STACK[0x620];
  v672 = (LODWORD(STACK[0x620]) >> 25) ^ 0x5FDBB7B9 ^ (LODWORD(STACK[0x620]) >> 22);
  LODWORD(STACK[0x67C]) = v672;
  v673 = (v670 + 1608234275) ^ v672;
  HIDWORD(v386) = v673 ^ 0x2B709E5;
  LODWORD(v386) = v673 ^ 0x9FFFFFFF;
  v674 = v386 >> 27;
  HIDWORD(v386) = v674 ^ 0xFFFFFFF3;
  LODWORD(v386) = v674 ^ 0x56E13CA0;
  v675 = ((v651 << 25) ^ 0xC8000000) + (((v651 << 25) ^ 0xC8000000) >> 30 << 31);
  v676 = STACK[0x630];
  v677 = ((v651 << 28) ^ 0x40000000) - ((STACK[0x630] & 1) << 29);
  v678 = (LODWORD(STACK[0x630]) >> 3) ^ (v651 >> 8) ^ (((v671 >> 15) ^ (v651 >> 10) ^ 0x2B6847)
                                                     - 704750829
                                                     + (~(2 * ((v671 >> 15) ^ (v651 >> 10) ^ 0x2B6847)) | 0xFF8349DB)) ^ 0x68C3851 ^ ((v386 >> 5) - 704750829 - ((2 * (v386 >> 5)) & 0xABFCB624) - 1);
  v679 = (v671 >> 19) ^ 0x94F506;
  v680 = (v678 - ((2 * v678) & 0x129C620) + 9757456) ^ v679;
  v681 = (v671 >> 18) ^ 0x57B33593;
  v682 = (v680 - ((2 * v680) & 0xAF66337C) + 1471355326) ^ v681;
  v683 = HIWORD(v671) ^ 0x4B67D57B;
  LODWORD(STACK[0x670]) = v683;
  v684 = (v682 - ((2 * v682) & 0x96CECB9A) + 1265067469) ^ v683;
  LODWORD(STACK[0x6C8]) = v671 >> 12;
  v685 = (v671 >> 12) ^ 0x1909035E ^ (v684 - ((2 * v684) & 0x3204107C) + 419563582);
  v686 = (v676 >> 7) ^ 0xE20361C;
  LODWORD(STACK[0x668]) = v686;
  v687 = (v685 - ((2 * v685) & 0x1C84EFA6) + 239237075) ^ v686;
  v688 = (v676 >> 6) ^ (v651 >> 4) ^ 0x960F8ACB;
  v689 = v688 ^ (v687 - ((2 * v687) & 0x2D9612A8) - 1765078700);
  LODWORD(v290) = v651;
  v690 = (v689 >> 27) ^ ((((2 * (v386 >> 5)) & 0xABFCB624) - ((v386 >> 5) - 704750829)) >> 30) ^ (v689 >> 21);
  v691 = v676 ^ (4 * v651) ^ (8 * v651) ^ (v651 << 6) ^ (v651 << 17) ^ (v651 << 22) ^ (v651 << 24) ^ (v651 << 29) ^ (v653 - 1648952800) ^ (4 * v689) ^ (32 * v689) ^ (v689 << 11) ^ (4 * v690) ^ (32 * v690) ^ (v690 << 11) ^ 0xDD7AAC4;
  v692 = v652 + 668137570;
  v693 = (v691 - ((2 * v691) & 0x4FA5F0C4) + 668137570) ^ (v652 + 668137570);
  v694 = (v693 - ((2 * v693) & 0x76BEC51E) + 996106895) ^ (v654 + 996106895);
  v695 = ((v651 << 13) ^ 0x95CC8000) - ((2 * ((v651 << 13) ^ 0x95CC8000)) & 0x4BD94000) - 1511216340;
  v696 = (v694 - ((2 * v694) & 0x4BD95658) - 1511216340) ^ v695;
  v697 = v696 - ((2 * v696) & 0x90513CA0);
  v698 = ((v651 << 14) ^ 0x2B990000) - ((2 * ((v651 << 14) ^ 0x2B990000)) & 0x90510000) + 1210621520;
  v699 = ((v651 << 16) ^ 0xAE640000) - ((2 * ((v651 << 16) ^ 0xAE640000)) & 0x184A0000) + 203784824;
  v700 = (((v697 + 1210621520) ^ v698) - ((2 * ((v697 + 1210621520) ^ v698)) & 0x184B04F0) + 203784824) ^ v699;
  v701 = ((v651 << 20) ^ 0xE6400000) - ((2 * ((v651 << 20) ^ 0xE6400000)) & 0x29600000) - 1799529117;
  v702 = (v700 - ((2 * v700) & 0x297ABAC6) - 1799529117) ^ v701;
  v703 = (v702 - ((2 * v702) & 0x8181E382) - 1061097023) ^ (v675 - 1061097023);
  v704 = v703 - ((2 * v703) & 0xEFE01B1C);
  v705 = LODWORD(STACK[0x5C0]) - 135262834;
  v706 = ((v704 - 135262834) ^ v705) - ((2 * ((v704 - 135262834) ^ v705)) & 0x3BE468FC);
  LODWORD(STACK[0x680]) = v690 ^ v689 ^ (((v706 + 502412414) ^ (v677 + 502412414))
                                       - ((2 * ((v706 + 502412414) ^ (v677 + 502412414))) & 0xA8C61146)
                                       + 1415776419);
  v707 = ((((_DWORD)v290 << 11) ^ ((_DWORD)v290 << 12) ^ 0x6F956000)
        - ((2 * (((_DWORD)v290 << 11) ^ ((_DWORD)v290 << 12) ^ 0x6F956000)) & 0x4FA5F000)
        + 668137570) ^ v692;
  v708 = v676 ^ 0xAC961DD8 ^ (v707 - ((2 * v707) & 0x3B6DF440) - 1648952800);
  v709 = v695 ^ (v654 + 996106895) ^ (v708 - ((2 * v708) & 0x76BEC51E) + 996106895);
  v710 = ((v698 ^ 0x123BCA83 ^ v709) + (v698 ^ 0x48289E51)) ^ ((v709 ^ 0x5A1354D3) + 1);
  v711 = (v709 ^ 0xF5FF588D ^ (v710 - ((2 * v710) & 0xA027E742) + 1343484833)) + (v698 ^ 0x48289E50);
  v712 = (((v671 >> 21) ^ (v671 >> 20) ^ 0xE8E) - ((2 * ((v671 >> 21) ^ (v671 >> 20) ^ 0xE8E)) & 0xA46) + 1608234275) ^ LODWORD(STACK[0x67C]);
  v713 = (v712 - ((2 * v712) & 0x129C620) + 9757456) ^ v679;
  v714 = (v713 - ((2 * v713) & 0x2F66337C) + 1471355326) ^ v681;
  v715 = ((v676 << 31) | 0x6300000) ^ ((_DWORD)v290 << 21) ^ ((_DWORD)v290 << 19) ^ ((_DWORD)v290 << 18) ^ v711;
  v716 = (v715 - 2 * (v715 & 0xC258279 ^ v711 & 1) + 203784824) ^ v699;
  v717 = (v716 - ((2 * v716) & 0x297ABAC6) - 1799529117) ^ v701;
  v718 = (v717 - ((2 * v717) & 0x8181E382) - 1061097023) ^ (v675 - 1061097023);
  v719 = (v718 - ((2 * v718) & 0xEFE01B1C) - 135262834) ^ v705;
  v720 = v719 - ((2 * v719) & 0x3BE468FC) + 502412414;
  v721 = (v671 >> 14) ^ (v671 >> 13) ^ (v671 >> 11) ^ (v676 >> 1) ^ LODWORD(STACK[0x670]) ^ (v714
                                                                                           - ((2 * v714) & 0x16CECB9A)
                                                                                           + 1265067469);
  v722 = ((LODWORD(STACK[0x6C8]) ^ 0x188A2934 ^ v721)
        - ((2 * (LODWORD(STACK[0x6C8]) ^ 0x188A2934 ^ v721)) & 0x1C84EFA6)
        + 239237075) ^ LODWORD(STACK[0x668]);
  v723 = v688 ^ (v722 - ((2 * v722) & 0x2D9612A8) - 1765078700);
  v724 = STACK[0x5D8];
  v725 = LODWORD(STACK[0x5D8]) ^ LODWORD(STACK[0x6A0]);
  v726 = v725 ^ 0x619981EB;
  v727 = ((v721 >> 30) | 0x1EF4E91C) ^ (v723 >> 21) ^ (v723 >> 27);
  v728 = LODWORD(STACK[0x62C]) ^ (v677 + 502412414) ^ (4 * v723) ^ (32 * v723) ^ (v723 << 11) ^ (4 * v727) ^ (32 * v727) ^ (v727 << 11) ^ 0x6A184440 ^ v720;
  v729 = LODWORD(STACK[0x624]) ^ 0xA2C11467 ^ (v728 - ((2 * v728) & 0x45822890) - 1564404664);
  v730 = (v729 - 1799202276 + (~(2 * v729) | 0xD67B4BC9)) ^ LODWORD(STACK[0x628]);
  v731 = v727 ^ v723 ^ ((v730 ^ 0xF6040CE0) - 2 * ((v730 ^ 0xF6040CE0) & 0x45D92D77 ^ v730 & 1) - 975622794);
  v732 = (((v725 ^ 0x619981EB) << 26) ^ 0x14000000) - ((2 * (((v725 ^ 0x619981EB) << 26) ^ 0x14000000)) & 0x70000000);
  v733 = (((v725 ^ 0x619981EB) << 23) ^ 0x42800000) - ((2 * (((v725 ^ 0x619981EB) << 23) ^ 0x42800000)) & 0xC3FFFFFF);
  v734 = (v725 ^ 0x619981EB) << 28;
  LODWORD(STACK[0x67C]) = v734;
  v735 = (((v725 ^ 0x619981EB) << 27) ^ 0x28000000) - (v734 & 0x20000000);
  v736 = (((v725 ^ 0x619981EB) << 13) ^ 0x3490A000)
       - ((2 * (((v725 ^ 0x619981EB) << 13) ^ 0x3490A000)) & 0x8F73C000)
       + 1203364346;
  LODWORD(STACK[0x670]) = v736;
  v737 = ((((v725 ^ 0x619981EB) << 10) ^ 0x86921400)
        - ((2 * (((v725 ^ 0x619981EB) << 10) ^ 0x86921400)) & 0x8F73C000)
        + 1203364346) ^ v736;
  v738 = (((v725 ^ 0x619981EB) << 11) ^ 0xD242800)
       - ((2 * (((v725 ^ 0x619981EB) << 11) ^ 0xD242800)) & 0x308B4000)
       + 407216581;
  LODWORD(STACK[0x660]) = v738;
  v739 = (((v725 ^ 0x619981EB) << 18) ^ 0x92140000)
       - ((2 * (((v725 ^ 0x619981EB) << 18) ^ 0x92140000)) & 0xE3100000)
       + 1904852050;
  LODWORD(STACK[0x668]) = v739;
  v740 = 8 * (v725 ^ 0x619981EB);
  LODWORD(STACK[0x654]) = v740;
  v741 = (v725 << 24) ^ (v725 << 20) ^ (v725 << 25) ^ ((v725 ^ 0x619981EB) << 7) ^ ((v725 ^ 0x619981EB) << 8) ^ ((v725 ^ 0x619981EB) << 15) ^ v740 ^ ((((v725 ^ 0x619981EB) << 16) ^ 0xA4850000) - ((2 * (((v725 ^ 0x619981EB) << 16) ^ 0xA4850000)) & 0xE3120000) + 1904852050) ^ v739 ^ v738 ^ (v737 - ((2 * v737) & 0x308B438A) + 407216581) ^ 0xDED963A8;
  v742 = v741 - ((2 * v741) & 0x826982CC);
  v743 = ((4 * (v725 ^ 0x619981EB)) ^ 0x2C869214)
       - ((2 * ((4 * (v725 ^ 0x619981EB)) ^ 0x2C869214)) & 0x826982C8)
       + 1093976422;
  LODWORD(STACK[0x644]) = v743;
  v744 = ((v742 + 1093976422) ^ v743) - ((2 * ((v742 + 1093976422) ^ v743)) & 0xE74BAF1A);
  v745 = (((v725 ^ 0x619981EB) << 21) ^ 0x90A00000)
       - ((2 * (((v725 ^ 0x619981EB) << 21) ^ 0x90A00000)) & 0xE7400000)
       + 1940248461;
  LODWORD(STACK[0x658]) = v745;
  v746 = ((v744 + 1940248461) ^ v745) - ((2 * ((v744 + 1940248461) ^ v745)) & 0x83F3DA68);
  v747 = (((v725 ^ 0x619981EB) << 22) ^ 0x21400000)
       - ((2 * (((v725 ^ 0x619981EB) << 22) ^ 0x21400000)) & 0x83FFFFFF)
       - 1040585420;
  LODWORD(STACK[0x648]) = v747;
  v748 = ((v746 - 1040585420) ^ v747) - ((2 * ((v746 - 1040585420) ^ v747)) & 0xC305E2D2);
  v749 = v724;
  v750 = (v724 >> 14) ^ (v724 >> 12) ^ HIBYTE(v724) ^ (v724 >> 25) ^ (v724 >> 22) ^ (v724 >> 17) ^ HIWORD(v724) ^ (v725 >> 7) ^ (v725 >> 8);
  v751 = v725;
  v752 = (v724 >> 30) ^ 0x90D1711F ^ (v724 >> 29);
  v753 = ((v750 ^ 0x1F734BC) - 2 * ((v750 ^ 0x1F734BC) & 0x10D1711B ^ v750 & 3) - 1865322216) ^ v752;
  v754 = v724 >> 21;
  v755 = (v724 >> 21) ^ 0x51B79EEA ^ (v753 - ((2 * v753) & 0x236F377E) + 1370987455);
  v756 = (v724 >> 19) ^ 0x40BEEA25;
  v757 = (v755 - ((2 * v755) & 0x817DFEE4) + 1086259058) ^ v756;
  v758 = (v724 >> 11) ^ 0x2E054B5C;
  v759 = (v757 - ((2 * v757) & 0x5C2038B0) + 772807768) ^ v758;
  LODWORD(v290) = v751;
  v760 = (v751 >> 10) ^ 0x4C66BB01;
  v761 = (v759 - ((2 * v759) & 0x98982A10) + 1280054536) ^ v760;
  v762 = v761 - ((2 * v761) & 0x6D33483A) - 1231444963;
  v763 = (v751 >> 9) ^ 0xB6CCF80F;
  LODWORD(STACK[0x638]) = v763;
  v764 = v290;
  LODWORD(STACK[0x6A0]) = v290;
  v765 = (v762 ^ v763) - ((2 * (v762 ^ v763)) & 0x7E03B146) + 1057085603;
  LODWORD(STACK[0x640]) = v733 - 511512215;
  v766 = ((v748 - 511512215) ^ (v733 - 511512215)) - ((2 * ((v748 - 511512215) ^ (v733 - 511512215))) & 0x774FE720);
  v767 = v732 - 1146621040;
  v768 = ((v766 - 1146621040) ^ (v732 - 1146621040)) - ((2 * ((v766 - 1146621040) ^ (v732 - 1146621040))) & 0x265B33EC);
  v769 = LODWORD(STACK[0x610]) ^ (LODWORD(STACK[0x608]) >> 21);
  LODWORD(v290) = v735 - 1825728010;
  v770 = LODWORD(STACK[0x698]) ^ LODWORD(STACK[0x608]) ^ (32 * LODWORD(STACK[0x608])) ^ (LODWORD(STACK[0x608]) << 11) ^ (4 * v769) ^ (32 * v769) ^ (v769 << 11) ^ LODWORD(STACK[0x61C]) ^ (v735 - 1825728010) ^ (v768 - 1825728010);
  v771 = (v726 >> 6) ^ (v726 >> 5);
  v772 = v771 ^ v765;
  v773 = v770 ^ (4 * (v771 ^ v765)) ^ (32 * (v771 ^ v765)) ^ ((v771 ^ v765) << 11);
  v774 = (v771 ^ v765) >> 21;
  v775 = v773 ^ (4 * v774) ^ (32 * v774) ^ (v774 << 11);
  v776 = ((v775 ^ 0x44DB2D8) - 2 * ((v775 ^ 0x44DB2D8) & 0xBC888D7 ^ v775 & 4) + 197691603) ^ LODWORD(STACK[0x6E0]);
  v777 = (v776 - ((2 * v776) & 0xB755891E) + 1537918095) ^ LODWORD(STACK[0x6BC]);
  v778 = (v777 - ((2 * v777) & 0xB8EDEA3A) - 596183779) ^ LODWORD(STACK[0x6E4]);
  v779 = (v778 - ((2 * v778) & 0x7B9DB2C0) + 1036966240) ^ LODWORD(STACK[0x5FC]);
  v780 = (v779 - ((2 * v779) & 0x809549DC) + 1078633710) ^ LODWORD(STACK[0x5CC]);
  v781 = (v780 - ((2 * v780) & 0xA639CD72) - 753080647) ^ LODWORD(STACK[0x694]);
  v782 = (v781 - ((2 * v781) & 0x8969B6E4) - 994780302) ^ LODWORD(STACK[0x604]);
  v783 = (v782 - ((2 * v782) & 0xF0D1A1E4) + 2020135154) ^ LODWORD(STACK[0x5DC]);
  v784 = (v783 - ((2 * v783) & 0x1DA33A8) + 15538644) ^ LODWORD(STACK[0x5D4]);
  v785 = (v784 - ((2 * v784) & 0xEE347662) - 149275855) ^ LODWORD(STACK[0x5D0]);
  v786 = (v785 - ((2 * v785) & 0x9EF07A84) - 814203582) ^ LODWORD(STACK[0x688]);
  v787 = (v786 - ((2 * v786) & 0x3F0FA274) + 528994618) ^ LODWORD(STACK[0x650]);
  v788 = (v787 - ((2 * v787) & 0x55A3AC86) + 718394947) ^ LODWORD(STACK[0x64C]);
  v789 = v769 ^ 0x59B0A63F ^ (v788 + 1504749119 - ((2 * v788) & 0xB3614CC6) + 36);
  v790 = v774 ^ v772 ^ (v789 - ((2 * v789) & 0xF31E0D68) + 2039416500);
  v791 = STACK[0x7DC];
  v792 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7D8]));
  v793 = (_BYTE *)STACK[0x5A8];
  v793[1632] = HIBYTE(v792) ^ 0xC3;
  v794 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x798]));
  v793[1370] = BYTE2(v794) ^ 0x93;
  v793[1537] = BYTE1(v792) ^ 0xD4;
  v793[1275] = v794 ^ 0xE5;
  v795 = STACK[0x71C];
  v796 = STACK[0x680];
  v797 = LODWORD(STACK[0x680]) ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x718]));
  LODWORD(STACK[0x6E4]) = v797;
  v798 = v796 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x79C]));
  v799 = STACK[0x708];
  *(_BYTE *)(STACK[0x708] + (v797 & 0x20A ^ 0xA | v797 & 0x20A ^ 0x200u)) = HIBYTE(v798) ^ 0x62;
  v800 = (v764 ^ 0xAAB8256E) >> (((STACK[0x6C8] & 0x1E ^ 0x1E) + (STACK[0x6C8] & 0x1E)) & 0x2E);
  v801 = v800 - 2103561837 - ((2 * v800) & 0x53C6326);
  v802 = (v749 >> 27) ^ (v749 >> 28) ^ (v749 >> 18) ^ (v749 >> 15) ^ (v726 >> 2) ^ (v726 >> 4) ^ (((v749 >> 13) ^ 0x555C1)
                                                                                                - 2
                                                                                                * (((v749 >> 13) ^ 0x555C1) & 0x6319B ^ (v749 >> 13) & 8)
                                                                                                - 2103561837) ^ v801;
  v803 = ((v754 ^ 0x3E7B09FD ^ v802) - ((2 * (v754 ^ 0x3E7B09FD ^ v802)) & 0x21A2E230) - 1865322216) ^ v752;
  v804 = (v803 - ((2 * v803) & 0x817DFEE4) + 1086259058) ^ v756;
  v805 = (v804 - ((2 * v804) & 0x5C2038B0) + 772807768) ^ v758;
  v806 = (v805 - ((2 * v805) & 0x98982A10) + 1280054536) ^ v760;
  v807 = (v806 - ((2 * v806) & 0x6D33483A) - 1231444963) ^ LODWORD(STACK[0x638]);
  v808 = v771 ^ 0xB455B260 ^ (v807 - ((2 * v807) & 0x64197E88) - 1307787452);
  v809 = LODWORD(STACK[0x6B0]) ^ (16 * v726) ^ (32 * v726) ^ (v726 << 14) ^ (v726 << 17) ^ (v726 << 19) ^ (v726 << 30) ^ LODWORD(STACK[0x654]) ^ LODWORD(STACK[0x67C]) ^ (4 * v808) ^ (32 * v808) ^ 0x8F3A70D5;
  v810 = (v809 - ((2 * v809) & 0x826982CC) + 1093976422) ^ LODWORD(STACK[0x644]);
  v811 = (v810 - ((2 * v810) & 0x308B438A) + 407216581) ^ LODWORD(STACK[0x660]);
  v812 = (v811 - ((2 * v811) & 0x8F73C3F4) + 1203364346) ^ LODWORD(STACK[0x670]);
  v813 = (v812 - ((2 * v812) & 0xE31378A4) + 1904852050) ^ LODWORD(STACK[0x668]);
  v814 = (v813 - ((2 * v813) & 0xE74BAF1A) + 1940248461) ^ LODWORD(STACK[0x658]);
  v815 = (v814 - ((2 * v814) & 0x83F3DA68) - 1040585420) ^ LODWORD(STACK[0x648]);
  v816 = (v815 - ((2 * v815) & 0xC305E2D2) - 511512215) ^ LODWORD(STACK[0x640]);
  v817 = (v816 - ((2 * v816) & 0x774FE720) - 1146621040) ^ v767;
  v818 = v808 ^ v290 ^ (v817 - ((2 * v817) & 0x265B33EC) - 1825728010);
  v819 = (v802 >> 27) ^ ((v801 + 0x80000000) >> 30) ^ (v808 >> 21);
  v820 = (4 * v819) ^ ((v819 ^ v808) << 11) ^ 0x64346078 ^ ((v819 ^ 0x1E) << ((v818 & 5 ^ 5) + (v818 & 5)));
  v793[2063] = BYTE2(v792) ^ 0x7B;
  v793[1801] = BYTE1(v794) ^ 0xB2;
  v793[1896] = HIBYTE(v794) ^ 0xED;
  v821 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x774]));
  LODWORD(STACK[0x6E0]) = v821;
  v793[1968] = v792 ^ 0xF2;
  v822 = v818 ^ v819 ^ (v820 - ((2 * v820) & 0xE8B9C90A) - 195238779) ^ (-1663319554 - 1673081951 * v791);
  v823 = v818 ^ v819 ^ (v820 - ((2 * v820) & 0xE8B9C90A) - 195238779);
  v793[1442] = HIBYTE(v822) ^ 0x77;
  v793[1347] = BYTE1(v822) ^ 0xE2;
  v793[1873] = BYTE2(v822) ^ 0xF0;
  LOBYTE(v819) = ((((2 * v821) ^ 0x4D) + (v821 ^ 0xD9)) | v821 ^ 0x83) & 0xA5;
  v793[1611] = BYTE1(v798) ^ 0x7E;
  v793[2137] = ((8 * v819) | (4 * v819)) ^ BYTE2(v798) ^ 0x61;
  v793[2042] = v798 ^ 0x2C;
  v793[1778] = v822 ^ 0x89;
  v824 = STACK[0x7A4];
  v825 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7A0]));
  v793[1516] = HIBYTE(v825) ^ 0xED;
  v793[1947] = BYTE2(v825) ^ 0x93;
  v826 = STACK[0x7E4];
  v827 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7E0]));
  v793[1683] = BYTE2(v827) ^ 0x7B;
  v793[1252] = HIBYTE(v827) ^ 0xC3;
  v793[2114] = BYTE1(v827) ^ 0xD4;
  v793[1421] = BYTE1(v825) ^ 0xB2;
  v793[1852] = v825 ^ 0xE5;
  v793[1588] = v827 ^ 0xF2;
  v828 = v823 ^ (-1663319554 - 1673081951 * v826);
  v793[2019] = HIBYTE(v828) ^ 0x77;
  v829 = v796 ^ (-1663319554 - 1673081951 * v824);
  v793[1326] = HIBYTE(v829) ^ 0x62;
  v793[1757] = BYTE2(v829) ^ 0xDD;
  v793[1493] = BYTE2(v828) ^ 0xF0;
  v793[1924] = BYTE1(v828) ^ 0xE2;
  v793[1231] = BYTE1(v829) ^ 0x7E;
  v793[1662] = v829 ^ 0x2C;
  v830 = STACK[0x7AC];
  v831 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7A8]));
  v793[1567] = BYTE2(v831) ^ 0x93;
  v832 = STACK[0x7EC];
  v833 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7E8]));
  v793[1829] = HIBYTE(v833) ^ 0xC3;
  v793[2093] = HIBYTE(v831) ^ 0xED;
  v793[1472] = v831 ^ 0xE5;
  v793[1398] = v828 ^ 0x89;
  v793[1208] = v833 ^ 0xF2;
  v793[1303] = BYTE2(v833) ^ 0x7B;
  v834 = v823 ^ (-1663319554 - 1673081951 * v832);
  v793[1639] = HIBYTE(v834) ^ 0x77;
  v793[1998] = BYTE1(v831) ^ 0xB2;
  v793[1734] = BYTE1(v833) ^ 0xD4;
  v835 = v796 ^ (-1663319554 - 1673081951 * v830);
  v793[1903] = HIBYTE(v835) ^ 0x62;
  v836 = STACK[0x7B4];
  v837 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7B0]));
  v838 = STACK[0x764];
  LODWORD(v290) = v731 ^ (-1673081951 * LODWORD(STACK[0x760]) - 1663319554);
  LODWORD(STACK[0x6C8]) = v290;
  v793[1377] = (((v290 & 0x5F ^ 0x59 | v290 & 0x5F ^ 6) & (v837 & 0x7F ^ 0x26 | v837 & 0x7F ^ 0x59)) + 93) ^ BYTE2(v835) ^ 0x61;
  v793[1808] = BYTE1(v835) ^ 0x7E;
  v793[1544] = BYTE1(v834) ^ 0xE2;
  v793[1713] = HIBYTE(v837) ^ 0xED;
  v793[2070] = BYTE2(v834) ^ 0xF0;
  v793[1282] = v835 ^ 0x2C;
  v793[1975] = v834 ^ 0x89;
  v793[1618] = BYTE1(v837) ^ 0xB2;
  v839 = STACK[0x7F4];
  v840 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7F0]));
  v793[1449] = HIBYTE(v840) ^ 0xC3;
  v841 = v796 ^ (-1663319554 - 1673081951 * v836);
  v793[1523] = HIBYTE(v841) ^ 0x62;
  v793[1354] = BYTE1(v840) ^ 0xD4;
  v793[1187] = BYTE2(v837) ^ 0x93;
  v793[1880] = BYTE2(v840) ^ 0x7B;
  v793[1785] = v840 ^ 0xF2;
  v793[2049] = v837 ^ 0xE5;
  v842 = v823 ^ (-1663319554 - 1673081951 * v839);
  v793[1690] = BYTE2(v842) ^ 0xF0;
  v793[1259] = HIBYTE(v842) ^ 0x77;
  v793[1428] = BYTE1(v841) ^ 0x7E;
  v793[1954] = BYTE2(v841) ^ 0xDD;
  v793[2121] = BYTE1(v842) ^ 0xE2;
  v793[1859] = v841 ^ 0x2C;
  v843 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7B8]));
  v793[1333] = HIBYTE(v843) ^ 0xED;
  v844 = STACK[0x7FC];
  v845 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7F8]));
  v793[1500] = BYTE2(v845) ^ 0x7B;
  v793[1595] = v842 ^ 0x89;
  v846 = STACK[0x810];
  LODWORD(STACK[0x698]) = STACK[0x814];
  v847 = v790 ^ (-1663319554 - 1673081951 * v846);
  LODWORD(STACK[0x6BC]) = v847;
  v793[2026] = HIBYTE(v845) ^ 0xC3;
  v793[1764] = BYTE2(v843) ^ 0x93;
  v793[1238] = BYTE1(v843) ^ 0xB2;
  *(_BYTE *)(v799 + (((v847 & 0x8C2EB ^ 0x84062) + (v847 & 0x8C2EB ^ 0x8289u)) & 0x1007FBLL)) = BYTE1(v845) ^ 0xD4;
  v848 = v823 ^ (-1663319554 - 1673081951 * v844);
  v793[1215] = v848 ^ 0x89;
  v849 = v796 ^ (-1663319554 - 1673081951 * v795);
  LOWORD(v767) = v796 ^ (-15874 - 13407 * v795);
  LODWORD(STACK[0x694]) = v849;
  v793[1310] = BYTE2(v848) ^ 0xF0;
  v850 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7C0]));
  *(_BYTE *)(v799 + (((v849 & 0xC8 ^ 0xC8) + (v849 & 0xC8)) & 0xF8)) = BYTE2(v850) ^ 0x93;
  v851 = v799;
  v793[1405] = v845 ^ 0xF2;
  v793[1669] = v843 ^ 0xE5;
  v793[1836] = HIBYTE(v848) ^ 0x77;
  LODWORD(STACK[0x67C]) = v848;
  v793[1741] = BYTE1(v848) ^ 0xE2;
  v852 = v796 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7BC]));
  LODWORD(v799) = v796;
  v793[1574] = BYTE2(v852) ^ 0xDD;
  v793[1479] = v852 ^ 0x2C;
  v793[1910] = HIBYTE(v850) ^ 0xED;
  v853 = STACK[0x804];
  v854 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x800]));
  v793[1646] = HIBYTE(v854) ^ 0xC3;
  v793[1815] = BYTE1(v850) ^ 0xB2;
  v793[1289] = v850 ^ 0xE5;
  v793[1551] = BYTE1(v854) ^ 0xD4;
  *(_BYTE *)(v851 + (v790 & 0x31E ^ 0x12 | v790 & 0x31E ^ 0x30C)) = v854 ^ 0xF2;
  LODWORD(STACK[0x508]) = 0;
  v793[2005] = BYTE1(v852) ^ 0x7E;
  v793[2100] = HIBYTE(v852) ^ 0x62;
  v793[2077] = BYTE2(v854) ^ 0x7B;
  v855 = v823;
  LODWORD(STACK[0x670]) = v823;
  v856 = v823 ^ (-1663319554 - 1673081951 * v853);
  v793[1456] = HIBYTE(v856) ^ 0x77;
  v793[1361] = BYTE1(v856) ^ 0xE2;
  v857 = v799 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7C4]));
  v793[1720] = HIBYTE(v857) ^ 0x62;
  v793[1194] = BYTE2(v857) ^ 0xDD;
  v793[1792] = v856 ^ 0x89;
  v793[2056] = v857 ^ 0x2C;
  v793[1625] = BYTE1(v857) ^ 0x7E;
  v793[1887] = BYTE2(v856) ^ 0xF0;
  v858 = v731;
  v859 = v731 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x7C8]));
  v793[1961] = BYTE2(v859) ^ 0x93;
  v860 = STACK[0x80C];
  v861 = v790 ^ (-1663319554 - 1673081951 * LODWORD(STACK[0x808]));
  v793[2128] = BYTE1(v861) ^ 0xD4;
  v793[1530] = HIBYTE(v859) ^ 0xED;
  v793[1866] = v859 ^ 0xE5;
  v793[1697] = BYTE2(v861) ^ 0x7B;
  v793[1435] = BYTE1(v859) ^ 0xB2;
  v793[1602] = v861 ^ 0xF2;
  v793[1266] = HIBYTE(v861) ^ 0xC3;
  v862 = v855 ^ (-1673081951 * v860 - 1663319554);
  v793[1507] = BYTE2(v862) ^ 0xF0;
  v863 = v799 ^ (-1673081951 * LODWORD(STACK[0x7CC]) - 1663319554);
  LODWORD(v290) = v799;
  v793[1340] = ((v848 & 0xBC ^ 0xB4) + (v848 & 0xBC ^ 8)) ^ HIBYTE(v863) ^ 0xDE;
  v793[1771] = BYTE2(v863) ^ 0xDD;
  v793[1245] = BYTE1(v863) ^ 0x7E;
  LODWORD(STACK[0x660]) = v862;
  v793[2033] = HIBYTE(v862) ^ 0x77;
  *(_BYTE *)(v851 + (v767 & 0x2F2 ^ 0x210u) + (unint64_t)(v767 & 0x2F2 ^ 0xE2u)) = BYTE1(v862) ^ 0xE2;
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x5F0]) - 620781824;
  LODWORD(STACK[0x6B0]) = LODWORD(STACK[0x5E0]) + (STACK[0x5EC] & 0x4EDF77FE);
  v864 = STACK[0x73C];
  LODWORD(STACK[0x668]) = (-1663319554 - 1673081951 * LODWORD(STACK[0x738])) ^ 0xD1CE7FAD;
  v865 = -1673081951 * LODWORD(STACK[0x758]) - ((948803394 * LODWORD(STACK[0x758]) + 968328188) & 0x68135C6E);
  v866 = (-1663319554 - 1673081951 * LODWORD(STACK[0x778])) ^ 0x654549D6;
  v867 = (-1663319554 - 1673081951 * LODWORD(STACK[0x77C])) ^ 0xEB70BF3E;
  LODWORD(v799) = -1673081951 * LODWORD(STACK[0x75C]) - ((948803394 * LODWORD(STACK[0x75C]) + 968328188) & 0x68135C6E);
  v868 = STACK[0x724];
  LODWORD(v851) = -1673081951 * LODWORD(STACK[0x720]) - ((948803394 * LODWORD(STACK[0x720]) + 968328188) & 0xA01C1B6E);
  LODWORD(STACK[0x654]) = (-1663319554 - 1673081951 * v864) ^ 0x5FFB8945;
  LODWORD(STACK[0x650]) = (-1663319554 - 1673081951 * v868) ^ 0x9889FE76;
  v869 = STACK[0x744];
  LODWORD(STACK[0x64C]) = (((948803394 * LODWORD(STACK[0x740])) & 0x39B783FC)
                         + ((-1673081951 * LODWORD(STACK[0x740])) ^ 0x9CDBC1FE)) ^ 0x3A1603DD;
  v870 = (-1663319554 - 1673081951 * LODWORD(STACK[0x780])) ^ 0x8E9D35A6;
  v871 = STACK[0x72C];
  v872 = (~(948803394 * LODWORD(STACK[0x728]) + 968328188) | 0x5FE3E491) - 1673081951 * LODWORD(STACK[0x728]);
  v873 = (-1663319554 - 1673081951 * LODWORD(STACK[0x784])) ^ 0x545E3A30;
  LODWORD(STACK[0x42C]) = v866 ^ v790;
  LODWORD(STACK[0x428]) = v867 ^ v790;
  LODWORD(STACK[0x424]) = v870 ^ v790;
  LODWORD(STACK[0x420]) = v873 ^ v790;
  v874 = STACK[0x76C];
  v875 = -1673081951 * LODWORD(STACK[0x768])
       - ((948803394 * LODWORD(STACK[0x768]) + 968328188) & 0x68135C6E)
       - 790269899;
  v876 = v858;
  LODWORD(STACK[0x41C]) = v858 ^ 0xE5A620EE ^ (v865 - 790269899);
  LODWORD(STACK[0x418]) = v858 ^ 0xE5A620EE ^ (v799 - 790269899);
  LODWORD(STACK[0x658]) = v858 ^ 0xE5A620EE ^ v875;
  v877 = -1673081951 * LODWORD(STACK[0x748]) - ((948803394 * LODWORD(STACK[0x748]) + 968328188) & 0x233BADBE);
  v878 = -1673081951 * LODWORD(STACK[0x788]) - ((948803394 * LODWORD(STACK[0x788]) + 968328188) & 0x263206D2);
  v879 = -1673081951 * v871 - ((948803394 * v871 + 968328188) & 0xA01C1B6E);
  v880 = -1673081951 * LODWORD(STACK[0x78C]) - ((948803394 * LODWORD(STACK[0x78C]) + 968328188) & 0x263206D2);
  v881 = -1673081951 * LODWORD(STACK[0x74C]) - ((948803394 * LODWORD(STACK[0x74C]) + 968328188) & 0x233BADBE);
  v882 = STACK[0x770];
  v883 = -1673081951 * LODWORD(STACK[0x770])
       - ((948803394 * LODWORD(STACK[0x770]) + 968328188) & 0x5A5BEA94)
       + 1242150728;
  v884 = STACK[0x794];
  v885 = -1673081951 * LODWORD(STACK[0x790]) - ((948803394 * LODWORD(STACK[0x790]) + 968328188) & 0x263206D2);
  v886 = -1673081951 * LODWORD(STACK[0x734])
       - ((948803394 * LODWORD(STACK[0x734]) + 968328188) & 0xA01C1B6E)
       - 320221259;
  v887 = -1673081951 * LODWORD(STACK[0x730])
       - ((948803394 * LODWORD(STACK[0x730]) + 968328188) & 0xA01C1B6E)
       - 320221259;
  LODWORD(STACK[0x414]) = v290 ^ 0xEEF4FA7 ^ (v851 - 320221259);
  v888 = v290 ^ 0xEEF4FA7 ^ (v872 - 320221258);
  v889 = v290 ^ 0xEEF4FA7 ^ (v879 - 320221259);
  LODWORD(STACK[0x410]) = v290 ^ 0xEEF4FA7 ^ v886;
  LODWORD(STACK[0x40C]) = v290 ^ 0xEEF4FA7 ^ v887;
  v890 = v883 ^ 0x7C827B93;
  LODWORD(v799) = v880 - 1342913177;
  v891 = v790 ^ 0x50E2571B ^ (v878 - 1342913177);
  v892 = v790 ^ 0x50E2571B ^ (v885 - 1342913177);
  v893 = v790 ^ 0x50E2571B ^ (-1673081951 * v884 - ((948803394 * v884 + 968328188) & 0x263206D2) - 1342913177);
  v894 = *((_DWORD *)&STACK[0x718]
         + ((STACK[0x6A0] & 0x1E ^ 0xE | ((v883 & 0xAA ^ 0xA) + ((95 * v882 + 1) & 0xAA)) | STACK[0x6A0] & 0x1E ^ 0x10)
                           - 125));
  LODWORD(v851) = -1673081951 * v874 - 1663319554;
  v895 = -1673081951 * LODWORD(STACK[0x7D0]) - 1663319554;
  v896 = -1673081951 * LODWORD(STACK[0x7D4]) - 1663319554;
  v897 = -1673081951 * LODWORD(STACK[0x698]) - 1663319554;
  v898 = ((2 * (v290 ^ (-1673081951 * LODWORD(STACK[0x818]) - 1663319554))) & 0xDEB575BE ^ 0x9C800420)
       + (v290 ^ (-1673081951 * LODWORD(STACK[0x818]) - 1663319554) ^ 0x31BBF8CF);
  v899 = v881 - 1367762723;
  v900 = STACK[0x670];
  v901 = LODWORD(STACK[0x670]) ^ 0xE6EDB4D6;
  v902 = v901 ^ (v877 - 1367762723);
  v903 = v901 ^ v899;
  v904 = v901 ^ (-1673081951 * LODWORD(STACK[0x750])
               - ((948803394 * LODWORD(STACK[0x750]) + 968328188) & 0x233BADBE)
               - 1367762723);
  v905 = v901 ^ (-1673081951 * LODWORD(STACK[0x754])
               - ((948803394 * LODWORD(STACK[0x754]) + 968328188) & 0x233BADBE)
               - 1367762723);
  v906 = v901 ^ (-1673081951 * v894 - ((948803394 * v894 + 968328188) & 0x233BADBE) - 1367762723);
  LODWORD(STACK[0x408]) = (-1663319554 - 1673081951 * v838) ^ 0x17C732BF ^ v876;
  v907 = v876 ^ v851;
  LODWORD(STACK[0x400]) = v890 ^ v876;
  v908 = v876 ^ v895;
  LODWORD(STACK[0x3FC]) = LODWORD(STACK[0x650]) ^ v290;
  LODWORD(v851) = v290 ^ v896;
  v909 = STACK[0x6B0];
  LODWORD(STACK[0x3F8]) = LODWORD(STACK[0x668]) ^ v900;
  LODWORD(STACK[0x3F4]) = LODWORD(STACK[0x654]) ^ v900;
  LODWORD(STACK[0x3F0]) = LODWORD(STACK[0x64C]) ^ v900;
  LODWORD(STACK[0x3EC]) = (-1663319554 - 1673081951 * v869) ^ 0xE0D50C4B ^ v900;
  v910 = v900 ^ v897;
  v793[1676] = v863 ^ 0x2C;
  LOBYTE(v290) = (STACK[0x67C] & 0x18 ^ 8) + (STACK[0x67C] & 0x18 ^ 0x10);
  v793[1412] = LODWORD(STACK[0x660]) ^ 0x89;
  v911 = STACK[0x6BC];
  v793[1317] = HIWORD(LODWORD(STACK[0x6BC])) ^ 0x7B;
  v793[1843] = ((v911 ^ 0x43FB5472u) >> v290) ^ 0x80;
  v793[2107] = HIBYTE(v908) ^ 0xED;
  v793[1748] = BYTE1(v911) ^ 0xD4;
  v793[1581] = BYTE2(v908) ^ 0x93;
  v793[2012] = BYTE1(v908) ^ 0xB2;
  v793[1222] = v911 ^ 0xF2;
  v793[1917] = BYTE3(v851) ^ 0x62;
  v793[1486] = v908 ^ 0xE5;
  v793[1391] = BYTE2(v851) ^ 0xDD;
  v793[1653] = HIBYTE(v910) ^ 0x77;
  v793[2084] = BYTE2(v910) ^ 0xF0;
  v793[1822] = BYTE1(v851) ^ 0x7E;
  v793[1989] = v910 ^ 0x89;
  v793[1296] = v851 ^ 0x2C;
  v793[1558] = BYTE1(v910) ^ 0xE2;
  LODWORD(STACK[0x3E8]) = (v907 & 0xDB746F5A ^ 0xD1240E58) + (v907 & 0xDB746F5A ^ 0xA506102);
  LODWORD(STACK[0x3E4]) = (LODWORD(STACK[0x6E0]) ^ 0xD1AF8ED9) + 1384153090;
  LODWORD(STACK[0x3E0]) = v892 + 1370762886;
  LODWORD(STACK[0x3DC]) = (v790 ^ 0x50E2571B ^ v799) + 702113785;
  LODWORD(STACK[0x3D8]) = LODWORD(STACK[0x6C8]) ^ 0xD1AF8ED9;
  LODWORD(STACK[0x3D4]) = (v907 ^ 0xD1AF8ED9) - 1293289029;
  LODWORD(STACK[0x3D0]) = LODWORD(STACK[0x658]) - 1970504632;
  LODWORD(STACK[0x3CC]) = v893 - 1537639385;
  LODWORD(STACK[0x3C8]) = v898 - 1078505988;
  LODWORD(STACK[0x3C4]) = v898 - v906 - 890934160;
  LODWORD(STACK[0x3C0]) = v888 + 1455973563;
  LODWORD(STACK[0x3BC]) = LODWORD(STACK[0x6E4]) ^ 0x5EE14210;
  LODWORD(STACK[0x3B8]) = LODWORD(STACK[0x694]) ^ 0x5EE14210;
  LODWORD(STACK[0x3B4]) = v889 + 1296368610;
  LODWORD(STACK[0x464]) = -1570848612;
  LODWORD(STACK[0x3B0]) = v891 + 1;
  LODWORD(STACK[0x3AC]) = v904 + 1;
  LODWORD(STACK[0x3A8]) = v905 + 1;
  LODWORD(STACK[0x3A4]) = v902 + 1;
  LODWORD(STACK[0x3A0]) = v903 + 1;
  LODWORD(STACK[0x39C]) = 640163410;
  LODWORD(STACK[0x478]) = -4475012;
  LODWORD(STACK[0x460]) = -131586;
  LODWORD(STACK[0x45C]) = -1216350347;
  LODWORD(STACK[0x458]) = 1526726643;
  LODWORD(STACK[0x454]) = 738447356;
  LODWORD(STACK[0x450]) = -2099202;
  LODWORD(STACK[0x580]) = 111010025;
  LODWORD(STACK[0x57C]) = -346270078;
  LODWORD(STACK[0x578]) = 544829218;
  LODWORD(STACK[0x574]) = 4589963;
  LODWORD(STACK[0x570]) = 8389136;
  LODWORD(STACK[0x56C]) = -1912602329;
  LODWORD(STACK[0x568]) = 1095577302;
  LODWORD(STACK[0x488]) = -1317582148;
  LODWORD(STACK[0x484]) = -290519552;
  LODWORD(STACK[0x480]) = -1794980324;
  LODWORD(STACK[0x47C]) = -2082283284;
  LODWORD(STACK[0x564]) = 1878570747;
  LODWORD(STACK[0x560]) = 206450552;
  LODWORD(STACK[0x558]) = -301990177;
  LODWORD(STACK[0x474]) = 50441078;
  LODWORD(STACK[0x470]) = 16777344;
  LODWORD(STACK[0x46C]) = -804987896;
  LODWORD(STACK[0x468]) = 907951616;
  v912 = STACK[0x6E8];
  v913 = STACK[0x6F8];
  LODWORD(STACK[0x50C]) = 1;
  v914 = *(uint64_t (**)(void))(STACK[0x6D0] + 8 * v913);
  LODWORD(STACK[0x6B0]) = v909;
  LODWORD(STACK[0x6E8]) = v912;
  return v914();
}

uint64_t sub_247824184@<X0>(int a1@<W8>)
{
  unint64_t v1;
  int v2;
  int v3;
  int v4;
  int v5;
  int v6;
  int v7;
  int v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  unsigned int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  int v27;
  unsigned int v28;
  unsigned int v29;
  int v30;
  unint64_t v31;
  int v32;
  int v33;
  int v34;
  int v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  unint64_t v41;
  uint64_t (*v42)(uint64_t);

  v9 = 35 * (a1 ^ 0x5DD);
  v10 = v4 + v3 - ((2 * (v4 + v3) - 2012549870) & 0xE225BBB0) + (v9 ^ 0xB5185298);
  v11 = ((v5 + 1810168226) ^ (v3 - 905508252)) - ((2 * ((v5 + 1810168226) ^ (v3 - 905508252))) & 0xB3AFC35A) - 640163411;
  v12 = v6 - ((2 * v6 + 1881501876) & 0x8351987E) + 2042332313;
  v13 = v7 - ((2 * v7 + 614190986) & 0x49E4E8E4) - 146777033;
  v14 = v2 ^ 0x406ECA1;
  v15 = STACK[0x6A8];
  v16 = ((LODWORD(STACK[0x6A8]) - 1028528271) ^ 0xAA24839A) + (v12 ^ 0xBE5733C0) + 1;
  v17 = ((2 * v16) & 0x9FFFBFF6) + (v16 ^ 0x4FFFDFFB);
  v18 = ((v17 - 1342169083) ^ (v14 + (v13 ^ 0xA4F27472)) ^ 0xF7FEF6FF)
      + 1039781166
      + ((2 * ((v17 - 1342169083) ^ (v14 + (v13 ^ 0xA4F27472)))) & 0xEFFDEDFE);
  v19 = ((LODWORD(STACK[0x6DC]) - 411848309) ^ 0xAA24839A)
      - v5
      - ((v10 & 0x7BD0E5FA ^ 0x7110C5D8 | v10 & 0x7BD0E5FA ^ 0xAC02022) & STACK[0x3E8])
      - 1770339094
      - ((2
        * (((LODWORD(STACK[0x6DC]) - 411848309) ^ 0xAA24839A)
         - v5
         - ((v10 & 0x7BD0E5FA ^ 0x7110C5D8 | v10 & 0x7BD0E5FA ^ 0xAC02022) & STACK[0x3E8])
         - 278172744)) & 0x4E1EB264);
  v20 = v12 ^ v13;
  v21 = ((2 * (v19 ^ v10)) & 0x5AFEFFFC ^ 0x83A09D4) + (v19 ^ v10 ^ 0xFB62FB14);
  LODWORD(STACK[0x6E4]) = v21 + 1996143960;
  v22 = ((LODWORD(STACK[0x3E4]) + v21) ^ 0x4F451D6E) - 205523298 + ((2 * (LODWORD(STACK[0x3E4]) + v21)) & 0x9E8A3ADC);
  v23 = (((v19 ^ 0xA70F5932) + LODWORD(STACK[0x400])) ^ 0xEFFBFDF7)
      + 1962781660
      + ((2 * ((v19 ^ 0xA70F5932) + LODWORD(STACK[0x400]))) & 0xDFF7FBEE);
  LODWORD(STACK[0x53C]) = LODWORD(STACK[0x3E0]) - v17;
  LODWORD(STACK[0x52C]) = LODWORD(STACK[0x3DC]) - v5;
  v24 = ((LODWORD(STACK[0x3D4]) + v6) ^ 0xDFFEFFEF) + 1056701408 + ((2 * (LODWORD(STACK[0x3D4]) + v6)) & 0xBFFDFFDE);
  v25 = v5 - 423871741 + (v19 ^ 0xA70F5932) + 1285290940 - ((2 * (v5 - 423871741 + (v19 ^ 0xA70F5932))) & 0x9937F778);
  v26 = v3;
  LODWORD(STACK[0x530]) = LODWORD(STACK[0x3D0]) + (v20 ^ 0xE55AB84D);
  v27 = STACK[0x3CC];
  LODWORD(STACK[0x6E0]) = v18;
  LODWORD(STACK[0x528]) = v27 - v18;
  LODWORD(STACK[0x6BC]) = (((v25 ^ 0x4C9BFBBC) - 2058690029) ^ 0xF77FE33D)
                        + 199999488
                        + ((2 * ((v25 ^ 0x4C9BFBBC) - 2058690029)) & 0xEEFFC67A);
  LODWORD(STACK[0x550]) = ((LODWORD(STACK[0x3B0]) + (v11 ^ LODWORD(STACK[0x39C]))) ^ 0x4FBE3CFD)
                        - 146546885
                        + ((2 * (LODWORD(STACK[0x3B0]) + (v11 ^ LODWORD(STACK[0x39C])))) & 0x9F7C79FA);
  v28 = v17 + v6 - ((2 * (v17 + v6) - 975948928) & 0xFAE8A132) - 530683303;
  v29 = ((2 * (v28 ^ (v17 - 288540020))) & 0x8F6FBD76 ^ 0x8A68A132) + (v28 ^ (v17 - 288540020) ^ 0x3AC38E22);
  LODWORD(STACK[0x6F8]) = v29 - 329752;
  HIDWORD(v31) = v20 ^ (v17 + 5) ^ 0xFFFFFFFD;
  LODWORD(v31) = (v17 - 1342169083) ^ v20 ^ 0xE55AB840;
  v30 = v31 >> 4;
  LODWORD(STACK[0x6C8]) = (v25 ^ ((v19 ^ 0xA70F5932) + 1053629063) ^ 0xB2440573)
                        + 1810750968
                        + ((2 * (v25 ^ ((v19 ^ 0xA70F5932) + 1053629063))) & 0xFDBFFD9E ^ 0x9937F518);
  HIDWORD(v31) = v30 ^ 0x21D60B0;
  LODWORD(v31) = v30 ^ 0x20000000;
  v32 = ((v31 >> 28) ^ 0x21D60B02) - v29 + 1203232443;
  LODWORD(STACK[0x6F0]) = v32 + v8 - ((2 * v32) & 0x85DC2D86);
  STACK[0x448] = v1;
  v33 = STACK[0x408];
  v34 = STACK[0x41C];
  v35 = STACK[0x418];
  v36 = STACK[0x420];
  v37 = STACK[0x424];
  v38 = STACK[0x428];
  v39 = STACK[0x42C];
  v40 = STACK[0x3D8];
  v41 = STACK[0x430];
  LODWORD(STACK[0x540]) = v23 + (((v9 - 1521) | 0x243) ^ 0xA02922F9);
  LODWORD(STACK[0x544]) = (((v39 ^ 0x26BE1DA4) - LODWORD(STACK[0x6E8]) + 671739223) ^ 0xFFDDDBBE)
                        + 1760493308
                        + ((((v39 ^ 0x26BE1DA4) - LODWORD(STACK[0x6E8]) + 671739223) << ((v9 + 82) ^ 0x4A)) & STACK[0x478]);
  LODWORD(STACK[0x518]) = (((v38 ^ 0xA88BEB4C) - v6 + 2091209586) ^ 0x7ED88FF5)
                        - 38833297
                        + ((2 * ((v38 ^ 0xA88BEB4C) - v6 + 2091209586)) & 0xFDB11FEA);
  LODWORD(STACK[0x524]) = v15 + v40 + 2097301643;
  LODWORD(STACK[0x548]) = v5 + v35 - 1541994091;
  LODWORD(STACK[0x520]) = v26 + v34 + 1958427869;
  LODWORD(STACK[0x54C]) = (((v37 ^ 0xCD6661D4) - LODWORD(STACK[0x6DC]) + 411848309) ^ 0xD1EBA7EC)
                        + 2145376896
                        + ((2 * ((v37 ^ 0xCD6661D4) - LODWORD(STACK[0x6DC]) + 411848309)) & 0xA3D74FD8);
  LODWORD(STACK[0x534]) = (((v36 ^ 0x17A56E42) - LODWORD(STACK[0x6B0]) + 100766683) ^ 0x8757FB5F)
                        + 2080159224
                        + ((2 * ((v36 ^ 0x17A56E42) - LODWORD(STACK[0x6B0]) + 100766683)) & 0xEAFF6BE);
  LODWORD(STACK[0x510]) = v22 - 1819884156;
  LODWORD(STACK[0x514]) = v24 + 960547676;
  LODWORD(STACK[0x538]) = v14 + 874215080 + (v33 ^ 0xC668BC66);
  LODWORD(STACK[0x504]) = 789711163;
  LODWORD(STACK[0x500]) = 789711186;
  v42 = (uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x6D0] + 8 * (v9 ^ (2545 * (STACK[0x508] & 1)))) - 4);
  LODWORD(STACK[0x4F8]) = 977282959;
  STACK[0x490] = v41;
  LODWORD(STACK[0x49C]) = 977282959;
  LODWORD(STACK[0x48C]) = -977282959;
  return v42(957);
}

uint64_t sub_247824FC8(uint64_t a1, int a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6)
{
  int v6;
  int v7;
  _BYTE *v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  unsigned int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  int v30;
  int v31;
  unsigned int v32;
  int v33;
  int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  unsigned int v39;
  unsigned int v40;
  unsigned int v41;
  int v42;
  int v43;
  unsigned int v44;
  unsigned int v45;
  int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  unsigned int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  unsigned int v58;
  int v59;
  int v60;
  unsigned int v61;
  int v62;
  unsigned int v63;
  unsigned int v64;
  unsigned int v65;
  int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  int v88;
  unsigned int v89;
  unsigned int v90;
  int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  unsigned int v97;
  unsigned int v98;
  unsigned int v99;
  unsigned int v100;
  unsigned int v101;
  unsigned int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  unsigned int v106;
  unsigned int v107;
  int v108;
  unsigned int v109;
  int v110;
  int v111;
  unsigned int v112;
  unsigned int v113;
  unsigned int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  unsigned int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  unsigned int v123;
  unsigned int v124;
  int v125;
  int v126;
  int v127;
  unsigned int v128;
  unsigned int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  unsigned int v133;
  int v134;
  unsigned int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  unsigned int v139;
  int v140;
  unsigned int v141;
  int v142;
  int v143;
  int v144;
  unsigned int v145;
  unsigned int v146;
  int v147;
  unsigned int v148;
  int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  unsigned int v153;
  int v154;
  int v155;
  int v156;
  unsigned int v157;
  unsigned int v158;
  int v159;
  unsigned int v160;
  int v161;
  int v162;
  unsigned int v163;
  int v164;
  unsigned int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  int v170;
  unsigned int v171;
  int v172;
  unsigned int v173;
  unsigned int v174;
  int v175;
  int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  int v180;
  unsigned int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  unsigned int v186;
  unsigned int v187;
  unsigned int v188;
  unsigned int v189;
  int v190;
  unsigned int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  int v198;
  unsigned int v199;
  unsigned int v200;
  unsigned int v201;
  int v202;
  int v203;
  unsigned int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  unsigned int v209;
  int v210;
  unsigned int v211;
  unsigned int v212;
  unsigned int v213;
  unsigned int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  unsigned int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  int v227;
  unsigned int v228;
  int v229;
  int v230;
  int v231;
  int v232;
  unsigned int v233;
  unsigned int v234;
  int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  unsigned int v241;
  unsigned int v242;
  unsigned int v243;
  int v244;
  int v245;
  int v246;
  int v247;
  int v248;
  unsigned int v249;
  unsigned int v250;
  int v251;
  int v252;
  int v253;
  unsigned int v254;
  unsigned int v255;
  int v256;
  unsigned int v257;
  int v258;
  unsigned int v259;
  unsigned int v260;
  unint64_t v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  int v266;
  unsigned int v267;
  int v268;
  unsigned int v269;
  unsigned int v270;
  int v271;
  int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  int v283;
  int v284;
  unsigned int v285;
  unsigned int v286;
  unsigned int v287;
  unsigned int v288;
  int v289;
  int v290;
  int v291;
  int v292;
  int v293;
  int v294;
  unsigned int v295;
  int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  int v304;
  unsigned int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  unsigned int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  unsigned int v327;
  int v328;
  unsigned int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  unsigned int v333;
  unsigned int v334;
  unsigned int v335;
  int v336;
  unsigned int v337;
  unsigned int v338;
  unsigned int v339;
  unsigned int v340;
  int v341;
  unsigned int v342;
  int v343;
  unsigned int v344;
  unsigned int v345;
  int v346;
  int v347;
  int v348;
  unsigned int v349;
  unsigned int v350;
  int v351;
  int v352;
  unsigned int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;

  LODWORD(STACK[0x4F8]) = v10;
  v11 = STACK[0x6BC];
  v12 = STACK[0x6E4];
  v13 = STACK[0x6C8];
  v15 = STACK[0x6E0];
  v16 = STACK[0x6F8];
  LODWORD(STACK[0x4FC]) = 776856685;
  v17 = a2;
  LODWORD(STACK[0x6F8]) = a2;
  v18 = (a2 - 2092632206) & 0x7CBB0FF2;
  v19 = v17 + 1726;
  v20 = v16 - v15;
  LODWORD(STACK[0x6E8]) = v19;
  v21 = v19 + 1768958494 + v11 + v12;
  LODWORD(STACK[0x6E0]) = v18;
  v22 = v7
      + ((v12 - 611990870) ^ 0xE50522EE)
      - 1042481672
      - ((2 * (v7 + ((v12 - 611990870) ^ 0xE50522EE) - 1042481672) - 1095962450) & 0xDE7F157A)
      + 1318454036;
  v23 = 1338156558 - v7 - ((-1600231888 - 2 * v7) & 0xFEE6E5EC);
  v24 = ((v13 - v12 - ((2 * (v13 - v12) + 1935196446) & 0xFEE6E5EC) + 958387077) ^ v23) + (v21 ^ 0x7EB63DDC);
  v25 = ((2 * v24) & 0x7FC7EFDE) + (v24 ^ 0xBFE3F7EF);
  v26 = (v23 ^ 0x7F7372F6)
      + (v22 ^ 0x10C07542)
      + 1
      - ((2 * ((v23 ^ 0x7F7372F6) + (v22 ^ 0x10C07542) + 1)) & 0x232D1494)
      - 1852405174;
  v27 = ((v15 + v6) ^ 0xE50522EE) + (LODWORD(STACK[0x6F0]) ^ 0xC2EE16C3);
  v28 = v26 ^ v22;
  v29 = (LODWORD(STACK[0x6F0]) ^ 0x3D11E93C)
      - 1927917408
      - ((2 * (LODWORD(STACK[0x6F0]) ^ 0x3D11E93C) + 2) & 0x1A2CA140)
      + 1;
  v30 = v27 + 228093116 - ((2 * v27 + 587551438) & 0x382B6F94) - 2955;
  v31 = (v20 - ((2 * v20 + 478927636) & 0x1A2CA140) + 2069642794) ^ v29;
  v32 = (v29 ^ 0x8D1650A0)
      + (v30 ^ 0xE3EA4835)
      + 1
      - ((2 * ((v29 ^ 0x8D1650A0) + (v30 ^ 0xE3EA4835) + 1)) & 0x89C3B4E8)
      + 1155652212;
  v33 = (((v25 + 1075578897) & 0x7EB63DDC ^ 0x7EB63DDC) + ((v25 + 1075578897) & 0x7EB63DDC)) ^ (v15
                                                                                              + (v18 ^ 0xA301DAD)
                                                                                              + a6);
  v34 = v32 ^ v30;
  v35 = ((2 * (v25 + 1075578897 + (v28 ^ 0x8156FF08) + 1)) & 0xEBB69B76)
      + ((v25 + 1075578897 + (v28 ^ 0x8156FF08) + 1) ^ 0xF5DB4DBB);
  v36 = v34 ^ 0x58F46DBE;
  v37 = v34 ^ 0x58F46DBE ^ v33;
  v38 = ((2 * (v31 + v33 + (v34 ^ 0xA70B9241) + 1)) & 0xDFAE1E76) + ((v31 + v33 + (v34 ^ 0xA70B9241) + 1) ^ 0x6FD70F3B);
  v39 = (v21 ^ 0x1F3D2B ^ v28) + 170177093 + v35;
  v40 = v35 - ((2 * v35 - 1228396438) & 0xDCFCCA38) + 1239578961;
  v41 = ((2 * ((v28 ^ 0x7EA900F7) + (v40 ^ 0x91819AE3) + 1)) & 0xEEDFDF5E)
      + (((v28 ^ 0x7EA900F7) + (v40 ^ 0x91819AE3) + 1) ^ 0xF76FEFAF);
  v42 = (v26 ^ 0x14BA0BF0) - 143659089 + (v39 ^ 0xF4B0E) - v41 + 1;
  v43 = v42 - 2134323837 - ((2 * v42) & 0x1919B06);
  v44 = v37 - 1876365115 + v38;
  v45 = v38 - ((2 * v38 - 1026513558) & 0xE7319B9C) - 721346429;
  v46 = v40 ^ 0x6E7E651C ^ (v41 + 143659089);
  v47 = v36 + (v45 ^ 0x8C673231) + 1367301038 - ((2 * (v36 + (v45 ^ 0x8C673231) + 1)) & 0xA2FEB75A);
  v48 = v41 - ((2 * v41 + 1177367096) & 0x8E3BD602) + 1781826589;
  v49 = ((2 * ((v48 ^ 0xC71DEB01) + v46)) & 0x67FE95E4) + (((v48 ^ 0xC71DEB01) + v46) ^ 0xB3FF4AF2);
  v50 = (v47 ^ 0x517F5BAD) - ((2 * (v47 ^ 0x517F5BAD) + 890048918) & 0xA278F7F6) + 1807942854;
  v51 = (v39 ^ 0x38ED5FF0 ^ v48) + (v43 & 0x4FFA1729 ^ 0xFF37FAFE) + (v43 & 0x4FFA1729 ^ 0xB0CDEDD7) + 1275114768 + v49;
  v52 = ((2 * (v51 + 1341789993 + (v39 ^ 0xFFF0B4F1))) & 0xEBF71FDA)
      + ((v51 + 1341789993 + (v39 ^ 0xFFF0B4F1)) ^ 0x75FB8FED);
  v53 = v52 - ((2 * v52 + 945898054) & 0xC672F0EA) + 2137659800;
  v54 = (v32 ^ 0xC1CD5BCE) + (v44 ^ 0xF4B0E) + (v47 ^ 0xAE80A452) + 2;
  v55 = ((2 * ((v50 ^ 0xD13C7BFB) + (v45 ^ 0x22E79663 ^ v47))) & 0xDBBFE7FC)
      + (((v50 ^ 0xD13C7BFB) + (v45 ^ 0x22E79663 ^ v47)) ^ 0x6DDFF3FE);
  v56 = v55 + (v44 ^ 0x2ECCCF0A ^ v50);
  v57 = v56
      - 1843393534
      + (v44 ^ 0xFFF0B4F1)
      - 1548697075
      - ((2 * (v56 - 1843393534 + (v44 ^ 0xFFF0B4F1))) & 0x4761841A);
  v58 = (v57 ^ 0xA3B0C20D) - ((2 * (v57 ^ 0xA3B0C20D) + 1147340778) & 0x77456D34) + 1574189711;
  v59 = (v56 - 1843393534) ^ (v54 - 1548697075 - ((2 * v54) & 0x4761841A)) ^ v57;
  v60 = v59 - ((2 * v59) & 0x29CDEB08) + 350680452;
  v61 = ((2 * v53) & 0xDBA79DE0 ^ 0xC22290E0) + (v53 ^ 0xEEAB685);
  v52 -= 1405750264;
  v62 = (v51 + 1341789993) ^ v43 ^ (v61 - 2134323837 - 2 * (v61 & 0xC8CD97 ^ (v53 ^ 0xEEAB685) & 0x14));
  v63 = v62 - ((2 * v62) & 0x9EE0282E) + 1332745239;
  v64 = v56 + v55;
  v65 = (v60 ^ 0xEB190A7B) + v55;
  v66 = v52 ^ (v49 + 182855587 + v51);
  v67 = (v63 ^ 0xB08FEBE8) + v49;
  v68 = ((2 * v60) & 0xFBFDF7C6 ^ 0xF1D56042) + (v60 ^ 0x5144FD6);
  v69 = ((2 * v63) & 0x1E7EFEEE ^ 0x678AA4C) + (v63 ^ 0xAC432AD1);
  v70 = v66 - v69 - 1468916623 - ((2 * (v66 - v69 + 255819639)) & 0x326539F4);
  v71 = (v58 ^ (v64 - ((2 * v64 + 643229408) & 0x77456D34) - 825349622)) - v68 - 33621021;
  v72 = v71 - 152417195 - ((2 * v71) & 0xEDD498AA);
  v73 = (v65 + v68 - ((2 * (v65 + v68) + 102291224) & 0xEDD498AA) - 101271583) ^ v72;
  v74 = (v70 ^ 0x99329CFA) - ((2 * (v70 ^ 0x99329CFA) + 1198319156) & 0xD22797BC) - 1932902664;
  v75 = (v72 ^ 0xF6EA4C55) - ((2 * (v72 ^ 0xF6EA4C55) + 1198319156) & 0xC84C6422) + 131900715;
  v76 = v75 ^ v58;
  v77 = ((2 * (v74 ^ v52)) & 0xEEA4BB72 ^ 0xC2249330) + (v74 ^ v52 ^ 0x1E419667);
  v78 = (v67 + v69 - 2 * ((v67 + v69 + 195858692) & 0x19329CFB ^ (v67 + v69) & 1) + 1155476990) ^ v70;
  v79 = v74 ^ 0xF56AABB2;
  v80 = (v74 ^ 0xF56AABB2) - v77 - 1277921170;
  v75 ^= 0x785F527Du;
  v81 = ((2 * (v75 + (v76 ^ 0x207B7B74) + 1)) & 0xFF7C7FCE) + ((v75 + (v76 ^ 0x207B7B74) + 1) ^ 0xFFBE3FE7);
  v82 = ((v69 - 1681191417) ^ 0xDC17DA72) + 41005708 + v80;
  v83 = v78 + 557532118 + v82;
  v84 = v82 + v80 - ((2 * (v82 + v80) + 152317972) & 0xC4ED321C) - 419385064;
  v85 = v81 + ((v68 - 1391750757) ^ 0xDC17DA72);
  v86 = v73 + 1347012179 + v85 - ((2 * (v73 + 1347012179 + v85) + 541988282) & 0x818E55A0) + 1357788589;
  v87 = v79
      - 1375625316
      + ((701402915 * ((v86 & 0x4D76519F ^ 0xD30510F) + (v86 & 0x4D76519F ^ 0x40460090))) ^ 0xBE65374D);
  v88 = v84 ^ v87;
  v89 = v77 - ((2 * v77 + 1993799538) & 0xCD5CC092) - 1575363582;
  v90 = ((2 * (v84 ^ v87 ^ v89)) & 0xFFFFFBBE ^ 0x9B1F28E) + (v84 ^ v87 ^ v89 ^ 0xFB270498);
  v91 = v85 + v81 - 281010661 + (~(2 * (v85 + v81) + 17236068) | 0x2286C42F);
  v92 = v87 ^ v83;
  v93 = v75 - ((2 * v75 + 933944600) & 0xCDA2D8AA) + 44489441;
  v94 = v93 ^ 0xA6164685 ^ v86;
  v95 = v91 ^ v93;
  v96 = (v76 ^ 0xDF84848B) - ((2 * (v76 ^ 0xDF84848B) + 1702605540) & 0xF8BE3FE6) - 1357055643;
  v97 = v96 ^ 0xFC5F1FF3;
  v98 = v91 ^ 0xEEBC9DE8;
  v99 = v90 + v92 - ((2 * (v90 + v92) - 249907826) & 0xE2D86D94) + 1777963409;
  v100 = ((2 * (v95 ^ v96)) & 0xDFF597CE ^ 0xC865948C) + (v95 ^ v96 ^ 0x1BC825A9);
  v101 = v90 - ((2 * v90 + 1513015396) & 0xF81A2C4E) - 1457227175;
  v102 = ((2 * ((v88 ^ 0x6276990E) + (v99 ^ 0xE93C935) + 1)) & 0xEB5FF9EE)
       + (((v88 ^ 0x6276990E) + (v99 ^ 0xE93C935) + 1) ^ 0xF5AFFCF7);
  v103 = v101 ^ 0xD6120ED ^ v99;
  v104 = (v89 ^ 0x66AE6049) + (v84 ^ 0x6276990E) + v90 + (v101 ^ 0xFC0D1627) + 545;
  v105 = ((2 * v104) & 0xBFFBF3EE) + (v104 ^ 0xDFFDF9F7);
  v106 = v102 - ((2 * v102 + 1712308914) & 0xAF1CD854) - 1969861245;
  v107 = v100 - ((2 * v100 + 2050567252) & 0xD44E8B18) + 658758582;
  v108 = v100 + v94 - ((2 * (v100 + v94) + 287644030) & 0x150290E4) + 320066865;
  v109 = ((2 * ((v95 ^ 0x86DF1BD) - 1464345007 + (v108 ^ 0x757EB78D))) & 0xFF7FD5EA)
       + (((v95 ^ 0x86DF1BD) - 1464345007 + (v108 ^ 0x757EB78D)) ^ 0xFFBFEAF5);
  v110 = v106 ^ (v90 - 2 * ((v90 + 756507698) & 0x578E6C2E ^ ((_BYTE)v90 + 2) & 4) - 2069508004);
  v111 = v107 ^ 0x6A27458C;
  v112 = v107 ^ 0xE0A60DFE ^ v108;
  v113 = 1692802850 - v105 - ((-221771098 - 2 * v105) & 0xD704339E);
  v114 = ((2 * ((v109 + 4199691) ^ v107)) & 0xFEFEBFFE ^ 0xD44E8B18) + ((v109 + 4199691) ^ v107 ^ 0x95581A73);
  v115 = v97 + v98 + v100 + v111 + 277206042 + v114;
  v116 = v103 + v102 - ((v106 | (1580710 - v102)) & 0x100180) - 1291329191;
  v117 = v116 - ((2 * v116 + 14813112) & 0xE270C5DE) - 240556341;
  v118 = v115 + v109;
  v119 = v112 - 2136926361 + v109;
  v120 = v117 ^ v113;
  v121 = ((2 * ((v117 ^ 0x17B6585D) + 2095818877)) & 0xBF3F42DC) + (((v117 ^ 0x17B6585D) + 2095818877) ^ 0x5F9FA16E);
  v122 = (v114 - v115 + 434547549) ^ v119;
  v123 = (v120 & 0x800000 ^ 0xDFDBD0F6) + 2 * (v120 & 0x800000);
  v124 = v123 + 1870102432;
  v125 = (v119 ^ 0x668E3AB2) - ((2 * (v119 ^ 0x668E3AB2) + 2044154106) & 0x43751670) + 514208693;
  v126 = ((v113 ^ 0x6B8219CF) & (-403860720 - v102)) + (v113 ^ 0x6B8219CF | (-403860720 - v102)) + v121 - 1604297070;
  v127 = v126 - ((2 * v126) & 0x49D72D44) + 619419298;
  v128 = v123 + 539242250;
  v129 = 791617932 - v123;
  if (((v121 - 1604297070) & v128) == 0)
    v129 = v124;
  v130 = v121 + 1359810044 + v129;
  v131 = v114
       + (v125 ^ 0xA1BA8B38)
       - v118
       - 1264842053
       - ((2 * (v114 + (v125 ^ 0xA1BA8B38) - v118 - 1264842053)) & 0xF85F15E8)
       - 63993100;
  v132 = v118 + (v119 ^ 0x9971C54D) + (v131 ^ 0x3D0750B);
  v133 = v102 + v105 + v110 + (v117 ^ 0xE849A7A2) + (v127 ^ 0xDB14695D);
  v134 = (v133 + 277464601 + ~((2 * v133 + 1463574252) & 0x49D72D44)) ^ v127;
  v135 = v120 & 0xFF7FFFFF ^ 0x7C344192 ^ v130;
  v136 = ((2 * ((v120 ^ 0x7C344192) + 982816712 + v135)) & 0xEB797FFE)
       + (((v120 ^ 0x7C344192) + 982816712 + v135) ^ 0x75BCBFFF);
  v137 = v125 ^ 0xC734B18A ^ v122;
  v138 = v137 + (v122 ^ 0x668E3AB2);
  v139 = ((2 * v127) & 0xDBDFCDBA ^ 0x50C38C8A) + (v127 ^ 0x478E29B8);
  v140 = v134 ^ 0x64703079;
  v141 = v138 - ((2 * v138 + 1843907412) & 0x9AF9FC38) + 74507206;
  v142 = v134 ^ (v139 + 970054465);
  v143 = (v132 - ((2 * v132 + 833141310) & 0x2FACD9DE) + 816499214) ^ v131;
  v144 = v141 ^ 0x4D7CFE1C;
  v131 ^= 0xF2A5D333;
  v145 = v143 ^ 0xE573BFDC ^ (v131 - 1480474082);
  v146 = ((2 * ((v142 ^ 0x9B8FCF86) + 1125757100)) & 0x477EF7E6) + (((v142 ^ 0x9B8FCF86) + 1125757100) ^ 0xA3BF7BF3);
  v147 = (v142 ^ 0x64703079) + (v134 ^ 0x39FFD728 ^ (v136 - ((2 * v136 + 222632902) & 0x44E0315C) - 1458395503)) + 1;
  v148 = v146 - v139;
  v149 = v146 - v139 + 746625674;
  v150 = (v141 ^ 0xD879685D ^ v143 ^ 0xE573BFDC) + (v145 ^ 0x6AFA69BE) + 1;
  v151 = ((2 * (v131 + 230013239)) & 0x6296F7E2) + ((v131 + 230013239) ^ 0xB14B7BF1);
  v152 = ((v146 - v139 - 1132809805) ^ 0xB5A8BC6D)
       + 909183701
       - 2 * (((v146 - v139 - 1132809805) ^ 0xB5A8BC6D) & 0x36310AD7 ^ (v146 - v139 - 1132809805) & 2);
  v153 = ((2 * ((v145 ^ 0x95059641) + 1125757100)) & 0xCB75AF7E) + (((v145 ^ 0x95059641) + 1125757100) ^ 0xE5BAD7BF);
  v154 = v135 + v139 + v136 + v140 + v146 + 250766121 + (v152 ^ 0x36310AD5);
  v155 = v139 - (v146 - v139) + 1130844549 + (v152 ^ 0x36310AD5);
  v156 = v155 - 2094697150 - ((2 * v155) & 0x64AEA84);
  v157 = ((v153 - v151 - 879713230) ^ 0xB5A8BC6D)
       + 1311511392
       - ((2 * ((v153 - v151 - 879713230) ^ 0xB5A8BC6D)) & 0x9C5826C0);
  v158 = (v137 + v131 + v144 + (v143 ^ 0x8F89D662) + v153 + 876896343 + (v157 ^ 0x4E2C1360)) ^ v157;
  v159 = v151 - (v153 - v151) - 482340677 + (v157 ^ 0x4E2C1360);
  v160 = v159 - 93569966 - ((2 * v159) & 0xF4D878A4);
  v161 = v156 & 0xC0329 ^ 0x40100;
  v162 = v152 ^ 0x36310AD5 ^ v154;
  v163 = ((v147 - 2094697150 - ((2 * v147) & 0x64AEA84)) ^ 0xB5A8BC6D ^ v156) + v162;
  v164 = v156 & 0xC0329 ^ 0x80229;
  v165 = (v150 - 93569966 - ((2 * v150) & 0xF4D878A4)) ^ 0xB5A8BC6D ^ v160;
  v166 = ((2 * ((v156 ^ 0x83257542) + 449420430)) & 0xBBBF1BAA) + (((v156 ^ 0x83257542) + 449420430) ^ 0xDDDF8DD5);
  v167 = v163 - 18168240 * ((v161 + v164) | (((327116149 - v148) & 0x20148135) + (v149 & 0x20148135)));
  v168 = (v160 ^ 0xFA6C3C52) - 2 * (((v160 ^ 0xFA6C3C52) + 449420430) & 0x47652D13 ^ v159 & 1) - 500250208;
  v169 = v158 & 0xB005E8D7 ^ 0x40040 | v158 & 0xB005E8D7 ^ 0xB001E897;
  v158 ^= 0x4E2C1360u;
  v170 = v165 + v158 + 700913152 - ((2 * (v165 + v158)) & 0x538E2C00);
  v171 = (v152 ^ 0x7A1E235E ^ (v167 - 2 * ((v167 + 768855792) & 0x36310ADF ^ v163 & 0xA) - 1543185979)) + v169;
  v172 = (v171 + 1341789993) ^ (v162 - 361895129);
  v173 = v167 + v166;
  v174 = v166 + v171;
  v175 = v170 ^ v157;
  v176 = v175 ^ (v158 - 361895129);
  v177 = ((2 * ((v168 ^ 0xC7652D12) + (v170 ^ 0x29C71600))) & 0xFFDEBFFE)
       + (((v168 ^ 0xC7652D12) + (v170 ^ 0x29C71600)) ^ 0x7FEF5FFF);
  v8[1370] = (v174 + 84) ^ 0x3C;
  v178 = (v172 ^ (v166 + 572551723)) + 1052647529 - ((2 * (v172 ^ (v166 + 572551723))) & 0x7D7C40D2);
  v179 = ((2 * ((v168 ^ 0xC7652D12) + (v175 ^ 0x1DF5263E))) & 0xFE67F6AE)
       + (((v168 ^ 0xC7652D12) + (v175 ^ 0x1DF5263E)) ^ 0xFF33FB57);
  v8[1632] = v177 - 127;
  v180 = v176 ^ v168;
  v8[1896] = (v173 + 27) ^ 0x3C;
  v181 = v173 - ((2 * v173 - 1191013928) & 0xEE6CE182) - 742934099;
  v182 = ((2 * ((v178 ^ 0x3EBE2069) + v172)) & 0xFEBCF77E) + (((v178 ^ 0x3EBE2069) + v172) ^ 0xFF5E7BBF);
  *(_BYTE *)(v9
           + (((((((_BYTE)v174 + 84) & 0xD0 ^ 0x40) + (((_BYTE)v174 + 84) & 0xD0 ^ 0x90)) & 0xF0) - 208) & 0xFFFFFC90 | 0x36FLL)) = v179 + 41;
  v8[1968] = v180 ^ 0xAC;
  v183 = ((2 * v181) ^ 0x11931E7D) + v172 + 1 - ((2 * (((2 * v181) ^ 0x11931E7D) + v172 + 1)) & 0x2ACE3C58) - 1788404180;
  v8[1537] = v176 ^ 0xBE;
  v8[1801] = v172 ^ 0x3C;
  v184 = ((2 * v181) & 0xFBDFFDBE ^ 0x7B4AC00A) + (v181 ^ 0xC24A9FDA);
  v176 ^= 0x1DF5263Eu;
  v185 = (STACK[0x460] & (2 * ((v180 ^ 0xDA900B2C) + v176))) + (((v180 ^ 0xDA900B2C) + v176) ^ 0xFFFEFEFF);
  v186 = v179 - 2 * v185;
  v8[1275] = v178 ^ 0x55;
  v187 = v177 - ((2 * v177 - 1724166236) & 0xBACECB50) + 704974202;
  v188 = ((2 * (v185 + 65793 + (v187 ^ 0x5D6765A8))) & 0xFE7FFAFE) + ((v185 + 65793 + (v187 ^ 0x5D6765A8)) ^ 0x7F3FFD7F);
  v189 = ((2 * (v174 - 2 * v182 + 1893171410)) & 0xCD5E9FFE) + ((v174 - 2 * v182 + 1893171410) ^ 0xE6AF4FFF);
  v190 = v176 + ((2 * v187) ^ 0x453134AF) - 1212295715 - ((2 * (v176 + ((2 * v187) ^ 0x453134AF) + 1)) & 0x6F7BABB8);
  v191 = ((2 * ((v181 ^ 0xF73670C1) + 10585153 + v182)) & 0x767EFAE4)
       + (((v181 ^ 0xF73670C1) + 10585153 + v182) ^ 0x3B3F7D72);
  v8[1706] = v181 ^ 0x39;
  v8[1442] = v187 ^ 0xEC;
  v8[1873] = v186 + 39;
  v8[1611] = v183 ^ 0x10;
  v192 = v188 + v186;
  v8[2137] = (v189 + 1) ^ 0x3C;
  v8[1347] = v190 ^ 0x5C;
  v8[1778] = v188 + 1;
  v193 = v189 + v191;
  v8[2042] = (v191 - 114) ^ 0x3C;
  v194 = ((2 * ((v187 ^ 0x15F4746C) - 1491885971)) & 0xDD81BF7C) + (((v187 ^ 0x15F4746C) - 1491885971) ^ 0x6EC0DFBE);
  v195 = ((v184 - ((2 * v184 + 306660124) & 0x2ACE3C58) - 1098203206) ^ v183) - v193;
  v196 = v192 - ((2 * v192 + 915436812) & 0xC889EAE4) - 7524360;
  v197 = v194 + v186;
  v198 = 624465130 - v197 - ((1542306350 - 2 * v197) & 0x6E836FA6);
  v199 = v184 + v195 + 464762310;
  v8[1588] = v198 ^ 0x53;
  v200 = (v190 ^ (v194 - 1858133950) ^ 0xB7BDD5DC) + (v196 ^ 0x9BBB0A8D) + 1;
  v201 = ((2 * v200) & 0xB9D917FE) + (v200 ^ 0xDCEC8BFF);
  v202 = v201 + v194 - ((2 * (v201 + v194) + 1755654278) & 0x522FC6FE);
  v203 = v202 - 580225086;
  v204 = v191 - v184 - v193;
  v8[1947] = (v193 - 19) ^ 0x3C;
  v205 = v195 + 464762310 + v204 - ((2 * (v195 + 464762310 + v204) + 1410408828) & 0x9497FEEC) + 1951698996;
  v8[1421] = (v195 + 19) ^ 0x3C;
  v8[1252] = 61 - v202;
  v206 = ((v204 - 1114919311) ^ (v193 - 137402387))
       - 1505652445
       - ((2 * ((v204 - 1114919311) ^ (v193 - 137402387))) & 0x4C832246);
  v8[1683] = v196 ^ 0xF2;
  v8[2114] = v201 - 127;
  v207 = v198 ^ v196;
  v208 = v206 ^ (v199 + 362841051);
  v8[1516] = (v199 - 37) ^ 0x3C;
  v209 = ((2 * v208) & 0xD6BB66EA ^ 0xC0082442) + (v208 ^ 0x8F7BA554);
  v210 = v201 - v197 - 1861594856;
  v211 = v204 - v209;
  v212 = ((2 * ((v206 ^ 0xA6419123) - (v204 - v209) + 1381934563)) & 0xF7FF3F2E)
       + (((v206 ^ 0xA6419123) - (v204 - v209) + 1381934563) ^ 0x7BFF9F97);
  v8[1326] = v208 ^ 0x1D;
  v8[1852] = (v204 + 113) ^ 0x3C;
  v8[1924] = v210 ^ 0x36;
  v213 = ((2 * (v203 ^ v207)) & 0xFBFFFBB2 ^ 0x70EA49B0) + (v203 ^ v207 ^ 0x458ADB05);
  v214 = v213 + v197;
  v215 = ((2 * ((v207 ^ 0xD30542A1) + 256978137 + v214)) & 0x718FFBD6)
       + (((v207 ^ 0xD30542A1) + 256978137 + v214) ^ 0x38C7FDEB);
  v8[1757] = (v212 + 105) ^ 0x3C;
  v216 = ((2 * ((v210 ^ 0x6DB147B6) + 952630763 - v215)) & 0x7DD5FE7E)
       + (((v210 ^ 0x6DB147B6) + 952630763 - v215) ^ 0x3EEAFF3F);
  v8[1231] = v205 ^ 0xFC;
  v217 = (v205 ^ 0xA7FAB8C0) - v212;
  v8[2019] = v213 - 89;
  v8[1493] = v215 - 107;
  v8[1398] = -89 - v214;
  v218 = v209 - v217;
  v219 = v217 - ((2 * v217 - 766471380) & 0xD54BF91A) + 1406027299;
  v8[1662] = (v211 + 29) ^ 0x3C;
  v220 = v211 - v209 - (v209 - v217) - ((2 * (v211 - v209 - (v209 - v217)) + 199221356) & 0x10DF0B34) + 1314878928;
  v221 = v213 - v216;
  v222 = v212
       + 1637877852
       + (v220 ^ 0x886F859A)
       + 1710814358
       - ((2 * (v212 + 1637877852 + (v220 ^ 0x886F859A))) & 0xCBF1E92C);
  v8[2093] = (v218 + 92) ^ 0x3C;
  v223 = 1936542810
       - (v213
        + v214
        + 2102883317
        + v213
        - v216)
       - ((22914638 - 2 * (v213 + v214 + 2102883317 + v213 - v216)) & 0x57CF266);
  v8[1208] = v223 ^ 0xB3;
  v8[1567] = (v212 + 92) ^ 0x3C;
  v8[1303] = v215 - 120;
  v224 = v216 - 2 * ((v216 + 775793344) & 0x4D9285C5 ^ v216 & 5) + 2077241472;
  v225 = ((2 * (v218 - 753984164 + (v222 ^ 0x65F8F496))) & 0x96F2FFFC)
       + ((v218 - 753984164 + (v222 ^ 0x65F8F496)) ^ 0x4B797FFE);
  v8[1734] = (v216 - 2 * ((v216 - 64) & 0xC5 ^ v216 & 5) + 0x80) ^ 0x40;
  v8[1472] = v220 ^ 0xA6;
  v8[1998] = v219 ^ 0xB1;
  v226 = v215
       - 1529370104
       + (v223 ^ 0x82BE7933)
       + 488133676
       - ((2 * (v215 - 1529370104 + (v223 ^ 0x82BE7933))) & 0x3A30A858);
  v8[1829] = v221 + 78;
  v227 = ((v223 & 0x6DD3CEF0 ^ 0x924830 | v223 & 0x6DD3CEF0 ^ 0x6D4186C0) + 1186115858 + v225) ^ v220;
  v228 = ((2 * (v221 - 78155314 + (v226 ^ 0x1D18542C))) & 0xCFCFF162)
       + ((v221 - 78155314 + (v226 ^ 0x1D18542C)) ^ 0xE7E7F8B1);
  v229 = v227 ^ v222;
  v230 = v229 ^ 0x35B9AB6;
  v231 = (v228 + 404227919) ^ v223;
  v8[1975] = v231 ^ 9;
  v232 = v231 ^ v226;
  v8[2070] = v232 ^ 0x25;
  v233 = (v219 ^ 0xCB73C3DB) - ((2 * (v219 ^ 0xCB73C3DB) + 376724148) & 0x2B3DBF7A) + 1624837399;
  v8[1377] = v229 ^ 0x8A;
  v234 = (v224 ^ 0xEC44BA96) - ((2 * (v224 ^ 0xEC44BA96) - 1770759500) & 0xBC88C744) + 696160508;
  v8[1903] = (v225 - 30) ^ 0x3C;
  v8[1639] = v228 - 81;
  v8[1544] = ((v224 ^ 0x96) - ((2 * (v224 ^ 0x96) - 76) & 0x44) - 4) ^ 0x22;
  v235 = v227 ^ 0x66A36E20;
  v8[1282] = v227 ^ 0x1C;
  v236 = (((v232 ^ 0x9E21920) & 0x2BF75F24 ^ 0x28805F04) + ((v232 ^ 0x9E21920) & 0x2BF75F24 ^ 0x3770020) - 699841308) | 0x705CD6FA;
  v237 = v235 - ((2 * v235 + 1207141678) & 0x7D44CCA0) + 580659431;
  v238 = v236 - v225 - 216173096 + v230 - 1799987580 - ((2 * (v236 - v225 - 216173096 + v230)) & 0x296CBD08);
  v8[1808] = v233 ^ 0x81;
  v239 = (v233 ^ 0xEA5D68EB)
       - 1125616897
       + v225
       - ((2 * ((v233 ^ 0xEA5D68EB) - 1125616897 + v225)) & 0xC963137E)
       + 1689356735;
  v240 = ((2 * ((v238 ^ 0x94B65E84) - 1341789993)) & 0x15C5F17E) + (((v238 ^ 0x94B65E84) - 1341789993) ^ 0x8AE2F8BF);
  v241 = (v232 ^ 0x716AC6A5) - v228 - ((2 * ((v232 ^ 0x716AC6A5) - v228) + 64080650) & 0xD76998DA) + 1839051250;
  v8[1618] = ((v233 ^ 0xEB) - 1 + v225 - ((2 * ((v233 ^ 0xEB) - 1 + v225)) & 0x7E) - 65) ^ 0x83;
  v8[1449] = v228 - 52;
  v242 = (v231 ^ 0x6C729289) - ((2 * (v231 ^ 0x6C729289) - 940341970) & 0xC65861DA) - 953814140;
  v243 = ((2 * (v238 ^ v237)) & 0xBFFBB7FA ^ 0x142831A8) + (v238 ^ v237 ^ 0x75E9E329);
  v8[1785] = v242 ^ 0x6D;
  v8[1354] = ((v234 ^ 0xF4) + 76 + v228 - ((2 * ((v234 ^ 0xF4) + 76 + v228)) & 0x4E) - 89) ^ 0x27;
  v244 = v241 ^ ((v234 ^ 0x2187D4F4)
               + 544864844
               + v228
               - ((2 * ((v234 ^ 0x2187D4F4) + 544864844 + v228)) & 0x27E9334E)
               + 334797223);
  v245 = v243 - ((2 * v243 + 44072092) & 0x5C81E6C6) - 1349439055;
  v8[1187] = v238 ^ 0xB8;
  v246 = v238 ^ v239;
  v8[1880] = v241 ^ 0xED;
  v8[1713] = (v225 - 1) ^ 0x3C;
  v247 = v228 - ((2 * v228 + 448620716) & 0x1CF91276) + 198917521;
  v248 = v241 ^ v242;
  v249 = ((2 * v248) & 0xEFBAD71C ^ 0x130D100) + (v248 ^ 0xFF45970E);
  v250 = (v241 ^ 0x6BB4CC6D) + (v244 ^ 0x87BFAA35);
  v251 = ((1051705777 - v243) & 0x39AB6EF9) + v240 + 1964836674 + (v245 & 0x39AB6EF9 ^ 0x28006261);
  LOBYTE(v152) = ((2 * (v251 + (v246 ^ 0xC4))) & 0xF0) + ((v251 + (v246 ^ 0xC4)) ^ 0xF8);
  v252 = v245 ^ 0x2E40F363;
  v253 = -996515102 - (((v238 ^ 0x6B49A17B) + 1341789993) & 0x56C693F2) - ((v240 + 1964836673) & 0x56C693F2);
  v254 = v249 - ((2 * v249 - 756982406) & 0xAD8620B0) - 1070350571;
  v255 = v252 + (v246 ^ 0xF007D73B) - ((2 * (v252 + (v246 ^ 0xF007D73B))) & 0x75250216) - 1164803829;
  v256 = (v220 & 0x2E ^ 8 | v220 & 0x2E ^ 0x26) ^ 0x2E ^ v253;
  v8[2049] = v237 ^ 0x6C;
  v8[1259] = v247 ^ 0xBB;
  v257 = (v254 ^ 0xD6C31058)
       + (v244 ^ 0x784055CA)
       - 642848010
       - ((2 * ((v254 ^ 0xD6C31058) + (v244 ^ 0x784055CA))) & 0xB35DD5EC);
  v8[1428] = v255 ^ 0x37;
  v8[1954] = v152 - ((2 * v152 + 16) & 0x78) + 68;
  v258 = v249 - 2 * ((v249 + 302989658) & 0x1601E7FF ^ v248 & 1) + 672213336;
  v8[1523] = ((((v249 - ((2 * v249 + 122) & 0xB0) + 21) & 0xBC ^ 0x18) + ((66 - v249) & 0xBC)) | 0x20) ^ (v225 + 9) ^ 0x80;
  v8[1595] = (v249 - ((2 * v249 + 122) & 0xB0) + 21) ^ 0xD8;
  v8[2121] = v257 ^ 0x76;
  v259 = v250 + (v258 ^ 0x69FE1801);
  v8[1690] = v250 + 81;
  v8[1859] = (v243 - ((2 * v243 - 100) & 0xC6) - 79) ^ 0x5F;
  v260 = ((2 * (v249 - 1755309975 + (v257 ^ 0x87C621E5))) & 0x2FCAFFF6)
       + ((v249 - 1755309975 + (v257 ^ 0x87C621E5)) ^ 0x17E57FFB);
  v261 = STACK[0x6D0];
  v262 = (v225 - 1409720807 + v256 + 776008547 - ((2 * (v225 - 1409720807 + v256)) & 0x5C81E6C6)) ^ v245 ^ v255;
  v263 = (v255 ^ 0xE4FA4A18) + v243;
  v264 = v243 - ((2 * v243 + 1407033814) & 0xC1F7B4D6) + 183151446;
  v265 = v254 ^ v247 ^ v257;
  v266 = ((2 * (v251 + (v264 ^ 0x1F042594) + v252)) & 0x6EFFEEEA)
       + ((v251 + (v264 ^ 0x1F042594) + v252) ^ LODWORD(STACK[0x45C]));
  v267 = ((2 * (v259 - 374253614 + (v257 ^ 0xD9AEEAF6))) & 0xB5FFFFE6)
       + ((v259 - 374253614 + (v257 ^ 0xD9AEEAF6)) ^ LODWORD(STACK[0x458]));
  v268 = (v258 ^ (66234019 - v249 - ((467762506 - 2 * v249) & STACK[0x454]))) & 0x4FFA1729;
  v8[1333] = v262 ^ 0x24;
  v8[2026] = v265 ^ 6;
  v269 = (v262 ^ 0xE4FA4A18) - v263;
  v270 = ((2 * ((v265 ^ 0xDF79B886) + 400916475 - v260)) & 0xDFFFDADC)
       + (((v265 ^ 0xDF79B886) + 400916475 - v260) ^ 0xEFFFED6E);
  v8[1764] = (v266 - 117) ^ 0x3C;
  v8[1500] = v267 - 115;
  v8[1405] = v258 ^ 0x7E;
  v8[1238] = (v263 - 6) ^ 0x3C;
  v271 = ((2 * (v263 + 792700922)) & 0x6BB8FD7E ^ 0x4B08985C) + ((v263 + 792700922) ^ 0x58783291);
  v272 = v268 + v266 + v263 + v271;
  v273 = v269 + (v264 ^ 0xF99BDCEC);
  v274 = v269 - v271;
  v275 = v274 + v273;
  v8[1931] = v260 - 123;
  v276 = v274 + v273 + 587527969;
  v277 = v271 - ((2 * v271 + 108524460) & 0x63BBE0C) + 1381619932;
  v8[1669] = v264 ^ 0x57;
  v278 = (((v260 - 400916475) ^ 0x6DA44C2E) + 309648589 - ((2 * ((v260 - 400916475) ^ 0x6DA44C2E)) & 0x24E9B99A)) ^ 0x1274DCCD;
  v279 = ((2 * (v260 + v267 - 1927643118 + v278)) & 0xFBF71FB6) + ((v260 + v267 - 1927643118 + v278) ^ 0x7DFB8FDB);
  v280 = ((2 * (v278 - 2061993835)) & 0xFB35F9F0) + ((v278 - 2061993835) ^ 0xFD9AFCF8);
  v8[1741] = v280 - 120;
  v281 = v270 + (v258 ^ 0x8F61E179);
  v8[2100] = (v274 + 48) ^ 0x3C;
  v8[1574] = (v272 - 99) ^ 0x3C;
  v8[1310] = v279 - 91;
  v282 = ((2 * (v273 - 792700922 + (v277 ^ 0x31DDF06))) & 0x5EFAE77E)
       + ((v273 - 792700922 + (v277 ^ 0x31DDF06)) ^ 0x2F7D73BF);
  v283 = v282 + (v277 ^ 0x2C1B07A9);
  v8[1836] = v270 - v280 + 10;
  v8[1215] = v281 + 18;
  v284 = v281 - 708290838 + v270 - v280;
  v285 = v275 + v283 + 428201739;
  v286 = v279 - 908641449 + v284;
  v8[1479] = (v273 + 6) ^ 0x3C;
  v287 = v285 + 1496541672;
  v8[2005] = v277 ^ 0x3A;
  v288 = v281 - 1861050452 + v280;
  v289 = v283 + 428201739 + v276;
  v290 = ((v285 + 155282284) ^ (v272 + 556325298 + v276))
       + 1016245626
       - ((2 * ((v285 + 155282284) ^ (v272 + 556325298 + v276))) & 0x79255AF4);
  v291 = v288 - 329879567 + ((v280 + 40174344) ^ 0x2F06D8AF);
  v292 = v291 + v284;
  v8[1910] = (v289 + 75) ^ 0x3C;
  v293 = v282 - ((2 * v282 + 783053622) & 0x5CC3C52C) + 1169693745;
  *(_BYTE *)(v9 + (((v290 & 0xC8 ^ 8) + (v290 & 0xC8 ^ 0xC0)) & 0xF8)) = v290 ^ 0x46;
  v8[1646] = v292 - 81;
  v294 = ((v292 - 590425809) ^ v286) + 226096600 - ((2 * ((v292 - 590425809) ^ v286)) & 0x1AF3EBB0);
  v8[1551] = v291 + 125;
  v8[2077] = v294 ^ 0x58;
  v295 = (v290 ^ 0x3C92AD7A) - v289 - ((2 * ((v290 ^ 0x3C92AD7A) - v289) - 490293002) & 0xE437AC28) + 1669280399;
  v8[1982] = v288 - 56;
  LOBYTE(v282) = ((((v289 + 91) & 0x9F ^ 0x9F) + ((v289 + 91) & 0x9F)) ^ 0x3C) + ((v293 ^ 0x10 | (4 - v282)) & 0x19);
  v296 = v287 + v283 - ((2 * (v287 + v283) + 18946954) & 0x14DE8498) - 1962946543;
  v8[1815] = (v283 + 65) ^ 0x3C;
  v8[1289] = (v282 - ((2 * v282) & 0x2C) - 106) ^ v293 ^ 0x80;
  v297 = ((2 * v296) & 0xF3F677F2 ^ 0x52245650) + (v296 ^ 0xD6E914D5);
  v8[1194] = v295 ^ 0x28;
  v298 = v287 + (v293 ^ 0x2E61E296) + v297;
  LOBYTE(v293) = v298 + v289;
  v299 = ((2 * (v291 + 1909118764 + v292)) & 0xB5FDFEAE ^ 0xF8DA80) + ((v291 + 1909118764 + v292) ^ 0xFF839237);
  v300 = v298 + v289 + v297;
  v301 = v288 + v292 - 1565723268 + v299;
  v302 = v292 - 436247557 + v301;
  v8[1625] = v296 ^ 0x10;
  v8[1361] = v299 + 41;
  v8[1456] = v302 + 3;
  v303 = (v294 ^ 0xD79F5D8) - v292 - ((2 * ((v294 ^ 0xD79F5D8) - v292) + 1973550894) & 0x47189DA2) - 1638052248;
  v8[1792] = v301 + 36;
  v304 = 2121404917 - v289 - ((712702484 - 2 * v289) & 0x526929D6);
  v305 = ((2 * ((v304 ^ 0xD6CB6B14) - 267122798 + v297)) & 0xEFE7EB7E)
       + (((v304 ^ 0xD6CB6B14) - 267122798 + v297) ^ 0xF7F3F5BF);
  v8[1720] = (v293 - 127) ^ 0x3C;
  v306 = -1985288630 - v292 - ((1029062732 - 2 * v292) & 0x55FF8C48);
  v307 = v302 + v299;
  v8[1887] = v303 ^ 0x51;
  v8[2056] = (v298 - 117) ^ 0x3C;
  v308 = (STACK[0x450] & (2 * (v299 + (v306 ^ 0xD50039DB) + 252724276)))
       + ((v299 + (v306 ^ 0xD50039DB) + 252724276) ^ 0xFFEFFBFF);
  v8[1530] = (v300 + 83) ^ 0x3C;
  v8[2128] = v308 - 127;
  v309 = v305 + (v295 ^ 0x2BAE76D1);
  v310 = ((2 * v304) & 0x17BDB692 ^ 0x1509B212) + (v304 ^ 0xE57B0644);
  v311 = v300 - v310;
  v312 = v308 + 1451410663 + (v303 ^ 0xFA39EE14);
  v8[1697] = v312 - 102;
  v313 = ((2 * v306) & 0x7F7FFAF6 ^ 0x5A5D1A84) + (v306 ^ 0x52D172B9);
  v314 = v312 - v313;
  v315 = v300 - v310 + 76214700;
  v8[1435] = (v305 + 65) ^ 0x3C;
  v8[1602] = v313 + 5;
  v8[1266] = v307 + 119;
  v8[1866] = v304 ^ 0x31;
  v316 = v307 - v313 - ((2 * (v307 - v313) + 1846191332) & 0x63D0FFDA) + 686674527;
  v317 = v311 + LODWORD(STACK[0x464]);
  v318 = (v317 ^ (v310 - 64147720 + v305)) - 1507207951 - ((2 * (v317 ^ (v310 - 64147720 + v305))) & 0x4C53A9E2);
  v319 = v309 - v310;
  v320 = v316 ^ (v313 + 1078986374 + v308);
  v321 = v318 ^ (v310 - 1259970588);
  v8[1961] = (v309 + 65) ^ 0x3C;
  v322 = v320 ^ (v313 + 17120690);
  v323 = ((2 * (v317 + (v321 ^ 0x59D62B0E) + 1)) & 0x6F7DE77E) + ((v317 + (v321 ^ 0x59D62B0E) + 1) ^ 0xB7BEF3BF);
  v324 = ((2 * ((v316 ^ 0x31E87FED) + (v322 ^ 0xCE178012) + 1)) & 0xEEDDFEEE)
       + (((v316 ^ 0x31E87FED) + (v322 ^ 0xCE178012) + 1) ^ 0x776EFF77);
  v325 = v314 - ((2 * v314 + 1853897344) & 0xB926407E) + 332610943;
  *(_BYTE *)(v9 + ((-775285296 * ((v315 & 0xE0CBAF5) + ((192220755 - v311) & 0xE0CBAF5))) | 0x8CLL)) = (v323 + 65) ^ 0x3C;
  v8[1938] = v320 ^ 0x6D;
  v8[2033] = v324 + 9;
  v8[1245] = v318 ^ 0xCD;
  v8[1507] = v325 ^ 0xBF;
  v8[1412] = v322 ^ 0x6D;
  v326 = v321 ^ (v319 - 505559499);
  v8[1771] = (v319 + 53) ^ 0x3C;
  v327 = v326 ^ 0xA629D4F1;
  v328 = ((2 * ((v326 ^ 0x59D62B0E) + 1212222530 + v323)) & 0x7F6BD5B8)
       + (((v326 ^ 0x59D62B0E) + 1212222530 + v323) ^ 0x3FB5EADC);
  v8[1676] = v321 ^ 0xCD;
  v329 = ((2 * (v325 ^ v322)) & 0x7BDBFBEA ^ 0x5AD2BBA0) + (v325 ^ v322 ^ 0xD096A227);
  v330 = v324 - v329;
  v331 = ((2 * ((v328 - 1068886748) ^ v318)) & 0xEFBFCDB8 ^ 0x4C1389A0) + ((v328 - 1068886748) ^ v318 ^ 0x51F6322D);
  v332 = ((2 * ((v330 - 964755842) ^ v320)) & 0xF779F5E0 ^ 0x6350F5C0) + ((v330 - 964755842) ^ v320 ^ 0xCA54851D);
  v333 = v329 - v332 - ((2 * (v329 - v332) + 2073950710) & 0xCC5FE4CE) + 603909986;
  v334 = v332 - v330;
  LOBYTE(v311) = v327 - v331;
  v335 = v331 - v328;
  v8[2107] = (v328 + 107) ^ 0x3C;
  v336 = v330 - ((2 * v330 + 674753418) & 0x6BDDF314) + 168488783;
  v8[1317] = v333 ^ 0xE7;
  v337 = ((2 * ((v321 ^ 0xA629D4F1) - v328 - v331 + 704174705)) & 0x7DD6F6E8)
       + (((v321 ^ 0xA629D4F1) - v328 - v331 + 704174705) ^ 0x3EEB7B74);
  v8[2012] = (v331 - v328) ^ 0x3C;
  v338 = ((v327 - v331 - 136321316) ^ (v328 - 840496021))
       + 1599797223
       - ((2 * ((v327 - v331 - 136321316) ^ (v328 - 840496021))) & 0xBEB5EFCE);
  v339 = (v322 ^ 0x31E87FED) + (v336 ^ 0xCA110675) - v332 - 71501071;
  v340 = ((2 * v339) & 0x37EE5FB2) + (v339 ^ 0x9BF72FD9);
  v8[1843] = v336 ^ 0xA;
  v341 = v338 ^ 0x5F5AF7E7;
  v342 = v327 - v328 - ((2 * (v327 - v328) - 2118688180) & 0x8F1324E8) - 2006629478;
  v8[1748] = v334 + 18;
  v343 = ((v335 + 1224460874) ^ 0x5F5AF7E7 ^ v338)
       - ((2 * ((v335 + 1224460874) ^ 0x5F5AF7E7 ^ v338)) & 0x4132CA30)
       - 1600559848;
  LOBYTE(v338) = (v311 - 36) ^ 0x3C;
  v8[1222] = v340 - 89;
  LOBYTE(v311) = (v337 - 116) ^ 0x3C;
  v344 = ((2 * (v337 + (v342 ^ 0x47899274) - 1055619956 + v341)) & 0xFB67E6F6)
       + ((v337 + (v342 ^ 0x47899274) - 1055619956 + v341) ^ 0x7DB3F37B);
  v8[1581] = v338;
  v345 = v335 - v344 - ((2 * (v335 - v344) - 1923122294) & 0xA4051E76) + 414338304;
  v346 = v343 ^ v342;
  v8[1486] = v311;
  v347 = v333 ^ v336 ^ 0x53C10BED;
  v348 = (v333 ^ 0x662FF267)
       + v334
       + 1055509724
       - 1829269648
       - ((2 * ((v333 ^ 0x662FF267) + v334 + 1055509724)) & 0x25EF1EE0);
  v349 = (v347 ^ (v334 + 1055509724)) - ((2 * (v347 ^ (v334 + 1055509724))) & 0xD1EC960E) + 1760971527;
  v350 = ((2 * (v340 + v347 + 1678299175 + (v348 ^ 0x92F78F70))) & 0xD1B4F8FE)
       + ((v340 + v347 + 1678299175 + (v348 ^ 0x92F78F70)) ^ 0xE8DA7C7F);
  v351 = v334 - v350 - ((2 * (v334 - v350) + 1334350518) & 0x705E2A9C) + 1609785001;
  v352 = v349 ^ v348;
  v8[2084] = v349 ^ v348 ^ 0xF7;
  v8[1917] = v343 ^ 0x24;
  v8[1558] = v351 ^ 0xCE;
  v353 = v343 ^ 0xF29BEA23 ^ v345;
  v354 = ((2 * (v353 + (v346 ^ 0xE710F76C))) & 0xA89BFD1A) + ((v353 + (v346 ^ 0xE710F76C)) ^ 0xD44DFE8D);
  v8[1653] = v349 ^ 0x87;
  v355 = ((2 * (v351 ^ v349)) & 0xEFFBFEB8 ^ 0xA1B2BC90) + (v351 ^ v349 ^ 0xA724A115);
  v356 = v354 + v344 - ((2 * (v354 + v344) + 469507056) & 0x2BD1933C);
  v357 = ((2 * ((v352 ^ 0xFA01C477) + 134348964 + v355)) & 0xA3FBF9FE)
       + (((v352 ^ 0xFA01C477) + 134348964 + v355) ^ 0xD1FDFCFF);
  v8[1822] = v345 ^ 7;
  v8[1989] = v350 + 1;
  v8[1296] = (v344 - 123) ^ 0x3C;
  v358 = v357 + v350 - ((2 * (v357 + v350) + 172952836) & 0x360B9114) + 1613582092;
  v8[1391] = v346 ^ 0x50;
  v359 = ((2 * (((v356 + 1139201942) ^ 0x95E8C99E) - 1113796401)) & 0xCCFF7ABC)
       + ((((v356 + 1139201942) ^ 0x95E8C99E) - 1113796401) ^ 0x667FBD5E);
  LODWORD(STACK[0x6C8]) = ((v353 - 1719648251 + v359 + 669) ^ 0xFECFFED7)
                        + 1811799536
                        + ((2 * (v353 - 1719648251 + v359 + 669)) & 0xFD9FFDAE);
  v360 = LODWORD(STACK[0x6F8]) ^ (222 * ((STACK[0x50C] & 1) == 0));
  LODWORD(STACK[0x6BC]) = v354 - 874753305;
  LODWORD(STACK[0x6E4]) = v359 - 1107656712;
  LODWORD(STACK[0x6F8]) = v355
                        + 431756058
                        + (((v358 ^ 0x1B05C88A) - 1113796401) ^ 0xF5FFF5BF)
                        + 1073270382
                        + ((2 * ((v358 ^ 0x1B05C88A) - 1113796401)) & 0xEBFFEB7E);
  return ((uint64_t (*)(void))(*(_QWORD *)(v261 + 8 * v360) - 4))();
}

uint64_t sub_247825008@<X0>(unsigned int a1@<W0>, uint64_t a2@<X2>, uint64_t a3@<X5>, int a4@<W8>)
{
  int v4;
  int v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  unsigned int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  unint64_t v14;
  int v15;
  uint64_t v16;

  v11 = (v4 + 1765) | 0x80;
  v12 = (v5 - v6 + LODWORD(STACK[0x504])) * a4;
  v13 = v11 + v12 - 943030578;
  *(_BYTE *)(v8 + v13 % (((641 - v12) | (v12 + 382)) & a1)) = *(_BYTE *)(v8
                                                                       + v13
                                                                       - ((((v13 * (unint64_t)v9) >> 32)
                                                                                       + ((v13 - ((v13 * (unint64_t)v9) >> 32)) >> 1)) >> 9)
                                                                       * a1) ^ 0x80;
  v14 = v11 ^ 0x45u;
  v15 = v10 - LODWORD(STACK[0x500]);
  LODWORD(STACK[0x4FC]) = v6;
  v16 = *(_QWORD *)(v7 + 8 * ((1529 * (v15 + v6 == 964428458)) ^ v11));
  STACK[0x6A0] = v14;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t, _QWORD))(v16 - v14 + 2793))(LODWORD(STACK[0x6BC]), 3389471699, a2, v8, LODWORD(STACK[0x6F8]), a3, 431, LODWORD(STACK[0x6E0]));
}

uint64_t sub_247825104(int a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  unsigned int v13;
  int v14;
  unsigned int v15;
  int v16;
  int v18;
  unsigned int v19;
  unsigned int v20;
  int v21;
  unsigned int v22;
  unsigned int v23;
  int v24;
  unsigned int v25;
  int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  int v31;
  int v32;
  int v33;
  unsigned int v34;
  unsigned int v35;
  int v36;
  int v37;
  unsigned int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  unsigned int v43;
  unsigned int v44;
  unsigned int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  unsigned int v49;
  int v50;
  unsigned int v51;
  int v52;
  int v53;
  int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  int v61;
  int v62;
  unsigned int v63;
  int v64;
  int v65;
  unsigned int v66;
  unint64_t v67;
  unsigned int v68;
  unsigned int v69;
  int v70;
  unsigned int v71;
  int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  int v77;
  int v78;
  int v79;
  int v80;
  int v81;
  unsigned int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  int v93;
  unsigned int v94;
  unsigned int v95;
  int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  unsigned int v102;
  unsigned int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  unsigned int v107;
  unsigned int v108;
  int v109;
  unsigned int v110;
  unsigned int v111;
  int v112;
  unsigned int v113;
  unsigned int v114;
  int v115;
  unsigned int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  int v124;
  int v125;
  int v126;
  int v127;
  int v128;
  unsigned int v129;
  int v130;
  int v131;
  int v132;
  int v133;
  int v134;
  unsigned int v135;
  int v136;
  unsigned int v137;
  int v138;
  int v139;
  int v140;
  unsigned int v141;
  int v142;
  unsigned int v143;
  unsigned int v144;
  int v145;
  unsigned int v146;
  unsigned int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  unsigned int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  unsigned int v156;
  unsigned int v157;
  int v158;
  unsigned int v159;
  unsigned int v160;
  int v161;
  unsigned int v162;
  int v163;
  unsigned int v164;
  unsigned int v165;
  int v166;
  unsigned int v167;
  int v168;
  int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  int v173;
  unsigned int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  unsigned int v179;
  unsigned int v180;
  int v181;
  unsigned int v182;
  int v183;
  unsigned int v184;
  unsigned int v185;
  int v186;
  unsigned int v187;
  unsigned int v188;
  int v189;
  int v190;
  unsigned int v191;
  int v192;
  int v193;
  int v194;
  int v195;
  int v196;
  unsigned int v197;
  unsigned int v198;
  int v199;
  int v200;
  int v201;
  int v202;
  unsigned int v203;
  int v204;
  unsigned int v205;
  int v206;
  int v207;
  int v208;
  int v209;
  unsigned int v210;
  unsigned int v211;
  int v212;
  int v213;
  unsigned int v214;
  int v215;
  unsigned int v216;
  unsigned int v217;
  int v218;
  unsigned int v219;
  int v220;
  int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  int v229;
  unsigned int v230;
  unsigned int v231;
  unsigned int v232;
  int v233;
  unsigned int v234;
  unsigned int v235;
  int v236;
  int v237;
  int v238;
  unsigned int v239;
  unsigned int v240;
  int v241;
  unsigned int v242;
  unsigned int v243;
  unsigned int v244;
  unsigned int v245;
  unsigned int v246;
  int v247;
  unsigned int v248;
  int v249;
  int v250;
  unsigned int v251;
  unsigned int v252;
  unsigned int v253;
  int v254;
  unsigned int v255;
  unsigned int v256;
  unsigned int v257;
  unsigned int v258;
  unsigned int v259;
  unsigned int v260;
  int v261;
  int v262;
  unsigned int v263;
  unsigned int v264;
  int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  unsigned int v271;
  unsigned int v272;
  int v273;
  unsigned int v274;
  unsigned int v275;
  unsigned int v276;
  unsigned int v277;
  unsigned int v278;
  int v279;
  unsigned int v280;
  unsigned int v281;
  int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  int v289;
  int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  int v295;
  int v296;
  int v297;
  int v298;
  unsigned int v299;
  int v300;
  unsigned int v301;
  unsigned int v302;
  int v303;
  unsigned int v304;
  int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  unsigned int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  int v315;
  int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  unsigned int v320;
  int v321;
  unsigned int v322;
  int v323;
  unsigned int v324;
  unsigned int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  unsigned int v331;
  unsigned int v332;
  int v333;
  unsigned int v334;
  unsigned int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  unsigned int v342;
  int v343;
  int v344;
  unsigned int v345;
  unsigned int v346;
  int v347;
  int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  int v353;
  unsigned int v354;
  unsigned int v355;
  int v356;
  unsigned int v357;
  unsigned int v358;
  int v359;
  unsigned int v360;
  int v361;
  unsigned int v362;
  unsigned int v363;
  unsigned int v364;
  unsigned int v365;
  unsigned int v366;
  int v367;
  int v368;
  unsigned int v369;
  unsigned int v370;
  unsigned int v371;
  unsigned int v372;
  unsigned int v373;
  unsigned int v374;
  int v375;
  int v376;
  unsigned int v377;
  unsigned int v378;
  int v379;
  int v380;
  unsigned int v381;
  int v382;
  int v383;
  unsigned int v384;
  unsigned int v385;
  unsigned int v386;
  int v387;
  unsigned int v388;
  int v389;
  int v390;
  int v391;
  unsigned int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  unsigned int v397;
  unsigned int v398;
  int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  int v413;
  unsigned int v414;
  int v415;
  int v416;
  int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  int v421;
  unsigned int v422;
  int v423;
  int v424;
  unsigned int v425;
  unsigned int v426;
  unsigned int v427;
  unsigned int v428;
  int v429;
  unsigned int v430;
  int v431;
  unsigned int v432;
  unsigned int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  unsigned int v438;
  unsigned int v439;
  unsigned int v440;
  unsigned int v441;
  unsigned int v442;
  unsigned int v443;
  unsigned int v444;
  unsigned int v445;
  unsigned int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  unsigned int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  unsigned int v464;
  unsigned int v465;
  int v466;
  unsigned int v467;
  unsigned int v468;
  int v469;
  unsigned int v470;
  unsigned int v471;
  int v472;
  unsigned int v473;
  unsigned int v474;
  unsigned int v475;
  int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  unsigned int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  int v486;
  unsigned int v487;
  unsigned int v488;
  unsigned int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  int v493;
  unsigned int v494;
  unsigned int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  unsigned int v500;
  unsigned int v501;
  int v502;
  unsigned int v503;
  unsigned int v504;
  unsigned int v505;
  unsigned int v506;
  unsigned int v507;
  int v508;
  unsigned int v509;
  int v510;
  unsigned int v511;
  int v512;
  unsigned int v513;
  unsigned int v514;
  int v515;
  int v516;
  unsigned int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  unsigned int v530;
  int v531;
  unsigned int v532;
  unsigned int v533;
  unsigned int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  unsigned int v539;
  int v540;
  unsigned int v541;
  unsigned int v542;
  unsigned int v543;
  unsigned int v544;
  unsigned int v545;
  unsigned int v546;
  unsigned int v547;
  int v548;
  unsigned int v549;
  unsigned int v550;
  unsigned int v551;
  int v552;
  int v553;
  unsigned int v554;
  unsigned int v555;
  int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  int v560;
  int v561;
  unsigned int v562;
  int v563;
  unsigned int v564;
  int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  unsigned int v571;
  unsigned int v572;
  unsigned int v573;
  unsigned int v574;
  unsigned int v575;
  unsigned int v576;
  int v577;
  unsigned int v578;
  unsigned int v579;
  unsigned int v580;
  unsigned int v581;
  unsigned int v582;
  unsigned int v583;
  unsigned int v584;
  int v585;
  unsigned int v586;
  int v587;
  int v588;
  unsigned int v589;
  int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  unsigned int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  int v602;
  unsigned int v603;
  int v604;
  unsigned int v605;
  unsigned int v606;
  unsigned int v607;
  unsigned int v608;
  int v609;
  int v610;
  unsigned int v611;
  int v612;
  unsigned int v613;
  int v614;
  int v615;
  unsigned int v616;
  int v617;
  unsigned int v618;
  unsigned int v619;
  int v620;
  unsigned int v621;
  unsigned int v622;
  int v623;
  unsigned int v624;
  unsigned int v625;
  int v626;
  int v627;
  unsigned int v628;
  unsigned int v629;
  int v630;
  int v631;
  int v632;
  unsigned int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  unsigned int v639;
  unsigned int v640;
  unsigned int v641;
  int v642;
  int v643;
  int v644;
  int v645;
  unsigned int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  unsigned int v650;
  unsigned int v651;
  unsigned int v652;
  int v654;
  int v655;
  unsigned int v656;
  int v657;
  int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  unsigned int v662;
  unsigned int v663;
  int v664;
  int v665;
  int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  unsigned int v671;
  int v672;
  unsigned int v673;
  unsigned int v674;
  unsigned int v675;
  int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  int v680;
  int v681;
  unsigned int v682;
  int v683;
  unsigned int v684;
  unsigned int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  unsigned int v689;
  unsigned int v690;
  unsigned int v691;
  int v692;
  unsigned int v693;
  int v694;
  unsigned int v695;
  int v696;
  unsigned int v697;
  unsigned int v698;
  unsigned int v699;
  unsigned int v700;
  unsigned int v701;
  int v702;
  unsigned int v703;
  unsigned int v704;
  int v705;
  unsigned int v706;
  unsigned int v707;
  int v708;
  unsigned int v709;
  unsigned int v710;
  int v711;
  int v712;
  unsigned int v713;
  unsigned int v714;
  unsigned int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  int v719;
  unsigned int v720;
  int v721;
  int v722;
  int v723;
  int v724;
  unsigned int v725;
  unsigned int v726;
  unsigned int v727;
  unsigned int v728;
  unsigned int v729;
  unsigned int v730;
  unsigned int v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  unsigned int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  int v747;
  int v748;
  unsigned int v749;
  unsigned int v750;
  unsigned int v751;
  int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  unsigned int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  unsigned int v763;
  int v764;
  int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  unsigned int v770;
  int v771;
  unsigned int v772;
  int v773;
  int v774;
  int v775;
  int v776;
  unsigned int v777;
  int v778;
  int v779;
  int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  int v784;
  int v785;
  int v786;
  unsigned int v787;
  unsigned int v788;
  int v789;
  int v790;
  int v791;
  unsigned int v792;
  BOOL v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  int v798;
  unsigned int v799;
  unsigned int v800;
  unsigned int v801;
  unsigned int v802;
  int v803;
  unsigned int v804;
  int v805;
  unsigned int v806;
  int v807;
  int v808;
  int v809;
  int v810;
  int v811;
  unint64_t v812;
  int v813;
  int v814;
  unsigned int v815;
  int v816;
  int v817;
  int v818;
  int v819;
  unsigned int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  unsigned int v824;
  unsigned int v825;
  int v826;
  unsigned int v827;
  int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  unsigned int v832;
  unsigned int v833;
  unsigned int v834;
  unsigned int v835;
  unsigned int v836;
  int v837;
  unsigned int v838;
  int v839;
  int v840;
  unsigned int v841;
  char *v842;
  unint64_t v843;
  unsigned int v844;
  int v845;
  int v846;
  unsigned int v847;
  int v848;
  int v849;
  int v850;
  unsigned int v851;
  unsigned int v852;
  int v853;
  unsigned int v854;
  int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  int v859;
  int v860;
  int v861;
  unsigned int v862;
  unsigned int v863;
  unsigned int v864;
  unsigned int v865;
  int v866;
  unsigned int v867;
  unsigned int v868;
  unsigned int v869;
  unsigned int v870;
  int v871;
  int v872;
  unsigned int v873;
  unsigned int v874;
  unsigned int v875;
  unsigned int v876;
  int v877;
  unsigned int v878;
  int v879;
  unsigned int v880;
  int v881;
  int v882;
  unsigned int v883;
  unsigned int v884;
  int v885;
  int v886;
  int v887;
  int v888;
  unsigned int v889;
  unsigned int v890;
  unsigned int v891;
  int v892;
  unsigned int v893;
  unsigned int v894;
  int v895;
  unsigned int v896;
  unsigned int v897;
  int v898;
  unsigned int v899;
  int v900;
  int v901;
  unint64_t v902;
  int v903;
  unsigned int v904;
  unsigned int v905;
  int v906;
  unsigned int v907;
  unsigned int v908;
  int v909;
  unsigned int v910;
  unsigned int v911;
  int v912;
  unsigned int v913;
  int v914;
  int v915;
  int v916;
  unsigned int v917;
  unsigned int v918;
  unsigned int v919;
  unsigned int v920;
  unsigned int v921;
  int v922;
  unsigned int v923;
  int v924;
  unsigned int v925;
  unsigned int v926;
  unsigned int v927;
  int v928;
  unsigned int v929;
  int v930;
  int v931;
  unsigned int v932;
  int v933;
  unsigned int v934;
  int v935;
  int v936;
  unsigned int v937;
  unsigned int v938;
  unsigned int v939;
  unsigned int v940;
  unsigned int v941;
  unsigned int v942;
  int v943;
  unsigned int v944;
  unsigned int v945;
  unsigned int v946;
  unsigned int v947;
  unsigned int v948;
  unsigned int v949;
  unsigned int v950;
  unsigned int v951;
  unsigned int v952;
  unsigned int v953;
  unsigned int v954;
  int v955;
  int v956;
  unsigned int v957;
  int v958;
  unsigned int v959;
  unsigned int v960;
  unsigned int v961;
  int v962;
  unsigned int v963;
  unsigned int v964;
  unsigned int v965;
  int v966;
  unsigned int v967;
  int v968;
  unsigned int v969;
  unsigned int v970;
  unsigned int v971;
  unsigned int v972;
  unsigned int v973;
  int v974;
  unsigned int v975;
  unsigned int v976;
  unsigned int v977;
  int v978;
  int v979;
  int v980;
  int v981;
  int v982;
  int v983;
  int v984;
  int v985;
  unsigned int v986;
  unsigned int v987;
  int v988;
  unsigned int v989;
  unsigned int v990;
  unsigned int v991;
  unsigned int v992;
  unsigned int v993;
  int v994;
  unsigned int v995;
  int v996;
  unsigned int v997;
  int v998;
  int v999;
  unsigned int v1000;
  unsigned int v1001;
  unsigned int v1002;
  unsigned int v1003;
  unsigned int v1004;
  unsigned int v1005;
  unsigned int v1006;
  int v1007;
  int v1008;
  unsigned int v1009;
  int v1010;
  unsigned int v1011;
  unsigned int v1012;
  int v1013;
  unsigned int v1014;
  unsigned int v1015;
  unsigned int v1016;
  int v1017;
  int v1018;
  unsigned int v1019;
  unsigned int v1020;
  int v1021;
  unsigned int v1022;
  unsigned int v1023;
  int v1024;
  int v1025;
  int v1026;
  int v1027;
  unsigned int v1028;
  int v1029;
  unsigned int v1030;
  unsigned int v1031;
  unsigned int v1032;
  unsigned int v1033;
  unsigned int v1034;
  unsigned int v1035;
  unsigned int v1036;
  unsigned int v1037;
  unsigned int v1038;
  unsigned int v1039;
  int v1040;
  int v1041;
  int v1042;
  unsigned int v1043;
  int v1044;
  int v1045;
  unsigned int v1046;
  unsigned int v1047;
  unsigned int v1048;
  unsigned int v1049;
  unsigned int v1050;
  unsigned int v1051;
  unsigned int v1052;
  int v1053;
  int v1054;
  int v1055;
  int v1056;
  int v1057;
  unsigned int v1058;

  v16 = v11 + LODWORD(STACK[0x544]);
  LODWORD(STACK[0x6DC]) = a6;
  v18 = v16 - 2 * ((v16 + 1924720624) & 0x664E5E4F ^ v16 & 0xA);
  LODWORD(STACK[0x628]) = v18;
  v19 = (a6 + a8 - 596396975) ^ 0xAB5F0637;
  LODWORD(STACK[0x6B0]) = v19;
  v20 = LODWORD(STACK[0x548]) - v19;
  v21 = *(unsigned __int8 *)(STACK[0x5A8] + 1459) ^ 0x80;
  LODWORD(STACK[0x688]) = 32 * v21;
  LODWORD(STACK[0x6F8]) = 16 * v21;
  LODWORD(STACK[0x6F0]) = v12;
  v22 = (a1 + v11 + 1001640283) ^ 0xAB5F0637;
  LODWORD(STACK[0x6A8]) = v22;
  v23 = LODWORD(STACK[0x518]) - 2089288548 + v22;
  v24 = STACK[0x488];
  LODWORD(STACK[0x6C8]) = v10;
  v25 = v23 + 1488692574 - (v24 & (2 * v23));
  v26 = *(unsigned __int8 *)(a4
                           + (((v25 >> 28) ^ 5) * v14
                                          + 279719
                                          - ((4487950 * (unint64_t)(((v25 >> 28) ^ 5) * v14 + 279719)) >> 32)
                                          * v13));
  v27 = (HIBYTE(v25) & 0xF ^ 8) * v14 + 279719;
  LODWORD(STACK[0x6BC]) = a1;
  v28 = v27 - ((4487950 * (unint64_t)v27) >> 32) * v13;
  v29 = v28 - 734565147 - ((2 * v28) & 0x1CA);
  v30 = v20 + 320201793 - ((2 * (v20 + 320201793)) & 0x30A894E4) + 408177266;
  v31 = (BYTE2(v25) ^ 0xBB) >> (((-9 - v29) & 4 ^ 4) + ((-9 - v29) & 4));
  v32 = *(unsigned __int8 *)(a4
                           + (v31 * v14
                                          + 279719
                                          - ((4487950 * (unint64_t)(v31 * v14 + 279719)) >> 32)
                                          * v13));
  v33 = ((*(unsigned __int8 *)(a4 + (v29 ^ 0xD4376CE5)) ^ 0x80) << 8) ^ ((v26 ^ 0x80) << 12);
  LODWORD(STACK[0x6A0]) = v25;
  LODWORD(STACK[0x6E4]) = v11;
  v34 = ((BYTE2(v25) ^ 0xBB) & 0xF) * v14 + 279719;
  v35 = (((unsigned __int16)v25 >> 12) ^ 0xA) * v14 + 279719;
  v36 = v33 | *(unsigned __int8 *)(a4 + (v34 - ((4487950 * (unint64_t)v34) >> 32) * v13)) ^ 0x80;
  v37 = *(unsigned __int8 *)(a4 + (v35 - ((4487950 * (unint64_t)v35) >> 32) * v13)) ^ 0x80;
  v38 = ((v25 >> 8) & 0xF ^ 5) * v14 + 279719;
  v39 = (v36 << 8) ^ ((v32 ^ 0x80) << 12);
  v40 = *(unsigned __int8 *)(a4
                           + (((v25 >> 4) ^ 5) * v14
                                          + 279719
                                          - ((4487950
                                            * (unint64_t)(((v25 >> 4) ^ 5u) * v14 + 279719)) >> 32)
                                          * v13));
  v41 = *(unsigned __int8 *)(a4 + (v38 - ((4487950 * (unint64_t)v38) >> 32) * v13)) ^ 0x80;
  LODWORD(STACK[0x67C]) = a7;
  v42 = *(unsigned __int8 *)(a4
                           + ((v25 & 0xF ^ 0xE) * v14
                                          + 279719
                                          - ((4487950 * (unint64_t)((v25 & 0xF ^ 0xE) * v14 + 279719)) >> 32)
                                          * v13));
  v43 = ((v39 | v41) << 8) - 145259608 - (STACK[0x484] & ((v39 | v41) << 9));
  v44 = v43 ^ (v37 << 12);
  LOBYTE(v37) = v42 ^ 0x80;
  LODWORD(STACK[0x6E0]) = a8;
  v45 = (v44 ^ 0xF75783A8 | v42 ^ 0x80) ^ (16 * (v40 ^ 0x80));
  v46 = (HIBYTE(v30) & 0xF ^ 8) * v14 + 279719;
  v47 = ((v30 >> 20) & 0xF ^ 5) * v14 + 279719;
  v48 = (HIWORD(v30) & 0xF ^ 4) * v14 + 279719;
  v49 = (((unsigned __int16)v30 >> 12) ^ 4) * v14 + 279719;
  v50 = *(unsigned __int8 *)(a4 + (v48 - ((4487950 * (unint64_t)v48) >> 32) * v13)) ^ ((*(unsigned __int8 *)(a4 + (v46 - ((4487950 * (unint64_t)v46) >> 32) * v13)) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (((v30 >> 28) ^ 1) * v14 + 279719 - ((4487950 * (unint64_t)(((v30 >> 28) ^ 1) * v14 + 279719)) >> 32) * v13)) ^ 0x80) << 12) ^ (16 * (*(unsigned __int8 *)(a4 + (v47 - ((4487950 * (unint64_t)v47) >> 32) * v13)) ^ 0x80));
  LOBYTE(v47) = v50 ^ 0x80;
  v51 = ((v30 >> 8) & 0xF ^ 0xA) * v14 + 279719;
  v52 = *(unsigned __int8 *)(a4 + (v49 - ((4487950 * (unint64_t)v49) >> 32) * v13)) ^ 0x80;
  v53 = v51 - ((4487950 * (unint64_t)v51) >> 32) * v13;
  v54 = v53 - 142372375 - ((2 * v53) & 0x3D2);
  v55 = ((v54 & 0xF ^ 9) + (v54 & 0xF ^ 6)) & (v30 ^ 0x12);
  v56 = ((v30 >> 4) ^ 7) * v14 + 279719;
  v57 = v37 & 0xF;
  v58 = ((v50 ^ 0x80) << 16) - 669342327 - ((v50 << 17) & 0xB0340000);
  v59 = ((v58 ^ 0xD81AA589) + ((*(unsigned __int8 *)(a4 + (v54 ^ 0xF78391E9)) ^ 0x80) << 8)) ^ (v52 << 12);
  v60 = *(unsigned __int8 *)(a4 + (v56 - ((4487950 * (unint64_t)v56) >> 32) * v13)) ^ 0x80;
  v61 = *(unsigned __int8 *)(a4
                           + (v55 * v14
                                          + 279719
                                          - ((4487950 * (unint64_t)(v55 * v14 + 279719)) >> 32)
                                          * v13));
  v62 = v59 | v61 ^ 0x80;
  v63 = (v57 & 0xFFFFFF0F | (16 * (v61 & 0xF))) * v14;
  v64 = *(unsigned __int8 *)(a4
                           + (v63 + 290925 - ((4487950 * (unint64_t)(v63 + 290925)) >> 32) * v13));
  v65 = 16 * v21 + 66846862 - ((32 * v21) & 0x100);
  LODWORD(STACK[0x6C0]) = v65;
  v66 = (((v64 ^ 0x80) + 66846862 - ((2 * (v64 ^ 0x80)) & 0x11C)) ^ v65) * v14;
  v67 = ((v66 + 290925) * (unint64_t)v15) >> 32;
  v68 = v62 ^ (16 * v60);
  v69 = 431
      * (*(unsigned __int8 *)(a4 + (v63 - ((4487950 * (unint64_t)v63) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + v66 - ((((v66 * (unint64_t)v15) >> 32) + ((v66 - ((v66 * (unint64_t)v15) >> 32)) >> 1)) >> 9) * v13) >> 4) ^ 0x88)
      + 290925;
  v70 = v68 & 0xF0 | (v45 >> 4);
  v71 = 431
      * (*(unsigned __int8 *)(a4
                            + (431 * v70
                                           + 290925
                                           - ((4487950 * (unint64_t)(431 * v70 + 290925)) >> 32)
                                           * v13)) ^ (16
                                                    * (*(unsigned __int8 *)(a4
                                                                          + (v69
                                                                                         - ((4487950
                                                                                           * (unint64_t)v69) >> 32)
                                                                                         * v13)) ^ 0x80)) ^ 0x80);
  v72 = 431 * v70 - 388290813 - ((862 * v70) & 0x24E06);
  v73 = *(unsigned __int8 *)(a4
                           + v66
                           + 290925
                           - ((v67 + ((v66 + 290925 - v67) >> 1)) >> 9) * v13) ^ (16 * (*(unsigned __int8 *)(a4 + (v71 + 290925 - ((4487950 * (unint64_t)(v71 + 290925)) >> 32) * v13)) ^ 0x80));
  v74 = 431
      * (*(unsigned __int8 *)(a4 + (v72 ^ 0xE8DB2703) % (v72 & v13 ^ 0xBC | v72 & v13 ^ 0x301)) ^ (*(unsigned __int8 *)(a4 + (v71 - ((4487950 * (unint64_t)v71) >> 32) * v13)) >> 4) ^ 0x88)
      + 290925;
  v75 = 431 * ((v68 >> 4) & 0xF0 | (v45 >> 8) & 0xF);
  v76 = *(unsigned __int8 *)(a4
                           + (v75 + 290925 - ((4487950 * (unint64_t)(v75 + 290925)) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (v74 - ((4487950 * (unint64_t)v74) >> 32) * v13)) ^ 0x80)) ^ 0x80;
  v77 = v73 ^ ((*(unsigned __int8 *)(a4
                                   + (431 * v76
                                                  + 290925
                                                  - ((4487950 * (unint64_t)(431 * v76 + 290925)) >> 32)
                                                  * v13)) ^ 0x80) << 8);
  v78 = *(unsigned __int8 *)(a4 + (v75 - ((4487950 * (unint64_t)v75) >> 32) * v13));
  v79 = 431 * v76 + 613974014 - ((862 * v76) & 0x30FFFC);
  v80 = ((unsigned __int16)v44 >> 12) ^ 8;
  v81 = v78 ^ (*(unsigned __int8 *)(a4 + (v79 ^ 0x24987FFEu) % ((v79 & v13 ^ 0x3BC) + (v79 & v13 ^ 1))) >> 4) ^ 0x88;
  v82 = 431 * ((v59 >> 8) & 0xF0 | v80);
  LODWORD(v67) = 431
               * (*(unsigned __int8 *)(a4
                                     + (v82
                                                    + 290925
                                                    - ((4487950 * (unint64_t)(v82 + 290925)) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (431 * v81 + 290925 - ((4487950 * (unint64_t)(431 * v81 + 290925)) >> 32) * v13)) ^ 0x80)) ^ 0x80);
  v83 = 431
      * (*(unsigned __int8 *)(a4 + (v82 - ((4487950 * (unint64_t)v82) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + (v67 - ((4487950 * (unint64_t)v67) >> 32) * v13)) >> 4) ^ 0x88)
      + 290925;
  v84 = 431 * (((v59 >> 12) & 0xF0 | HIWORD(v44) & 0xF) ^ 7);
  v85 = 431
      * (*(unsigned __int8 *)(a4 + (v84 + 290925) % (((v84 + 290925) | (914 - v84)) & 0x338 | 0x85)) ^ (16 * (*(unsigned __int8 *)(a4 + (v83 - ((4487950 * (unint64_t)v83) >> 32) * v13)) ^ 0x80)) ^ 0x80);
  v86 = 431
      * (*(unsigned __int8 *)(a4 + (v84 - ((4487950 * (unint64_t)v84) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + (v85 - ((4487950 * (unint64_t)v85) >> 32) * v13)) >> 4) ^ 0x88)
      + 290925;
  v87 = v86 - ((4487950 * (unint64_t)v86) >> 32) * v13;
  v88 = v87 - 1981433580 - ((2 * v87) & 0x228);
  v89 = (v43 >> 20) & 0xF ^ 5;
  v90 = 431 * (v47 & 0xF0 | v89);
  v91 = 431
      * (*(unsigned __int8 *)(a4
                            + (v90 + 290925 - ((4487950 * (unint64_t)(v90 + 290925)) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (v88 ^ 0x89E5B914)) ^ 0x80)) ^ 0x80);
  v92 = *(unsigned __int8 *)(a4 + (v90 - ((4487950 * (unint64_t)v90) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + (v91 - ((4487950 * (unint64_t)v91) >> 32) * v13)) >> 4);
  v93 = HIBYTE(v43) & 0xF ^ 7;
  v94 = 431 * (((v58 >> 20) & 0xF0 | v93) ^ 0x80);
  v95 = 431
      * (*(unsigned __int8 *)(a4
                            + (v94 + 290925 - ((4487950 * (unint64_t)(v94 + 290925)) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (431 * (v92 ^ 0x88) + 290925 - ((4487950 * (unint64_t)(431 * (v92 ^ 0x88u) + 290925)) >> 32) * v13)) ^ 0x80)) ^ 0x80);
  v96 = v77 ^ ((*(unsigned __int8 *)(a4
                                   + (v67
                                                  + 290925
                                                  - ((4487950 * (unint64_t)(v67 + 290925)) >> 32)
                                                  * v13)) ^ 0x80) << 12);
  LODWORD(v67) = *(unsigned __int8 *)(a4 + (v94 - ((4487950 * (unint64_t)v94) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + (v95 - ((4487950 * (unint64_t)v95) >> 32) * v13)) >> 4);
  v97 = *(unsigned __int8 *)(a4
                           + (v91 + 290925 - ((4487950 * (unint64_t)(v91 + 290925)) >> 32) * v13)) ^ 0x80;
  v98 = ~v43;
  LODWORD(v67) = 431 * (((2 * (v67 ^ 0xFFFFFF80)) & 0x146) + (v67 ^ 0x22B));
  v99 = 431 * ((HIBYTE(v58) & 0xF0 | (v98 >> 28)) ^ 0xD0) + 290925;
  v100 = *(unsigned __int8 *)(a4 + (v99 - ((4487950 * (unint64_t)v99) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (v67 - ((4487950 * (unint64_t)v67) >> 32) * v13)) ^ 0x80));
  v101 = (*(unsigned __int8 *)(a4
                             + (431 * (v100 ^ 0x80)
                                            + 290925
                                            - ((4487950 * (unint64_t)(431 * (v100 ^ 0x80u) + 290925)) >> 32)
                                            * v13)) << 28) ^ ((*(unsigned __int8 *)(a4
                                                                                  + (v95
                                                                                                 + 290925
                                                                                                 - ((4487950 * (unint64_t)(v95 + 290925)) >> 32)
                                                                                                 * v13)) ^ 0x80) << 24);
  v102 = v96 ^ ((unint64_t)(*(unsigned __int8 *)(a4
                                                      + (v85
                                                                     + 290925
                                                                     - ((4487950 * (unint64_t)(v85 + 290925)) >> 32)
                                                                     * v13)) ^ 0x80u) << ((~(_BYTE)v88 & 0x10 ^ 0x10)
                                                                                        + (~(_BYTE)v88 & 0x10u)));
  v103 = 431 * (v57 & 0xFFFFFF0F | (16 * (v102 & 0xF))) + 168952;
  v104 = 431 * ((v102 ^ 0x80) & 0xF0 | (v45 >> 4)) + 168952;
  v105 = 431 * ((v102 >> 4) & 0xF0 | (v45 >> 8) & 0xF) + 168952;
  v106 = *(unsigned __int8 *)(a4 + (v103 - ((4487950 * (unint64_t)v103) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (v104 - ((4487950 * (unint64_t)v104) >> 32) * v13)) ^ 0x80)) ^ ((*(unsigned __int8 *)(a4 + (v105 - ((4487950 * (unint64_t)v105) >> 32) * v13)) ^ 0x80) << 8);
  v107 = 431 * (((v102 >> 8) & 0xF0 | v80) + (v106 & 0x188 ^ 0x80 | v106 & 0x188 ^ 0x108));
  v108 = 431 * (((v102 >> 12) & 0xF0 | HIWORD(v44) & 0xF) ^ 7) + 168952;
  v109 = ((*(unsigned __int8 *)(a4 + (v108 - ((4487950 * (unint64_t)v108) >> 32) * v13)) ^ 0x80) << 16) ^ ((*(unsigned __int8 *)(a4 + (v107 - ((4487950 * (unint64_t)v107) >> 32) * v13)) ^ 0x80) << 12);
  LODWORD(STACK[0x670]) = v109;
  v110 = ((v97 << 20) + 1271351956 - ((v97 << 21) & 0x17800000)) ^ v102 ^ 0x4BC74A14;
  v111 = 431 * (HIWORD(v110) & 0xF0 | v89) + 168952;
  v112 = v109 ^ ((*(unsigned __int8 *)(a4 + (v111 - ((4487950 * (unint64_t)v111) >> 32) * v13)) ^ 0x80) << 20);
  LODWORD(STACK[0x668]) = v112;
  v113 = v101 ^ v110;
  v114 = 431 * ((v113 >> 20) & 0xF0 | v93) + 168952;
  v115 = v112 ^ ((*(unsigned __int8 *)(a4 + (v114 - ((4487950 * (unint64_t)v114) >> 32) * v13)) ^ 0x80) << 24);
  LODWORD(STACK[0x660]) = v115;
  v116 = 431 * (HIBYTE(v113) & 0xF0 | (v98 >> 28)) + 168952;
  v117 = v115 ^ (*(unsigned __int8 *)(a4 + (v116 - ((4487950 * (unint64_t)v116) >> 32) * v13)) << 28);
  LODWORD(STACK[0x644]) = v117;
  v118 = STACK[0x6E0];
  v119 = LODWORD(STACK[0x520])
       - LODWORD(STACK[0x6E0])
       + 283950232
       - (STACK[0x480] & (2 * (LODWORD(STACK[0x520]) - LODWORD(STACK[0x6E0]) + 283950232)));
  LODWORD(STACK[0x638]) = v119;
  v120 = 431 * (((_BYTE)v119 + 46) & 0xF ^ 0xE);
  v121 = 431 * (((_BYTE)v18 + 85) & 0xF ^ 5) + 279719;
  v122 = *(unsigned __int8 *)(a4 + (v121 - ((4487950 * (unint64_t)v121) >> 32) * v13));
  LODWORD(STACK[0x630]) = v122;
  v123 = *(unsigned __int8 *)(a4 + (v120 + 279719) % (((v120 + 279719) | (856 - v120)) & v13));
  LODWORD(STACK[0x634]) = v123;
  v122 ^= 0x80u;
  LODWORD(STACK[0x62C]) = v122;
  v124 = v122 & 0xF;
  v125 = 431 * (v124 | (16 * (v123 & 0xF)));
  LODWORD(STACK[0x620]) = v125;
  v126 = *(unsigned __int8 *)(a4
                            + (v125
                                           + 290925
                                           - ((4487950 * (unint64_t)(v125 + 290925)) >> 32) * v13)) ^ 0x80;
  v127 = 431 * ((v126 + 66846862 - ((2 * v126) & 0x11C)) ^ v65);
  LODWORD(STACK[0x61C]) = v127;
  v128 = v127 + 290925;
  v129 = v127 + 290925;
  LODWORD(STACK[0x640]) = v117 ^ v106;
  v130 = 431 * ((v117 ^ v106) & 0xF)
       + 404709
       - ((4487950 * (unint64_t)(431 * ((v117 ^ v106) & 0xFu) + 404709)) >> 32) * v13;
  LODWORD(STACK[0x650]) = v130 - 1994101058 - ((2 * v130) & 0x57C);
  v131 = STACK[0x6BC];
  v132 = v8 - LODWORD(STACK[0x6BC]) - 758786354 + LODWORD(STACK[0x6E4]);
  v133 = (v132
        - 1842597616
        + (((_WORD)v130 + 28350 - ((2 * (_WORD)v130) & 0x57C)) & 0x2F0 ^ 0x2B0)
        + (((_WORD)v130 + 28350 - ((2 * (_WORD)v130) & 0x57C)) & 0x2F0 ^ 0x6DD3CC40)) ^ (LODWORD(STACK[0x6BC])
                                                                                       + 1693151265);
  v134 = LODWORD(STACK[0x6BC]) - 1841055196;
  LODWORD(STACK[0x698]) = v134;
  LODWORD(v67) = v131;
  v135 = ((2 * (LODWORD(STACK[0x6A8]) + v134 + v133)) & 0xC3FDAFFE)
       + ((LODWORD(STACK[0x6A8]) + v134 + v133) ^ 0x61FED7FF);
  v136 = *(unsigned __int8 *)(a4 + v128 - v129 / 0x3BD * v13);
  LODWORD(STACK[0x604]) = v136;
  v137 = 431 * (v124 & 0xFFFFFF0F | (16 * (v136 & 0xF))) + 168952;
  v138 = *(unsigned __int8 *)(a4 + (v137 - ((4487950 * (unint64_t)v137) >> 32) * v13));
  LODWORD(STACK[0x610]) = v138;
  v139 = 431 * (v138 & 0xF) + 404709 - ((4487950 * (unint64_t)(431 * (v138 & 0xFu) + 404709)) >> 32) * v13;
  LODWORD(STACK[0x694]) = v139 + 458472521 - ((2 * v139) & 0x92);
  v140 = (((_WORD)v139 - 17335 - ((2 * (_WORD)v139) & 0x92)) & 0x373 ^ 0x3215AB32 | ((_WORD)v139
                                                                                   - 17335
                                                                                   - ((2 * (_WORD)v139) & 0x92)) & 0x373 ^ 0x41)
       + LODWORD(STACK[0x6DC]);
  v141 = v118 - 905495597 + (LODWORD(STACK[0x6F0]) ^ 0xC2EE16C3);
  v142 = 2 * v140;
  v143 = v140 - ((2 * v140 - 903324426) & 0x89F15AC2) + 705485788;
  LODWORD(STACK[0x6F0]) = v143;
  v144 = v141 + (v143 ^ 0xBB07529E);
  LODWORD(STACK[0x6A8]) = v144;
  LODWORD(STACK[0x624]) = v140 + 309098622;
  v145 = v140 + 309098622 + LODWORD(STACK[0x6B0]);
  v144 += 746239838;
  LODWORD(STACK[0x6E0]) = v144 ^ v143;
  v146 = ((2 * (v145 + (v144 ^ v143 ^ 0x44F8AD61))) & 0xFCE7FED6) + ((v145 + (v144 ^ v143 ^ 0x44F8AD61)) ^ 0xFE73FF6B);
  v147 = v135 + LODWORD(STACK[0x54C]);
  v148 = (2 * v147 - 1737798870) & 0xC9A8A3F0;
  v147 += 822736781;
  v149 = v147 - v148;
  v150 = 431 * (((v147 - v148) >> 28) ^ 0xE) + 279719;
  v151 = 431 * (HIBYTE(v149) & 0xF ^ 4) + 279719;
  v152 = 431 * ((v149 >> 20) & 0xF ^ 0xD) + 279719;
  v153 = v133;
  v154 = 431 * ((HIWORD(v149) & 0xF ^ 4) + (((808 - v133) | (v133 + 215)) & 0x289));
  v155 = ((*(unsigned __int8 *)(a4 + (v151 - ((4487950 * (unint64_t)v151) >> 32) * v13)) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v150 - ((4487950 * (unint64_t)v150) >> 32) * v13)) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (v154 - ((4487950 * (unint64_t)v154) >> 32) * v13)) ^ 0x80;
  LODWORD(STACK[0x680]) = v149;
  v156 = 431 * (((unsigned __int16)v149 >> 12) ^ 5) + 279719;
  v157 = v156 - ((4487950 * (unint64_t)v156) >> 32) * v13;
  v158 = (v155 << 8) ^ ((*(unsigned __int8 *)(a4
                                            + (v152 - ((4487950 * (unint64_t)v152) >> 32) * v13)) ^ 0x80) << 12);
  v159 = 431 * ((v149 >> 8) & 0xF ^ 1) + 279719;
  v160 = 431 * (~(v149 >> 4) & 0xF) + 279719;
  v161 = v158 | *(unsigned __int8 *)(a4 + (v159 - ((4487950 * (unint64_t)v159) >> 32) * v13)) ^ 0x80;
  v162 = 431 * (v147 & 0xF ^ 8) + 279719 - ((4487950 * (unint64_t)(431 * (v147 & 0xF ^ 8) + 279719)) >> 32) * v13;
  v163 = LODWORD(STACK[0x524]) - v146 + 1143184977;
  v164 = v163 - ((2 * v163) & 0x534710A0) + 698583120;
  v165 = 431 * (HIBYTE(v164) & 0xF ^ 9) + 279719;
  v166 = *(unsigned __int8 *)(a4 + v157) ^ 0x80;
  v167 = (v161 << 8) - 1210589741 + (~(v161 << 9) | 0x905045FF) + 1;
  LODWORD(STACK[0x600]) = v167;
  v168 = v167 ^ (v166 << 12);
  LODWORD(STACK[0x608]) = v168;
  v169 = *(unsigned __int8 *)(a4 + v162) ^ 0x80;
  v170 = (v168 ^ 0xB7D7DDD3 | v169) ^ (16
                                     * (*(unsigned __int8 *)(a4
                                                           + (v160
                                                                          - ((4487950 * (unint64_t)v160) >> 32)
                                                                          * v13)) ^ 0x80));
  v171 = 431 * ((v164 >> 20) & 0xF ^ 0xA) + 279719;
  v172 = 431 * (HIWORD(v164) & 0xF ^ 3) + 279719;
  v173 = ((*(unsigned __int8 *)(a4 + (v165 - ((4487950 * (unint64_t)v165) >> 32) * v13)) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((v164 >> 28) ^ 2) + 279719 - ((4487950 * (unint64_t)(431 * ((v164 >> 28) ^ 2) + 279719)) >> 32) * v13)) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (v172 - ((4487950 * (unint64_t)v172) >> 32) * v13)) ^ 0x80;
  v174 = 431 * (((unsigned __int16)(v163 - ((2 * v163) & 0x10A0) - 30640) >> 12) ^ 8) + 279719;
  v175 = (v173 << 8) ^ ((*(unsigned __int8 *)(a4
                                            + (v171 - ((4487950 * (unint64_t)v171) >> 32) * v13)) ^ 0x80) << 12);
  v176 = 431 * ((v164 >> 8) & 0xF ^ 8) + 279719;
  v177 = 431 * ((v164 >> 4) ^ 5) + 279719;
  v178 = v175 | *(unsigned __int8 *)(a4 + (v176 - ((4487950 * (unint64_t)v176) >> 32) * v13)) ^ 0x80;
  v179 = (v178 << 8) - 1125585350 - ((v178 << 9) & 0x79D1DC00);
  v180 = v179 ^ ((*(unsigned __int8 *)(a4 + (v174 - ((4487950 * (unint64_t)v174) >> 32) * v13)) ^ 0x80) << 12);
  LODWORD(STACK[0x5BC]) = v179;
  v181 = *(unsigned __int8 *)(a4
                            + (431 * (v163 & 0xF)
                                           + 279719
                                           - ((4487950 * (unint64_t)(431 * (v163 & 0xFu) + 279719)) >> 32) * v13));
  LODWORD(STACK[0x5DC]) = v180;
  v182 = (v180 ^ 0xBCE8EE3A | v181 ^ 0x80) ^ (16
                                            * (*(unsigned __int8 *)(a4
                                                                  + (v177
                                                                                 - ((4487950 * (unint64_t)v177) >> 32)
                                                                                 * v13)) ^ 0x80));
  v183 = v169 & 0xF;
  v184 = 431 * (v183 & 0xFFFFFF0F | (16 * (v181 & 0xF)));
  v185 = 431 * ((v182 >> 4) & 0xF0 | (v170 >> 8) & 0xF);
  LODWORD(STACK[0x5F0]) = v185;
  v186 = *(unsigned __int8 *)(a4 + (v185 - ((4487950 * (unint64_t)v185) >> 32) * v13));
  LODWORD(STACK[0x5F8]) = v186;
  v187 = v170 >> 8 >> ((v186 & 4 ^ 4) + (v186 & 4));
  v188 = v187 - ((2 * v187) & 0x906296) + 759705931;
  LODWORD(STACK[0x5B4]) = v188;
  v189 = 431 * (((v180 >> 12) & 0xF0 | (v188 >> 4)) ^ 0x84);
  LODWORD(STACK[0x5D8]) = v189;
  LODWORD(STACK[0x648]) = (v189 + 290925) % (v13 & (v188 >> 4) ^ 0x314 | v13 & (v188 >> 4) ^ 0xA9);
  v190 = (v135 - 1644091391) ^ v153;
  LODWORD(STACK[0x6DC]) = v190;
  LOBYTE(v118) = LOBYTE(STACK[0x538]) + 88 + ((v135 + 1) ^ v153 ^ 0x9A) - 120;
  v191 = LODWORD(STACK[0x538])
       - 874215080
       + (v190 ^ 0x1F3CC29A)
       + 559989896
       - ((2 * (LODWORD(STACK[0x538]) - 874215080 + (v190 ^ 0x1F3CC29A))) & 0x42C18910);
  v192 = LODWORD(STACK[0x6C8]) - LODWORD(STACK[0x6E4]) + 2 * v67 - v135;
  v193 = (v192 + 1077062870) ^ v132;
  v194 = v142 + v9 - v146 - ((2 * (v142 + v9 - v146) + 589675490) & 0x559D42BA);
  v195 = *(unsigned __int8 *)(a4 + (v184 + 290925) % (((914 - v184) | (v184 + 290925)) & v13)) ^ 0x80;
  v196 = STACK[0x6C0];
  v197 = 431 * ((v195 + 66846862 - ((2 * v195) & 0x11C)) ^ LODWORD(STACK[0x6C0]));
  v198 = 431
       * (*(unsigned __int8 *)(a4 + (v184 - ((4487950 * (unint64_t)v184) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + v197 - v197 / 0x3BD * v13) >> 4) ^ 0x88)
       + 290925;
  LODWORD(STACK[0x5D4]) = v170;
  v199 = 431 * (v182 & 0xF0 | (v170 >> 4));
  LODWORD(STACK[0x5B0]) = v199;
  v200 = 431
       * (*(unsigned __int8 *)(a4
                             + (v199
                                            + 290925
                                            - ((4487950 * (unint64_t)(v199 + 290925)) >> 32) * v13)) ^ (16 * (*(unsigned __int8 *)(a4 + (v198 - ((4487950 * (unint64_t)v198) >> 32) * v13)) ^ 0x80)) ^ 0x80);
  LODWORD(STACK[0x5A0]) = v200;
  v201 = (HIWORD(v179) & 0xF0 | (v188 >> 8) & 0xF) ^ 0xE1;
  v202 = v201 + 1608497604 - ((2 * v201) & 0x188);
  LODWORD(STACK[0x5B8]) = v202;
  LOBYTE(v201) = *(_BYTE *)(a4 + v197 + 290925 - (v197 + 290925) / 0x3BD * v13);
  v203 = (v202 & 0xAF ^ 0x84 | v202 & 0xAF ^ 0x12B) * ((v183 & 0xFFFFFF0F | (16 * (v201 & 0xF))) + 392);
  v204 = 16
       * (*(unsigned __int8 *)(a4
                             + (v200
                                            + 290925
                                            - ((4487950 * (unint64_t)(v200 + 290925)) >> 32) * v13)) ^ 0x80);
  LODWORD(STACK[0x5C0]) = v204;
  v205 = 431 * (((v201 ^ v204) ^ 0x80) & 0xF0 | (v170 >> 4)) + 168952;
  v206 = *(unsigned __int8 *)(a4 + (v203 - ((4487950 * (unint64_t)v203) >> 32) * v13));
  LODWORD(STACK[0x658]) = v206;
  v207 = LODWORD(STACK[0x6A8]) - ((2 * v144) & 0x559D42BA);
  v208 = v206 ^ (16
               * (*(unsigned __int8 *)(a4 + (v205 - ((4487950 * (unint64_t)v205) >> 32) * v13)) ^ 0x80)) ^ 0x80;
  LODWORD(STACK[0x5C8]) = v208;
  LODWORD(STACK[0x6B0]) = v153 ^ 0xFE427E8B;
  LODWORD(STACK[0x6C8]) = ((2 * ((v153 ^ 0xFE427E8B) - 1842597616 + v193)) & 0xBD5E755E)
                        + (((v153 ^ 0xFE427E8B) - 1842597616 + v193) ^ 0xDEAF3AAF);
  v209 = *(unsigned __int8 *)(a4
                            + (431 * (v208 >> 4)
                                           + 404709
                                           - ((4487950
                                             * (unint64_t)(431 * (v208 >> 4)
                                                                + 404709)) >> 32)
                                           * v13)) ^ 0x80;
  LODWORD(STACK[0x5D0]) = v209;
  v210 = (v191 ^ 0x2160C488) >> ((v209 & 0x18 ^ 0x18) + (v209 & 0x18));
  v211 = v146 + 25952405;
  v212 = STACK[0x6E0];
  v213 = LODWORD(STACK[0x6E0]) ^ 0x5BC46FFB ^ v211;
  LODWORD(STACK[0x6E4]) = v213;
  v214 = LODWORD(STACK[0x534]) - v213 + 1714303341 - ((2 * (LODWORD(STACK[0x534]) - v213 - 55882071)) & 0xD305C588);
  v215 = *(unsigned __int8 *)(a4
                            + (431 * (v210 >> 4)
                                           + 279719
                                           - ((4487950
                                             * (unint64_t)(431 * (v210 >> 4)
                                                                + 279719)) >> 32)
                                           * v13));
  LODWORD(STACK[0x654]) = v191;
  v216 = 431 * ((v191 >> 20) & 0xF ^ 6) + 279719;
  v217 = 431 * (((unsigned __int16)v191 >> 12) ^ 0xC) + 279719;
  v218 = *(unsigned __int8 *)(a4
                            + (431 * ((v191 >> 8) & 0xF ^ 4) + 279719)
                            % (((856 - 431 * ((v191 >> 8) & 0xF ^ 4)) & v13)
                             + ((431 * ((v191 >> 8) & 0xF ^ 4) + 279719) & v13))) ^ (((((*(unsigned __int8 *)(a4 + (431 * (v210 & 0xF) + 279719 - ((4487950 * (unint64_t)(431 * (v210 & 0xF) + 279719)) >> 32) * v13)) ^ 0x80) << 8) ^ ((v215 ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * (HIWORD(v191) & 0xF) + 279719 - ((4487950 * (unint64_t)(431 * (HIWORD(v191) & 0xF) + 279719)) >> 32) * v13)) ^ 0x80) ^ (16 * (*(unsigned __int8 *)(a4 + (v216 - ((4487950 * (unint64_t)v216) >> 32) * v13)) ^ 0x80))) << ((BYTE1(v191) & 8 ^ 8) + (BYTE1(v191) & 8)));
  v219 = 431 * ((v191 >> 4) ^ 8) + 279719;
  v220 = 431 * (v118 & 0xF ^ 8)
       + 279719
       - ((4487950 * (unint64_t)(431 * (v118 & 0xF ^ 8u) + 279719)) >> 32) * v13;
  v221 = v220 - 182979409 - ((2 * v220) & 0x15E);
  v222 = ((v218 ^ 0x80) << 8) - 1694694982 - ((v218 << 9) & 0x35FA0200);
  v223 = (v214 ^ 0x6982E2C4) >> (v221 & 0x18 ^ 0x10 | v221 & 0x18 ^ 8);
  v224 = v223 - ((2 * v223) & 0x3FBA5988) + 534588612;
  v225 = 431 * ((v224 >> 4) ^ 0xC) + 279719;
  v226 = 431 * ((v224 & 0xF ^ 0x28D) + ((2 * v224) & 0x12));
  LODWORD(STACK[0x64C]) = v153;
  v227 = 431 * ((v214 >> 20) & 0xF ^ 8) + 279719;
  v228 = 431
       * (((((v153 ^ 0xB) + 7) | ((v153 ^ 4) + 9)) & 0xF | 6) & (HIWORD(v214) ^ 2))
       + 279719;
  v229 = *(unsigned __int8 *)(a4 + (v221 ^ 0xF517F4AF));
  v230 = v222 ^ ((*(unsigned __int8 *)(a4 + (v217 - ((4487950 * (unint64_t)v217) >> 32) * v13)) ^ 0x80) << 12);
  v229 ^= 0x80u;
  v231 = (v230 ^ 0x9AFD01BA | v229) ^ (16
                                     * (*(unsigned __int8 *)(a4
                                                           + (v219
                                                                          - ((4487950 * (unint64_t)v219) >> 32)
                                                                          * v13)) ^ 0x80));
  v232 = 431 * (((unsigned __int16)v214 >> 12) ^ 0xE) + 279719;
  v233 = ((*(unsigned __int8 *)(a4 + (v226 - ((4487950 * (unint64_t)v226) >> 32) * v13)) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v225 - ((4487950 * (unint64_t)v225) >> 32) * v13)) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (v228 - ((4487950 * (unint64_t)v228) >> 32) * v13)) ^ 0x80;
  v234 = 431 * ((v214 >> 8) & 0xF ^ 2) + 279719;
  v235 = 431 * ((v214 >> 4) ^ 0xC) + 279719;
  v236 = (*(unsigned __int8 *)(a4 + (v234 - ((4487950 * (unint64_t)v234) >> 32) * v13)) | ((*(unsigned __int8 *)(a4 + (v227 - ((4487950 * (unint64_t)v227) >> 32) * v13)) ^ 0x80) << 12)) ^ (v233 << 8) ^ (16 * (*(unsigned __int8 *)(a4 + (v232 - ((4487950 * (unint64_t)v232) >> 32) * v13)) ^ 0x80));
  v237 = *(unsigned __int8 *)(a4
                            + (431 * (v214 & 0xF ^ 4)
                                           + 279719
                                           - ((4487950 * (unint64_t)(431 * (v214 & 0xF ^ 4) + 279719)) >> 32)
                                           * v13));
  v238 = v229 & 0xF;
  v239 = 431 * (v238 | (16 * (v237 & 0xF)));
  LODWORD(STACK[0x5E0]) = v236;
  v240 = ((v236 << 8) ^ 0x8000) - 1149094644 - ((v236 << 9) & 0x77046A00);
  v241 = *(unsigned __int8 *)(a4
                            + (v239 + 290925 - ((4487950 * (unint64_t)(v239 + 290925)) >> 32) * v13)) ^ 0x80;
  v242 = 431 * ((v241 + 66846862 - ((2 * v241) & 0x11C)) ^ v196);
  v243 = 431
       * (*(unsigned __int8 *)(a4 + (v239 - ((4487950 * (unint64_t)v239) >> 32) * v13)) ^ (*(unsigned __int8 *)(a4 + v242 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v244 = (v240 ^ 0xBB82350C | v237 ^ 0x80) ^ (16
                                            * (*(unsigned __int8 *)(a4
                                                                  + (v235
                                                                                 - ((4487950 * (unint64_t)v235) >> 32)
                                                                                 * v13)) ^ 0x80));
  v245 = 431 * (v244 & 0xF0 | (v231 >> 4));
  v246 = 431
       * (*(unsigned __int8 *)(a4
                             + (v245 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v245 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v243 - 957 * ((4487950 * (unint64_t)v243) >> 32))) ^ 0x80)) ^ 0x80);
  LODWORD(v67) = v194 + 1013022542;
  v247 = (v194 + 1013022542) ^ (v207 + 1464424635);
  v248 = (LODWORD(STACK[0x6F0]) ^ 0x907472B7 ^ (v194 + 1013022542)) + 2 * (v247 & (v212 ^ 0x3ABAD3EA));
  v249 = v192 + 482843999 + v193;
  v250 = v247 + (v67 ^ 0x2ACEA15D);
  v251 = 431
       * (*(unsigned __int8 *)(a4 + (v245 - 957 * ((4487950 * (unint64_t)v245) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v246 - 957 * ((4487950 * (unint64_t)v246) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v252 = 431 * ((v244 >> 4) & 0xF0 | (v231 >> 8) & 0xF);
  v253 = 431
       * (*(unsigned __int8 *)(a4
                             + (v252 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v252 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v251 - 957 * ((4487950 * (unint64_t)v251) >> 32))) ^ 0x80)) ^ 0x80);
  v254 = *(unsigned __int8 *)(a4 + (v242 + 290925) % 0x3BD) ^ (16
                                                             * (*(unsigned __int8 *)(a4
                                                                                   + (v246
                                                                                                  + 290925
                                                                                                  - 957 * ((4487950 * (unint64_t)(v246 + 290925)) >> 32))) ^ 0x80)) ^ ((*(unsigned __int8 *)(a4 + (v253 + 290925 - 957 * ((4487950 * (unint64_t)(v253 + 290925)) >> 32))) ^ 0x80) << 8);
  v255 = 431
       * (*(unsigned __int8 *)(a4 + (v252 - 957 * ((4487950 * (unint64_t)v252) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v253 - 957 * ((4487950 * (unint64_t)v253) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v256 = 431 * ((v236 & 0xF0 | ((unsigned __int16)v230 >> 12)) ^ 0x80);
  v257 = v256 - 957 * ((4487950 * (unint64_t)v256) >> 32);
  v258 = 431
       * (*(unsigned __int8 *)(a4
                             + (v256 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v256 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v255 - 957 * ((4487950 * (unint64_t)v255) >> 32))) ^ 0x80)) ^ 0x80);
  v259 = v258 + 290925 - 957 * ((4487950 * (unint64_t)(v258 + 290925)) >> 32);
  v260 = *(unsigned __int8 *)(a4 + (v258 - 957 * ((4487950 * (unint64_t)v258) >> 32)));
  v261 = v254 ^ 0x80;
  v262 = HIWORD(v240) ^ 0x4472;
  if (!v261)
    v262 = 15;
  v263 = 431 * (*(unsigned __int8 *)(a4 + v257) ^ (v260 >> 4) ^ 0x88) + 290925;
  v264 = v263 - 957 * ((4487950 * (unint64_t)v263) >> 32);
  v265 = HIWORD(v230) & 0xF;
  v266 = 431 * ((v265 | (16 * (v262 & (HIWORD(v240) ^ 0xBB82)))) ^ 0xD);
  v267 = 431
       * (*(unsigned __int8 *)(a4 + (v266 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(a4 + v264) ^ 0x80)) ^ 0x80);
  v268 = 431
       * (*(unsigned __int8 *)(a4 + v266 % 0x3BD) ^ (*(unsigned __int8 *)(a4
                                                                        + (v267
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v267) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v269 = 431 * ((BYTE2(v240) & 0xF0 | (v222 >> 20) & 0xF) ^ 0x8F);
  v270 = ((*(unsigned __int8 *)(a4
                              + (v267
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v267 + 290925)) >> 32))) ^ 0x80) << 16) ^ ((*(unsigned __int8 *)(a4 + v259) ^ 0x80) << 12);
  v271 = 431
       * (*(unsigned __int8 *)(a4
                             + (v269 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v269 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v268 - 957 * ((4487950 * (unint64_t)v268) >> 32))) ^ 0x80)) ^ 0x80);
  v272 = v271 + 290925 - 957 * ((4487950 * (unint64_t)(v271 + 290925)) >> 32);
  v273 = *(unsigned __int8 *)(a4 + (v269 - 957 * ((4487950 * (unint64_t)v269) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v271 - 957 * ((4487950 * (unint64_t)v271) >> 32))) >> 4);
  v274 = v248;
  v275 = v248 + 1097772989;
  LODWORD(STACK[0x6A8]) = v248;
  v276 = ((v273 ^ 0x88) + 675) * (((v248 + 1097772989) & 0x1AF) + ((66 - v248) & 0x1AF));
  v277 = 431 * (((v240 >> 20) & 0xF0 | HIBYTE(v222) & 0xF) ^ 0xBA);
  v278 = 431
       * (*(unsigned __int8 *)(a4
                             + (v277 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v277 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v276 - 957 * ((4487950 * (unint64_t)v276) >> 32))) ^ 0x80)) ^ 0x80);
  v279 = v270 ^ ((*(unsigned __int8 *)(a4 + v272) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(a4
                                                                                        + (v278 + 290925 - 957 * ((4487950 * (unint64_t)(v278 + 290925)) >> 32))) ^ 0x80) << 24);
  v280 = 431
       * (*(unsigned __int8 *)(a4 + (v277 - 957 * ((4487950 * (unint64_t)v277) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v278 - 957 * ((4487950 * (unint64_t)v278) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v281 = 431 * ((HIBYTE(v240) & 0xF0 | (v222 >> 28)) ^ 0xB9) + 290925;
  v282 = *(unsigned __int8 *)(a4 + (v281 - 957 * ((4487950 * (unint64_t)v281) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v280 - 957 * ((4487950 * (unint64_t)v280) >> 32))) ^ 0x80));
  LODWORD(STACK[0x598]) = v222;
  v283 = v279 ^ ((unint64_t)(*(unsigned __int8 *)(a4
                                                       + (431 * (v282 ^ 0x80)
                                                                      + 290925
                                                                      - 957
                                                                      * ((4487950
                                                                        * (unint64_t)(431 * (v282 ^ 0x80u)
                                                                                           + 290925)) >> 32))) ^ 0x80u) << ((13 * (HIBYTE(v222) & 0x8C ^ 4 | HIBYTE(v222) & 0x8C ^ 0x88)) & 0xFC));
  v284 = v283 ^ v261;
  v285 = 431 * (v238 & 0xFFFFFF0F | (16 * (v284 & 0xF))) + 168952;
  v286 = 431 * (v284 & 0xF0 | (v231 >> 4)) + 168952;
  v287 = (v284 >> 4) & 0xF0 | (v231 >> 8) & 0xF;
  v288 = 431 * ((v284 >> 8) & 0xF0 | ((unsigned __int16)v230 >> 12)) + 168952;
  v289 = v288 - 957 * ((4487950 * (unint64_t)v288) >> 32);
  v290 = v289 - 204555779 - ((2 * v289) & 0x3FA);
  LODWORD(STACK[0x594]) = v283;
  v291 = 431 * (v265 ^ 0xD ^ ((HIWORD(v283) & 0xF) << (((-9 - v290) & 4 ^ 4) + ((-9 - v290) & 4)))) + 168952;
  v292 = 431 * v287 + 168952 - 957 * ((4487950 * (unint64_t)(431 * v287 + 168952)) >> 32);
  v293 = (HIWORD(v283) & 0xF0 | (v222 >> 20) & 0xF) ^ 0xF;
  v294 = (((119 - v293) & 0x1AF) + ((v293 + 392) & 0x1AF)) * (v293 + 392);
  v295 = STACK[0x6DC];
  v296 = (STACK[0x6DC] & 0x6DD3CEF0 ^ 0x60C30C60) + (STACK[0x6DC] & 0x6DD3CEF0 ^ 0xD10C290);
  v297 = STACK[0x6C8];
  v298 = LODWORD(STACK[0x6B0]) + 558941521 + LODWORD(STACK[0x6C8]);
  LODWORD(STACK[0x5FC]) = v298;
  v299 = v274 + (v212 ^ 0xBABAD3EA);
  LODWORD(STACK[0x590]) = v299;
  v300 = v275 + v299 - 1103241590 - ((2 * (v275 + v299)) & 0x7C7BBD14);
  LODWORD(STACK[0x6F0]) = v300;
  v301 = v296 + v297 + v298 - 989209162 - ((2 * (v296 + v297 + v298 - 795655170)) & 0xE8ED3370);
  LODWORD(STACK[0x5CC]) = v301;
  LODWORD(STACK[0x59C]) = v301 ^ v249 ^ 0xF47699B8;
  v302 = (v295 ^ 0xEB4A5B22 ^ v301 ^ v249) + (v301 ^ v249 ^ 0xF47699B8);
  v303 = v302 - 1873461017 - ((2 * v302) & 0x20AA81CE);
  LODWORD(STACK[0x6DC]) = v303;
  v304 = LODWORD(STACK[0x550])
       - 1191320632
       + (v303 ^ 0x905540E7)
       - ((2 * (LODWORD(STACK[0x550]) - 1191320632 + (v303 ^ 0x905540E7))) & 0xD274470E);
  v305 = v300 ^ (v250 - 594218871);
  v306 = (LODWORD(STACK[0x6E4]) - ((2 * LODWORD(STACK[0x6E4])) & 0x5AF59BDA) - 1384460819) ^ 0x13471367;
  LODWORD(STACK[0x6B0]) = v305;
  v307 = v304 - 382065785;
  v308 = (((((v304 - 382065785) >> 28) ^ 0xE) + 649) & 0x8F ^ (374 - (((v304 - 382065785) >> 28) ^ 0xE)) & 0x12F)
       * ((((v304 - 382065785) >> 28) ^ 0xE) + 649);
  v309 = (v305 ^ 0xBE3DDE8A) + (v306 ^ v305) - ((2 * ((v305 ^ 0xBE3DDE8A) + (v306 ^ v305))) & 0x407A3CFE) - 1606607233;
  LODWORD(STACK[0x6E4]) = v309;
  v310 = LODWORD(STACK[0x530])
       + 1970504633
       + (v309 ^ 0x5FC2E180)
       - ((2 * (LODWORD(STACK[0x530]) + 1970504633 + (v309 ^ 0x5FC2E180))) & 0xED00AE3A);
  v311 = 431 * (HIBYTE(v307) & 0xF ^ 9) + 279719;
  v312 = v311 - 957 * ((4487950 * (unint64_t)v311) >> 32);
  v313 = 431 * ((v307 >> 20) & 0xF ^ 3) + 279719;
  v314 = 431 * (HIWORD(v307) & 0xF ^ 0xA) + 279719;
  v315 = *(unsigned __int8 *)(a4 + (v314 - 957 * ((4487950 * (unint64_t)v314) >> 32))) ^ 0x80;
  v316 = v315 + 1824482249 - ((2 * v315) & 0x192);
  v317 = 431
       * ((BYTE1(v307) ^ 0x23u) >> ((v316 & 4)
                                  - (((BYTE1(v307) & 0x5D ^ 1) + (BYTE1(v307) & 0x5D ^ 0x5C)) & 0xA0)
                                  + (v316 & 4 ^ 4)))
       + 279719;
  v318 = v317 - 957 * ((4487950 * (unint64_t)v317) >> 32);
  v319 = ((STACK[0x5E0] & 0xA0 ^ 0x12F) + (STACK[0x5E0] & 0xA0 ^ 0x80))
       * (((v307 >> 7) & 0x12 ^ 2) + ((v307 >> 8) & 0xF ^ 0x28A));
  v320 = v319 - 957 * ((4487950 * (unint64_t)v319) >> 32);
  v321 = *(unsigned __int8 *)(a4 + v318) ^ 0x80;
  LODWORD(STACK[0x5EC]) = v307;
  v322 = 431 * ((v307 >> 4) ^ 8) + 279719;
  v323 = 16 * v321 - ((32 * v321) & 0x1D00) - 535052668;
  v324 = ((v323 & 0x1A0 ^ 0x12F) + (v323 & 0x1A0 ^ 0x80)) * (((159361250 - v310) >> 28) + 649);
  v325 = v324 - 957 * ((4487950 * (unint64_t)v324) >> 32);
  v326 = *(unsigned __int8 *)(a4 + (v285 - 957 * ((4487950 * (unint64_t)v285) >> 32)));
  LODWORD(STACK[0x5E0]) = v326;
  v327 = v326 ^ (16
               * (*(unsigned __int8 *)(a4 + (v286 - 957 * ((4487950 * (unint64_t)v286) >> 32))) ^ 0x80)) ^ 0x80;
  LODWORD(STACK[0x4F4]) = v327;
  v328 = *(unsigned __int8 *)(a4 + v292);
  LODWORD(STACK[0x4E4]) = v328;
  v329 = (v327 | ((*(unsigned __int8 *)(a4 + (v290 ^ 0xF3CEB9FD)) ^ 0x80) << 12)) ^ ((v328 ^ 0x80) << 8);
  LODWORD(STACK[0x4EC]) = v329;
  v330 = v310 - 159361251;
  v331 = 431 * (((v310 - 159361251) >> 24) & 0xF ^ 6) + 279719;
  v332 = v331 - 957 * ((4487950 * (unint64_t)v331) >> 32);
  v333 = ((*(unsigned __int8 *)(a4 + (v294 - 957 * ((4487950 * (unint64_t)v294) >> 32))) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(a4 + v291 % 0x3BD) ^ 0x80) << 16);
  v334 = 431 * (((v310 - 159361251) >> 20) & 0xF ^ 8) + 279719;
  v335 = v334 - 957 * ((4487950 * (unint64_t)v334) >> 32);
  v336 = v333 ^ v329;
  LODWORD(STACK[0x4E8]) = v336;
  v337 = 431 * ((v336 >> 20) & 0xF);
  v338 = 431 * (((unsigned __int16)v330 >> 12) ^ 5) + 279719;
  v339 = v338 - 957 * ((4487950 * (unint64_t)v338) >> 32);
  v340 = ((*(unsigned __int8 *)(a4 + v312) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4
                                                                                + (v308
                                                                                               - 957
                                                                                               * ((4487950
                                                                                                 * (unint64_t)v308) >> 32))) ^ 0x80) << 12);
  v341 = 431 * ((v330 >> 8) & 0xF ^ 7) + 279719;
  v342 = v341 - 957 * ((4487950 * (unint64_t)v341) >> 32);
  v343 = 16
       * (*(unsigned __int8 *)(a4 + (v313 - 957 * ((4487950 * (unint64_t)v313) >> 32))) ^ 0x80);
  v344 = (v340 ^ v343) + 1824482249 - 2 * ((v340 ^ v343) & 0xF63D0 ^ v343 & 0x10);
  v345 = 431 * ((v330 >> 4) ^ 1) + 279719;
  v346 = v345 - 957 * ((4487950 * (unint64_t)v345) >> 32);
  v347 = *(unsigned __int8 *)(a4 + v320) ^ 0x80;
  v348 = ((v347 | ((v344 ^ v316) << 8)) - 2 * ((v347 | ((v344 ^ v316) << 8)) & 0x601BBE8E ^ v347 & 0xA) + 18595460) ^ v323;
  v349 = *(unsigned __int8 *)(a4
                            + (431 * (v307 & 0xF ^ 7)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v307 & 0xF ^ 7) + 279719)) >> 32))) ^ 0x80;
  v350 = (v348 << 8) + 47180156 - ((v348 << 9) & 0x59FD200);
  v351 = (v350 ^ 0x2CFE97C | v349) ^ (16
                                    * (*(unsigned __int8 *)(a4
                                                          + (v322
                                                                         - 957
                                                                         * ((4487950 * (unint64_t)v322) >> 32))) ^ 0x80));
  v352 = ((((*(unsigned __int8 *)(a4 + v332) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + v325) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * (HIWORD(v330) & 0xF) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v330) & 0xF) + 279719)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + v335) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + v342) ^ 0x80;
  v353 = (v352 << 8) + 500404228 - ((v352 << 9) & 0x3BA72000);
  v354 = v353 ^ ((*(unsigned __int8 *)(a4 + v339) ^ 0x80) << 12);
  v355 = v353;
  v356 = *(unsigned __int8 *)(a4
                            + (431 * (v330 & 0xF ^ 0xD)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v330 & 0xF ^ 0xD) + 279719)) >> 32)));
  v357 = (v354 ^ 0x1DD39004 | v356 ^ 0x80) ^ (16 * (*(unsigned __int8 *)(a4 + v346) ^ 0x80));
  LODWORD(STACK[0x4F0]) = v349 & 0xF;
  v358 = 431 * (v349 & 0xF | (16 * (v356 & 0xF)));
  v359 = *(unsigned __int8 *)(a4
                            + (v358 + 290925 - 957 * ((4487950 * (unint64_t)(v358 + 290925)) >> 32))) ^ 0x80;
  v360 = 431 * ((v359 + 66846862 - ((2 * v359) & 0x11C)) ^ LODWORD(STACK[0x6C0]));
  LODWORD(STACK[0x4D4]) = v360;
  v361 = *(unsigned __int8 *)(a4 + (v358 - 957 * ((4487950 * (unint64_t)v358) >> 32))) ^ (*(unsigned __int8 *)(a4 + v360 % 0x3BD) >> 4);
  LODWORD(STACK[0x4E0]) = v351;
  v362 = 431 * (v357 & 0xF0 | (v351 >> 4));
  v363 = 431
       * (*(unsigned __int8 *)(a4
                             + (v362 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v362 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (431 * (v361 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v361 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  LODWORD(STACK[0x4D0]) = v363;
  v364 = 431
       * (*(unsigned __int8 *)(a4 + (v362 - 957 * ((4487950 * (unint64_t)v362) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v363 - 957 * ((4487950 * (unint64_t)v363) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v365 = 431 * ((v357 >> 4) & 0xF0 | (v351 >> 8) & 0xF);
  v366 = 431
       * (*(unsigned __int8 *)(a4
                             + (v365 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v365 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v364 - 957 * ((4487950 * (unint64_t)v364) >> 32))) ^ 0x80)) ^ 0x80);
  LODWORD(STACK[0x4CC]) = v366;
  v367 = v366 - 957 * ((4487950 * (unint64_t)v366) >> 32);
  v368 = *(unsigned __int8 *)(a4 + (v365 - 957 * ((4487950 * (unint64_t)v365) >> 32)));
  v369 = *(unsigned __int8 *)(a4 + ((v367 + 586779793 - ((2 * v367) & 0x122)) ^ 0x22F98C91u));
  LODWORD(STACK[0x584]) = (v337 + 404709)
                        % (((-404710 - v337) & 0x3779EA4C | (v337 + 404709) & 0x66A4C) ^ 0x377FE9F1 | ((v337 + 404709) & 0x412FC | (-404710 - v337) & 0xF5B992FC) ^ 0xF5BD92FC);
  v370 = 431 * (v368 ^ (v369 >> 4) ^ 0x88) + 290925;
  v371 = 431 * (((v354 >> 8) & 0xF0 | ((unsigned __int16)v350 >> 12)) ^ 0x9E);
  v372 = 431
       * (*(unsigned __int8 *)(a4
                             + (v371 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v371 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v370 - 957 * ((4487950 * (unint64_t)v370) >> 32))) ^ 0x80)) ^ 0x80);
  LODWORD(STACK[0x4C8]) = v372;
  v373 = 431
       * (*(unsigned __int8 *)(a4 + (v371 - 957 * ((4487950 * (unint64_t)v371) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v372 - 957 * ((4487950 * (unint64_t)v372) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v374 = 431 * (((v354 >> 12) & 0xF0 | HIWORD(v350) & 0xF) ^ 0x3F);
  v375 = *(unsigned __int8 *)(a4
                            + (v374 + 290925 - 957 * ((4487950 * (unint64_t)(v374 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v373 - 957 * ((4487950 * (unint64_t)v373) >> 32))) ^ 0x80)) ^ 0x80;
  LODWORD(STACK[0x4C4]) = 431 * v375;
  v376 = 431 * v375 - 891436600 - ((862 * v375) & 0x3B8390);
  v377 = 431
       * (*(unsigned __int8 *)(a4 + (v374 - 957 * ((4487950 * (unint64_t)v374) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v376 ^ 0xCADDC1C8) % ((v376 & 0x3BD ^ 0x235) + (v376 & 0x3BD ^ 0x188u))) >> 4) ^ 0x88)
       + 290925;
  LODWORD(STACK[0x4C0]) = v355;
  LODWORD(STACK[0x4AC]) = v350;
  v378 = 431 * ((HIWORD(v355) & 0xF0 | (v350 >> 20) & 0xF) ^ 0xDC);
  v379 = *(unsigned __int8 *)(a4
                            + (v378 + 290925 - 957 * ((4487950 * (unint64_t)(v378 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v377 - 957 * ((4487950 * (unint64_t)v377) >> 32))) ^ 0x80));
  v380 = *(unsigned __int8 *)(a4 + (v378 - 957 * ((4487950 * (unint64_t)v378) >> 32)));
  v381 = 431 * (v379 ^ 0x80);
  LODWORD(STACK[0x4BC]) = v381;
  v382 = 431
       * (v380 ^ (*(unsigned __int8 *)(a4 + (v381 - 957 * ((4487950 * (unint64_t)v381) >> 32))) >> 4) ^ 0x88);
  LODWORD(STACK[0x4DC]) = (v382 + 290925) % (((914 - v382) ^ (v382 + 290925)) & 0x3BDu);
  v383 = 431 * (((v355 >> 20) & 0xF0 | HIBYTE(v350) & 0xF) ^ 0xD2);
  LODWORD(STACK[0x4B8]) = v383;
  LODWORD(STACK[0x4D8]) = (v383 + 290925) % (((v383 + 290925) | (914 - v383)) & 0x3BDu);
  v384 = ((2 * (LODWORD(STACK[0x6C8]) + 1181886726 + (v301 ^ 0xB896647))) & 0x77CFEFE2)
       + ((LODWORD(STACK[0x6C8]) + 1181886726 + (v301 ^ 0xB896647)) ^ 0xBBE7F7F1);
  v385 = v384;
  LODWORD(STACK[0x588]) = v384;
  v386 = (LODWORD(STACK[0x59C]) ^ (v384 + 1142425615))
       - ((2 * (LODWORD(STACK[0x59C]) ^ (v384 + 1142425615)) - 1187992710) & 0xB2CFB5D6)
       + 905982120;
  v387 = v386 ^ LODWORD(STACK[0x6DC]);
  v388 = v386;
  LODWORD(STACK[0x4A8]) = v386;
  v389 = v387;
  LODWORD(STACK[0x58C]) = v387;
  v390 = ((2 * v387) & 0x62BEDE3E ^ 0x62B44224) + (v387 ^ 0x4A05CE4D);
  LODWORD(STACK[0x6C0]) = v390;
  v391 = v390 + LODWORD(STACK[0x52C]) - ((2 * (v390 + LODWORD(STACK[0x52C])) + 2081807306) & 0x78758666);
  v392 = 431 * (((v391 - 96095976) >> 20) & 0xF ^ 3);
  v393 = (v392 + 279719) % ((((v392 + 279719) & 0x238) + ((856 - v392) & 0x238)) | 0x3AD);
  v394 = (LODWORD(STACK[0x6F0]) ^ 0x41C22175)
       + LODWORD(STACK[0x6A8])
       - ((2 * ((LODWORD(STACK[0x6F0]) ^ 0x41C22175) + LODWORD(STACK[0x6A8])) + 1855662474) & 0xF56B1174)
       + 839064959;
  LODWORD(STACK[0x6C8]) = v394;
  v395 = (LODWORD(STACK[0x6B0]) ^ 0xC4885630 ^ v394)
       - ((2 * (LODWORD(STACK[0x6B0]) ^ 0xC4885630 ^ v394) - 1187992710) & 0xE75CA2AE);
  v396 = 431 * (((v391 - 96095976) >> 28) ^ 0xB) + 279719;
  v397 = 431 * (((v391 - 96095976) >> 24) & 0xF ^ 0xC) + 279719;
  v398 = v397 - 957 * ((4487950 * (unint64_t)v397) >> 32);
  LODWORD(STACK[0x4B4]) = v395 + 1346807572;
  v399 = (v395 + 1346807572) ^ LODWORD(STACK[0x6E4]);
  LODWORD(STACK[0x4B0]) = v399;
  v400 = ((2 * v399) & 0xB7E2F7FE ^ LODWORD(STACK[0x47C])) + (v399 ^ 0xBA0A0F89);
  LODWORD(STACK[0x6B0]) = v400;
  v401 = LODWORD(STACK[0x514]) - v400 + 718038107 - ((2 * (LODWORD(STACK[0x514]) - v400 + 62239956)) & 0x4E2D5F0E);
  v402 = ((*(unsigned __int8 *)(a4 + v398) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4
                                                                                + (v396
                                                                                               - 957
                                                                                               * ((4487950
                                                                                                 * (unint64_t)v396) >> 32))) ^ 0x80) << 12);
  v403 = 431 * (((v391 - 96095976) >> 16) & 0xF ^ 0xA) + 279719;
  v404 = *(unsigned __int8 *)(a4 + (v403 - 957 * ((4487950 * (unint64_t)v403) >> 32))) ^ 0x80 | v402;
  v405 = 431 * (((unsigned __int16)(v391 - 20200) >> 12) ^ 0xC) + 279719;
  LODWORD(STACK[0x59C]) = v391 - 96095976;
  v406 = ((((v355 >> 20) & 0x9EF ^ 0x100B4822) + ((v355 >> 20) & 0x9EF ^ 0x1CD)) & ((2147482998
                                                                                   - (((v391 - 96095976) >> 8) & 0xF ^ 3)) & 0x6EF4913F ^ ((((v391 - 96095976) >> 8) & 0xF ^ 3) + 649)))
       * ((((v391 - 96095976) >> 8) & 0xF ^ 3) + 649);
  v407 = ((v404 << 8) ^ ((*(unsigned __int8 *)(a4 + v393) ^ 0x80) << 12) | *(unsigned __int8 *)(a4
                                                                                              + (v406 - 957 * ((4487950 * (unint64_t)v406) >> 32))) ^ 0x80) ^ (16 * (*(unsigned __int8 *)(a4 + (v405 - 957 * ((4487950 * (unint64_t)v405) >> 32))) ^ 0x80));
  v408 = (v407 << 8) + 137370078 - ((v407 << 9) & 0x10603200);
  v409 = 431 * (((v391 + 24) >> 4) ^ 3) + 279719;
  v410 = 431 * (((_BYTE)v391 + 40) & 0xF ^ 3) + 279719;
  v411 = 431 * (HIBYTE(v401) & 0xF ^ 7) + 279719;
  v412 = v411 - 957 * ((4487950 * (unint64_t)v411) >> 32);
  v413 = *(unsigned __int8 *)(a4 + (v410 - 957 * ((4487950 * (unint64_t)v410) >> 32))) ^ 0x80;
  v414 = (v408 ^ 0x83019DE | v413) ^ (16
                                    * (*(unsigned __int8 *)(a4
                                                          + (v409
                                                                         - 957
                                                                         * ((4487950 * (unint64_t)v409) >> 32))) ^ 0x80));
  v415 = *(unsigned __int8 *)(a4
                            + (431 * ((v401 >> 28) ^ 2)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v401 >> 28) ^ 2) + 279719)) >> 32))) ^ 0x80;
  v416 = *(unsigned __int8 *)(a4 + v412);
  v417 = (((v416 ^ 0x80) << 8) - 667208101 - ((v416 << 9) & 0x6C00)) ^ ((v415 << 12)
                                                                      - 667208101
                                                                      - ((v415 << 13) & 0x166000));
  v418 = ((((((unsigned __int16)v416 ^ 0x80) << 8) + 13915) & 0x100 ^ 0x1AF)
        + (((((unsigned __int16)v416 ^ 0x80) << 8) + 13915) & 0x100))
       * (((v401 >> 20) & 0xF ^ 1) + 649);
  v419 = 431 * (HIWORD(v401) & 0xF ^ 6) + 279719;
  v420 = 431 * (((unsigned __int16)v401 >> 12) ^ 0xA) + 279719;
  v421 = ((v417
         + (*(unsigned __int8 *)(a4 + (v419 - 957 * ((4487950 * (unint64_t)v419) >> 32))) ^ 0x80)) << 8) ^ ((*(unsigned __int8 *)(a4 + (v418 - 957 * ((4487950 * (unint64_t)v418) >> 32))) ^ 0x80) << 12);
  v422 = 431 * (~(v401 >> 8) & 0xF) + 279719;
  v423 = v421 | *(unsigned __int8 *)(a4 + (v422 - 957 * ((4487950 * (unint64_t)v422) >> 32))) ^ 0x80;
  v424 = *(unsigned __int8 *)(a4 + (v420 - 957 * ((4487950 * (unint64_t)v420) >> 32)));
  v425 = (v423 << 8) - 1442615934 - ((v423 << 9) & 0x5406DA00);
  v426 = 431 * ((v401 >> 4) ^ 8) + 279719;
  v427 = v426 - 957 * ((4487950 * (unint64_t)v426) >> 32);
  v428 = v425 ^ ((v424 ^ 0x80) << 12);
  v429 = *(unsigned __int8 *)(a4
                            + (431 * (v401 & 0xF ^ 7)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v401 & 0xF ^ 7) + 279719)) >> 32)));
  v430 = (v428 ^ 0xAA036D82 | v429 ^ 0x80) ^ (16 * (*(unsigned __int8 *)(a4 + v427) ^ 0x80));
  v431 = v413 & 0xF;
  v432 = 431 * (v431 | (16 * (v429 & 0xF)));
  v433 = v432 - 957 * ((4487950 * (unint64_t)v432) >> 32);
  v434 = 431
       * (*(unsigned __int8 *)(a4
                             + (v432 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v432 + 290925)) >> 32))) ^ LODWORD(STACK[0x6F8]) ^ 0x80);
  v435 = v434 + 290925 - 957 * ((4487950 * (unint64_t)(v434 + 290925)) >> 32);
  v436 = 431
       * (*(unsigned __int8 *)(a4 + v433) ^ (*(unsigned __int8 *)(a4
                                                                + (v434
                                                                               - 957
                                                                               * ((4487950 * (unint64_t)v434) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v437 = 431 * (v430 & 0xF0 | (v414 >> 4));
  v438 = 431
       * (*(unsigned __int8 *)(a4
                             + (v437 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v437 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v436 - 957 * ((4487950 * (unint64_t)v436) >> 32))) ^ 0x80)) ^ 0x80);
  v439 = v438 + 290925 - 957 * ((4487950 * (unint64_t)(v438 + 290925)) >> 32);
  v440 = 431
       * (*(unsigned __int8 *)(a4 + (v437 - 957 * ((4487950 * (unint64_t)v437) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v438 - 957 * ((4487950 * (unint64_t)v438) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v441 = 431 * ((v430 >> 4) & 0xF0 | (v414 >> 8) & 0xF);
  v442 = 431
       * (*(unsigned __int8 *)(a4
                             + (v441 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v441 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v440 - 957 * ((4487950 * (unint64_t)v440) >> 32))) ^ 0x80)) ^ 0x80);
  v443 = v442 + 290925 - 957 * ((4487950 * (unint64_t)(v442 + 290925)) >> 32);
  v444 = 431
       * (*(unsigned __int8 *)(a4 + (v441 - 957 * ((4487950 * (unint64_t)v441) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v442 - 957 * ((4487950 * (unint64_t)v442) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v445 = 431 * ((((v408 >> 12) ^ 0xFFFF7CF1) + ((v408 >> 12) & 0xFFFF0 ^ 0x830F) + 1) ^ (v428 >> 8) & 0xF0 ^ 0x60);
  v446 = 431
       * (*(unsigned __int8 *)(a4 + (v445 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(a4
                                                                                    + (v444 - 957 * ((4487950 * (unint64_t)v444) >> 32))) ^ 0x80)) ^ 0x80);
  v447 = v446 + 290925 - 957 * ((4487950 * (unint64_t)(v446 + 290925)) >> 32);
  v448 = 431
       * (*(unsigned __int8 *)(a4 + v445 % 0x3BD) ^ (*(unsigned __int8 *)(a4
                                                                        + (v446
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v446) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v449 = (v388 ^ 0x26982514)
       + v385
       + (v389 ^ 0xB6CD65F3)
       - ((2 * ((v388 ^ 0x26982514) + v385 + (v389 ^ 0xB6CD65F3)) + 137367586) & 0x43396A1A)
       - 441139938;
  LODWORD(STACK[0x6A8]) = v449;
  v450 = 431
       * (((unint64_t)(HIWORD(v428) & 0xF ^ 3) << (-124 * ((((v449 ^ 0xF2) - 16) | ((v449 ^ 0xD) + 16)) & 0xA1))) ^ HIWORD(v408) & 0xF);
  v451 = 431
       * (*(unsigned __int8 *)(a4 + (v450 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(a4
                                                                                    + (v448 - 957 * ((4487950 * (unint64_t)v448) >> 32))) ^ 0x80)) ^ 0x80);
  v452 = v451 + 290925 - 957 * ((4487950 * (unint64_t)(v451 + 290925)) >> 32);
  v453 = 431
       * (*(unsigned __int8 *)(a4 + v450 % 0x3BD) ^ (*(unsigned __int8 *)(a4
                                                                        + (v451
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v451) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v454 = 431 * ((HIWORD(v425) & 0xF0 | (v408 >> 20) & 0xF) ^ 3);
  v455 = 431
       * (*(unsigned __int8 *)(a4
                             + (v454 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v454 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v453 - 957 * ((4487950 * (unint64_t)v453) >> 32))) ^ 0x80)) ^ 0x80);
  v456 = v455 + 290925 - 957 * ((4487950 * (unint64_t)(v455 + 290925)) >> 32);
  v457 = 431
       * (*(unsigned __int8 *)(a4 + (v454 - 957 * ((4487950 * (unint64_t)v454) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v455 - 957 * ((4487950 * (unint64_t)v455) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v458 = *(unsigned __int8 *)(a4 + v435) ^ (16 * (*(unsigned __int8 *)(a4 + v439) ^ 0x80));
  v459 = 431 * (((v425 >> 20) & 0xF0 | HIBYTE(v408) & 0xF) ^ 0xA8);
  v460 = 431
       * (*(unsigned __int8 *)(a4
                             + (v459 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v459 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v457 - 957 * ((4487950 * (unint64_t)v457) >> 32))) ^ 0x80)) ^ 0x80);
  v461 = v458 ^ ((*(unsigned __int8 *)(a4 + v443) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + v447) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(a4 + v452) ^ 0x80) << 16) ^ ((*(unsigned __int8 *)(a4 + v456) ^ 0x80) << 20);
  v462 = 431
       * (*(unsigned __int8 *)(a4 + (v459 - 957 * ((4487950 * (unint64_t)v459) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v460 - 957 * ((4487950 * (unint64_t)v460) >> 32))) >> 4) ^ 0x88)
       + 290925;
  LODWORD(STACK[0x4A4]) = v408;
  v463 = 431
       * (*(unsigned __int8 *)(a4
                             + (431 * ((HIBYTE(v425) & 0xF0 | (v408 >> 28)) ^ 0xA0)
                                            + 290925
                                            - 957
                                            * ((4487950
                                              * (unint64_t)(431 * ((HIBYTE(v425) & 0xF0 | (v408 >> 28)) ^ 0xA0)
                                                                 + 290925)) >> 32))) ^ (16
                                                                                      * (*(unsigned __int8 *)(a4 + (v462 - 957 * ((4487950 * (unint64_t)v462) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v464 = v463 - 957 * ((4487950 * (unint64_t)v463) >> 32);
  v465 = v461 ^ ((*(unsigned __int8 *)(a4
                                     + (v460
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v460 + 290925)) >> 32))) ^ 0x80) << 24) ^ ((*(unsigned __int8 *)(a4 + v464) ^ 0x80) << (v464 & 0x1C) << (v464 & 0x1C ^ 0x1C));
  v466 = 431 * (HIBYTE(v465) & 0xF0 | (v408 >> 28));
  LODWORD(STACK[0x4A0]) = (v466 + 168952) % (((v466 + 168952) & 0x3BD) + ((7 - v466) & 0x3BDu));
  v467 = LODWORD(STACK[0x628]) - 653834699;
  LODWORD(STACK[0x628]) = v467;
  v468 = 431 * (HIBYTE(v467) & 0xF ^ 6) + 279719;
  v469 = ((*(unsigned __int8 *)(a4 + (v468 - 957 * ((4487950 * (unint64_t)v468) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((v467 >> 28) ^ 6) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v467 >> 28) ^ 6) + 279719)) >> 32))) ^ 0x80) << 12);
  v470 = 431 * ((v467 >> 20) & 0xF ^ 4) + 279719;
  v471 = 431 * (HIWORD(v467) & 0xF ^ 0xE) + 279719;
  v472 = ((v469 | *(unsigned __int8 *)(a4 + (v471 - 957 * ((4487950 * (unint64_t)v471) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v470 - 957 * ((4487950 * (unint64_t)v470) >> 32))) ^ 0x80) << 12);
  v473 = 431 * ((v467 >> 8) & 0xF ^ 0xE) + 279719;
  v474 = 431 * (((unsigned __int16)v467 >> 12) ^ 5) + 279719;
  v475 = 431 * ((v467 >> 4) ^ 4) + 279719;
  v476 = v472 | *(unsigned __int8 *)(a4 + (v473 - 957 * ((4487950 * (unint64_t)v473) >> 32))) ^ 0x80;
  v477 = (v476 << 8) - 889395560 - ((v476 << 9) & 0x95F9CC00);
  v478 = LODWORD(STACK[0x638]) + 1249993486;
  v479 = ((((((v478 >> 28) ^ 4) + 649) & 0x8E) + ((374 - ((v478 >> 28) ^ 4)) & 0x12E)) | 0xAB)
       * (((v478 >> 28) ^ 4) + 649);
  v480 = v477 ^ ((*(unsigned __int8 *)(a4 + (v474 - 957 * ((4487950 * (unint64_t)v474) >> 32))) ^ 0x80) << 12);
  v481 = 431 * (HIBYTE(v478) & 0xF ^ 0xA) + 279719;
  v482 = (v480 ^ 0xCAFCE698 | LODWORD(STACK[0x62C])) ^ (16
                                                      * (*(unsigned __int8 *)(a4
                                                                            + (v475
                                                                                           - 957
                                                                                           * ((4487950
                                                                                             * (unint64_t)v475) >> 32))) ^ 0x80));
  v483 = ((*(unsigned __int8 *)(a4 + (v481 - 957 * ((4487950 * (unint64_t)v481) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v479 - 957 * ((4487950 * (unint64_t)v479) >> 32))) ^ 0x80) << 12);
  v484 = 431 * ((v478 >> 20) & 0xF ^ 8) + 279719;
  v485 = 431 * (HIWORD(v478) & 0xF ^ 1) + 279719;
  v486 = v483 | *(unsigned __int8 *)(a4 + (v485 - 957 * ((4487950 * (unint64_t)v485) >> 32))) ^ 0x80;
  v487 = 431 * (((unsigned __int16)v478 >> 12) ^ 6) + 279719;
  v488 = 431 * ((((v478 >> 8) ^ 0x4A8163) & 0xF ^ 0x289) + ((2 * ((v478 >> 8) ^ 0x4A8163)) & 0x12));
  v489 = ((LOBYTE(STACK[0x638]) + 14) ^ 0xEu) >> ((STACK[0x630] & 4 ^ 4) + (STACK[0x630] & 4));
  v490 = (v486 << 8) ^ ((*(unsigned __int8 *)(a4
                                            + (v484 - 957 * ((4487950 * (unint64_t)v484) >> 32))) ^ 0x80) << 12);
  v491 = (((374 - v489) & 0x1AF) + ((v489 + 649) & 0x1AF)) * (v489 + 649);
  v492 = v491 - 957 * ((4487950 * (unint64_t)v491) >> 32);
  v493 = v490 | *(unsigned __int8 *)(a4 + (v488 - 957 * ((4487950 * (unint64_t)v488) >> 32))) ^ 0x80;
  v494 = (v493 << 8) + 928994 - ((v493 << 9) & 0x1C5800);
  v495 = 431
       * (*(unsigned __int8 *)(a4
                             + (LODWORD(STACK[0x620])
                                            - 957 * ((4487950 * (unint64_t)LODWORD(STACK[0x620])) >> 32))) ^ (*(unsigned __int8 *)(a4 + LODWORD(STACK[0x61C]) % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v496 = v495 - 957 * ((4487950 * (unint64_t)v495) >> 32);
  v497 = v494 ^ ((*(unsigned __int8 *)(a4 + (v487 - 957 * ((4487950 * (unint64_t)v487) >> 32))) ^ 0x80) << 12);
  v498 = (v497 ^ 0xE2CE2 | LODWORD(STACK[0x634]) ^ 0x80) ^ (16 * (*(unsigned __int8 *)(a4 + v492) ^ 0x80));
  v499 = 431 * (v498 & 0xF0 | (v482 >> 4));
  v500 = v499 - 957 * ((4487950 * (unint64_t)v499) >> 32);
  v501 = 431
       * (*(unsigned __int8 *)(a4
                             + (v499 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v499 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + v496) ^ 0x80)) ^ 0x80);
  v502 = LODWORD(STACK[0x604]) ^ (16
                                * (*(unsigned __int8 *)(a4
                                                      + (v501
                                                                     + 290925
                                                                     - 957
                                                                     * ((4487950 * (unint64_t)(v501 + 290925)) >> 32))) ^ 0x80));
  v503 = 431
       * (*(unsigned __int8 *)(a4 + v500) ^ (*(unsigned __int8 *)(a4
                                                                + (v501
                                                                               - 957
                                                                               * ((4487950 * (unint64_t)v501) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v504 = 431 * ((v498 >> 4) & 0xF0 | (v482 >> 8) & 0xF);
  v505 = 431
       * (*(unsigned __int8 *)(a4
                             + (v504 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v504 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v503 - 957 * ((4487950 * (unint64_t)v503) >> 32))) ^ 0x80)) ^ 0x80);
  v506 = v505 + 290925 - 957 * ((4487950 * (unint64_t)(v505 + 290925)) >> 32);
  v507 = 431
       * (*(unsigned __int8 *)(a4 + (v504 - 957 * ((4487950 * (unint64_t)v504) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v505 - 957 * ((4487950 * (unint64_t)v505) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v508 = ((unsigned __int16)v480 >> 12) ^ 0xE;
  v509 = ((2 * ((v497 >> 8) & 0xF0 | v508)) & 0x12C) + (((v497 >> 8) & 0xF0 | v508) ^ 0x8FFDA9B6);
  v510 = *(unsigned __int8 *)(a4 + (v507 - 957 * ((4487950 * (unint64_t)v507) >> 32))) ^ 0x80;
  v511 = 16 * v510 - 1811247364 - ((32 * v510) & 0xFFFFFDFF);
  v512 = *(unsigned __int8 *)(a4
                            + (((v509 + 1879202061) | (268281586 - v509)) & (v511 & 0x1A0 ^ 0xA0 | v511 & 0x1A0 ^ 0x10F))
                            * (v509 + 1879202061)
                            % 0x3BD) ^ 0x80;
  v513 = 431 * ((v512 - 1811247364 - ((2 * v512) & 0x1F8)) ^ v511);
  v514 = (v513 + 290925) % 0x3BD;
  v515 = *(unsigned __int8 *)(a4 + (431 * v509 - 1813021578) % 0x3BD) ^ (*(unsigned __int8 *)(a4 + v513 % 0x3BD) >> 4);
  v516 = ((*(unsigned __int8 *)(a4 + v514) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(a4 + v506) ^ 0x80) << 8);
  v517 = 431 * (((v497 >> 12) & 0xF0 | HIWORD(v480) & 0xF) ^ 0xEC);
  v518 = 431
       * (*(unsigned __int8 *)(a4
                             + (v517 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v517 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (431 * (v515 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v515 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v519 = v518 + 290925 - 957 * ((4487950 * (unint64_t)(v518 + 290925)) >> 32);
  v520 = 431
       * (*(unsigned __int8 *)(a4 + (v517 - 957 * ((4487950 * (unint64_t)v517) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v518 - 957 * ((4487950 * (unint64_t)v518) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v521 = 431 * ((HIWORD(v494) & 0xF0 | (v477 >> 20) & 0xF) ^ 0xF);
  v522 = 431
       * (*(unsigned __int8 *)(a4
                             + (v521 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v521 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v520 - 957 * ((4487950 * (unint64_t)v520) >> 32))) ^ 0x80)) ^ 0x80);
  v523 = v522 + 290925 - 957 * ((4487950 * (unint64_t)(v522 + 290925)) >> 32);
  v524 = 431
       * (*(unsigned __int8 *)(a4 + (v521 - 957 * ((4487950 * (unint64_t)v521) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v522 - 957 * ((4487950 * (unint64_t)v522) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v525 = ((*(unsigned __int8 *)(a4 + v523) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(a4 + v519) ^ 0x80) << 16);
  v526 = 431 * (((v494 >> 20) & 0xF0 | HIBYTE(v477) & 0xF) ^ 0xA);
  v527 = 431
       * (*(unsigned __int8 *)(a4
                             + (v526 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v526 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v524 - 957 * ((4487950 * (unint64_t)v524) >> 32))) ^ 0x80)) ^ 0x80);
  v528 = v527 + 290925 - 957 * ((4487950 * (unint64_t)(v527 + 290925)) >> 32);
  v529 = 431
       * (*(unsigned __int8 *)(a4 + (v526 - 957 * ((4487950 * (unint64_t)v526) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v527 - 957 * ((4487950 * (unint64_t)v527) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v530 = 431 * ((HIBYTE(v494) & 0xF0 | (v477 >> 28)) ^ 0xC) + 290925;
  v531 = *(unsigned __int8 *)(a4 + (v530 - 957 * ((4487950 * (unint64_t)v530) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v529 - 957 * ((4487950 * (unint64_t)v529) >> 32))) ^ 0x80));
  v502 ^= 0x80u;
  v532 = 431 * (v502 & 0xF0 | (v482 >> 4)) + 168952;
  v533 = 431 * (v531 ^ 0x80) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v531 ^ 0x80u) + 290925)) >> 32);
  v534 = v516 ^ v502;
  v535 = 431 * ((v534 >> 4) & 0xF0 | (v482 >> 8) & 0xF) + 168952;
  v536 = v535 - 957 * ((4487950 * (unint64_t)v535) >> 32);
  v537 = v508 & 0xFFFFFF0F | (16 * ((unsigned __int16)v516 >> 12));
  v538 = (((119 - v537) | (v537 + 392)) & 0x1AF) * (v537 + 392);
  v539 = v538 - 957 * ((4487950 * (unint64_t)v538) >> 32);
  v540 = LODWORD(STACK[0x610]) ^ (16
                                * (*(unsigned __int8 *)(a4
                                                      + (v532
                                                                     - 957 * ((4487950 * (unint64_t)v532) >> 32))) ^ 0x80)) ^ 0x80;
  v541 = v540 ^ ((*(unsigned __int8 *)(a4 + v536) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + v539) ^ 0x80) << 12);
  v542 = v525 ^ v534;
  v543 = v542 ^ ((*(unsigned __int8 *)(a4 + v528) ^ 0x80) << 24);
  v544 = 431
       * ((HIWORD(v480) & 0xF | (16
                               * (((((unsigned __int16)v516 >> 12) ^ 0xF) + ((unsigned __int16)v516 >> 12)) & HIWORD(v542)))) ^ 0xC)
       + 168952;
  v545 = 431 * ((HIWORD(v525) & 0xF0 | (v477 >> 20) & 0xF) ^ 0xF) + 168952;
  v546 = v543 ^ (*(unsigned __int8 *)(a4 + v533) << 28);
  v547 = 431 * (((v543 >> 20) & 0xF0 | HIBYTE(v477) & 0xF) ^ 0xA) + 168952;
  v548 = (HIBYTE(v546) & 0xF0 | (v477 >> 28)) ^ 0xC;
  v549 = v541 ^ ((*(unsigned __int8 *)(a4 + v544 % 0x3BD) ^ 0x80) << 16);
  v550 = v549 ^ ((*(unsigned __int8 *)(a4 + (v545 - 957 * ((4487950 * (unint64_t)v545) >> 32))) ^ 0x80) << 20);
  v551 = ((*(unsigned __int8 *)(a4 + (v547 - 957 * ((4487950 * (unint64_t)v547) >> 32))) ^ 0x80) << 24) ^ (*(unsigned __int8 *)(a4 + (431 * ((v548 - 1223264202 - 2 * (v548 & 0x37 ^ (v477 >> 28) & 1)) ^ 0xB7167836) + 168952) % 0x3BD) << 28) ^ v550;
  LOBYTE(v549) = BYTE2(v549) - ((v549 >> 15) & 0xE) - 121;
  v552 = *(unsigned __int8 *)(a4
                            + (431 * ((v550 >> 20) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v550 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80;
  v553 = ((*(unsigned __int8 *)(a4
                              + (431 * (HIBYTE(v551) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v551) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * (v551 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v551 >> 28) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * (v549 & 0xF ^ 7) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v549 & 0xF ^ 7) + 404709)) >> 32))) ^ 0x80;
  v554 = 431 * (BYTE1(v541) >> (((v549 & 8) + (v549 & 8 ^ 0xB8) + 76) & 0xFC)) + 404709;
  LODWORD(STACK[0x638]) = (((*(unsigned __int8 *)(a4
                                                + (431 * ((v541 >> 8) & 0xF)
                                                               + 404709
                                                               - 957
                                                               * ((4487950
                                                                 * (unint64_t)(431 * ((v541 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) | (((v553 - ((2 * v553) & 0xDB7E) + 28095) ^ (16 * v552 - ((32 * v552) & 0x1B60) + 28095)) << 16)) ^ ((*(unsigned __int8 *)(a4 + (v554 - 957 * ((4487950 * (unint64_t)v554) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x67C]) = (LODWORD(STACK[0x67C]) - 1996619647) ^ (16
                                                                * (*(unsigned __int8 *)(a4
                                                                                      + (431 * (v540 >> 4) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v540 >> 4) + 404709)) >> 32))) ^ 0x80));
  v555 = 431 * (HIBYTE(LODWORD(STACK[0x660])) & 0xF) + 404709;
  v556 = *(unsigned __int8 *)(a4 + (v555 - 957 * ((4487950 * (unint64_t)v555) >> 32))) ^ ((*(unsigned __int8 *)(a4 + (431 * (LODWORD(STACK[0x644]) >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (LODWORD(STACK[0x644]) >> 28) + 404709)) >> 32))) ^ 0x80) << (v517 & 4) << (v517 & 4 ^ 4));
  v557 = 431 * ((LODWORD(STACK[0x668]) >> 20) & 0xF) + 404709;
  v558 = 431 * (HIWORD(LODWORD(STACK[0x670])) & 0xF) + 404709;
  v559 = 431 * ((unsigned __int16)LODWORD(STACK[0x640]) >> 12) + 404709;
  v560 = (((*(unsigned __int8 *)(a4 + (v558 - 957 * ((4487950 * (unint64_t)v558) >> 32))) ^ 0x80) << 8) | ((v556 ^ 0x80) << 16)) ^ ((*(unsigned __int8 *)(a4 + (v557 - 957 * ((4487950 * (unint64_t)v557) >> 32))) ^ 0x80) << 12);
  v561 = *(unsigned __int8 *)(a4 + (v559 - 957 * ((4487950 * (unint64_t)v559) >> 32)));
  v562 = 431 * ((LODWORD(STACK[0x640]) >> 8) & 0xF) + 404709;
  v563 = (v560 | *(unsigned __int8 *)(a4 + (v562 - 957 * ((4487950 * (unint64_t)v562) >> 32))) ^ 0x80) ^ ((v561 ^ 0x80) << ((v561 & 4 ^ 4) + (v561 & 4)));
  v564 = 431 * ((LODWORD(STACK[0x640]) >> 4) ^ 8) + 404709;
  v565 = LODWORD(STACK[0x624]) ^ (16
                                * (*(unsigned __int8 *)(a4
                                                      + (v564
                                                                     - 957 * ((4487950 * (unint64_t)v564) >> 32))) ^ 0x80)) ^ (*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x650]) ^ 0x89246EBE)) ^ 0x80 | (v563 << 8));
  v566 = v565 - 51096673 - ((2 * v565) & 0xF9E8A73E);
  v567 = 431
       * (*(unsigned __int8 *)(a4
                             + (LODWORD(STACK[0x5B0])
                                            - 957 * ((4487950 * (unint64_t)LODWORD(STACK[0x5B0])) >> 32))) ^ (*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x5A0]) - 957 * ((4487950 * (unint64_t)LODWORD(STACK[0x5A0])) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v568 = 431
       * (*(unsigned __int8 *)(a4
                             + (LODWORD(STACK[0x5F0])
                                            + 290925
                                            - 957
                                            * ((4487950
                                              * (unint64_t)(LODWORD(STACK[0x5F0]) + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v567 - 957 * ((4487950 * (unint64_t)v567) >> 32))) ^ 0x80)) ^ 0x80);
  v569 = v568 + 290925 - 957 * ((4487950 * (unint64_t)(v568 + 290925)) >> 32);
  v570 = 431
       * (LODWORD(STACK[0x5F8]) ^ (*(unsigned __int8 *)(a4
                                                      + (v568
                                                                     - 957 * ((4487950 * (unint64_t)v568) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v571 = 431 * ((STACK[0x5B4] & 0xF | (16 * ((unsigned __int16)LODWORD(STACK[0x5DC]) >> 12))) ^ 0xEB);
  v572 = 431
       * (*(unsigned __int8 *)(a4
                             + (v571 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v571 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v570 - 957 * ((4487950 * (unint64_t)v570) >> 32))) ^ 0x80)) ^ 0x80);
  v573 = v572 + 290925 - 957 * ((4487950 * (unint64_t)(v572 + 290925)) >> 32);
  v574 = 431
       * (*(unsigned __int8 *)(a4 + (v571 - 957 * ((4487950 * (unint64_t)v571) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v572 - 957 * ((4487950 * (unint64_t)v572) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v575 = v574 - 957 * ((4487950 * (unint64_t)v574) >> 32);
  v576 = ((*(unsigned __int8 *)(a4 + v573) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(a4 + v569) ^ 0x80) << 8);
  v577 = *(unsigned __int8 *)(a4 + LODWORD(STACK[0x648])) ^ (16 * (*(unsigned __int8 *)(a4 + v575) ^ 0x80));
  v578 = 431
       * (*(unsigned __int8 *)(a4
                             + (LODWORD(STACK[0x5D8])
                                            - 957 * ((4487950 * (unint64_t)LODWORD(STACK[0x5D8])) >> 32))) ^ (*(unsigned __int8 *)(a4 + (431 * (v577 ^ 0x80) - 957 * ((4487950 * (unint64_t)(431 * (v577 ^ 0x80u))) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v579 = 431 * (LODWORD(STACK[0x5B8]) ^ 0x5FDFB9C4);
  v580 = 431
       * (*(unsigned __int8 *)(a4 + (v579 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(a4
                                                                                    + (v578 - 957 * ((4487950 * (unint64_t)v578) >> 32))) ^ 0x80)) ^ 0x80);
  v581 = 431
       * (*(unsigned __int8 *)(a4 + v579 % 0x3BD) ^ (*(unsigned __int8 *)(a4
                                                                        + (v580
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v580) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v582 = 431 * (((LODWORD(STACK[0x5BC]) >> 20) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5B4]) >> 12)) ^ 0xC3);
  v583 = 431
       * (*(unsigned __int8 *)(a4
                             + (v582 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v582 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v581 - 957 * ((4487950 * (unint64_t)v581) >> 32))) ^ 0x80)) ^ 0x80);
  v584 = v583 + 290925 - 957 * ((4487950 * (unint64_t)(v583 + 290925)) >> 32);
  v585 = *(unsigned __int8 *)(a4 + (v582 - 957 * ((4487950 * (unint64_t)v582) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v583 - 957 * ((4487950 * (unint64_t)v583) >> 32))) >> 4) ^ 0x88;
  v586 = (((348 - v585) | (v585 + 675)) & 0x1AF) * (v585 + 675);
  v587 = v586 - 957 * ((4487950 * (unint64_t)v586) >> 32);
  v588 = v587 + 1605152950 - ((2 * v587) & 0x16C);
  v589 = 431
       * (*(unsigned __int8 *)(a4
                             + (431
                              * (((v588 & 0xF ^ 6 | v588 & 0xF ^ 9) & (HIWORD(LODWORD(STACK[0x5B4])) ^ 0x2D48) | (16 * (LODWORD(STACK[0x5BC]) >> 28))) ^ 0xB0)
                              + 290925)
                             % 0x3BD) ^ (16 * (*(unsigned __int8 *)(a4 + (v588 ^ 0x5FACB0B6u)) ^ 0x80)) ^ 0x80)
       + 290925;
  v590 = (*(unsigned __int8 *)(a4 + (v589 - 957 * ((4487950 * (unint64_t)v589) >> 32))) << 28) ^ ((*(unsigned __int8 *)(a4 + v584) ^ 0x80) << 24);
  v591 = v576 ^ LODWORD(STACK[0x5C0]);
  v592 = v591 ^ ((*(unsigned __int8 *)(a4
                                     + ((((v577 ^ 0x80) + 675) & 0x1AF) + (((v577 ^ 0xFFFFFF7F) + 349) & 0x1AF))
                                     * ((v577 ^ 0x80) + 675)
                                     % 0x3BD) ^ 0x80) << 16);
  v593 = v592 ^ ((*(unsigned __int8 *)(a4
                                     + (v580
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v580 + 290925)) >> 32))) ^ 0x80) << 20);
  v594 = v593 ^ 0xC49E2124 ^ (v590 - 996269788 - ((2 * v590) & 0x88000000));
  v595 = 431 * ((v591 >> 4) & 0xF0 | (LODWORD(STACK[0x5D4]) >> 8) & 0xF) + 168952;
  v596 = v595 - 957 * ((4487950 * (unint64_t)v595) >> 32);
  v597 = LODWORD(STACK[0x5C8]) ^ ((*(unsigned __int8 *)(a4 + ((v596 - 1676270517 - ((2 * v596) & 0x96)) ^ 0x9C16244B)) ^ 0x80) << 8);
  v598 = 431 * (((v576 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x608]) >> 12)) ^ 0xD) + 168952;
  v599 = 431 * (((v592 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x608])) & 0xF) ^ 7) + 168952;
  v600 = 431 * ((HIWORD(v593) & 0xF0 | (LODWORD(STACK[0x600]) >> 20) & 0xF) ^ 0xD) + 168952;
  v601 = 431 * (((v594 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x600])) & 0xF) ^ 7) + 168952;
  v602 = *(unsigned __int8 *)(a4 + (v601 - 957 * ((4487950 * (unint64_t)v601) >> 32)));
  v603 = 431 * ((HIBYTE(v594) & 0xF0 | (LODWORD(STACK[0x600]) >> 28)) ^ 0xB) + 168952;
  v604 = v597 ^ ((*(unsigned __int8 *)(a4 + (v598 - 957 * ((4487950 * (unint64_t)v598) >> 32))) ^ 0x80) << 12);
  v605 = v604 ^ ((*(unsigned __int8 *)(a4 + (v599 - 957 * ((4487950 * (unint64_t)v599) >> 32))) ^ 0x80) << 16);
  v606 = v605 ^ ((*(unsigned __int8 *)(a4 + (v600 - 957 * ((4487950 * (unint64_t)v600) >> 32))) ^ 0x80) << 20);
  v607 = (((v602 ^ 0x80) << 24) - ((v602 << 25) & 0x40000000) - 1599380539) ^ v606;
  v608 = 431
       * (((v607 ^ (*(unsigned __int8 *)(a4 + (v603 - 957 * ((4487950 * (unint64_t)v603) >> 32))) << 28)) >> 28) ^ 0xA)
       + 404709;
  v609 = ((*(unsigned __int8 *)(a4
                              + (431 * (HIBYTE(v607) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v607) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v608 - 957 * ((4487950 * (unint64_t)v608) >> 32))) ^ 0x80) << 12);
  v610 = *(unsigned __int8 *)(a4
                            + (431 * (HIWORD(v605) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIWORD(v605) & 0xF) + 404709)) >> 32))) ^ 0x80;
  v611 = ((2 * v610) & 0xFFFFFFC7) + (v610 ^ 0xFFFCBBE3);
  v612 = (v611 + 214045 - ((v611 + 214045) | v609)) ^ -v609;
  LODWORD(STACK[0x670]) = (((((v611 + (v609 ^ 0xD4DF ^ (v612 - ((2 * v612) & 0xC1A9BE) + 6345951))) << 8) + 4463872) ^ ((*(unsigned __int8 *)(a4 + (431 * ((v606 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v606 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * ((v597 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v597 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((unsigned __int16)v604 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v604 >> 12) + 404709)) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x668]) = LODWORD(STACK[0x6E0]) ^ (16 * LODWORD(STACK[0x5D0]));
  v613 = 431 * (((LODWORD(STACK[0x594]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x598])) & 0xF) ^ 0xA) + 168952;
  v614 = (LODWORD(STACK[0x598]) >> 28) ^ 9 ^ (LODWORD(STACK[0x594]) >> 28 << ((STACK[0x4E4] & 4 ^ 4) + (STACK[0x4E4] & 4)));
  v615 = ((*(unsigned __int8 *)(a4 + (v613 - 957 * ((4487950 * (unint64_t)v613) >> 32))) ^ 0x80) << 24) ^ (*(unsigned __int8 *)(a4 + (((v614 + 392) | (119 - v614)) & 0x1AFu) * (v614 + 392) % 0x3BD) << 28);
  v616 = (((v615 - ((2 * v615) & 0x78000000u) + 1016583138) ^ LODWORD(STACK[0x4E8])) >> 24) ^ 0x3C;
  v617 = v616 - 909979502 - ((2 * v616) & 0x124);
  v618 = 431 * (HIWORD(LODWORD(STACK[0x4E8])) & 0xF) + 404709;
  v619 = 431 * ((unsigned __int16)LODWORD(STACK[0x4EC]) >> 12) + 404709;
  v620 = *(unsigned __int8 *)(a4 + (v618 - 957 * ((4487950 * (unint64_t)v618) >> 32))) ^ 0x80 | ((*(unsigned __int8 *)(a4 + (431 * (v617 & 0xF ^ 2) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v617 & 0xF ^ 2u) + 404709)) >> 32))) ^ 0x80) << 8) ^ (*(unsigned __int8 *)(a4 + (431 * ((v617 ^ 0xC9C2D092) >> ((v617 & 4 ^ 4) + (v617 & 4))) + 404709) % 0x3BD) << 12);
  v621 = 431 * ((LODWORD(STACK[0x4EC]) >> 8) & 0xF) + 404709;
  v622 = 431 * (LODWORD(STACK[0x4F4]) >> 4) + 404709;
  LODWORD(STACK[0x660]) = ((v620 << 16) ^ ((*(unsigned __int8 *)(a4 + LODWORD(STACK[0x584])) ^ 0x80) << 20) | ((*(unsigned __int8 *)(a4 + (v621 - 957 * ((4487950 * (unint64_t)v621) >> 32))) ^ 0x80) << 8)) ^ ((*(unsigned __int8 *)(a4 + (v619 - 957 * ((4487950 * (unint64_t)v619) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x648]) = LODWORD(STACK[0x590]) ^ 0x8B9A89C4 ^ (16
                                                              * (*(unsigned __int8 *)(a4
                                                                                    + (v622 - 957 * ((4487950 * (unint64_t)v622) >> 32))) ^ 0x80));
  v623 = LODWORD(STACK[0x6E4]) ^ LODWORD(STACK[0x6F0]);
  v624 = 431
       * (*(unsigned __int8 *)(a4 + LODWORD(STACK[0x4D8])) ^ (16
                                                            * (*(unsigned __int8 *)(a4 + LODWORD(STACK[0x4DC])) ^ 0x80)) ^ 0x80);
  v625 = 431
       * (*(unsigned __int8 *)(a4
                             + (LODWORD(STACK[0x4B8])
                                            - 957 * ((4487950 * (unint64_t)LODWORD(STACK[0x4B8])) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v624 - 957 * ((4487950 * (unint64_t)v624) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v626 = *(unsigned __int8 *)(a4 + (v625 - 957 * ((4487950 * (unint64_t)v625) >> 32)));
  v627 = 16 * (v626 ^ 0x80) + 1209036816 - 32 * (v626 & 1);
  v628 = *(unsigned __int8 *)(a4 + (LODWORD(STACK[0x4D4]) + 290925) % 0x3BDu) ^ (16
                                                                               * (*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x4D0]) + 290925 - 957 * ((4487950 * (unint64_t)(LODWORD(STACK[0x4D0]) + 290925)) >> 32))) ^ 0x80)) ^ ((*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x4CC]) + 290925 - 957 * ((4487950 * (unint64_t)(LODWORD(STACK[0x4CC]) + 290925)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x4C8]) + 290925 - 957 * ((4487950 * (unint64_t)(LODWORD(STACK[0x4C8]) + 290925)) >> 32))) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x4C4]) + 290925 - 957 * ((4487950 * (unint64_t)(LODWORD(STACK[0x4C4]) + 290925)) >> 32))) ^ 0x80) << 16) ^ ((*(unsigned __int8 *)(a4 + (LODWORD(STACK[0x4BC]) + 290925 - 957 * ((4487950 * (unint64_t)(LODWORD(STACK[0x4BC]) + 290925)) >> 32))) ^ 0x80) << 20) ^ ((unint64_t)(*(unsigned __int8 *)(a4 + (v624 + 290925 - 957 * ((4487950 * (unint64_t)(v624 + 290925)) >> 32))) ^ 0x80u) << (((v627 & 0xB0 ^ 0x10) + (v627 & 0xB0 ^ 0xA8)) & 0x1F));
  v629 = 431 * ((HIBYTE(LODWORD(STACK[0x4C0])) & 0xF0 | (LODWORD(STACK[0x4AC]) >> 28)) ^ 0x10) + 290925;
  v630 = *(unsigned __int8 *)(a4 + (v629 - 957 * ((4487950 * (unint64_t)v629) >> 32)));
  v631 = *(unsigned __int8 *)(a4
                            + (431 * (((v630 ^ 0x80) + 1209036816 - ((2 * v630) & 0x20)) ^ v627) + 290925)
                            % 0x3BD);
  LODWORD(STACK[0x6F0]) = v566;
  v632 = LODWORD(STACK[0x4E0]) >> ((~(_BYTE)v566 & 4 ^ 4) + (~(_BYTE)v566 & 4));
  v633 = 431 * (STACK[0x4F0] & 0xFFFFFF0F | (16 * (v628 & 0xF))) + 168952;
  v634 = v632 - ((2 * v632) & 0x38276E5A) + 471054125;
  v635 = 431 * (((v628 ^ 0x80) & 0xF0 | v634 & 0xF) ^ 0xD) + 168952;
  v636 = 431 * (((v628 >> 4) & 0xF0 | (v634 >> 4)) ^ 2) + 168952;
  v637 = 431 * (((v628 >> 8) & 0xF0 | (v634 >> 8) & 0xF) ^ 7) + 168952;
  v638 = 431 * (((v628 >> 12) & 0xF0 | ((unsigned __int16)v634 >> 12)) ^ 0xB) + 168952;
  v639 = 431 * ((HIWORD(v628) & 0xF0 | HIWORD(v634) & 0xF) ^ 3) + 168952;
  v640 = v628 ^ ((v631 << 28) - ((v631 << 29) & 0xA0000000) - 619946100);
  v641 = 431 * (((v628 >> 20) & 0xF0 | (v634 >> 20) & 0xF) ^ 1) + 168952;
  v642 = *(unsigned __int8 *)(a4 + (v641 - 957 * ((4487950 * (unint64_t)v641) >> 32)));
  v643 = HIBYTE(v640) & 0xF0 | HIBYTE(v634) & 0xF;
  v644 = *(unsigned __int8 *)(a4 + (v633 - 957 * ((4487950 * (unint64_t)v633) >> 32)));
  LODWORD(STACK[0x644]) = v644;
  v645 = v644 ^ (16
               * (*(unsigned __int8 *)(a4 + (v635 - 957 * ((4487950 * (unint64_t)v635) >> 32))) ^ 0x80)) ^ 0x80;
  v646 = v645 ^ ((*(unsigned __int8 *)(a4 + (v636 - 957 * ((4487950 * (unint64_t)v636) >> 32))) ^ 0x80) << 8);
  v647 = v646 ^ ((*(unsigned __int8 *)(a4 + (v637 - 957 * ((4487950 * (unint64_t)v637) >> 32))) ^ 0x80) << 12);
  v648 = v647 ^ ((*(unsigned __int8 *)(a4 + (v638 - 957 * ((4487950 * (unint64_t)v638) >> 32))) ^ 0x80) << 16);
  v649 = v648 ^ ((*(unsigned __int8 *)(a4 + (v639 - 957 * ((4487950 * (unint64_t)v639) >> 32))) ^ 0x80) << 20);
  v650 = v649 ^ (((v642 ^ 0x80) << 24) + 1381584318 - ((v642 << 25) & 0xA4000000)) ^ 0x52594DBE;
  v651 = 431
       * ((v650 ^ (*(unsigned __int8 *)(a4
                                      + (431 * (v643 ^ 0xDC)
                                                     + 168952
                                                     - 957
                                                     * ((4487950 * (unint64_t)(431 * (v643 ^ 0xDCu) + 168952)) >> 32))) << 28)) >> 28)
       + 404709;
  v652 = (((HIBYTE(v650) & 0xF) + 939) & 0x1AF ^ (4 - HIBYTE(v650)) & 0xF) * ((HIBYTE(v650) & 0xF) + 939);
  LODWORD(STACK[0x630]) = ((((((*(unsigned __int8 *)(a4
                                                   + (v652
                                                                  - 957 * ((4487950 * (unint64_t)v652) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v651 - 957 * ((4487950 * (unint64_t)v651) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * (HIWORD(v648) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v648) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((v649 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v649 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * ((v646 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v646 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((unsigned __int16)v647 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v647 >> 12) + 404709)) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x634]) = v623 ^ (16
                                * (*(unsigned __int8 *)(a4
                                                      + (431 * (v645 >> 4)
                                                                     + 404709
                                                                     - 957
                                                                     * ((4487950
                                                                       * (unint64_t)(431
                                                                                          * (v645 >> 4)
                                                                                          + 404709)) >> 32))) ^ 0x80));
  v654 = STACK[0x6C8];
  v655 = STACK[0x4B0];
  v656 = (LODWORD(STACK[0x4B0]) ^ 0x53934F28)
       + (((v623 ^ 0x1E00C0F5) + 2058717370 - ((2 * (v623 ^ 0x1E00C0F5)) & 0xF56B1174)) ^ LODWORD(STACK[0x6C8]));
  LODWORD(STACK[0x600]) = v656;
  v657 = v654 ^ 0x7AB588BA;
  v658 = STACK[0x4B4];
  v659 = v657 + (LODWORD(STACK[0x4B4]) ^ 0xC51AEA8) + (v655 ^ 0xAC6CB0D7) + 2;
  LODWORD(STACK[0x624]) = v659;
  v660 = (v659 - ((2 * v659) & 0xE75CA2AE) - 206679721) ^ v658;
  LODWORD(STACK[0x640]) = v660;
  v661 = 431 * (v431 & 0xFFFFFF0F | (16 * (v465 & 0xF))) + 168952;
  v662 = 431 * ((v465 >> 4) & 0xF0 | (v414 >> 8) & 0xF) + 168952;
  v663 = 431 * ((v465 ^ 0x80) & 0xF0 | (v414 >> 4)) + 168952;
  v664 = *(unsigned __int8 *)(a4 + (v662 - 957 * ((4487950 * (unint64_t)v662) >> 32))) ^ 0x80;
  v665 = *(unsigned __int8 *)(a4 + (v661 - 957 * ((4487950 * (unint64_t)v661) >> 32)));
  LODWORD(STACK[0x62C]) = v665;
  v666 = v665 ^ (16
               * (*(unsigned __int8 *)(a4 + (v663 - 957 * ((4487950 * (unint64_t)v663) >> 32))) ^ 0x80));
  v667 = v666 ^ 0xAA0FB4D4 ^ ((v664 << 8) - 1441811371 + ~((v664 << 9) & 0x16800));
  v668 = 431 * (((v465 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x4A4]) >> 12)) ^ 1) + 168952;
  v669 = 431 * ((v465 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x4A4])) & 0xF) + 168952;
  v670 = 431 * ((HIWORD(v465) & 0xF0 | (LODWORD(STACK[0x4A4]) >> 20) & 0xF) ^ 3) + 168952;
  v671 = 431 * (((v465 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x4A4])) & 0xF) ^ 8) + 168952;
  v672 = v667 ^ ((*(unsigned __int8 *)(a4 + (v668 - 957 * ((4487950 * (unint64_t)v668) >> 32))) ^ 0x80) << 12);
  v673 = v672 ^ ((*(unsigned __int8 *)(a4 + (v669 - 957 * ((4487950 * (unint64_t)v669) >> 32))) ^ 0x80) << 16);
  v674 = v673 ^ ((*(unsigned __int8 *)(a4 + (v670 - 957 * ((4487950 * (unint64_t)v670) >> 32))) ^ 0x80) << 20);
  v675 = (*(unsigned __int8 *)(a4 + LODWORD(STACK[0x4A0])) << 28) ^ ((*(unsigned __int8 *)(a4
                                                                                         + (v671 - 957 * ((4487950 * (unint64_t)v671) >> 32))) ^ 0x80) << 24) ^ v674;
  v676 = ((((*(unsigned __int8 *)(a4
                                + (431 * (HIBYTE(v675) & 0xF)
                                               + 404709
                                               - 957
                                               * ((4487950 * (unint64_t)(431 * (HIBYTE(v675) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * (v675 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v675 >> 28) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * (HIWORD(v673) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v673) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((v674 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v674 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12);
  v677 = 431 * ((v666 >> 4) ^ 8) + 404709;
  v678 = v677 - 957 * ((4487950 * (unint64_t)v677) >> 32);
  LODWORD(STACK[0x608]) = ((v676 | *(unsigned __int8 *)(a4
                                                      + (431 * ((v667 >> 8) & 0xF)
                                                                     + 404709
                                                                     - 957
                                                                     * ((4487950
                                                                       * (unint64_t)(431 * ((v667 >> 8) & 0xF)
                                                                                          + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((unsigned __int16)v672 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v672 >> 12) + 404709)) >> 32))) ^ 0x80) << 12);
  v679 = ((v666 & 0x18) + (v666 & 0x18 ^ 0x18) - 24) & 0xF8 ^ 0x922C310F;
  v680 = STACK[0x6A8];
  v681 = LODWORD(STACK[0x4A8]) ^ 0x78FB6FE6 ^ LODWORD(STACK[0x6A8]);
  LODWORD(STACK[0x620]) = v681;
  v680 ^= 0xEDF5EB38;
  LODWORD(STACK[0x604]) = v680;
  v682 = v680 + LODWORD(STACK[0x6C0]) - v681 + v679;
  v683 = v682
       - 20479978
       + LODWORD(STACK[0x540])
       - ((2 * (v682 - 20479978 + LODWORD(STACK[0x540])) + 1941589434) & 0x7B9CC066);
  LODWORD(STACK[0x610]) = v659 ^ 0x4C695E35;
  v684 = LODWORD(STACK[0x6B0]) + (v659 ^ 0x4C695E35) - v660;
  LODWORD(STACK[0x61C]) = v684;
  v685 = v684 + 123337018;
  v686 = LODWORD(STACK[0x53C])
       - (v684
        + 123337018)
       - 2
       * ((LODWORD(STACK[0x53C]) - (v684 + 123337018) + 541332488) & 0x3964CEFD ^ (LODWORD(STACK[0x53C])
                                                                                 - (v684
                                                                                  + 123337018)) & 1);
  v687 = v683 - 1213495536;
  v688 = 431 * (((v683 - 1213495536) >> 28) ^ 0xB) + 279719;
  v689 = 431 * (HIBYTE(v687) & 0xF ^ 0xD) + 279719;
  v690 = 431 * ((v687 >> 20) & 0xF ^ 0xC) + 279719;
  v691 = 431 * (HIWORD(v687) & 0xF ^ 0xE) + 279719;
  v692 = ((*(unsigned __int8 *)(a4 + (v689 - 957 * ((4487950 * (unint64_t)v689) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v688 - 957 * ((4487950 * (unint64_t)v688) >> 32))) ^ 0x80) << 12);
  v693 = 431 * (((unsigned __int16)v687 >> 12) ^ 6) + 279719;
  v694 = ((v692 | *(unsigned __int8 *)(a4 + (v691 - 957 * ((4487950 * (unint64_t)v691) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v690 - 957 * ((4487950 * (unint64_t)v690) >> 32))) ^ 0x80) << 12);
  v695 = 431 * ((v687 >> 4) ^ 3) + 279719;
  v696 = v694 | *(unsigned __int8 *)(a4
                                   + (431 * ((v687 >> 8) & 0xF)
                                                  + 279719
                                                  - 957
                                                  * ((4487950 * (unint64_t)(431 * ((v687 >> 8) & 0xF) + 279719)) >> 32))) ^ 0x80;
  v697 = (v696 << 8) + 625833953 - ((v696 << 9) & 0x4A9AEE00);
  v686 -= 643243260;
  v698 = 431 * ((HIBYTE(v686) ^ 0xB9) >> ((HIBYTE(v686) & 4 ^ 4) + (HIBYTE(v686) & 4))) + 279719;
  v699 = 431 * (HIBYTE(v686) & 0xF ^ 9) + 279719;
  v700 = 431 * ((v686 >> 20) & 0xF ^ 6) + 279719;
  v701 = v697 ^ ((*(unsigned __int8 *)(a4 + (v693 - 957 * ((4487950 * (unint64_t)v693) >> 32))) ^ 0x80) << 12);
  v702 = *(unsigned __int8 *)(a4
                            + (431 * (v687 & 0xF ^ 3)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v687 & 0xF ^ 3) + 279719)) >> 32))) ^ 0x80;
  v703 = (v701 ^ 0x254D77E1 | v702) ^ (16
                                     * (*(unsigned __int8 *)(a4
                                                           + (v695
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v695) >> 32))) ^ 0x80));
  v704 = 431 * (HIWORD(v686) & 0xF ^ 4) + 279719;
  v705 = ((*(unsigned __int8 *)(a4 + (v699 - 957 * ((4487950 * (unint64_t)v699) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v698 - 957 * ((4487950 * (unint64_t)v698) >> 32))) ^ 0x80) << 12);
  v706 = 431 * (((unsigned __int16)v686 >> 12) ^ 0xC) + 279719;
  v707 = 431 * ((v686 >> 8) & 0xF ^ 0xE) + 279719;
  v708 = ((v705 | *(unsigned __int8 *)(a4 + (v704 - 957 * ((4487950 * (unint64_t)v704) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v700 - 957 * ((4487950 * (unint64_t)v700) >> 32))) ^ 0x80) << 12);
  v709 = 431 * (~(v686 >> 4) & 0xF) + 279719;
  v710 = ((v708 | *(unsigned __int8 *)(a4 + (v707 - 957 * ((4487950 * (unint64_t)v707) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v706 - 957 * ((4487950 * (unint64_t)v706) >> 32))) ^ 0x80) << 12);
  v711 = *(unsigned __int8 *)(a4
                            + (431 * (v686 & 0xF ^ 0xC)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v686 & 0xF ^ 0xC) + 279719)) >> 32)));
  v712 = v702 & 0xF;
  v713 = 431 * (v712 | (16 * (v711 & 0xF)));
  v714 = 431
       * (*(unsigned __int8 *)(a4
                             + (v713 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v713 + 290925)) >> 32))) ^ LODWORD(STACK[0x6F8]) ^ 0x80);
  v715 = (v710 | v711 ^ 0x80) ^ (16
                               * (*(unsigned __int8 *)(a4
                                                     + (v709
                                                                    - 957 * ((4487950 * (unint64_t)v709) >> 32))) ^ 0x80));
  v716 = 431
       * (*(unsigned __int8 *)(a4 + (v713 - 957 * ((4487950 * (unint64_t)v713) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v714 - 957 * ((4487950 * (unint64_t)v714) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v717 = 431 * (v715 & 0xF0 | (v703 >> 4));
  v718 = 431
       * (*(unsigned __int8 *)(a4
                             + (v717 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v717 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v716 - 957 * ((4487950 * (unint64_t)v716) >> 32))) ^ 0x80)) ^ 0x80);
  v719 = v656 ^ 0x155D68EC ^ (16 * (*(unsigned __int8 *)(a4 + v678) ^ 0x80));
  v720 = 431
       * (*(unsigned __int8 *)(a4 + (v717 - 957 * ((4487950 * (unint64_t)v717) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v718 - 957 * ((4487950 * (unint64_t)v718) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v721 = v720 - 957 * ((4487950 * (unint64_t)v720) >> 32);
  v722 = (v715 >> 4) & 0xF0 | (v703 >> 8) & 0xF;
  v723 = v722 - 58116815 - 2 * (v722 & 0x3D ^ (v703 >> 8) & 0xC);
  v724 = (v723 & 0x14 ^ 0x104) + (v723 & 0x14 ^ 0x10);
  v725 = 431 * (v723 ^ 0xFC893531);
  v726 = v725 % (v724 | 0x3ADu);
  v727 = 431
       * (*(unsigned __int8 *)(a4 + (v725 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(a4
                                                                                    + ((v721
                                                                                      + 1269695622
                                                                                      - ((2 * v721) & 0x10C)) ^ 0x4BAE0486u)) ^ 0x80)) ^ 0x80);
  v728 = 431
       * (*(unsigned __int8 *)(a4 + v726) ^ (*(unsigned __int8 *)(a4
                                                                + (v727
                                                                               - 957
                                                                               * ((4487950 * (unint64_t)v727) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v729 = (v710 >> 12) - ((2 * (v710 >> 12)) & 0x1578BA) + 1241168989;
  v730 = 431 * (((((unsigned __int16)v701 >> 12) ^ 7) & 0xFFFFFF0F | (16 * (v729 & 0xF))) ^ 0xD0);
  v731 = 431
       * (*(unsigned __int8 *)(a4
                             + (v730 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v730 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v728 - 957 * ((4487950 * (unint64_t)v728) >> 32))) ^ 0x80)) ^ 0x80);
  v732 = 431
       * (*(unsigned __int8 *)(a4 + (v730 - 957 * ((4487950 * (unint64_t)v730) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v731 - 957 * ((4487950 * (unint64_t)v731) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v733 = ((v729 >> 4) ^ 0x49FABC5) - ((2 * ((v729 >> 4) ^ 0x49FABC5)) & 0x5608642) + 1924154145;
  v734 = 431 * ((HIWORD(v701) & 0xF | (16 * (v733 & 0xF))) ^ 0x1D);
  v735 = *(unsigned __int8 *)(a4
                            + (v734 + 290925 - 957 * ((4487950 * (unint64_t)(v734 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v732 - 957 * ((4487950 * (unint64_t)v732) >> 32))) ^ 0x80));
  v736 = ((*(unsigned __int8 *)(a4
                              + (v731
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v731 + 290925)) >> 32))) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(a4 + (v727 + 290925 - 957 * ((4487950 * (unint64_t)(v727 + 290925)) >> 32))) ^ 0x80) << 8);
  v737 = 431 * (v735 ^ 0x80);
  v738 = 431
       * (*(unsigned __int8 *)(a4 + (v734 - 957 * ((4487950 * (unint64_t)v734) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v737 - 957 * ((4487950 * (unint64_t)v737) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v739 = 431 * ((v733 & 0xF0 | (v697 >> 20) & 0xF) ^ 0x24);
  v740 = 431
       * (*(unsigned __int8 *)(a4
                             + (v739 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v739 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v738 - 957 * ((4487950 * (unint64_t)v738) >> 32))) ^ 0x80)) ^ 0x80);
  v741 = 431
       * (*(unsigned __int8 *)(a4 + (v739 - 957 * ((4487950 * (unint64_t)v739) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v740 - 957 * ((4487950 * (unint64_t)v740) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v742 = 431 * (((v733 >> 4) & 0xF0 | HIBYTE(v697) & 0xF) ^ 0x35);
  v743 = 431
       * (*(unsigned __int8 *)(a4
                             + (v742 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v742 + 290925)) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v741 - 957 * ((4487950 * (unint64_t)v741) >> 32))) ^ 0x80)) ^ 0x80);
  v744 = 431
       * (*(unsigned __int8 *)(a4 + (v742 - 957 * ((4487950 * (unint64_t)v742) >> 32))) ^ (*(unsigned __int8 *)(a4 + (v743 - 957 * ((4487950 * (unint64_t)v743) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v745 = 431 * (((v733 >> 8) & 0xF0 | (v697 >> 28)) ^ 0x42) + 290925;
  v746 = 431
       * (*(unsigned __int8 *)(a4 + (v745 - 957 * ((4487950 * (unint64_t)v745) >> 32))) ^ (16 * (*(unsigned __int8 *)(a4 + (v744 - 957 * ((4487950 * (unint64_t)v744) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v747 = (*(unsigned __int8 *)(a4 + (v746 - 957 * ((4487950 * (unint64_t)v746) >> 32))) << 28) ^ ((*(unsigned __int8 *)(a4 + (v743 + 290925 - 957 * ((4487950 * (unint64_t)(v743 + 290925)) >> 32))) ^ 0x80) << 24);
  v748 = 16
       * (*(unsigned __int8 *)(a4
                             + (v718 + 290925 - 957
                                                            * ((4487950 * (unint64_t)(v718 + 290925)) >> 32))) ^ 0x80);
  v749 = v736 ^ v748 ^ ((*(unsigned __int8 *)(a4
                                            + (v737
                                                           + 290925
                                                           - 957 * ((4487950 * (unint64_t)(v737 + 290925)) >> 32))) ^ 0x80) << 16);
  v750 = 431 * (((v736 ^ v748) >> 4) & 0xF0 | (v703 >> 8) & 0xF) + 168952;
  v751 = 431 * ((v736 >> 8) & 0xF0 | ((unsigned __int16)v701 >> 12) ^ 7) + 168952;
  v752 = ((*(unsigned __int8 *)(a4 + (v751 - 957 * ((4487950 * (unint64_t)v751) >> 32))) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(a4 + (v750 - 957 * ((4487950 * (unint64_t)v750) >> 32))) ^ 0x80) << 8);
  v753 = v749 ^ ((*(unsigned __int8 *)(a4
                                     + (v740
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v740 + 290925)) >> 32))) ^ 0x80) << 20);
  v754 = 431 * (((v749 >> 12) & 0xF0 | HIWORD(v701) & 0xF) ^ 0xD) + 168952;
  v755 = 431 * ((HIWORD(v753) & 0xF0 | (v697 >> 20) & 0xF) ^ 4) + 168952;
  v756 = ((*(unsigned __int8 *)(a4 + (v755 - 957 * ((4487950 * (unint64_t)v755) >> 32))) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(a4 + (v754 - 957 * ((4487950 * (unint64_t)v754) >> 32))) ^ 0x80) << 16);
  LOBYTE(v754) = *(_BYTE *)(a4
                          + (v714 + 290925 - 957 * ((4487950 * (unint64_t)(v714 + 290925)) >> 32)));
  v757 = v753 ^ 0x2FE1AB51 ^ (v747 + 803318609 + (~(2 * v747) | 0xA1FFFFFF) + 1);
  v758 = v712 & 0xFFFFFF0F | (16 * (v754 & 0xF));
  v759 = 431 * (((v754 ^ v748) ^ 0x80) & 0xF0 | (v703 >> 4)) + 168952;
  v760 = v759 - 957 * ((4487950 * (unint64_t)v759) >> 32);
  v761 = 431 * (((v757 >> 20) & 0xF0 | HIBYTE(v697) & 0xF) ^ 5) + 168952;
  v762 = v761 - 957 * ((4487950 * (unint64_t)v761) >> 32);
  v763 = 431 * ((HIBYTE(v757) & 0xF0 | (v697 >> 28)) ^ 2) + 168952;
  v764 = *(unsigned __int8 *)(a4
                            + (431 * v758
                                           + 168952
                                           - 957 * ((4487950 * (unint64_t)(431 * v758 + 168952)) >> 32)));
  v765 = v764 ^ (16 * (*(unsigned __int8 *)(a4 + v760) ^ 0x80)) ^ 0x80;
  v766 = *(unsigned __int8 *)(a4 + v762) ^ 0x80;
  v767 = v752 ^ v765;
  v768 = v756 ^ v752 ^ v765;
  v769 = v768 ^ (v766 << 24);
  v770 = 431
       * ((v769 ^ (*(unsigned __int8 *)(a4 + (v763 - 957 * ((4487950 * (unint64_t)v763) >> 32))) << 28)) >> 28)
       + 404709;
  v771 = ((((((*(unsigned __int8 *)(a4
                                  + (431 * (HIBYTE(v769) & 0xF)
                                                 + 404709
                                                 - 957
                                                 * ((4487950 * (unint64_t)(431 * (HIBYTE(v769) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (v770 - 957 * ((4487950 * (unint64_t)v770) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * (HIWORD(v768) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v768) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((v756 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v756 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(a4 + (431 * ((v767 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v767 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(a4 + (431 * ((unsigned __int16)v752 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v752 >> 12) + 404709)) >> 32))) ^ 0x80) << 12);
  v772 = (((_WORD)v682 + 4728) & 0x1000 ^ 0xE7DFFBFD) + 2 * (((_WORD)v682 + 4728) & 0x1000);
  LODWORD(STACK[0x6E0]) = (LODWORD(STACK[0x6BC]) + 1284404204) ^ 0x9ABA0DDA ^ LODWORD(STACK[0x628]);
  v773 = LODWORD(STACK[0x67C]) ^ (LODWORD(STACK[0x638]) | *(unsigned __int8 *)(a4 + (LODWORD(STACK[0x694]) ^ 0x1B53BC49u)) ^ 0x80);
  LODWORD(STACK[0x650]) = v773 - 1952806460 - ((2 * v773) & 0x17351388);
  LODWORD(STACK[0x698]) = (LODWORD(STACK[0x698]) ^ 0x58BBA55E ^ LODWORD(STACK[0x6A0]))
                        - 1952806460
                        - ((2 * (LODWORD(STACK[0x698]) ^ 0x58BBA55E ^ LODWORD(STACK[0x6A0]))) & 0x17351388);
  LODWORD(STACK[0x6E4]) = LODWORD(STACK[0x668]) ^ 0xCF6224A5 ^ (LODWORD(STACK[0x670]) | *(unsigned __int8 *)(a4 + (431 * (STACK[0x658] & 0xF) + 404709 - 957 * ((4487950 * (431 * (STACK[0x658] & 0xF) + 404709)) >> 32))) ^ 0x80);
  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x64C]) ^ 0x18200267 ^ LODWORD(STACK[0x680]);
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x648]) ^ (LODWORD(STACK[0x660]) | *(unsigned __int8 *)(a4
                                                                                              + (431 * (STACK[0x5E0] & 0xF) + 404709 - 957 * ((4487950 * (431 * (STACK[0x5E0] & 0xF) + 404709)) >> 32))) ^ 0x80);
  LODWORD(STACK[0x694]) = LODWORD(STACK[0x654]) ^ 0xDD949717 ^ (LODWORD(STACK[0x5FC]) + 1842597616);
  v774 = LODWORD(STACK[0x6DC]) ^ LODWORD(STACK[0x5CC]);
  v775 = v774 ^ 0x56A0AAA8 ^ LODWORD(STACK[0x5EC]);
  v776 = LODWORD(STACK[0x634]) ^ 0xB5DA819 ^ (LODWORD(STACK[0x630]) | *(unsigned __int8 *)(a4
                                                                                         + (431 * (STACK[0x644] & 0xF) + 404709 - 957 * ((4487950 * (431 * (STACK[0x644] & 0xF) + 404709)) >> 32))) ^ 0x80);
  v777 = (LODWORD(STACK[0x58C]) ^ 0x49329A0C)
       + (v774 ^ 0x6423D95F ^ (((2 * (LODWORD(STACK[0x588]) - 700172001)) & 0xDBA79DE0)
                             + ((LODWORD(STACK[0x588]) - 700172001) ^ 0x6DD3CEF0)));
  v778 = v777 ^ 0x67839343 ^ LODWORD(STACK[0x59C]);
  v779 = v719 ^ (LODWORD(STACK[0x608]) | *(unsigned __int8 *)(a4
                                                            + (431 * (STACK[0x62C] & 0xF)
                                                                           + 404709
                                                                           - 957
                                                                           * ((4487950
                                                                             * (431 * (STACK[0x62C] & 0xF) + 404709)) >> 32))) ^ 0x80);
  v780 = v777 + LODWORD(STACK[0x6C0]) + 1302364995 + v682 - 20479978;
  v781 = v780 + 1719087171 - ((2 * v780) & 0xCCEE6086);
  v782 = LODWORD(STACK[0x600]) + LODWORD(STACK[0x6B0]) - 2112478866 + v685;
  v783 = v782 - 354598694 - ((2 * v782) & 0xD5BA81B4);
  v784 = v687 ^ v781;
  v785 = v771 | *(unsigned __int8 *)(a4
                                   + (431 * (v764 & 0xF)
                                                  + 404709
                                                  - 957
                                                  * ((4487950 * (unint64_t)(431 * (v764 & 0xFu) + 404709)) >> 32))) ^ 0x80;
  v786 = (v781 ^ 0x66773043) - 1341789993 + (HIWORD(v701) & 0x1729 ^ 0x4FFA1220 | HIWORD(v701) & 0x1729 ^ 0x509);
  v787 = v682 - 37260680;
  v788 = v783 ^ (16
               * (*(unsigned __int8 *)(a4
                                     + (431 * (v765 >> 4)
                                                    + 404709
                                                    - 957
                                                    * ((4487950
                                                      * (unint64_t)(431
                                                                         * (v765 >> 4)
                                                                         + 404709)) >> 32))) ^ 0x80)) ^ 0xFF802836 ^ v785;
  v789 = (LODWORD(STACK[0x6A8]) ^ 0x747D2484 ^ v781)
       + v787
       + 382483473
       - ((2 * ((LODWORD(STACK[0x6A8]) ^ 0x747D2484 ^ v781) + v787)) & 0x2D987822);
  v790 = STACK[0x61C];
  v791 = LODWORD(STACK[0x61C]) - 446589273;
  v792 = v791 ^ 0xEADD40DA ^ v783;
  v793 = (v786 & (v772 + 404751363)) == 0;
  v794 = v772 + 2137048668;
  v795 = 1327545942 - v772;
  if (v793)
    v795 = v794;
  v796 = (LODWORD(STACK[0x624]) ^ 0x594BE110 ^ v783)
       + v791
       + 2049108276
       - ((2 * ((LODWORD(STACK[0x624]) ^ 0x594BE110 ^ v783) + v791)) & 0xF445D268);
  v797 = (v682 + 1150721740) ^ 0xF1DA041 ^ v789;
  v798 = v789 ^ 0x16CC3C11;
  v799 = (v789 ^ 0x16CC3C11) - 1341789993 + ((v786 - 1732297305 + v795) ^ v787 & 0xFFFFEFFF);
  v800 = (((LODWORD(STACK[0x620]) - 1095963300 + LODWORD(STACK[0x604])) ^ 0xFBF5BECD)
        + ((2 * (LODWORD(STACK[0x620]) - 1095963300 + LODWORD(STACK[0x604]))) & 0xF7EB7D9A)
        + 67780915
        + v682
        + 1150721740) ^ 0xCF96627B ^ v789;
  v801 = (((v796 ^ 0x7A22E934) + v792) ^ 0x7FBFBFD7) - 917117505 + ((2 * ((v796 ^ 0x7A22E934) + v792)) & 0xFF7F7FAE);
  v802 = ((v798 + 207874371) ^ 0x6FFFEFF7) - 1103105090 + ((2 * (v798 + 207874371)) & 0xDFFFDFEE);
  v803 = LODWORD(STACK[0x610]) - 1095963300 + LODWORD(STACK[0x640]);
  LODWORD(STACK[0x6BC]) = LODWORD(STACK[0x510]) + 626432260;
  v804 = (v799 ^ 0xFFFB6DFE) + 2121789695 + ((2 * v799) & 0xFFF6DBFC) + 3521;
  v805 = (v803 + v790 + 741393147) ^ 0x5B7274C0 ^ v796;
  v806 = (v796 ^ 0x7A22E934) - ((2 * (v796 ^ 0x7A22E934) - 194023322) & 0xED0BA66C) + 1891470185;
  LODWORD(STACK[0x594]) = LODWORD(STACK[0x6F8]) + 1865504129 - (STACK[0x688] & 0xB00);
  LODWORD(STACK[0x6F8]) = 1745142963;
  v807 = STACK[0x528];
  v808 = STACK[0x6E8];
  v809 = v776;
  v810 = v775;
  HIDWORD(v812) = v775 ^ 0xDBB95070;
  LODWORD(v812) = v775;
  v811 = v812 >> 6;
  HIDWORD(v812) = v775 ^ 0x1B95070;
  LODWORD(v812) = v775 ^ 0xDA000000;
  v813 = v812 >> 25;
  HIDWORD(v812) = v775 ^ 0x70;
  LODWORD(v812) = v775 ^ 0xDBB95000;
  LODWORD(STACK[0x5A0]) = LODWORD(STACK[0x6E8]) + 1892;
  v814 = (v808 + 1892) ^ v813 ^ (v812 >> 11) ^ v811 ^ 0x36EECB3;
  LODWORD(STACK[0x670]) = v779;
  v815 = v802 - ((2 * v802 + 2133317238) & 0xEC7257DC) - 1244850391;
  HIDWORD(v812) = v809 ^ 0xEC;
  LODWORD(v812) = v809 ^ 0x155D6800;
  v816 = v812 >> 11;
  v817 = v804 - ((2 * v804 + 588076246) & 0x5F9F9982) + 22443820;
  HIDWORD(v812) = v809 ^ 0x15D68EC;
  LODWORD(v812) = v809 ^ 0x14000000;
  v818 = v812 >> 25;
  LODWORD(STACK[0x680]) = v809;
  HIDWORD(v812) = v809 ^ 0x2C;
  LODWORD(v812) = v809 ^ 0x155D68C0;
  v819 = (v812 >> 6) ^ v816 ^ v818;
  LODWORD(STACK[0x658]) = v788 ^ 0x155D68EC;
  LODWORD(STACK[0x624]) = v784;
  v820 = (v778 & (v809 ^ 0x155D68EC) | v784 & ~(v809 ^ 0x155D68EC)) ^ (v779 ^ 0x155D68EC) & (v775 ^ 0xDBB95070) ^ (v788 ^ 0x155D68EC) & (v775 ^ 0xDBB95070);
  LODWORD(STACK[0x654]) = v784 ^ 0xDBB95070;
  LODWORD(STACK[0x660]) = v788;
  LODWORD(STACK[0x598]) = v809 ^ 0x155D68EC;
  LODWORD(STACK[0x688]) = v778;
  LODWORD(STACK[0x59C]) = v775 ^ 0xDBB95070;
  LODWORD(STACK[0x590]) = v778 ^ 0xDBB95070;
  v821 = (v778 ^ 0xDBB95070) & (v775 ^ 0xDBB95070) ^ v788 ^ (v788 ^ v779) & (v809 ^ 0x155D68EC) ^ (((v784 ^ 0xDBB95070) & (v775 ^ 0xDBB95070))
                                                                                                 + 358443244
                                                                                                 - ((2 * ((v784 ^ 0xDBB95070) & (v775 ^ 0xDBB95070))) & 0x2ABAD1D8));
  v822 = ((v806 ^ 0x97A2CC9) + (v814 ^ v806 ^ 0xF685D336) + 1) ^ (1226155414 - v801 + (v814 ^ (v801 - 1226155414))) ^ ((v815 ^ v817 ^ v819 ^ 0xA60918D0) + (v814 ^ 0x59F6E72F ^ v815 ^ v817 ^ v819) + 1);
  LODWORD(STACK[0x6B0]) = ((2 * ((v800 ^ 0x789A3F0B ^ v815) + (v815 ^ 0xA1C06161))) & 0xDF9FF3A2)
                        + (((v800 ^ 0x789A3F0B ^ v815) + (v815 ^ 0xA1C06161)) ^ 0xEFCFF9D1);
  v823 = (((v790 + 741393147) ^ 0xCE5E3E26 ^ v796 ^ 0xB47CD712)
        - ((2 * ((v790 + 741393147) ^ 0xCE5E3E26 ^ v796 ^ 0xB47CD712) + 832627474) & 0x2EF1DFCE)
        + 273244528) ^ v806 ^ 0x3604765E;
  v824 = (v815 ^ 0xA1C06161) - ((2 * (v815 ^ 0xA1C06161) + 599502044) & 0x22CDFA80);
  v825 = ((v797 ^ 0x19D19C50) - ((2 * (v797 ^ 0x19D19C50) - 241114350) & 0xA3A75632) - 895214430) ^ v815 ^ 0x7013CA78;
  v826 = (v800 ^ 0x26A5A195) + (v815 ^ 0x5E3F9E9E) + (v817 ^ 0x2FCFCCC1) + 237119892;
  v827 = v826 - 9510868 - ((2 * v826) & 0xFEDDC058);
  v828 = v806 ^ 0x217C99B9;
  LODWORD(STACK[0x6A8]) = ((2 * ((v805 ^ v806 ^ 0x2C044D) + (v806 ^ 0x217C99B9))) & 0xFF5FEDF2)
                        + (((v805 ^ v806 ^ 0x2C044D) + (v806 ^ 0x217C99B9)) ^ 0x7FAFF6F9);
  v829 = ((2 * ((v806 ^ 0x217C99B9) - 237119890)) & 0xDFBE5B5A) + (((v806 ^ 0x217C99B9) - 237119890) ^ 0xEFDF2DAD);
  v824 -= 2092641362;
  v830 = v805 ^ 0xDEAF620B;
  v831 = v801
       + (v805 ^ 0xDEAF620B)
       - v829
       - 1578929674
       - ((2 * (v801 + (v805 ^ 0xDEAF620B) - v829 - 1496741864)) & 0xF633D3BC);
  v832 = ((v827 ^ v824 ^ v820 ^ 0x4A4EB2E3) + (v821 ^ 0xB5B14D1C ^ v827 ^ v824 ^ v820) + 1) ^ (-270586451
                                                                                             - v829
                                                                                             + (v821 ^ (v829 + 270586451))) ^ ((v831 ^ 0x4E61621) + (v821 ^ 0xFB19E9DE ^ v831) + 1);
  v833 = ((2 * ((v831 ^ 0xFB19E9DE) + v823)) & 0x75FCFACE) + (((v831 ^ 0xFB19E9DE) + v823) ^ 0x3AFE7D67);
  LODWORD(STACK[0x610]) = v833;
  v834 = ((2 * ((v824 ^ 0x9166FD40) + (v827 ^ 0xBFF157B8) + 1)) & 0xBDE577AE)
       + (((v824 ^ 0x9166FD40) + (v827 ^ 0xBFF157B8) + 1) ^ 0xDEF2BBD7);
  LODWORD(STACK[0x600]) = v827;
  v835 = ((2 * ((v827 ^ 0xFF6EE02C) + v825)) & 0xBE7FFFFE) + (((v827 ^ 0xFF6EE02C) + v825) ^ 0x5F3FFFFF);
  LODWORD(STACK[0x61C]) = v835;
  v836 = ((2 * (v828 + 2061620318 + (v831 ^ 0xBB865E4A))) & 0xFDFBFFDE)
       + ((v828 + 2061620318 + (v831 ^ 0xBB865E4A)) ^ 0xFEFDFFEF);
  v837 = STACK[0x6F8];
  v838 = 71 * (LODWORD(STACK[0x6F8]) ^ 0x6804C491) + 4544;
  v839 = LODWORD(STACK[0x6F8]) ^ 0x6804C4B3;
  LODWORD(STACK[0x6F8]) = STACK[0x6F8];
  LODWORD(STACK[0x668]) = v839;
  v840 = STACK[0x6B0];
  v841 = LODWORD(STACK[0x6BC]) + (v800 ^ 0xD95A5E6A) + v819 + LODWORD(STACK[0x6B0]) + (v820 ^ 0xDBB95070);
  v842 = (char *)off_2518F0F80[LODWORD(STACK[0x6E8]) ^ 0x20E] - 12;
  v843 = STACK[0x700];
  v844 = v841
       + (*(_DWORD *)&v842[4 * (v838 % 0xC0)] ^ 0xE5A4A1F2)
       + (*(_DWORD *)(STACK[0x700] + 4 * ((113 * v839 + 23391) % 0x112u)) ^ 0x16549DE9)
       + 340628379;
  LODWORD(STACK[0x6BC]) = ((2 * v844) & 0xFFCF55EE) + (v844 ^ 0x7FE7AAF7);
  v845 = *(_DWORD *)&v842[4 * (71 * (v837 ^ 0x6804C4A3u) % 0xC0)] ^ 0xED61FE5;
  LODWORD(v842) = *(_DWORD *)(v843 + 4 * (113 * v839 % 0x112u)) ^ 0x16549DE9;
  LODWORD(STACK[0x6DC]) = STACK[0x698];
  v846 = STACK[0x650];
  HIDWORD(v812) = LODWORD(STACK[0x650]) ^ 0x9C4;
  LODWORD(v812) = LODWORD(STACK[0x650]) ^ 0x8B9A8000;
  LODWORD(STACK[0x698]) = v812 >> 13;
  LODWORD(v842) = (_DWORD)v842 - ((2 * (_DWORD)v842 + 1970423994) & 0xEC8A9C9C) + 821981867;
  LODWORD(v843) = STACK[0x6A8];
  LODWORD(v842) = v807
                + v830
                - LODWORD(STACK[0x6A8])
                + v822
                + v832
                + ((-1920424855 * v845) ^ (1968843224 * v845) ^ v842 ^ 0x4FD4FA9)
                + 2 * ((v842 ^ 0x76454E4E) & ((-1920424855 * v845) ^ (1968843224 * v845) ^ 0x72B801E7));
  LODWORD(STACK[0x604]) = v831;
  v847 = ((2 * v831) & 0xBD8FFA94 ^ 0xAD813014) + (v831 ^ 0x29376775);
  LODWORD(STACK[0x5E0]) = v847;
  LODWORD(STACK[0x5D0]) = v836;
  v848 = v834 - 2 * ((v834 + 705774104) & 0x2E834083 ^ v834 & 2) + 1486127769;
  LODWORD(STACK[0x5D8]) = v848;
  v849 = ((2 * ((v827 ^ 0x738793CD) + (v848 ^ 0x517CBF7E) + 1)) & 0x7BDD3FEE)
       + (((v827 ^ 0x738793CD) + (v848 ^ 0x517CBF7E) + 1) ^ 0x3DEE9FF7);
  v850 = v843 - ((2 * v843 - 1448947006) & 0xADCA5196) + 733385260;
  v851 = (v850 ^ 0xA91AD734) + ((v847 - v836 - 1607073115) ^ (v833 - 1026805030)) + 1;
  v852 = ((2 * v851) & 0xD7C4F9DA) + (v851 ^ 0x6BE27CED);
  v853 = v840 - ((2 * v840 + 157469970) & 0xF9CE82C) + 1820318367;
  v854 = (v853 ^ 0xF8318BE9) + ((v849 - 1039048695) ^ (v835 - 1635078078)) + 1;
  v855 = ((2 * v854) & 0x7FF5F378) + (v854 ^ 0x3FFAF9BC);
  LODWORD(v843) = ((2 * v853) & 0xE39F899A ^ 0x21128188) + (v853 ^ 0xE176AE2B);
  v856 = ((2 * v850) & 0x67CBF07C ^ 0x3006074) + (v850 ^ 0xF277CE05);
  v857 = v847 - v836 - v852;
  v858 = v852 - v857 - ((2 * (v852 - v857) + 269092610) & 0xD03BA58C);
  LODWORD(STACK[0x5CC]) = v834 - v849;
  v859 = v849 - v855;
  v860 = v849 - v855 - 143772911;
  LODWORD(STACK[0x648]) = v860;
  v861 = v855 - (v849 - v855) - ((2 * (v855 - (v849 - v855)) + 1005672702) & 0x30827DB6) + 1446636378;
  v862 = v834 - v849 - (v849 - v855) + (v860 ^ 0x2EC7C450) + (v861 ^ 0x98413EDB);
  LODWORD(STACK[0x638]) = v862;
  v863 = v836 - (v847 - v836);
  LODWORD(STACK[0x5F0]) = v863;
  v864 = v858 + 1881331271;
  LODWORD(STACK[0x5C8]) = 2 * v857;
  v865 = v857 - ((2 * v857 + 49590716) & 0xEFE62262) + 2037213711;
  LODWORD(STACK[0x644]) = v865;
  v866 = (v865 ^ 0x5934D561) + 1;
  LODWORD(STACK[0x640]) = v866;
  v867 = v866 + v863 - v857 + ((v858 + 1881331271) ^ 0xE81DD2C6);
  LODWORD(STACK[0x634]) = v867;
  v868 = (v860 ^ 0xD1383BAF) - ((2 * (v860 ^ 0xD1383BAF) - 1599530246) & 0xA986536C) - 1525172429;
  v869 = ((2 * (v868 ^ v861)) & 0xF73F7FFE ^ 0x91042EDA) + (v868 ^ v861 ^ 0x371DA892);
  v870 = (v865 ^ 0xA6CB2A9E) - ((2 * (v865 ^ 0xA6CB2A9E) + 2693882) & 0x4486BE);
  LODWORD(STACK[0x608]) = v843;
  v871 = v843 - ((2 * v843 - 1488396874) & 0xBEB22724) + 855474797;
  v872 = (v862 + v843 - 732900044) ^ v871;
  LODWORD(STACK[0x630]) = v872;
  v873 = ((2 * ((v868 ^ 0xD4C329B6) + (v872 ^ 0xA0A6EC6D) + 1)) & 0x353FBB36)
       + (((v868 ^ 0xD4C329B6) + (v872 ^ 0xA0A6EC6D) + 1) ^ 0x1A9FDD9B);
  LODWORD(v843) = STACK[0x6C8];
  v874 = LODWORD(STACK[0x6C8]) ^ v872 ^ 0xD4C39A56;
  LODWORD(STACK[0x62C]) = v873;
  v875 = (v874 ^ (v873 - 446684571)) - ((2 * (v874 ^ (v873 - 446684571))) & 0xAC1296F4);
  LODWORD(STACK[0x5FC]) = v856;
  v870 -= 797519652;
  v876 = v856 - ((2 * v856 + 589067988) & 0xF0ED5D9E) + 168094265;
  v877 = (v856 - 2131060910 + v867) ^ v876;
  v878 = v864 ^ 0xE83F9199 ^ v870;
  LODWORD(STACK[0x628]) = v877;
  v879 = (v877 ^ 0x7895130) + 1;
  v880 = ((2 * (v879 + (v870 ^ 0x22435F))) & 0xFFCBFCFC) + ((v879 + (v870 ^ 0x22435F)) ^ 0x7FE5FE7E);
  v881 = ((v875 - 704033926) ^ 0x29F6B485) + (LODWORD(STACK[0x694]) ^ 0x2AFD18E5 ^ (v875 - 704033926));
  v882 = v879 + (LODWORD(STACK[0x694]) ^ 0x482FD50 ^ v877);
  v883 = LODWORD(STACK[0x694]) ^ 0xFCF4539F;
  LODWORD(STACK[0x620]) = v880;
  v884 = v880 - 2145779326;
  v885 = v873 + v869 + 483553946 - ((2 * (v873 + v869) + 1400947916) & 0x662427E4);
  v886 = (2145779326 - v880 + (v883 ^ (v880 - 2145779326))) ^ v882 ^ (v881 + 1);
  v887 = ((2 * v876) & 0x79E77B7E ^ 0x11A6134C) + (v876 ^ 0x7424B619);
  v888 = v871 ^ LODWORD(STACK[0x564]);
  v889 = v888 - ((2 * v888 - 2128419936) & 0xCB6F3FB6) + 642322859;
  LODWORD(STACK[0x650]) = v889;
  LODWORD(STACK[0x64C]) = v885 + 958;
  v890 = v869 + (v889 ^ 0x9A486024) + ((v885 + 958) ^ 0x4CEDEC0D);
  LODWORD(STACK[0x5DC]) = (_DWORD)v842 + 290406144;
  v891 = v890 - ((2 * v890 + 146833414) & 0xB8D5977A) + 1623919552;
  LODWORD(STACK[0x6C0]) = v891;
  LODWORD(v842) = v888 + (v843 ^ 0x8B9A89C4) + (_DWORD)v842 + 290406144 + (v891 ^ 0xDC6ACBBD);
  v892 = (_DWORD)v842 - ((2 * (_DWORD)v842) & 0x189C5EF0);
  v893 = v887 - ((2 * v887 + 121333794) & 0xA16A301C) + 1414712351;
  v894 = v884 + v878;
  v895 = ((2 * (v884 + (v893 ^ 0x50B5180E))) & 0x77DC667E) + ((v884 + (v893 ^ 0x50B5180E)) ^ 0x3BEE333F);
  LODWORD(STACK[0x5B8]) = v895;
  v896 = v892 - 1941033096;
  v897 = (((v892 - 1941033096) >> 24) ^ 0x236DEA0B) & 0x4020D2 ^ 0x802144CD ^ (-2
                                                                                           - ((~((((v892 - 1941033096) >> 24) ^ 0x236DEA0B) & 0x2248A8DD) | 0x80616448)
                                                                                            + ((((v892 - 1941033096) >> 24) ^ 0x236DEA0B) & 0x402048 | 0x7F9E9BB7)));
  LODWORD(STACK[0x67C]) = v810;
  v898 = (v810 & 0x289 ^ 0x289) + (v810 & 0x289) - 898997009 - ((2 * ((v810 & 0x289 ^ 0x289) + (v810 & 0x289))) & 0x916);
  v899 = 431 * ((v892 + LODWORD(STACK[0x560])) >> 28) + 279719;
  v900 = LODWORD(STACK[0x6BC]) - v887 + v895 - 100755186 + v886;
  v901 = v900 - 1228081137 - ((2 * v900) & 0x6D9A0FDE);
  v902 = STACK[0x708];
  v903 = ((*(unsigned __int8 *)(STACK[0x708]
                              + 431
                              * ((v898 ^ 0xFDD350F0 ^ ((v897 | 0x15F19C9D) - (v897 | 0xEA0E6362) - 368155806))
                               + 2
                               * ((((v897 | 0x15F19C9D) - (v897 | 0xEA0E6362) - 368155806) ^ 0x37B9341F) & (v898 ^ 0xCA6A64EF)))
                              % 0x3BD) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                                                            + (v899
                                                                                           - 957
                                                                                           * ((4487950
                                                                                             * (unint64_t)v899) >> 32))) ^ 0x80) << 12);
  v904 = 431 * ((((BYTE2(v896) ^ 0x4E) - ((v896 >> 15) & 0x20) + 16) >> 4) ^ 1) + 279719;
  v905 = 431 * ((HIWORD(v896) ^ 0x8C4E) & 0xF) + 279719;
  v906 = v903 | *(unsigned __int8 *)(STACK[0x708]
                                   + (v905 - 957 * ((4487950 * (unint64_t)v905) >> 32))) ^ 0x80;
  v907 = 431 * (((unsigned __int16)v896 >> 12) ^ 2) + 279719;
  v908 = v907 - 957 * ((4487950 * (unint64_t)v907) >> 32);
  v909 = (v906 << 8) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                            + (v904 - 957 * ((4487950 * (unint64_t)v904) >> 32))) ^ 0x80) << 12);
  v910 = 431 * (~(v896 >> 8) & 0xF) + 279719;
  LODWORD(STACK[0x6C8]) = v896;
  v911 = 431 * ((v896 >> 4) ^ 7) + 279719;
  v912 = v909 | *(unsigned __int8 *)(v902 + (v910 - 957 * ((4487950 * (unint64_t)v910) >> 32))) ^ 0x80;
  v913 = (v912 << 8) + 508390300 - ((v912 << 9) & 0x3C9AD600);
  v914 = *(unsigned __int8 *)(v902 + (v911 - 957 * ((4487950 * (unint64_t)v911) >> 32)));
  v915 = 16 * (v914 ^ 0x80) - ((32 * v914) & 0x120);
  v916 = *(unsigned __int8 *)(v902
                            + (431 * (v896 & 0xF ^ 8)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v896 & 0xF ^ 8) + 279719)) >> 32)));
  v917 = v913 ^ ((*(unsigned __int8 *)(v902 + v908) ^ 0x80) << 12);
  v918 = 431 * (((v901 + 4064) >> 28) ^ 0xB) + 279719;
  v919 = v918 - 957 * ((4487950 * (unint64_t)v918) >> 32);
  v920 = 431 * (((v901 + 4064) >> 24) & 0xF ^ 6) + 279719;
  v921 = (v917 ^ 0x1E4D6B9C | ((v916 ^ 0x80) - 207416019 - ((2 * v916) & 0x5A)) ^ 0xF3A3152D) ^ (v915 + 365973650);
  v922 = STACK[0x6A0];
  v923 = 431 * (((v901 + 4064) >> 16) & 0xF ^ 0xD) + 279719;
  v924 = ((*(unsigned __int8 *)(v902 + (v920 - 957 * ((4487950 * (unint64_t)v920) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v902 + v919) ^ 0x80) << 12) | *(unsigned __int8 *)(v902 + (v923 - 957 * ((4487950 * (unint64_t)v923) >> 32))) ^ 0x80;
  v925 = 431 * ((unsigned __int16)(v901 + 4064) >> 12) + 279719;
  v926 = 431 * (((v901 + 4064) >> 8) & 0xF ^ 7) + 279719;
  v927 = 431 * (((v901 - 32) >> 4) ^ 0xE) + 279719;
  v928 = *(unsigned __int8 *)(v902 + (v926 - 957 * ((4487950 * (unint64_t)v926) >> 32))) ^ (v924 << 8) ^ ((*(unsigned __int8 *)(v902 + 431 * ((((v901 + 4064) >> 20) & 0xF ^ 0xC) + 888238593 * ((STACK[0x6A0] & 0xB6CA0089 ^ 0xB4C00089) + (STACK[0x6A0] & 0xB6CA0089 ^ 0x20A0000))) % 0x3BD) ^ 0x80) << 12) ^ (16 * (*(unsigned __int8 *)(v902 + (v925 - 957 * ((4487950 * (unint64_t)v925) >> 32))) ^ 0x80));
  v929 = 431 * ((31 - (_BYTE)v901) & 0xF) + 279719;
  v930 = *(unsigned __int8 *)(v902 + (v929 - 957 * ((4487950 * (unint64_t)v929) >> 32)));
  v931 = (v930 ^ 0x80) - 8746495 - 2 * (v930 & 1);
  v932 = (v931 ^ 0xFF7A8A01 | ((v928 ^ 0x80) << 8)) ^ (16
                                                     * (*(unsigned __int8 *)(v902
                                                                           + (v927
                                                                                          - 957
                                                                                          * ((4487950
                                                                                            * (unint64_t)v927) >> 32))) ^ 0x80));
  LODWORD(STACK[0x5EC]) = ((v916 ^ 0x80) + 45 - ((2 * (_BYTE)v916) & 0x5A)) & 0xF;
  v933 = (((v916 ^ 0x80) + 45 - ((2 * (_BYTE)v916) & 0x5A)) & 0xF | (16 * (v931 & 0xF))) ^ 0x1D;
  v934 = 431 * ((v933 + 2028474970 - ((2 * v933) & 0xB4)) ^ 0x78E8125A);
  v935 = *(unsigned __int8 *)(v902 + (v934 + 290925) % 0x3BD);
  v936 = LODWORD(STACK[0x594]) ^ 0x6F315581;
  LODWORD(STACK[0x5C0]) = v936;
  v937 = 431 * (v935 ^ v936 ^ 0x80);
  v938 = 431 * (*(unsigned __int8 *)(v902 + v934 % 0x3BD) ^ (*(unsigned __int8 *)(v902 + v937 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  LODWORD(STACK[0x5F8]) = v921;
  v939 = 431
       * ((((v932 & 0xF0 | (v921 >> 4)) ^ 9)
         - 1987509996
         - ((2 * (v932 & 0xF0 | (v921 >> 4))) & 0x28)) ^ 0x89890114);
  v940 = 431
       * (*(unsigned __int8 *)(v902 + (v939 + 290925) % 0x3BD) ^ (16
                                                                * (*(unsigned __int8 *)(v902
                                                                                      + (v938 - 957 * ((4487950 * (unint64_t)v938) >> 32))) ^ 0x80)) ^ 0x80);
  v941 = v940 + 290925 - 957 * ((4487950 * (unint64_t)(v940 + 290925)) >> 32);
  v942 = 431
       * (*(unsigned __int8 *)(v902 + v939 % 0x3BD) ^ (*(unsigned __int8 *)(v902
                                                                          + (v940
                                                                                         - 957
                                                                                         * ((4487950
                                                                                           * (unint64_t)v940) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v943 = *(unsigned __int8 *)(v902 + (v937 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v902 + v941) ^ 0x80));
  LODWORD(STACK[0x5B4]) = v943;
  v944 = v932 >> 4 >> ((((v932 >> 4) & 0x58) - 18 + ((v932 >> 4) & 0x58 ^ 0x58)) & 0x3C);
  v945 = v944 - ((2 * v944) & 0xDBE286A) - 421587915;
  v946 = ((((v921 >> 8) & 0xF ^ 0xEA5BF55E) - 1619685712) & 0xFFFFFF0F | (16 * (v945 & 0xF))) ^ 0x89D1845E;
  v947 = 431 * ((v946 - 1847080652 - ((2 * v946) & 0x68)) ^ 0x91E7C934);
  v948 = 431
       * (*(unsigned __int8 *)(v902 + (v947 + 290925) % 0x3BD) ^ (16
                                                                * (*(unsigned __int8 *)(v902
                                                                                      + (v942 - 957 * ((4487950 * (unint64_t)v942) >> 32))) ^ 0x80)) ^ 0x80);
  v949 = v948 + 290925 - 957 * ((4487950 * (unint64_t)(v948 + 290925)) >> 32);
  v950 = 431
       * (*(unsigned __int8 *)(v902 + v947 % 0x3BD) ^ (*(unsigned __int8 *)(v902
                                                                          + (v948
                                                                                         - 957
                                                                                         * ((4487950
                                                                                           * (unint64_t)v948) >> 32))) >> 4) ^ 0x88)
       + 290925;
  LODWORD(STACK[0x5D4]) = v917;
  LODWORD(STACK[0x6A0]) = v894 ^ v893;
  v951 = 431
       * (v945 & 0xF0 ^ ((v917 >> 12) ^ 0x4446) & (((v894 ^ v893) & 0x3A2F ^ 0x180E) + ((v894 ^ v893) & 0x3A2F ^ 0x2221)) & 0x466F & (((v917 >> 12) & 0xD4D5F ^ 0x909) + ((v917 >> 12) & 0xD4D5F ^ 0x14456)) ^ 0x30);
  v952 = 431
       * (*(unsigned __int8 *)(v902
                             + v951
                             + 290925
                             - 957 * (((17951797 * (unint64_t)(v951 + 290925)) >> 32) >> 2)) ^ (16 * (*(unsigned __int8 *)(v902 + (v950 - 957 * ((4487950 * (unint64_t)v950) >> 32))) ^ 0x80)) ^ 0x80);
  v953 = v952 + 290925 - 957 * ((4487950 * (unint64_t)(v952 + 290925)) >> 32);
  v954 = 431
       * (*(unsigned __int8 *)(v902 + v951 - 957 * (((8975899 * (unint64_t)v951) >> 32) >> 1)) ^ (*(unsigned __int8 *)(v902 + (v952 - 957 * ((4487950 * (unint64_t)v952) >> 32))) >> 4) ^ 0x88)
       + 289968;
  v955 = ((*(unsigned __int8 *)(v902 + v953) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(v902 + v949) ^ 0x80) << 8);
  v956 = ((v945 >> 4) & 0xF0 | HIWORD(v917) & 0xF) ^ 0x4D;
  v957 = 431 * ((v956 - 925098743 - ((2 * v956) & 0x12)) ^ 0xC8DC1D09);
  v958 = *(unsigned __int8 *)(v902 + v954 % 0x3BD);
  v959 = 431
       * (*(unsigned __int8 *)(v902 + (v957 + 290925) % 0x3BD) ^ ((v958 ^ 0x80) << ((v958 & 4 ^ 4) + (v958 & 4))) ^ 0x80);
  v960 = (v959 + 290925) % 0x3BD;
  v961 = 431 * (*(unsigned __int8 *)(v902 + v957 % 0x3BD) ^ (*(unsigned __int8 *)(v902 + v959 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v962 = ((v945 >> 8) & 0xF0 | (v913 >> 20) & 0xF) ^ 0x14;
  v963 = 431 * ((v962 + 1512134898 - 2 * (v962 & 0xFFFFFFFB ^ (v913 >> 20) & 9)) ^ 0x5A2158F2);
  v964 = 431
       * (*(unsigned __int8 *)(v902 + (v963 + 290925) % 0x3BD) ^ (16
                                                                * (*(unsigned __int8 *)(v902
                                                                                      + (v961 - 957 * ((4487950 * (unint64_t)v961) >> 32))) ^ 0x80)) ^ 0x80);
  v965 = 431
       * (*(unsigned __int8 *)(v902 + v963 % 0x3BD) ^ (*(unsigned __int8 *)(v902
                                                                          + (v964
                                                                                         - 957
                                                                                         * ((4487950
                                                                                           * (unint64_t)v964) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v966 = ((v945 >> 12) & 0xF0 | HIBYTE(v913) & 0xF) ^ 0xFE;
  v967 = 431 * ((v966 + 876367720 + (~(2 * v966) | 0xFFFFFF2F) + 1) ^ 0x343C4F68);
  v968 = *(unsigned __int8 *)(v902 + (v967 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v902
                                                                                     + (v965 - 957 * ((4487950 * (unint64_t)v965) >> 32))) ^ 0x80));
  LODWORD(STACK[0x5BC]) = v893;
  v969 = 431 * (v968 ^ 0x80);
  v970 = 431
       * (*(unsigned __int8 *)(v902 + v967 % 0x3BD) ^ (*(unsigned __int8 *)(v902
                                                                          + v969
                                                                          % (((((((-1124876305 - v887) ^ (v887 + 1124877329))
                                                                               - ((2
                                                                                 * ((-1124876305 - v887) ^ (v887 + 1124877329))) & 0x1C)
                                                                               + 14) ^ v893)
                                                                             - 1) | v893 ^ 0xC) & 0x3BD)) >> 4) ^ 0x88)
       + 290925;
  v971 = 431 * ((HIWORD(v945) & 0xF0 | (v913 >> 28)) ^ 0xD1) + 290925;
  v972 = 431
       * (*(unsigned __int8 *)(v902 + (v971 - 957 * ((4487950 * (unint64_t)v971) >> 32))) ^ (16 * (*(unsigned __int8 *)(v902 + (v970 - 957 * ((4487950 * (unint64_t)v970) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v973 = v943 ^ 0xC5CD83AD ^ (v955 - 976387283 - ((2 * v955) & 0x1B0600)) ^ ((*(unsigned __int8 *)(v902 + v960) ^ 0x80) << 16) ^ ((*(unsigned __int8 *)(v902 + (v964 + 290925 - 957 * ((4487950 * (unint64_t)(v964 + 290925)) >> 32))) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(v902 + (v969 + 290925 - 957 * ((4487950 * (unint64_t)(v969 + 290925)) >> 32))) ^ 0x80) << 24);
  v974 = *(unsigned __int8 *)(v902 + (v972 - 957 * ((4487950 * (unint64_t)v972) >> 32)));
  v975 = (v973 ^ (v974 << 28)) >> (109 - (HIBYTE(v913) & 0x69 ^ 8 | HIBYTE(v913) & 0x69 ^ 0x61));
  v976 = v975 - ((2 * v975) & 0x155EEC6A) + 179271221;
  LODWORD(STACK[0x5B0]) = (((v976 & 0xF0 | (((v921 >> 8) & 0xF ^ 0xEA5BF55E) - 1619685712)) ^ 0x89D1843E) + 392)
                        * ((((_WORD)v887 - ((2 * (_WORD)v887 + 26658) & 0x301C) - 13281) & 0x1AF ^ 0xE)
                         + ((494 - v887) & 0x1AF))
                        % ((STACK[0x6F8] & 0x3BD ^ 0x31D) + (STACK[0x6F8] & 0x3BD ^ 0xA0u));
  v977 = v846 ^ 0x8B9A89C4;
  HIDWORD(v812) = v846;
  LODWORD(v812) = v846 ^ 0x8B9A89C4;
  v978 = LODWORD(STACK[0x698]) ^ (v812 >> 2);
  LODWORD(STACK[0x698]) = v846;
  HIDWORD(v812) = v846 ^ 0x1A89C4;
  LODWORD(v812) = v846 ^ 0x8B800000;
  v979 = v812 >> 22;
  v980 = STACK[0x6E0];
  HIDWORD(v812) = ~LODWORD(STACK[0x6E0]);
  LODWORD(v812) = LODWORD(STACK[0x6E0]) ^ 0xFCF4539C;
  v981 = v812 >> 2;
  HIDWORD(v812) = LODWORD(STACK[0x6E0]) ^ 0x34539F;
  LODWORD(v812) = LODWORD(STACK[0x6E0]) ^ 0xFCFFFFFF;
  v982 = v812 >> 22;
  v983 = v978 ^ v979;
  HIDWORD(v812) = LODWORD(STACK[0x6E0]) ^ 0x139F;
  LODWORD(v812) = LODWORD(STACK[0x6E0]) ^ 0xFCF44000;
  v984 = (v812 >> 13) ^ v981 ^ v982;
  v985 = -16908305 - LODWORD(STACK[0x5D0]) + ((LODWORD(STACK[0x5D0]) + 16908305) ^ v983);
  v986 = LODWORD(STACK[0x6DC]) ^ 0x8B9A89C4;
  v987 = LODWORD(STACK[0x6E0]) ^ 0xFCF4539F;
  v988 = STACK[0x6F0];
  v989 = LODWORD(STACK[0x6F0]) ^ 0xFCF4539F;
  LODWORD(STACK[0x694]) = v922;
  v990 = LODWORD(STACK[0x6E4]) ^ 0x8B9A89C4;
  v991 = (v986 ^ v977) & (v922 ^ 0xFCF4539F) ^ v989 & v977 ^ v987 & v986 ^ v990 & (v980 ^ v988);
  v992 = v985 ^ ((v983 ^ 0x77F09A3F ^ LODWORD(STACK[0x604])) - LODWORD(STACK[0x5E0]) + 1590164810) ^ ((LODWORD(STACK[0x600]) ^ v984 ^ LODWORD(STACK[0x5D8]) ^ 0x22FB2CB3) + (v983 ^ 0xDD04D34C ^ LODWORD(STACK[0x600]) ^ v984 ^ LODWORD(STACK[0x5D8])) + 1);
  LODWORD(STACK[0x588]) = v989;
  LODWORD(STACK[0x5D8]) = v987;
  LODWORD(STACK[0x584]) = v922 ^ 0xFCF4539F;
  LODWORD(STACK[0x5D0]) = v990;
  LODWORD(STACK[0x58C]) = v986;
  v993 = v989 & (v922 ^ 0xFCF4539F) ^ v986 & v977 ^ v987 & v989 ^ v987 & (v922 ^ 0xFCF4539F) ^ v990 & v986 ^ v990 & v977;
  v994 = (LODWORD(STACK[0x5CC]) - 936578107) ^ v993 ^ (v859 + 34363845);
  v995 = (v857 - LODWORD(STACK[0x5C8]) + ((v857 + 202932114) ^ v991) - 202932114) ^ (((LODWORD(STACK[0x5F0]) + 1090064162) ^ v991)
                                                                                   - LODWORD(STACK[0x5F0])
                                                                                   - 1090064162) ^ (((v994 + 369386889 - ((2 * v994) & 0x2C08CB12)) ^ 0xE9FB9A76)
                                                                                                  + (v991 ^ 0x16046589 ^ (v994 + 369386889 - ((2 * v994) & 0x2C08CB12)))
                                                                                                  + 1);
  v996 = -462672998 - LODWORD(STACK[0x5B8]) - ((2010932862 - 2 * LODWORD(STACK[0x5B8])) & 0x50FBF0B6);
  v997 = ((2 * ((LODWORD(STACK[0x6C0]) ^ 0xDF51F2E7) + 719903431)) & 0xFFEFDFFC)
       + (((LODWORD(STACK[0x6C0]) ^ 0xDF51F2E7) + 719903431) ^ 0x7FF7EFFE);
  LODWORD(STACK[0x604]) = v997;
  v998 = STACK[0x5FC];
  v999 = STACK[0x6BC];
  v1000 = LODWORD(STACK[0x6BC])
        - (LODWORD(STACK[0x5FC])
         + LODWORD(STACK[0x6A8])
         + LODWORD(STACK[0x610]))
        + v992
        + v995
        + 357137043
        + v997;
  v1001 = ((2 * ((v996 ^ 0xAB46C101) + 719903431)) & 0xFF3FA4E6) + (((v996 ^ 0xAB46C101) + 719903431) ^ 0xFF9FD273);
  LODWORD(STACK[0x6A8]) = v1001;
  v1002 = v1000 - ((2 * v1000) & 0x97BCF222) + 1272871185;
  v1003 = 431 * ((v1002 >> 28) ^ 4)
        + 279719
        - 957 * ((4487950 * (unint64_t)(431 * ((v1002 >> 28) ^ 4) + 279719)) >> 32);
  v1004 = 431 * (HIBYTE(v1002) & 0xF ^ 0xB) + 279719;
  LODWORD(v842) = v1002;
  v1005 = 431 * ((v1002 >> 20) & 0xF ^ 0xD) + 279719;
  v1006 = v984 + LODWORD(STACK[0x6B0]) + LODWORD(STACK[0x61C]) + v993;
  v1007 = STACK[0x608];
  v1008 = v1006 + LODWORD(STACK[0x608]) + LODWORD(STACK[0x5DC]) - v1001 + 286008433;
  v1009 = 431 * ((v842 >> 16) & 0xF ^ 0xE) + 279719;
  v1010 = ((*(unsigned __int8 *)(v902 + (v1004 - 957 * ((4487950 * (unint64_t)v1004) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v902 + v1003) ^ 0x80) << 12) | *(unsigned __int8 *)(v902 + (v1009 - 957 * ((4487950 * (unint64_t)v1009) >> 32))) ^ 0x80;
  v1011 = 431 * (((unsigned __int16)v842 >> 12) ^ 7) + 279719;
  LODWORD(STACK[0x6F8]) = (_DWORD)v842;
  v1012 = 431 * ((v842 >> 8) & 0xF ^ 9) + 279719;
  v1013 = (v1010 << 8) ^ ((*(unsigned __int8 *)(v902
                                              + (v1005 - 957 * ((4487950 * (unint64_t)v1005) >> 32))) ^ 0x80) << 12);
  v1014 = 431 * ((v842 >> 4) ^ 1) + 279719;
  v1015 = v1014 - 957 * ((4487950 * (unint64_t)v1014) >> 32);
  v1016 = 431 * (v842 & 0xF ^ 1)
        + 279719
        - 957 * ((4487950 * (unint64_t)(431 * (v842 & 0xF ^ 1u) + 279719)) >> 32);
  v1017 = v1013 | *(unsigned __int8 *)(v902 + (v1012 - 957 * ((4487950 * (unint64_t)v1012) >> 32))) ^ 0x80;
  v1018 = (v1017 << 8) - 1081689004 - ((v1017 << 9) & 0x7F0D7800);
  LODWORD(STACK[0x61C]) = v1018;
  v1019 = v1008 - ((2 * v1008) & 0xDD14E4A) + 115910437;
  v1020 = ((HIBYTE(v1019) & 0xF ^ 6) + 649) * (((v999 + 142) & 0x1AF) + ((369 - v999) & 0x1AF));
  LOBYTE(v1008) = (*(_BYTE *)(v902 + v1016) ^ 0x80) + 43 - ((2 * *(_BYTE *)(v902 + v1016)) & 0x56);
  v1021 = v1018 ^ ((*(unsigned __int8 *)(v902 + (v1011 - 957 * ((4487950 * (unint64_t)v1011) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x5E0]) = v1021;
  LOBYTE(v1012) = (v1021 ^ 0x54 | v1008 ^ 0x2B) ^ (16 * (*(_BYTE *)(v902 + v1015) ^ 0x80));
  v1022 = 431 * ((v1019 >> 20) & 0xF ^ 0xE) + 279719;
  v1023 = 431 * (HIWORD(v1019) & 0xF ^ 8) + 279719;
  v1024 = (((*(unsigned __int8 *)(v902 + (v1020 - 957 * ((4487950 * (unint64_t)v1020) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v902 + (431 * (v1019 >> 28) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v1019 >> 28) + 279719)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v902 + (v1023 - 957 * ((4487950 * (unint64_t)v1023) >> 32))) ^ 0x80) ^ ((unint64_t)(*(unsigned __int8 *)(v902 + (v1022 - 957 * ((4487950 * (unint64_t)v1022) >> 32))) ^ 0x80u) << (((STACK[0x6C8] & 0x21 ^ 0x20) + (STACK[0x6C8] & 0x21 ^ 1)) ^ 0x25u));
  LODWORD(STACK[0x5F0]) = (v1024 << 8) - ((v1024 << 9) & 0xCE29A200) + 1729417525;
  LODWORD(STACK[0x600]) = ((v1008 & 6)
                         + (v1008 & 0xF ^ 0x410AC00F)
                         - ((v1008 & 0xF ^ 0x410AC00F) & 0x4102C006)
                         + 141573296) ^ 0x8783CB2;
  LODWORD(STACK[0x610]) = (((v1012 >> 4) ^ 0x80019889) + 1181572288) ^ 0xC66EF549;
  v1025 = LODWORD(STACK[0x648]) ^ LODWORD(STACK[0x660]) ^ (LODWORD(STACK[0x638]) - 970941951);
  v1026 = (v1025 ^ 0x3B9AACBC) + (LODWORD(STACK[0x624]) ^ 0x1FDC0333 ^ v1025);
  v1027 = LODWORD(STACK[0x654])
        + (STACK[0x644] & 0x1291A705 ^ 0x2812204)
        + (STACK[0x644] & 0x1291A705 ^ 0x10108501)
        - 311535365;
  v1028 = (LODWORD(STACK[0x640])
         + (LODWORD(STACK[0x644]) ^ 0xCDD5F3EC ^ (v1027 - ((2 * v1027) & 0xD63DB2E4) + 1797183858))) ^ ((LODWORD(STACK[0x654]) ^ (LODWORD(STACK[0x634]) + 887132048)) - LODWORD(STACK[0x634]) - 887132048);
  LODWORD(STACK[0x6BC]) = LODWORD(STACK[0x658]) + 168996295 + v1007;
  LODWORD(STACK[0x6B0]) = (v1028 ^ (v1026 + 1)) - v998;
  v1029 = (LODWORD(STACK[0x630]) ^ 0x5F591392) + 446684571 - LODWORD(STACK[0x62C]);
  v1030 = (LODWORD(STACK[0x628]) ^ 0xF876AECF) + 2145779326 - LODWORD(STACK[0x620]);
  v1031 = v1030 - ((2 * v1030) & 0x50FBF0B6);
  v1032 = v1029 - 596980803 - ((2 * v1029) & 0xB8D5977A);
  v1033 = (((LODWORD(STACK[0x5EC]) | (16 * (((v974 & 0xF ^ 0xF) + (v974 & 0xF)) & STACK[0x5B4]))) ^ 0xD) + 392)
        * (HIBYTE(v913) & 0xAF ^ 0xE | HIBYTE(v913) & 0xAF ^ 0x1A1);
  v1034 = 431 * (((LODWORD(STACK[0x5F8]) >> 4) & 0xF | (16 * (v976 & 0xF))) ^ 0x59) + 168952;
  v1035 = 431 * (((v976 >> 4) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x5D4]) >> 12)) ^ 0x66) + 168952;
  v1036 = 431 * (((v976 >> 8) & 0xF0 | HIWORD(LODWORD(STACK[0x5D4])) & 0xF) ^ 0x7D) + 168952;
  v1037 = 431 * (((v976 >> 12) & 0xF0 | (v913 >> 20) & 0xF) ^ 0xF4) + 168952;
  v1038 = v1037 - 957 * ((4487950 * (unint64_t)v1037) >> 32);
  v1039 = 431 * ((HIWORD(v976) & 0xF0 | HIBYTE(v913) & 0xF) ^ 0xAE) + 168952;
  v1040 = ((*(unsigned __int8 *)(v902 + (v1039 - 957 * ((4487950 * (unint64_t)v1039) >> 32))) ^ 0x80) << 24) ^ ((*(unsigned __int8 *)(v902 + v1038) ^ 0x80) << 20);
  v1041 = *(unsigned __int8 *)(v902 + v1033 % 0x3BD);
  v1042 = (*(unsigned __int8 *)(v902 + LODWORD(STACK[0x5B0])) ^ 0x80) << 8;
  v1043 = v1042 ^ (16
                 * (*(unsigned __int8 *)(v902 + (v1034 - 957 * ((4487950 * (unint64_t)v1034) >> 32))) ^ 0x80));
  v1044 = v1041 ^ v1043 ^ 0x80;
  v1045 = (*(unsigned __int8 *)(v902 + (v1035 - 957 * ((4487950 * (unint64_t)v1035) >> 32))) ^ 0x80) << 12;
  v1046 = v1045 ^ ((*(unsigned __int8 *)(v902 + (v1036 - 957 * ((4487950 * (unint64_t)v1036) >> 32))) ^ 0x80) << 16);
  v1047 = v1046 ^ 0xA9120032 ^ (v1040 | v1044);
  v1048 = 431 * (((v976 >> 20) & 0xF0 | (v913 >> 28)) ^ 0xA1) + 168952;
  v1049 = 431
        * (((v1047 ^ (*(unsigned __int8 *)(v902
                                         + (v1048 - 957 * ((4487950 * (unint64_t)v1048) >> 32))) << 28)) >> 28) ^ 0xA)
        + 404709;
  v1050 = 431 * (HIBYTE(v1047) & 0xF ^ 9) + 404709;
  v1051 = 431 * ((v1047 >> 20) & 0xF ^ 1) + 404709;
  v1052 = 431 * ((unsigned __int16)(v1045 ^ v1042) >> 12) + 404709;
  v1053 = (((*(unsigned __int8 *)(v902
                                + (431 * ((v1043 >> 8) & 0xF)
                                               + 404709
                                               - 957
                                               * ((4487950 * (unint64_t)(431 * ((v1043 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) | ((*(unsigned __int8 *)(v902 + (431 * (HIWORD(v1046) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v1046) & 0xF) + 404709)) >> 32))) ^ ((*(unsigned __int8 *)(v902 + (v1050 - 957 * ((4487950 * (unint64_t)v1050) >> 32))) ^ 0x80) << 8) ^ (*(unsigned __int8 *)(v902 + (v1049 - 957 * ((4487950 * (unint64_t)v1049) >> 32))) << 12) ^ (16 * (*(unsigned __int8 *)(v902 + (v1051 - 957 * ((4487950 * (unint64_t)v1051) >> 32))) ^ 0x80)) ^ 0x80) << 16)) ^ ((*(unsigned __int8 *)(v902 + (v1052 - 957 * ((4487950 * (unint64_t)v1052) >> 32))) ^ 0x80) << 12);
  v1054 = LODWORD(STACK[0x64C]) ^ LODWORD(STACK[0x650]);
  v1055 = (v1054 ^ 0x295A73D6)
        + (LODWORD(STACK[0x6C0]) ^ v1032)
        + 709977441
        - ((2 * ((v1054 ^ 0x295A73D6) + (LODWORD(STACK[0x6C0]) ^ v1032) + 1)) & 0x54A2CAC0);
  v1056 = v996 ^ (v1031 - 1468139429);
  v1057 = STACK[0x6A0];
  v1058 = (LODWORD(STACK[0x6A0]) ^ 0xAF4AE7F1)
        + v1056
        - 1075068742
        - ((2 * ((LODWORD(STACK[0x6A0]) ^ 0xAF4AE7F1) + v1056 + 1)) & 0x7FD78172);
  LODWORD(STACK[0x658]) = (LODWORD(STACK[0x6C0]) ^ 0x20AE0D18) + (LODWORD(STACK[0x650]) ^ 0x9FCB63C9 ^ v1055);
  LODWORD(STACK[0x6C0]) = v1057 ^ (16
                                 * (*(unsigned __int8 *)(v902
                                                       + (431 * (v1044 >> 4)
                                                                      + 404709
                                                                      - 957
                                                                      * ((4487950
                                                                        * (unint64_t)(431
                                                                                           * (v1044 >> 4)
                                                                                           + 404709)) >> 32))) ^ 0x80)) ^ (v1053 | *(unsigned __int8 *)(v902 + (431 * (v1041 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v1041 & 0xFu) + 404709)) >> 32))) ^ 0x80);
  LODWORD(STACK[0x660]) = (v996 ^ 0x54B93EFE) + (LODWORD(STACK[0x5BC]) ^ 0x3F7341C5 ^ v1058);
  return ((uint64_t (*)(_QWORD))(*(_QWORD *)(STACK[0x6D0]
                                                     + 8
                                                     * ((45
                                                       * (((LODWORD(STACK[0x668])
                                                          + 1745142963
                                                          - ((2 * LODWORD(STACK[0x668]) + 2) & 0xD0098966)
                                                          + 1) ^ 0x6804C480) > 0x3F)) ^ LODWORD(STACK[0x6E8])))
                                         - 4))((((v1054 ^ 0xD6A58C29) - 939737617) ^ 0x74E8F57A)+ 1384008806+ ((((LODWORD(STACK[0x658]) + 1) ^ (LODWORD(STACK[0x604]) - 2146955262))- 1832807056- ((2 * ((LODWORD(STACK[0x658]) + 1) ^ (LODWORD(STACK[0x604]) - 2146955262))) & 0x25832AE0)) ^ (((2 * ((v1055 ^ 0x2A516560) + (((v1054 ^ 0xD6A58C29) - 939737617) ^ 0x74E8F57A))) & 0xDF5F1FBE) + (((v1055 ^ 0x2A516560) + (((v1054 ^ 0xD6A58C29) - 939737617) ^ 0x74E8F57A)) ^ 0xEFAF8FDF) + 1485234490) ^ 0x6D3E6A8F));
}

void sub_24782E714()
{
  int v0;
  int v1;
  int v2;

  LODWORD(STACK[0x650]) = v1;
  LODWORD(STACK[0x6F8]) = v0;
  LODWORD(STACK[0x6A0]) = STACK[0x6F0];
  LODWORD(STACK[0x6C8]) = STACK[0x6E4];
  LODWORD(STACK[0x6F0]) = STACK[0x6E0];
  LODWORD(STACK[0x6E0]) = v2;
  LODWORD(STACK[0x6E4]) = STACK[0x6DC];
  JUMPOUT(0x24782B278);
}

uint64_t sub_24782E760@<X0>(int a1@<W0>, int a2@<W2>, int a3@<W3>, int a4@<W4>, int a5@<W6>, int a6@<W7>, int a7@<W8>)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  int v18;
  int v19;
  int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unsigned int v26;
  unsigned int v27;
  int v28;
  int v29;
  unsigned int v30;
  unsigned int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  unsigned int v36;
  unsigned int v37;
  unsigned int v38;
  unsigned int v39;
  int v40;
  unsigned int v41;
  unsigned int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  unsigned int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  unsigned int v55;
  int v56;
  int v57;
  unsigned int v58;
  unsigned int v59;
  int v60;
  unsigned int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  unsigned int v68;
  unsigned int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  unsigned int v73;
  unsigned int v74;
  unsigned int v75;
  int v76;
  unsigned int v77;
  int v78;
  unsigned int v79;
  unsigned int v80;
  unsigned int v81;
  int v82;
  unsigned int v83;
  unsigned int v84;
  unsigned int v85;
  unsigned int v86;
  unsigned int v87;
  unsigned int v88;
  uint64_t (*v89)(void);

  LODWORD(STACK[0x6A0]) = LODWORD(STACK[0x590]) + LODWORD(STACK[0x53C]);
  LODWORD(STACK[0x6B0]) = v21 + LODWORD(STACK[0x528]);
  LODWORD(STACK[0x6A8]) = LODWORD(STACK[0x6BC]) + LODWORD(STACK[0x510]);
  LODWORD(STACK[0x6E8]) = LODWORD(STACK[0x534]) + LODWORD(STACK[0x584]);
  v22 = a1 - 779703701;
  v23 = v17;
  v24 = LODWORD(STACK[0x5A0]) - 44;
  LODWORD(STACK[0x6F8]) = v24;
  v25 = (v8 - ((2 * v8 + 1059575414) & 0x33A338A0) + 1499826059) ^ v15;
  v26 = v18
      + (((v22 ^ v14 ^ (v8 + 1066658619) ^ 0x7465763B) + (v22 ^ v14 ^ (v8 + 1066658619) ^ v11 ^ 0x80 ^ 0xFF727CBE) + 1) ^ (1226155414 - a4 + ((a4 - 1226155414) ^ v20 ^ v11 ^ 0x80)) ^ ((a6 ^ v19 ^ 0xA7180A9) + (a6 ^ 0x97A250F ^ v24) + 1))
      + 1;
  LODWORD(STACK[0x6BC]) = ((2 * v26) & 0xFF3254AE) + (v26 ^ 0x7F992A57);
  v27 = (v8 - ((2 * v8 + 2133317238) & 0xB2B4BCD4) + 418269605) ^ v7;
  v28 = a4 - 1226155414 + a5;
  v29 = ((v27 + 1853583613) ^ (v22 + v16)) + 931903340 - ((2 * ((v27 + 1853583613) ^ (v22 + v16))) & 0x6F176ED8);
  v30 = a3 ^ a6 ^ 0xD7D54EC2;
  LODWORD(STACK[0x668]) = v27;
  LODWORD(STACK[0x660]) = v30;
  v31 = ((v30 + 1853583613) ^ v28) + 1601024106 - ((2 * ((v30 + 1853583613) ^ v28)) & 0xBEDB60D4);
  v32 = (a6 ^ v12) - v30 - ((2 * ((a6 ^ v12) - v30) + 944198988) & 0xAC357B84) + 1916692584;
  v33 = v8 - v27 - ((2 * (v8 - v27) + 930032578) & 0x32AE863E) - 183576320;
  LODWORD(STACK[0x698]) = ((v31 ^ 0xA0924F95) + (LODWORD(STACK[0x698]) ^ 0xD4F739AE ^ v31) + 1) ^ ((v32 ^ 0x29E5423D)
                                                                                                 + (LODWORD(STACK[0x698]) ^ 0x5D803406 ^ v32)
                                                                                                 + 1) ^ ((v33 ^ LODWORD(STACK[0x6E0]) ^ v29 ^ 0x2DD75813) + (LODWORD(STACK[0x698]) ^ 0x59B22E28 ^ v33 ^ LODWORD(STACK[0x6E0]) ^ v29) + 1);
  v34 = v27 + v25;
  v29 ^= 0x378BB76Cu;
  v35 = -1853583613 - v34 + v29 + (v33 ^ 0x1303D083);
  v36 = (v9 ^ a6 ^ 0x42F90424) + v30;
  v31 ^= 0x5F6DB06Au;
  v37 = ((2 * (v31 + v30 + 1853583613)) & 0xA7AF6EFE) + ((v31 + v30 + 1853583613) ^ 0xD3D7B77F);
  v38 = -1853583613 - v36 + (v32 ^ 0xDC4E2E5E) + v31;
  v39 = ((2 * (v31 + 1016870156)) & 0x7BD2C6E6) + ((v31 + 1016870156) ^ 0xBDE96373);
  v40 = v29 - ((2 * v29 + 2033740312) & 0x5535AFDE) - 415822597;
  v41 = ((2 * (v29 + v27 + 1853583613 + v35)) & 0xD673BEEA) + ((v29 + v27 + 1853583613 + v35) ^ 0x6B39DF75);
  LODWORD(STACK[0x658]) = (-1108778125 - v39 + (LODWORD(STACK[0x588]) ^ (v39 + 1108778125))) ^ ((LODWORD(STACK[0x588]) ^ v38)
                                                                                              - v38) ^ ((v35 ^ LODWORD(STACK[0x6DC]) ^ v40 ^ 0xDEFFA1D4) + (LODWORD(STACK[0x6F0]) ^ 0xDDF40DB4 ^ v35 ^ LODWORD(STACK[0x6DC]) ^ v40) + 1);
  LODWORD(STACK[0x6C8]) = ((2 * (LODWORD(STACK[0x58C]) - 1798954869 + v41)) & 0xE1ABFF2C)
                        + ((LODWORD(STACK[0x58C]) - 1798954869 + v41) ^ 0x70D5FF96);
  v42 = ((2 * (v35 - 1842597616 + (v40 ^ 0xAA9AD7EF))) & 0xDEDFE5BE)
      + ((v35 - 1842597616 + (v40 ^ 0xAA9AD7EF)) ^ 0x6F6FF2DF);
  v43 = v35 - ((2 * v35 + 1025046130) & 0x78F9270C) + 1527320255;
  v44 = v43 ^ LODWORD(STACK[0x694]) ^ (v42 - ((2 * v42 + 438030058) & 0x78F9270C) - 1987413253);
  v45 = LODWORD(STACK[0x5D0]) ^ (v38 + 512523065);
  v46 = v41 - v35;
  LODWORD(STACK[0x6E0]) = v41 - v35;
  v47 = v34 - v41;
  v48 = v38 + v39;
  v49 = v38 + v39 - 1803818711;
  v50 = v49 - ((2 * v49 + 948534672) & 0x3BDD008C) + 439566094;
  v51 = ((v50 ^ 0xE2117FB9) + (LODWORD(STACK[0x6E4]) ^ 0x96740982 ^ v50) + 1) ^ (v45 - v38 - 512523065) ^ ((v44 ^ 0x30BAC60) + (LODWORD(STACK[0x6E4]) ^ 0x776EDA5B ^ v44) + 1);
  v52 = (v48 - 678651681) ^ (v36 - v38 - v37 - 1202443829);
  v53 = ((2 * v52) & 0xFFFCBAFE) + (v52 ^ 0xFFFE5D7F);
  v54 = v47 + 1337348545;
  v55 = v42 - ((2 * v42 + 666087622) & 0xAB72DE1E) + 1771259762;
  v56 = v55 ^ v54;
  v57 = (v43 ^ 0x3C7C9386) + (v55 ^ v54 ^ 0x2A4690F0) + 1;
  v58 = ((2 * v57) & 0xFDF2DB16) + (v57 ^ 0xFEF96D8B);
  v59 = ((2 * (v46 + 1908568265 + (v55 ^ 0xD5B96F0F))) & 0x9FDFECDE)
      + ((v46 + 1908568265 + (v55 ^ 0xD5B96F0F)) ^ 0x4FEFF66F);
  v60 = v49 - ((2 * v49 + 140019168) & 0x2245168A) + 1968098869;
  v61 = v38 - v53;
  v62 = ((v38 - v53 + 512415928) ^ v60 ^ 0x11228B45)
      + 189260953
      - 2 * (((v38 - v53 + 512415928) ^ v60 ^ 0x11228B45) & 0xB47E49B ^ ((v38 - v53 + 512415928) ^ v60) & 2);
  v63 = v42 - ((2 * v42 + 703256378) & 0x31CC09B2) + 1306226806;
  v64 = ((v58 + 17207925) ^ v63 ^ 0x98E604D9)
      - 1063553815
      - 2 * (((v58 + 17207925) ^ v63 ^ 0x98E604D9) & 0x409B74EB ^ ((v58 + 17207925) ^ v63) & 2);
  LODWORD(STACK[0x6DC]) = ((2 * ((a7 ^ 0x5AEBA351) - 1341128704 + v59 + 2449)) & 0xFF2EFDFE)
                        + (((a7 ^ 0x5AEBA351) - 1341128704 + v59 + 2449) ^ 0xFF977EFF);
  v65 = v42 - ((2 * v42 + 1776998202) & 0x5B4BEDD2) + 1654350470;
  v66 = ((v62 ^ 0xF4B81B66) + (LODWORD(STACK[0x6C0]) ^ v62 ^ 0x5BF2FC97) + 1) ^ ((v60 ^ 0xEEDD74BA)
                                                                               + (v60 ^ 0x4197934B ^ LODWORD(STACK[0x6C0]))
                                                                               + 1) ^ ((v65 ^ a2 ^ v64 ^ 0x49782D8F)
                                                                                     + (LODWORD(STACK[0x6C0]) ^ v65 ^ a2 ^ v64 ^ 0xE632CA7E)
                                                                                     + 1);
  v67 = (-17207925 - v58 + (v64 ^ 0xC09B74E9)) ^ (1258984547 - v42);
  v68 = ((v67 - 1729755943 - ((2 * v67) & 0x31CC09B2)) ^ v63) + (v64 ^ 0xC09B74E9);
  v69 = ((2 * v68) & 0xD28F777A) + (v68 ^ 0x6947BBBD);
  v70 = (v65 ^ 0x525A0916) - 1341128704 + (v63 ^ 0xF9B597AC) + v59 + 2450;
  v71 = ((2 * v70) & 0x7B73D366) + (v70 ^ 0xBDB9E9B3);
  v72 = ((v56 ^ 0xD5B96F0F) - 17207925 - v58 - ((2 * ((v56 ^ 0xD5B96F0F) - 17207925 - v58)) & 0xD4BB6C08) - 362957308) ^ v63;
  v73 = v49 + v37;
  v74 = v49 + v37 + (v60 ^ 0xEEDD74BA) + (v60 ^ 0x70711830) + 1278560374;
  v75 = ((2 * v74) & 0x7EFFA2BE) + (v74 ^ 0xBF7FD15F);
  v76 = (v53 - (v38 - v53) - ((2 * (v53 - (v38 - v53)) + 1122866066) & 0x7FBBA630) + 559193313) ^ v60;
  v77 = v69 + v71;
  v78 = v69 + v71 + (v72 ^ 0x3C9FBF01) + 1702910683;
  v79 = v78 + (v63 ^ 0x618834A9) + 1 - ((2 * (v78 + (v63 ^ 0x618834A9) + 1)) & 0x83456BB8) + 1101182428;
  v80 = v77 + (v79 ^ 0xBE5D4A23) - ((2 * (v77 + (v79 ^ 0xBE5D4A23)) - 889145928) & 0xB29D6E74);
  v81 = v78 + (v63 ^ 0x9E77CB56 ^ (v71 + 1111889485));
  v82 = ((2 * (v75 + v61 - 343079004 + (v76 ^ 0x60DB5581))) & 0x55FDDB9A)
      + ((v75 + v61 - 343079004 + (v76 ^ 0x60DB5581)) ^ 0x2AFEEDCD);
  v83 = v82 + (v60 ^ 0x17B344CA ^ (v75 + 1082142369));
  v84 = v82 + (v60 ^ 0xE84CBB35) - ((2 * (v82 + (v60 ^ 0xE84CBB35)) + 704783464) & 0x363D5E7C) + 1881129330;
  v85 = (v84 ^ 0x64E150C1) + v75 + v61 - ((2 * ((v84 ^ 0x64E150C1) + v75 + v61) - 686158006) & 0xA37D75C8) - 1119108471;
  v86 = ((v85 ^ 0x2E41451B) + (v23 ^ 0xC4E3D208 ^ v85) + 1) ^ ((v84 ^ 0x64E150C1) + (v23 ^ 0x8E43C7D2 ^ v84) + 1) ^ (((v80 - 1093725674) ^ v79 ^ LODWORD(STACK[0x688]) ^ 0x3CAAAD69) + (v23 ^ 0xD6083A7A ^ (v80 - 1093725674) ^ v79 ^ LODWORD(STACK[0x688])) + 1);
  LODWORD(STACK[0x6F0]) = v83 + 1216874422 + ~((2 * v83 + 187949540) & 0x85DC2D86);
  LODWORD(STACK[0x538]) = LODWORD(STACK[0x538]) - v37 + 222069698 + v51;
  LODWORD(STACK[0x548]) = LODWORD(STACK[0x548]) - 1853583613 - LODWORD(STACK[0x660]) + LODWORD(STACK[0x698]);
  LODWORD(STACK[0x54C]) = LODWORD(STACK[0x54C])
                        + v37
                        + v38
                        - 1869129174
                        - 2 * (v37 + v38 - 1869129174)
                        + 1685000617
                        + LODWORD(STACK[0x658]);
  LODWORD(STACK[0x540]) = LODWORD(STACK[0x540]) + 721350093 - v83 + v86;
  v87 = LODWORD(STACK[0x550]) - v73;
  LODWORD(STACK[0x53C]) = LODWORD(STACK[0x6A0]) + v81;
  LODWORD(STACK[0x550]) = v87 - 1278560373 + v66;
  LODWORD(STACK[0x534]) = LODWORD(STACK[0x6E8]) + 1533105224 + LODWORD(STACK[0x6E0]);
  v88 = (v10 ^ 0x3F368C6B) + LODWORD(STACK[0x544]) + (v13 ^ 0x92C19570);
  v89 = (uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8
                                                     * (LODWORD(STACK[0x5A0]) ^ (6601 * ((STACK[0x508] & 1) == 0))))
                          - 12);
  LODWORD(STACK[0x544]) = v88;
  return v89();
}

uint64_t sub_24782F61C()
{
  uint64_t v0;
  int v1;
  int v2;
  unsigned int v3;
  unsigned int v4;
  _BOOL4 v5;
  _BOOL4 v6;

  v1 = STACK[0x5A0];
  v2 = (LODWORD(STACK[0x5A0]) - 1194330651) & 0x473009EE;
  v3 = LODWORD(STACK[0x4F8]) + 458474776;
  v4 = LODWORD(STACK[0x500]) + 646046485;
  LODWORD(STACK[0x6F8]) = v2;
  v5 = v3 < v2 + 1435755041;
  v6 = v3 > v4;
  if (v4 < 0x5593EBE7 != v5)
    v6 = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v0 + 8 * ((!v6 * ((v1 - 256) ^ 0x8FA)) ^ v1)) - 12))();
}

void sub_24782F6B8(uint64_t a1, uint64_t a2, uint64_t a3, int a4)
{
  int v4;
  int v5;
  int v6;

  LODWORD(STACK[0x518]) = a4;
  LODWORD(STACK[0x52C]) = v6;
  LODWORD(STACK[0x520]) = LODWORD(STACK[0x520]) - 2140744279 + LODWORD(STACK[0x6BC]);
  LODWORD(STACK[0x524]) = LODWORD(STACK[0x524]) - 1893072790 + LODWORD(STACK[0x6C8]);
  LODWORD(STACK[0x530]) += 6848769 + LODWORD(STACK[0x6DC]);
  LODWORD(STACK[0x4F8]) += (281 * (v5 ^ 0x8F1)) ^ 0x30B;
  LODWORD(STACK[0x528]) = LODWORD(STACK[0x6B0]) - 1851832314;
  LODWORD(STACK[0x514]) = v4 - 1082142369;
  LODWORD(STACK[0x510]) = LODWORD(STACK[0x6A8]) + 69045612;
  JUMPOUT(0x24782F818);
}

uint64_t sub_247832C7C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, int a8)
{
  int v8;
  int v9;
  uint64_t v10;

  LODWORD(STACK[0x6E0]) = a8;
  LODWORD(STACK[0x6F0]) = v8;
  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10
                                                                                 + 8
                                                                                 * (((3
                                                                                    * (LODWORD(STACK[0x6E8]) ^ 0xB10)
                                                                                    - 841)
                                                                                   * (LODWORD(STACK[0x48C])
                                                                                    - v9
                                                                                    + LODWORD(STACK[0x504]) == -964428513)) ^ LODWORD(STACK[0x6E8])))
                                                                     - 8))(957, a2, a3, 281);
}

uint64_t sub_247832D00()
{
  int v0;
  unsigned int v1;
  int v2;
  uint64_t v3;
  int v4;
  _BOOL4 v5;

  v4 = v0 ^ 0xFC;
  v5 = v1 < 0x189A6B37;
  *(_BYTE *)(v3 + 0x1B0AF % ((v4 + 1418785796) & 0xAB6F07FF ^ 0x544)) = *(_BYTE *)(STACK[0x448]
                                                                                 + (v2 - 776856685)) ^ 0xAC;
  if (v1 >= 0x189A6B37)
    v5 = v1 > 0x189A6B38;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * ((4003 * !v5) ^ (v4 - 1937))) - 12))();
}

void sub_247832DB4()
{
  JUMPOUT(0x247832D34);
}

uint64_t sub_247832DC4(uint64_t a1, uint64_t a2, uint64_t a3, int a4, int a5, uint64_t a6, int a7)
{
  int v7;
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  int v19;
  unsigned int v20;
  int v21;
  int v22;
  int v23;
  int v24;
  unsigned int v25;
  unsigned int v26;
  unint64_t v27;
  int v28;
  unsigned int v29;
  unsigned int v30;
  int v31;
  unsigned int v32;
  int v33;
  unsigned int v34;
  int v35;
  int v36;
  unsigned int v37;
  int v38;
  int v39;
  int v40;
  unsigned int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  unsigned int v46;
  unsigned int v47;
  int v48;
  int v49;
  int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  unsigned int v54;
  int v55;
  unsigned int v56;
  int v57;
  unsigned int v58;
  int v59;
  unsigned int v60;
  unsigned int v61;
  unsigned int v62;
  int v63;
  int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  unsigned int v71;
  unsigned int v72;
  int v73;
  unsigned int v74;
  unsigned int v75;
  unsigned int v76;
  int v77;
  unsigned int v78;
  int v79;
  int v80;
  unsigned int v81;
  unsigned int v82;
  int v83;
  unsigned int v84;
  unsigned int v85;
  int v86;
  int v87;
  unsigned int v88;
  unsigned int v89;
  unsigned int v90;
  unsigned int v91;
  int v92;
  unsigned int v93;
  unsigned int v94;
  int v95;
  unsigned int v96;
  int v97;
  unsigned int v98;
  unsigned int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  unsigned int v104;
  unsigned int v105;
  int v106;
  int v107;
  unsigned int v108;
  unsigned int v109;
  unsigned int v110;
  unsigned int v111;
  unsigned int v112;
  unsigned int v113;
  int v114;
  unsigned int v115;
  int v116;
  unsigned int v117;
  int v118;
  unsigned int v119;
  int v120;
  unsigned int v121;
  int v122;
  int v123;
  unsigned int v124;
  unsigned int v125;
  unsigned int v126;
  unsigned int v127;
  unsigned int v128;
  int v129;
  unsigned int v130;
  unsigned int v131;
  unsigned int v132;
  int v133;
  unsigned int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  int v138;
  int v139;
  unsigned int v140;
  unsigned int v141;
  unsigned int v142;
  unsigned int v143;
  unsigned int v144;
  unsigned int v145;
  int v146;
  int v147;
  unsigned int v148;
  unsigned int v149;
  unsigned int v150;
  int v151;
  unsigned int v152;
  int v153;
  unsigned int v154;
  int v155;
  int v156;
  int v157;
  int v158;
  unsigned int v159;
  int v160;
  unsigned int v161;
  unsigned int v162;
  unsigned int v163;
  unsigned int v164;
  int v165;
  unsigned int v166;
  unsigned int v167;
  unsigned int v168;
  unsigned int v169;
  unsigned int v170;
  unsigned int v171;
  unsigned int v172;
  unsigned int v173;
  int v174;
  int v175;
  unsigned int v176;
  unsigned int v177;
  int v178;
  int v179;
  int v180;
  int v181;
  int v182;
  unsigned int v183;
  int v184;
  int v185;
  unsigned int v186;
  unsigned int v187;
  int v188;
  unsigned int v189;
  int v190;
  int v191;
  unsigned int v192;
  unsigned int v193;
  unsigned int v194;
  unsigned int v195;
  unsigned int v196;
  unsigned int v197;
  unsigned int v198;
  unsigned int v199;
  unsigned int v200;
  int v201;
  int v202;
  int v203;
  int v204;
  unsigned int v205;
  int v206;
  unsigned int v207;
  unsigned int v208;
  unsigned int v209;
  int v210;
  int v211;
  int v212;
  unsigned int v213;
  int v214;
  unsigned int v215;
  int v216;
  unsigned int v217;
  unsigned int v218;
  int v219;
  int v220;
  unsigned int v221;
  unsigned int v222;
  unsigned int v223;
  int v224;
  unsigned int v225;
  unsigned int v226;
  unsigned int v227;
  unsigned int v228;
  unsigned int v229;
  int v230;
  unsigned int v231;
  int v232;
  int v233;
  int v234;
  unsigned int v235;
  unsigned int v236;
  unsigned int v237;
  int v238;
  unsigned int v239;
  int v240;
  int v241;
  int v242;
  unsigned int v243;
  int v244;
  unsigned int v245;
  unsigned int v246;
  unsigned int v247;
  unsigned int v248;
  int v249;
  unsigned int v250;
  int v251;
  unsigned int v252;
  int v253;
  unsigned int v254;
  int v255;
  int v256;
  unsigned int v257;
  unsigned int v258;
  int v259;
  unsigned int v260;
  unsigned int v261;
  unsigned int v262;
  unsigned int v263;
  unsigned int v264;
  unsigned int v265;
  unsigned int v266;
  unsigned int v267;
  unsigned int v268;
  unsigned int v269;
  int v270;
  int v271;
  unsigned int v272;
  unsigned int v273;
  unsigned int v274;
  unsigned int v275;
  int v276;
  int v277;
  unsigned int v278;
  unsigned int v279;
  unsigned int v280;
  unsigned int v281;
  unsigned int v282;
  unsigned int v283;
  unsigned int v284;
  unsigned int v285;
  unsigned int v286;
  int v287;
  unsigned int v288;
  unsigned int v289;
  unsigned int v290;
  unsigned int v291;
  unsigned int v292;
  int v293;
  unsigned int v294;
  int v295;
  unsigned int v296;
  unsigned int v297;
  unsigned int v298;
  unsigned int v299;
  unsigned int v300;
  int v301;
  unsigned int v302;
  unsigned int v303;
  unsigned int v304;
  int v305;
  int v306;
  unsigned int v307;
  unsigned int v308;
  int v309;
  unsigned int v310;
  unsigned int v311;
  unsigned int v312;
  unsigned int v313;
  unsigned int v314;
  unsigned int v315;
  unsigned int v316;
  unsigned int v317;
  unsigned int v318;
  unsigned int v319;
  int v320;
  int v321;
  int v322;
  int v323;
  int v324;
  int v325;
  int v326;
  int v327;
  int v328;
  int v329;
  unsigned int v330;
  int v331;
  int v332;
  int v333;
  unsigned int v334;
  int v335;
  unsigned int v336;
  int v337;
  unsigned int v338;
  unsigned int v339;
  int v340;
  unsigned int v341;
  int v342;
  unsigned int v343;
  unsigned int v344;
  int v345;
  unsigned int v346;
  unsigned int v347;
  int v348;
  int v349;
  unsigned int v350;
  unsigned int v351;
  int v352;
  int v353;
  int v354;
  int v355;
  unsigned int v356;
  unsigned int v357;
  int v358;
  unsigned int v359;
  int v360;
  unsigned int v361;
  int v362;
  int v363;
  char v364;
  int v365;
  unsigned int v366;
  int v367;
  unsigned int v368;
  int v369;
  int v370;
  unsigned int v371;
  int v372;
  int v373;
  unsigned int v374;
  unsigned int v375;
  unsigned int v376;
  int v377;
  unsigned int v378;
  unsigned int v379;
  unsigned int v380;
  int v381;
  unsigned int v382;
  unsigned int v383;
  unsigned int v384;
  unsigned int v385;
  int v386;
  unsigned int v387;
  unsigned int v388;
  unsigned int v389;
  int v390;
  int v391;
  int v392;
  unsigned int v393;
  unsigned int v394;
  unsigned int v395;
  unsigned int v396;
  int v397;
  unsigned int v398;
  unsigned int v399;
  unsigned int v400;
  unsigned int v401;
  int v402;
  unsigned int v403;
  unsigned int v404;
  unsigned int v405;
  unsigned int v406;
  int v407;
  unsigned int v408;
  unsigned int v409;
  unsigned int v410;
  unsigned int v411;
  unsigned int v412;
  unsigned int v413;
  unsigned int v414;
  int v415;
  unsigned int v416;
  unsigned int v417;
  unsigned int v418;
  unsigned int v419;
  unsigned int v420;
  unsigned int v421;
  unsigned int v422;
  unsigned int v423;
  unsigned int v424;
  unsigned int v425;
  int v426;
  int v427;
  int v428;
  unsigned int v429;
  int v430;
  int v431;
  unsigned int v432;
  int v433;
  unsigned int v434;
  unsigned int v435;
  unsigned int v436;
  unsigned int v437;
  int v438;
  int v439;
  int v440;
  int v441;
  unsigned int v442;
  int v443;
  unsigned int v444;
  unsigned int v445;
  int v446;
  unsigned int v447;
  unsigned int v448;
  unsigned int v449;
  int v450;
  unsigned int v451;
  unsigned int v452;
  unsigned int v453;
  unsigned int v454;
  unsigned int v455;
  unsigned int v456;
  unsigned int v457;
  int v458;
  unsigned int v459;
  unsigned int v460;
  int v461;
  unsigned int v462;
  unsigned int v463;
  int v464;
  int v465;
  int v466;
  unsigned int v467;
  int v468;
  unsigned int v469;
  unsigned int v470;
  unsigned int v471;
  unsigned int v472;
  unsigned int v473;
  int v474;
  unsigned int v475;
  unsigned int v476;
  unsigned int v477;
  unsigned int v478;
  unsigned int v479;
  unsigned int v480;
  int v481;
  unsigned int v482;
  int v483;
  unsigned int v484;
  unsigned int v485;
  unsigned int v486;
  unsigned int v487;
  unsigned int v488;
  int v489;
  int v490;
  unsigned int v491;
  unsigned int v492;
  unsigned int v493;
  unsigned int v494;
  int v495;
  unsigned int v496;
  unsigned int v497;
  unsigned int v498;
  unsigned int v499;
  int v500;
  unsigned int v501;
  unsigned int v502;
  unsigned int v503;
  unsigned int v504;
  int v505;
  unsigned int v506;
  unsigned int v507;
  unsigned int v508;
  unsigned int v509;
  unsigned int v510;
  unsigned int v511;
  unsigned int v512;
  unsigned int v513;
  int v514;
  unsigned int v515;
  int v516;
  int v517;
  unsigned int v518;
  unsigned int v519;
  unsigned int v520;
  unsigned int v521;
  unsigned int v522;
  unsigned int v523;
  unsigned int v524;
  unsigned int v525;
  unsigned int v526;
  unsigned int v527;
  unsigned int v528;
  unsigned int v529;
  int v530;
  int v531;
  int v532;
  unsigned int v533;
  int v534;
  unsigned int v535;
  unsigned int v536;
  unsigned int v537;
  unsigned int v538;
  int v539;
  unsigned int v540;
  int v541;
  unsigned int v542;
  int v543;
  int v544;
  unsigned int v545;
  int v546;
  unsigned int v547;
  unsigned int v548;
  int v549;
  int v550;
  unsigned int v551;
  unsigned int v552;
  int v553;
  unint64_t v554;
  int v555;
  unsigned int v556;
  unsigned int v557;
  unsigned int v558;
  unsigned int v559;
  unsigned int v560;
  int v561;
  int v562;
  unsigned int v563;
  unsigned int v564;
  unsigned int v565;
  unsigned int v566;
  unsigned int v567;
  unsigned int v568;
  unsigned int v569;
  unsigned int v570;
  int v571;
  int v572;
  unsigned int v573;
  unsigned int v574;
  int v575;
  unsigned int v576;
  unsigned int v577;
  int v578;
  int v579;
  unsigned int v580;
  unsigned int v581;
  int v582;
  unsigned int v583;
  unsigned int v584;
  unsigned int v585;
  unsigned int v586;
  unsigned int v587;
  unsigned int v588;
  unsigned int v589;
  unsigned int v590;
  unsigned int v591;
  unsigned int v592;
  unsigned int v593;
  int v594;
  unsigned int v595;
  int v596;
  unsigned int v597;
  unsigned int v598;
  unsigned int v599;
  unsigned int v600;
  unsigned int v601;
  int v602;
  int v603;
  unsigned int v604;
  unsigned int v605;
  unsigned int v606;
  int v607;
  unsigned int v608;
  unsigned int v609;
  unsigned int v610;
  unsigned int v611;
  unsigned int v612;
  int v613;
  unsigned int v614;
  unsigned int v615;
  int v616;
  int v617;
  int v618;
  unsigned int v619;
  unsigned int v620;
  unsigned int v621;
  unsigned int v622;
  unsigned int v623;
  unsigned int v624;
  unsigned int v625;
  unsigned int v626;
  unsigned int v627;
  int v628;
  unsigned int v629;
  unsigned int v630;
  int v631;
  unsigned int v632;
  int v633;
  unsigned int v634;
  unsigned int v635;
  unsigned int v636;
  unsigned int v637;
  unsigned int v638;
  int v639;
  unsigned int v640;
  unsigned int v641;
  int v642;
  int v643;
  int v644;
  unsigned int v645;
  unsigned int v646;
  int v647;
  unsigned int v648;
  unsigned int v649;
  int v650;
  int v651;
  int v652;
  unsigned int v653;
  unsigned int v654;
  int v655;
  int v656;
  int v657;
  unsigned int v658;
  unsigned int v659;
  unsigned int v660;
  unsigned int v661;
  int v662;
  unsigned int v663;
  unsigned int v664;
  unsigned int v665;
  int v666;
  unsigned int v667;
  unsigned int v668;
  unsigned int v669;
  unsigned int v670;
  int v671;
  int v672;
  unsigned int v673;
  unsigned int v674;
  int v675;
  unsigned int v676;
  unsigned int v677;
  unsigned int v678;
  unsigned int v679;
  unsigned int v680;
  unsigned int v681;
  int v682;
  int v683;
  unsigned int v684;
  int v685;
  unsigned int v686;
  unsigned int v687;
  unsigned int v688;
  int v689;
  int v690;
  int v691;
  unsigned int v692;
  int v693;
  unsigned int v694;
  unsigned int v695;
  unsigned int v696;
  int v697;
  unsigned int v698;
  int v699;
  unsigned int v700;
  unsigned int v701;
  unsigned int v702;
  int v703;
  unsigned int v704;
  unsigned int v705;
  int v706;
  unsigned int v707;
  int v708;
  unsigned int v709;
  unsigned int v710;
  int v711;
  unsigned int v712;
  unsigned int v713;
  int v714;
  unsigned int v715;
  unsigned int v716;
  unsigned int v717;
  unsigned int v718;
  unsigned int v719;
  unsigned int v720;
  int v721;
  unsigned int v722;
  int v723;
  unsigned int v724;
  int v725;
  int v726;
  unsigned int v727;
  int v728;
  int v729;
  unsigned int v730;
  int v731;
  unsigned int v732;
  unsigned int v733;
  unsigned int v734;
  unsigned int v735;
  unsigned int v736;
  unsigned int v737;
  unsigned int v738;
  unsigned int v739;
  unsigned int v740;
  unsigned int v741;
  int v742;
  unsigned int v743;
  unsigned int v744;
  unsigned int v745;
  unsigned int v746;
  int v747;
  int v748;
  unsigned int v749;
  unsigned int v750;
  int v751;
  unsigned int v752;
  unsigned int v753;
  unsigned int v754;
  unsigned int v755;
  unsigned int v756;
  unsigned int v757;
  unsigned int v758;
  int v759;
  unsigned int v760;
  unsigned int v761;
  unsigned int v762;
  int v763;
  int v764;
  int v765;
  int v766;
  unsigned int v767;
  unsigned int v768;
  unsigned int v769;
  unsigned int v770;
  int v771;
  unsigned int v772;
  unsigned int v773;
  unsigned int v774;
  unsigned int v775;
  unsigned int v776;
  unsigned int v777;
  unsigned int v778;
  unsigned int v779;
  unsigned int v780;
  unsigned int v781;
  unsigned int v782;
  unsigned int v783;
  unsigned int v784;
  unsigned int v785;
  unsigned int v786;
  unsigned int v787;
  unsigned int v788;
  int v789;
  int v790;
  int v791;
  unsigned int v792;
  int v793;
  unsigned int v794;
  unsigned int v795;
  unsigned int v796;
  int v797;
  unsigned int v798;
  int v799;
  unsigned int v800;
  int v801;
  unsigned int v802;
  unsigned int v803;
  int v804;
  unsigned int v805;
  unsigned int v806;
  unsigned int v807;
  unsigned int v808;
  unsigned int v809;
  int v810;
  int v811;
  unsigned int v812;
  unsigned int v813;
  unsigned int v814;
  unsigned int v815;
  int v816;
  unsigned int v817;
  unsigned int v818;
  unsigned int v819;
  unsigned int v820;
  unsigned int v821;
  unsigned int v822;
  unsigned int v823;
  unsigned int v824;
  unsigned int v825;
  unsigned int v826;
  int v827;
  int v828;
  unsigned int v829;
  unsigned int v830;
  unsigned int v831;
  int v832;
  int v833;
  unsigned int v834;
  unsigned int v835;
  unsigned int v836;
  unsigned int v837;
  unsigned int v838;
  unsigned int v839;
  unsigned int v840;
  int v841;
  unsigned int v842;
  unsigned int v843;
  unsigned int v844;
  unsigned int v845;
  unsigned int v846;
  unsigned int v847;
  unsigned int v848;
  unsigned int v849;
  unsigned int v850;
  unsigned int v851;
  unsigned int v852;
  int v853;
  unsigned int v854;
  int v855;
  unsigned int v856;
  unsigned int v857;
  unsigned int v858;
  unsigned int v859;
  unsigned int v860;
  unsigned int v861;
  int v862;
  int v863;

  v17 = (LODWORD(STACK[0x6F0]) ^ 0x3D11E93C) - 855640459 + v9 - v16;
  v18 = ((2 * v17) & 0xAAB7F656) + (v17 ^ 0x555BFB2B);
  v19 = v12 - a7;
  LODWORD(STACK[0x67C]) = a7;
  v20 = ((2 * (v11 - v19 + 1241874975)) & 0xEBB9FDFE) + ((v11 - v19 + 1241874975) ^ 0xF5DCFEFF);
  LODWORD(STACK[0x698]) = v20;
  v21 = v19 - v8;
  v22 = v19 + v10;
  v23 = v15 - (v9 - v16) - 2 * ((v15 - (v9 - v16) + 288960188) & 0x7B5B7F7B ^ (v15 - (v9 - v16)) & 3);
  v24 = v21 + a7;
  v25 = v21 + a7 + a4 - ((2 * (v21 + a7 + a4) + 1444457396) & 0xD99874EA) - 1747414961;
  LODWORD(STACK[0x6A0]) = v25;
  v26 = 431 * (HIBYTE(v25) & 0xF ^ 0xC) + 279719;
  v27 = STACK[0x708];
  v28 = ((*(unsigned __int8 *)(STACK[0x708] + (v26 - 957 * ((4487950 * (unint64_t)v26) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(STACK[0x708] + (431 * ((v25 >> 28) ^ 6) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v25 >> 28) ^ 6) + 279719)) >> 32))) ^ 0x80) << 12);
  v29 = 431 * (HIWORD(v25) & 0xF ^ 0xC) + 279719;
  v30 = 431 * ((v25 >> 20) & 0xF ^ 0xC) + 279719;
  v31 = v28 | *(unsigned __int8 *)(STACK[0x708] + (v29 - 957 * ((4487950 * (unint64_t)v29) >> 32))) ^ 0x80;
  v32 = 431 * ((v25 >> 8) & 0xF ^ 0xA) + 279719;
  v33 = (v31 << 8) ^ ((*(unsigned __int8 *)(STACK[0x708]
                                          + (v30 - 957 * ((4487950 * (unint64_t)v30) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(STACK[0x708] + (v32 - 957 * ((4487950 * (unint64_t)v32) >> 32))) ^ 0x80;
  v34 = (v33 << 8) - 757054088 - ((v33 << 9) & 0xA5C08A00);
  LODWORD(STACK[0x670]) = v34;
  v35 = 1529487153 - v21 - ((1155682758 - 2 * v21) & 0x7171EC9C);
  v36 = v22 + v24 - 2 * ((v22 + v24 + 754317410) & 0x38B8F64F ^ (v22 + v24) & 1) + 1705963184;
  v37 = (v36 ^ 0x936A85F4) + v20 - ((2 * ((v36 ^ 0x936A85F4) + v20) + 331208714) & 0x144C87F2);
  v38 = v16 + v18;
  LODWORD(STACK[0x64C]) = v16;
  v39 = v9 + v18 + 1300162487;
  v40 = v16 + v18 + 1022920676;
  v41 = ((v34 >> 20) & 0xC45 ^ 0xD42D8041 | (v34 >> 20) & 0xC45 ^ 0xC04) ^ (v39 + v40);
  v42 = v40;
  v43 = (v38 + 1140855994) & 0x2AFFFC9D ^ v40 & 1;
  LODWORD(STACK[0x694]) = v23 - 1936413132;
  v44 = v36 ^ v35;
  v45 = (v36 ^ 0x6C957A0B) - ((2 * (v36 ^ 0x6C957A0B) + 383748446) & 0x46650FF6);
  v37 += 1141190654;
  LODWORD(STACK[0x688]) = v37;
  v46 = (v36 ^ v35 ^ 0x2BD273BA) + (v37 ^ 0x8A2643F9) + 1;
  v47 = v46 - 949462132 - ((2 * v46) & 0x8ED0B718);
  v48 = v42;
  LODWORD(STACK[0x654]) = v42;
  v49 = ((v23 - 1936413132) ^ 0x7B5B7F78)
      - v41
      - ((2 * (((v23 - 1936413132) ^ 0x7B5B7F78) - v41) + 1486296808) & 0x63692A14)
      + 1577066622;
  LODWORD(STACK[0x680]) = v49;
  v50 = v41 ^ (v16 - v42 + 975653652);
  LODWORD(STACK[0x6C0]) = a5;
  v51 = (v49 ^ 0xB1B4950A) - v50 - 1017652243 - ((2 * ((v49 ^ 0xB1B4950A) - v50)) & 0x86AFB7DA);
  LODWORD(STACK[0x668]) = v24;
  v52 = v24 - ((2 * v24 + 18111380) & 0x1AE9A04) - 1872659764;
  v53 = (v52 ^ 0x80D74D02) + ((v45 + 1856130218) ^ 0xDCCD7804) + 1;
  v54 = ((2 * v53) & 0xBBFB9BCA) + (v53 ^ 0x5DFDCDE5);
  v55 = v48 - 2 * v43 - 234387086;
  LODWORD(STACK[0x660]) = v55;
  v56 = ((2 * v55) & 0xDD9030C6 ^ 0x55903000) + (v55 ^ 0x4437E4FF);
  v57 = v56 + 430133825 - ((2 * v56) & 0x3346A482);
  LODWORD(STACK[0x650]) = v15;
  v58 = (v47 ^ 0xC7685B8C)
      + v54
      - 1576914405
      - 1623456842
      - ((2 * ((v47 ^ 0xC7685B8C) + v54 - 1576914405)) & 0x3E78076C);
  v59 = v41 - ((2 * v41 + 383748446) & 0x5B174B64) - 117740959;
  v60 = ((2 * ((v57 ^ 0x19A35241) + (v59 ^ 0x52745A4D) + 1)) & 0x9B17BEFE)
      + (((v57 ^ 0x19A35241) + (v59 ^ 0x52745A4D) + 1) ^ 0x4D8BDF7F);
  LODWORD(STACK[0x6E4]) = v51 ^ v59;
  v61 = (v51 ^ 0xC357DBED) + v60 - 1301012351 - 735824825 - ((2 * ((v51 ^ 0xC357DBED) + v60 - 1301012351)) & 0xA848688E);
  LODWORD(STACK[0x658]) = v61;
  v62 = ((2 * (v61 ^ v51 ^ v59)) & 0xEBF7BFCE ^ 0x61F09400) + (v61 ^ v51 ^ v59 ^ 0x4F0395FF);
  v63 = v52 ^ v44;
  LODWORD(STACK[0x638]) = v58;
  v64 = v47 ^ (v45 + 1856130218) ^ v58;
  LODWORD(STACK[0x620]) = v14;
  LODWORD(STACK[0x6E8]) = v64 ^ 0x7B66DFC1;
  v65 = (v64 ^ 0x7B66DFC1) + (v63 ^ 0x7A2C0D3B ^ (v54 - 1576914405));
  v66 = ((2 * v65) & 0x8FFBC766) + (v65 ^ 0x47FDE3B3);
  v67 = (v61 ^ 0xD4243447) + v60 - 1301012351;
  v68 = v57 ^ v50 ^ 0x37759E3D ^ (v60 - 1301012351);
  v69 = ((v66 - 1207821235) ^ 0x57BEF59B) + 684300191 - ((2 * ((v66 - 1207821235) ^ 0x57BEF59B)) & 0x51932F3E);
  LODWORD(STACK[0x5F8]) = v69;
  v70 = (v58 ^ 0x9F3C03B6) + v54 - 1576914405;
  LODWORD(STACK[0x610]) = v69 ^ 0x28C9979F;
  v71 = ((2 * (v70 - v66 + 1655152111 + (v69 ^ 0x28C9979F))) & 0xFC79F3E6)
      + ((v70 - v66 + 1655152111 + (v69 ^ 0x28C9979F)) ^ 0xFE3CF9F3);
  LODWORD(STACK[0x5EC]) = v71;
  v72 = v71 + v13 - ((2 * (v71 + v13) - 497367518) & 0xFF7DD87A);
  v73 = ((v62 + v68 + 168042521) ^ 0x57BEF59B)
      - 1093688523
      - ((2 * ((v62 + v68 + 168042521) ^ 0x57BEF59B)) & 0x7D9F466A);
  v74 = ((2 * (v67 - (v62 + v68) + 279288355 + (v73 ^ 0xBECFA335))) & 0xBB3FFFFC)
      + ((v67 - (v62 + v68) + 279288355 + (v73 ^ 0xBECFA335)) ^ 0xDD9FFFFE);
  v75 = 431 * (((252948657 - v72) >> 24) & 0xF) + 279719;
  v76 = v75 - 957 * ((4487950 * (unint64_t)v75) >> 32);
  v77 = v7 + 2141540690 - v74 - 2 * ((v7 + 2141540690 - v74 + 1161738464) & 0x6F1021FA ^ (v7 + 2141540690 - v74) & 0x10);
  v78 = v72 - 252948658;
  v79 = *(unsigned __int8 *)(v27
                           + (431 * ((252948657 - v72) >> 28)
                                          + 279719
                                          - 957
                                          * ((4487950 * (unint64_t)(431 * ((252948657 - v72) >> 28) + 279719)) >> 32)));
  v80 = *(unsigned __int8 *)(v27 + v76);
  v81 = 431 * (((v72 - 252948658) >> 20) & 0xF ^ 0xB) + 279719;
  v82 = 431 * (HIWORD(v78) & 0xF ^ 0xE) + 279719;
  v83 = ((v80 ^ 0x80) << 8) ^ ((v79 ^ 0x80) << 12) | *(unsigned __int8 *)(v27
                                                                        + (v82
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v82) >> 32))) ^ 0x80;
  v84 = 431 * (((unsigned __int16)v78 >> 12) ^ 0xE) + 279719;
  LODWORD(STACK[0x59C]) = v78;
  v85 = 431 * ((v78 >> 8) & 0xF ^ 0xC) + 279719;
  v86 = (v83 << 8) ^ ((*(unsigned __int8 *)(v27 + (v81 - 957 * ((4487950 * (unint64_t)v81) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v85 - 957 * ((4487950 * (unint64_t)v85) >> 32))) ^ 0x80;
  v87 = (v86 << 8) - (STACK[0x468] & (v86 << 9));
  v88 = v77 + 877583050;
  v89 = 431 * (((v77 + 877583050) >> 28) ^ 6) + 279719;
  v90 = 431 * (~HIBYTE(v88) & 0xF) + 279719;
  v91 = 431 * ((v88 >> 20) & 0xF ^ 1) + 279719;
  v92 = ((((*(unsigned __int8 *)(v27 + (v90 - 957 * ((4487950 * (unint64_t)v90) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v89 - 957 * ((4487950 * (unint64_t)v89) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (HIWORD(v88) & 0xF) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v88) & 0xF) + 279719)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v91 - 957 * ((4487950 * (unint64_t)v91) >> 32))) ^ 0x80) << 12);
  v93 = 431 * (((unsigned __int16)v88 >> 12) ^ 2) + 279719;
  LODWORD(STACK[0x598]) = v88;
  v94 = 431 * ((v88 >> 8) & 0xF ^ 1) + 279719;
  v95 = v92 | *(unsigned __int8 *)(v27 + (v94 - 957 * ((4487950 * (unint64_t)v94) >> 32))) ^ 0x80;
  v96 = (v95 << 8) + 1158880763 - ((v95 << 9) & 0x8A263A00);
  LODWORD(STACK[0x648]) = v96;
  v97 = *(unsigned __int8 *)(v27 + (v84 - 957 * ((4487950 * (unint64_t)v84) >> 32))) ^ 0x80;
  v87 += 453975809;
  LODWORD(STACK[0x644]) = v87;
  v98 = v87 ^ (v97 << 12);
  v99 = v96 ^ ((*(unsigned __int8 *)(v27 + (v93 - 957 * ((4487950 * (unint64_t)v93) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x61C]) = v99;
  LODWORD(STACK[0x640]) = v98;
  v100 = (v99 >> 8) & 0xF0 | ((unsigned __int16)v98 >> 12);
  v101 = ((v100 ^ 0x11) + 1155745511 + ((2 * ((v100 ^ 0x11 | 0x7FFFFFE7) ^ v100)) ^ 0x13) + 1) ^ 0x44E346E7;
  LODWORD(STACK[0x62C]) = 431 * v101;
  v102 = 431 * v101 - 1759397425 - ((862 * v101) & 0x2E43739E);
  LODWORD(STACK[0x634]) = (v102 ^ 0x9721B9CF) % ((v102 & 0x3BD ^ 0x230) + (v102 & 0x3BD ^ 0x18Du));
  v103 = ((v99 >> 12) & 0xF0 | HIWORD(v98) & 0xF) ^ 0x3F;
  v104 = (v103 - 1512126744 - ((2 * v103) & 0x1D0)) ^ 0xA5DEC6E8;
  LODWORD(STACK[0x628]) = 431 * v104;
  v105 = ((431 * v104) ^ 0xF31DBBFF) + ((862 * v104) & 0xE63B77FE);
  LODWORD(STACK[0x624]) = (v105 + 216446062) % (((913 - v105) | (v105 + 110)) & 0x2B4 | 0x109);
  v106 = *(unsigned __int8 *)(STACK[0x5A8] + 1459) ^ 0x80;
  v107 = 16 * v106 - 2129163563 - ((32 * v106) & 0x15A0);
  v108 = v54 + LODWORD(STACK[0x538]) - 13771186 - ((2 * (v54 + LODWORD(STACK[0x538])) + 466450150) & 0x228E5532) + 1982;
  LODWORD(STACK[0x5D0]) = v108;
  v109 = (v108 ^ 0x91472A99) >> ((v47 & 0xBB ^ 0x88 | v47 & 0xBB ^ 0x33) + 93);
  LOBYTE(v106) = v109 - ((2 * v109) & 0x86);
  v110 = LODWORD(STACK[0x534])
       - v60
       + 569496927
       + ~(2 * ((LODWORD(STACK[0x534]) - v60 + 1245130280) & 0x57BAA737 ^ (LODWORD(STACK[0x534]) - v60) & 1));
  LOBYTE(v106) = v106 - 61;
  v111 = 431 * ((v106 >> 4) ^ 0xC) + 279719;
  v112 = 431 * ((v108 >> 20) & 0xF ^ 4) + 279719;
  v113 = 431 * (HIWORD(v108) & 0xF ^ 7) + 279719;
  v114 = ((*(unsigned __int8 *)(v27
                              + (431 * (v106 & 0xF ^ 3)
                                             + 279719
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (v106 & 0xF ^ 3u) + 279719)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v111 - 957 * ((4487950 * (unint64_t)v111) >> 32))) ^ 0x80) << 12);
  v115 = 431 * (((unsigned __int16)v108 >> 12) ^ 2) + 279719;
  v116 = v114 | *(unsigned __int8 *)(v27 + (v113 - 957 * ((4487950 * (unint64_t)v113) >> 32))) ^ 0x80;
  v117 = 431 * ((v108 >> 8) & 0xF ^ 0xA) + 279719;
  v118 = (v116 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (v112 - 957 * ((4487950 * (unint64_t)v112) >> 32))) ^ 0x80) << 12);
  v119 = 431 * ((v108 >> 4) ^ 9) + 279719;
  v120 = v118 | *(unsigned __int8 *)(v27 + (v117 - 957 * ((4487950 * (unint64_t)v117) >> 32))) ^ 0x80;
  v121 = (v120 << 8) - 61008773 - ((v120 << 9) & 0xF8BA2800);
  LODWORD(STACK[0x5A0]) = v121;
  v122 = *(unsigned __int8 *)(v27
                            + (431 * (v108 & 0xF ^ 9)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v108 & 0xF ^ 9) + 279719)) >> 32))) ^ 0x80;
  v123 = v121 ^ ((*(unsigned __int8 *)(v27 + (v115 - 957 * ((4487950 * (unint64_t)v115) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x584]) = v123;
  v124 = v122 + 1395127443 + (~(2 * v122) | 0xFFFFFED9) + 1;
  v125 = 431 * (HIBYTE(v110) & 0xF ^ 7) + 279719;
  v126 = (v123 ^ 0xFC5D147B | v124 ^ 0x5327F493) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v119
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v119) >> 32))) ^ 0x80));
  v127 = 431 * ((v110 >> 20) & 0xF ^ 0xB) + 279719;
  v128 = 431 * (HIWORD(v110) & 0xF ^ 0xA) + 279719;
  v129 = ((*(unsigned __int8 *)(v27 + (v125 - 957 * ((4487950 * (unint64_t)v125) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v110 >> 28) ^ 0xD) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v110 >> 28) ^ 0xD) + 279719)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v128 - 957 * ((4487950 * (unint64_t)v128) >> 32))) ^ 0x80;
  v130 = 431 * (((unsigned __int16)v110 >> 12) ^ 0xA) + 279719;
  v131 = 431 * ((v110 >> 8) & 0xF ^ 7) + 279719;
  v132 = (((2 * (v124 & 0xF ^ 0xB)) | 0x1A9BC990) - (v124 & 0xF ^ 0xB) + 1924275000) ^ 0xD94DE6C0;
  v133 = *(unsigned __int8 *)(v27 + (v131 - 957 * ((4487950 * (unint64_t)v131) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v130 - 957 * ((4487950 * (unint64_t)v130) >> 32))) ^ 0x80));
  LODWORD(STACK[0x514]) = v133;
  v134 = 431 * ((v110 >> 4) ^ 3) + 279719;
  v135 = (v129 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (v127 - 957 * ((4487950 * (unint64_t)v127) >> 32))) ^ 0x80) << 12);
  v136 = v133 ^ 0xFAF2DC63 ^ (v135 + 32690199 - ((2 * v135) & 0xE5B800) + 3276);
  v137 = (v136 << 8) - 97876453 - ((v136 << 9) & 0xF4550C00);
  LODWORD(STACK[0x518]) = v137;
  v138 = *(unsigned __int8 *)(v27
                            + (431 * (v110 & 0xF ^ 6)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v110 & 0xF ^ 6) + 279719)) >> 32)));
  v139 = (v138 ^ 0x80) - 398473961 - ((2 * v138) & 0x2E);
  v140 = (v137 ^ 0xFA2A861B | v139 ^ 0xE83FC517) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v134
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v134) >> 32))) ^ 0x80));
  v141 = (-1812607839 - (v132 | 0x93F5CCA1) + (v132 | 0x6C0A335E)) ^ 0x380A315E;
  LODWORD(STACK[0x5B0]) = v141;
  v142 = 431
       * ((((16 * (v139 & 0xF)) ^ 0x70 | v141)
         + 1182018928
         - 2 * (((16 * (v139 & 0xF)) ^ 0x70 | v141) & 0x46742D76 ^ v141 & 6)) ^ 0x46742D70);
  v143 = *(unsigned __int8 *)(v27 + (v142 + 290925) % 0x3BD) ^ v107 ^ 0x81178AD5;
  LODWORD(STACK[0x6F0]) = v107 ^ 0x81178AD5;
  v144 = 431 * (v143 ^ 0x80);
  LODWORD(STACK[0x510]) = v144;
  v145 = 431 * (*(unsigned __int8 *)(v27 + v142 % 0x3BD) ^ (*(unsigned __int8 *)(v27 + v144 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v146 = *(unsigned __int8 *)(v27 + (v145 - 957 * ((4487950 * (unint64_t)v145) >> 32))) ^ 0x80;
  v147 = 16 * v146 - 494158176 - ((32 * v146) & 0x1D40);
  v148 = 431
       * (((v140 & 0xF0 | (v126 >> 4))
         - 1500382417
         - ((2 * (v140 & 0xF0 | (v126 >> 4))) & 0x5E)) ^ 0xA691FB2F);
  v149 = 431 * (*(unsigned __int8 *)(v27 + (v148 + 290925) % 0x3BD) ^ 0xE28BBEA0 ^ v147 ^ 0x80);
  v150 = v149 % (v147 & 0x3B0 ^ 0x11D | v147 & 0x3B0 ^ 0x2A0u);
  v151 = *(unsigned __int8 *)(v27 + (v149 + 290925) % 0x3BD);
  v152 = 431 * (*(unsigned __int8 *)(v27 + v148 % 0x3BD) ^ (*(unsigned __int8 *)(v27 + v150) >> 4) ^ 0x88) + 290925;
  v153 = (v140 >> 4) & 0xF0 | (v126 >> 8) & 0xF;
  v154 = 431 * ((v153 - 1484079221 - ((2 * v153) & 0x116)) ^ 0xA78ABF8B);
  LODWORD(STACK[0x50C]) = v154;
  v155 = 431
       * (*(unsigned __int8 *)(v27 + (v154 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v152 - 957 * ((4487950 * (unint64_t)v152) >> 32))) ^ 0x80)) ^ 0x80);
  LODWORD(STACK[0x508]) = v155;
  v156 = *(unsigned __int8 *)(v27
                            + (v155
                                           + 290925
                                           - 957 * ((4487950 * (unint64_t)(v155 + 290925)) >> 32)));
  v157 = 16 * (v151 ^ 0x80) - ((32 * v151) & 0x580) - 1697746238;
  LODWORD(STACK[0x534]) = v157;
  v158 = ((v156 ^ 0x80) << 8) - ((v156 << 9) & 0xE200) + 276591072;
  LODWORD(STACK[0x528]) = v158;
  LODWORD(STACK[0x52C]) = v126;
  v159 = ((v158 ^ v157) >> 4) & 0xF0 | (v126 >> 8) & 0xF;
  v160 = (v159 ^ 0x30) - 523578680 - 2 * (v159 & 0xCB ^ (v126 >> 8) & 3);
  LODWORD(STACK[0x538]) = v160;
  v161 = (v58 ^ 0x9F3C03B6) - 1179128097 + (((v160 & 0x21 ^ 0x66DC1521) + (v160 & 0x21)) & 0x46481121);
  v162 = (v161 - ((2 * v161) & 0x958B0AD8) + 1254458732) ^ v64;
  v163 = ((2 * ((v162 ^ 0x7AC1358) - v70 - 447330876)) & 0xF75F753E)
       + (((v162 ^ 0x7AC1358) - v70 - 447330876) ^ 0xFBAFBA9F);
  v164 = v67;
  LODWORD(STACK[0x5B8]) = v67;
  v165 = (v62 - v67 - 2 * ((v62 - v67 + 648920492) & 0x3ECFA337 ^ (v62 - v67) & 2) + 1702715617) ^ v73;
  LODWORD(STACK[0x608]) = v165;
  v166 = (LODWORD(STACK[0x6E4]) ^ 0x58D337AA) - v164;
  LODWORD(STACK[0x604]) = v166;
  v167 = ((2 * ((v73 ^ 0xBECFA335) - v166 + 447330876)) & 0x59FCF4BA)
       + (((v73 ^ 0xBECFA335) - v166 + 447330876) ^ 0xACFE7A5D);
  v168 = v74 + 1969325477 + v167;
  v169 = v167 + 2 * v165 - ((2 * (v167 + 2 * v165) - 162585034) & 0xE28CD4A2) - 328336020;
  LODWORD(STACK[0x630]) = v169;
  v170 = ((2 * (v169 ^ v168)) & 0xBEF1D77A ^ 0xA280D422) + (v169 ^ v168 ^ 0xAE3E81EC);
  v171 = LODWORD(STACK[0x53C]) - v170;
  v172 = v170;
  LODWORD(STACK[0x6E0]) = v170;
  LODWORD(STACK[0x5FC]) = v163;
  v173 = v171 - ((2 * v171 - 1148634524) & 0xAED5D31A) + 892307135;
  LODWORD(STACK[0x600]) = (431 * (((v171 - ((2 * v171 + 100) & 0x1A) - 65) >> 4) ^ 8u) + 279719)
                        % (((918 - v163) | (v163 + 105)) & 0x3BD);
  v174 = LODWORD(STACK[0x6E8]) - v70 - ((2 * (LODWORD(STACK[0x6E8]) - v70) + 961755942) & 0x51932F3E);
  LODWORD(STACK[0x504]) = 278762;
  v175 = *(unsigned __int8 *)(v27 + (431 * (v78 & 0xF ^ 0xD) + 278762) % 0x3BD) ^ 0x80;
  v176 = ((2 * (v88 & 0xF)) ^ 0x14) + (v88 & 0xF ^ 0xDE7B9DF5);
  v177 = (((v176 + 138) & 0x8F ^ (373 - v176) & 0x12F) & (((511417205 - v176) & 0x2550A96F) + ((v176 + 138) & 0x8F)))
       * (v176 + 562324618);
  v178 = *(unsigned __int8 *)(v27 + (v177 - 957 * ((4487950 * (unint64_t)v177) >> 32))) ^ 0x80;
  v179 = v178 + 1256670938 - ((2 * v178) & 0x1B4);
  LODWORD(STACK[0x590]) = v179;
  v180 = v175 - ((2 * v175) & 0x104) - 105411966;
  LOBYTE(v165) = v175 - ((2 * v175) & 4) - 126;
  LODWORD(STACK[0x588]) = v180;
  v181 = ((16 * v179) & 0xF0 | v180 & 0xF) ^ 0xA2;
  v182 = 431 * ((v181 + 1829626287 - ((2 * v181) & 0x15E)) ^ 0x6D0DE1AF);
  LODWORD(STACK[0x58C]) = v182;
  v183 = 431 * (*(unsigned __int8 *)(v27 + (v182 + 290925) % 0x3BDu) ^ v107 ^ 0x81178AD5 ^ 0x80);
  LODWORD(STACK[0x594]) = v183;
  v184 = *(unsigned __int8 *)(v27 + (v183 + 290925) % 0x3BD);
  v185 = LODWORD(STACK[0x5F8]) ^ (v174 - 982305486);
  LODWORD(STACK[0x5B4]) = (v184 ^ 0x80) - ((2 * v184) & 0x46) - 2072769757;
  v186 = 431 * ((v165 & 0xF | (16 * (((v184 ^ 0x80) - ((2 * (_BYTE)v184) & 0x46) + 35) & 0xF))) ^ 0x32)
       + 168952;
  v187 = LODWORD(STACK[0x610]) - 72369505 - v163;
  v188 = *(unsigned __int8 *)(v27 + (v186 - 957 * ((4487950 * (unint64_t)v186) >> 32)));
  LODWORD(STACK[0x5C8]) = v188;
  v189 = ((2 * v187) & 0xFB9FFFAE) + (v187 ^ 0x7DCFFFD7);
  v190 = 431 * (v188 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v188 & 0xFu) + 404709)) >> 32);
  LODWORD(STACK[0x5E0]) = v190 + 809424354 - ((2 * v190) & 0x3C4);
  v191 = (((_WORD)v190 - 10782 - ((2 * (_WORD)v190) & 0x3C4)) & 0x2BC ^ 0x5413061C | ((_WORD)v190
                                                                                    - 10782
                                                                                    - ((2 * (_WORD)v190) & 0x3C4)) & 0x2BC ^ 0xA0)
       + v185;
  LODWORD(STACK[0x5DC]) = v191;
  v192 = LODWORD(STACK[0x5EC]) - 2081225162 + v189;
  v193 = v189 - 2110783447 + 2 * v191 - ((2 * (v189 - 2110783447 + 2 * v191)) & 0x9E4EE4AC) + 1327985238;
  LODWORD(STACK[0x610]) = v193;
  v194 = ((2 * (v193 ^ v192)) & 0xFCFCF3DE ^ 0x9C4CE08C) + (v193 ^ v192 ^ 0x31590BB9);
  v195 = v194 + LODWORD(STACK[0x540]);
  v196 = v194;
  LODWORD(STACK[0x6E8]) = v194;
  v197 = v195 - 2 * ((v195 + 2086582924) & 0x58365D67 ^ v195 & 1) + 1419057138;
  LODWORD(STACK[0x5F8]) = v197;
  v198 = 431 * (HIBYTE(v197) & 0xF ^ 8) + 279719;
  v199 = 431 * ((v197 >> 20) & 0xF ^ 3) + 279719;
  v200 = 431 * (HIWORD(v197) & 0xF ^ 6) + 279719;
  v201 = *(unsigned __int8 *)(v27 + (v199 - 957 * ((4487950 * (unint64_t)v199) >> 32)));
  LODWORD(STACK[0x5D8]) = v201;
  v202 = (v201 ^ 0x80) - 1462780672 - ((2 * v201) & 0x64) + 50;
  LODWORD(STACK[0x5D4]) = v202;
  v203 = ((*(unsigned __int8 *)(v27 + (v198 - 957 * ((4487950 * (unint64_t)v198) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v197 >> 28) ^ 0xD) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v197 >> 28) ^ 0xD) + 279719)) >> 32))) ^ 0x80) << 12);
  v204 = *(unsigned __int8 *)(v27 + (v200 - 957 * ((4487950 * (unint64_t)v200) >> 32))) ^ 0x80;
  v205 = ((16 * v202) ^ 0x8CFBD320) - ((2 * ((16 * v202) ^ 0x8CFBD320)) & 0x2B86FE0) + 22820852;
  LODWORD(STACK[0x5CC]) = v205;
  v206 = v205 ^ ((v203 | v204) + 81536 - 2 * ((v203 | v204) & 0xC37F6 ^ v204 & 2) - 1676);
  v207 = (v206 << 16) + 1826985408 - ((v206 << 17) & 0xD9CA0000);
  LODWORD(STACK[0x53C]) = v207;
  v208 = 431 * (HIBYTE(v173) & 0xF ^ 7) + 279719;
  v209 = 431 * ((v173 >> 20) & 0xF ^ 6) + 279719;
  v210 = v209 - 957 * ((4487950 * (unint64_t)v209) >> 32);
  v211 = v210 - 405765426 - ((2 * v210) & 0x59C);
  v212 = ((*(unsigned __int8 *)(v27 + (v208 - 957 * ((4487950 * (unint64_t)v208) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v173 >> 28) ^ 0xD) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v173 >> 28) ^ 0xD) + 279719)) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x5F0]) = v173;
  v213 = 431 * ((v211 & 0x289 ^ 1 | v211 & 0x289 ^ 0x288) + (HIWORD(v173) & 0xF ^ 0xA));
  v214 = ((v212 | *(unsigned __int8 *)(v27 + (v213 - 957 * ((4487950 * (unint64_t)v213) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v211 ^ 0xE7D082CE)) ^ 0x80) << 12);
  v215 = 431 * ((v173 >> 8) & 0xF ^ 9) + 279719;
  v216 = v214 | *(unsigned __int8 *)(v27 + (v215 - 957 * ((4487950 * (unint64_t)v215) >> 32))) ^ 0x80;
  v217 = (v216 << 8) - 1996782845 - ((v216 << 9) & 0x11F70600);
  LODWORD(STACK[0x540]) = v217;
  v218 = v217 >> 20;
  v219 = ((v217 >> 20) & 0xF0 | HIBYTE(v207) & 0xF) ^ 0x8C;
  v220 = 431 * ((v219 + 762915862 - ((2 * v219) & 0x2C)) ^ 0x2D792C16);
  LODWORD(STACK[0x5BC]) = v220;
  LODWORD(STACK[0x5C0]) = (v220 + 290925) % ((v218 & 0xB0 ^ 0x80) + (v218 & 0xB0 ^ 0x33D));
  v221 = LODWORD(STACK[0x530]) + LODWORD(STACK[0x6DC]) - 1870283019 + v70;
  v222 = v221 - ((2 * v221) & 0xF7E64F0E);
  LODWORD(STACK[0x4E8]) = v222;
  v223 = LODWORD(STACK[0x6A8]) - v172 - ((2 * (LODWORD(STACK[0x6A8]) - v172) - 1467418828) & 0xA76F8184);
  LODWORD(STACK[0x4DC]) = v222 - 67950713;
  v224 = v162 ^ (v222 - 67950713);
  LODWORD(STACK[0x5EC]) = v224;
  v225 = v223 - 1476641700;
  v226 = (431 * ((v223 - 1476641700) & 0xF ^ 2) + 279719) % ((v224 & 0x3BD ^ 0x9D) + (v224 & 0x3BD ^ 0x320u));
  v227 = v196
       + LODWORD(STACK[0x6B0])
       - 2 * ((v196 + LODWORD(STACK[0x6B0]) + 1569077788) & 0x4FB6D137 ^ (v196 + LODWORD(STACK[0x6B0])) & 2)
       - 1388508335;
  LODWORD(STACK[0x6B0]) = v227;
  v228 = 431 * (~HIBYTE(v227) & 0xF) + 279719;
  v229 = 431 * ((v227 >> 20) & 0xF ^ 0xB) + 279719;
  v230 = ((*(unsigned __int8 *)(v27 + (v228 - 957 * ((4487950 * (unint64_t)v228) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v227 >> 28) ^ 0xC) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v227 >> 28) ^ 0xC) + 279719)) >> 32))) ^ 0x80) << 12);
  v231 = 431 * (HIWORD(v227) & 0xF ^ 6) + 279719;
  v232 = *(unsigned __int8 *)(v27 + (v231 - 957 * ((4487950 * (unint64_t)v231) >> 32))) ^ 0x80;
  v233 = (v230 | v232) - 2 * ((v230 | v232) & 0x42D5 ^ v232 & 0x15);
  LOWORD(v207) = v233 + 17088;
  v234 = ((v233 - 1801436480) << 8) ^ ((*(unsigned __int8 *)(v27
                                                           + (v229
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v229) >> 32))) ^ 0x80) << 12);
  v235 = 431 * (((unsigned __int16)v227 >> 12) ^ 0xD) + 279719;
  v236 = 431 * ((v227 >> 8) & 0xF ^ 1) + 279719;
  v237 = 431 * ((v227 >> 4) ^ 3) + 279719;
  v238 = v234 | *(unsigned __int8 *)(v27 + (v236 - 957 * ((4487950 * (unint64_t)v236) >> 32))) ^ 0x80;
  v239 = 431 * (v227 & 0xF ^ 5) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v227 & 0xF ^ 5) + 279719)) >> 32);
  v240 = 431 * ((v225 >> 28) ^ 5)
       + 279719
       - 957 * ((4487950 * (unint64_t)(431 * ((v225 >> 28) ^ 5) + 279719)) >> 32);
  v241 = v240 + 2136975566 - ((2 * v240) & 0x19C);
  v242 = v238 ^ (16
               * (*(unsigned __int8 *)(v27 + (v235 - 957 * ((4487950 * (unint64_t)v235) >> 32))) ^ 0x80));
  v243 = ((v242 << 8) ^ 0x42C00000) - 857629291 - ((2 * ((v242 << 8) ^ 0x42C00000)) & 0x99C33A00);
  v244 = (*(unsigned __int8 *)(v27 + v239) ^ 0x80) - 1895351261 - ((2 * *(unsigned __int8 *)(v27 + v239)) & 0x46);
  v245 = 431 * ((v241 & 0x289 ^ 0x88 | v241 & 0x289 ^ 0x201) + (HIBYTE(v225) & 0xF ^ 3));
  v246 = 431 * ((v225 >> 20) & 0xF ^ 0xB) + 279719;
  v247 = (v243 ^ 0xCCE19D95 | v244 ^ 0x8F073C23) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v237
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v237) >> 32))) ^ 0x80));
  v248 = 431 * (HIWORD(v225) & 0xF ^ 7) + 279719;
  v249 = ((*(unsigned __int8 *)(v27 + (v245 - 957 * ((4487950 * (unint64_t)v245) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v241 ^ 0x7F5FA8CEu)) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v248 - 957 * ((4487950 * (unint64_t)v248) >> 32))) ^ 0x80;
  v250 = ((v242 & 0x1AF ^ 0x1AF) + (v242 & 0x1AF)) * ((((unsigned __int16)v225 >> 12) ^ 0xC) + 649);
  v251 = *(unsigned __int8 *)(v27
                            + (431 * ((v225 >> 8) & 0xF)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * ((v225 >> 8) & 0xF) + 279719)) >> 32)));
  v252 = 431 * ((v225 >> 4) ^ 0xC) + 279719;
  v253 = (v249 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (v246 - 957 * ((4487950 * (unint64_t)v246) >> 32))) ^ 0x80) << 12) | v251 ^ 0x80;
  v254 = (v253 << 8) + 412179529 - ((v253 << 9) & 0x3122B800);
  v255 = *(unsigned __int8 *)(v27 + v226) ^ 0x80;
  v256 = v255 - 345293370 - ((2 * v255) & 0x18C);
  v257 = v254 ^ ((*(unsigned __int8 *)(v27 + (v250 - 957 * ((4487950 * (unint64_t)v250) >> 32))) ^ 0x80) << 12);
  v258 = (v257 ^ 0x18915C49 | v256 ^ 0xEB6B3DC6) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v252
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v252) >> 32))) ^ 0x80));
  v259 = v244 & 0xF;
  v260 = (((v259 | (16 * (v256 & 0xF))) ^ 0x63)
        - 224290845
        - 2 * (((v259 | (16 * (v256 & 0xF))) ^ 0x63) & 0xFFFFFFFB ^ (v244 & 8 | (16 * (v256 & 0xF)) & 0x18))) ^ 0xF2A197E3;
  v261 = v260 * (v207 & 0x1AF ^ 0x80 | v207 & 0x1AF ^ 0x12F);
  v262 = 431 * (*(unsigned __int8 *)(v27 + (431 * v260 + 290925) % 0x3BD) ^ v107 ^ 0x81178A55);
  v263 = (v262 + 290925) % 0x3BD;
  v264 = v262 % 0x3BD;
  v265 = ((v247 >> 4) ^ 0xFE8EFF47) & 0x1CB5F11E ^ 0x945BA8B5 ^ ((((v247 >> 4) ^ 0xFE8EFF47) & 0x1CB5F111)
                                                               - 1805932363
                                                               - ((2 * ((v247 >> 4) ^ 0xFE8EFF47)) & 0x28234020)
                                                               + 1021) & 0xFFFFF9F3;
  v266 = 431 * (*(unsigned __int8 *)(v27 + v261 % 0x3BD) ^ (*(unsigned __int8 *)(v27 + v264) >> 4) ^ 0x88) + 290925;
  v267 = 431 * (((v265 | v258 & 0xF0) + 1199215996 - ((2 * (v265 | v258 & 0xF0)) & 0x8EF522F8)) ^ 0x477A957C);
  v268 = 431
       * (*(unsigned __int8 *)(v27 + (v267 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v266 - 957 * ((4487950 * (unint64_t)v266) >> 32))) ^ 0x80)) ^ 0x80);
  v269 = v268 + 290925 - 957 * ((4487950 * (unint64_t)(v268 + 290925)) >> 32);
  v270 = ((v258 >> 4) & 0xF0 | (v247 >> 8) & 0xF)
       + 2049064266
       - 2 * (((v258 >> 4) & 0x50 | (v247 >> 8) & 0xA) ^ (v258 >> 4) & 0x10);
  v271 = (*(unsigned __int8 *)(v27 + v263) ^ 0x80) - ((2 * *(unsigned __int8 *)(v27 + v263)) & 0x82);
  v272 = 431
       * (*(unsigned __int8 *)(v27 + v267 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v268
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v268) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v273 = 431 * (v270 ^ 0x7A223D4A);
  v274 = 431
       * (*(unsigned __int8 *)(v27 + (v273 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v272 - 957 * ((4487950 * (unint64_t)v272) >> 32))) ^ 0x80)) ^ 0x80);
  v275 = v274 + 290925 - 957 * ((4487950 * (unint64_t)(v274 + 290925)) >> 32);
  v276 = *(unsigned __int8 *)(v27 + v273 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v274
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v274) >> 32))) >> 4);
  v277 = ((v257 >> 8) & 0xF0 | ((unsigned __int16)v243 >> 12)) ^ 0x59;
  v278 = 431 * ((v277 - 852006420 - ((2 * v277) & 0x1D8)) ^ 0xCD3769EC);
  v279 = 431
       * (*(unsigned __int8 *)(v27 + (v278 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v276 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v276 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v280 = v279 + 290925 - 957 * ((4487950 * (unint64_t)(v279 + 290925)) >> 32);
  v281 = 431
       * (*(unsigned __int8 *)(v27 + v278 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v279
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v279) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v257 >>= 12;
  v282 = 431
       * ((((v257 & 0xF0 | HIWORD(v243) & 0xF) ^ 0x11) - 358786206 - ((2 * (v257 & 0xF0 | HIWORD(v243) & 0xF)) & 0xC4)) ^ 0xEA9D5B62);
  v283 = v282 % (v257 & 0xB0 ^ 0x1D | v257 & 0xB0 ^ 0x3A0);
  v284 = ((*(unsigned __int8 *)(v27 + v280) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(v27 + v275) ^ 0x80) << 8);
  v285 = 431
       * (*(unsigned __int8 *)(v27 + (v282 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v281 - 957 * ((4487950 * (unint64_t)v281) >> 32))) ^ 0x80)) ^ 0x80);
  v286 = v285 + 290925 - 957 * ((4487950 * (unint64_t)(v285 + 290925)) >> 32);
  v287 = (HIWORD(v254) & 0xF0 | (v243 >> 20) & 0xF) ^ 0x9E;
  v288 = 431
       * (*(unsigned __int8 *)(v27 + v283) ^ (*(unsigned __int8 *)(v27
                                                                 + (v285
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v285) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v289 = 431 * ((v287 + 1119826259 - ((2 * v287) & 0xA6)) ^ 0x42BF3153);
  v290 = 431
       * (*(unsigned __int8 *)(v27 + (v289 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v288 - 957 * ((4487950 * (unint64_t)v288) >> 32))) ^ 0x80)) ^ 0x80);
  v291 = v290 + 290925 - 957 * ((4487950 * (unint64_t)(v290 + 290925)) >> 32);
  v292 = 431
       * (*(unsigned __int8 *)(v27 + v289 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v290
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v290) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v293 = ((v254 >> 20) & 0xF0 | HIBYTE(v243) & 0xF) ^ 0x8C;
  v294 = 431 * ((v293 - 1387450888 - ((2 * v293) & 0x1F0)) ^ 0xAD4D2DF8);
  v295 = *(unsigned __int8 *)(v27 + (v294 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v27
                                                                                    + (v292 - 957 * ((4487950 * (unint64_t)v292) >> 32))) ^ 0x80));
  v296 = 431 * (((2 * v295) & 0x546 ^ 0x100) + (v295 ^ 0x223u)) % 0x3BD;
  v297 = 431
       * (*(unsigned __int8 *)(v27 + v294 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (431 * (v295 ^ 0x80)
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)(431 * (v295 ^ 0x80u))) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v298 = 431 * ((HIBYTE(v254) & 0xF0 | (v243 >> 28)) ^ 0x1C) + 290925;
  v299 = 431
       * (*(unsigned __int8 *)(v27 + (v298 - 957 * ((4487950 * (unint64_t)v298) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v297 - 957 * ((4487950 * (unint64_t)v297) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v300 = v299 - 957 * ((4487950 * (unint64_t)v299) >> 32);
  LOBYTE(v294) = v271 + 65;
  v301 = (v271 - 314526655) ^ (16 * (*(unsigned __int8 *)(v27 + v269) ^ 0x80));
  v302 = v301 ^ 0x5A6A3116 ^ v284;
  v303 = v302 ^ ((*(unsigned __int8 *)(v27 + v286) ^ 0x80) << 16);
  v304 = v303 ^ ((*(unsigned __int8 *)(v27 + v291) ^ 0x80) << 20);
  v305 = *(unsigned __int8 *)(v27 + v300);
  v306 = v304 ^ ((*(unsigned __int8 *)(v27 + v296) ^ 0x80) << 24);
  LODWORD(STACK[0x530]) = v306;
  v307 = ((v306 ^ (v305 << 28)) >> 24) & 0xF0 | (v243 >> 28);
  v308 = ((2 * v307) & 0xDDDDDDDD ^ 0x158) + (v307 ^ 0xE77CDE52);
  v309 = (((357 - v308) | (v308 + 154)) & 0x1AF) * (v308 + 411247258);
  LODWORD(STACK[0x4F8]) = ((v309 - 1073057567 - ((2 * v309) & 0x14E1C2)) ^ 0xC00A70E1)
                        % (((v309 - 1073057567 - ((2 * v309) & 0x14E1C2)) & 0x3BD ^ 0x31C)
                         + ((v309 - 1073057567 - ((2 * v309) & 0x14E1C2)) & 0x3BD ^ 0xA1u));
  v310 = 431 * ((v259 & 0xFFFFFF0F | (16 * (v294 & 0xF))) ^ 0x13) + 168952;
  v311 = v310 - 957 * ((4487950 * (unint64_t)v310) >> 32);
  v312 = (431 * (v301 & 0xF0 ^ 0x40 | v265) + 168952) % 0x3BD;
  v313 = 431 * (((v302 >> 4) & 0xF0 | (v247 >> 8) & 0xF) ^ 0x50) + 168952;
  v314 = v313 - 957 * ((4487950 * (unint64_t)v313) >> 32);
  LODWORD(STACK[0x6A8]) = v243;
  v315 = 431 * (((v284 >> 8) & 0xF0 | ((unsigned __int16)v243 >> 12)) ^ 9) + 168952;
  v316 = v315 - 957 * ((4487950 * (unint64_t)v315) >> 32);
  v317 = 431 * (((v303 >> 12) & 0xF0 | HIWORD(v243) & 0xF) ^ 0xA1) + 168952;
  v318 = v317 - 957 * ((4487950 * (unint64_t)v317) >> 32);
  v319 = 431 * ((HIWORD(v304) & 0xF0 | (v243 >> 20) & 0xF) ^ 0x2E) + 168952;
  v320 = v319 - 1914 * ((2243975 * (unint64_t)v319) >> 32);
  v321 = ((2 * v320) & 0xC52) + (v320 ^ 0x6F7FFE29);
  if ((v321 - 1870659113) >= 0x3BD)
    v322 = -1617759197;
  else
    v322 = -1617758240;
  v323 = *(unsigned __int8 *)(v27 + v311);
  LODWORD(STACK[0x500]) = v323;
  v324 = v323 ^ (16 * (*(unsigned __int8 *)(v27 + v312) ^ 0x80));
  LODWORD(STACK[0x4FC]) = v324;
  v325 = *(unsigned __int8 *)(v27 + v316);
  v326 = v324 ^ ((*(unsigned __int8 *)(v27 + v314) ^ 0x80) << 8);
  LODWORD(STACK[0x4F4]) = v326;
  v327 = v326 ^ ((v325 ^ 0x80) << 12);
  LODWORD(STACK[0x4F0]) = v327;
  v328 = *(unsigned __int8 *)(v27 + (v321 - 252900873 + v322));
  v329 = v327 ^ ((*(unsigned __int8 *)(v27 + v318) ^ 0x80) << 16);
  LODWORD(STACK[0x4EC]) = v329;
  v330 = v329 ^ ((v328 ^ 0x80) << 20);
  LODWORD(STACK[0x4E4]) = v330;
  LODWORD(STACK[0x4E0]) = (431 * ((v330 >> 20) & 0xF) + 404709)
                        % (((431 * ((v330 >> 20) & 0xF) + 5) | (((v330 >> 20) & 0xF | (16 * ((v330 >> 20) & 0xF))) + 26)) & 0x15 | 0x3A8);
  v331 = LODWORD(STACK[0x67C]) + LODWORD(STACK[0x544]);
  v332 = STACK[0x6F8];
  v333 = LODWORD(STACK[0x6F8]) ^ 0x2A7;
  LODWORD(STACK[0x544]) = v333;
  v334 = v331 - ((v333 + 2 * v331 - 1032764563) & 0xEA813A2E);
  v335 = 61 * (v332 ^ 0x9E9);
  v336 = v334 - 696695682;
  LODWORD(STACK[0x4D8]) = v335;
  v337 = LODWORD(STACK[0x520]) - LODWORD(STACK[0x64C]) + 1398387283 + LODWORD(STACK[0x6BC]);
  v338 = v337 - ((2 * v337) & 0x60356EC);
  v339 = 431 * (((v334 - 696695682) >> 20) & 0xF ^ 4) + 279719;
  v340 = *(unsigned __int8 *)(v27
                            + (431 * (HIWORD(v336) & 0xF)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIWORD(v336) & 0xF) + 279719)) >> 32)));
  v341 = 431 * (((unsigned __int16)(v334 + 17534) >> 12) ^ 9) + 279719;
  v342 = ((((*(unsigned __int8 *)(v27 + (431 * (((v334 - 696695682) >> 24) & 0xF ^ (v335 - 2862)) + 279719) % 0x3BD) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((696695681 - v334) >> 28) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((696695681 - v334) >> 28) + 279719)) >> 32))) ^ 0x80) << 12) | v340 ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v339 - 957 * ((4487950 * (unint64_t)v339) >> 32))) ^ 0x80) << 12);
  v343 = 431 * ((BYTE1(v336) ^ 0x9D) & (((v340 & 0xBF ^ 0x3F) + (v340 & 0xBF) + 0x80) ^ 0xB0)) + 279719;
  v344 = 431 * ((v336 >> 4) ^ 1) + 279719;
  v345 = *(unsigned __int8 *)(v27 + (v343 - 957 * ((4487950 * (unint64_t)v343) >> 32))) ^ v342 ^ (16 * (*(unsigned __int8 *)(v27 + (v341 - 957 * ((4487950 * (unint64_t)v341) >> 32))) ^ 0x80));
  v346 = ((v345 ^ 0x80) << 8) + 1962810307 - ((v345 << 9) & 0xE9FC3600);
  v347 = 431 * ((v338 + LODWORD(STACK[0x474])) >> 28) + 279719;
  v348 = *(unsigned __int8 *)(v27
                            + (431 * (v336 & 0xF ^ 7)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v336 & 0xF ^ 7) + 279719)) >> 32))) ^ 0x80;
  v349 = v348 - 1978689883 - ((2 * v348) & 0x14A);
  v350 = (v346 ^ 0x74FE1BC3 | v349 ^ 0x8A0F96A5) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v344
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v344) >> 32))) ^ 0x80));
  v338 -= 2097042570;
  v351 = 431 * (HIBYTE(v338) & 0xF ^ 3) + 279719;
  v352 = v351 - 957 * ((4487950 * (unint64_t)v351) >> 32);
  v353 = v352 - 1669593928 - ((2 * v352) & 0x170);
  v354 = ((v353 & 0x404020 | ~v353 & 0x20) ^ 0x51A0E241 ^ (v353 & 0xE8 ^ 0xA8 | v353 & 0x1060E0E8 ^ 0x4180E040))
       + ((v338 >> 20) & 0xF);
  v355 = ((*(unsigned __int8 *)(v27 + (v353 ^ 0x9C7C04B8)) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27
                                                                                                + (v347 - 957 * ((4487950 * (unint64_t)v347) >> 32))) ^ 0x80) << 12);
  v356 = 431 * v354 % 0x3BDu;
  v357 = 431 * (HIWORD(v338) & 0xF ^ 1) + 279719;
  v358 = v355 | *(unsigned __int8 *)(v27 + (v357 - 957 * ((4487950 * (unint64_t)v357) >> 32))) ^ 0x80;
  v359 = 431 * (((unsigned __int16)v338 >> 12) ^ 0xA) + 279719;
  v360 = (v358 << 8) ^ ((*(unsigned __int8 *)(v27 + v356) ^ 0x80) << 12);
  v361 = 431 * ((v338 >> 8) & 0xF ^ 0xB) + 279719;
  v362 = v361 - 957 * ((4487950 * (unint64_t)v361) >> 32);
  v363 = v362 - 2111462651 - ((2 * v362) & 0x60A);
  v364 = (~(_BYTE)v363 & 4 ^ 4) + (~(_BYTE)v363 & 4);
  v365 = v360 | *(unsigned __int8 *)(v27 + (v363 ^ 0x8225A305)) ^ 0x80;
  v366 = 431 * ((v338 >> 4) ^ 7) + 279719;
  v367 = v365 ^ ((*(unsigned __int8 *)(v27 + (v359 - 957 * ((4487950 * (unint64_t)v359) >> 32))) ^ 0x80) << v364);
  v368 = (v367 << 8) + 608655363 - ((v367 << 9) & 0x488EB000);
  v369 = *(unsigned __int8 *)(v27
                            + (431 * (v338 & 0xF ^ 6)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v338 & 0xF ^ 6) + 279719)) >> 32)));
  v370 = (v369 ^ 0x80) + 888102915 - 2 * (v369 & 3);
  v371 = (v368 ^ 0x24475803 | v370 ^ 0x34EF6003) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v366
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v366) >> 32))) ^ 0x80));
  v372 = v349 & 0xF;
  v373 = (v372 | (16 * (v370 & 0xF))) ^ 0x35;
  v374 = 431 * ((v373 - 942514223 - 2 * (v373 & 0xDB ^ v349 & 0xA)) ^ 0xC7D25FD1);
  v375 = v374 % 0x3BD;
  v376 = 431 * (*(unsigned __int8 *)(v27 + (v374 + 290925) % 0x3BD) ^ v107 ^ 0x81178AD5 ^ 0x80);
  LOBYTE(v374) = *(_BYTE *)(v27 + (v376 + 290925) % 0x3BD) ^ 0x80;
  v377 = ((v350 >> 4) ^ 0x26D258E9) & 0x2B0F2317 ^ 0xAD00704 ^ (((2 * ((v350 >> 4) ^ 0x26D258E9)) & 0x61A4020)
                                                              - (((v350 >> 4) ^ 0x26D258E9) & 0x2B0F2318)
                                                              + 684853004);
  v378 = 431 * (*(unsigned __int8 *)(v27 + v375) ^ (*(unsigned __int8 *)(v27 + v376 % 0x3BD) >> 4) ^ 0x88) + 290925;
  v379 = v378 - 957 * ((4487950 * (unint64_t)v378) >> 32);
  v380 = ((2 * v377) | 0xABC27D92) - v377 - 1440825033;
  v381 = v380 ^ 0x77E33EC8;
  v382 = 431
       * (((v380 ^ 0x77E33EC8 | v371 & 0xF0)
         - 706310540
         - 2 * (((v380 ^ 0x77E33EC8) & 0x55E68E77 | v371 & 0x70) ^ v380 & 3)) ^ 0xD5E68E74);
  v383 = 431
       * (*(unsigned __int8 *)(v27 + (v382 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v27 + v379) ^ 0x80)) ^ 0x80);
  v384 = v383 + 290925 - 957 * ((4487950 * (unint64_t)(v383 + 290925)) >> 32);
  v385 = 431
       * (*(unsigned __int8 *)(v27 + v382 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v383
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v383) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v386 = (v371 >> 4) & 0xF0 | (v350 >> 8) & 0xF;
  v387 = 431 * ((v386 - 1753602376 - 2 * (v386 & 0xBBBBBBBB ^ (v350 >> 8) & 3)) ^ 0x977A26B8);
  v388 = 431
       * (*(unsigned __int8 *)(v27 + (v387 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v385 - 957 * ((4487950 * (unint64_t)v385) >> 32))) ^ 0x80)) ^ 0x80);
  v389 = 431
       * (*(unsigned __int8 *)(v27 + v387 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v388
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v388) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v390 = (v367 & 0xF0 | ((unsigned __int16)v346 >> 12)) ^ 1;
  v391 = v390 - 1835579375 - 2 * (v390 & 0x1F ^ (v346 >> 12) & 0xE);
  v392 = 16 * (*(unsigned __int8 *)(v27 + v384) ^ 0x80) - ((32 * *(unsigned __int8 *)(v27 + v384)) & 0x9C0);
  v393 = 431 * (v391 ^ 0x92974811);
  v394 = 431
       * (*(unsigned __int8 *)(v27 + (v393 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v389 - 957 * ((4487950 * (unint64_t)v389) >> 32))) ^ 0x80)) ^ 0x80);
  v395 = v394 + 290925 - 957 * ((4487950 * (unint64_t)(v394 + 290925)) >> 32);
  v396 = 431
       * (*(unsigned __int8 *)(v27 + v393 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v394
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v394) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v397 = ((v368 >> 12) & 0xF0 | HIWORD(v346) & 0xF) ^ 0x7E;
  v398 = 431 * ((v397 + 246380202 - 2 * (v397 & 0xAB ^ HIWORD(v346) & 1)) ^ 0xEAF76AA);
  v399 = 431
       * (*(unsigned __int8 *)(v27 + (v398 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v396 - 957 * ((4487950 * (unint64_t)v396) >> 32))) ^ 0x80)) ^ 0x80);
  v400 = v399 + 290925 - 957 * ((4487950 * (unint64_t)(v399 + 290925)) >> 32);
  v401 = 431
       * (*(unsigned __int8 *)(v27 + v398 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v399
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v399) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v402 = (HIWORD(v368) & 0xF0 | (v346 >> 20) & 0xF) ^ 0x4F;
  v403 = 431 * ((v402 + 746750902 - ((2 * v402) & 0x16C)) ^ 0x2C8283B6);
  v404 = 431
       * (*(unsigned __int8 *)(v27 + (v403 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v401 - 957 * ((4487950 * (unint64_t)v401) >> 32))) ^ 0x80)) ^ 0x80);
  v405 = v404 + 290925 - 957 * ((4487950 * (unint64_t)(v404 + 290925)) >> 32);
  v406 = 431
       * (*(unsigned __int8 *)(v27 + v403 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v404
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v404) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v407 = ((v368 >> 20) & 0xF0 | HIBYTE(v346) & 0xF) ^ 0x44;
  v408 = 431 * ((v407 + 361026132 - 2 * (v407 & 0x5C ^ HIBYTE(v346) & 8)) ^ 0x1584D254);
  v409 = ((*(unsigned __int8 *)(v27 + v405) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(v27 + v400) ^ 0x80) << 16);
  v410 = 431
       * (*(unsigned __int8 *)(v27 + (v408 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v406 - 957 * ((4487950 * (unint64_t)v406) >> 32))) ^ 0x80)) ^ 0x80);
  v411 = v410 + 290925 - 957 * ((4487950 * (unint64_t)(v410 + 290925)) >> 32);
  v412 = 431
       * (*(unsigned __int8 *)(v27 + v408 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v410
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v410) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v413 = 431 * ((HIBYTE(v368) & 0xF0 | (v346 >> 28)) ^ 0x27) + 290925;
  v414 = 431
       * (*(unsigned __int8 *)(v27 + (v413 - 957 * ((4487950 * (unint64_t)v413) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v412 - 957 * ((4487950 * (unint64_t)v412) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v415 = (*(unsigned __int8 *)(v27 + (v414 - 957 * ((4487950 * (unint64_t)v414) >> 32))) << 28) ^ ((*(unsigned __int8 *)(v27 + v411) ^ 0x80) << 24);
  LOBYTE(v374) = v374 - ((2 * v374) & 0x8F) - 57;
  v392 -= 1671080722;
  v416 = v392 ^ ((*(unsigned __int8 *)(v27
                                     + (v388
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v388 + 290925)) >> 32))) ^ 0x80) << 8);
  v417 = v372 & 0xFFFFFF0F | (16 * (v374 & 0xF));
  v418 = 431 * ((v392 ^ v374) & 0xF0 ^ 0x20 | v381) + 168952;
  v419 = v416 ^ ((*(unsigned __int8 *)(v27 + v395) ^ 0x80) << 12);
  v420 = 431 * (((v416 >> 4) & 0xF0 | (v350 >> 8) & 0xF) ^ 0x40) + 168952;
  v421 = 431 * (((v419 >> 8) & 0xF0 | ((unsigned __int16)v346 >> 12)) ^ 0x51) + 168952;
  v422 = v419 ^ 0xC696F281 ^ v409;
  v423 = (v415 - ((2 * v415) & 0xCCCCCCCC) - 433340272) ^ v422;
  v424 = 431 * (((v422 >> 12) & 0xF0 | HIWORD(v346) & 0xF) ^ 0x3E) + 168952;
  v425 = 431 * ((HIWORD(v409) & 0xF0 | (v346 >> 20) & 0xF) ^ 0xF) + 168952;
  v426 = HIBYTE(v423) ^ 0xBC;
  v427 = (2 * v426) & 0x190;
  v426 += 774847944;
  v428 = HIBYTE(v346) & 0xF | (16 * (v426 & 0xF));
  v429 = 431
       * (((v346 >> 28) & 0xFFFFFF0F | (16
                                      * ((((v426 - v427) ^ 0x2E2F3DC8u) >> ((HIBYTE(v346) & 4 ^ 4) + (HIBYTE(v346) & 4))) & 0xF))) ^ 7)
       + 168952;
  v430 = *(unsigned __int8 *)(v27
                            + (431 * (v417 ^ 0x75)
                                           + 168952
                                           - 957 * ((4487950 * (unint64_t)(431 * (v417 ^ 0x75) + 168952)) >> 32)));
  v431 = v430 ^ (16 * (*(unsigned __int8 *)(v27 + v418 % 0x3BD) ^ 0x80));
  v432 = v431 ^ ((*(unsigned __int8 *)(v27 + (v420 - 957 * ((4487950 * (unint64_t)v420) >> 32))) ^ 0x80) << 8);
  v433 = v432 ^ ((*(unsigned __int8 *)(v27 + (v421 - 957 * ((4487950 * (unint64_t)v421) >> 32))) ^ 0x80) << 12);
  v434 = v433 ^ ((*(unsigned __int8 *)(v27 + (v424 - 957 * ((4487950 * (unint64_t)v424) >> 32))) ^ 0x80) << 16);
  v435 = v434 ^ ((*(unsigned __int8 *)(v27 + (v425 - 957 * ((4487950 * (unint64_t)v425) >> 32))) ^ 0x80) << 20);
  v436 = v435 ^ ((*(unsigned __int8 *)(v27
                                     + (431 * (v428 ^ 0x84)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v428 ^ 0x84u) + 168952)) >> 32))) ^ 0x80) << 24);
  v437 = 431
       * (((v436 ^ ((*(unsigned __int8 *)(v27 + (v429 - 957 * ((4487950 * (unint64_t)v429) >> 32))) << 28)
                  - 2115933524)) >> 28) ^ 8)
       + 404709;
  v438 = *(unsigned __int8 *)(v27 + (v437 - 957 * ((4487950 * (unint64_t)v437) >> 32))) ^ 0x80;
  v439 = *(unsigned __int8 *)(v27
                            + (431 * (HIBYTE(v436) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v436) & 0xF) + 404709)) >> 32))) ^ 0x80;
  v440 = (v439 << 9) & 0x19400;
  v441 = (v439 << 8) - 4666776;
  v442 = ((v441 & 0x100 ^ 0x1AF) + (v441 & 0x100)) * (((v435 >> 20) & 0xF) + 939);
  v443 = ((((((v441 - v440) ^ ((v438 << 12) - 4666776 - ((v438 << 13) & 0x118000)))
           + (*(unsigned __int8 *)(v27
                                 + (431 * (HIWORD(v434) & 0xF)
                                                + 404709
                                                - 957
                                                * ((4487950 * (unint64_t)(431 * (HIWORD(v434) & 0xF) + 404709)) >> 32))) ^ 0x80)) << 8) ^ ((*(unsigned __int8 *)(v27 + (v442 - 957 * ((4487950 * (unint64_t)v442) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * ((v432 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v432 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((unsigned __int16)v433 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v433 >> 12) + 404709)) >> 32))) ^ 0x80) << 12);
  v444 = 431 * ((v431 >> 4) ^ 8) + 404709;
  v445 = ((2 * v430) & 0x1A) + (v430 & 0xF ^ 0xD7FDE97D);
  v446 = ((*(unsigned __int8 *)(v27 + (v444 - 957 * ((4487950 * (unint64_t)v444) >> 32))) ^ 0x80) << (((v445 + 6) | (1 - v445)) & 4)) ^ (LODWORD(STACK[0x650]) - 624376415) ^ (v443 | *(unsigned __int8 *)(v27 + (431 * v445 + 1535775602) % 0x3BD) ^ 0x80);
  LODWORD(STACK[0x6BC]) = v446 - ((2 * v446) & 0xE1A08DEA);
  LODWORD(STACK[0x6DC]) = v336 ^ LODWORD(STACK[0x620]);
  v447 = 431 * (((unsigned __int16)LODWORD(STACK[0x6A0]) >> 12) ^ 3) + 279719;
  v448 = 431 * (STACK[0x6A0] & 0xF ^ 5) + 279719;
  v449 = 431 * ((LODWORD(STACK[0x6A0]) >> 4) ^ 7) + 279719;
  v450 = *(unsigned __int8 *)(v27 + (v448 - 957 * ((4487950 * (unint64_t)v448) >> 32)));
  v451 = LODWORD(STACK[0x548])
       - LODWORD(STACK[0x654])
       - ((2 * (LODWORD(STACK[0x548]) - LODWORD(STACK[0x654])) + 175646504) & 0x4BA23718)
       + 1796026144;
  v452 = (v450 ^ 0x80) - 1209978508 + (~(2 * v450) | 0xFFFFFF17) + 1;
  v453 = LODWORD(STACK[0x670]) ^ ((*(unsigned __int8 *)(v27
                                                      + (v447
                                                                     - 957 * ((4487950 * (unint64_t)v447) >> 32))) ^ 0x80) << 12);
  v454 = 431 * (HIBYTE(v451) & 0xF ^ 5) + 279719;
  v455 = 431 * ((v451 >> 20) & 0xF ^ 0xD) + 279719;
  v456 = (v453 ^ 0xD2E04578 | v452 ^ 0xB7E13174) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v449
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v449) >> 32))) ^ 0x80));
  v457 = 431 * (HIWORD(v451) & 0xF ^ 1) + 279719;
  v458 = ((*(unsigned __int8 *)(v27 + (v454 - 957 * ((4487950 * (unint64_t)v454) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v451 >> 28) ^ 2) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v451 >> 28) ^ 2) + 279719)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v457 - 957 * ((4487950 * (unint64_t)v457) >> 32))) ^ 0x80;
  v459 = 431 * (((unsigned __int16)v451 >> 12) ^ 1) + 279719;
  v460 = 431 * ((v451 >> 8) & 0xF ^ 0xB) + 279719;
  v461 = (v458 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (v455 - 957 * ((4487950 * (unint64_t)v455) >> 32))) ^ 0x80) << 12);
  v462 = 431 * ((v451 >> 4) ^ 8) + 279719;
  v463 = v462 - 957 * ((4487950 * (unint64_t)v462) >> 32);
  v464 = ((v452 & 0xF ^ 7) + (v452 & 0xC ^ 0x78E2F6A8) - ((v452 & 0xF ^ 7) & 0xC)) ^ 0x70C3D9FE;
  v465 = v451 & 0xF;
  v466 = v461 | *(unsigned __int8 *)(v27 + (v460 - 957 * ((4487950 * (unint64_t)v460) >> 32))) ^ 0x80;
  v467 = (v466 << 8) + 1053002014 - ((v466 << 9) & 0x7D871200);
  v468 = *(unsigned __int8 *)(v27
                            + (431 * (v465 ^ 0xC)
                                           + 279719
                                           - 957 * ((4487950 * (unint64_t)(431 * (v465 ^ 0xCu) + 279719)) >> 32))) ^ 0x80;
  v469 = v468 + 1312817134 - ((2 * v468) & 0xDDDDDDDD);
  v470 = v467 ^ ((*(unsigned __int8 *)(v27 + (v459 - 957 * ((4487950 * (unint64_t)v459) >> 32))) ^ 0x80) << 12);
  v471 = (v470 ^ 0x3EC3891E | v469 ^ 0x4E3FFFEE) ^ (16 * (*(unsigned __int8 *)(v27 + v463) ^ 0x80));
  v472 = (((2 * v464) | 0xE6AE7F0C) - v464 + 212385914) ^ 0xFB7610D7;
  v473 = 431
       * ((((16 * (v469 & 0xF)) ^ 0xE0 | v472) - 103822245 - ((2 * ((16 * (v469 & 0xF)) ^ 0xE0 | v472)) & 0x739F98B6)) ^ 0xF9CFCC5B);
  v474 = STACK[0x6F0];
  v475 = 431 * (*(unsigned __int8 *)(v27 + (v473 + 290925) % 0x3BD) ^ LODWORD(STACK[0x6F0]) ^ 0x80);
  v476 = v475 + 290925;
  v477 = 431 * (*(unsigned __int8 *)(v27 + v473 % 0x3BD) ^ (*(unsigned __int8 *)(v27 + v475 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v478 = 431
       * (((v471 & 0xF0 | (v456 >> 4))
         - 226236804
         - 2 * ((v471 & 0x70 | (v456 >> 4) & 0x7F) ^ (v456 >> 4) & 3)) ^ 0xF283E67C);
  v479 = 431
       * (*(unsigned __int8 *)(v27 + (v478 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v477 - 957 * ((4487950 * (unint64_t)v477) >> 32))) ^ 0x80)) ^ 0x80);
  v480 = v479 + 290925 - 957 * ((4487950 * (unint64_t)(v479 + 290925)) >> 32);
  v481 = *(unsigned __int8 *)(v27 + v478 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v479
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v479) >> 32))) >> 4);
  v482 = (v471 >> 4) & 0xF0 ^ ((v465 ^ 0xC) + (v465 ^ 3)) & (v456 >> 8);
  v483 = 16 * (*(unsigned __int8 *)(v27 + v480) ^ 0x80) - ((32 * *(unsigned __int8 *)(v27 + v480)) & 0x960);
  LOBYTE(v465) = *(_BYTE *)(v27 + v476 % 0x3BD);
  v482 *= 431;
  v484 = v482 - 957 * ((4487950 * (unint64_t)v482) >> 32);
  v485 = 431
       * (*(unsigned __int8 *)(v27 + (v482 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v481 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v481 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v486 = v485 + 290925 - 957 * ((4487950 * (unint64_t)(v485 + 290925)) >> 32);
  v487 = 431
       * (*(unsigned __int8 *)(v27 + v484) ^ (*(unsigned __int8 *)(v27
                                                                 + (v485
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v485) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v488 = v487 - 957 * ((4487950 * (unint64_t)v487) >> 32);
  v489 = (v470 >> 8) & 0xF0 | ((unsigned __int16)v453 >> 12);
  v490 = (v489 ^ 0x84) + 987536970 - ((2 * v489) & 0x94);
  v483 -= 689429325;
  v491 = v483 ^ ((*(unsigned __int8 *)(v27 + v486) ^ 0x80) << 8);
  LOBYTE(v486) = v483 ^ ((v465 ^ 0x80) - ((2 * v465) & 0x20) - 112);
  v492 = 431 * (v490 ^ 0x3ADC9E4A);
  v493 = 431
       * (*(unsigned __int8 *)(v27 + (v492 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v27 + v488) ^ 0x80)) ^ 0x80);
  v494 = 431
       * (*(unsigned __int8 *)(v27 + v492 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v493
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v493) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v495 = ((v470 >> 12) & 0xF0 | HIWORD(v453) & 0xF) ^ 0x30;
  v496 = 431 * ((v495 - 179941999 - 2 * (v495 & 0x93 ^ HIWORD(v453) & 2)) ^ 0xF5464D91);
  v497 = 431
       * (*(unsigned __int8 *)(v27 + (v496 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v494 - 957 * ((4487950 * (unint64_t)v494) >> 32))) ^ 0x80)) ^ 0x80);
  v498 = v496 % 0x3BD;
  v499 = ((*(unsigned __int8 *)(v27
                              + (v497
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v497 + 290925)) >> 32))) ^ 0x80) << 16) ^ ((*(unsigned __int8 *)(v27 + (v493 + 290925 - 957 * ((4487950 * (unint64_t)(v493 + 290925)) >> 32))) ^ 0x80) << 12);
  v500 = (HIWORD(v467) & 0xF0 | (LODWORD(STACK[0x670]) >> 20) & 0xF) ^ 0xCE;
  v501 = 431
       * (*(unsigned __int8 *)(v27 + v498) ^ (*(unsigned __int8 *)(v27
                                                                 + (v497
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v497) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v502 = (v500 - 1893577692 - ((2 * v500) & 0x48)) ^ 0x8F224C24;
  v503 = 431
       * (*(unsigned __int8 *)(v27 + (431 * v502 + 290925) % 0x3BD) ^ (16
                                                                     * (*(unsigned __int8 *)(v27
                                                                                           + (v501 - 957 * ((4487950 * (unint64_t)v501) >> 32))) ^ 0x80)) ^ 0x80);
  v504 = v503 + 290925 - 957 * ((4487950 * (unint64_t)(v503 + 290925)) >> 32);
  v505 = ((v467 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x670])) & 0xF) ^ 0xE2;
  v506 = 431
       * (*(unsigned __int8 *)(v27 + ((431 * v502 - 881110110 - ((862 * v502) & 0x96F6A744)) ^ 0xCB7B53A2) % 0x3BD) ^ (*(unsigned __int8 *)(v27 + (v503 - 957 * ((4487950 * (unint64_t)v503) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v507 = 431 * ((v505 - 1585251180 - 2 * (v505 & 0x9D ^ HIBYTE(LODWORD(STACK[0x670])) & 9)) ^ 0xA182FC94);
  v508 = v507 % 0x3BD;
  v509 = 431
       * (*(unsigned __int8 *)(v27 + (v507 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v506 - 957 * ((4487950 * (unint64_t)v506) >> 32))) ^ 0x80)) ^ 0x80);
  v510 = v509 + 290925 - 957 * ((4487950 * (unint64_t)(v509 + 290925)) >> 32);
  v511 = 431
       * (*(unsigned __int8 *)(v27 + v508) ^ (*(unsigned __int8 *)(v27
                                                                 + (v509
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v509) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v512 = 431 * ((HIBYTE(v467) & 0xF0 | (LODWORD(STACK[0x670]) >> 28)) ^ 0x3D) + 290925;
  v513 = 431
       * (*(unsigned __int8 *)(v27 + (v512 - 957 * ((4487950 * (unint64_t)v512) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v511 - 957 * ((4487950 * (unint64_t)v511) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v514 = *(unsigned __int8 *)(v27 + (v513 - 957 * ((4487950 * (unint64_t)v513) >> 32)));
  v515 = 431 * ((16 * (v465 & 0xF)) | v472) + 168952;
  v516 = v486 & 0xF0 | (v456 >> 4);
  v517 = (v491 >> 4) & 0xF0 | (v456 >> 8) & 0xF;
  v518 = 431 * (v516 ^ 0x20) + 168952 - 957 * ((4487950 * (unint64_t)(431 * (v516 ^ 0x20u) + 168952)) >> 32);
  v519 = v491 ^ 0x35C8D84B ^ v499;
  v520 = v519 ^ ((*(unsigned __int8 *)(v27 + v504) ^ 0x80) << 20);
  v521 = 431 * (((v519 >> 8) & 0xF0 | ((unsigned __int16)v453 >> 12)) ^ 0xF4) + 168952;
  v522 = v521 - 957 * ((4487950 * (unint64_t)v521) >> 32);
  v523 = v499 >> 12;
  v524 = 431 * ((v499 >> 12) & 0xF0 | HIWORD(v453) & 0xF) + 168952;
  v525 = v520 ^ ((*(unsigned __int8 *)(v27 + v510) ^ 0x80) << 24);
  v526 = 431 * ((HIWORD(v520) & 0xF0 | (LODWORD(STACK[0x670]) >> 20) & 0xF) ^ 0x2E) + 168952;
  v527 = ((v514 << 28) - ((v514 & 1) << 29) - 1795814896) ^ v525;
  v528 = 431 * (((v525 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x670])) & 0xF) ^ 0x32) + 168952;
  v529 = 431 * ((HIBYTE(v527) & 0xF0 | (LODWORD(STACK[0x670]) >> 28)) ^ 0x7D) + 168952;
  v530 = *(unsigned __int8 *)(v27 + v515 % 0x3BD);
  v531 = *(unsigned __int8 *)(v27 + (v529 - 957 * ((4487950 * (unint64_t)v529) >> 32)));
  v532 = v530 ^ (16 * (*(unsigned __int8 *)(v27 + v518) ^ 0x80));
  v533 = v532 ^ ((*(unsigned __int8 *)(v27
                                     + (431 * (v517 ^ 0x40)
                                                    + 168952
                                                    - 957
                                                    * ((4487950 * (unint64_t)(431 * (v517 ^ 0x40u) + 168952)) >> 32))) ^ 0x80) << 8);
  v534 = v533 ^ ((*(unsigned __int8 *)(v27 + v522) ^ 0x80) << 12);
  v535 = v534 ^ ((*(unsigned __int8 *)(v27 + (v524 - 957 * ((4487950 * (unint64_t)v524) >> 32))) ^ 0x80) << 16);
  v536 = v535 ^ ((*(unsigned __int8 *)(v27 + (v526 - 957 * ((4487950 * (unint64_t)v526) >> 32))) ^ 0x80) << 20);
  v537 = v536 ^ ((*(unsigned __int8 *)(v27 + (v528 - 957 * ((4487950 * (unint64_t)v528) >> 32))) ^ 0x80) << 24);
  v538 = 431 * (((((v531 << 28) - ((v531 & 3) << 29) + 1040048600) ^ v537) >> 28) ^ 3) + 404709;
  v539 = HIBYTE(v537) & 0xF;
  LOBYTE(v510) = v539 ^ 0xBF;
  v540 = (v539 ^ 0xF77EF5BF) + 2 * v539;
  v541 = (*(unsigned __int8 *)(v27
                             + (431 * (HIWORD(v535) & 0xF)
                                            + 404709
                                            - 957
                                            * ((4487950 * (unint64_t)(431 * (HIWORD(v535) & 0xF) + 404709)) >> 32))) ^ 0x80 | ((*(unsigned __int8 *)(v27 + (431 * v540 + 1363570772) % 0x3BD) ^ ((*(unsigned __int8 *)(v27 + (v538 - 957 * ((4487950 * (unint64_t)v538) >> 32))) ^ 0x80) << (v510 & 1 ^ 0x45 ^ (19 - v540) & 0x41)) ^ 0x80) << 8)) ^ (16 * (*(unsigned __int8 *)(v27 + (431 * ((v536 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v536 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80));
  v542 = 431 * ((v532 >> 4) ^ 8) + 404709;
  LODWORD(STACK[0x6A0]) ^= LODWORD(STACK[0x698]) + 227762320;
  v543 = (((*(unsigned __int8 *)(v27
                               + (431 * ((v533 >> 8) & 0xF)
                                              + 404709
                                              - 957
                                              * ((4487950 * (unint64_t)(431 * ((v533 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) | (v541 << 16)) ^ ((*(unsigned __int8 *)(v27 + (431 * ((unsigned __int16)v534 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v534 >> 12) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (v530 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v530 & 0xFu) + 404709)) >> 32))) ^ 0x80;
  v544 = LODWORD(STACK[0x668])
       + LODWORD(STACK[0x54C])
       - ((2 * (LODWORD(STACK[0x668]) + LODWORD(STACK[0x54C])) + 233645558) & 0xF023C58);
  LODWORD(STACK[0x698]) = LODWORD(STACK[0x694]) ^ (16
                                                 * (*(unsigned __int8 *)(v27
                                                                       + (v542
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v542) >> 32))) ^ 0x80)) ^ v543;
  v545 = v544 - 696798937;
  v546 = LODWORD(STACK[0x524]) + LODWORD(STACK[0x6C8]) - 723935407 + (LODWORD(STACK[0x660]) ^ 0x55000363);
  v547 = v546 - 19012703 - ((2 * v546) & 0xFDBBC742);
  v548 = 431 * (((v544 - 696798937) >> 24) & 0xF ^ 7) + 279719;
  v549 = *(unsigned __int8 *)(v27
                            + (431 * ((v544 - 696798937) >> 28)
                                           + 279719
                                           - 957
                                           * ((4487950
                                             * (unint64_t)(431 * ((v544 - 696798937) >> 28) + 279719)) >> 32))) ^ 0x80;
  v550 = *(unsigned __int8 *)(v27 + (v548 - 957 * ((4487950 * (unint64_t)v548) >> 32)));
  v551 = 431 * ((v545 >> 20) & 0xF ^ 8) + 279719;
  v552 = 431 * ((v541 & 0x289) + (HIWORD(v545) & 0xF ^ 1) + (v541 & 0x289 ^ 0x289));
  v553 = 16 * v549 - ((32 * v549) & 0x12C0) - 33674904;
  HIDWORD(v554) = ((v550 ^ 0x80) - ((2 * v550) & 0xD0) + 360) ^ v553;
  LODWORD(v554) = v553 ^ 0xFDFE2800;
  v555 = (v554 >> 10) - ((2 * (v554 >> 10)) & 0x5DB1F2D8) - 1361512084;
  HIDWORD(v554) = v555 ^ 0x20;
  LODWORD(v554) = v555 ^ 0xAED8C000 | ((*(unsigned __int8 *)(v27
                                                           + (v552
                                                                          - 957
                                                                          * ((4487950 * (unint64_t)v552) >> 32))) ^ 0x80) << 14);
  v556 = 431 * (((unsigned __int16)v545 >> 12) ^ 1) + 279719;
  v557 = 431 * ((v545 >> 8) & 0xF ^ 0xE) + 279719;
  v558 = ((v554 >> 14) << 8) ^ ((*(unsigned __int8 *)(v27
                                                                  + (v551
                                                                                 - 957
                                                                                 * ((4487950 * (unint64_t)v551) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v557 - 957 * ((4487950 * (unint64_t)v557) >> 32))) ^ 0x80;
  v559 = 431 * ((v545 >> 4) ^ 2) + 279719;
  v560 = (v558 << 8) - 1052862383 - ((v558 << 9) & 0x827D3000);
  v561 = *(unsigned __int8 *)(v27
                            + (431 * (v545 & 0xF ^ 0xC)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v545 & 0xF ^ 0xC) + 279719)) >> 32)));
  v562 = (v561 ^ 0x80) + 234831441 - ((2 * v561) & 0xA2);
  v563 = v560 ^ ((*(unsigned __int8 *)(v27 + (v556 - 957 * ((4487950 * (unint64_t)v556) >> 32))) ^ 0x80) << 12);
  v564 = (v547 ^ 0xFEDDE3A1) >> (v523 & 0x10) >> (v523 & 0x10 ^ 0x18);
  LOBYTE(v564) = v564 - ((2 * v564) & 0xC4) + 98;
  v565 = 431 * ((v564 >> 4) ^ 6) + 279719;
  v566 = 431 * (v564 & 0xF ^ 2) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v564 & 0xF ^ 2) + 279719)) >> 32);
  v567 = 431 * ((v547 >> 20) & 0xF ^ 0xD) + 279719;
  v568 = v567 - 957 * ((4487950 * (unint64_t)v567) >> 32);
  v569 = (v563 ^ 0xC13E9851 | v562 ^ 0xDFF3E51) ^ (16
                                                 * (*(unsigned __int8 *)(v27
                                                                       + (v559
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v559) >> 32))) ^ 0x80));
  v570 = 431 * (HIWORD(v547) & 0xF ^ 0xD) + 279719;
  v571 = v570 - 957 * ((4487950 * (unint64_t)v570) >> 32);
  v572 = v571 - 553648522 - ((2 * v571) & 0x4EC);
  v573 = (v547 ^ 0xFEDDE3A1) >> ((v572 & 0x30 ^ 0x30 | v572 & 0x30)
                               + (v572 & 0xD0 ^ LODWORD(STACK[0x470]) | v572 & 0xD0 ^ 0x50)
                               + 8);
  LOBYTE(v573) = v573 - ((2 * v573) & 0x2C) - 106;
  v574 = 431 * ((v573 >> 4) ^ 9) + 279719;
  v575 = ((((*(unsigned __int8 *)(v27 + v566) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27
                                                                                   + (v565
                                                                                                  - 957 * ((4487950 * (unint64_t)v565) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v572 ^ 0xDEFFFE76)) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + v568) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (v573 & 0xF ^ 6) + 279719 - 957 * ((4487950 * (unint64_t)(431 * (v573 & 0xF ^ 6) + 279719)) >> 32))) ^ 0x80;
  v576 = (v575 << 8) + 825147545 - ((v575 << 9) & 0x625D8000);
  v577 = 431 * ((v547 >> 4) ^ 0xA) + 279719;
  v578 = *(unsigned __int8 *)(v27
                            + (431 * (v547 & 0xF ^ 1)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v547 & 0xF ^ 1) + 279719)) >> 32))) ^ 0x80;
  v579 = v578 + 938935550 - ((2 * v578) & 0x1FC);
  v580 = v576 ^ ((*(unsigned __int8 *)(v27 + (v574 - 957 * ((4487950 * (unint64_t)v574) >> 32))) ^ 0x80) << 12);
  v581 = (v580 ^ 0x312EC099 | v579 ^ 0x37F704FE) ^ (16
                                                  * (*(unsigned __int8 *)(v27
                                                                        + (v577
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v577) >> 32))) ^ 0x80));
  v582 = (16 * (v579 & 0xF)) ^ 0xE0;
  v583 = (610790069 - (v562 & 0xF ^ 0x86372CD8 | 0x2467EAB5) + (v562 & 0xF ^ 0x86372CD8 | 0xDB98154A)) ^ 0x5DAF3993;
  v584 = 431 * (((v582 | v583) - 2108128271 + (~(2 * (v582 | v583)) | 0xFB4EF81D) + 1) ^ 0x825883F1);
  v585 = 431 * (*(unsigned __int8 *)(v27 + (v584 + 290925) % 0x3BD) ^ v474 ^ 0x80);
  v586 = (v585 + 290925) % 0x3BD;
  v587 = ((((v569 >> 4) ^ 0xB4D2E697) & 0x88269350) - ((2 * ((v569 >> 4) ^ 0xB4D2E697)) & 0x4122A0) - 987178636) ^ ((v569 >> 4) ^ 0xB4D2E697) & 0x8826935F;
  v588 = 431 * (*(unsigned __int8 *)(v27 + v584 % 0x3BD) ^ (*(unsigned __int8 *)(v27 + v585 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v589 = v588 - 957 * ((4487950 * (unint64_t)v588) >> 32);
  v590 = ((v587 & 0xCDA38C8D ^ 0x9A918489) + (v587 ^ 0x452A5B64) - ((v587 ^ 0x452A5B64) & 0x89A38C8D)) ^ 0x5FB10E9A;
  v591 = 431 * (((v590 | v581 & 0xF0) - 1273681720 - ((2 * (v590 | v581 & 0xF0)) & 0x682A5190)) ^ 0xB41528C8);
  v592 = 431
       * (*(unsigned __int8 *)(v27 + (v591 + 289968) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v27 + v589) ^ 0x80)) ^ 0x80);
  v593 = v592 + 290925 - 957 * ((4487950 * (unint64_t)(v592 + 290925)) >> 32);
  v594 = v592 - 957 * ((4487950 * (unint64_t)v592) >> 32);
  v595 = 431
       * (*(unsigned __int8 *)(v27 + v591 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + ((v594 + 1819991312 - ((2 * v594) & 0x220)) ^ 0x6C7ADD10u)) >> 4) ^ 0x88)
       + 290925;
  v596 = (v581 >> 4) & 0xF0 | (v569 >> 8) & 0xF;
  v597 = 431 * ((v596 - 1381155903 - 2 * (v596 & 0xFFFFFFC3 ^ (v569 >> 8) & 2)) ^ 0xADAD3BC1);
  v598 = 431
       * (*(unsigned __int8 *)(v27 + (v597 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v595 - 957 * ((4487950 * (unint64_t)v595) >> 32))) ^ 0x80)) ^ 0x80);
  v599 = v598 + 290925 - 957 * ((4487950 * (unint64_t)(v598 + 290925)) >> 32);
  v600 = 431
       * (*(unsigned __int8 *)(v27 + v597 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v598
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v598) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v601 = v600 - 957 * ((4487950 * (unint64_t)v600) >> 32);
  v602 = *(unsigned __int8 *)(v27 + v586);
  v603 = v602 ^ (16 * (*(unsigned __int8 *)(v27 + v593) ^ 0x80)) ^ ((*(unsigned __int8 *)(v27 + v599) ^ 0x80) << 8);
  v604 = 431
       * ((-1406599422 - ((v563 >> 11) & 4) + (((v580 >> 8) & 0xF0 | ((unsigned __int16)v563 >> 12)) ^ 0xC9)) ^ 0xAC28FF02);
  v605 = 431
       * (*(unsigned __int8 *)(v27 + (v604 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v27 + v601) ^ 0x80)) ^ 0x80);
  v606 = v605 + 290925 - 957 * ((4487950 * (unint64_t)(v605 + 290925)) >> 32);
  v607 = ((v580 >> 12) & 0xF0 | HIWORD(v563) & 0xF) ^ 0xEE;
  v608 = 431
       * (*(unsigned __int8 *)(v27 + v604 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v605
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v605) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v609 = 431 * ((v607 + 1412763228 - 2 * (v607 & 0x5D ^ HIWORD(v563) & 1)) ^ 0x54350E5C);
  v610 = 431
       * (*(unsigned __int8 *)(v27 + (v609 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v608 - 957 * ((4487950 * (unint64_t)v608) >> 32))) ^ 0x80)) ^ 0x80);
  v611 = v610 + 290925 - 957 * ((4487950 * (unint64_t)(v610 + 290925)) >> 32);
  v612 = 431
       * (*(unsigned __int8 *)(v27 + v609 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v610
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v610) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v613 = (HIWORD(v576) & 0xF0 | (v560 >> 20) & 0xF) ^ 0x23;
  v614 = 431 * ((v613 - 129111550 - ((2 * v613) & 4)) ^ 0xF84DEA02);
  v615 = 431
       * (*(unsigned __int8 *)(v27 + (v614 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v612 - 957 * ((4487950 * (unint64_t)v612) >> 32))) ^ 0x80)) ^ 0x80);
  v616 = *(unsigned __int8 *)(v27 + v614 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v615
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v615) >> 32))) >> 4);
  v617 = ((v576 >> 20) & 0xF0 | HIBYTE(v560) & 0xF) ^ 0x11;
  v618 = ((*(unsigned __int8 *)(v27
                              + (v615
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v615 + 290925)) >> 32))) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(v27 + v611) ^ 0x80) << 16);
  v619 = 431 * ((v617 - 1293135554 - ((2 * v617) & 0x7C)) ^ 0xB2EC513E);
  v620 = 431
       * (*(unsigned __int8 *)(v27 + (v619 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v616 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v616 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v621 = 431
       * (*(unsigned __int8 *)(v27 + v619 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v620
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v620) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v622 = 431 * ((HIBYTE(v576) & 0xF0 | (v560 >> 28)) ^ 0x3C) + 290925;
  v623 = 431
       * (*(unsigned __int8 *)(v27 + (v622 - 957 * ((4487950 * (unint64_t)v622) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v621 - 957 * ((4487950 * (unint64_t)v621) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v603 ^= 0x80u;
  v624 = v603 ^ ((*(unsigned __int8 *)(v27 + v606) ^ 0x80) << 12);
  v625 = (v618 - ((2 * v618) & 0x11E20000) - 386803316) ^ v624;
  v626 = v625 ^ ((*(unsigned __int8 *)(v27
                                     + (v620
                                                    + 290925
                                                    - 957 * ((4487950 * (unint64_t)(v620 + 290925)) >> 32))) ^ 0x80) << 24) ^ (*(unsigned __int8 *)(v27 + (v623 - 957 * ((4487950 * (unint64_t)v623) >> 32))) << 28);
  v627 = 431 * ((16 * (v602 & 0xF)) | v583) + 168952;
  LOBYTE(v602) = (v626 >> 4) ^ 0x98;
  v628 = *(unsigned __int8 *)(v27 + v627 % 0x3BD) ^ (16
                                                   * (*(unsigned __int8 *)(v27
                                                                         + (431 * (v590 | v603 & 0xF0) + 168952) % 0x3BD) ^ 0x80)) ^ ((*(unsigned __int8 *)(v27 + (431 * (v602 & 0x30 | (v569 >> 8) & 7 | (v569 >> 8) & 8 | v602 & 0xC0) + 167995 - 957 * ((4487950 * (unint64_t)(431 * (v602 & 0x30 | (v569 >> 8) & 7 | (v569 >> 8) & 8 | v602 & 0xC0) + 167995)) >> 32))) ^ 0x80) << 8);
  v629 = 431 * (((v624 >> 8) & 0xF0 | ((unsigned __int16)v563 >> 12)) ^ 9) + 168952;
  v630 = 431 * (((v625 >> 12) & 0xF0 | HIWORD(v563) & 0xF) ^ 0x1E) + 168952;
  v631 = v630 - 957 * ((4487950 * (unint64_t)v630) >> 32);
  v632 = v631 + 1993745503 + (~(2 * v631) | 0xFFFFFF41) + 1;
  v633 = v628 ^ ((*(unsigned __int8 *)(v27 + (v629 - 957 * ((4487950 * (unint64_t)v629) >> 32))) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(v27 + (v632 ^ 0x76D6245F)) ^ 0x80) << 16);
  v634 = (HIWORD(v626) ^ 0xE8F1) >> ((115 * (v632 & 0xEC ^ 0x4C | v632 & 0xEC ^ 0xA0)) & 0xFC);
  v635 = v634 - ((2 * v634) & 0x60B2) - 1360056231;
  v636 = 431 * (((v560 >> 20) & 0xF | (16 * (v635 & 0xF))) ^ 0x93) + 168952;
  v637 = 431 * ((v635 & 0xF0 | HIBYTE(v560) & 0xF) ^ 0x51) + 168952;
  v638 = 431 * (((v635 >> 4) & 0xF0 | (v560 >> 28)) ^ 0xC) + 168952;
  v639 = v638 - 957 * ((4487950 * (unint64_t)v638) >> 32);
  v640 = v633 ^ ((*(unsigned __int8 *)(v27 + (v636 - 957 * ((4487950 * (unint64_t)v636) >> 32))) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(v27 + (v637 - 957 * ((4487950 * (unint64_t)v637) >> 32))) ^ 0x80) << 24) ^ ((unint64_t)(*(unsigned __int8 *)(v27 + ((v639 + 1404659854 - ((2 * v639) & 0x11C)) ^ 0x53B9688Eu)) ^ 0x80u) << (((v639 - 114 - ((2 * v639) & 0x1C)) & 0x55 ^ 0xAE) + ((v639 - 114 - ((2 * v639) & 0x1C)) & 0x55 ^ 0xFBu) + 115));
  v641 = 431 * ((BYTE2(v640) ^ 0xF0) + (BYTE2(v640) | 0xF) + 1) + 404709;
  v642 = ((*(unsigned __int8 *)(v27
                              + (431 * (HIBYTE(v640) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v640) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * (v640 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v640 >> 28) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v641 - 957 * ((4487950 * (unint64_t)v641) >> 32))) ^ 0x80;
  v643 = ((v640 >> 8) & 0xF ^ 0x7FF28EF5) + ((v640 >> 7) & 0xA);
  v644 = (v642 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (431 * ((v640 >> 20) & 0xF)
                                                           + 404709
                                                           - 957
                                                           * ((4487950
                                                             * (unint64_t)(431 * ((v640 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12);
  v645 = 431
       * (((unsigned __int16)v640 >> 12) + (((v644 & 0x38D04B00 ^ 0x38D04BFF) + (v644 & 0x38D04B00)) & 0x412003AB));
  LOBYTE(v640) = v640 ^ 0x80;
  LODWORD(STACK[0x680]) ^= (16
                          * (*(unsigned __int8 *)(v27
                                                + (431 * (v640 >> 4)
                                                               + 404709
                                                               - 957
                                                               * ((4487950
                                                                 * (unint64_t)(431
                                                                                    * (v640 >> 4)
                                                                                    + 404709)) >> 32))) ^ 0x80)) ^ (((v644 | *(unsigned __int8 *)(v27 + ((((v643 + 182) & 0x135) + ((2146601801 - v643) & 0xBEA60015) + 1096417263) | 0x1AB) * (v643 - 2146601802) % 0x3BD) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + v645 % 0x3BD) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (v640 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v640 & 0xF) + 404709)) >> 32))) ^ 0x80);
  LODWORD(STACK[0x694]) = LODWORD(STACK[0x688]) ^ v545;
  LOBYTE(v545) = *(_BYTE *)(v27 + (LODWORD(STACK[0x510]) + 290925) % 0x3BDu);
  v646 = 431
       * (*(unsigned __int8 *)(v27 + LODWORD(STACK[0x50C]) % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                                          + (LODWORD(STACK[0x508]) - 957 * ((4487950 * (unint64_t)LODWORD(STACK[0x508])) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v647 = (STACK[0x514] & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x584]) >> 12)) ^ 0x81;
  v648 = 431 * ((v647 - 1111257537 - 2 * (v647 & 0x3F)) ^ 0xBDC38E3F);
  v649 = 431
       * (*(unsigned __int8 *)(v27 + (v648 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v646 - 957 * ((4487950 * (unint64_t)v646) >> 32))) ^ 0x80)) ^ 0x80);
  v650 = *(unsigned __int8 *)(v27 + v648 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v649
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v649) >> 32))) >> 4);
  v651 = *(unsigned __int8 *)(v27
                            + (v649 + 290925 - 957 * ((4487950 * (unint64_t)(v649 + 290925)) >> 32))) ^ 0x80;
  v652 = ((LODWORD(STACK[0x518]) >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x584])) & 0xF) ^ 0xAD;
  v653 = 431 * ((v652 + 698326763 - ((2 * v652) & 0x1D6)) ^ 0x299F9EEB);
  v654 = 431
       * (*(unsigned __int8 *)(v27 + (v653 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v650 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v650 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v655 = *(unsigned __int8 *)(v27
                            + (v654 + 290925 - 957 * ((4487950 * (unint64_t)(v654 + 290925)) >> 32))) ^ 0x80;
  v656 = *(unsigned __int8 *)(v27 + v653 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v654
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v654) >> 32))) >> 4);
  v657 = HIWORD(LODWORD(STACK[0x518])) & 0xF0 | (LODWORD(STACK[0x5A0]) >> 20) & 0xF;
  v658 = 431 * (((v657 ^ 0x25) + 507215570 - ((2 * v657) & 0x1A4)) ^ 0x1E3B7ED2);
  v659 = 431
       * (*(unsigned __int8 *)(v27 + (v658 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v656 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v656 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v660 = v659 + 290925 - 957 * ((4487950 * (unint64_t)(v659 + 290925)) >> 32);
  v661 = 431
       * (*(unsigned __int8 *)(v27 + v658 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v659
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v659) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v662 = ((LODWORD(STACK[0x518]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5A0])) & 0xF) ^ 0xAC;
  v663 = 431 * ((v662 + 1205573563 - ((2 * v662) & 0x77777777)) ^ 0x47DB97BB);
  v664 = 431
       * (*(unsigned __int8 *)(v27 + (v663 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v661 - 957 * ((4487950 * (unint64_t)v661) >> 32))) ^ 0x80)) ^ 0x80);
  v665 = *(unsigned __int8 *)(v27
                            + (v664 + 290925 - 957 * ((4487950 * (unint64_t)(v664 + 290925)) >> 32)));
  v666 = ((v665 ^ 0x80) << 24) - 31189649 - (v665 >> 1 << 26);
  v667 = 431
       * (*(unsigned __int8 *)(v27 + v663 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v664
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v664) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v668 = ~LODWORD(STACK[0x5A0]);
  v669 = 431 * ((HIBYTE(LODWORD(STACK[0x518])) & 0xF0 | (v668 >> 28)) ^ 0xF0) + 290925;
  v670 = 431
       * (*(unsigned __int8 *)(v27 + (v669 - 957 * ((4487950 * (unint64_t)v669) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v667 - 957 * ((4487950 * (unint64_t)v667) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v671 = *(unsigned __int8 *)(v27 + (v670 - 957 * ((4487950 * (unint64_t)v670) >> 32)));
  v672 = (v651 << 12) - ((v651 << 13) & 0x15C000) + 2124082879;
  v673 = v672 ^ LODWORD(STACK[0x528]);
  v674 = (v655 << 16) - ((v655 << 17) & 0xDDDDDDDD) + 1643046956;
  v675 = ((*(unsigned __int8 *)(v27 + v660) ^ 0x80) << 20)
       - ((*(unsigned __int8 *)(v27 + v660) << 21) & 0x3200000)
       - 1851792843;
  v676 = v674 ^ v672;
  v677 = v675 ^ v674;
  v678 = ((v671 << 28) - 31189649 - (v671 << 29)) ^ v666;
  v679 = v666 ^ v675;
  LOBYTE(v545) = (v545 ^ 0x80) - ((2 * v545) & 0x38) + 28;
  v680 = 431
       * (((LODWORD(STACK[0x534]) ^ v545) & 0xF0 | (LODWORD(STACK[0x52C]) >> 4)) ^ 0xD0)
       + 168952;
  v681 = 431 * (((v673 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x584]) >> 12)) ^ 0x91) + 168952;
  v682 = v681 - 957 * ((4487950 * (unint64_t)v681) >> 32);
  v683 = v682 + 1896591189 - ((2 * v682) & 0x6AA);
  v684 = (((v683 ^ 0xBBBBBBBB) + (v683 | 0xEEEEEEEE) + (v683 & 0xEE ^ 0x44444444) + 1) & 0xF4 ^ 0xEB) & (HIWORD(LODWORD(STACK[0x584])) ^ 0x5D) ^ (v676 >> 12) & 0xF0;
  v685 = ((2 * ((v684 ^ 0x40) + 392)) & 0x7F5E7CEE) + (((v684 ^ 0x40) + 392) ^ 0x7FAF3E77);
  v686 = 431 * ((HIWORD(v677) & 0xF0 | (LODWORD(STACK[0x5A0]) >> 20) & 0xF) ^ 0x75) + 168952;
  v687 = 431 * (((v679 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x5A0])) & 0xF) ^ 0xFC) + 168952;
  v688 = 431 * (HIBYTE(v678) & 0xF0 | (v668 >> 28)) + 168952;
  v689 = *(unsigned __int8 *)(v27 + (431 * ((16 * (v545 & 0xF)) ^ 0xC0 | LODWORD(STACK[0x5B0])) + 168952) % 0x3BD);
  v690 = ((*(unsigned __int8 *)(v27 + (v687 - 957 * ((4487950 * (unint64_t)v687) >> 32))) ^ 0x80) << 24) ^ (*(unsigned __int8 *)(v27 + (v688 - 957 * ((4487950 * (unint64_t)v688) >> 32))) << 28);
  v691 = v689 ^ (16
               * (*(unsigned __int8 *)(v27 + (v680 - 957 * ((4487950 * (unint64_t)v680) >> 32))) ^ 0x80));
  v692 = v691 ^ ((*(unsigned __int8 *)(v27 + (431 * (LODWORD(STACK[0x538]) ^ 0xE0CAD2C8) + 168952) % 0x3BD) ^ 0x80) << 8);
  v693 = v692 ^ ((*(unsigned __int8 *)(v27 + (v683 ^ 0x710BAF55u)) ^ 0x80) << 12);
  v694 = v693 ^ ((*(unsigned __int8 *)(v27
                                     + (((v685 + 393) & 0x1AF) + (((v684 ^ 0xFFFFFFBF) + 120) & 0x1AF))
                                     * (v685 - 2142191223)
                                     % 0x3BD) ^ 0x80) << 16);
  v695 = v694 ^ ((*(unsigned __int8 *)(v27 + (v686 - 957 * ((4487950 * (unint64_t)v686) >> 32))) ^ 0x80) << 20);
  v696 = v690 ^ v695;
  v697 = *(unsigned __int8 *)(v27
                            + (431 * (HIBYTE(v696) & 0xF)
                                           + 404709
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (HIBYTE(v696) & 0xF) + 404709)) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (431 * (v696 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v696 >> 28) + 404709)) >> 32))) ^ 0x80));
  v698 = (v697 & 0x1AF ^ 0x80 | v697 & 0x1AF ^ 0x12F) * ((HIWORD(v694) & 0xF) + 939);
  v699 = ((v697 << 16) | ((*(unsigned __int8 *)(v27
                                              + (v698 - 957 * ((4487950 * (unint64_t)v698) >> 32))) ^ 0x80) << 8)) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v695 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v695 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * ((v692 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v692 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80;
  LODWORD(STACK[0x688]) = LODWORD(STACK[0x638]) ^ LODWORD(STACK[0x5D0]);
  v700 = 431 * ((v692 & 0x3AB ^ 0x32B | v692 & 0x3AB ^ 0x80) + ((v691 >> 4) ^ 8));
  LODWORD(STACK[0x67C]) = LODWORD(STACK[0x658]) ^ (16
                                                 * (*(unsigned __int8 *)(v27
                                                                       + (v700
                                                                                      - 957
                                                                                      * ((4487950
                                                                                        * (unint64_t)v700) >> 32))) ^ 0x80)) ^ ((v699 << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((unsigned __int16)v693 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v693 >> 12) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (v689 & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v689 & 0xFu) + 404709)) >> 32))) ^ 0x80);
  v701 = 431 * ((67950712 - LODWORD(STACK[0x4E8])) >> 28) + 279719;
  v702 = 431 * (HIBYTE(LODWORD(STACK[0x4DC])) & 0xF ^ 0xB) + 279719;
  v703 = ((*(unsigned __int8 *)(v27 + (v702 - 957 * ((4487950 * (unint64_t)v702) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v701 - 957 * ((4487950 * (unint64_t)v701) >> 32))) ^ 0x80) << 12);
  v704 = 431 * (~(LODWORD(STACK[0x4DC]) >> 20) & 0xF) + 279719;
  v705 = 431 * (HIWORD(LODWORD(STACK[0x4DC])) & 0xF ^ 3) + 279719;
  v706 = v703 | *(unsigned __int8 *)(v27 + (v705 - 957 * ((4487950 * (unint64_t)v705) >> 32))) ^ 0x80;
  v707 = 431 * (((unsigned __int16)LODWORD(STACK[0x4DC]) >> 12) ^ 2) + 279719;
  v708 = (v706 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (v704 - 957 * ((4487950 * (unint64_t)v704) >> 32))) ^ 0x80) << 12);
  v709 = 431 * ((LODWORD(STACK[0x4DC]) >> 4) ^ 8) + 279719;
  v710 = v709 - 957 * ((4487950 * (unint64_t)v709) >> 32);
  v711 = v708 | *(unsigned __int8 *)(v27
                                   + (LODWORD(STACK[0x504]) + 431 * ((LODWORD(STACK[0x4DC]) >> 8) & 0xF ^ 7)) % 0x3BD) ^ 0x80;
  v712 = (v711 << 8) + 1634434219 - ((v711 << 9) & 0xC2D6F800);
  v713 = 431 * (STACK[0x4DC] & 0xF ^ 7) + 279719;
  v714 = *(unsigned __int8 *)(v27 + (v713 - 957 * ((4487950 * (unint64_t)v713) >> 32))) ^ 0x80;
  v715 = v712 ^ ((*(unsigned __int8 *)(v27 + (v707 - 957 * ((4487950 * (unint64_t)v707) >> 32))) ^ 0x80) << 12);
  v716 = LODWORD(STACK[0x550])
       - LODWORD(STACK[0x5B8])
       - 2
       * ((LODWORD(STACK[0x550]) - LODWORD(STACK[0x5B8]) + 508832140) & 0x539F235D ^ (LODWORD(STACK[0x550])
                                                                                    - LODWORD(STACK[0x5B8])) & 1)
       - 235713304;
  v717 = (v715 ^ 0x616B7CAB | (v714 + 744813536 - ((2 * v714) & 0x1C0)) ^ 0x2C64F3E0) ^ (16
                                                                                       * (*(unsigned __int8 *)(v27 + v710) ^ 0x80));
  v718 = 431 * (HIBYTE(v716) & 0xF ^ 3) + 279719;
  v719 = 431 * ((v716 >> 20) & 0xF ^ 9) + 279719;
  v720 = 431 * (~HIWORD(v716) & 0xF) + 279719;
  v721 = ((*(unsigned __int8 *)(v27 + (v718 - 957 * ((4487950 * (unint64_t)v718) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v716 >> 28) ^ 5) + 279719 - 957 * ((4487950 * (unint64_t)(431 * ((v716 >> 28) ^ 5) + 279719)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (v720 - 957 * ((4487950 * (unint64_t)v720) >> 32))) ^ 0x80;
  v722 = 431
       * (((unsigned __int16)(LOWORD(STACK[0x550])
                            - LOWORD(STACK[0x5B8])
                            - 2
                            * ((LOWORD(STACK[0x550]) - LOWORD(STACK[0x5B8]) + 10636) & 0x235D ^ (LOWORD(STACK[0x550])
                                                                                               - LOWORD(STACK[0x5B8])) & 1)
                            + 19688) >> 12) ^ 2)
       + 279719;
  v723 = (v721 << 8) ^ ((*(unsigned __int8 *)(v27
                                            + (v719 - 957 * ((4487950 * (unint64_t)v719) >> 32))) ^ 0x80) << 12);
  v724 = 431 * ((v716 >> 8) & 0xF ^ 3) + 279719;
  v725 = v724 - 957 * ((4487950 * (unint64_t)v724) >> 32);
  v726 = v723 | *(unsigned __int8 *)(v27 + ((v725 - 256406576 - ((2 * v725) & 0x7A0)) ^ 0xF0B78BD0)) ^ 0x80;
  v727 = 431
       * (((LOBYTE(STACK[0x550])
                           - LOBYTE(STACK[0x5B8])
                           - 2
                           * ((LOBYTE(STACK[0x550]) - LOBYTE(STACK[0x5B8]) - 116) & 0x5D ^ (LOBYTE(STACK[0x550])
                                                                                          - LOBYTE(STACK[0x5B8])) & 1)
                           - 24) >> 4) ^ 5)
       + 279719;
  v728 = *(unsigned __int8 *)(v27
                            + (431 * (v716 & 0xF ^ 0xC)
                                           + 279719
                                           - 957
                                           * ((4487950 * (unint64_t)(431 * (v716 & 0xF ^ 0xC) + 279719)) >> 32))) ^ 0x80;
  v729 = v728 - 1135424351 - ((2 * v728) & 0x142);
  v730 = (v729 ^ 0xBC52CCA1 | (v726 << 8) ^ ((*(unsigned __int8 *)(v27
                                                                 + (v722
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v722) >> 32))) ^ 0x80) << 12)) ^ (16 * (*(unsigned __int8 *)(v27 + (v727 - 957 * ((4487950 * (unint64_t)v727) >> 32))) ^ 0x80));
  v731 = v714 & 0xF;
  v732 = ((2 * (v714 & 0xF | (unsigned __int16)(16 * (v729 & 0xF)))) & 0x15E)
       + ((v731 | (16 * (v729 & 0xF))) ^ 0xF7FC75BF);
  v733 = 431
       * (*(unsigned __int8 *)(v27
                             + ((~(-134450421 - v732) & 0xC4ACC5D1) - ((v732 + 244) & 0x1D1) + 431) * (v732 + 134450420)
                             % 0x3BD) ^ LODWORD(STACK[0x6F0]) ^ 0x80);
  v734 = (v733 + 290925) % 0x3BD;
  v735 = 431
       * (*(unsigned __int8 *)(v27 + (431 * v732 + 2113265247) % 0x3BD) ^ (*(unsigned __int8 *)(v27 + v733 % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v736 = v735 - 957 * ((4487950 * (unint64_t)v735) >> 32);
  v737 = ((v717 >> 4) ^ 0x2C8B17CF) & 0x2D5ED2F5 ^ 0x4974B3F5 ^ (-2
                                                               - ((~(((v717 >> 4) ^ 0x2C8B17CF) & 0x2D5ED2FA) | 0x657EA13F)
                                                                + (((v717 >> 4) ^ 0x2C8B17CF) & 0x255E803A | 0x9A815EC0)));
  v738 = (((2 * v737) & 0x78537712) - v737 - 2083109770) ^ 0xAFDC56B3;
  v739 = 431 * (((v738 | v730 & 0xF0) - 787605752 - ((2 * v738) & 0x221C2E10)) ^ 0xD10E1708);
  v740 = 431
       * (*(unsigned __int8 *)(v27 + (v739 + 290925) % 0x3BD) ^ (16 * (*(unsigned __int8 *)(v27 + v736) ^ 0x80)) ^ 0x80);
  v741 = v740 + 290925 - 957 * ((4487950 * (unint64_t)(v740 + 290925)) >> 32);
  v742 = *(unsigned __int8 *)(v27 + v739 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v740
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v740) >> 32))) >> 4);
  v743 = 431 * (v742 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v742 ^ 0x88u) + 290925)) >> 32);
  v744 = 431
       * ((((v730 >> 4) & 0xF0 | (v717 >> 8) & 0xF)
         - 1950327336
         - 2 * (((v730 >> 4) & 0xD0 | (v717 >> 8) & 0xC) ^ (v717 >> 8) & 4)) ^ 0x8BC05DD8);
  v745 = (v744 + 290925) % 0x3BD;
  v746 = v744 % 0x3BD;
  v747 = *(unsigned __int8 *)(v27 + v734);
  v748 = ((v747 ^ 0x80) - ((2 * v747) & 0xA0) + 920413520) ^ (16 * (*(unsigned __int8 *)(v27 + v741) ^ 0x80));
  v749 = 431 * (*(unsigned __int8 *)(v27 + v745) ^ (16 * (*(unsigned __int8 *)(v27 + v743) ^ 0x80)) ^ 0x80);
  v750 = 431
       * (*(unsigned __int8 *)(v27 + v746) ^ (*(unsigned __int8 *)(v27
                                                                 + (v749
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v749) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v751 = *(unsigned __int8 *)(v27 + (v750 - 957 * ((4487950 * (unint64_t)v750) >> 32)));
  v752 = v730 >> 8 >> ((v751 & 4 ^ 4) + (v751 & 4));
  v753 = v752 - ((2 * v752) & 0x1F7B16C) + 754702518;
  v754 = (((unsigned __int16)v715 >> 12) & 0xFFFFFF0F | (16 * (v753 & 0xF))) ^ 0x67;
  v755 = 431 * ((v754 - 568009523 - ((2 * v754) & 0x19A)) ^ 0xDE24DCCD);
  v756 = 431 * (*(unsigned __int8 *)(v27 + (v755 + 290925) % 0x3BD) ^ (16 * (v751 ^ 0x80)) ^ 0x80);
  v757 = ((*(unsigned __int8 *)(v27
                              + (v756
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v756 + 290925)) >> 32))) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(v27 + (v749 + 290925 - 957 * ((4487950 * (unint64_t)(v749 + 290925)) >> 32))) ^ 0x80) << 8);
  v758 = 431
       * (*(unsigned __int8 *)(v27 + v755 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v756
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v756) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v759 = (v753 & 0xF0 | HIWORD(v715) & 0xF) ^ 0xBB;
  v760 = 431 * ((v759 + 145638437 - ((2 * v759) & 0x4A)) ^ 0x8AE4425);
  v761 = 431
       * (*(unsigned __int8 *)(v27 + (v760 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v758 - 957 * ((4487950 * (unint64_t)v758) >> 32))) ^ 0x80)) ^ 0x80);
  v762 = v761 + 290925 - 957 * ((4487950 * (unint64_t)(v761 + 290925)) >> 32);
  v763 = *(unsigned __int8 *)(v27 + (v761 - 957 * ((4487950 * (unint64_t)v761) >> 32)));
  v764 = (v763 ^ 0x80) + 52056386 - ((2 * v763) & 0x84);
  v765 = *(unsigned __int8 *)(v27 + v760 % 0x3BD) ^ ((v764 ^ 0x31A5142u) >> ((~(_BYTE)v764 & 4)
                                                                                            + (v763 & 4)));
  v766 = ((v753 >> 4) & 0xF0 | (v712 >> 20) & 0xF) ^ 0x86;
  v767 = 431 * ((v766 + 1272135468 - ((2 * v766) & 0x58)) ^ 0x4BD33F2C);
  v768 = 431
       * (*(unsigned __int8 *)(v27 + (v767 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v765 ^ 0x80) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v765 ^ 0x80u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v769 = ((*(unsigned __int8 *)(v27
                              + (v768
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v768 + 290925)) >> 32))) ^ 0x80) << 20) ^ ((*(unsigned __int8 *)(v27 + v762) ^ 0x80) << 16);
  v770 = 431
       * (*(unsigned __int8 *)(v27 + v767 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v768
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v768) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v771 = ((v753 >> 8) & 0xF0 | HIBYTE(v712) & 0xF) ^ 0xD1;
  v772 = 431 * ((v771 - 1301793773 - 2 * (v771 & 0x17 ^ HIBYTE(v712) & 4)) ^ 0xB2683413);
  v773 = 431
       * (*(unsigned __int8 *)(v27 + (v772 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v770 - 957 * ((4487950 * (unint64_t)v770) >> 32))) ^ 0x80)) ^ 0x80);
  v774 = v773 + 290925 - 957 * ((4487950 * (unint64_t)(v773 + 290925)) >> 32);
  v775 = 431
       * (*(unsigned __int8 *)(v27 + v772 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v773
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v773) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v776 = 431 * (((v753 >> 12) & 0xF0 | (v712 >> 28)) ^ 0xB6) + 290925;
  v777 = 431
       * (*(unsigned __int8 *)(v27 + (v776 - 957 * ((4487950 * (unint64_t)v776) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v775 - 957 * ((4487950 * (unint64_t)v775) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v778 = 431 * (v731 & 0xFFFFFF0F | (16 * (v747 & 0xF))) + 168952;
  v779 = 431 * (v748 & 0xF0 ^ 0x50 | v738) + 168952;
  v780 = v757 ^ v748;
  v781 = 431 * (((v780 >> 4) & 0xF0 | (v717 >> 8) & 0xF) ^ 0x50) + 168952;
  v782 = 431 * (((v757 >> 8) & 0xF0 | ((unsigned __int16)v715 >> 12)) ^ 7) + 167995;
  v783 = v780 ^ 0xEDA12658 ^ v769;
  v784 = v783 ^ ((*(unsigned __int8 *)(v27 + v774) ^ 0x80) << 24);
  v785 = 431 * (((v783 >> 12) & 0xF0 | HIWORD(v715) & 0xF) ^ 0xDB) + 168952;
  v786 = 431 * ((HIWORD(v769) & 0xF0 | (v712 >> 20) & 0xF) ^ 6) + 168952;
  v787 = v784 ^ (*(unsigned __int8 *)(v27 + (v777 - 957 * ((4487950 * (unint64_t)v777) >> 32))) << 28);
  v788 = 431 * (((v784 >> 20) & 0xF0 | HIBYTE(v712) & 0xF) ^ 0xB1) + 168952;
  v789 = v788 - 957 * ((4487950 * (unint64_t)v788) >> 32);
  v790 = *(unsigned __int8 *)(v27 + (v778 - 957 * ((4487950 * (unint64_t)v778) >> 32)));
  v791 = v790 ^ (16 * (*(unsigned __int8 *)(v27 + v779 % 0x3BD) ^ 0x80));
  v792 = v791 ^ ((*(unsigned __int8 *)(v27 + (v781 - 957 * ((4487950 * (unint64_t)v781) >> 32))) ^ 0x80) << 8);
  v793 = v792 ^ ((*(unsigned __int8 *)(v27 + (v782 - 957 * ((4487950 * (unint64_t)v782) >> 32))) ^ 0x80) << 12);
  v794 = v793 ^ ((*(unsigned __int8 *)(v27 + (v785 - 957 * ((4487950 * (unint64_t)v785) >> 32))) ^ 0x80) << 16);
  v795 = v794 ^ ((*(unsigned __int8 *)(v27 + (v786 - 957 * ((4487950 * (unint64_t)v786) >> 32))) ^ 0x80) << 20);
  v796 = ((*(unsigned __int8 *)(v27 + ((v789 + 920149429 - ((2 * v789) & 0x36A)) ^ 0x36D85DB5u)) ^ 0x80) << 24) ^ (*(unsigned __int8 *)(v27 + 431 * (((HIBYTE(v787) & 0xF0 | (v712 >> 28)) ^ 0xD6) - 1015160005 * ((v789 + 920149429 - ((2 * v789) & 0x36A)) & 0x18 ^ LODWORD(STACK[0x46C]) | (v789 + 920149429 - ((2 * v789) & 0x36A)) & 0x18 ^ 0x10)) % 0x3BD) << 28) ^ v795;
  v797 = ((*(unsigned __int8 *)(v27
                              + (431 * (HIBYTE(v796) & 0xF)
                                             + 404709
                                             - 957
                                             * ((4487950 * (unint64_t)(431 * (HIBYTE(v796) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * (v796 >> 28) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (v796 >> 28) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (HIWORD(v794) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v794) & 0xF) + 404709)) >> 32))) ^ 0x80;
  v798 = 431 * ((v791 >> 4) ^ 8) + 404709;
  LODWORD(STACK[0x668]) = *(unsigned __int8 *)(v27
                                             + (431 * (v790 & 0xF)
                                                            + 404709
                                                            - 957
                                                            * ((4487950
                                                              * (unint64_t)(431 * (v790 & 0xFu) + 404709)) >> 32))) ^ LODWORD(STACK[0x6E4]) ^ (((*(unsigned __int8 *)(v27 + (431 * ((unsigned __int16)v793 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v793 >> 12) + 404709)) >> 32))) ^ 0x80) << 12) | (16 * (*(unsigned __int8 *)(v27 + (v798 - 957 * ((4487950 * (unint64_t)v798) >> 32))) ^ 0x80))) ^ (((v797 << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v795 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v795 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * ((v792 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v792 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8);
  v799 = LODWORD(STACK[0x604]) - ((2 * LODWORD(STACK[0x604]) + 695193578) & 0x2766971C);
  v800 = 431 * ((LODWORD(STACK[0x59C]) >> 4) ^ 3) + 279719;
  v801 = *(unsigned __int8 *)(v27 + (v800 - 957 * ((4487950 * (unint64_t)v800) >> 32)));
  v802 = 431 * ((LODWORD(STACK[0x598]) >> 4) ^ 0xE) + 279719;
  v803 = (LODWORD(STACK[0x61C]) ^ 0x45131DFB | LODWORD(STACK[0x590]) ^ 0x4AE746DA) ^ (16
                                                                                    * (*(unsigned __int8 *)(v27 + (v802 - 957 * ((4487950 * (unint64_t)v802) >> 32))) ^ 0x80));
  v804 = 16 * (v801 ^ 0x80) - ((32 * v801) & 0xD20) + 1997780637;
  v805 = ((LODWORD(STACK[0x588]) ^ v804) >> 4) ^ 0x1C58407B;
  v806 = ((2 * (v805 & 0xFB47CD3)) | 0x9F5350A4) - (v805 & 0xFB47CD3);
  v807 = 431
       * (*(unsigned __int8 *)(v27 + LODWORD(STACK[0x58C]) % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                                          + LODWORD(STACK[0x594])
                                                                                          % 0x3BD) >> 4) ^ 0x88)
       + 290925;
  v808 = ((((v806 - 1336518738) ^ v805 & 0xFB47CDC) & 0xC4504846 ^ 0x84404007)
        + (((v806 - 1336518738) ^ v805 & 0xFB47CDC) & 0x3BAFB7B9)
        - 1) ^ 0xCBE9E85E;
  v809 = 431 * (((v808 | v803 & 0xF0) - 1468538746 - 2 * ((v808 & 0x2877E087 | v803 & 0x80) ^ v806 & 1)) ^ 0xA877E086);
  v810 = *(unsigned __int8 *)(v27 + (v809 + 290925) % 0x3BD) ^ (16
                                                              * (*(unsigned __int8 *)(v27
                                                                                    + (v807 - 957 * ((4487950 * (unint64_t)v807) >> 32))) ^ 0x80)) ^ 0x80;
  v811 = 431 * v810 + 290925 - 957 * ((4487950 * (unint64_t)(431 * v810 + 290925)) >> 32);
  v812 = v811 - 1564862692 + (~(2 * v811) | 0xFFFFF9C7) + 1;
  v813 = ((v812 & 0x1AF ^ 0x10C) + (v812 & 0x1AF ^ 0xA3)) * v810;
  v814 = (((((LODWORD(STACK[0x644]) ^ v804) >> 8) ^ 0x7EF83AAD) & 0x3A695494)
        - ((((LODWORD(STACK[0x644]) ^ v804) >> 8) ^ 0x7EF83AAD) & 0x681014)
        + ((((LODWORD(STACK[0x644]) ^ v804) >> 8) ^ 0x7EF83AAD) & 0x681014 ^ 0x856C9A55)) ^ (((LODWORD(STACK[0x644]) ^ v804) >> 8) ^ 0x7EF83AAD) & 0x3A69549B;
  v815 = (v814 & 0xB1940A06 ^ 0x920106) + (v814 ^ 0xBF6C9E51) - ((v814 ^ 0xBF6C9E51) & 0xB1960B06);
  v816 = LODWORD(STACK[0x5B4]) ^ (16 * (*(unsigned __int8 *)(v27 + (v812 ^ 0xA2BA171C)) ^ 0x80));
  v817 = 431
       * (*(unsigned __int8 *)(v27 + v809 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v813
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v813) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v818 = 431
       * (((((v803 >> 4) & 0xF0 | v815) ^ 0x8B960F06)
         - 1696055447
         - ((2 * (((v803 >> 4) & 0xF0 | v815) ^ 0x8B960F06)) & 0x35D07ED2)) ^ 0x9AE83F69);
  v819 = 431
       * (*(unsigned __int8 *)(v27 + (v818 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (v817 - 957 * ((4487950 * (unint64_t)v817) >> 32))) ^ 0x80)) ^ 0x80);
  v820 = 431
       * (*(unsigned __int8 *)(v27 + v818 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                         + (v819
                                                                                        - 957
                                                                                        * ((4487950
                                                                                          * (unint64_t)v819) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v821 = 431
       * (*(unsigned __int8 *)(v27 + (LODWORD(STACK[0x62C]) + 290925) % 0x3BDu) ^ (16
                                                                                 * (*(unsigned __int8 *)(v27 + (v820 - 957 * ((4487950 * (unint64_t)v820) >> 32))) ^ 0x80)) ^ 0x80);
  v822 = v821 - 957 * ((4487950 * (unint64_t)v821) >> 32);
  v823 = ((*(unsigned __int8 *)(v27
                              + (v821
                                             + 290925
                                             - 957 * ((4487950 * (unint64_t)(v821 + 290925)) >> 32))) ^ 0x80) << 12) ^ ((*(unsigned __int8 *)(v27 + (v819 + 290925 - 957 * ((4487950 * (unint64_t)(v819 + 290925)) >> 32))) ^ 0x80) << 8);
  v824 = 431 * (*(unsigned __int8 *)(v27 + LODWORD(STACK[0x634])) ^ (*(unsigned __int8 *)(v27 + v822) >> 4) ^ 0x88)
       + 290925;
  v825 = 431
       * (*(unsigned __int8 *)(v27 + LODWORD(STACK[0x624])) ^ (16
                                                             * (*(unsigned __int8 *)(v27
                                                                                   + (v824
                                                                                                  - 957 * ((4487950 * (unint64_t)v824) >> 32))) ^ 0x80)) ^ 0x80);
  v826 = v825 + 290925 - 957 * ((4487950 * (unint64_t)(v825 + 290925)) >> 32);
  v827 = *(unsigned __int8 *)(v27 + LODWORD(STACK[0x628]) % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                                         + (v825 - 957 * ((4487950 * (unint64_t)v825) >> 32))) >> 4);
  v828 = (HIWORD(LODWORD(STACK[0x648])) & 0xF0 | (LODWORD(STACK[0x644]) >> 20) & 0xF) ^ 0x10;
  v829 = 431 * ((v828 - 1572952142 - 2 * (v828 & 0xBA ^ (LODWORD(STACK[0x644]) >> 20) & 8)) ^ 0xA23EA7B2);
  v830 = 431
       * (*(unsigned __int8 *)(v27 + (v829 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v827 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v827 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v831 = v830 + 290925 - 957 * ((4487950 * (unint64_t)(v830 + 290925)) >> 32);
  v832 = *(unsigned __int8 *)(v27 + v829 % 0x3BD) ^ (*(unsigned __int8 *)(v27
                                                                        + (v830
                                                                                       - 957
                                                                                       * ((4487950
                                                                                         * (unint64_t)v830) >> 32))) >> 4);
  v833 = ((LODWORD(STACK[0x648]) >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x644])) & 0xF) ^ 0x5B;
  v834 = 431 * ((v833 + 1506730573 - ((2 * v833) & 0x9A)) ^ 0x59CEE24D);
  v835 = v834 % 0x3BD;
  v836 = 431
       * (*(unsigned __int8 *)(v27 + (v834 + 290925) % 0x3BD) ^ (16
                                                               * (*(unsigned __int8 *)(v27
                                                                                     + (431 * (v832 ^ 0x88) + 290925 - 957 * ((4487950 * (unint64_t)(431 * (v832 ^ 0x88u) + 290925)) >> 32))) ^ 0x80)) ^ 0x80);
  v837 = v836 + 290925 - 957 * ((4487950 * (unint64_t)(v836 + 290925)) >> 32);
  v838 = 431
       * (*(unsigned __int8 *)(v27 + v835) ^ (*(unsigned __int8 *)(v27
                                                                 + (v836
                                                                                - 957
                                                                                * ((4487950 * (unint64_t)v836) >> 32))) >> 4) ^ 0x88)
       + 290925;
  v839 = 431 * ((HIBYTE(LODWORD(STACK[0x648])) & 0xF0 | (LODWORD(STACK[0x644]) >> 28)) ^ 0x41) + 290925;
  v840 = 431
       * (*(unsigned __int8 *)(v27 + (v839 - 957 * ((4487950 * (unint64_t)v839) >> 32))) ^ (16 * (*(unsigned __int8 *)(v27 + (v838 - 957 * ((4487950 * (unint64_t)v838) >> 32))) ^ 0x80)) ^ 0x80)
       + 290925;
  v841 = LODWORD(STACK[0x5C8]) ^ (16
                                * (*(unsigned __int8 *)(v27 + (431 * (v816 & 0xF0 ^ 0x20 | v808) + 168952) % 0x3BD) ^ 0x80));
  v842 = v816 ^ 0xDA7B21E1 ^ v823;
  v843 = v842 ^ ((*(unsigned __int8 *)(v27 + v826) ^ 0x80) << 16);
  v844 = 431 * ((v842 >> 4) & 0xF0 ^ 0xA0 | v815 ^ 0x8B960F06) + 168952;
  v845 = 431 * (((v823 >> 8) & 0xF0 | ((unsigned __int16)LODWORD(STACK[0x640]) >> 12)) ^ 1) + 168952;
  v846 = v843 ^ ((*(unsigned __int8 *)(v27 + v831) ^ 0x80) << 20);
  v847 = 431 * (((v843 >> 12) & 0xF0 | HIWORD(LODWORD(STACK[0x640])) & 0xF) ^ 0xFF) + 168952;
  v848 = v846 ^ ((*(unsigned __int8 *)(v27 + v837) ^ 0x80) << 24);
  v849 = 431 * (HIWORD(v846) & 0xF0 | (LODWORD(STACK[0x644]) >> 20) & 0xF) + 168952;
  v850 = v848 ^ (*(unsigned __int8 *)(v27 + (v840 - 957 * ((4487950 * (unint64_t)v840) >> 32))) << 28);
  v851 = 431 * (((v848 >> 20) & 0xF0 | HIBYTE(LODWORD(STACK[0x644])) & 0xF) ^ 0xEB) + 168952;
  v852 = 431 * ((HIBYTE(v850) & 0xF0 | (LODWORD(STACK[0x644]) >> 28)) ^ 0x51) + 168952;
  v853 = ((*(unsigned __int8 *)(v27 + (v851 - 957 * ((4487950 * (unint64_t)v851) >> 32))) ^ 0x80) << 24) ^ (*(unsigned __int8 *)(v27 + (v852 - 957 * ((4487950 * (unint64_t)v852) >> 32))) << 28);
  v854 = v841 ^ ((*(unsigned __int8 *)(v27 + v844 % 0x3BD) ^ 0x80) << 8);
  v855 = v854 ^ ((*(unsigned __int8 *)(v27 + (v845 - 957 * ((4487950 * (unint64_t)v845) >> 32))) ^ 0x80) << 12);
  v856 = v855 ^ ((*(unsigned __int8 *)(v27 + (v847 - 957 * ((4487950 * (unint64_t)v847) >> 32))) ^ 0x80) << 16);
  v857 = v856 ^ ((*(unsigned __int8 *)(v27 + (v849 - 957 * ((4487950 * (unint64_t)v849) >> 32))) ^ 0x80) << 20);
  v858 = (v857 ^ 0xFAC40029 ^ (v853 - 87818199 - ((2 * v853) & 0xF4000000) + 128)) >> (STACK[0x6DC] & 0x18 ^ 8 | STACK[0x6DC] & 0x18 ^ 0x10);
  v859 = v858 - ((2 * v858) & 0x452D09F2) - 1567193863;
  v860 = 431 * (~(v859 >> 4) & 0xF) + 404709;
  v861 = 431 * ((v841 >> 4) ^ 8) + 404709;
  v862 = ((((((*(unsigned __int8 *)(v27
                                  + (431 * (v859 & 0xF ^ 9)
                                                 + 404709
                                                 - 957
                                                 * ((4487950 * (unint64_t)(431 * (v859 & 0xF ^ 9) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (v860 - 957 * ((4487950 * (unint64_t)v860) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * (HIWORD(v856) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * (HIWORD(v856) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((v857 >> 20) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v857 >> 20) & 0xF) + 404709)) >> 32))) ^ 0x80) << 12) | *(unsigned __int8 *)(v27 + (431 * ((v854 >> 8) & 0xF) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((v854 >> 8) & 0xF) + 404709)) >> 32))) ^ 0x80) << 8) ^ ((*(unsigned __int8 *)(v27 + (431 * ((unsigned __int16)v855 >> 12) + 404709 - 957 * ((4487950 * (unint64_t)(431 * ((unsigned __int16)v855 >> 12) + 404709)) >> 32))) ^ 0x80) << 12);
  LODWORD(STACK[0x6E4]) = (LODWORD(STACK[0x5FC]) - 1280186478) ^ LODWORD(STACK[0x59C]);
  v863 = v862 | *(unsigned __int8 *)(v27 + (LODWORD(STACK[0x5E0]) ^ 0x303ED5E2u)) ^ 0x80;
  LODWORD(STACK[0x660]) = LODWORD(STACK[0x6E8]) + LODWORD(STACK[0x5DC]);
  LODWORD(STACK[0x670]) = (v799 - 1469369469) ^ (16
                                               * (*(unsigned __int8 *)(v27
                                                                     + (v861
                                                                                    - 957
                                                                                    * ((4487950 * (unint64_t)v861) >> 32))) ^ 0x80)) ^ v863;
  LODWORD(STACK[0x6C8]) = LODWORD(STACK[0x6E0]) + LODWORD(STACK[0x608]);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x6D0] + 8 * (LODWORD(STACK[0x6F8]) ^ (961 * LODWORD(STACK[0x6C0]))))
                            - 8))();
}

void sub_24783AD3C(uint64_t a1, int a2, int a3, uint64_t a4, int a5, uint64_t a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  char v14;
  char v15;
  __int16 v16;
  int v17;
  unsigned int v18;
  int v19;
  _BYTE *v20;
  int v21;
  int v22;
  int v23;
  int v25;
  char v26;
  int v27;
  int v29;
  int v30;
  int v31;
  int v32;
  unsigned int v33;
  int v34;
  int v35;
  int v36;

  LODWORD(STACK[0x50C]) = 0;
  LODWORD(STACK[0x658]) = a3;
  v17 = LODWORD(STACK[0x6C8]) + v10;
  v18 = ((v16 & 0x3800 | (-1 - v16) & 0x800) ^ 0x844611D5) + ((v17 + 1954823954) ^ (v12 - 649250750));
  v19 = STACK[0x6DC];
  v20 = (_BYTE *)STACK[0x5A8];
  *v20 = HIBYTE(LODWORD(STACK[0x6DC])) ^ 0x8B;
  v21 = STACK[0x698];
  LODWORD(STACK[0x6F0]) = v9;
  v20[4] = HIBYTE(v21) ^ 0xEB;
  v22 = STACK[0x680];
  v20[8] = HIBYTE(LODWORD(STACK[0x680])) ^ 0x21;
  LODWORD(STACK[0x6BC]) = a8;
  v23 = STACK[0x688];
  v20[12] = HIBYTE(LODWORD(STACK[0x688])) ^ 0x9E;
  v25 = STACK[0x6E4];
  v20[20] = (~LODWORD(STACK[0x6E4]) >> 24) ^ 0x90;
  v20[24] = HIBYTE(a2) ^ 0xEC;
  v20[16] = HIBYTE(v8) ^ 0xC8;
  v20[28] = HIBYTE(v11) ^ 0xB6;
  v20[2144] = HIBYTE(a7) ^ 0x70;
  v26 = v16 & 0x60 ^ 0x63 | v16 & 0x60;
  v27 = STACK[0x6A0];
  v20[2148] = HIBYTE(LODWORD(STACK[0x6A0])) ^ 0xEC;
  v29 = STACK[0x694];
  v20[2152] = HIBYTE(LODWORD(STACK[0x694])) ^ 0xD;
  v20[2172] = HIBYTE(v13) ^ 0xC8;
  v30 = v13;
  v31 = STACK[0x670];
  v20[2164] = HIBYTE(LODWORD(STACK[0x670])) ^ 0x93;
  v32 = STACK[0x5EC];
  v33 = (LODWORD(STACK[0x5EC]) ^ 0xFC5F34DF) >> ((8 * v26) & (v15 & 0x18 ^ 8 | v15 & 0x18 ^ 0x10));
  v34 = STACK[0x67C];
  v20[2156] = HIBYTE(LODWORD(STACK[0x67C])) ^ 0xD4;
  v20[2168] = HIBYTE(a5) ^ 0xC9;
  v35 = (LODWORD(STACK[0x544]) - 883086275) & 0x34A2D871;
  v20[2160] = v33 ^ 0x80;
  v20[25] = BYTE2(a2) ^ 0xF3;
  LODWORD(STACK[0x6F8]) = v35;
  v20[29] = BYTE2(v11) ^ 0xD1;
  v20[((v14 & 0x10 ^ 0x14) + (v14 & 0x10)) | 0x12] = BYTE1(v25) ^ 0x7C;
  LODWORD(STACK[0x6C0]) = v18 + 67562657 - ((v18 << (v35 - 15)) & 0x80DD942);
  v36 = LODWORD(STACK[0x660]) + a3;
  v20[1] = BYTE2(v19) ^ 0x46;
  v20[17] = BYTE2(v8) ^ 0x43;
  v20[5] = BYTE2(v21) ^ 0xCB;
  v20[21] = BYTE2(v25) ^ 0x2E;
  v20[9] = BYTE2(v22) ^ 0x24;
  v20[13] = BYTE2(v23) ^ 0xEB;
  v20[2149] = BYTE2(v27) ^ 0x4C;
  v20[2145] = BYTE2(a7) ^ 0x50;
  v20[2157] = BYTE2(v34) ^ 0xA4;
  v20[2169] = BYTE2(a5) ^ 0xD4;
  v20[2173] = BYTE2(v30) ^ 0xE0;
  v20[2161] = BYTE2(v32) ^ 0xDF;
  v20[2153] = BYTE2(v29) ^ 0x27;
  v20[2165] = BYTE2(v31) ^ 0x33;
  v20[2] = BYTE1(v19) ^ 0x6A;
  v20[10] = BYTE1(v22) ^ 5;
  v20[6] = BYTE1(v21) ^ 0xEF;
  v20[18] = BYTE1(v8) ^ 0xA7;
  v20[14] = BYTE1(v23) ^ 0xB9;
  v20[26] = BYTE1(a2) ^ 0x59;
  v20[30] = ((v11 ^ 0x26414A26u) >> ((v19 & 8 ^ 8) + (v19 & 8))) ^ 0x90;
  v20[2154] = BYTE1(v29) ^ 0xDD;
  v20[2166] = BYTE1(v31) ^ 0xCB;
  v20[2162] = BYTE1(v32) ^ 0xB4;
  v20[2150] = BYTE1(v27) ^ 0xBA;
  v20[2146] = BYTE1(a7) ^ 0xC6;
  v20[2158] = BYTE1(v34) ^ 0xB4;
  v20[2170] = BYTE1(a5) ^ 0xBE;
  v20[2174] = BYTE1(v30) ^ 0xA2;
  v20[7] = v21 ^ 0xE8;
  LODWORD(STACK[0x6A8]) = v17 - 564038042;
  v20[3] = v19 ^ 0xBD;
  LODWORD(STACK[0x6DC]) = v36 - 544985139;
  v20[11] = v22 ^ 0x9A;
  v20[19] = v8 ^ 0x3A;
  v20[15] = v23 ^ 0xBF;
  v20[27] = a2 ^ 0x44;
  v20[23] = LODWORD(STACK[0x6E4]) ^ 0xAD;
  v20[31] = v11 ^ 0xB6;
  v20[2147] = a7 ^ 0x75;
  v20[2155] = v29 ^ 0x55;
  v20[2159] = v34 ^ 0xC7;
  v20[2151] = v27 ^ 0xF5;
  v20[2171] = a5 ^ 0xF5;
  v20[2163] = v32 ^ 0x5F;
  v20[2175] = v30 ^ 0xE0;
  v20[2167] = v31 ^ 0xE;
  LODWORD(STACK[0x508]) = 1;
  JUMPOUT(0x247824148);
}

uint64_t sub_24783B290(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  int v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  uint64_t v10;
  unint64_t v11;

  v10 = *(_QWORD *)(v7 + 8 * ((1529 * (v9 - LODWORD(STACK[0x500]) + v6 == 964428458)) ^ LODWORD(STACK[0x6E0])));
  v11 = LODWORD(STACK[0x6E0]) ^ 0x45u;
  STACK[0x6A0] = v11;
  return ((uint64_t (*)(_QWORD, uint64_t, uint64_t, uint64_t, _QWORD, uint64_t, uint64_t))(v10 - v11 + 2793))(LODWORD(STACK[0x6BC]), 3389471699, a3, v8, LODWORD(STACK[0x6F8]), a6, 431);
}

uint64_t sub_24783B31C(int a1, int a2, uint64_t a3, uint64_t a4, int a5, int a6, int a7, int a8)
{
  int v8;
  int v9;
  int v10;
  int v11;
  int v12;
  int v13;
  int v14;
  int v15;
  unsigned int v16;
  __int16 v17;
  __int16 v18;
  unsigned int v19;
  unint64_t v20;
  char v21;
  int v22;
  int v23;
  int v24;
  int v25;
  unint64_t v26;
  unsigned int v27;
  unint64_t v28;
  int v29;
  int v30;
  unint64_t v31;
  int v32;
  unsigned int v33;
  unsigned int v34;
  unint64_t v35;
  int v36;
  int v37;
  int v38;
  int v39;
  int v40;
  int v41;
  int v42;
  int v43;
  int v44;
  int v45;
  int v46;
  unsigned int v47;
  int v48;
  unsigned int v49;
  unsigned int v50;
  unsigned int v51;
  int v52;
  unsigned int v53;
  int v54;
  unsigned int v55;
  unsigned int v56;
  unsigned int v57;
  __int16 v58;
  int v59;
  unsigned __int16 v60;
  int v61;
  int v62;
  int v63;
  unsigned int v64;
  int v65;
  unsigned int v66;
  unsigned int v67;
  int v68;
  int v69;
  unsigned int v70;
  uint64_t v71;
  int v72;
  int v73;
  int v74;
  int v75;
  unsigned int v76;
  int v77;
  int v78;
  unsigned int v79;
  int v80;
  int v81;
  int v82;
  int v83;
  int v84;
  int v85;
  unsigned int v86;
  int v87;
  int v88;
  int v89;
  int v90;
  int v91;
  int v92;
  unsigned __int16 v93;
  int v94;
  unsigned int v95;
  unsigned int v96;
  int v97;
  uint64_t v98;
  int v99;
  int v100;
  int v101;
  int v102;
  int v103;
  int v104;
  unsigned int v105;
  int v106;
  int v107;
  int v108;
  int v109;
  int v110;
  unsigned int v111;
  int v112;
  int v113;
  int v114;
  int v115;
  int v116;
  int v117;
  int v118;
  int v119;
  int v120;
  int v121;
  int v122;
  int v123;
  int v124;
  unsigned int v125;
  int v126;
  int v127;
  int v128;
  int v129;
  unint64_t v130;
  unsigned int v131;
  int v132;
  int v133;
  int v134;
  int v135;
  unsigned int v136;
  unsigned int v137;
  unsigned int v138;
  int v139;
  int v140;
  int v141;
  unint64_t v142;
  int v143;
  unsigned int v144;
  unsigned int v145;
  uint64_t v146;
  uint64_t (*v147)(_QWORD, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, _QWORD);

  v19 = 8 * LODWORD(STACK[0x504]) - ((16 * LODWORD(STACK[0x504]) + 249524816) & 0xBE8CDB10) + 1723213495;
  v20 = STACK[0x5A8];
  *(_BYTE *)(v20 + 1296) = (8 * LOBYTE(STACK[0x504]) - ((16 * LOBYTE(STACK[0x504]) + 80) & 0x10) - 73) ^ *(_BYTE *)(STACK[0x5A8] + 1296) ^ 0x8F;
  v21 = *(_BYTE *)(v20 + 1822) ^ BYTE1(v19);
  STACK[0x6A0] = 17 * (v10 ^ 0xA15u);
  *(_BYTE *)(v20 + 1822) = v21 ^ (17 * (v10 ^ 0x15) + 120);
  *(_BYTE *)(v20 + 1391) ^= BYTE2(v19) ^ 0x46;
  *(_BYTE *)(v20 + 1917) ^= HIBYTE(v19) ^ 0xDF;
  LODWORD(STACK[0x6E0]) = a8;
  LODWORD(STACK[0x6F8]) = a5;
  LODWORD(STACK[0x6DC]) = a6;
  LODWORD(STACK[0x6E8]) = 235432321;
  LODWORD(STACK[0x6C8]) = 605782156;
  v22 = STACK[0x6A0] - 2190;
  LODWORD(STACK[0x6F0]) = v22;
  v23 = 235432321 * a7;
  v24 = 235432321 * a7 + 1607993344;
  v25 = v23;
  LODWORD(STACK[0x6E4]) = v23;
  v26 = ((v24 + 2176) * (unint64_t)v16) >> 32;
  v27 = v24 + 2176 - ((v26 + ((v24 + 2176 - v26) >> 1)) >> 9) * v14;
  v28 = ((v24 + 3038) * (unint64_t)v16) >> 32;
  v29 = v8 + 800115944;
  v30 = v12;
  v31 = ((v24 + 3469) * (unint64_t)v16) >> 32;
  v32 = v13;
  v33 = v24 + 3038 - ((v28 + ((v24 + 3038 - v28) >> 1)) >> 9) * v14;
  LOWORD(v28) = -32628 * v17;
  v34 = v24 + 3469 - ((v31 + ((v24 + 3469 - v31) >> 1)) >> 9) * v14;
  LODWORD(v26) = v25 + 1608023966;
  v35 = ((v25 + 1608023966) * (unint64_t)v16) >> 32;
  v36 = *(unsigned __int8 *)(a4 + v27);
  v37 = *(unsigned __int8 *)(a4
                           + v25
                           + 1608023966
                           - ((v35 + ((v25 + 1608023966 - v35) >> 1)) >> 9) * v14);
  LODWORD(v31) = *(unsigned __int8 *)(a4 + v33);
  STACK[0x6C0] = (unsigned __int16)(-32628 * v17
                                  + 32429
                                  - ((unsigned __int16)(((unsigned __int16)(-32628 * v17 + 32429) * v15) >> 16) >> 8)
                                  * v18);
  v38 = *(unsigned __int8 *)(a4
                           + v24
                           + v22
                           + 1992
                           - (((((v24 + v22 + 1992) * (unint64_t)v16) >> 32)
                                           + ((v24
                                                           + v22
                                                           + 1992
                                                           - (((v24 + v22 + 1992) * (unint64_t)v16) >> 32)) >> 1)) >> 9)
                           * v14);
  v39 = v8 - 2 * ((v8 + 129027304) & 0x499E89F ^ v8 & 1) + 877311366;
  v40 = *(unsigned __int8 *)(a4 + v34) ^ v29;
  v41 = *(unsigned __int8 *)(a4 + (_DWORD)v26 + 431 - ((int)v26 + 431) / 0x3BDu * v14) ^ 0x80;
  v42 = (v36 ^ 0x3C) << 24;
  v43 = v39 ^ (a1 - ((2 * a1 + 421324760) & 0x47B3D1D0) + 1885887700);
  v44 = *(unsigned __int8 *)(a4 + (_DWORD)v26 + 1293 - ((int)v26 + 1293) / 0x3BDu * v14) ^ 0x80;
  v45 = *(unsigned __int8 *)(a4 + (_DWORD)v26 + 862 - ((int)v26 + 862) / 0x3BDu * v14) ^ 0x80;
  STACK[0x6B0] = (unsigned __int16)(v28 + 24971) % 0x112u;
  v46 = v32 ^ 0x3D11E93C;
  v47 = ((v11 - 1791876295) ^ 0xED182BA1)
      - 1090199189
      - 2 * (((v11 - 1791876295) ^ 0xED182BA1) & 0x3F04E17B ^ (v11 - 1791876295) & 0x10);
  v48 = ((v37 ^ 0x80) << 24) | (v41 << 16) | (v45 << 8) | v44;
  v49 = ((v47 ^ (v30 - 611990870) ^ 0xBF04E16B)
       + 981350273
       - 2 * ((v47 ^ (v30 - 611990870) ^ 0xBF04E16B) & 0x3A7E3795 ^ (v47 ^ (v30 - 611990870)) & 0x14)) ^ 0x3A7E3781;
  v50 = v40 ^ (v42 | ((v38 ^ 0x3C) << 16) | ((v31 ^ 0x3C) << 8));
  v51 = ((2 * (v49 + (v39 ^ 0x499E89E))) & 0xFFEFFCCE) + ((v49 + (v39 ^ 0x499E89E)) ^ 0xFFF7FE67);
  LODWORD(v31) = ((2 * ((v47 ^ 0x40FB1E94) + v49 + 1)) & 0xF9DB5AFA) + (((v47 ^ 0x40FB1E94) + v49 + 1) ^ 0xFCEDAD7D);
  v52 = STACK[0x6F8];
  v53 = ((LODWORD(STACK[0x6F8]) - 1202902691) ^ 0xED182BA1)
      - 1679435491
      - ((2 * ((LODWORD(STACK[0x6F8]) - 1202902691) ^ 0xED182BA1)) & 0x37CBB23A);
  v54 = a1 - v31;
  v55 = (((LODWORD(STACK[0x6E0]) + a2) ^ 0x9BE5D91D ^ v53)
       - 655952782
       - ((2 * ((LODWORD(STACK[0x6E0]) + a2) ^ 0x9BE5D91D ^ v53)) & 0xB1CDE8E4)) ^ 0xD8E6F472;
  v56 = ((2 * (v55 + (v32 ^ 0xC2EE16C3))) & 0xDF7FFBA6) + ((v55 + (v32 ^ 0xC2EE16C3)) ^ 0x6FBFFDD3);
  LODWORD(v20) = v50 ^ 0x80 ^ (v9 + 223);
  v57 = ((2 * ((v53 ^ 0x641A26E2) + v55 + 1)) & 0xAB5FEEF6) + (((v53 ^ 0x641A26E2) + v55 + 1) ^ 0xD5AFF77B);
  LODWORD(STACK[0x6E0]) = v57;
  v58 = v28;
  v59 = v43 ^ v50 ^ 0x80;
  v60 = (unsigned __int16)(v28 - 25197) % 0x112u;
  v61 = v48 + 979957622 - 2 * (v48 & 0x3A68F77F ^ v44 & 9);
  LOWORD(v43) = (unsigned __int16)(v28 + 16948) % 0x112u;
  v62 = STACK[0x6DC];
  v63 = (v50 ^ 0x3C) + v11 - 1791876295;
  LODWORD(v35) = LODWORD(STACK[0x6DC])
               - v57
               - 2 * ((LODWORD(STACK[0x6DC]) - v57 + 1266499804) & 0x7736FDDD ^ (LODWORD(STACK[0x6DC]) - v57) & 1)
               - 1028374856;
  *(_DWORD *)(STACK[0x700] + 4 * STACK[0x6C0]) = v20;
  LODWORD(STACK[0x6C0]) = ((2 * ((v35 ^ 0xF736FDDC) + (v53 ^ 0x9BE5D91D))) & 0xAE7BFFEE)
                        + (((v35 ^ 0xF736FDDC) + (v53 ^ 0x9BE5D91D)) ^ 0x573DFFF7);
  LODWORD(v28) = LODWORD(STACK[0x6E4]) + 1607997675;
  v64 = v24 + 3900;
  v65 = v61 ^ v32;
  v66 = v54 - ((2 * v54 - 2131158494) & 0x8E5643FA) - 2019053810;
  v67 = (LODWORD(STACK[0x6E4]) + 1607998106) % 0x3BDu;
  LODWORD(v20) = v47 ^ 0xBF04E16B;
  v68 = v46 + (v61 ^ 0x3A68F776);
  v69 = ((2 * ((v66 ^ 0x472B21FD) + v20)) & 0xD7EBC738) + (((v66 ^ 0x472B21FD) + v20) ^ 0x6BF5E39C);
  v70 = (v59 ^ 0xD8BFFF35) + (v59 ^ 0xDFC6E17F ^ v65);
  LODWORD(STACK[0x6BC]) = v28;
  v71 = (unsigned __int16)STACK[0x6B0];
  v72 = *(unsigned __int8 *)(STACK[0x708] + v64 % 0x3BD);
  STACK[0x6F8] = (unsigned __int16)v43;
  v73 = ((v72 ^ 0x3C) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + v28 % 0x3BD) ^ 0x3C) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + v67) ^ 0x3C) << 8);
  v74 = *(unsigned __int8 *)(STACK[0x708] + ((int)v28 + 862) % 0x3BDu) ^ 0x80;
  v75 = (v73 | v74) - 2 * ((v73 | v74) & 0xF4FEB13 ^ v74 & 2) - 1890587887;
  LODWORD(STACK[0x6DC]) = v75;
  v76 = 20128327 - v62 + ((v62 - 20128327) ^ 0xF886E1B5 ^ v65);
  *(_DWORD *)(STACK[0x700] + 4 * v71) = v65 ^ 0xEED27C5C;
  v77 = v63 + 1536915852 - ((2 * v63 + 177059654) & 0x2CA93BD2);
  v78 = 1202902691 - v52 + ((v70 + 1) ^ (v68 + 1) ^ v76);
  LOWORD(v68) = (unsigned __int16)(v58 + 25084) % 0x112u;
  v79 = (431 * (LODWORD(STACK[0x6E8]) + (v35 & 0x143 ^ 0x140) + (v35 & 0x143 ^ 3)) + 1607886477) % 0x3BD;
  v80 = (v35 ^ 0x8C90223) + (v35 ^ 0x3F52378C ^ v75 ^ v66);
  v81 = *(unsigned __int8 *)(STACK[0x708] + ((int)v26 + 2155) % 0x3BDu) ^ 0x80;
  v82 = *(unsigned __int8 *)(STACK[0x708] + ((int)v26 + 2586) % 0x3BDu) ^ 0x80;
  v83 = *(unsigned __int8 *)(STACK[0x708] + ((int)v26 + 3017) % 0x3BDu);
  LODWORD(v31) = v31 + v51 - ((2 * (v31 + v51) + 1567967964) & 0xCC5C2660) + 350795934;
  v84 = v31 ^ (v54 + 1081904401);
  LODWORD(v71) = v56
               + LODWORD(STACK[0x6E0])
               - ((2 * (v56 + LODWORD(STACK[0x6E0])) + 207665160) & 0x273E4136)
               - 103842657;
  *(_DWORD *)(STACK[0x700] + 4 * v60) = v78 + 1790874393 - ((2 * v78 + 684976736) & 0x2CA93BD2);
  v85 = v84 ^ (v51 + 1781208675);
  LODWORD(STACK[0x6E0]) = v85;
  v86 = ((v56 - 1142926465) ^ 0xC864CA50 ^ v75 ^ v66) - v56 + 1142926465;
  v87 = v69 + ((2 * v31) ^ 0xCC5C2660);
  LODWORD(v20) = v35 ^ v71 ^ (v56 - 94169353);
  LODWORD(STACK[0x6B0]) = v20;
  *(_DWORD *)(STACK[0x700] + 4 * STACK[0x6F8]) = v77;
  LODWORD(STACK[0x6F8]) = (v84 ^ 0xE62E1330)
                        + 1811276700
                        - v87
                        - ((2 * ((v84 ^ 0xE62E1330) + 1811276700 - v87)) & 0x42103396);
  LOWORD(v84) = (unsigned __int16)(v58 - 25084) % 0x112u;
  v88 = STACK[0x6C0];
  v89 = LODWORD(STACK[0x6C0]) + ((2 * v71) ^ 0x273E4136);
  v90 = *(unsigned __int8 *)(STACK[0x708] + v79);
  v91 = (v35 ^ v71 ^ 0xE4A9DD47) + 1463681015 - v89 - ((2 * ((v35 ^ v71 ^ 0xE4A9DD47) + 1463681015 - v89)) & 0x9BD3218);
  *(_DWORD *)(STACK[0x700] + 4 * ((unsigned __int16)(v58 + 32542) % 0x112u)) = v75 ^ v66 ^ 0x23128833;
  v92 = ((2 * ((v20 ^ 0xE4A9DD47) + (v71 ^ 0x139F209B))) & 0xFCEBB52C)
      + (((v20 ^ 0xE4A9DD47) + (v71 ^ 0x139F209B)) ^ 0xFE75DA96);
  LODWORD(v31) = ((2 * ((v85 ^ 0xE62E1330) + (v31 ^ 0xE62E1330))) & 0x8F9F5DFE)
               + (((v85 ^ 0xE62E1330) + (v31 ^ 0xE62E1330)) ^ 0xC7CFAEFF);
  LOWORD(v28) = v58;
  v93 = v58 + 17061;
  v94 = STACK[0x6BC];
  v95 = LODWORD(STACK[0x6BC]) + 1293;
  v96 = LODWORD(STACK[0x6BC]) + 1724;
  LODWORD(v71) = LODWORD(STACK[0x6BC]) + 2155;
  v97 = ((v90 ^ 0x80) << 24) | (v81 << 16) | (v82 << 8) | v83 ^ 0x80;
  v98 = (unsigned __int16)v68;
  STACK[0x6A8] = v93 % 0x112u;
  v99 = v91 + 81697036;
  v100 = LODWORD(STACK[0x6DC]) ^ 0x78791671;
  v101 = v97 ^ v35;
  v102 = (((*(unsigned __int8 *)(STACK[0x708] + v95 % 0x3BD) ^ 0x3C) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + v96 % 0x3BD) ^ 0x3C) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + v71 % 0x3BD) ^ 0x3C) << 8) | *(unsigned __int8 *)(STACK[0x708] + (v94 + 2586) % 0x3BDu) ^ 0x80) ^ (v87 - 1811276700);
  LODWORD(v35) = v102 - ((2 * v102) & 0xB9AAB142) + 1557485729;
  *(_DWORD *)(STACK[0x700] + 4 * v98) = v101 ^ 0xE1626035;
  v103 = (v66 ^ 0x4FE223DE ^ v101 ^ (v51 + 732451563)) + (v100 ^ v101 ^ (v51 + 732451563));
  v104 = STACK[0x6E4];
  v105 = LODWORD(STACK[0x6E4]) + 1608028276;
  LODWORD(v98) = v92 - ((2 * v92 + 797317996) & 0x4A877CDA) - 49886173;
  v106 = (((*(unsigned __int8 *)(STACK[0x708] + ((int)v26 + 3448) % 0x3BDu) ^ 0x80) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + ((int)v26 + 3879) % 0x3BDu) ^ 0x80) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + v105 % 0x3BD) ^ 0x80) << 8) | *(unsigned __int8 *)(STACK[0x708] + (LODWORD(STACK[0x6E4]) + 1608028707) % 0x3BDu) ^ 0x80) ^ (v89 - 1463681015);
  LODWORD(v26) = ((v80 + 1) ^ v86 ^ (v103 + 1)) - v88;
  v107 = v106 + 374644201 - ((2 * v106) & 0x2CA93BD2);
  *(_DWORD *)(STACK[0x700] + 4 * (unsigned __int16)v84) = v69
                                                          - 1811276700
                                                          + (v101 ^ 0xF736FDDC)
                                                          + 1790874393
                                                          - ((2 * (v69 - 1811276700 + (v101 ^ 0xF736FDDC)) + 684976736) & 0x2CA93BD2);
  v108 = v31 - ((2 * v31 + 483553946) & 0xD26B7BB2);
  v109 = STACK[0x6B0];
  LODWORD(STACK[0x6DC]) = v98 ^ v99;
  *(_DWORD *)(STACK[0x700] + 4 * STACK[0x6A8]) = v26 - ((2 * v26 + 956938036) & 0x2CA93BD2) - 1294370429;
  STACK[0x6C0] = (unsigned __int16)(v28 + 17174) % 0x112u;
  v110 = ((*(unsigned __int8 *)(STACK[0x708] + (v94 + 3017) % 0x3BDu) ^ 0x3C) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + (v94 + 3448) % 0x3BDu) ^ 0x3C) << 16);
  *(_DWORD *)(STACK[0x700] + 4 * ((unsigned __int16)(v28 + 32655) % 0x112u)) = v35 ^ 0xB7A31A7E;
  v111 = (v94 + 3879) % 0x3BDu;
  v112 = LODWORD(STACK[0x6F8]) + 554179019;
  v113 = (v108 + 2006906662) ^ v112;
  v114 = ((v108 + 2006906662) ^ 0x6935BDD9)
       + v87
       - 1811276700
       - ((2 * (((v108 + 2006906662) ^ 0x6935BDD9) + v87 - 1811276700)) & 0x78AF5D1A);
  v115 = ((v99 ^ 0xFB2166F3) + (v99 ^ 0x580BC111 ^ v35) + 1) ^ ((v109 ^ 0x1B5622B8) + (v109 ^ 0xB87C855A ^ v35) + 1) ^ ((v112 ^ LODWORD(STACK[0x6E0]) ^ v107 ^ 0x2E8D68ED) + (v35 ^ 0x8DA7CF0F ^ v112 ^ LODWORD(STACK[0x6E0]) ^ v107) + 1);
  LODWORD(v71) = (v107 ^ 0x16549DE9)
               + v87
               - 1811276700
               + 1536915852
               - ((2 * ((v107 ^ 0x16549DE9) + v87 - 1811276700) + 177059654) & 0x2CA93BD2);
  v116 = LODWORD(STACK[0x6E0]) ^ 0x678A581E;
  v117 = v92 - ((2 * v92 + 843405458) & 0x2192FA00) - 370398903;
  v118 = v31 - 2 * ((v31 + 264820704) & 0x35D50FBB ^ v31 & 0x13) - 979507320;
  LODWORD(v31) = (v110 | ((*(unsigned __int8 *)(STACK[0x708] + v111) ^ 0x3C) << 8) | *(unsigned __int8 *)(STACK[0x708] + (v104 + 1608001985) % 0x3BDu) ^ 0x80) ^ v118;
  v119 = ((*(unsigned __int8 *)(STACK[0x708] + (v105 + 862) % 0x3BD) ^ 0x80) << 24) | ((*(unsigned __int8 *)(STACK[0x708] + (v105 + 1293) % 0x3BD) ^ 0x80) << 16) | ((*(unsigned __int8 *)(STACK[0x708] + (v105 + 1724) % 0x3BD) ^ 0x80) << 8) | *(unsigned __int8 *)(STACK[0x708] + (v105 + 2155) % 0x3BD) ^ 0x80;
  v120 = STACK[0x6E8];
  v121 = LODWORD(STACK[0x6E8]) + 1912051343;
  *(_DWORD *)(STACK[0x700] + 4 * ((unsigned __int16)(v28 + 25197) % 0x112u)) = v107;
  v122 = v119 ^ v117;
  v123 = ((235432304 - v120) & 0x4FFA1729 ^ v121 & 0x4FFA1720) - 1341789993 + (v113 ^ 0x1A5A9880);
  *(_DWORD *)(STACK[0x700] + 4 * ((unsigned __int16)(v28 - 24971) % 0x112u)) = v115
                                                                               - v89
                                                                               - ((2 * (v115 - v89) + 391113294) & 0x2CA93BD2)
                                                                               - 1040411888;
  v124 = v109;
  v125 = (v123 - ((2 * v123) & 0x90A8516E) - 934008649) ^ v116 ^ v122;
  v126 = STACK[0x6DC];
  v127 = (v126 ^ 0x8C05E40C) + (v126 ^ 0xC62F14E7 ^ v31) + 1;
  v128 = ((2 * v127) & 0x6DF6EC7A) + (v127 ^ 0x36FB763D);
  HIDWORD(v130) = v128 + 67;
  LODWORD(v130) = v128 - 922449469;
  v129 = v130 >> 7;
  v114 -= 1135104371;
  *(_DWORD *)(STACK[0x700] + 4 * (unsigned __int16)STACK[0x6C0]) = v71;
  v131 = (v122 ^ 0x10C97D00) + (v114 ^ 0xEC26B09F);
  LODWORD(v130) = __ROR4__(((v125 ^ 0xEF3682FF) + (v31 ^ 0xA51C7214 ^ v125) + 1) ^ ((v109 ^ 0x52A64121)+ (v109 ^ 0x188CB1CA ^ v31)+ 1), 7);
  HIDWORD(v130) = v129 ^ v130 ^ 0x16973EB;
  LODWORD(v130) = v129 ^ v130 ^ 0xF8000000;
  v132 = (v98 ^ 0x2543BE6D)
       + v89
       - 1463681015
       - ((2 * ((v98 ^ 0x2543BE6D) + v89 - 1463681015)) & 0xE2690F12)
       + 1899267977;
  LODWORD(v35) = v114 ^ v116;
  *(_DWORD *)(STACK[0x700] + 4 * (((unsigned __int16)v28 ^ 0x8000u) % 0x112)) = v31 ^ 0x5EA34D77;
  v133 = (v35 ^ 0x24729828) - ((2 * (v35 ^ 0x24729828) + 609772064) & 0x72DD77DE) + 1268444415;
  *(_DWORD *)(STACK[0x700] + 4 * ((unsigned __int16)(v28 + 25310) % 0x112u)) = v122 ^ LODWORD(STACK[0x580]);
  v134 = (v132 ^ 0xDEBA6664) + ((v130 >> 25) ^ 0xB4B9F5FC) + 1;
  v135 = (v132 ^ 0x2145999B) + (v117 ^ 0x10C97D00);
  v136 = ((2 * ((v114 ^ 0x2DFFDAE8) + (v113 ^ 0x1A5A9880))) & 0xCD9F56F6)
       + (((v114 ^ 0x2DFFDAE8) + (v113 ^ 0x1A5A9880)) ^ 0x66CFAB7B);
  v137 = ((2 * v133) & 0xDBA79DE0 ^ 0x528515C0) + (v133 ^ 0xD4BD751F);
  v138 = (v114 ^ 0xEC26B09F)
       + (v118 ^ 0xB5D50FA8)
       - ((2 * ((v114 ^ 0xEC26B09F) + (v118 ^ 0xB5D50FA8))) & 0xC6671A34)
       - 483160806;
  *(_DWORD *)(STACK[0x700] + 4 * ((unsigned __int16)(v28 - 24858) % 0x112u)) = v131
                                                                               + 1790874393
                                                                               - 2
                                                                               * ((v131 + 342488368) & 0x16549DED ^ v131 & 4);
  LODWORD(v26) = (v132 ^ 0xE09CF3EC) + (v126 ^ 0x73FA1BF3);
  LODWORD(v98) = STACK[0x6C8];
  v139 = (LODWORD(STACK[0x6C8]) + 467959671) & 0x13D8365D;
  v140 = (v138 ^ v35 ^ 0x4F87CE13)
       + (v114 ^ 0x10236A22 ^ (v137 + 1037873354 - 2 * (v137 & 0x3DDCB0DF ^ (v133 ^ 0xD4BD751F) & 0x15)))
       - 1117359805
       - ((2
         * ((v138 ^ v35 ^ 0x4F87CE13)
          + (v114 ^ 0x10236A22 ^ (v137 + 1037873354 - 2 * (v137 & 0x3DDCB0DF ^ (v133 ^ 0xD4BD751F) & 0x15)))
          + 1)) & 0x7ACCE284);
  v141 = (v135 ^ 0x773924DE) - v26 - ((2 * ((v135 ^ 0x773924DE) - v26) + 1059557962) & 0x3ABDC066);
  LODWORD(v20) = (v124 ^ 0x6C80D4A9)
               + (v132 ^ v124 ^ v135 ^ 0x4DAFC64)
               - 173135038
               - (STACK[0x57C] & (2 * ((v124 ^ 0x6C80D4A9) + (v132 ^ v124 ^ v135 ^ 0x4DAFC64) + 1)));
  v142 = STACK[0x708];
  *(_DWORD *)(STACK[0x700]
            + 4
            * ((unsigned __int16)((v113 & 0x70 ^ 0x71 ^ ((v113 ^ 0xB)
                                                       + (v113 | 0x74)
                                                       + 1) & 0x79)
                                * (LODWORD(STACK[0x6C8]) + 32631))
             % 0x112u)) = ((2 * v134) & 0xDFDDF4FE)
                        + (v134 ^ 0x6FEEFA7F)
                        - ((2 * (((2 * v134) & 0xDFDDF4FE) + (v134 ^ 0x6FEEFA7F)) + 716161608) & 0x2CA93BD2)
                        - 341016819;
  v143 = ((v141 + 485665112) ^ 0x62A11FCC) + (v20 ^ 0xF5AE2B41) + 1;
  v144 = (((v138 ^ 0x940AA9C4) - v136 - ((2 * ((v138 ^ 0x940AA9C4) - v136) + 1288104256) & 0x56C158D8) - 1849417460) ^ 0x549F5393)
       + (v140 ^ 0xBD667142);
  v145 = ((2 * v143) & 0xEF77ADC6) + (v143 ^ 0x77BBD6E3);
  LODWORD(v26) = v26 - v145;
  v146 = v145 - 805896256;
  v147 = (uint64_t (*)(_QWORD, uint64_t, uint64_t, unint64_t, uint64_t, _QWORD, uint64_t, _QWORD))(*(_QWORD *)(STACK[0x6D0] + 8 * ((2019 * ((v98 - 605782152) < 0x10)) ^ LODWORD(STACK[0x6F0]))) - 12);
  LODWORD(STACK[0x6E4]) = 16;
  return v147(v139- ((235432304 - v120) & 0x63D24D86 ^ v121 & 0x63D24D80)+ ((68911240 - (_DWORD)v98) & 0x13D8365C)+ v136- (((2 * (v144 + 1)) & 0xDDFFBDBE)+ ((v144 + 1) ^ 0xEEFFDEDF))+ 201854332, 3389471699, 1076397510, v142, v146, (v26 - 111464443), 431, ((v141 + 485665112) ^ 0x9798C6A) - 1107311426 + ((2 * (v141 + 485665112)) & 0xEFF1EB7E ^ 0xED00E32A) + 2480);
}

void sub_24783CD1C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, int a5, int a6)
{
  int v6;
  unsigned int v7;

  LODWORD(STACK[0x6E0]) = a3;
  LODWORD(STACK[0x6E8]) = (LODWORD(STACK[0x6F0]) - 91) | 0x82;
  LODWORD(STACK[0x6F8]) = a5;
  v7 = (a5 + a6 - ((2 * (a5 + a6) + 775163436) & 0x304F6E6A) - 817775029) ^ ((v6 ^ 0xC2EE16C3) - 683168907) ^ 0x1827B735;
  LODWORD(STACK[0x6DC]) = v7 - ((2 * v7 - 1011740800) & 0xF98BB7B8) + 1587471260;
  JUMPOUT(0x24783D250);
}

uint64_t sub_24783E8B0(uint64_t a1, int a2)
{
  int v2;
  int v3;
  uint64_t v4;

  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * ((404 * (((v2 + 647851361 == v3) ^ a2) & 1)) ^ a2))
                            - (a2 + 1020)
                            + 2801))();
}

uint64_t sub_24783E904@<X0>(int a1@<W3>, int a2@<W8>)
{
  int v2;
  unsigned int v3;
  unsigned int v4;
  int v5;
  int v6;
  unsigned int v7;
  int v8;
  int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _BOOL4 v13;

  v13 = v3 < v4;
  *(_BYTE *)(v11 + (v6 + 1908795749 * a2) % (((v2 ^ v5) * a1) ^ v7)) = *(_BYTE *)(v12 + (v9 - 776856685));
  if (v13 == v4 > 0xED216A81)
    v13 = v3 > 0xED216A81;
  return ((uint64_t (*)(void))(*(_QWORD *)(v10 + 8 * ((v13 * v8) ^ (v2 - 1020))) - 4))();
}

void sub_24783E988()
{
  JUMPOUT(0x24783E918);
}

uint64_t sub_24783E990(uint64_t a1, int a2, uint64_t a3, uint64_t a4, unsigned int a5, uint64_t a6, int a7)
{
  int v7;
  unsigned int v8;
  int v9;
  uint64_t result;
  uint64_t v11;
  _BYTE *v12;
  char v13;
  unsigned int v14;
  int v15;
  int v16;
  int v17;
  unsigned int v18;
  unsigned int v19;
  int v20;
  unsigned int v21;
  unsigned int v22;
  unsigned int v23;

  *v12 = ((a7 ^ v22) >> 24) ^ 0xEB;
  v12[4] = ((v20 ^ v21) >> (v13 - 27)) ^ 0x17;
  v12[8] = ((v17 ^ v19) >> 24) ^ 0x3C;
  v12[12] = ((v16 ^ v18) >> 24) ^ 0x5A;
  v12[16] = ((v7 ^ v14) >> 24) ^ 0xA4;
  v12[20] = ((v15 ^ v23) >> 24) ^ 0xEC;
  v12[24] = ((a2 ^ a5) >> 24) ^ 0x35;
  v12[28] = ((v9 ^ v8) >> 24) ^ 0x6E;
  v12[5] = ((v20 ^ v21) >> 16) ^ 0x97;
  v12[21] = ((v15 ^ v23) >> 16) ^ 0xD;
  v12[9] = ((v17 ^ v19) >> 16) ^ 0x13;
  v12[1] = ((a7 ^ v22) >> 16) ^ 6;
  v12[17] = ((v7 ^ v14) >> 16) ^ 0x8C;
  v12[13] = ((v16 ^ v18) >> 16) ^ 0x5F;
  v12[29] = ((v9 ^ v8) >> 16) ^ 0x21;
  v12[25] = ((a2 ^ a5) >> 16) ^ 0x37;
  v12[6] = ((unsigned __int16)(v20 ^ v21) >> 8) ^ 0x45;
  v12[14] = ((unsigned __int16)(v16 ^ v18) >> 8) ^ 0x1D;
  v12[18] = ((unsigned __int16)(v7 ^ v14) >> 8) ^ 3;
  v12[2] = ((unsigned __int16)(a7 ^ v22) >> 8) ^ 0xBC;
  v12[10] = ((unsigned __int16)(v17 ^ v19) >> 8) ^ 0xC8;
  v12[22] = ((unsigned __int16)(v15 ^ v23) >> 8) ^ 0xA7;
  result = 104;
  v12[26] = ((unsigned __int16)(a2 ^ a5) >> 8) ^ 0xF7;
  v12[30] = ((unsigned __int16)(v9 ^ v8) >> 8) ^ 0x68;
  v12[3] = a7 ^ v22 ^ 0xD8;
  v12[7] = v20 ^ v21 ^ 0xD;
  v12[15] = v16 ^ v18 ^ 0x68;
  v12[11] = v17 ^ v19 ^ 0xDF;
  v12[19] = v7 ^ v14 ^ 0x75;
  v12[23] = v15 ^ v23 ^ 0xB3;
  v12[27] = a2 ^ a5 ^ 0xA1;
  v12[31] = v9 ^ v8 ^ 0x46;
  *(_DWORD *)(v11 + 8) = 1474860486;
  return result;
}

void sub_24783EBAC(uint64_t a1)
{
  int v1;

  v1 = ((*(_DWORD *)(a1 + 8) ^ (1401278017 * ((a1 & 0x2D3769D8 | ~(a1 | 0x2D3769D8)) ^ 0x56EBE0C0))) - 1147355330) & 0x44633B7A;
  __asm { BR              X19 }
}

uint64_t sub_24783EDFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, int a8)
{
  int v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * ((((v8 ^ a6) + a8 == ((v8 - 560) | 0x10) - 1151) * a7) ^ v8)) - 8))();
}

uint64_t sub_24783EE34(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  int v16;
  int v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int v24;
  int v25;
  int v26;
  uint64_t v27;

  v24 = v17 - v16;
  *(_DWORD *)(a11 - 0x7E898A58A7A2E78) = 413855295 - v18;
  v25 = 142545853 * (((((v22 - 136) | 0xF8588DA0) ^ 0xFFFFFFFE) - (~(v22 - 136) | 0x7A7725F)) ^ 0x2D58DD30);
  *(_QWORD *)(v22 - 136) = v23;
  *(_DWORD *)(v22 - 128) = v25 ^ 0x2F27B638;
  *(_DWORD *)(v22 - 124) = v25 + v20 + 122;
  sub_24789484C(v22 - 136);
  v26 = 31090337 * ((2 * ((v22 - 136) & 0x4D93B448) - (v22 - 136) - 1301525583) ^ 0x75ED2BF8);
  *(_DWORD *)(v22 - 136) = v26
                         + ((((v20 - 1175571632) & 0x4611CF3B) + 29497170) ^ v24)
                         + ((v24 << ((v20 ^ 0x44) + 38)) & 0xBED79FC0 ^ 0xBC538300)
                         + 1878816330;
  *(_QWORD *)(v22 - 128) = v23;
  *(_DWORD *)(v22 - 120) = (v20 + 1823) ^ v26;
  sub_2478617B0(v22 - 136);
  *(_QWORD *)(v22 - 136) = &STACK[0x1960A8AE33B1FF2B];
  *(_QWORD *)(v22 - 128) = a16;
  *(_DWORD *)(v22 - 120) = v20
                         + 476588053
                         * ((-229077808 - ((v22 - 136) | 0xF2588CD0) + ((v22 - 136) | 0xDA7732F)) ^ 0xB05A776C)
                         + 1644;
  sub_2478AA724(v22 - 136);
  *(_QWORD *)(v22 - 120) = a16;
  *(_QWORD *)(v22 - 136) = v23;
  *(_DWORD *)(v22 - 124) = (v20 + 217) ^ (366490169
                                        * (((v22 - 136) & 0xC5AAC06E | ~((v22 - 136) | 0xC5AAC06E)) ^ 0x2CFB69D5));
  v27 = (*(uint64_t (**)(uint64_t))(v21 + 8 * (v20 ^ 0x48D)))(v22 - 136);
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v19
                                                      + 8
                                                      * ((54
                                                        * ((*(_DWORD *)(v22 - 128) - 2118526522) < 0x88120643)) ^ v20))
                                          - 4))(v27);
}

uint64_t sub_24783F0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  _BOOL4 v21;

  *(_DWORD *)(v19 - 120) = v18 + 476588053 * ((v19 - 136) ^ 0xBDFD0443) + 560;
  *(_QWORD *)(v19 - 136) = a16;
  *(_QWORD *)(v19 - 128) = v16;
  v20 = sub_2478AA724(v19 - 136);
  v21 = ~a13 >= 0 && a13 != 0xDEA9D183;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v17 + 8 * (v18 ^ (945 * v21)))
                                          - ((((v18 + 359) | 0x128u) - 1195) ^ 0x6B7)))(v20);
}

uint64_t sub_24783F13C@<X0>(int a1@<W8>)
{
  int v1;
  int v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * (((((((v4 + 2) ^ (2 * a1)) + v2 - (v4 & (2 * ((v4 + 2) ^ (2 * a1))))) ^ v2) > v1)
                                          * (157 * (v5 ^ 0xB61) - 666)) ^ v5))
                            - 8))();
}

uint64_t sub_24783F184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16)
{
  uint64_t (*v16)(uint64_t);
  uint64_t v17;
  int v18;
  uint64_t v19;
  int v20;
  uint64_t v21;

  *(_DWORD *)(v19 - 120) = v18
                         + 476588053 * (((v19 - 136) & 0x1B40E67A | ~((v19 - 136) | 0x1B40E67A)) ^ 0x59421DC6)
                         + 1100;
  *(_QWORD *)(v19 - 136) = a14;
  *(_QWORD *)(v19 - 128) = a16;
  sub_2478AA724(v19 - 136);
  v20 = 31090337
      * ((((v19 - 136) ^ 0x5D34B421) - 784878196 - 2 * (((v19 - 136) ^ 0x5D34B421) & 0xD137B58C)) ^ 0x4B8261E4);
  *(_DWORD *)(v19 - 136) = v20 + 1332233801;
  *(_DWORD *)(v19 - 120) = (v18 + 1279) ^ v20;
  *(_QWORD *)(v19 - 128) = a15;
  sub_2478617B0(v19 - 136);
  *(_DWORD *)(v19 - 124) = (v18 - 327) ^ (366490169
                                        * ((2 * ((v19 - 136) & 0x5331A0E0) - (v19 - 136) - 1395761378) ^ 0xBA60095A));
  *(_QWORD *)(v19 - 136) = a15;
  *(_QWORD *)(v19 - 120) = a16;
  v21 = v16(v19 - 136);
  return (*(uint64_t (**)(uint64_t))(v17
                                            + 8
                                            * (((*(_DWORD *)(v19 - 128) > 0x7E462639u)
                                              * (((v18 - 1548544486) & 0x5C4CEF67) - 2989)) ^ (v18 + 1875))))(v21);
}

uint64_t sub_24783F610(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, int a12, int a13)
{
  uint64_t v13;
  int v14;

  return (*(uint64_t (**)(void))(v13
                              + 8
                              * (v14 | (32
                                      * (((2 * a13) & 0xF74CFB96)
                                                     + 2086268736
                                                     + ((((v14 - 1410) ^ 0xFBA66932) + v14 + 509) ^ a13)
                                                     - 2013293837 < 0x7FFFFFFE)))))();
}

void sub_24783FF68(uint64_t a1)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  _BYTE v4[4161];
  uint64_t v5;

  v1 = MEMORY[0x24BDAC7A8](a1);
  v5 = *MEMORY[0x24BDAC8D0];
  v2 = *(_DWORD *)(v1 + 4) ^ (1314530549 * ((-504253033 - (v1 | 0xE1F1B597) + (v1 | 0x1E0E4A68)) ^ 0xAF07CCA6));
  sub_2478B1548(v4, 0, 0x1001uLL);
  v3 = *(_QWORD *)((char *)off_2518F0F80[v2 ^ 0xF79]
                 + 8
                 * ((210
                   * ((((v2 - 2177) ^ (v2 - 386680885) ^ (off_2518F0F80[v2 ^ 0xF5F](8, 0x1000040789AEA99) == 0)) & 1) == 0)) ^ v2)
                 - 4);
  __asm { BR              X8 }
}

uint64_t sub_2478401DC(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  uint64_t v33;
  unint64_t v34;

  STACK[0x820] = a1;
  *(_DWORD *)a1 = 1433938634;
  *(_WORD *)(a1 + 4) = 2638;
  v33 = a32(120, 0x1000040F604211FLL);
  v34 = STACK[0x258];
  STACK[0x368] = v33;
  return (*(uint64_t (**)(void))(v34
                              + 8 * (((v33 != 0) * ((((v32 - 1602) | 0x42) + 3536) ^ ((v32 + 1153) | 0x400))) ^ v32)))();
}

uint64_t sub_247840250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  unint64_t v9;
  uint64_t v10;

  *(_DWORD *)a1 = *(_DWORD *)v7;
  *(_BYTE *)(a1 + 4) = *(_BYTE *)(v7 + 4);
  *(_BYTE *)(a1 + 5) = *(_BYTE *)(v7 + 5);
  v9 = STACK[0x368];
  memset((void *)(STACK[0x368] + 8), 56, 48);
  v10 = *(_QWORD *)(a7 + 8 * ((v8 ^ 0xF81) - 3758)) - 4;
  *(int64x2_t *)&STACK[0x340] = vdupq_n_s64(0x3AC18ED873377AE2uLL);
  *(int64x2_t *)&STACK[0x350] = vdupq_n_s64(0xF8FFFFFFFFFFFFFFLL);
  *(int64x2_t *)&STACK[0x230] = vdupq_n_s64(0xC1A6A9F657F611DBLL);
  *(int64x2_t *)&STACK[0x240] = vdupq_n_s64(0x38uLL);
  *(int64x2_t *)&STACK[0x220] = vdupq_n_s64(0x453E71278CC8851DuLL);
  *(int64x2_t *)&STACK[0x320] = vdupq_n_s64(0xFD3D77B3EF515DE5);
  *(int64x2_t *)&STACK[0x330] = vdupq_n_s64(0x3E595609A809EE24uLL);
  *(int64x2_t *)&STACK[0x200] = vdupq_n_s64(0x9CFE2E09EEFB82BFLL);
  *(int64x2_t *)&STACK[0x210] = vdupq_n_s64(0x2B31017076EA8AF0uLL);
  *(int64x2_t *)&STACK[0x300] = vdupq_n_s64(0x5C617A278C1C2552uLL);
  *(int64x2_t *)&STACK[0x310] = vdupq_n_s64(0x65D635198E042EABuLL);
  *(int64x2_t *)&STACK[0x2E0] = vdupq_n_s64(0xEF0FD471BC60116FLL);
  *(int64x2_t *)&STACK[0x2F0] = vdupq_n_s64(0x51CF42EC39F1ED57uLL);
  STACK[0x8D0] = v10;
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(a7 + 8 * (((v8 ^ 0xF81) - 3395) | 0xB))
                                                   - ((((v8 ^ 0xF81) - 3395) | 0xBu)
                                                    + 37)
                                                   + 552))(v9 + 0x1117C187AE71C435);
}

uint64_t sub_2478406A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v20 = a1 + v11 - 0x43D60E1DFAC05C5ALL;
  v21 = (v10 ^ 0xF800000000000230) & (v20 << 56) & 0xFF00000000000000 | (v20 >> 8);
  v22 = v9
      - (((0x453E71278CC8851DLL - v21) | 0x3E595609A809EE24)
       + ((v21 + 0x3AC18ED873377AE2) | 0xC1A6A9F657F611DBLL));
  v23 = v22 ^ 0x2B31017076EA8AF0;
  v22 ^= 0xFD3D77B3EF515DE5;
  v24 = (__ROR8__(v23, 8) + v22) ^ 0x9CFE2E09EEFB82BFLL;
  v25 = v24 ^ __ROR8__(v22, 61);
  v26 = __ROR8__(v24, 8);
  v27 = (v26 + v25 - ((2 * (v26 + v25)) & 0x7C255F929F9AB06ALL) + 0x3E12AFC94FCD5835) ^ 0x65D635198E042EABLL;
  v28 = v27 ^ __ROR8__(v25, 61);
  v29 = __ROR8__(v27, 8);
  v30 = __ROR8__((v9 - ((~(v29 + v28) | 0x6664592ACB51CFBDLL) + ((v29 + v28) | 0x999BA6D534AE3042))) ^ 0x6C05F17A465F74CLL, 8);
  v31 = (v9 - ((~(v29 + v28) | 0x6664592ACB51CFBDLL) + ((v29 + v28) | 0x999BA6D534AE3042))) ^ 0x6C05F17A465F74CLL ^ __ROR8__(v28, 61);
  v32 = (v30 + v31) ^ 0x6142B6E553347FF5;
  v33 = v32 ^ __ROR8__(v31, 61);
  v34 = __ROR8__(v32, 8);
  v35 = ((v16 | (2 * (v34 + v33))) - (v34 + v33) + v7) ^ v13;
  v36 = v35 ^ __ROR8__(v33, 61);
  v37 = __ROR8__(v35, 8);
  v38 = (0x10F02B8E439FEE90 - ((v37 + v36) | 0x10F02B8E439FEE90) + ((v37 + v36) | v18)) ^ v15;
  v39 = v38 ^ __ROR8__(v36, 61);
  v40 = __ROR8__(v38, 8);
  *(_BYTE *)(v20 + v12) = ((v9 - ((v17 | ~(v40 + v39)) + ((v40 + v39) | v19))) ^ v14) >> (8 * ((a1 + v11 - 90) & 7));
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (int)((1477 * (v11 + 1 != v8)) | v10)) - 8))();
}

uint64_t sub_2478408CC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,int8x16_t a43,int8x16_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,int8x16_t a49,int8x16_t a50,int8x16_t a51,int8x16_t a52,int8x16_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,int8x16_t a58)
{
  uint64_t v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int8x16_t v68;
  int8x16_t v69;
  int8x16_t v70;
  int64x2_t v71;
  int64x2_t v72;
  int64x2_t v73;
  int64x2_t v74;
  int64x2_t v75;
  unint64_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int8x16_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int64x2_t v84;
  int64x2_t v85;
  int8x16_t v86;
  int64x2_t v87;
  int8x16_t v88;
  int8x16_t v89;
  int64x2_t v90;
  int8x16_t v91;
  int64x2_t v92;
  int64x2_t v93;
  int8x16_t v94;
  int8x16_t v95;
  int8x16_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int64x2_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int64x2_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int8x16_t v111;
  int8x16_t v112;
  int64x2_t v113;
  int64x2_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int64x2_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int64x2_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int8x16_t v127;
  int8x16_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int8x16_t v131;
  int8x16_t v132;
  int8x16_t v133;
  int8x16_t v134;
  int8x16_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int64x2_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int64x2_t v141;
  int64x2_t v142;
  int8x16_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int64x2_t v149;
  int64x2_t v150;
  int8x16_t v151;
  int64x2_t v152;
  int8x16_t v153;
  int8x16_t v154;
  int64x2_t v155;
  int64x2_t v156;
  int64x2_t v157;
  int64x2_t v158;
  int64x2_t v159;
  int64x2_t v160;
  int64x2_t v161;
  int8x16_t v162;
  int64x2_t v163;
  int64x2_t v164;
  int64x2_t v165;
  int64x2_t v166;
  int64x2_t v167;
  int64x2_t v168;
  int64x2_t v169;
  int8x16_t v170;
  int64x2_t v171;
  int64x2_t v172;
  int64x2_t v173;
  int64x2_t v174;
  int64x2_t v175;
  int64x2_t v176;
  int64x2_t v177;
  int64x2_t v178;
  int64x2_t v179;
  int8x16_t v180;
  int8x16_t v181;
  int8x16_t v182;
  int64x2_t v183;
  int64x2_t v184;
  int64x2_t v185;
  int64x2_t v186;
  int64x2_t v187;
  int64x2_t v188;
  int64x2_t v189;
  int8x16_t v190;
  int64x2_t v191;
  int64x2_t v192;
  int64x2_t v193;
  int64x2_t v194;
  int64x2_t v195;
  int64x2_t v196;
  int64x2_t v197;
  int8x16_t v198;
  int64x2_t v199;
  int8x16_t v200;
  int8x16_t v201;
  int64x2_t v202;
  int64x2_t v203;
  int64x2_t v204;
  int64x2_t v205;
  int64x2_t v206;
  int64x2_t v207;
  int64x2_t v208;
  int8x16_t v209;
  int64x2_t v210;
  int64x2_t v211;
  int64x2_t v212;
  int64x2_t v213;
  int64x2_t v214;
  int64x2_t v215;
  int64x2_t v216;
  int8x16_t v217;
  int64x2_t v218;
  int8x16_t v219;
  int8x16x4_t v221;

  v72.i64[0] = a1 + (v60 | 2);
  v72.i64[1] = a1 + (v60 | 3);
  v73 = v72;
  v72.i64[0] = a1 + (v60 | 4);
  v72.i64[1] = a1 + (v60 | v65);
  v74 = v72;
  v72.i64[0] = a1 + (v60 | 6);
  v72.i64[1] = a1 + (v60 | 7);
  v75 = v72;
  v76 = STACK[0x258];
  v72.i64[0] = a1 + (v60 | a2);
  v72.i64[1] = a1 + (v60 | 0xB);
  v77 = v72;
  v78.i64[0] = a1 + (v60 | 8);
  v78.i64[1] = a1 + (v60 | v64);
  v79.i64[0] = a1 + (v60 | 0xC);
  v79.i64[1] = a1 + (v60 | v58);
  v80.i64[0] = a1 + (v60 | 0xE);
  v80.i64[1] = a1 + (v60 | 0xF);
  v81 = *(int8x16_t *)&STACK[0x350];
  v82 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v80, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 8uLL)), *(int8x16_t *)&STACK[0x350]);
  v83 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), *(int8x16_t *)&STACK[0x350]);
  *(int64x2_t *)&STACK[0x260] = v77;
  v84 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v78, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v78, 8uLL)), v81);
  *(int64x2_t *)&STACK[0x2B0] = v74;
  *(int64x2_t *)&STACK[0x2C0] = v75;
  v85 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v77, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 8uLL)), v81);
  *(int64x2_t *)&STACK[0x2D0] = v73;
  *(int8x16_t *)&STACK[0x290] = vorrq_s8((int8x16_t)vshlq_n_s64(v73, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v73, 8uLL));
  *(int8x16_t *)&STACK[0x2A0] = vorrq_s8((int8x16_t)vshlq_n_s64(v75, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v75, 8uLL));
  v86 = *(int8x16_t *)&STACK[0x330];
  v87 = *(int64x2_t *)&STACK[0x340];
  v88 = (int8x16_t)vaddq_s64(v84, *(int64x2_t *)&STACK[0x340]);
  v89 = (int8x16_t)vaddq_s64(v83, *(int64x2_t *)&STACK[0x340]);
  v90 = *(int64x2_t *)&STACK[0x220];
  v91 = *(int8x16_t *)&STACK[0x230];
  v92 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(*(int64x2_t *)&STACK[0x220], v85), *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v85, *(int64x2_t *)&STACK[0x340]), *(int8x16_t *)&STACK[0x230]));
  *(int8x16_t *)&STACK[0x270] = vorrq_s8((int8x16_t)vshlq_n_s64(v74, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v74, 8uLL));
  *(int64x2_t *)&STACK[0x280] = v92;
  v93 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v84), v86), (int64x2_t)vorrq_s8(v88, v91));
  v94 = (int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v82), v86), (int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v82, v87), v91)));
  v95 = (int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v83), v86), (int64x2_t)vorrq_s8(v89, v91)));
  v96 = *(int8x16_t *)&STACK[0x200];
  v97 = (int64x2_t)veorq_s8(v95, *(int8x16_t *)&STACK[0x210]);
  v98 = (int64x2_t)veorq_s8(v94, *(int8x16_t *)&STACK[0x210]);
  v99 = (int64x2_t)veorq_s8(v94, *(int8x16_t *)&STACK[0x320]);
  v100 = (int64x2_t)veorq_s8(v95, *(int8x16_t *)&STACK[0x320]);
  v101 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v98, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 8uLL)), v99), *(int8x16_t *)&STACK[0x200]);
  v102 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v100), *(int8x16_t *)&STACK[0x200]);
  v103 = (int64x2_t)veorq_s8((int8x16_t)v102, vorrq_s8((int8x16_t)vshlq_n_s64(v100, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 0x3DuLL)));
  v104 = (int64x2_t)veorq_s8((int8x16_t)v101, vorrq_s8((int8x16_t)vshlq_n_s64(v99, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v99, 0x3DuLL)));
  v105 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v101, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 8uLL)), v104);
  v106 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v102, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v102, 8uLL)), v103);
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v106, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v106, v106), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v108 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v105, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v105, v105), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v109 = (int64x2_t)veorq_s8((int8x16_t)v108, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v110 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v103, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 0x3DuLL)));
  v111 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v110);
  v112 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v108, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 8uLL)), v109);
  v113 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v111), (int64x2_t)vorrq_s8(v111, a53))), a51);
  v114 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v112), (int64x2_t)vorrq_s8(v112, a53))), a51);
  v115 = (int64x2_t)veorq_s8((int8x16_t)v114, vorrq_s8((int8x16_t)vshlq_n_s64(v109, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 0x3DuLL)));
  v116 = (int64x2_t)veorq_s8((int8x16_t)v113, vorrq_s8((int8x16_t)vshlq_n_s64(v110, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 0x3DuLL)));
  v117 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v114, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v114, 8uLL)), v115), v70);
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v113, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v113, 8uLL)), v116), v70);
  v119 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v120 = (int64x2_t)veorq_s8((int8x16_t)v117, vorrq_s8((int8x16_t)vshlq_n_s64(v115, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 0x3DuLL)));
  v121 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v117, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v117, 8uLL)), v120);
  v122 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119);
  v123 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v122, v122), *(int8x16_t *)&STACK[0x300]), v122), *(int64x2_t *)&STACK[0x2F0]), a50);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v121, v121), *(int8x16_t *)&STACK[0x300]), v121), *(int64x2_t *)&STACK[0x2F0]), a50);
  v125 = (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v120, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v120, 0x3DuLL)));
  v126 = (int64x2_t)veorq_s8((int8x16_t)v123, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v127 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v123, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v123, 8uLL)), v126);
  v128 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125);
  v129 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v127, *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v127, (int8x16_t)v66)), v66), a49);
  v130 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v128, *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v128, (int8x16_t)v66)), v66), a49);
  v131 = (int8x16_t)vsubq_s64(v67, v93);
  v132 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v129, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v129, vorrq_s8((int8x16_t)vshlq_n_s64(v126, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 0x3DuLL))));
  v133 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v130, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL))));
  v134 = *(int8x16_t *)&STACK[0x240];
  v221.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v133), (int64x2_t)vorrq_s8(v133, v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), *(int8x16_t *)&STACK[0x240])));
  v221.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v132), (int64x2_t)vorrq_s8(v132, v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v79, 3uLL), *(int8x16_t *)&STACK[0x240])));
  v135 = *(int8x16_t *)&STACK[0x210];
  v136 = (int64x2_t)veorq_s8(v131, *(int8x16_t *)&STACK[0x210]);
  v137 = (int64x2_t)veorq_s8(v131, *(int8x16_t *)&STACK[0x320]);
  v138 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v136, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 8uLL)), v137), *(int8x16_t *)&STACK[0x200]);
  v139 = (int64x2_t)veorq_s8((int8x16_t)v138, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v140 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v138, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v138, 8uLL)), v139);
  v141 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v140, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v140, v140), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v142 = (int64x2_t)veorq_s8((int8x16_t)v141, vorrq_s8((int8x16_t)vshlq_n_s64(v139, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 0x3DuLL)));
  v143 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v141, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v141, 8uLL)), v142);
  v144 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v143), (int64x2_t)vorrq_s8(v143, a53))), a51);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v142, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 0x3DuLL)));
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145), v70);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v148 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147);
  v149 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v148, v148), *(int8x16_t *)&STACK[0x300]), v148), *(int64x2_t *)&STACK[0x2F0]), a50);
  v150 = (int64x2_t)veorq_s8((int8x16_t)v149, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL)));
  v151 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v149, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v149, 8uLL)), v150);
  v152 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v151, *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v151, (int8x16_t)v66)), v66), a49);
  v153 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v152, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v152, vorrq_s8((int8x16_t)vshlq_n_s64(v150, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v150, 0x3DuLL))));
  v154 = (int8x16_t)vsubq_s64(v67, *(int64x2_t *)&STACK[0x280]);
  v221.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v153), (int64x2_t)vorrq_s8(v153, v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v78, 3uLL), *(int8x16_t *)&STACK[0x240])));
  v155 = (int64x2_t)veorq_s8(v154, *(int8x16_t *)&STACK[0x210]);
  v156 = (int64x2_t)veorq_s8(v154, *(int8x16_t *)&STACK[0x320]);
  v157 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v155, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v155, 8uLL)), v156), *(int8x16_t *)&STACK[0x200]);
  v158 = (int64x2_t)veorq_s8((int8x16_t)v157, vorrq_s8((int8x16_t)vshlq_n_s64(v156, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v156, 0x3DuLL)));
  v159 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v157, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v157, 8uLL)), v158);
  v160 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v159, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v159, v159), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v161 = (int64x2_t)veorq_s8((int8x16_t)v160, vorrq_s8((int8x16_t)vshlq_n_s64(v158, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v158, 0x3DuLL)));
  v162 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v160, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v160, 8uLL)), v161);
  v163 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v162), (int64x2_t)vorrq_s8(v162, a53))), a51);
  v164 = (int64x2_t)veorq_s8((int8x16_t)v163, vorrq_s8((int8x16_t)vshlq_n_s64(v161, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v161, 0x3DuLL)));
  v165 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v163, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v163, 8uLL)), v164), v70);
  v166 = (int64x2_t)veorq_s8((int8x16_t)v165, vorrq_s8((int8x16_t)vshlq_n_s64(v164, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v164, 0x3DuLL)));
  v167 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v165, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v165, 8uLL)), v166);
  v168 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v167, v167), *(int8x16_t *)&STACK[0x300]), v167), *(int64x2_t *)&STACK[0x2F0]), a50);
  v169 = (int64x2_t)veorq_s8((int8x16_t)v168, vorrq_s8((int8x16_t)vshlq_n_s64(v166, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v166, 0x3DuLL)));
  v170 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v168, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v168, 8uLL)), v169);
  v171 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v170, *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v170, (int8x16_t)v66)), v66), a49);
  v172 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v171, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v171, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v171, vorrq_s8((int8x16_t)vshlq_n_s64(v169, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v169, 0x3DuLL))));
  v173 = vaddq_s64((int64x2_t)vornq_s8(v69, (int8x16_t)v172), (int64x2_t)vorrq_s8((int8x16_t)v172, v68));
  v172.i64[0] = a1 + v60;
  v172.i64[1] = a1 + (((v63 + 3384) - 3906) | v60);
  v174 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x2A0], *(int8x16_t *)&STACK[0x350]);
  v175 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x270], *(int8x16_t *)&STACK[0x350]);
  v176 = (int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x290], *(int8x16_t *)&STACK[0x350]);
  v221.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, v173), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x260], 3uLL), *(int8x16_t *)&STACK[0x240])));
  v177 = (int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v172, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v172, 8uLL)), *(int8x16_t *)&STACK[0x350]);
  v178 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v177), *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v177, *(int64x2_t *)&STACK[0x340]), v91));
  v179 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v176), *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v176, *(int64x2_t *)&STACK[0x340]), v91));
  v180 = (int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v174), *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v174, *(int64x2_t *)&STACK[0x340]), v91)));
  v181 = (int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vsubq_s64(v90, v175), *(int8x16_t *)&STACK[0x330]), (int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v175, *(int64x2_t *)&STACK[0x340]), v91)));
  *(int8x16_t *)&STACK[0x2A0] = vqtbl4q_s8(v221, a43);
  v221.val[0] = veorq_s8(v181, v135);
  v221.val[1] = veorq_s8(v180, v135);
  v221.val[2] = veorq_s8(v180, *(int8x16_t *)&STACK[0x320]);
  v221.val[3] = veorq_s8(v181, *(int8x16_t *)&STACK[0x320]);
  v221.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)v221.val[2]), v96);
  v221.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)v221.val[3]), v96);
  v221.val[3] = veorq_s8(v221.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[3], 0x3DuLL)));
  v221.val[2] = veorq_s8(v221.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[2], 0x3DuLL)));
  v221.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)v221.val[2]);
  v221.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)v221.val[3]);
  v221.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v221.val[0], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v221.val[0], (int64x2_t)v221.val[0]), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v221.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)v221.val[1], (int64x2_t)vandq_s8((int8x16_t)vaddq_s64((int64x2_t)v221.val[1], (int64x2_t)v221.val[1]), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v221.val[2] = veorq_s8(v221.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[2], 0x3DuLL)));
  v221.val[3] = veorq_s8(v221.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[3], 0x3DuLL)));
  v221.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)v221.val[3]);
  v221.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)v221.val[2]);
  v221.val[0] = veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v221.val[0]), (int64x2_t)vorrq_s8(v221.val[0], a53))), a51);
  v221.val[1] = veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v221.val[1]), (int64x2_t)vorrq_s8(v221.val[1], a53))), a51);
  v221.val[2] = veorq_s8(v221.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[2], 0x3DuLL)));
  v221.val[3] = veorq_s8(v221.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[3], 0x3DuLL)));
  v221.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)v221.val[2]), v70);
  v221.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)v221.val[3]), v70);
  v221.val[3] = veorq_s8(v221.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[3], 0x3DuLL)));
  v221.val[2] = veorq_s8(v221.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[2], 0x3DuLL)));
  v221.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)v221.val[2]);
  v221.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)v221.val[3]);
  v221.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v221.val[0], (int64x2_t)v221.val[0]), *(int8x16_t *)&STACK[0x300]), (int64x2_t)v221.val[0]), *(int64x2_t *)&STACK[0x2F0]), a50);
  v221.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v221.val[1], (int64x2_t)v221.val[1]), *(int8x16_t *)&STACK[0x300]), (int64x2_t)v221.val[1]), *(int64x2_t *)&STACK[0x2F0]), a50);
  v221.val[2] = veorq_s8(v221.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[2], 0x3DuLL)));
  v221.val[3] = veorq_s8(v221.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[3], 0x3DuLL)));
  v221.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)v221.val[3]);
  v221.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)v221.val[2]);
  v221.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v221.val[0], *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v221.val[0], (int8x16_t)v66)), v66), a49);
  v221.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v221.val[1], *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v221.val[1], (int8x16_t)v66)), v66), a49);
  v182 = (int8x16_t)vsubq_s64(v67, v179);
  v221.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[0], 8uLL)), (int64x2_t)veorq_s8(v221.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[3], 0x3DuLL))));
  v221.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[1], 8uLL)), (int64x2_t)veorq_s8(v221.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v221.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v221.val[2], 0x3DuLL))));
  v221.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v221.val[1]), (int64x2_t)vorrq_s8(v221.val[1], v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2C0], 3uLL), v134)));
  v221.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v221.val[0]), (int64x2_t)vorrq_s8(v221.val[0], v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2B0], 3uLL), v134)));
  v183 = (int64x2_t)veorq_s8(v182, v135);
  v184 = (int64x2_t)veorq_s8(v182, *(int8x16_t *)&STACK[0x320]);
  v185 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v183, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v183, 8uLL)), v184), v96);
  v186 = (int64x2_t)veorq_s8((int8x16_t)v185, vorrq_s8((int8x16_t)vshlq_n_s64(v184, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v184, 0x3DuLL)));
  v187 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v185, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v185, 8uLL)), v186);
  v188 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v187, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v187, v187), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v189 = (int64x2_t)veorq_s8((int8x16_t)v188, vorrq_s8((int8x16_t)vshlq_n_s64(v186, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v186, 0x3DuLL)));
  v190 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v188, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v188, 8uLL)), v189);
  v191 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v190), (int64x2_t)vorrq_s8(v190, a53))), a51);
  v192 = (int64x2_t)veorq_s8((int8x16_t)v191, vorrq_s8((int8x16_t)vshlq_n_s64(v189, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v189, 0x3DuLL)));
  v193 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v191, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v191, 8uLL)), v192), v70);
  v194 = (int64x2_t)veorq_s8((int8x16_t)v193, vorrq_s8((int8x16_t)vshlq_n_s64(v192, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v192, 0x3DuLL)));
  v195 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v193, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v193, 8uLL)), v194);
  v196 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v195, v195), *(int8x16_t *)&STACK[0x300]), v195), *(int64x2_t *)&STACK[0x2F0]), a50);
  v197 = (int64x2_t)veorq_s8((int8x16_t)v196, vorrq_s8((int8x16_t)vshlq_n_s64(v194, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v194, 0x3DuLL)));
  v198 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v196, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v196, 8uLL)), v197);
  v199 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v198, *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v198, (int8x16_t)v66)), v66), a49);
  v200 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v199, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v199, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v199, vorrq_s8((int8x16_t)vshlq_n_s64(v197, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v197, 0x3DuLL))));
  v201 = (int8x16_t)vsubq_s64(v67, v178);
  v221.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v200), (int64x2_t)vorrq_s8(v200, v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x2D0], 3uLL), v134)));
  v202 = (int64x2_t)veorq_s8(v201, v135);
  v203 = (int64x2_t)veorq_s8(v201, *(int8x16_t *)&STACK[0x320]);
  v204 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v202, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v202, 8uLL)), v203), v96);
  v205 = (int64x2_t)veorq_s8((int8x16_t)v204, vorrq_s8((int8x16_t)vshlq_n_s64(v203, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v203, 0x3DuLL)));
  v206 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v204, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v204, 8uLL)), v205);
  v207 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64(v206, (int64x2_t)vandq_s8((int8x16_t)vaddq_s64(v206, v206), a58)), v71), *(int8x16_t *)&STACK[0x310]);
  v208 = (int64x2_t)veorq_s8((int8x16_t)v207, vorrq_s8((int8x16_t)vshlq_n_s64(v205, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v205, 0x3DuLL)));
  v209 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v207, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v207, 8uLL)), v208);
  v210 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(a52, v209), (int64x2_t)vorrq_s8(v209, a53))), a51);
  v211 = (int64x2_t)veorq_s8((int8x16_t)v210, vorrq_s8((int8x16_t)vshlq_n_s64(v208, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v208, 0x3DuLL)));
  v212 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v210, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v210, 8uLL)), v211), v70);
  v213 = (int64x2_t)veorq_s8((int8x16_t)v212, vorrq_s8((int8x16_t)vshlq_n_s64(v211, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v211, 0x3DuLL)));
  v214 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v212, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v212, 8uLL)), v213);
  v215 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v214, v214), *(int8x16_t *)&STACK[0x300]), v214), *(int64x2_t *)&STACK[0x2F0]), a50);
  v216 = (int64x2_t)veorq_s8((int8x16_t)v215, vorrq_s8((int8x16_t)vshlq_n_s64(v213, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v213, 0x3DuLL)));
  v217 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v215, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v215, 8uLL)), v216);
  v218 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v217, *(int8x16_t *)&STACK[0x2E0]), (int64x2_t)vorrq_s8(v217, (int8x16_t)v66)), v66), a49);
  v219 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v218, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v218, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v218, vorrq_s8((int8x16_t)vshlq_n_s64(v216, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v216, 0x3DuLL))));
  v221.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vsubq_s64(v67, vaddq_s64((int64x2_t)vornq_s8(v69, v219), (int64x2_t)vorrq_s8(v219, v68))), a44), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v172, 3uLL), v134)));
  v172.i64[0] = vqtbl4q_s8(v221, a43).u64[0];
  v172.i64[1] = STACK[0x2A0];
  *(int64x2_t *)(a1 + v60 + v62) = v172;
  return ((uint64_t (*)(void))(*(_QWORD *)(v76 + 8 * (((v60 + 16 == v61) * v59) ^ v63)) - 8))();
}

uint64_t sub_247841680()
{
  return ((uint64_t (*)(void))STACK[0x8D0])();
}

void sub_247841688()
{
  JUMPOUT(0x247840614);
}

uint64_t sub_247841698(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  unint64_t v44;

  v44 = STACK[0x368];
  *(_QWORD *)(v44 + 108) = 0x4AFB39A300000000;
  *(_DWORD *)(v44 + 116) = -1898158376;
  *(_BYTE *)(v44 + 104) = 0;
  STACK[0x638] = v44;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (int)((a44 + 1803288696) & 0x9483F8FE ^ 0x472 ^ (a44 - 3483)))
                            - ((a44 - 3385) | 0x504u)
                            + 1802))();
}

uint64_t sub_24784175C()
{
  int v0;
  unint64_t v1;
  unint64_t v2;
  char *v3;
  _BYTE *v4;
  unint64_t v5;

  v1 = STACK[0x638];
  v2 = STACK[0x550];
  v3 = (char *)&STACK[0xAD0] + STACK[0x550] + (v0 ^ 0x912u) - 0x4B0413B0E4C6FB4BLL;
  STACK[0x5F8] = (unint64_t)(v3 + 0x653EF07F33212D73);
  STACK[0x400] = (unint64_t)(v3 + 0x653EF07F33212D83);
  STACK[0x550] = v2 + 128;
  v4 = sub_2478B1548(v3 - 3907, 0, 0x20uLL);
  v5 = STACK[0x258];
  STACK[0x630] = 0;
  STACK[0x7A0] = v1;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v5 + 8 * ((864 * (v1 != 0)) ^ v0)) - 12))(v4);
}

uint64_t sub_247841808(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t))
{
  uint64_t v39;
  _BYTE *v40;
  unsigned int v41;
  unsigned int v42;
  uint64_t v43;
  unint64_t v44;
  uint64_t v45;
  unint64_t v46;
  uint64_t v47;

  STACK[0x2E0] = (unint64_t)(v40 + 80);
  STACK[0x2D0] = v44;
  v46 = v43 + v39 + v44 + v41;
  STACK[0x2F0] = v46 - 3819;
  STACK[0x340] = v46 - 1760;
  STACK[0x300] = v46 - 417;
  STACK[0x310] = v46 - 418;
  STACK[0x320] = v46 - 419;
  STACK[0x330] = v46 - 420;
  STACK[0x350] = v46 - 422;
  *(_DWORD *)(v45 - 216) = 1314530549
                         * ((((v45 - 224) | 0x3BE9AFD0) - (v45 - 224) + ((v45 - 224) & 0xC4165028)) ^ 0x8AE0291E)
                         + 647166617
                         + v42
                         + 73;
  v47 = a39(v45 - 224);
  *v40 = *(_QWORD *)(v45 - 224) ^ 0x9F;
  return (*(uint64_t (**)(uint64_t))(STACK[0x258]
                                            + 8
                                            * (int)((((v42 ^ 0x423F851DLL) != 1111460431)
                                                   * (((v42 + 1118592700) & 0xBD539EFA) - 3316)) ^ (v42 - 585))))(v47);
}

uint64_t sub_247841934@<X0>(__int16 a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;
  uint64_t v6;

  *(_BYTE *)(v3 + v4) = HIBYTE(a1) ^ 0xAD;
  return (*(uint64_t (**)(void))(v1 + 8 * ((475 * (v6 != v2 + 103 * (v5 ^ 0xCF7u) - 1333)) ^ v5)))();
}

uint64_t sub_247841974@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;

  *(_BYTE *)(STACK[0x350] + v2) = BYTE2(a1) ^ 0x4E;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((((v3 ^ 0x9C1) - 1311) * (v2 != 13)) ^ v3 ^ 0x1B1))
                            - (((v3 ^ 0x1B1) - 2949) | 0x39u)
                            + 507))();
}

uint64_t sub_2478419C4@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(STACK[0x340] + ((v1 + 523) | 0x131) + v3) = HIBYTE(a1) ^ 0xC9;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (1778 * (v3 != 12)))) - 12))();
}

uint64_t sub_247841A04@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(STACK[0x330] + v3) = BYTE4(a1) ^ 0x2D;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (541 * (v3 != 11)))) - (((v1 ^ 0x33u) + 879) ^ 0x537)))();
}

uint64_t sub_247841A50@<X0>(unint64_t a1@<X8>)
{
  uint64_t v1;
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  *(_BYTE *)(STACK[0x320] + v5) = (a1 >> (((v2 - 62) | 0x71) ^ 0xD7u)) ^ 0x87;
  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((51 * (v6 == (v1 ^ (v4 + 1291)))) ^ v2)) - 12))();
}

uint64_t sub_247841AA0@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;

  *(_BYTE *)(STACK[0x310] + v3) = BYTE6(a1) ^ 0xD0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (v1 ^ (694 * (v3 != 9))))
                            - ((v1 - 1167997956) & 0x459E3F3F ^ 0x537)))();
}

uint64_t sub_247841AF4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(STACK[0x300] + v4) = HIBYTE(a1) ^ 0x7C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2
                                        + 8 * ((4009 * (v4 + v3 != v3 + ((v1 - 737444929) & 0x2BF4875F) - 1302)) ^ v1))
                            - 12))();
}

uint64_t sub_247841B4C()
{
  unsigned int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * ((5611 * (((v1 == v3) ^ (v0 + 45)) & 1)) ^ v0))
                            - 12))();
}

uint64_t sub_247841B78()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v3 = (v0 + 2028) | 0x41;
  *(_BYTE *)(STACK[0x2F0] + v3 + v2) = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8
                                             * ((817 * ((v2 + v3 - 3395) < 0x10)) ^ v3))
                            - (((_DWORD)v3 - 3386) | 0x52Au)
                            + 1335))();
}

void sub_247841BCC()
{
  JUMPOUT(0x24784186CLL);
}

uint64_t sub_247841BD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,int a38,int a39)
{
  int v39;
  uint64_t v40;

  STACK[0x550] = v40 - 128;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((a39 == 1474860486) * ((v39 + 1382) ^ 0xCC7)) ^ v39)) - 4))();
}

uint64_t sub_247841C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t))
{
  _BYTE *v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;

  v39[47] = (((2 * v39[15]) & 0xFC) + (v39[15] ^ 0xFE)) ^ ((v40 ^ 0xB7) - 12);
  v39[46] = (((2 * v39[14]) & 0xFC) + (v39[14] ^ 0xFE)) ^ 0x80;
  v39[45] = (((2 * v39[13]) & 0xFC) + (v39[13] ^ 0xFE)) ^ 0x80;
  v39[44] = (((2 * v39[12]) & 0xFC) + (v39[12] ^ 0xFE)) ^ 0x80;
  v39[43] = (((2 * v39[11]) & 0xFC) + (v39[11] ^ 0xFE)) ^ 0x80;
  v39[42] = (((2 * v39[10]) & 0xFC) + (v39[10] ^ 0xFE)) ^ 0x80;
  v39[41] = (((2 * v39[9]) & 0xFC) + (v39[9] ^ 0xFE)) ^ 0x80;
  v39[40] = (((2 * v39[8]) & 0xFC) + (v39[8] ^ 0xFE)) ^ 0x80;
  v39[39] = (((2 * v39[7]) & 0xFC) + (v39[7] ^ 0xFE)) ^ 0x80;
  v39[38] = (((2 * v39[6]) & 0xFC) + (v39[6] ^ 0xFE)) ^ 0x80;
  v39[37] = (((2 * v39[5]) & 0xFC) + (v39[5] ^ 0xFE)) ^ 0x80;
  v39[36] = (((2 * v39[4]) & 0xFC) + (v39[4] ^ 0xFE)) ^ 0x80;
  v39[35] = (((2 * v39[3]) & 0xFC) + (v39[3] ^ 0xFE)) ^ 0x80;
  v39[34] = (((2 * v39[2]) & 0xFC) + (v39[2] ^ 0xFE)) ^ 0x80;
  v39[33] = (((2 * v39[1]) & 0xFC) + (v39[1] ^ 0xFE)) ^ 0x80;
  v39[32] = (((2 * *v39) & 0xFC) + (*v39 ^ 0xFE)) ^ 0x80;
  *(_DWORD *)(v41 - 216) = 1314530549 * ((2 * ((v41 - 224) & 0xC932F48) - (v41 - 224) - 210972490) ^ 0x42655678)
                         + 647166617
                         + (v40 ^ 0xAB7);
  v42 = a39(v41 - 224);
  v43 = *(_QWORD *)(v41 - 224);
  *v39 = v43 ^ 0x9F;
  v39[1] = ((v40 ^ 0x3F) - 99) ^ BYTE1(v43) ^ 0xC;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x258] + 8 * (v40 ^ 0xAA4)) - 4))(v42);
}

uint64_t sub_247841EB4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  int v5;

  *(_BYTE *)(v1 + 755) = ((v5 ^ 0xC7) - 117) ^ BYTE2(a1);
  *(_BYTE *)(v1 + 756) = HIBYTE(a1) ^ 0xC9;
  return (*(uint64_t (**)(void))(v3 + 8 * (v5 ^ ((v4 == v2 + 28) | (16 * (v4 == v2 + 28))))))();
}

uint64_t sub_247841EF4@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  int v7;
  int v8;

  *(_BYTE *)(v2 + v6 + v4 + 757) = BYTE4(a1) ^ 0x2D;
  *(_BYTE *)(v4 + (v7 ^ 0x3ADu ^ (unint64_t)(v2 + 2298)) + v6) = BYTE5(a1) ^ 0x87;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (v1 ^ ((v6 != v3 + 26) * v8))) - 12))();
}

uint64_t sub_247841F4C@<X0>(unint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v2 + 759) = BYTE6(a1) ^ 0xD0;
  *(_BYTE *)(v2 + 760) = (a1 >> (v1 + 44)) ^ 0x7C;
  return ((uint64_t (*)(void))(*(_QWORD *)(v4 + 8 * (v1 ^ (42 * (v5 + 8 == v3 + 32)))) - 8))();
}

uint64_t sub_247841F9C()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8 * ((v0 + 129) ^ ((v2 == v1) * v4)))
                            - ((((v0 + 129) ^ 0xEEA) * v5) ^ (623 * ((v0 + 129) ^ 0xE8Bu)) ^ 0xBA5)))();
}

uint64_t sub_247841FE4@<X0>(int a1@<W8>)
{
  uint64_t v1;
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * ((248 * (v2 + ((a1 - 955) | 0xC21u) - 1832282439 > 0x1F)) ^ a1))
                            - 12))();
}

void sub_247842040()
{
  JUMPOUT(0x247841E00);
}

uint64_t sub_24784204C()
{
  uint64_t v0;
  int v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v0
                                        + 8
                                        * (((((unint64_t)&STACK[0xAD0] + STACK[0x2D0] - STACK[0x400]) >> 4 != 0xE5C52331B1A5CC5)
                                          * (v1 ^ 0xDB8)) ^ v1))
                            - (((v1 - 1695) | 0x841u) ^ 0xF4FLL)))();
}

uint64_t sub_2478420D4@<X0>(int8x16_t *a1@<X8>)
{
  int v1;
  int8x16_t *v2;
  uint64_t v3;
  int8x16_t v4;
  int8x16_t v5;
  int8x16_t v6;
  int8x16_t v7;
  int8x16_t v8;
  int8x16_t v9;

  v4.i64[0] = 0xFEFEFEFEFEFEFEFELL;
  v4.i64[1] = 0xFEFEFEFEFEFEFEFELL;
  v5.i64[0] = 0xFCFCFCFCFCFCFCFCLL;
  v5.i64[1] = 0xFCFCFCFCFCFCFCFCLL;
  v6.i64[0] = 0x8080808080808080;
  v6.i64[1] = 0x8080808080808080;
  v7 = vrev64q_s8(v2[1]);
  v8 = vextq_s8(v7, v7, 8uLL);
  v9 = vrev64q_s8(veorq_s8(vaddq_s8(vandq_s8(vaddq_s8(v8, v8), v5), veorq_s8(v8, v4)), v6));
  a1[1] = vextq_s8(v9, v9, 8uLL);
  return (*(uint64_t (**)(void))(v3 + 8 * ((3838 * (((v1 - 3883) | 0x407) != 1039)) ^ (v1 - 2231))))();
}

uint64_t sub_247842158@<X0>(uint64_t a1@<X8>)
{
  int v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BOOL4 v5;

  *(_BYTE *)(a1 + v2 - 1788933938) = (((2 * *(_BYTE *)(v3 + v2 - 1788933938)) & 0xFC)
                                    + (*(_BYTE *)(v3 + v2 - 1788933938) ^ 0xFE)) ^ 0x80;
  v5 = v2 - 1 != ((v1 - 621) ^ 0x6AA0F32ELL);
  return (*(uint64_t (**)(void))(v4 + 8 * (((4 * v5) | (32 * v5)) ^ v1)))();
}

uint64_t sub_2478421B0()
{
  int v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t, uint64_t);
  unint64_t v4;
  uint64_t v5;

  v4 = STACK[0x2E0];
  sub_2478B1548((_BYTE *)STACK[0x2E0], 0, 0x18uLL);
  *(_QWORD *)(v1 + 104) = 0x1FA834112;
  *(_QWORD *)(v1 + 112) = 0x200000004;
  STACK[0x540] = v4;
  LODWORD(STACK[0x5F4]) = 0;
  STACK[0x7E0] = 0;
  v5 = v3(128, 0x10800400FED9166);
  STACK[0x6C0] = v5;
  return ((uint64_t (*)(void))(*(_QWORD *)(v2 + 8 * (int)(((v5 != 0) * (((v0 + 1906449320) & 0x8E5DEF7B) + 1596)) ^ v0))
                            - 4))();
}

uint64_t sub_247842244(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  uint64_t v32;
  int v33;
  uint64_t v34;
  unint64_t v35;

  STACK[0x888] = (((v33 - 3521) | 0xE4Cu) ^ 0xFFFFFFFFFFFFF032) + *(_QWORD *)(v32 + 8 * (v33 - 3795));
  v34 = a32(112, 0x100004098D10E67);
  v35 = STACK[0x258];
  STACK[0x790] = v34;
  return ((uint64_t (*)(void))(*(_QWORD *)(v35 + 8 * (((v34 == 0) | (8 * (v34 == 0))) ^ (v33 + 132))) - 8))();
}

uint64_t sub_24784225C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return (*(uint64_t (**)(void))(a7 + 8 * ((890 * (((a1 == 0) ^ (v7 - 66)) & 1)) ^ (v7 - 2804))))();
}

uint64_t sub_247842294(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  BOOL v8;
  int v9;

  if (STACK[0x7E0])
    v8 = STACK[0x6C0] == 0;
  else
    v8 = 1;
  v9 = !v8;
  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)((v9 * (1192 * ((((v7 - 3907) | 0x38) + 386342843) & 0xE8F8EF4F ^ 0xF40) - 1208)) ^ (((v7 - 3907) | 0x38) + 1130))))();
}

uint64_t sub_2478422C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * (((((v8 ^ 0xF68) + 550) ^ 0x24B) * v7) ^ (v8 - 2804))))();
}

uint64_t sub_2478422EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((1937 * ((((v7 ^ 0xF7) + 1) ^ (STACK[0x7E0] == 0)) & 1)) ^ v7 ^ 0x3F7))
                            - 8))();
}

uint64_t sub_247842300(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t),uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,char a44)
{
  int v44;
  int v45;
  BOOL v46;

  v45 = v44 - 943;
  v46 = a32(16, 0x20040A4A59CD2) == 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x258] + 8
                                                       * ((6828 * ((v46 ^ (a44 + 66)) & 1)) ^ v45))
                            - 4))();
}

uint64_t sub_24784235C(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  uint64_t v33;
  int v34;
  uint64_t v35;

  v34 = (v32 - 3519) | 0xA10;
  *a1 = 0;
  a1[1] = 0;
  *(_QWORD *)(v33 + 8) = (char *)a1 + 0x2264EDAB74B0F4F9;
  v35 = a32(16, 0x20040A4A59CD2);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x258] + 8 * (((v35 != 0) * ((v34 + 943) ^ 0xF7C)) ^ v34)) - 4))();
}

uint64_t sub_2478423D4(_QWORD *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;
  uint64_t v9;

  *a1 = 0;
  a1[1] = 0;
  *v7 = (char *)a1 + v9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((((((v8 ^ 3) + 1) ^ (STACK[0x540] == 0)) & 1)
                                          * (((v8 ^ 0xB03) + 2819) ^ 0x1BD2)) ^ v8 ^ 0xB03))
                            - 12))();
}

uint64_t sub_247842420@<X0>(uint64_t a1@<X6>, unint64_t a2@<X8>)
{
  int v2;
  unint64_t *v3;
  int v4;
  unint64_t v5;

  v4 = v2 | 0x402;
  v5 = *v3;
  STACK[0x610] = *(_QWORD *)(a1 + 8 * (v4 - 3761)) - 4;
  STACK[0x3A0] = v5;
  LODWORD(STACK[0x7B4]) = 2011700317;
  STACK[0x798] = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((a2 != 0) * (((v4 - 3888) | 0x140) + 2008)) ^ (v4 - 2784))) - 12))();
}

uint64_t sub_2478424E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  v8 = *(_QWORD *)(a7 + 8 * (v7 ^ 0x1067));
  LODWORD(STACK[0x704]) = 563802791;
  return ((uint64_t (*)(void))(v8 - ((v7 ^ 0xE10u) - 3609) + 290))();
}

uint64_t sub_247842530()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_24784253C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * ((377 * (v8 == ((v7 + 612310832) & 0xDB80D3DD ^ 0x57E89797))) ^ (v7 - 2723))))();
}

void sub_247842580()
{
  JUMPOUT(0x247842590);
}

uint64_t sub_2478425C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * (int)(((v8 == v7 + 1474814527) * ((v7 + 1869898645) & 0x908B8DFF ^ 0xD4F)) ^ (v7 - 2804))))();
}

uint64_t sub_247842618(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t))
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;

  v41 = (2 * (_DWORD)v39) ^ 0x136u;
  *(_DWORD *)(v40 - 216) = 1314530549 * ((((2 * (v40 - 224)) | 0x39F467AA) - (v40 - 224) + 1661324331) ^ 0x2DF3B51B)
                         + 647166617
                         + v39
                         + 3764;
  v42 = a39(v40 - 224);
  v43 = STACK[0x258];
  v44 = *(_QWORD *)(STACK[0x6C0] + 8);
  STACK[0x4F0] = v41 + *(_QWORD *)(STACK[0x258] + 8 * v39) - 138;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v43
                                                      + 8
                                                      * (int)(((v44 != 0x2264EDAB74B0F4F9) * ((v41 + 3773) ^ 0x7A7)) ^ v41))
                                          - 8))(v42);
}

uint64_t sub_2478426B8@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;
  int v3;

  LODWORD(STACK[0x664]) = v3;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((v3 == v2 + (a2 ^ 0xD12) - 3907) * ((a2 + 3314) ^ 0xFFD)) ^ a2))
                            - 8))();
}

uint64_t sub_2478426F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  int v8;

  STACK[0x630] = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v8 - 744011604) & 0x2C58AC59 ^ 0x679 ^ (v8 - 2852))) - 4))();
}

void sub_247842748(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  int v8;

  STACK[0x430] = v7;
  STACK[0x810] = *(_QWORD *)(a7 + 8 * (v8 - 3735)) + ((v8 - 2970) ^ 0xFFFFFFFFFFFFFC5DLL);
  JUMPOUT(0x247842824);
}

uint64_t sub_24784275C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a7 + 8 * ((((v7 - 1034102852) & 0x3DA31B51 ^ 0x8B9) * (v9 == v8)) ^ (v7 - 2723))))();
}

uint64_t sub_247842798(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;

  LODWORD(STACK[0x664]) = v8;
  STACK[0x630] = STACK[0x6C0];
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v7 - 744011604) & 0x2C58AC59 ^ 0x679 ^ (v7 - 2852))) - 4))();
}

void sub_2478427F4()
{
  int v0;

  LODWORD(STACK[0x664]) = v0;
  JUMPOUT(0x247842800);
}

uint64_t sub_247842864(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  STACK[0x648] = *(_QWORD *)(a7 + 8 * v7);
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((v8 != -8) * (((129 * (v7 ^ 0x95)) ^ 0x4C0) + 893)) ^ (129 * (v7 ^ 0x95)) ^ 0x4DA))
                            - ((((129 * (v7 ^ 0x95)) ^ 0x4DA) + 1876122150) & 0x902CAFC3 ^ 0xF47)))();
}

uint64_t sub_247842880(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  STACK[0x6C0] = 0;
  v9 = STACK[0x664];
  STACK[0x630] = 0;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8 * (((v9 == v8) * ((v7 - 744011604) & 0x2C58AC59 ^ 0x679)) ^ (v7 - 2852)))
                            - 4))();
}

uint64_t sub_2478428D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, int a7@<W8>)
{
  uint64_t v7;
  uint64_t v8;

  return ((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 + 8 * (a7 ^ (4048 * (v7 != 0))))
                                                                                                - (a7 + 1206)
                                                                                                + 2299))(a1, a2, a3, a4, a5, a6, v8);
}

uint64_t sub_247842914@<X0>(uint64_t a1@<X6>, unsigned int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;

  v4 = *(_QWORD *)(v2 + 8);
  STACK[0x6F8] = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((5465 * (v4 != 0x2264EDAB74B0F4F9)) ^ a2)) - v3 + 2299))();
}

uint64_t sub_247842954@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;

  STACK[0x7A8] = v2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((a2 - 168) ^ 0x8A5) * (v3 != v4)) | a2)) - 4))();
}

uint64_t sub_247842988(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  uint64_t v33;
  unint64_t v34;

  v33 = a32(32, 0x103004054B5FA7DLL);
  v34 = STACK[0x258];
  STACK[0x460] = v33;
  return ((uint64_t (*)(void))(*(_QWORD *)(v34
                                        + 8 * ((19 * (((v33 == 0) ^ (35 * (v32 ^ 0xBC))) & 1)) ^ v32))
                            - 12))();
}

uint64_t sub_2478429E4(uint64_t a1)
{
  uint64_t (*v1)(uint64_t, uint64_t);
  int v2;
  uint64_t v4;
  unint64_t v5;

  *(_QWORD *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_DWORD *)(a1 + 16) = 670886368;
  v4 = v1(26, 3105161978);
  v5 = STACK[0x258];
  *(_QWORD *)(a1 + 24) = v4;
  return ((uint64_t (*)(void))(*(_QWORD *)(v5 + 8 * (((v4 == 0) * (7 * (v2 ^ 0x3D5) + 1779)) ^ v2))
                            - (v2 ^ 0x7BEu)
                            + 1093))();
}

uint64_t sub_247842A58(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43)
{
  uint64_t v43;
  _BYTE **v44;
  int v45;
  uint64_t (*v46)(unint64_t);
  _BYTE *v47;
  unint64_t v48;
  unint64_t v49;
  unint64_t v50;
  unint64_t v51;
  unint64_t v53;
  int v54;
  int v55;

  v46 = (uint64_t (*)(unint64_t))((((v45 + 1885) | 0x24u) ^ 0xFFFFFFFFFFFFF793)
                                                 + *(_QWORD *)(v43 + 8 * v45));
  LODWORD(STACK[0x310]) = LODWORD(STACK[0x9C4]) ^ 0x5C9A9527;
  LODWORD(STACK[0x300]) = LODWORD(STACK[0xA94]) ^ 0x5C9A9527;
  v53 = STACK[0x460] + 24;
  v54 = STACK[0x9C0];
  LODWORD(STACK[0x330]) = STACK[0x9C0];
  LODWORD(STACK[0x350]) = v54 ^ 0x5C9A9527;
  v55 = STACK[0xA90];
  LODWORD(STACK[0x320]) = STACK[0xA90];
  LODWORD(STACK[0x340]) = v55 ^ 0x5C9A9527;
  v47 = *v44;
  v48 = 1554976193 * ((1554976193 * (_DWORD)v47) ^ ((1554976193 * (_DWORD)v47) >> 16));
  *v47 = *(_BYTE *)(a42 + (v48 >> 24)) ^ 0x2A ^ *(_BYTE *)(a43 + (v48 >> 24)) ^ *(_BYTE *)((v48 >> 24) + a41 + 1) ^ v48 ^ (-59 * ((1554976193 * ((1554976193 * (_DWORD)v47) ^ ((1554976193 * (_DWORD)v47) >> 16))) >> 24)) ^ 0xD2;
  v49 = 1554976193 * ((1554976193 * ((_DWORD)v47 + 1)) ^ ((1554976193 * ((_DWORD)v47 + 1)) >> 16));
  v47[1] = *(_BYTE *)(a42 + (v49 >> 24)) ^ 0xD7 ^ *(_BYTE *)(a43 + (v49 >> 24)) ^ *(_BYTE *)((v49 >> 24) + a41 + 1) ^ v49 ^ (-59 * ((1554976193 * ((1554976193 * ((_DWORD)v47 + 1)) ^ ((1554976193 * ((_DWORD)v47 + 1)) >> 16))) >> 24)) ^ 0x46;
  v50 = 1554976193 * ((1554976193 * ((_DWORD)v47 + 2)) ^ ((1554976193 * ((_DWORD)v47 + 2)) >> 16));
  v47[2] = (-63 * ((-63 * ((_BYTE)v47 + 2)) ^ ((1554976193 * ((_DWORD)v47 + 2)) >> 16))) ^ 0xF9 ^ *(_BYTE *)(a42 + (v50 >> 24)) ^ *(_BYTE *)(a43 + (v50 >> 24)) ^ (-59 * ((1554976193 * ((1554976193 * ((_DWORD)v47 + 2)) ^ ((1554976193 * ((_DWORD)v47 + 2)) >> 16))) >> 24)) ^ *(_BYTE *)((v50 >> 24) + a41 + 1) ^ 0xF3;
  v51 = 1554976193 * ((1554976193 * ((_DWORD)v47 + 3)) ^ ((1554976193 * ((_DWORD)v47 + 3)) >> 16));
  v47[3] = v51 ^ 0x31 ^ (-59
                       * ((1554976193
                         * ((1554976193 * ((_DWORD)v47 + 3)) ^ ((1554976193 * ((_DWORD)v47 + 3)) >> 16))) >> 24)) ^ *(_BYTE *)(a42 + (v51 >> 24)) ^ *(_BYTE *)(a43 + (v51 >> 24)) ^ ~*(_BYTE *)((v51 >> 24) + a41 + 1);
  return v46(v53);
}

uint64_t sub_247843E38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return (*(uint64_t (**)(void))(a7
                              + 8
                              * ((((((v7 - 3875) ^ (*(_QWORD *)(STACK[0x680] + 24) == 0)) & 1) == 0) * (v7 - 3869)) ^ (v7 - 1468))))();
}

uint64_t sub_247843F08(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void (*a40)(void))
{
  unint64_t v40;
  int v42;
  uint64_t v43;
  int v44;
  int v46;

  a40();
  *(_QWORD *)(v43 + 24) = 0;
  v46 = (v42 - 833) | 0x341;
  ((void (*)(uint64_t))a40)(v43);
  LODWORD(STACK[0x4D4]) = v44;
  STACK[0x810] = (v46 - 2970) + *(_QWORD *)(a7 + 8 * (v46 - 3745)) - 945;
  STACK[0x5D0] = (unint64_t)&STACK[0x630];
  v40 = STACK[0x630];
  STACK[0x3D0] = STACK[0x630];
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((2000 * (((v46 + 102) ^ (v40 == 0)) & 1)) ^ (v46 - 2970)))
                            - ((v46 - 3757) ^ 0x9ELL)))();
}

uint64_t sub_247843F78@<X0>(uint64_t a1@<X6>, _QWORD *a2@<X8>)
{
  _QWORD *v2;
  int v3;

  *v2 = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*a2 != 0) * ((82 * (v3 ^ 0xB24) - 1381505815) & 0x5258197B ^ 0xB9C)) ^ (82 * (v3 ^ 0xB24))))
                            - 4))();
}

uint64_t sub_247843FCC@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  *(_QWORD *)(v3 + 8) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*(_QWORD *)(a2 + 8) == 0)
                                          * ((((v2 ^ 0x1BD) - 1525570142) & 0x5AEE5AEE) - 2272)) | v2 ^ 0x1BD))
                            - 4))();
}

uint64_t sub_247844014@<X0>(uint64_t a1@<X6>, _QWORD *a2@<X8>)
{
  int v2;

  *(_QWORD *)(STACK[0x5B0] - 0x2264EDAB74B0F4F9) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((*a2 == 0) ^ (v2 - 48)) & 1) * ((v2 + 145) ^ 0x923)) ^ (v2 + 145)))
                            - 12))();
}

uint64_t sub_24784406C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((2201 * (*(_QWORD *)(STACK[0x538] + 24) != 0)) ^ v7)) - 4))();
}

void sub_2478440AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,void (*a40)(void))
{
  a40();
  STACK[0x538] = 0;
  JUMPOUT(0x247844298);
}

uint64_t sub_2478440B4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (((((a2 | 0x202) + 486) ^ 0xCDD) * (v2 == 0)) | a2 | 0x202))
                            - ((((a2 | 0x202) + 486) | 0x17u) ^ 0x413)))();
}

void sub_247844120(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  *a1 = v1;
  *(_QWORD *)(v2 - 0x2264EDAB74B0F4F9) = v1;
  JUMPOUT(0x24784413CLL);
}

uint64_t sub_247844148(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((v8 != 0) * ((v7 - 1381505815) & 0x5258197B ^ 0xB9C)) ^ v7)) - 4))();
}

uint64_t sub_247844184@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((*(_QWORD *)(a2 + 8) == 0) * (((v2 - 1525570142) & 0x5AEE5AEE) - 2272)) | v2))
                            - 4))();
}

uint64_t sub_2478441C0@<X0>(uint64_t a1@<X6>, _QWORD *a2@<X8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((((*a2 == 0) ^ (v2 + 63)) & 1) * (v2 ^ 0x923)) ^ v2))
                            - 12))();
}

uint64_t sub_2478441FC@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;

  *(_QWORD *)(STACK[0x5B0] - 0x2264EDAB74B0F4F1) = a2;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((2201 * (*(_QWORD *)(STACK[0x538] + 24) != 0)) ^ ((v2 - 1298) | 0x34A)))
                            - 4))();
}

void sub_247844260(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,void (*a33)(uint64_t))
{
  a33(a1);
  *(_QWORD *)(STACK[0x538] + 24) = 0;
  JUMPOUT(0x247844280);
}

uint64_t sub_2478442AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return (*(uint64_t (**)(void))(a7 + 8 * (((((v7 - 3883) | 0x221) ^ 0x330) * (v9 == v8)) ^ (v7 - 1604))))();
}

uint64_t sub_2478442E4@<X0>(int a1@<W8>)
{
  uint64_t v1;

  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (((*(_BYTE *)(STACK[0x7A0] + 5) == 9) * (a1 - 452)) ^ a1))
                            - (a1 + 3338)
                            + 3903))();
}

void sub_247844318()
{
  JUMPOUT(0x247844344);
}

uint64_t sub_24784438C@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  STACK[0x4F0] = *(_QWORD *)(a1 + 8 * (v2 & 0x680F66F7));
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * (((v3 != 0x2264EDAB74B0F4F9)
                                          * (((((v2 & 0x680F66F7) - 179) | 0x82) + 3773) ^ 0x7A7)) ^ (((v2 & 0x680F66F7) - 179) | 0x82)))
                            - 8))();
}

uint64_t sub_2478443BC()
{
  uint64_t (*v0)(void);

  return v0();
}

uint64_t sub_2478443C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  int v8;
  int v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((v7 - 3338) ^ (1574 * (v9 != v8))))
                            - ((1367 * (v7 ^ 0xF40u)) ^ 0x1001)))();
}

uint64_t sub_24784440C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  int v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE *v13;
  _BYTE *v14;
  _BYTE *v15;

  v11 = STACK[0x630];
  v12 = STACK[0x550];
  v13 = (char *)&a9 + STACK[0x550] - 0x4B0413B0E4C6FE16;
  STACK[0x3F8] = (unint64_t)v13;
  v14 = v13 + 16;
  STACK[0x6B0] = (unint64_t)(v13 + 16);
  STACK[0x4E8] = (unint64_t)(v13 + 48);
  STACK[0x550] = ((v9 - 3876) ^ 0xB1) + v12;
  sub_2478B1548(v13, 0, 0x10uLL);
  v15 = sub_2478B1548(v14, 0, 0x20uLL);
  STACK[0x408] = 0x2264EDAB74B0F4F9;
  STACK[0x518] = 0x3E8CF772867CF598;
  LODWORD(STACK[0x5C4]) = -1898158376;
  STACK[0x548] = 0;
  LODWORD(STACK[0x60C]) = -1898158376;
  STACK[0x4A0] = v11;
  return ((uint64_t (*)(_BYTE *))(*(_QWORD *)(v10 + 8 * (v9 ^ (16 * (v11 == 0))))
                                          - (v9 - 194)
                                          + 3903))(v15);
}

void sub_2478444D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  unint64_t v7;
  int v8;

  STACK[0x550] = v7;
  LODWORD(STACK[0x4D4]) = 1474818463;
  STACK[0x810] = (v8 - 2970) + *(_QWORD *)(a7 + 8 * (v8 - 3745)) - 945;
  JUMPOUT(0x247842824);
}

uint64_t sub_2478444F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t *v8;
  int v9;
  uint64_t v10;

  v10 = *v8;
  STACK[0x780] = 0;
  LODWORD(STACK[0x8CC]) = v7;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((4 * (v10 == 0x2264EDAB74B0F4F9)) | (8 * (v10 == 0x2264EDAB74B0F4F9))) ^ (v9 + 3187)))
                            - (((v9 + 2363) | 0x80u) ^ 0xA90)))();
}

uint64_t sub_247844520@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;

  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((((4 * v2) ^ 0x31C0) * a2) ^ (v2 - 3867))) - 8))();
}

uint64_t sub_24784454C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t (*a32)(uint64_t, uint64_t))
{
  int v32;
  int v33;
  uint64_t v34;
  unint64_t v35;
  int v36;
  int v38;
  uint64_t v39;

  v33 = v32 ^ 0x3D24;
  v34 = (v33 + 2818);
  v35 = STACK[0x780];
  v36 = STACK[0x8CC];
  STACK[0x448] = *(_QWORD *)(a7 + 8 * v33) + (v34 ^ 0xFFFFFFFFFFFFF4D2);
  v38 = v33 + 2584;
  STACK[0x3C8] = (unint64_t)&STACK[0x408];
  LODWORD(STACK[0x898]) = v36;
  STACK[0x8A8] = v35;
  STACK[0x4E0] = 0x36FEDE96E661B593;
  LODWORD(STACK[0x724]) = -1898158376;
  STACK[0x750] = 0x26289D706DC2978ALL;
  STACK[0x828] = 0;
  v39 = a32(16, 0x20040A4A59CD2);
  STACK[0x670] = v39 + 0x2264EDAB74B0F4F9;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (int)(((v39 != 0) * (v38 ^ 0xD15)) ^ v34)) - (v38 | 0x503u) + 3895))();
}

uint64_t sub_24784457C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((100 * (STACK[0x780] != 0)) ^ (v7 - 135))) - 8))();
}

uint64_t sub_2478445A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t (*a41)(void),uint64_t a42,uint64_t a43,uint64_t a44,int a45)
{
  int v45;
  int v46;
  uint64_t v47;

  v47 = a41();
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(STACK[0x258] + 8 * (a17 ^ (2867 * (v46 == v45))))
                                          - ((a45 - 3767) | 0x40u)
                                          + 192))(v47);
}

uint64_t sub_2478445EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (a17 ^ (2867 * (v19 == v18)))) - ((v17 - 3767) | 0x40u) + 192))();
}

uint64_t sub_247844624@<X0>(uint64_t a1@<X6>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;

  v2 = (2 * (_DWORD)a2) ^ 0x11Eu;
  v3 = STACK[0x408];
  STACK[0x4F0] = *(_QWORD *)(a1 + 8 * a2) + v2 - 146;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (int)(((v3 != 0x2264EDAB74B0F4F9) * ((v2 + 3773) ^ 0x7A7)) ^ v2))
                            - 8))();
}

uint64_t sub_247844658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (a17 ^ (2315 * (v19 == v18))))
                            - ((v17 - 334) ^ 0xDF9)))();
}

uint64_t sub_24784468C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;

  STACK[0x710] = 0;
  v8 = *(_QWORD *)(STACK[0x4A0] + 8);
  STACK[0x3D8] = 0x3E8CF772867CF598;
  LODWORD(STACK[0x4FC]) = 928235928;
  LODWORD(STACK[0x894]) = -1898158376;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((v8 == 0x2264EDAB74B0F4F9) * ((v7 - 2651) ^ v7 ^ 0x2B6 ^ 0xF63)) ^ v7))
                            - 8))();
}

uint64_t sub_247844710@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(void))(a1
                              + 8
                              * ((((2 * ((a2 - 1039398366) & 0x3DF3F367 ^ 0x1B6)) ^ 0x122)
                                * (*(_QWORD *)(v2 - 0x2264EDAB74B0F4F9) == 0)) ^ a2)))();
}

uint64_t sub_247844774@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;

  LODWORD(STACK[0x4FC]) = 928235944 - (a2 & 0xF);
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8
                                        * ((2034
                                          * (16 - (a2 & 0xFu) + (unint64_t)(((v2 + 3615) ^ 0xAF2FA785) + a2) < 0xFFFFFFF6)) ^ v2))
                            - 12))();
}

uint64_t sub_2478447DC@<X0>(int a1@<W8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t (*a25)(_QWORD, uint64_t))
{
  int v25;
  int v26;
  int v27;
  uint64_t v28;
  unint64_t v29;

  v27 = v25 + a1 - 2 * (((v26 + 780) ^ 0xEDC62EC) & (v25 + a1 + 131852088) ^ (v25 + a1) & 4) + 112741904;
  LODWORD(STACK[0x894]) = v27;
  v28 = a25(v27 ^ 0x8EDC66D8, 1226219563);
  v29 = STACK[0x258];
  STACK[0x3D8] = v28 + 0x3E8CF772867CF598;
  return ((uint64_t (*)(void))(*(_QWORD *)(v29 + 8 * ((585 * (v28 != 0)) | v26)) - 12))();
}

uint64_t sub_247844888(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((75 * (*v7 == 0)) | v8))
                            - (v8 + 1216)
                            - ((v8 - 1067) | 0x2Au)
                            + 2323))();
}

uint64_t sub_247844908@<X0>(int a1@<W0>, int a2@<W5>, uint64_t a3@<X6>, uint64_t a4@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  uint64_t (*v8)(uint64_t);
  uint64_t v9;
  unsigned int v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;

  v8 = *(uint64_t (**)(uint64_t))(a3 + 8 * a1);
  LODWORD(STACK[0x350]) = a2;
  v9 = v6
     + (((a1 ^ v7) + a2) ^ 0xA5FFBCFFAF7EFDFDLL)
     + 0x7F7F7FFED9CF6760
     + ((2 * ((a1 ^ v7) + a2)) & 0x15EFDFBFALL)
     - 0x257F3CFE894E655DLL;
  v10 = 1554976193
      * (v6 + (((a1 ^ v7) + a2) ^ 0xAF7EFDFD) - 640719008 + ((2 * ((a1 ^ v7) + a2)) & 0x5EFDFBFA) + 1991350947);
  *(_BYTE *)(v9 - 0x3E8CF772867CF598) = *(_BYTE *)(a4 + ((unint64_t)(1554976193 * (v10 ^ HIWORD(v10))) >> 24)) ^ *(_BYTE *)(v4 + ((unint64_t)(1554976193 * (v10 ^ HIWORD(v10))) >> 24)) ^ *(_BYTE *)(((unint64_t)(1554976193 * ((1554976193 * (_DWORD)v9) ^ ((1554976193 * v9) >> 16))) >> 24) + v5 + 2) ^ (-63 * ((-63 * v9) ^ ((1554976193 * v9) >> 16))) ^ (-45 * ((1554976193 * (v10 ^ HIWORD(v10))) >> 24));
  v11 = 1554976193 * ((v10 + 1554976193) ^ ((v10 + 1554976193) >> 16));
  *(_BYTE *)(v9 - 0x3E8CF772867CF597) = *(_BYTE *)(a4 + (v11 >> 24)) ^ *(_BYTE *)(v4 + (v11 >> 24)) ^ *(_BYTE *)((v11 >> 24) + v5 + 2) ^ v11 ^ (-45 * ((1554976193 * ((1554976193 * (_DWORD)v9 + 1554976193) ^ ((1554976193 * v9 + 1554976193) >> 16))) >> 24));
  v12 = 1554976193 * ((1554976193 * ((_DWORD)v9 + 2)) ^ ((1554976193 * (v9 + 2)) >> 16));
  *(_BYTE *)(v9 - 0x3E8CF772867CF596) = (-63 * ((-63 * (v9 + 2)) ^ ((1554976193 * (v9 + 2)) >> 16))) ^ 0x40 ^ (-45 * ((1554976193 * ((1554976193 * ((_DWORD)v9 + 2)) ^ ((1554976193 * (v9 + 2)) >> 16))) >> 24)) ^ *(_BYTE *)(v4 + (v12 >> 24)) ^ *(_BYTE *)(a4 + (v12 >> 24)) ^ *(_BYTE *)((v12 >> 24) + v5 + 2) ^ 0x40;
  v13 = 1554976193 * ((1554976193 * ((_DWORD)v9 + 3)) ^ ((1554976193 * (v9 + 3)) >> 16));
  *(_BYTE *)(v9 - 0x3E8CF772867CF595) = v13 ^ 0xF0 ^ (-45
                                                      * ((1554976193
                                                        * ((1554976193 * ((_DWORD)v9 + 3)) ^ ((1554976193 * (v9 + 3)) >> 16))) >> 24)) ^ *(_BYTE *)(v4 + (v13 >> 24)) ^ *(_BYTE *)(a4 + (v13 >> 24)) ^ *(_BYTE *)((v13 >> 24) + v5 + 2) ^ 0xF0;
  return v8(((2 * (v7 + a2 + 39)) & 0x1E7F571FCLL)+ ((v7 + a2 + 39) ^ 0x5BDF7ED8F3FAB8FELL)+ v6+ 0x659389B48588516ALL);
}

void sub_247844BD8(_BYTE *a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, _BYTE *a4@<X6>, uint64_t a5@<X7>, uint64_t a6@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  char v11;
  char v12;

  *a1 = v9 ^ *(_BYTE *)(v6 + a2) ^ *(_BYTE *)(a6 + a2) ^ *(_BYTE *)(v7 + a3) ^ v10;
  *a4 = v11 ^ *(_BYTE *)(v6 + a5) ^ *(_BYTE *)(a6 + a5) ^ *(_BYTE *)(v7 + v8) ^ v12;
  JUMPOUT(0x247844AA4);
}

uint64_t sub_247844C38(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  return (*(uint64_t (**)(void))(a7 + 8 * (((*v7 == 0) * (((2 * v8) ^ 0x610) - 286)) ^ v8)))();
}

uint64_t sub_247844C74@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  int v3;
  unsigned int v4;
  BOOL v5;

  v4 = 1710712529 - *(_DWORD *)(v2 + 16);
  v5 = a2 - 316004910 > v4;
  if ((a2 - 316004910) < 0x3DFA7D0C != v4 < 0x3DFA7D0C)
    v5 = (a2 - 316004910) < 0x3DFA7D0C;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1
                                        + 8 * ((4200 * (((((v3 + 31) ^ 0xD9) + 1) ^ v5) & 1)) ^ v3))
                            - 12))();
}

uint64_t sub_247844CFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,int a44)
{
  int v44;

  v44 = LODWORD(STACK[0x4FC])
      - (((LODWORD(STACK[0x4FC]) << (a44 ^ 0x42)) + ((226 * (a44 ^ 0xF47)) ^ 0x11587F58)) & 0x4F6D606C)
      + 1885531806;
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x258]
                                        + 8
                                        * ((2024
                                          * ((v44 ^ 0x1C580FCB) + 2146957248 + ((2 * v44) & 0x77DD7FFA ^ 0x474D6068) != 1004976061)) ^ (a44 - 972)))
                            - 4))();
}

uint64_t sub_247844DE0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  uint64_t v8;
  unint64_t v9;

  v8 = v4
     + ((LODWORD(STACK[0x350]) - 775873853) ^ 0x5D797FF6ABDAFF7ELL)
     - 0x5D797FF6ABDAFF7ELL
     + ((2 * (LODWORD(STACK[0x350]) - 775873853)) & 0x157B5FEFCLL)
     + (v3 - 1004976062);
  v9 = (((_DWORD)v8 * v7) ^ ((v8 * v7) >> 16)) * v7;
  *(_BYTE *)(v8 - 0x3E8CF772867CF598) = *(_BYTE *)(a1 + (v9 >> 24)) ^ *(_BYTE *)(v1 + (v9 >> 24)) ^ *(_BYTE *)((v9 >> 24) + v2 + 2) ^ v9 ^ ((((((_DWORD)v8 * v7) ^ ((v8 * v7) >> 16)) * v7) >> 24) * (23 * (v6 ^ 0xB5) + 88));
  return ((uint64_t (*)(unint64_t))(*(_QWORD *)(STACK[0x258] + 8 * ((2303 * (v3 - 1 == v5)) ^ v6))
                                                   - 4))(0xC173088D79830A68);
}

uint64_t sub_247844ECC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  STACK[0x518] = v8;
  LODWORD(STACK[0x5C4]) = STACK[0x894];
  return (*(uint64_t (**)(void))(a7 + 8 * (((STACK[0x3F8] != 0) * ((v7 ^ 0x73D) + 3419)) ^ v7)))();
}

uint64_t sub_247844F1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  unint64_t v8;

  v8 = STACK[0x408];
  STACK[0x5E0] = (v7 + 3039) + *(_QWORD *)(a7 + 8 * v7) - 3280;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((((v7 - 32) ^ (v8 == 0x2264EDAB74B0F4F9)) & 1)
                                          * (((v7 - 65) | 0x12) ^ 0xAB)) ^ (v7 + 3039)))
                            - 4))();
}

uint64_t sub_247844F50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  _QWORD *v7;
  int v8;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (((*v7 == 0) * (((v8 + 1619) ^ 0x7B3) - 2213)) ^ (v8 - 1216)))
                            - 12))();
}

uint64_t sub_247844FA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v7;
  int v8;
  unsigned int v9;

  v9 = *(_DWORD *)(v7 + 16)
     - (((((v8 - 2119) | 0x1000) ^ 0xB0063CDD) + 2 * *(_DWORD *)(v7 + 16)) & 0xC776DBCC)
     - 1145142240;
  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * ((1881
                                          * ((v9 ^ 0xBE5CBCB9) - 67309641 + ((2 * v9) & 0xBBCFA2BE ^ 0x8346828C) != 1508163862)) ^ v8))
                            - 12))();
}

uint64_t sub_247845044@<X0>(int a1@<W1>, int a2@<W3>, int a3@<W5>, uint64_t a4@<X7>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  int v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int v16;
  uint64_t v17;
  int v18;
  char v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  unint64_t v23;

  v14 = *(_QWORD *)(v9 + 24);
  v15 = ((v12 + a3 + 35) ^ 0xFBF7BBBEB273FFF3)
      + 0x40844414D8C000DLL
      + ((2 * (v12 + a3 + 35)) & 0x164E7FFE6);
  v16 = a2 + a1 - 1575473504;
  v17 = v11 + ((v10 - 358) ^ 0xA61B31AA);
  v18 = v14 + v17;
  v19 = *(_BYTE *)(v14 + v17);
  v20 = v8 + v15 + v17;
  v21 = 1554976193 * ((1554976193 * v18) ^ ((1554976193 * v18) >> 16));
  v22 = *(_BYTE *)((v21 >> 24) + v13 + 3);
  v23 = 1554976193 * ((1554976193 * (_DWORD)v20) ^ ((1554976193 * v20) >> 16));
  *(_BYTE *)(v20 - 0x3E8CF772867CF598) = *(_BYTE *)(a4 + (v21 >> 24)) ^ v19 ^ *(_BYTE *)(v7 + (v21 >> 24)) ^ v22 ^ *(_BYTE *)(v5 + (v23 >> 24)) ^ *(_BYTE *)(a5 + (v23 >> 24)) ^ *(_BYTE *)((v23 >> 24) + v6 + 2) ^ (-63 * ((-63 * v20) ^ ((1554976193 * v20) >> 16))) ^ v21 ^ (105 * BYTE3(v21)) ^ (-45 * ((1554976193 * ((1554976193 * (_DWORD)v20) ^ ((1554976193 * v20) >> 16))) >> 24));
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x258] + 8 * ((286 * (v16 == 0)) ^ v10)) - 4))();
}

void sub_24784517C()
{
  JUMPOUT(0x2478450A0);
}

void sub_247845190()
{
  JUMPOUT(0x247844F54);
}

uint64_t sub_2478451A4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  int v2;

  return (*(uint64_t (**)(void))(a1 + 8 * ((4001 * ((v2 + a2 - 1174 - 1212994819) < 0x10)) ^ a2)))();
}

uint64_t sub_2478451FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t (*a39)(uint64_t))
{
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;

  *(_DWORD *)(v43 - 216) = 1314530549
                         * ((((v43 - 224) ^ 0x1ADB55BA) & 0x1C6BC6E4 | ~((v43 - 224) ^ 0x1ADB55BA | 0x1C6BC6E4)) ^ 0x4846EA6F)
                         + 647166617
                         + v42
                         + 488;
  v44 = a39(v43 - 224);
  v45 = STACK[0x258];
  v46 = *(_QWORD *)(v43 - 224);
  v47 = v41 + v39 - 1212996441;
  *(_BYTE *)(v47 + 1843) = v46 ^ 0x9F;
  *(_BYTE *)(v47 + 1844) = (((v42 - 66) | 5) + 126) ^ BYTE1(v46) ^ 0x48;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v45 + 8 * ((11 * (v41 == v40 + 3507)) | v42)) - 8))(v44);
}

uint64_t sub_2478452C4@<X0>(uint64_t a1@<X6>, int a2@<W8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  int v6;

  *(_BYTE *)(v5 + v4 + v2 + 1845) = BYTE2(a2) ^ 0x4E;
  *(_BYTE *)(v2 + ((1981 * (v6 ^ 0x565u)) ^ v5) + v4) = HIBYTE(a2) ^ 0xC9;
  return (*(uint64_t (**)(void))(a1 + 8 * ((28 * (v4 == (((v6 - 1158) | 4u) ^ (unint64_t)(v3 + 3670)))) ^ v6)))();
}

uint64_t sub_247845328@<X0>(uint64_t a1@<X6>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  *(_BYTE *)(v3 + 1847) = (a2 >> ((v2 + 107) ^ 0xC5u)) ^ 0x2D;
  *(_BYTE *)(v3 + 1848) = BYTE5(a2) ^ 0x87;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * ((238 * (v5 == (v2 ^ 0x2D5u) + v4)) ^ v2)) - 4))();
}

uint64_t sub_247845390@<X0>(uint64_t a1@<X6>, unint64_t a2@<X8>)
{
  int v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v7 = v6 + v5 + v3;
  *(_BYTE *)(v7 + 1849) = (a2 >> ((v2 ^ 0xCFu) - 48)) ^ 0xD0;
  *(_BYTE *)(v7 + 1850) = HIBYTE(a2) ^ 0x7C;
  return ((uint64_t (*)(void))(*(_QWORD *)(a1 + 8 * (v2 ^ (7456 * (v5 + 8 != v4 + 3509)))) - 8))();
}

uint64_t sub_2478453EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * (v7 ^ (352 * (v8 != v9)))) - ((v7 + 283) ^ 0x573)))();
}

uint64_t sub_247845418(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v11 = 61 * (v7 ^ 0x477u);
  *(_BYTE *)(v8 + (v11 ^ (v10 + 2546)) + v9) = 0;
  return sub_2478451A4(a7, v11);
}

uint64_t sub_24784543C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, int a16, int a17)
{
  int v17;
  int v18;
  int v19;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7 + 8 * ((1990 * (v19 == (v17 ^ 0xE67 ^ (v18 - 228)))) ^ a17)) - 12))();
}

uint64_t sub_247845474@<X0>(int a1@<W8>)
{
  int v1;
  uint64_t v2;
  int v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unsigned int v8;
  unint64_t v9;

  v3 = a1 ^ v1;
  v4 = STACK[0x518];
  v5 = STACK[0x518] - 0x3E8CF772867CF598;
  STACK[0x710] = v5;
  v6 = STACK[0x6B0];
  v7 = STACK[0x3F8];
  v8 = (a1 ^ 0x4B36AFB4) + 287715709 * (LODWORD(STACK[0x5C4]) ^ 0x8EDC66D8);
  *(_QWORD *)(v2 - 224) = v4;
  LODWORD(v4) = 142545853
              * ((((v2 - 224) ^ 0xC60089A7 | 0x82796313)
                - ((v2 - 224) ^ 0xC60089A7)
                + (((v2 - 224) ^ 0xC60089A7) & 0x7D869CEC)) ^ 0x6E8645DB);
  *(_DWORD *)(v2 - 200) = v4 + 161974688;
  *(_QWORD *)(v2 - 192) = v7;
  *(_DWORD *)(v2 - 216) = (a1 + 1234359364) ^ v4;
  *(_QWORD *)(v2 - 208) = v6;
  *(_DWORD *)(v2 - 184) = v8 ^ v4;
  *(_QWORD *)(v2 - 176) = v5;
  nullsub_1(v2 - 224);
  v9 = STACK[0x258];
  LODWORD(STACK[0x574]) = 1474818455;
  STACK[0x648] = *(_QWORD *)(v9 + 8 * (v3 - 3771));
  return ((uint64_t (*)(void))(*(_QWORD *)(v9 + 8 * (((&STACK[0x408] != 0) * ((v3 ^ 0xA00) + 893)) ^ v3 ^ 0xA1A))
                            - (((v3 ^ 0xA1A) + 1876122150) & 0x902CAFC3 ^ 0xF47)))();
}

uint64_t sub_247845D18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  int v7;

  return ((uint64_t (*)(void))(*(_QWORD *)(a7
                                        + 8
                                        * (((STACK[0x518] != 0x3E8CF772867CF598) * ((v7 ^ 0xB5C) + 2331)) ^ (v7 - 1930)))
                            - 4))();
}

uint64_t sub_247845D58@<X0>(uint64_t a1@<X8>, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t (*a33)(uint64_t))
{
  int v33;
  int v34;
  uint64_t v35;
  unint64_t v36;
  int v37;

  v35 = a33(a1 - 0x3E8CF772867CF598);
  v36 = STACK[0x258];
  v37 = STACK[0x574];
  STACK[0x550] -= 80;
  return ((uint64_t (*)(uint64_t))(*(_QWORD *)(v36
                                                      + 8
                                                      * (((v37 == v34) * ((v33 - 926176424) & 0x37345FCB ^ 0xF75)) ^ v33))
                                          - ((v33 - 959) | 0x1Cu)
                                          + 120))(v35);
}

uint64_t sub_247845DE8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v2 = (v0 + 264);
  v3 = STACK[0x7A0];
  STACK[0x2F0] = STACK[0x7A0] + 0x1117C187AE71C435;
  STACK[0x2D0] = *(_QWORD *)(v1 + 8 * v0) + (v2 ^ 0xFFFFFFFFFFFFFE70);
  STACK[0x2C0] = v3 + 0x1117C187AE71C445;
  STACK[0x2B0] = STACK[0x400];
  *(_OWORD *)&STACK[0x2E0] = xmmword_2478BB170;
  return ((uint64_t (*)(void))(*(_QWORD *)(v1 + 8 * (int)((v0 - 740451733) ^ 0xD3DD9D52 ^ v2))
                            - (((_DWORD)v0 - 740451733) & 0x2C2267DF)
                            + 703))();
}

uint64_t sub_247846154(int a1)
{
  int v1;
  unsigned int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3 + 8
                                             * ((23 * (a1 + v1 + 1093283081 == ((v2 + 1913) | 0x503) - 3907)) ^ v2))
                            - 8))();
}

uint64_t sub_2478461A8()
{
  uint64_t v0;
  uint64_t v1;
  int v2;
  uint64_t v3;

  return ((uint64_t (*)(void))(*(_QWORD *)(v3
                                        + 8
                                        * ((v2 + 9) ^ (3507
                                                     * ((unint64_t)(v1 - v0 - 0x54272EF784AF7899) > 0xF))))
                            - ((v2 - 228917992) & 0xDA50F63)
                            + 3899))();
}

uint64_t sub_247846200(double a1, int8x16_t a2, int64x2_t a3, int8x16_t a4, int8x16_t a5, int8x16_t a6, int8x16_t a7, int8x16_t a8)
{
  uint64_t v8;
  int v9;
  int v10;
  int v11;
  int8x16_t v12;
  int8x16_t v13;
  int8x16_t v14;
  int8x16_t v15;
  int8x16_t v16;
  int8x16_t v17;
  int8x16_t v18;
  int8x16_t v19;
  int8x16_t v20;
  int64x2_t v21;
  int8x16_t v22;
  int8x16_t v23;
  int8x16_t v24;
  int64x2_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  int64x2_t v29;
  int64x2_t v30;
  int64x2_t v31;
  uint64_t v32;
  int64x2_t v33;
  int64x2_t v34;
  int64x2_t v35;
  int64x2_t v36;
  int8x16_t v37;
  int8x16_t v38;
  int64x2_t v39;
  int64x2_t v40;
  int64x2_t v41;
  int64x2_t v42;
  int64x2_t v43;
  int64x2_t v44;
  int64x2_t v45;
  int64x2_t v46;
  int64x2_t v47;
  int64x2_t v48;
  int8x16_t v49;
  int8x16_t v50;
  int64x2_t v51;
  int64x2_t v52;
  int64x2_t v53;
  int64x2_t v54;
  int8x16_t v55;
  int8x16_t v56;
  int64x2_t v57;
  int64x2_t v58;
  int64x2_t v59;
  int64x2_t v60;
  int64x2_t v61;
  int64x2_t v62;
  int64x2_t v63;
  int64x2_t v64;
  int64x2_t v65;
  int64x2_t v66;
  int64x2_t v67;
  int64x2_t v68;
  int64x2_t v69;
  int64x2_t v70;
  int64x2_t v71;
  int8x16_t v72;
  int8x16_t v73;
  int8x16_t v74;
  uint64x2_t v75;
  int64x2_t v76;
  int64x2_t v77;
  int64x2_t v78;
  int64x2_t v79;
  int64x2_t v80;
  int8x16_t v81;
  int64x2_t v82;
  int64x2_t v83;
  int8x16_t v84;
  int64x2_t v85;
  int64x2_t v86;
  int64x2_t v87;
  int64x2_t v88;
  int64x2_t v89;
  int64x2_t v90;
  int64x2_t v91;
  int8x16_t v92;
  int8x16_t v93;
  int64x2_t v94;
  int64x2_t v95;
  int64x2_t v96;
  int64x2_t v97;
  int64x2_t v98;
  int8x16_t v99;
  int64x2_t v100;
  int64x2_t v101;
  int8x16_t v102;
  int64x2_t v103;
  int64x2_t v104;
  int64x2_t v105;
  int64x2_t v106;
  int64x2_t v107;
  int64x2_t v108;
  int64x2_t v109;
  int64x2_t v110;
  int64x2_t v111;
  int8x16_t v112;
  int8x16_t v113;
  int8x16_t v114;
  int64x2_t v115;
  int64x2_t v116;
  int64x2_t v117;
  int64x2_t v118;
  int64x2_t v119;
  int8x16_t v120;
  int64x2_t v121;
  int64x2_t v122;
  int8x16_t v123;
  int64x2_t v124;
  int64x2_t v125;
  int64x2_t v126;
  int64x2_t v127;
  int64x2_t v128;
  int64x2_t v129;
  int64x2_t v130;
  int8x16_t v131;
  int8x16_t v132;
  int64x2_t v133;
  int64x2_t v134;
  int64x2_t v135;
  int64x2_t v136;
  int64x2_t v137;
  int8x16_t v138;
  int64x2_t v139;
  int64x2_t v140;
  int8x16_t v141;
  int64x2_t v142;
  int64x2_t v143;
  int64x2_t v144;
  int64x2_t v145;
  int64x2_t v146;
  int64x2_t v147;
  int64x2_t v148;
  int8x16_t v149;
  int8x16_t v150;
  int8x16x4_t v152;

  v26 = v8 - 15;
  v27 = (v11 - 886395464);
  v28 = STACK[0x2F0];
  v29.i64[0] = STACK[0x2F0] + (v11 - 886395476);
  v29.i64[1] = STACK[0x2F0] + (v11 - 886395477);
  v30.i64[0] = STACK[0x2F0] + (v11 - 886395474);
  v30.i64[1] = STACK[0x2F0] + (v11 - 886395475);
  v31.i64[0] = STACK[0x2F0] + (v11 - 886395472);
  v31.i64[1] = STACK[0x2F0] + (v11 - 886395473);
  v32 = STACK[0x2F0] + v27;
  v33.i64[0] = v32;
  v33.i64[1] = STACK[0x2F0] + (v11 - 886395465);
  v34.i64[0] = STACK[0x2F0] + (v11 - 886395470);
  v34.i64[1] = STACK[0x2F0] + (v11 - 886395471);
  v35.i64[0] = STACK[0x2F0] + (v11 - 886395468);
  v35.i64[1] = STACK[0x2F0] + (v11 - 886395469);
  v36.i64[0] = STACK[0x2F0] + (v11 - 886395466);
  v36.i64[1] = STACK[0x2F0] + (v11 - 886395467);
  *(int8x16_t *)&STACK[0x300] = vorrq_s8((int8x16_t)vshlq_n_s64(v36, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v36, 8uLL));
  *(int64x2_t *)&STACK[0x350] = v31;
  *(int64x2_t *)&STACK[0x330] = v30;
  *(int8x16_t *)&STACK[0x340] = vorrq_s8((int8x16_t)vshlq_n_s64(v31, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v31, 8uLL));
  *(int8x16_t *)&STACK[0x320] = vorrq_s8((int8x16_t)vshlq_n_s64(v30, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v30, 8uLL));
  *(int8x16_t *)&STACK[0x310] = vorrq_s8((int8x16_t)vshlq_n_s64(v29, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v29, 8uLL));
  v37 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v33, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v33, 8uLL)), a2), a3);
  v38 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v34, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v34, 8uLL)), a2), a3);
  v39 = (int64x2_t)veorq_s8(v38, v14);
  v40 = (int64x2_t)veorq_s8(v37, v14);
  v41 = (int64x2_t)veorq_s8(v37, v15);
  v42 = (int64x2_t)veorq_s8(v38, v15);
  v43 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v39, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v39, 8uLL)), v42);
  v44 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v40, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v40, 8uLL)), v41);
  v45 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v44, v44), v13), v44), v25), v16);
  v46 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v43, v43), v13), v43), v25), v16);
  v47 = (int64x2_t)veorq_s8((int8x16_t)v46, vorrq_s8((int8x16_t)vshlq_n_s64(v42, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v42, 0x3DuLL)));
  v48 = (int64x2_t)veorq_s8((int8x16_t)v45, vorrq_s8((int8x16_t)vshlq_n_s64(v41, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v41, 0x3DuLL)));
  v49 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v45, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v45, 8uLL)), v48);
  v50 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v46, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v46, 8uLL)), v47);
  v51 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v49, v17), (int64x2_t)vorrq_s8(v49, a4)), (int64x2_t)a4), v18);
  v52 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v50, v17), (int64x2_t)vorrq_s8(v50, a4)), (int64x2_t)a4), v18);
  v53 = (int64x2_t)veorq_s8((int8x16_t)v52, vorrq_s8((int8x16_t)vshlq_n_s64(v47, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v47, 0x3DuLL)));
  v54 = (int64x2_t)veorq_s8((int8x16_t)v51, vorrq_s8((int8x16_t)vshlq_n_s64(v48, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v48, 0x3DuLL)));
  v55 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v51, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v51, 8uLL)), v54);
  v56 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v52, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v52, 8uLL)), v53);
  v57 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v55), (int64x2_t)vorrq_s8(v55, v19))), v22);
  v58 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v56), (int64x2_t)vorrq_s8(v56, v19))), v22);
  v59 = (int64x2_t)veorq_s8((int8x16_t)v58, vorrq_s8((int8x16_t)vshlq_n_s64(v53, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v53, 0x3DuLL)));
  v60 = (int64x2_t)veorq_s8((int8x16_t)v57, vorrq_s8((int8x16_t)vshlq_n_s64(v54, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v54, 0x3DuLL)));
  v61 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v58, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v58, 8uLL)), v59), a5);
  v62 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v57, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v57, 8uLL)), v60), a5);
  v63 = (int64x2_t)veorq_s8((int8x16_t)v62, vorrq_s8((int8x16_t)vshlq_n_s64(v60, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v60, 0x3DuLL)));
  v64 = (int64x2_t)veorq_s8((int8x16_t)v61, vorrq_s8((int8x16_t)vshlq_n_s64(v59, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v59, 0x3DuLL)));
  v65 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v62, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v62, 8uLL)), v63), a6);
  v66 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v61, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v61, 8uLL)), v64), a6);
  v67 = (int64x2_t)veorq_s8((int8x16_t)v66, vorrq_s8((int8x16_t)vshlq_n_s64(v64, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v64, 0x3DuLL)));
  v68 = (int64x2_t)veorq_s8((int8x16_t)v65, vorrq_s8((int8x16_t)vshlq_n_s64(v63, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v63, 0x3DuLL)));
  v69 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v66, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v66, 8uLL)), v67), a7);
  v70 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v65, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v65, 8uLL)), v68), a7);
  v71 = (int64x2_t)veorq_s8((int8x16_t)v69, vorrq_s8((int8x16_t)vshlq_n_s64(v67, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v67, 0x3DuLL)));
  v72 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v35, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v35, 8uLL)), a2), a3);
  v73 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v69, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v69, 8uLL)), v71);
  v74 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v70, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v70, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v70, vorrq_s8((int8x16_t)vshlq_n_s64(v68, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v68, 0x3DuLL))));
  v75 = (uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v73, v23), (int64x2_t)vorrq_s8(v73, a8)), (int64x2_t)a8), v24);
  v152.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v74, v23), (int64x2_t)vorrq_s8(v74, a8)), (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v33, 3uLL), v12)));
  v152.val[3] = (int8x16_t)vshlq_u64(v75, (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v34, 3uLL), v12)));
  v76 = (int64x2_t)veorq_s8(v72, v14);
  v77 = (int64x2_t)veorq_s8(v72, v15);
  v78 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v76, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v76, 8uLL)), v77);
  v79 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v78, v78), v13), v78), v25), v16);
  v80 = (int64x2_t)veorq_s8((int8x16_t)v79, vorrq_s8((int8x16_t)vshlq_n_s64(v77, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v77, 0x3DuLL)));
  v81 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v79, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v79, 8uLL)), v80);
  v82 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v81, v17), (int64x2_t)vorrq_s8(v81, a4)), (int64x2_t)a4), v18);
  v83 = (int64x2_t)veorq_s8((int8x16_t)v82, vorrq_s8((int8x16_t)vshlq_n_s64(v80, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v80, 0x3DuLL)));
  v84 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v82, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v82, 8uLL)), v83);
  v85 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v84), (int64x2_t)vorrq_s8(v84, v19))), v22);
  v86 = (int64x2_t)veorq_s8((int8x16_t)v85, vorrq_s8((int8x16_t)vshlq_n_s64(v83, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v83, 0x3DuLL)));
  v87 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v85, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v85, 8uLL)), v86), a5);
  v88 = (int64x2_t)veorq_s8((int8x16_t)v87, vorrq_s8((int8x16_t)vshlq_n_s64(v86, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v86, 0x3DuLL)));
  v89 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v87, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v87, 8uLL)), v88), a6);
  v90 = (int64x2_t)veorq_s8((int8x16_t)v89, vorrq_s8((int8x16_t)vshlq_n_s64(v88, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v88, 0x3DuLL)));
  v91 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v89, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v89, 8uLL)), v90), a7);
  v92 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v91, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v91, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v91, vorrq_s8((int8x16_t)vshlq_n_s64(v90, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v90, 0x3DuLL))));
  v93 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x300], a2), a3);
  v152.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v92, v23), (int64x2_t)vorrq_s8(v92, a8)), (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v35, 3uLL), v12)));
  v94 = (int64x2_t)veorq_s8(v93, v14);
  v95 = (int64x2_t)veorq_s8(v93, v15);
  v96 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v94, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v94, 8uLL)), v95);
  v97 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v96, v96), v13), v96), v25), v16);
  v98 = (int64x2_t)veorq_s8((int8x16_t)v97, vorrq_s8((int8x16_t)vshlq_n_s64(v95, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v95, 0x3DuLL)));
  v99 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v97, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v97, 8uLL)), v98);
  v100 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v99, v17), (int64x2_t)vorrq_s8(v99, a4)), (int64x2_t)a4), v18);
  v101 = (int64x2_t)veorq_s8((int8x16_t)v100, vorrq_s8((int8x16_t)vshlq_n_s64(v98, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v98, 0x3DuLL)));
  v102 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v100, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v100, 8uLL)), v101);
  v103 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v102), (int64x2_t)vorrq_s8(v102, v19))), v22);
  v104 = (int64x2_t)veorq_s8((int8x16_t)v103, vorrq_s8((int8x16_t)vshlq_n_s64(v101, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v101, 0x3DuLL)));
  v105 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v103, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v103, 8uLL)), v104), a5);
  v106 = (int64x2_t)veorq_s8((int8x16_t)v105, vorrq_s8((int8x16_t)vshlq_n_s64(v104, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v104, 0x3DuLL)));
  v107 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v105, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v105, 8uLL)), v106), a6);
  v108 = (int64x2_t)veorq_s8((int8x16_t)v107, vorrq_s8((int8x16_t)vshlq_n_s64(v106, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v106, 0x3DuLL)));
  v109 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v107, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v107, 8uLL)), v108), a7);
  v110 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v109, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v109, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v109, vorrq_s8((int8x16_t)vshlq_n_s64(v108, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v108, 0x3DuLL))));
  v111 = vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)v110, v23), (int64x2_t)vorrq_s8((int8x16_t)v110, a8));
  v110.i64[0] = v28 + (v11 - 886395478);
  v110.i64[1] = v28 + (v11 - 886395479);
  v152.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(v111, (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v36, 3uLL), v12)));
  v112 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(vorrq_s8((int8x16_t)vshlq_n_s64(v110, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v110, 8uLL)), a2), a3);
  v113 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x310], a2), a3);
  v111.i64[0] = vqtbl4q_s8(v152, *(int8x16_t *)&STACK[0x2E0]).u64[0];
  v152.val[0] = veorq_s8(v113, v14);
  v152.val[1] = veorq_s8(v112, v14);
  v152.val[2] = veorq_s8(v112, v15);
  v152.val[3] = veorq_s8(v113, v15);
  v152.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)v152.val[3]);
  v152.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)v152.val[2]);
  v152.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v152.val[1], (int64x2_t)v152.val[1]), v13), (int64x2_t)v152.val[1]), v25), v16);
  v152.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64((int64x2_t)v152.val[0], (int64x2_t)v152.val[0]), v13), (int64x2_t)v152.val[0]), v25), v16);
  v152.val[3] = veorq_s8(v152.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[3], 0x3DuLL)));
  v152.val[2] = veorq_s8(v152.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[2], 0x3DuLL)));
  v152.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)v152.val[2]);
  v152.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)v152.val[3]);
  v152.val[1] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v152.val[1], v17), (int64x2_t)vorrq_s8(v152.val[1], a4)), (int64x2_t)a4), v18);
  v152.val[0] = veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v152.val[0], v17), (int64x2_t)vorrq_s8(v152.val[0], a4)), (int64x2_t)a4), v18);
  v152.val[3] = veorq_s8(v152.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[3], 0x3DuLL)));
  v152.val[2] = veorq_s8(v152.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[2], 0x3DuLL)));
  v152.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)v152.val[2]);
  v152.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)v152.val[3]);
  v152.val[1] = veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v152.val[1]), (int64x2_t)vorrq_s8(v152.val[1], v19))), v22);
  v152.val[0] = veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v152.val[0]), (int64x2_t)vorrq_s8(v152.val[0], v19))), v22);
  v152.val[3] = veorq_s8(v152.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[3], 0x3DuLL)));
  v152.val[2] = veorq_s8(v152.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[2], 0x3DuLL)));
  v152.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)v152.val[3]), a5);
  v152.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)v152.val[2]), a5);
  v152.val[2] = veorq_s8(v152.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[2], 0x3DuLL)));
  v152.val[3] = veorq_s8(v152.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[3], 0x3DuLL)));
  v152.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)v152.val[2]), a6);
  v152.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)v152.val[3]), a6);
  v152.val[3] = veorq_s8(v152.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[3], 0x3DuLL)));
  v152.val[2] = veorq_s8(v152.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[2], 0x3DuLL)));
  v152.val[0] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)v152.val[3]), a7);
  v152.val[1] = veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)v152.val[2]), a7);
  v114 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x320], a2), a3);
  v152.val[0] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[0], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[0], 8uLL)), (int64x2_t)veorq_s8(v152.val[0], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[3], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[3], 0x3DuLL))));
  v152.val[1] = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[1], 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[1], 8uLL)), (int64x2_t)veorq_s8(v152.val[1], vorrq_s8((int8x16_t)vshlq_n_s64((int64x2_t)v152.val[2], 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v152.val[2], 0x3DuLL))));
  v152.val[3] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v152.val[1], v23), (int64x2_t)vorrq_s8(v152.val[1], a8)), (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v110, 3uLL), v12)));
  v152.val[2] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v152.val[0], v23), (int64x2_t)vorrq_s8(v152.val[0], a8)), (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(v29, 3uLL), v12)));
  v115 = (int64x2_t)veorq_s8(v114, v14);
  v116 = (int64x2_t)veorq_s8(v114, v15);
  v117 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v115, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v115, 8uLL)), v116);
  v118 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v117, v117), v13), v117), v25), v16);
  v119 = (int64x2_t)veorq_s8((int8x16_t)v118, vorrq_s8((int8x16_t)vshlq_n_s64(v116, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v116, 0x3DuLL)));
  v120 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v118, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v118, 8uLL)), v119);
  v121 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v120, v17), (int64x2_t)vorrq_s8(v120, a4)), (int64x2_t)a4), v18);
  v122 = (int64x2_t)veorq_s8((int8x16_t)v121, vorrq_s8((int8x16_t)vshlq_n_s64(v119, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v119, 0x3DuLL)));
  v123 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v121, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v121, 8uLL)), v122);
  v124 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v123), (int64x2_t)vorrq_s8(v123, v19))), v22);
  v125 = (int64x2_t)veorq_s8((int8x16_t)v124, vorrq_s8((int8x16_t)vshlq_n_s64(v122, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v122, 0x3DuLL)));
  v126 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v124, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v124, 8uLL)), v125), a5);
  v127 = (int64x2_t)veorq_s8((int8x16_t)v126, vorrq_s8((int8x16_t)vshlq_n_s64(v125, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v125, 0x3DuLL)));
  v128 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v126, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v126, 8uLL)), v127), a6);
  v129 = (int64x2_t)veorq_s8((int8x16_t)v128, vorrq_s8((int8x16_t)vshlq_n_s64(v127, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v127, 0x3DuLL)));
  v130 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v128, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v128, 8uLL)), v129), a7);
  v131 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v130, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v130, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v130, vorrq_s8((int8x16_t)vshlq_n_s64(v129, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v129, 0x3DuLL))));
  v132 = (int8x16_t)vaddq_s64((int64x2_t)vandq_s8(*(int8x16_t *)&STACK[0x340], a2), a3);
  v152.val[1] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v131, v23), (int64x2_t)vorrq_s8(v131, a8)), (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x330], 3uLL), v12)));
  v133 = (int64x2_t)veorq_s8(v132, v14);
  v134 = (int64x2_t)veorq_s8(v132, v15);
  v135 = vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v133, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v133, 8uLL)), v134);
  v136 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8((int8x16_t)vaddq_s64(v135, v135), v13), v135), v25), v16);
  v137 = (int64x2_t)veorq_s8((int8x16_t)v136, vorrq_s8((int8x16_t)vshlq_n_s64(v134, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v134, 0x3DuLL)));
  v138 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v136, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v136, 8uLL)), v137);
  v139 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v138, v17), (int64x2_t)vorrq_s8(v138, a4)), (int64x2_t)a4), v18);
  v140 = (int64x2_t)veorq_s8((int8x16_t)v139, vorrq_s8((int8x16_t)vshlq_n_s64(v137, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v137, 0x3DuLL)));
  v141 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v139, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v139, 8uLL)), v140);
  v142 = (int64x2_t)veorq_s8((int8x16_t)vsubq_s64(v21, vaddq_s64((int64x2_t)vornq_s8(v20, v141), (int64x2_t)vorrq_s8(v141, v19))), v22);
  v143 = (int64x2_t)veorq_s8((int8x16_t)v142, vorrq_s8((int8x16_t)vshlq_n_s64(v140, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v140, 0x3DuLL)));
  v144 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v142, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v142, 8uLL)), v143), a5);
  v145 = (int64x2_t)veorq_s8((int8x16_t)v144, vorrq_s8((int8x16_t)vshlq_n_s64(v143, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v143, 0x3DuLL)));
  v146 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v144, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v144, 8uLL)), v145), a6);
  v147 = (int64x2_t)veorq_s8((int8x16_t)v146, vorrq_s8((int8x16_t)vshlq_n_s64(v145, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v145, 0x3DuLL)));
  v148 = (int64x2_t)veorq_s8((int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v146, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v146, 8uLL)), v147), a7);
  v149 = (int8x16_t)vaddq_s64((int64x2_t)vorrq_s8((int8x16_t)vshlq_n_s64(v148, 0x38uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v148, 8uLL)), (int64x2_t)veorq_s8((int8x16_t)v148, vorrq_s8((int8x16_t)vshlq_n_s64(v147, 3uLL), (int8x16_t)vshrq_n_u64((uint64x2_t)v147, 0x3DuLL))));
  v152.val[0] = (int8x16_t)vshlq_u64((uint64x2_t)veorq_s8((int8x16_t)vaddq_s64(vsubq_s64((int64x2_t)vorrq_s8(v149, v23), (int64x2_t)vorrq_s8(v149, a8)), (int64x2_t)a8), v24), (uint64x2_t)vnegq_s64((int64x2_t)vandq_s8((int8x16_t)vshlq_n_s64(*(int64x2_t *)&STACK[0x350], 3uLL), v12)));
  v111.i64[1] = vqtbl4q_s8(v152, *(int8x16_t *)&STACK[0x2E0]).u64[0];
  v152.val[0].i64[0] = 0x8282828282828282;
  v152.val[0].i64[1] = 0x8282828282828282;
  v150 = vaddq_s8(*(int8x16_t *)(v26 + v27), v152.val[0]);
  v152.val[0] = vrev64q_s8((int8x16_t)v111);
  *(int8x16_t *)(v32 - 0x1117C187AE71C40CLL) = veorq_s8(vextq_s8(v152.val[0], v152.val[0], 8uLL), v150);
  return ((uint64_t (*)(void))(*(_QWORD *)(STACK[0x258] + 8 * ((3570 * (v10 != 16)) ^ (v9 - 3519))) - 8))();
}

