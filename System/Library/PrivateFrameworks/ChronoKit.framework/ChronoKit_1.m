uint64_t sub_1D25C1EE8(char *a1, uint64_t a2, int *a3)
{
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = sub_1D26CBA24();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
    {
      v10 = v8;
      v11 = a3[7];
    }
    else
    {
      v12 = sub_1D26CB9DC();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
      {
        v10 = v12;
        v11 = a3[8];
      }
      else
      {
        v13 = sub_1D26CB880();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == (_DWORD)a2)
        {
          v10 = v13;
          v11 = a3[10];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a3[13];
        }
      }
    }
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(&a1[v11], a2, v10);
  }
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionInfo()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D25C1FE0(char *result, uint64_t a2, int a3, int *a4)
{
  char *v5;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v8 = sub_1D26CBA24();
    v9 = *(_QWORD *)(v8 - 8);
    if (*(_DWORD *)(v9 + 84) == a3)
    {
      v10 = v8;
      v11 = a4[7];
    }
    else
    {
      v12 = sub_1D26CB9DC();
      v9 = *(_QWORD *)(v12 - 8);
      if (*(_DWORD *)(v9 + 84) == a3)
      {
        v10 = v12;
        v11 = a4[8];
      }
      else
      {
        v13 = sub_1D26CB880();
        v9 = *(_QWORD *)(v13 - 8);
        if (*(_DWORD *)(v9 + 84) == a3)
        {
          v10 = v13;
          v11 = a4[10];
        }
        else
        {
          v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
          v9 = *(_QWORD *)(v10 - 8);
          v11 = a4[13];
        }
      }
    }
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(&v5[v11], a2, a2, v10);
  }
  return result;
}

void sub_1D25C20C8()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  sub_1D26CBA24();
  if (v0 <= 0x3F)
  {
    sub_1D26CB9DC();
    if (v1 <= 0x3F)
    {
      sub_1D26CB880();
      if (v2 <= 0x3F)
      {
        sub_1D25B46FC();
        if (v3 <= 0x3F)
          swift_initStructMetadata();
      }
    }
  }
}

uint64_t getEnumTagSinglePayload for WidgetExtensionInfo.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xE9)
    goto LABEL_17;
  if (a2 + 23 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 23) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 23;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 23;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 23;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x18;
  v8 = v6 - 24;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetExtensionInfo.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 23 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 23) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xE9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xE8)
    return ((uint64_t (*)(void))((char *)&loc_1D25C22DC + 4 * byte_1D26D4B5D[v4]))();
  *a1 = a2 + 23;
  return ((uint64_t (*)(void))((char *)sub_1D25C2310 + 4 * byte_1D26D4B58[v4]))();
}

uint64_t sub_1D25C2310(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25C2318(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25C2320);
  return result;
}

uint64_t sub_1D25C232C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25C2334);
  *(_BYTE *)result = a2 + 23;
  return result;
}

uint64_t sub_1D25C2338(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25C2340(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetExtensionInfo.CodingKeys()
{
  return &type metadata for WidgetExtensionInfo.CodingKeys;
}

unint64_t sub_1D25C2360()
{
  unint64_t result;

  result = qword_1EFC82CC0;
  if (!qword_1EFC82CC0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D4E94, &type metadata for WidgetExtensionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82CC0);
  }
  return result;
}

unint64_t sub_1D25C23A8()
{
  unint64_t result;

  result = qword_1ED963628;
  if (!qword_1ED963628)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D4DCC, &type metadata for WidgetExtensionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED963628);
  }
  return result;
}

unint64_t sub_1D25C23F0()
{
  unint64_t result;

  result = qword_1ED963620;
  if (!qword_1ED963620)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D4DF4, &type metadata for WidgetExtensionInfo.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED963620);
  }
  return result;
}

uint64_t sub_1D25C2434()
{
  unint64_t v0;

  v0 = sub_1D26CE400();
  swift_bridgeObjectRelease();
  if (v0 >= 0x18)
    return 24;
  else
    return v0;
}

uint64_t sub_1D25C2484()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t static WidgetArchiver.ValidationOptions.extensionManaged(by:)(uint64_t a1)
{
  return sub_1D25C25E4(a1, (uint64_t)&unk_1E93D8F50, (void (*)(_BYTE *, uint64_t))sub_1D2538F38);
}

{
  return sub_1D25C25E4(a1, (uint64_t)&unk_1E93D8F78, (void (*)(_BYTE *, uint64_t))sub_1D2538F38);
}

uint64_t sub_1D25C24CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  void *v4;
  void *v5;
  uint64_t v6;
  _QWORD *v8;

  v2 = a2[3];
  v3 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v2);
  v4 = (void *)sub_1D26CD38C();
  v5 = (void *)(*(uint64_t (**)(void *, uint64_t, uint64_t))(v3 + 8))(v4, v2, v3);

  if (v5)
    return 0;
  sub_1D25C29C0();
  v6 = swift_allocError();
  *v8 = 0xD00000000000001DLL;
  v8[1] = 0x80000001D26E12F0;
  return v6;
}

uint64_t sub_1D25C259C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocObject();
}

uint64_t sub_1D25C25C0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25C24CC(a1, (_QWORD *)(v1 + 16));
}

uint64_t sub_1D25C25E4(uint64_t a1, uint64_t a2, void (*a3)(_BYTE *, uint64_t))
{
  uint64_t v5;
  _BYTE v7[40];

  sub_1D26CD344();
  sub_1D2538510(a1, (uint64_t)v7);
  v5 = swift_allocObject();
  a3(v7, v5 + 16);
  return sub_1D26CD338();
}

uint64_t sub_1D25C2668(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void (**v14)(_QWORD, _QWORD);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  _QWORD *v22;
  void *v23;
  id v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t *v27;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  void (**v33)(_QWORD, _QWORD);

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962048);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CD3B0();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v10);
  v12 = (void *)sub_1D26CD38C();
  ExtensionManaging.extension(for:)((uint64_t)v12, v10, v11);

  v13 = v32;
  if (!v32)
  {
    sub_1D253703C((uint64_t)&v30, &qword_1ED962040);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v7 + 56))(v5, 1, 1, v6);
    goto LABEL_10;
  }
  v14 = v33;
  __swift_project_boxed_opaque_existential_0(&v30, v32);
  Extension.bundleStub.getter(v13, v14);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v5, 0, 1, v6);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
LABEL_10:
    sub_1D253703C((uint64_t)v5, &qword_1ED962048);
    v30 = 0;
    v31 = 0xE000000000000000;
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v30 = 0xD000000000000012;
    v31 = 0x80000001D26E1280;
    v23 = (void *)sub_1D26CD38C();
    v24 = objc_msgSend(v23, sel_description);
    sub_1D26CD938();

    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    v25 = v30;
    v26 = v31;
    sub_1D25C29C0();
    v21 = swift_allocError();
    *v27 = v25;
    v27[1] = v26;
    return v21;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
  v15 = sub_1D26CD3A4();
  v17 = v16;
  if (v15 == sub_1D26CD3A4() && v17 == v18)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_13;
  }
  v20 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v20 & 1) != 0)
  {
LABEL_13:
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return 0;
  }
  sub_1D25C29C0();
  v21 = swift_allocError();
  *v22 = 0xD000000000000046;
  v22[1] = 0x80000001D26E12A0;
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return v21;
}

uint64_t sub_1D25C29B8(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25C2668(a1, (_QWORD *)(v1 + 16));
}

unint64_t sub_1D25C29C0()
{
  unint64_t result;

  result = qword_1ED96B168;
  if (!qword_1ED96B168)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D4F6C, &type metadata for SimpleError);
    atomic_store(result, (unint64_t *)&qword_1ED96B168);
  }
  return result;
}

ValueMetadata *type metadata accessor for SimpleError()
{
  return &type metadata for SimpleError;
}

void static ActivityCacheKey.allTargetContents(at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[2];

  v18[1] = a6;
  v9 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v18 - v10;
  v12 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v18 - v13;
  v15 = sub_1D26CB880();
  MEMORY[0x1E0C80A78](v15);
  (*(void (**)(char *, uint64_t))(v17 + 16))((char *)v18 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 56))(v14, 1, 1, a2);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 56))(v11, 1, 1, a3);
  sub_1D25C2B94();
}

void sub_1D25C2B94()
{
  type metadata accessor for ActivityCacheKey();
}

uint64_t sub_1D25C2BE4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v8 = v6 + *(int *)(a1 + 68);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(v8, 1, 1, v4);
  v9 = v6 + *(int *)(a1 + 72);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(v9, 1, 1, v2);
  v10 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v6, v5, v10);
  v11 = sub_1D26CDF38();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 40))(v8, v3, v11);
  v12 = sub_1D26CDF38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v9, v1, v12);
}

void static ActivityCacheKey.allContent(for:at:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v21[2];

  v21[0] = a6;
  v21[1] = a7;
  v11 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v21 - v12;
  v14 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v21 - v15;
  v17 = sub_1D26CB880();
  MEMORY[0x1E0C80A78](v17);
  (*(void (**)(char *, uint64_t))(v19 + 16))((char *)v21 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0), a2);
  v20 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v16, a1, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v16, 0, 1, a3);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 56))(v13, 1, 1, a4);
  sub_1D25C2B94();
}

void ActivityCacheKey.init(baseURL:variantID:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[6];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v25[1] = a7;
  v25[2] = a5;
  v26 = a6;
  v27 = a9;
  v25[4] = a1;
  v16 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v16);
  v17 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v25 - v18;
  v20 = sub_1D26CB880();
  v21 = *(_QWORD *)(v20 - 8);
  v25[3] = v20;
  v25[5] = v21;
  MEMORY[0x1E0C80A78](v20);
  (*(void (**)(char *, uint64_t))(v23 + 16))((char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  v24 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v19, a2, a3);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v19, 0, 1, a3);
  v28 = a3;
  v29 = a4;
  v30 = a5;
  v31 = v26;
  v32 = a7;
  v33 = a8;
  type metadata accessor for VariantIdentifier();
}

void sub_1D25C2F90(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v4 = *(_QWORD *)(v2 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 16))(v3, v1 + *(int *)(a1 + 68), v2);
  (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v4 + 56))(v3, 0, 1, v2);
  sub_1D25C2B94();
}

uint64_t sub_1D25C2FF0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v0, v1);
  return (*(uint64_t (**)(_QWORD, _QWORD))(*(_QWORD *)(v2 - 152) + 8))(*(_QWORD *)(v2 - 160), *(_QWORD *)(v2 - 168));
}

void ActivityCacheKey.init(baseURL:target:content:)(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD v25[2];
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v30 = a7;
  v31 = a8;
  v28 = a9;
  v29 = a6;
  v25[1] = a1;
  v26 = a3;
  v25[0] = a2;
  v27 = a10;
  v14 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v25 - v15;
  v17 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v25 - v18;
  v20 = sub_1D26CB880();
  v21 = *(_QWORD *)(v20 - 8);
  MEMORY[0x1E0C80A78](v20);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))((char *)v25 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v20);
  v23 = *(_QWORD *)(a4 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v19, a2, a4);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v23 + 56))(v19, 0, 1, a4);
  v24 = *(_QWORD *)(a5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v16, v26, a5);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v16, 0, 1, a5);
  sub_1D25C2B94();
}

uint64_t sub_1D25C31C0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v4, v3);
  (*(void (**)(_QWORD, uint64_t))(v0 + 8))(*(_QWORD *)(v7 - 144), v1);
  return (*(uint64_t (**)(_QWORD, uint64_t))(v6 + 8))(*(_QWORD *)(v7 - 136), v5);
}

uint64_t ActivityCacheKey.targetID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 68);
  v5 = sub_1D26CDF38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ActivityCacheKey.contentID.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;

  v4 = v2 + *(int *)(a1 + 72);
  v5 = sub_1D26CDF38();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 16))(a2, v4, v5);
}

uint64_t ActivityCacheKey.description.getter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t TupleTypeMetadata2;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unsigned int (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  int v30;
  uint64_t v31;
  void (*v32)(char *, char *, uint64_t);
  char *v33;
  char *v34;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  unint64_t v43;

  v3 = *(_QWORD *)(a1 + 24);
  v39 = *(_QWORD *)(v3 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v37 = (char *)&v36 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v4 + 16);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v4);
  v41 = (char *)&v36 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CDF38();
  v40 = v3;
  v10 = sub_1D26CDF38();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v12 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v14 = (char *)&v36 - v13;
  v15 = *(int *)(a1 + 68);
  v16 = *(int *)(a1 + 72);
  v38 = a1;
  v17 = v1 + v15;
  v18 = v1 + v16;
  v19 = &v14[*(int *)(v12 + 48)];
  v20 = *(_QWORD *)(v9 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v20 + 16))(v14, v17, v9);
  v21 = *(_QWORD *)(v10 - 8);
  v22 = v19;
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v19, v18, v10);
  v23 = v7;
  v24 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  v25 = v6;
  if (v24(v14, 1, v6) == 1)
  {
    (*(void (**)(char *, uint64_t))(v21 + 8))(v22, v10);
    (*(void (**)(char *, uint64_t))(v20 + 8))(v14, v9);
    return 0x656B2D6568636163;
  }
  else
  {
    v36 = v21;
    v28 = v39;
    v27 = v40;
    v29 = v22;
    v30 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v39 + 48))(v22, 1, v40);
    v31 = v23;
    v32 = *(void (**)(char *, char *, uint64_t))(v23 + 32);
    v33 = v41;
    v32(v41, v14, v25);
    if (v30 == 1)
    {
      v42 = 0;
      v43 = 0xE000000000000000;
      sub_1D26CDA04();
      sub_1D26CE3A0();
      sub_1D26CDA04();
      v26 = v42;
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v25);
      (*(void (**)(char *, uint64_t))(v36 + 8))(v29, v10);
    }
    else
    {
      v34 = v37;
      (*(void (**)(char *, char *, uint64_t))(v28 + 32))(v37, v22, v27);
      v42 = 0;
      v43 = 0xE000000000000000;
      sub_1D26CE0A0();
      sub_1D26CDA04();
      sub_1D26CE3A0();
      sub_1D26CDA04();
      sub_1D26CE3A0();
      v26 = v42;
      (*(void (**)(char *, uint64_t))(v28 + 8))(v34, v27);
      (*(void (**)(char *, uint64_t))(v31 + 8))(v33, v25);
    }
  }
  return v26;
}

uint64_t ActivityCacheKey<>.debugDescription.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  int v27;
  char *v28;
  char *v29;
  uint64_t v30;
  _QWORD v32[2];
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  unint64_t v40;

  v4 = v3;
  v32[1] = a3;
  v6 = *(_QWORD *)(a1 + 24);
  v7 = *(_QWORD *)(v6 - 8);
  v34 = a2;
  v35 = v7;
  v8 = MEMORY[0x1E0C80A78](a1);
  v33 = (char *)v32 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(v8 + 16);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v8);
  v36 = (char *)v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = sub_1D26CDF38();
  v37 = v6;
  v14 = sub_1D26CDF38();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v18 = (char *)v32 - v17;
  v19 = v4 + *(int *)(a1 + 68);
  v20 = v4 + *(int *)(a1 + 72);
  v21 = (char *)v32 + *(int *)(v16 + 48) - v17;
  v22 = *(_QWORD *)(v13 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))((char *)v32 - v17, v19, v13);
  v23 = *(_QWORD *)(v14 - 8);
  v24 = *(void (**)(char *, uint64_t, uint64_t))(v23 + 16);
  v38 = v21;
  v24(v21, v20, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v18, 1, v10) == 1)
  {
    v39 = 0;
    v40 = 0xE000000000000000;
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    v39 = 0x656B2D6568636163;
    v40 = 0xEF402A2F2A3A3A79;
    sub_1D26CB880();
    sub_1D25C39E8();
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v25 = v39;
    (*(void (**)(char *, uint64_t))(v23 + 8))(v38, v14);
    (*(void (**)(char *, uint64_t))(v22 + 8))(v18, v13);
  }
  else
  {
    v32[0] = v4;
    v26 = v35;
    v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v35 + 48))(v38, 1, v37);
    v28 = v36;
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v36, v18, v10);
    if (v27 == 1)
    {
      v39 = 0;
      v40 = 0xE000000000000000;
      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      v39 = 0x656B2D6568636163;
      v40 = 0xEB000000003A3A79;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CB880();
      sub_1D25C39E8();
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v25 = v39;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v10);
      (*(void (**)(char *, uint64_t))(v23 + 8))(v38, v14);
    }
    else
    {
      v29 = v33;
      v30 = v37;
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v33, v38, v37);
      v39 = 0;
      v40 = 0xE000000000000000;
      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      v39 = 0x656B2D6568636163;
      v40 = 0xEB000000003A3A79;
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CB880();
      sub_1D25C39E8();
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v25 = v39;
      (*(void (**)(char *, uint64_t))(v26 + 8))(v29, v30);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v28, v10);
    }
  }
  return v25;
}

unint64_t sub_1D25C39E8()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96C220[0];
  if (!qword_1ED96C220[0])
  {
    v1 = sub_1D26CB880();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB0048], v1);
    atomic_store(result, qword_1ED96C220);
  }
  return result;
}

uint64_t sub_1D25C3A30(uint64_t a1, uint64_t a2)
{
  return ActivityCacheKey<>.debugDescription.getter(a1, *(_QWORD *)(a2 - 8), *(_QWORD *)(a2 - 16));
}

uint64_t sub_1D25C3A3C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = sub_1D26CB880();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CDF38();
    if (v2 <= 0x3F)
    {
      result = sub_1D26CDF38();
      if (v3 <= 0x3F)
      {
        swift_initStructMetadata();
        return 0;
      }
    }
  }
  return result;
}

uint64_t *sub_1D25C3AE4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  size_t v12;
  uint64_t v13;
  uint64_t v14;
  size_t v15;
  size_t v16;
  uint64_t v17;
  uint64_t v20;
  uint64_t v21;
  const void *v22;
  void *v23;
  const void *v24;
  size_t __n;
  uint64_t v27;
  uint64_t v28;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v14 = *(_DWORD *)(v13 + 80);
  v15 = v12 + v14;
  v16 = *(_QWORD *)(v13 + 64);
  if (!*(_DWORD *)(v13 + 84))
    ++v16;
  v17 = (*(_BYTE *)(v9 + 80) | *(_BYTE *)(v7 + 80) | *(_BYTE *)(v13 + 80));
  if (v17 <= 7
    && v16 + ((v12 + v14 + (v11 & ~v10)) & ~v14) <= 0x18
    && ((*(_DWORD *)(v9 + 80) | *(_DWORD *)(v7 + 80) | *(_DWORD *)(v13 + 80)) & 0x100000) == 0)
  {
    v28 = *(_QWORD *)(a3 + 24);
    v21 = ~v10;
    __n = v16;
    v27 = ~v14;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(a1, a2, v6);
    v22 = (const void *)(((unint64_t)a2 + v11) & v21);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v22, 1, v8))
    {
      memcpy((void *)(((unint64_t)a1 + v11) & v21), v22, v12);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v11) & v21, v22, v8);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v11) & v21, 0, 1, v8);
    }
    v23 = (void *)((v15 + (((unint64_t)a1 + v11) & v21)) & v27);
    v24 = (const void *)(((unint64_t)v22 + v15) & v27);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v13 + 48))(v24, 1, v28))
    {
      memcpy(v23, v24, __n);
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v13 + 16))(v23, v24, v28);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v23, 0, 1, v28);
    }
  }
  else
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v17 + 16) & ~v17));
    swift_retain();
  }
  return a1;
}

uint64_t sub_1D25C3CC8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t result;

  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
  v6 = *(_QWORD *)(v5 + 64) + a1;
  v7 = *(_QWORD *)(a2 + 16);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = (v6 + *(unsigned __int8 *)(v8 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v8 + 48))(v9, 1, v7))
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v9, v7);
  v10 = *(_QWORD *)(a2 + 24);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(_QWORD *)(v8 + 64) + v9;
  if (!*(_DWORD *)(v8 + 84))
    ++v12;
  v13 = (v12 + *(unsigned __int8 *)(v11 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v10);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(unint64_t, uint64_t))(v11 + 8))(v13, v10);
  return result;
}

uint64_t sub_1D25C3DAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  size_t v24;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16))(a1, a2, v6);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v12, v13, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 + v20;
  v22 = (void *)(((unint64_t)v12 + v21) & ~v20);
  v23 = (const void *)(((unint64_t)v13 + v21) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18))
  {
    if (*(_DWORD *)(v19 + 84))
      v24 = *(_QWORD *)(v19 + 64);
    else
      v24 = *(_QWORD *)(v19 + 64) + 1;
    memcpy(v22, v23, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 16))(v22, v23, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_1D25C3F20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  size_t v28;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24))(a1, a2, v6);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (void *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = *(_QWORD *)(a3 + 24);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 + v21;
  v23 = (void *)(((unint64_t)v12 + v22) & ~v21);
  v24 = (void *)(((unint64_t)v13 + v22) & ~v21);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v26 = v25(v23, 1, v19);
  v27 = v25(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 16))(v23, v24, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      return a1;
    }
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 24))(v23, v24, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v23, v19);
  }
  if (*(_DWORD *)(v20 + 84))
    v28 = *(_QWORD *)(v20 + 64);
  else
    v28 = *(_QWORD *)(v20 + 64) + 1;
  memcpy(v23, v24, v28);
  return a1;
}

uint64_t sub_1D25C4124(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  const void *v13;
  int v14;
  size_t v15;
  size_t v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  const void *v23;
  size_t v24;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 32))(a1, a2, v6);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (const void *)((v11 + a2) & ~v10);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v13, 1, v8))
  {
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
    if (v14)
      v16 = v15;
    else
      v16 = v15 + 1;
    memcpy(v12, v13, v16);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v12, v13, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
    v14 = *(_DWORD *)(v9 + 84);
    v15 = *(_QWORD *)(v9 + 64);
  }
  if (v14)
    v17 = v15;
  else
    v17 = v15 + 1;
  v18 = *(_QWORD *)(a3 + 24);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = *(unsigned __int8 *)(v19 + 80);
  v21 = v17 + v20;
  v22 = (void *)(((unint64_t)v12 + v21) & ~v20);
  v23 = (const void *)(((unint64_t)v13 + v21) & ~v20);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v19 + 48))(v23, 1, v18))
  {
    if (*(_DWORD *)(v19 + 84))
      v24 = *(_QWORD *)(v19 + 64);
    else
      v24 = *(_QWORD *)(v19 + 64) + 1;
    memcpy(v22, v23, v24);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v19 + 32))(v22, v23, v18);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v22, 0, 1, v18);
  }
  return a1;
}

uint64_t sub_1D25C4298(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  uint64_t (*v14)(void *, uint64_t, uint64_t);
  int v15;
  int v16;
  size_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void *v23;
  void *v24;
  uint64_t (*v25)(void *, uint64_t, uint64_t);
  int v26;
  int v27;
  size_t v28;

  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40))(a1, a2, v6);
  v8 = *(_QWORD *)(a3 + 16);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(unsigned __int8 *)(v9 + 80);
  v11 = *(_QWORD *)(v7 + 64) + v10;
  v12 = (void *)((v11 + a1) & ~v10);
  v13 = (void *)((v11 + a2) & ~v10);
  v14 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  v15 = v14(v12, 1, v8);
  v16 = v14(v13, 1, v8);
  if (v15)
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v12, v13, v8);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v12, 0, 1, v8);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v16)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v12, v13, v8);
      goto LABEL_10;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v12, v8);
  }
  if (*(_DWORD *)(v9 + 84))
    v17 = *(_QWORD *)(v9 + 64);
  else
    v17 = *(_QWORD *)(v9 + 64) + 1;
  memcpy(v12, v13, v17);
LABEL_10:
  if (*(_DWORD *)(v9 + 84))
    v18 = *(_QWORD *)(v9 + 64);
  else
    v18 = *(_QWORD *)(v9 + 64) + 1;
  v19 = *(_QWORD *)(a3 + 24);
  v20 = *(_QWORD *)(v19 - 8);
  v21 = *(unsigned __int8 *)(v20 + 80);
  v22 = v18 + v21;
  v23 = (void *)(((unint64_t)v12 + v22) & ~v21);
  v24 = (void *)(((unint64_t)v13 + v22) & ~v21);
  v25 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v20 + 48);
  v26 = v25(v23, 1, v19);
  v27 = v25(v24, 1, v19);
  if (v26)
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 32))(v23, v24, v19);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v23, 0, 1, v19);
      return a1;
    }
  }
  else
  {
    if (!v27)
    {
      (*(void (**)(void *, void *, uint64_t))(v20 + 40))(v23, v24, v19);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v20 + 8))(v23, v19);
  }
  if (*(_DWORD *)(v20 + 84))
    v28 = *(_QWORD *)(v20 + 64);
  else
    v28 = *(_QWORD *)(v20 + 64) + 1;
  memcpy(v23, v24, v28);
  return a1;
}

uint64_t sub_1D25C449C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v6;
  unsigned int v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  uint64_t v12;
  int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  int v22;
  unsigned int v23;
  int v24;
  int v25;
  uint64_t v26;
  unsigned int v27;

  v6 = *(_QWORD *)(sub_1D26CB880() - 8);
  v7 = *(_DWORD *)(v6 + 84);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= v7)
    v11 = *(_DWORD *)(v6 + 84);
  else
    v11 = v10;
  v12 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v13 = *(_DWORD *)(v12 + 84);
  v14 = v13 - 1;
  if (!v13)
    v14 = 0;
  if (v14 > v11)
    v11 = v14;
  v15 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v15;
  if (v13)
    v16 = *(_QWORD *)(v12 + 64);
  else
    v16 = *(_QWORD *)(v12 + 64) + 1;
  if (!a2)
    return 0;
  v17 = *(unsigned __int8 *)(v8 + 80);
  v18 = *(_QWORD *)(v6 + 64) + v17;
  v19 = *(unsigned __int8 *)(v12 + 80);
  if (a2 <= v11)
    goto LABEL_35;
  v20 = v16 + ((v15 + v19 + (v18 & ~v17)) & ~v19);
  v21 = 8 * v20;
  if (v20 <= 3)
  {
    v23 = ((a2 - v11 + ~(-1 << v21)) >> v21) + 1;
    if (HIWORD(v23))
    {
      v22 = *(_DWORD *)(a1 + v20);
      if (!v22)
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v23 > 0xFF)
    {
      v22 = *(unsigned __int16 *)(a1 + v20);
      if (!*(_WORD *)(a1 + v20))
        goto LABEL_35;
      goto LABEL_26;
    }
    if (v23 < 2)
    {
LABEL_35:
      if (v11)
      {
        if (v7 == v11)
          return (*(uint64_t (**)(uint64_t))(v6 + 48))(a1);
        v26 = (v18 + a1) & ~v17;
        if (v10 == v11)
          v27 = (*(uint64_t (**)(uint64_t, _QWORD))(v8 + 48))(v26, *(unsigned int *)(v8 + 84));
        else
          v27 = (*(uint64_t (**)(uint64_t, _QWORD, _QWORD))(v12 + 48))((v26 + v15 + v19) & ~v19, *(unsigned int *)(v12 + 84), *(_QWORD *)(a3 + 24));
        if (v27 >= 2)
          return v27 - 1;
        else
          return 0;
      }
      return 0;
    }
  }
  v22 = *(unsigned __int8 *)(a1 + v20);
  if (!*(_BYTE *)(a1 + v20))
    goto LABEL_35;
LABEL_26:
  v24 = (v22 - 1) << v21;
  if (v20 > 3)
    v24 = 0;
  if ((_DWORD)v20)
  {
    if (v20 <= 3)
      v25 = v20;
    else
      v25 = 4;
    __asm { BR              X11 }
  }
  return v11 + v24 + 1;
}

void sub_1D25C46AC(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  int v15;
  unsigned int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unsigned int v22;
  unsigned int v23;
  int v24;

  v8 = 0u;
  v9 = *(_QWORD *)(sub_1D26CB880() - 8);
  v10 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v11 = *(_DWORD *)(v10 + 84);
  if (v11)
    v12 = v11 - 1;
  else
    v12 = 0;
  if (v12 <= *(_DWORD *)(v9 + 84))
    v13 = *(_DWORD *)(v9 + 84);
  else
    v13 = v12;
  v14 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  v15 = *(_DWORD *)(v14 + 84);
  v16 = v15 - 1;
  if (!v15)
    v16 = 0;
  if (v16 > v13)
    v13 = v16;
  if (v11)
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = *(_QWORD *)(v10 + 64) + 1;
  v18 = *(unsigned __int8 *)(v10 + 80);
  v19 = *(unsigned __int8 *)(v14 + 80);
  v20 = *(_QWORD *)(v14 + 64);
  if (!v15)
    ++v20;
  v21 = ((v17 + v19 + ((*(_QWORD *)(v9 + 64) + v18) & ~v18)) & ~v19) + v20;
  if (a3 > v13)
  {
    if (v21 > 3)
    {
      v8 = 1u;
      if (v13 >= a2)
LABEL_32:
        __asm { BR              X24 }
LABEL_25:
      v23 = ~v13 + a2;
      if (v21 < 4)
      {
        if ((_DWORD)v21)
        {
          v24 = v23 & ~(-1 << (8 * v21));
          bzero(a1, ((v17 + v19 + ((*(_QWORD *)(v9 + 64) + v18) & ~v18)) & ~v19) + v20);
          if ((_DWORD)v21 == 3)
          {
            *(_WORD *)a1 = v24;
            a1[2] = BYTE2(v24);
          }
          else if ((_DWORD)v21 == 2)
          {
            *(_WORD *)a1 = v24;
          }
          else
          {
            *a1 = v24;
          }
        }
      }
      else
      {
        bzero(a1, ((v17 + v19 + ((*(_QWORD *)(v9 + 64) + v18) & ~v18)) & ~v19) + v20);
        *(_DWORD *)a1 = v23;
      }
      __asm { BR              X10 }
    }
    v22 = ((a3 - v13 + ~(-1 << (8 * v21))) >> (8 * v21)) + 1;
    if (HIWORD(v22))
    {
      v8 = 4u;
      if (v13 >= a2)
        goto LABEL_32;
      goto LABEL_25;
    }
    if (v22 >= 0x100)
      v8 = 2;
    else
      v8 = v22 > 1;
  }
  if (v13 >= a2)
    goto LABEL_32;
  goto LABEL_25;
}

void sub_1D25C4954()
{
  uint64_t v0;
  char v1;
  uint64_t v2;

  *(_BYTE *)(v0 + v2) = v1;
}

void sub_1D25C495C()
{
  uint64_t v0;
  __int16 v1;
  uint64_t v2;

  *(_WORD *)(v0 + v2) = v1;
}

void sub_1D25C49A8()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1D25C49B8()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1D25C49C0()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

void type metadata accessor for ActivityCacheKey()
{
  JUMPOUT(0x1D823A430);
}

uint64_t dispatch thunk of WidgetEnvironmentModificationAssertionProviding.newEnvironmentModifiersAssertion(for:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

void sub_1D25C49E0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  void *v5;
  uint64_t v6;

  v0 = sub_1D26CBAA8();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  sub_1D26CBA90();
  v5 = (void *)sub_1D26CBA84();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  objc_msgSend(v4, sel_setTimeZone_, v5);

  qword_1ED96C848 = (uint64_t)v4;
}

id sub_1D25C4AA0()
{
  id result;

  result = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB36A8]), sel_init);
  qword_1ED96D9A8 = (uint64_t)result;
  return result;
}

unint64_t sub_1D25C4AD0@<X0>(unint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  char v5;
  uint64_t *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;

  if (*(_QWORD *)(a2 + 16) && (result = sub_1D258989C(result), (v5 & 1) != 0))
  {
    v6 = (uint64_t *)(*(_QWORD *)(a2 + 56) + 24 * result);
    v7 = *v6;
    v8 = v6[1];
    v9 = v6[2];
    *a3 = *v6;
    a3[1] = v8;
    a3[2] = v9;
    sub_1D253FE08(v7, v8);
    return swift_bridgeObjectRetain();
  }
  else
  {
    *a3 = 0;
    a3[1] = 0;
    a3[2] = 0;
  }
  return result;
}

uint64_t sub_1D25C4B38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t result;
  int v5;
  char v6;
  id v7;
  id v8;
  id v9;
  _BYTE v10[32];

  result = sub_1D2597D10(a1);
  if ((v6 & 1) != 0)
    goto LABEL_8;
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(_BYTE *)(a1 + 32))
  {
    *(_QWORD *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
  }
  else
  {
    v7 = sub_1D25C6120(v10, result, v5, 0, a1);
    v9 = v7;
    *(_QWORD *)a2 = v7;
    sub_1D2537950((uint64_t)v10, a2 + 8);
    v8 = v7;
    return sub_1D253703C((uint64_t)&v9, &qword_1ED96FCA0);
  }
  return result;
}

uint64_t static Utilities.bundleIdentifier(for:)()
{
  id v0;
  void *v1;
  uint64_t v2;

  v0 = (id)BSBundleIDForAuditToken();
  if (!v0)
    return 0;
  v1 = v0;
  v2 = sub_1D26CD938();

  return v2;
}

uint64_t LocaleTokenDescriptor.token.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)v0;
  sub_1D253FE08(*(_QWORD *)v0, *(_QWORD *)(v0 + 8));
  return v1;
}

uint64_t LocaleTokenDescriptor.description.getter()
{
  _QWORD v1[2];

  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "<LocaleToken: ");
  sub_1D26CB8D4();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CD800();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v1[0];
}

void static NSLocale.currentLocaleToken()(uint64_t *a1@<X8>)
{
  id v2;
  id v3;
  id v4;
  uint64_t v5;
  id v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D50]), sel_init);
  v10[0] = v2;
  v3 = objc_msgSend((id)objc_opt_self(), sel_archivedPreferencesWithHash_, v10);
  v4 = v10[0];

  v5 = sub_1D26CD7F4();
  v6 = v4;
  v7 = sub_1D26CB8E0();
  v9 = v8;

  *a1 = v7;
  a1[1] = v9;
  a1[2] = v5;
}

uint64_t static NSLocale.currentLocaleToken(for:)@<X0>(unint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963998);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1D26D1280;
  (*(void (**)(unint64_t, unint64_t, uint64_t))(v5 + 16))(v7 + v6, a1, v4);
  v8 = _sSo8NSLocaleC9ChronoKitE18currentLocaleToken3forSDy0B8Services15TypedIdentifierVyAF0J4TypeO6BundleO9ContainerOGAC0eF10DescriptorVGSayAOG_tFZ_0(v7);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  sub_1D25C4AD0(a1, v8, a2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25C4FC4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  char v11;
  uint64_t result;
  uint64_t v13;
  unint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  _QWORD v19[5];
  __int128 v20;
  __int128 v21;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = 1752392040;
  v18 = 0xE400000000000000;
  sub_1D26CE064();
  if (*(_QWORD *)(a3 + 16) && (v10 = sub_1D25894D4((uint64_t)v19), (v11 & 1) != 0))
  {
    sub_1D2537950(*(_QWORD *)(a3 + 56) + 32 * v10, (uint64_t)&v20);
  }
  else
  {
    v20 = 0u;
    v21 = 0u;
  }
  sub_1D258AEF0((uint64_t)v19);
  if (!*((_QWORD *)&v21 + 1))
    return sub_1D253703C((uint64_t)&v20, &qword_1ED96FCE0);
  result = swift_dynamicCast();
  if ((result & 1) != 0)
  {
    v13 = v17;
    v14 = v18;
    swift_bridgeObjectRetain();
    sub_1D26CBC7C();
    sub_1D253FE08(v13, v14);
    swift_bridgeObjectRetain();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v19[0] = *a4;
    *a4 = 0x8000000000000000;
    sub_1D266EA48(v13, v14, a3, (uint64_t)v9, isUniquelyReferenced_nonNull_native);
    *a4 = v19[0];
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    return sub_1D253EE04(v13, v14);
  }
  return result;
}

uint64_t Sequence<>.joined(separator:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  _QWORD v10[8];

  v10[2] = a3;
  v10[3] = a4;
  v10[4] = a5;
  v10[6] = sub_1D25C5250((void (*)(char *, char *))sub_1D25C6694, (uint64_t)v10, a3, MEMORY[0x1E0DEA968], MEMORY[0x1E0DEDCE8], a4, MEMORY[0x1E0DEDD18], a8);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2556EB0();
  v8 = sub_1D26CD8E4();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D25C5250(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  void (*v15)(char *, char *, uint64_t);
  uint64_t AssociatedTypeWitness;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  char *v32;
  uint64_t result;
  char *v34;
  char *v35;
  char *v36;
  _QWORD v37[2];
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, char *, uint64_t);
  char *v51;
  char *v52;
  uint64_t v53;
  void (*v54)(char *, char *);
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;

  v40 = a8;
  v41 = a5;
  v9 = v8;
  v53 = a4;
  v54 = a1;
  v55 = a2;
  v39 = *(_QWORD *)(a5 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v52 = (char *)v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v51 = (char *)v37 - v12;
  v45 = v13;
  v15 = v14;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v17 = *(_QWORD *)(AssociatedTypeWitness - 8);
  MEMORY[0x1E0C80A78](AssociatedTypeWitness);
  v38 = (char *)v37 - v18;
  v19 = sub_1D26CDF38();
  v42 = *(_QWORD *)(v19 - 8);
  v43 = v19;
  v20 = MEMORY[0x1E0C80A78](v19);
  v49 = (char *)v37 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v37 - v23;
  v25 = MEMORY[0x1E0C80A78](v22);
  v37[1] = (char *)v37 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v48 = *((_QWORD *)v15 - 1);
  MEMORY[0x1E0C80A78](v27);
  v47 = (char *)v37 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = swift_getAssociatedTypeWitness();
  v44 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v46 = (char *)v37 - v29;
  v30 = v15;
  v31 = sub_1D26CDA58();
  v57 = sub_1D26CD7D0();
  v53 = sub_1D26CE178();
  sub_1D26CE130();
  (*(void (**)(char *, _QWORD, _QWORD *))(v48 + 16))(v47, v50, v15);
  v32 = v46;
  v50 = v30;
  result = sub_1D26CDA4C();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1D26CDF44();
      result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v24, 1, AssociatedTypeWitness);
      if ((_DWORD)result == 1)
        goto LABEL_18;
      v54(v24, v52);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v52, v41);
        return (*(uint64_t (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      }
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v24, AssociatedTypeWitness);
      sub_1D26CE160();
      if (!--v31)
      {
        v34 = v49;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  v34 = v49;
LABEL_9:
  sub_1D26CDF44();
  v52 = *(char **)(v17 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v34, 1, AssociatedTypeWitness) == 1)
  {
    v35 = v49;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    (*(void (**)(char *, uint64_t))(v42 + 8))(v35, v43);
    return v57;
  }
  else
  {
    v50 = *(void (**)(char *, char *, uint64_t))(v17 + 32);
    v36 = v38;
    v35 = v49;
    while (1)
    {
      v50(v36, v35, AssociatedTypeWitness);
      v54(v36, v51);
      if (v9)
        break;
      v9 = 0;
      (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
      sub_1D26CE160();
      sub_1D26CDF44();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v52)(v35, 1, AssociatedTypeWitness) == 1)
        goto LABEL_14;
    }
    (*(void (**)(char *, uint64_t))(v17 + 8))(v36, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v44 + 8))(v32, v56);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v39 + 32))(v40, v51, v41);
  }
}

uint64_t CollectionDifference.Change.changedElement.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t TupleTypeMetadata3;
  uint64_t v10;

  MEMORY[0x1E0C80A78](a1);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v5);
  v7 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82CC8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 32))(a2, &v5[*(int *)(TupleTypeMetadata3 + 48)], v7);
}

uint64_t CollectionDifference.Change.offset.getter(uint64_t a1)
{
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t TupleTypeMetadata3;
  uint64_t v9;

  MEMORY[0x1E0C80A78](a1);
  v3 = (char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v4 + 16))(v3);
  v5 = *(_QWORD *)v3;
  v6 = *(_QWORD *)(a1 + 16);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82CC8);
  TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(&v3[*(int *)(TupleTypeMetadata3 + 48)], v6);
  return v5;
}

uint64_t CollectionDifference<A>.grouping<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v6;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v19[16];
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;

  MEMORY[0x1E0C80A78](a1);
  (*(void (**)(_BYTE *, uint64_t))(v14 + 16))(&v19[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)], v15);
  v16 = *(_QWORD *)(a3 + 16);
  v20 = v16;
  v21 = a4;
  v22 = a5;
  v23 = a6;
  v24 = a1;
  v25 = a2;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DECE08], a3);
  v17 = sub_1D26CD884();
  if (!v6)
  {
    MEMORY[0x1E0C80A78](v17);
    *(_QWORD *)&v19[-32] = v16;
    *(_QWORD *)&v19[-24] = a4;
    *(_QWORD *)&v19[-16] = a5;
    *(_QWORD *)&v19[-8] = a6;
    sub_1D26CE22C();
    sub_1D26CDBA8();
    a6 = sub_1D26CD818();
    swift_bridgeObjectRelease();
  }
  return a6;
}

uint64_t sub_1D25C5A4C(uint64_t a1, void (*a2)(char *), uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;

  v6 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CE22C();
  CollectionDifference.Change.changedElement.getter(v9, (uint64_t)v8);
  a2(v8);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a4);
}

uint64_t sub_1D25C5B04@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  _QWORD *v33;
  char *v34;
  int EnumCaseMultiPayload;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t TupleTypeMetadata3;
  char *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  _QWORD v45[3];
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;

  v9 = a2;
  v45[2] = a6;
  v11 = *(_QWORD *)(a2 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = sub_1D26CE22C();
  v54 = *(_QWORD *)(v14 - 8);
  v15 = MEMORY[0x1E0C80A78](v14);
  v17 = (_QWORD *)((char *)v45 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0));
  v18 = MEMORY[0x1E0C80A78](v15);
  v50 = (char *)v45 - v19;
  v45[0] = v20;
  MEMORY[0x1E0C80A78](v18);
  v53 = (char *)v45 - v21;
  v60 = *a1;
  v55 = v9;
  v56 = a3;
  v57 = a4;
  v58 = a5;
  v22 = sub_1D26CDBA8();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF38], v22);
  v51 = v22;
  v23 = v52;
  v24 = sub_1D26CDAA0();
  v45[1] = v23;
  v60 = sub_1D26CD7D0();
  if (!MEMORY[0x1D8239350](v24, v14))
  {
LABEL_15:
    swift_bridgeObjectRelease();
    v59 = v60;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v51);
    return sub_1D26CE238();
  }
  v25 = 0;
  v48 = 0;
  v49 = 0;
  v46 = v24;
  v47 = v11;
  while (1)
  {
    v31 = sub_1D26CDB48();
    sub_1D26CDB24();
    if ((v31 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v54 + 16))(v53, v24+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(_QWORD *)(v54 + 72) * v25, v14);
      v32 = v25 + 1;
      if (__OFADD__(v25, 1))
        goto LABEL_14;
    }
    else
    {
      result = sub_1D26CE0C4();
      if (v45[0] != 8)
        goto LABEL_18;
      v59 = result;
      (*(void (**)(char *, uint64_t *, uint64_t))(v54 + 16))(v53, &v59, v14);
      swift_unknownObjectRelease();
      v32 = v25 + 1;
      if (__OFADD__(v25, 1))
      {
LABEL_14:
        __break(1u);
        goto LABEL_15;
      }
    }
    v52 = v32;
    v33 = v17;
    v34 = v50;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v50, v53, v14);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82CC8);
    v36 = v13;
    v37 = v11;
    v38 = v9;
    TupleTypeMetadata3 = swift_getTupleTypeMetadata3();
    v40 = &v34[*(int *)(TupleTypeMetadata3 + 48)];
    v17 = v33;
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v36, v40, v38);
    v41 = (char *)v33 + *(int *)(TupleTypeMetadata3 + 48);
    v42 = (char *)v33 + *(int *)(TupleTypeMetadata3 + 64);
    if (EnumCaseMultiPayload != 1)
      break;
    v43 = v49;
    *v17 = v49;
    (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v41, v36, v38);
    *(_QWORD *)v42 = 0;
    v42[8] = 1;
    swift_storeEnumTagMultiPayload();
    sub_1D26CDB6C();
    result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
    v28 = __OFADD__(v43, 1);
    v44 = v43 + 1;
    if (v28)
      goto LABEL_17;
    v9 = v38;
    v13 = v36;
    v49 = v44;
LABEL_5:
    v24 = v46;
    v30 = MEMORY[0x1D8239350](v46, v14);
    ++v25;
    v11 = v47;
    if (v52 == v30)
      goto LABEL_15;
  }
  v26 = v48;
  *v17 = v48;
  (*(void (**)(char *, char *, uint64_t))(v37 + 16))(v41, v36, v38);
  *(_QWORD *)v42 = 0;
  v42[8] = 1;
  swift_storeEnumTagMultiPayload();
  sub_1D26CDB6C();
  result = (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v36, v38);
  v28 = __OFADD__(v26, 1);
  v29 = v26 + 1;
  if (!v28)
  {
    v9 = v38;
    v13 = v36;
    v48 = v29;
    goto LABEL_5;
  }
  __break(1u);
LABEL_17:
  __break(1u);
LABEL_18:
  __break(1u);
  return result;
}

uint64_t URL.lastModifiedDate.getter@<X0>(uint64_t a1@<X8>)
{
  void *v2;
  uint64_t v3;
  void *v4;
  id v5;
  void *v6;
  id v7;
  id v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  int v12;
  id v14;
  void *v15;
  uint64_t v16;
  id v17;
  id v18;
  __int128 v19;
  __int128 v20;
  uint64_t v21;

  v21 = *MEMORY[0x1E0C80C00];
  v2 = (void *)sub_1D26CB7D8();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCD8);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D26D1280;
  v4 = (void *)*MEMORY[0x1E0C998D8];
  *(_QWORD *)(v3 + 32) = *MEMORY[0x1E0C998D8];
  type metadata accessor for URLResourceKey(0);
  v5 = v4;
  v6 = (void *)sub_1D26CDADC();
  swift_bridgeObjectRelease();
  v17 = 0;
  v7 = objc_msgSend(v2, sel_resourceValuesForKeys_error_, v6, &v17);

  v8 = v17;
  if (v7)
  {
    sub_1D25C6738();
    v9 = sub_1D26CD7F4();
    v10 = v8;

    sub_1D25C4B38(v9, (uint64_t)&v18);
    swift_bridgeObjectRelease();
    if (v18)
    {

      sub_1D2538448(&v19, &v20);
      v11 = sub_1D26CB9DC();
      v12 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, v12 ^ 1u, 1, v11);
    }
    sub_1D253703C((uint64_t)&v18, &qword_1EFC82CD0);
  }
  else
  {
    v14 = v17;
    v15 = (void *)sub_1D26CB76C();

    swift_willThrow();
  }
  v16 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 1, 1, v16);
}

id sub_1D25C6120(id result, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  id v5;

  if (a2 < 0 || 1 << *(_BYTE *)(a5 + 32) <= a2)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(_QWORD *)(a5 + (((unint64_t)a2 >> 3) & 0xFFFFFFFFFFFFF8) + 64) >> a2) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a5 + 36) == a3)
  {
    v5 = *(id *)(*(_QWORD *)(a5 + 48) + 8 * a2);
    sub_1D2537950(*(_QWORD *)(a5 + 56) + 32 * a2, (uint64_t)result);
    return v5;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_1D25C61A0(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;

  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v7)
    {
      v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v17 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v17);
    ++v10;
    if (!v18)
    {
      v10 = v17 + 1;
      if (v17 + 1 >= v8)
        return swift_release();
      v18 = *(_QWORD *)(v4 + 8 * v10);
      if (!v18)
      {
        v10 = v17 + 2;
        if (v17 + 2 >= v8)
          return swift_release();
        v18 = *(_QWORD *)(v4 + 8 * v10);
        if (!v18)
        {
          v10 = v17 + 3;
          if (v17 + 3 >= v8)
            return swift_release();
          v18 = *(_QWORD *)(v4 + 8 * v10);
          if (!v18)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v18 - 1) & v18;
    v12 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_5:
    v13 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v14 = *v13;
    v15 = v13[1];
    v16 = *(_QWORD *)(*(_QWORD *)(a1 + 56) + 8 * v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a2(v14, v15, v16);
    swift_bridgeObjectRelease();
    result = swift_bridgeObjectRelease();
  }
  v19 = v17 + 4;
  if (v19 >= v8)
    return swift_release();
  v18 = *(_QWORD *)(v4 + 8 * v19);
  if (v18)
  {
    v10 = v19;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v10 >= v8)
      return swift_release();
    v18 = *(_QWORD *)(v4 + 8 * v10);
    ++v19;
    if (v18)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D25C6338()
{
  id v0;
  id v1;
  uint64_t v2;
  char v3;
  uint64_t v4;

  v0 = objc_msgSend((id)objc_opt_self(), sel_processInfo);
  v1 = objc_msgSend(v0, sel_environment);

  v2 = sub_1D26CD7F4();
  if (*(_QWORD *)(v2 + 16) && (sub_1D25891F4(0xD000000000000011, 0x80000001D26E1330), (v3 & 1) != 0))
  {
    swift_bridgeObjectRetain();
    v4 = 1;
  }
  else
  {
    v4 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t _sSo8NSLocaleC9ChronoKitE18currentLocaleToken3forSDy0B8Services15TypedIdentifierVyAF0J4TypeO6BundleO9ContainerOGAC0eF10DescriptorVGSayAOG_tFZ_0(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;
  void (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v25 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1D25C6338() & 1) != 0)
    return MEMORY[0x1E0DEE9E0];
  v6 = *(_QWORD *)(a1 + 16);
  if (v6)
  {
    v26 = MEMORY[0x1E0DEE9D8];
    sub_1D258430C(0, v6, 0);
    v7 = a1 + ((*(unsigned __int8 *)(v25 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v25 + 80));
    v8 = *(_QWORD *)(v25 + 72);
    v23 = *(void (**)(char *, uint64_t, uint64_t))(v25 + 16);
    v24 = v8;
    v9 = v26;
    do
    {
      v23(v4, v7, v2);
      v10 = sub_1D26CBC88();
      v12 = v11;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v4, v2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258430C(0, *(_QWORD *)(v9 + 16) + 1, 1);
        v9 = v26;
      }
      v14 = *(_QWORD *)(v9 + 16);
      v13 = *(_QWORD *)(v9 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1D258430C(v13 > 1, v14 + 1, 1);
        v9 = v26;
      }
      *(_QWORD *)(v9 + 16) = v14 + 1;
      v15 = v9 + 16 * v14;
      *(_QWORD *)(v15 + 32) = v10;
      *(_QWORD *)(v15 + 40) = v12;
      v7 += v24;
      --v6;
    }
    while (v6);
  }
  v16 = (void *)objc_opt_self();
  v17 = (void *)sub_1D26CDADC();
  swift_bridgeObjectRelease();
  v18 = objc_msgSend(v16, sel_archivedPreferencesWithHashesForBundleIDs_, v17);

  v5 = MEMORY[0x1E0DEE9E0];
  if (v18)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962840);
    v19 = sub_1D26CD7F4();

    v26 = v5;
    MEMORY[0x1E0C80A78](v20);
    *(&v22 - 2) = (uint64_t)&v26;
    sub_1D25C61A0(v19, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D25C69C8);
    swift_bridgeObjectRelease();
    return v26;
  }
  return v5;
}

uint64_t sub_1D25C6694()
{
  swift_getAssociatedTypeWitness();
  return sub_1D26CDAC4();
}

uint64_t sub_1D25C66FC(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25C5A4C(a1, *(void (**)(char *))(v1 + 48), *(_QWORD *)(v1 + 56), *(_QWORD *)(v1 + 16));
}

uint64_t sub_1D25C671C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;

  return sub_1D25C5B04(a1, v2[2], v2[3], v2[4], v2[5], a2);
}

unint64_t sub_1D25C6738()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96FCA8;
  if (!qword_1ED96FCA8)
  {
    type metadata accessor for URLResourceKey(255);
    result = MEMORY[0x1D823A4E4](&unk_1D26CFBCC, v1);
    atomic_store(result, (unint64_t *)&qword_1ED96FCA8);
  }
  return result;
}

ValueMetadata *type metadata accessor for Utilities()
{
  return &type metadata for Utilities;
}

uint64_t destroy for LocaleTokenDescriptor(uint64_t a1)
{
  sub_1D253EE04(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return swift_bridgeObjectRelease();
}

uint64_t *_s9ChronoKit21LocaleTokenDescriptorVwCP_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a2;
  v5 = a2[1];
  sub_1D253FE08(*a2, v5);
  *a1 = v4;
  a1[1] = v5;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t *assignWithCopy for LocaleTokenDescriptor(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  unint64_t v7;

  v4 = *a2;
  v5 = a2[1];
  sub_1D253FE08(*a2, v5);
  v6 = *a1;
  v7 = a1[1];
  *a1 = v4;
  a1[1] = v5;
  sub_1D253EE04(v6, v7);
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 __swift_memcpy24_8(__n128 *a1, __n128 *a2)
{
  __n128 result;

  result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t *assignWithTake for LocaleTokenDescriptor(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;
  unint64_t v5;

  v4 = *a1;
  v5 = a1[1];
  *(_OWORD *)a1 = *(_OWORD *)a2;
  sub_1D253EE04(v4, v5);
  a1[2] = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for LocaleTokenDescriptor(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for LocaleTokenDescriptor(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for LocaleTokenDescriptor()
{
  return &type metadata for LocaleTokenDescriptor;
}

BOOL sub_1D25C6960()
{
  uint64_t v0;
  uint64_t v1;

  v0 = sub_1D26CE22C();
  v1 = CollectionDifference.Change.offset.getter(v0);
  return v1 < CollectionDifference.Change.offset.getter(v0);
}

uint64_t sub_1D25C69C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  return sub_1D25C4FC4(a1, a2, a3, *(_QWORD **)(v3 + 16));
}

void sub_1D25C69D0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1D25C6A00(uint64_t result)
{
  _QWORD *v1;

  v1[3] = MEMORY[0x1E0DEDC60];
  v1[4] = &off_1E93D5718;
  *v1 = result;
  return result;
}

uint64_t sub_1D25C6AD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  _BYTE *v9;
  id v10;
  BOOL v11;
  double v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE v20[24];
  uint64_t v21;
  uint64_t v22;
  _BYTE v23[40];
  __int128 v24;
  _BYTE v25[32];

  sub_1D2537950(a1, (uint64_t)v25);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  if (!swift_dynamicCast())
  {
    sub_1D2539514(0, (unint64_t *)&qword_1ED96C070);
    if (swift_dynamicCast())
    {
      v10 = (id)v24;
      v11 = sub_1D25C6D5C();

      if (v11)
      {
        objc_msgSend(v10, sel_doubleValue);
        v13 = sub_1D25410E8(v12);
LABEL_13:
        v8 = v13;

        v9 = (_BYTE *)a1;
        goto LABEL_14;
      }
      if (sub_1D25C6EA4())
      {
        v13 = sub_1D253FA04((uint64_t)objc_msgSend(v10, sel_longLongValue));
        goto LABEL_13;
      }

    }
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FCD0);
    if (swift_dynamicCast())
    {
      v10 = (id)v24;
      v14 = sub_1D26CD980();
      v13 = sub_1D253FC20(v14, v15);
    }
    else
    {
      sub_1D2539514(0, (unint64_t *)&unk_1ED9620F8);
      if (!swift_dynamicCast())
      {
        __swift_destroy_boxed_opaque_existential_1(a1);
        v8 = 0;
        goto LABEL_15;
      }
      v10 = (id)v24;
      v16 = sub_1D25C6F54(v10);
      v13 = sub_1D253FC0C(v16, v17);
    }
    goto LABEL_13;
  }
  sub_1D2538F38(&v24, (uint64_t)v23);
  sub_1D2538510((uint64_t)v23, (uint64_t)v20);
  v2 = v21;
  v3 = v22;
  v4 = __swift_mutable_project_boxed_opaque_existential_1((uint64_t)v20, v21);
  MEMORY[0x1E0C80A78](v4);
  v6 = &v20[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  (*(void (**)(_BYTE *))(v7 + 16))(v6);
  v8 = sub_1D25C77E4((uint64_t)v6, v2, v3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  __swift_destroy_boxed_opaque_existential_1(a1);
  v9 = v23;
LABEL_14:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
LABEL_15:
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
  return v8;
}

BOOL sub_1D25C6D5C()
{
  void *v0;
  uint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  int64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  BOOL v11;
  uint64_t v13;

  objc_msgSend(objc_retainAutorelease(v0), sel_objCType);
  v1 = sub_1D26CDA10();
  v3 = sub_1D2537BD8(v1, v2);
  swift_bridgeObjectRelease();
  v13 = MEMORY[0x1E0DEE9D8];
  sub_1D25843C8(0, 2, 0);
  v4 = v13;
  v6 = *(_QWORD *)(v13 + 16);
  v5 = *(_QWORD *)(v13 + 24);
  v7 = v5 >> 1;
  v8 = v6 + 1;
  if (v5 >> 1 <= v6)
  {
    sub_1D25843C8(v5 > 1, v6 + 1, 1);
    v4 = v13;
    v5 = *(_QWORD *)(v13 + 24);
    v7 = v5 >> 1;
  }
  *(_QWORD *)(v4 + 16) = v8;
  *(_BYTE *)(v4 + v6 + 32) = 102;
  v9 = v6 + 2;
  if (v7 < v9)
  {
    sub_1D25843C8(v5 > 1, v9, 1);
    v4 = v13;
  }
  *(_QWORD *)(v4 + 16) = v9;
  *(_BYTE *)(v4 + v8 + 32) = 100;
  if (*(_QWORD *)(v3 + 16) == 1)
  {
    v10 = *(unsigned __int8 *)(v3 + 32);
    swift_release();
    v11 = sub_1D2686AB4(v10, v4);
  }
  else
  {
    swift_release();
    v11 = 0;
  }
  swift_release();
  return v11;
}

BOOL sub_1D25C6EA4()
{
  void *v0;
  id v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  int v5;
  id v6;
  id v7;

  v1 = objc_retainAutorelease(v0);
  objc_msgSend(v1, sel_objCType);
  v2 = sub_1D26CDA10();
  v4 = sub_1D2537BD8(v2, v3);
  swift_bridgeObjectRelease();
  if (*(_QWORD *)(v4 + 16) != 1)
  {
    swift_release();
    return 1;
  }
  v5 = *(unsigned __int8 *)(v4 + 32);
  swift_release();
  if (v5 != 81)
    return 1;
  v6 = objc_msgSend(v1, sel_longLongValue);
  v7 = objc_msgSend(v1, sel_unsignedLongLongValue);
  return (uint64_t)v6 >= 0 && v6 == v7;
}

uint64_t sub_1D25C6F54(void *a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  __int128 v12;
  __int128 v13[2];
  uint64_t v14;
  _QWORD v15[6];

  v15[5] = *MEMORY[0x1E0C80C00];
  *(_QWORD *)&v12 = a1;
  sub_1D2539514(0, (unint64_t *)&unk_1ED9620F8);
  v2 = a1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AD8);
  if (!swift_dynamicCast())
  {
    v14 = 0;
    memset(v13, 0, sizeof(v13));
    sub_1D25C7A3C((uint64_t)v13);
    v3 = sub_1D26CDE84();
    v4 = sub_1D26CDE90();
    v5 = sub_1D26CDE84();
    v6 = sub_1D26CDE90();
    if (v3 < v5 || v6 < v3)
    {
      __break(1u);
    }
    else
    {
      v7 = sub_1D26CDE84();
      v8 = sub_1D26CDE90();
      if (v4 >= v7 && v8 >= v4)
      {
        if (!__OFSUB__(v4, v3))
        {
          *(_QWORD *)&v13[0] = sub_1D25C7D60(v4 - v3);
          *((_QWORD *)&v13[0] + 1) = v9;
          MEMORY[0x1E0C80A78](*(_QWORD *)&v13[0]);
          sub_1D25C7374();
          __asm { BR              X12 }
        }
LABEL_11:
        __break(1u);
        JUMPOUT(0x1D25C7338);
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  sub_1D2538F38(v13, (uint64_t)v15);
  __swift_project_boxed_opaque_existential_0(v15, v15[3]);
  sub_1D26CB6B8();

  v13[0] = v12;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v15);
  return *(_QWORD *)&v13[0];
}

void sub_1D25C7358(uint64_t a1)
{
  sub_1D25C7C08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

void sub_1D25C7374()
{
  __asm { BR              X11 }
}

_QWORD *sub_1D25C73D4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v2;
  _QWORD *(*v3)(_QWORD **__return_ptr, uint64_t *, char *);
  uint64_t v4;
  _QWORD *result;
  unint64_t v6;
  _QWORD *v7;
  uint64_t v8;
  unsigned int v9;
  unsigned __int8 v10;
  unsigned __int8 v11;
  unsigned __int8 v12;

  v8 = v4;
  LOWORD(v9) = a1;
  BYTE2(v9) = BYTE2(a1);
  HIBYTE(v9) = BYTE3(a1);
  v10 = BYTE4(a1);
  v11 = BYTE5(a1);
  v12 = BYTE6(a1);
  result = v3(&v7, &v8, (char *)&v8 + BYTE6(a1));
  if (!v2)
    result = v7;
  v6 = v9 | ((unint64_t)v10 << 32) | ((unint64_t)v11 << 40) | ((unint64_t)v12 << 48);
  *v1 = v8;
  v1[1] = v6;
  return result;
}

_BYTE *sub_1D25C7660@<X0>(_BYTE *result@<X0>, _BYTE *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (!result)
    goto LABEL_4;
  v4 = a2 - result;
  if (a2 == result)
  {
    result = 0;
LABEL_4:
    v5 = 0xC000000000000000;
    goto LABEL_5;
  }
  if (v4 <= 14)
  {
    result = (_BYTE *)sub_1D25C7E58(result, a2);
    v5 = v7 & 0xFFFFFFFFFFFFFFLL;
  }
  else if ((unint64_t)v4 >= 0x7FFFFFFF)
  {
    result = (_BYTE *)sub_1D25C7F18((uint64_t)result, (uint64_t)a2);
    v5 = v8 | 0x8000000000000000;
  }
  else
  {
    result = (_BYTE *)sub_1D25C7F90((uint64_t)result, (uint64_t)a2);
    v5 = v6 | 0x4000000000000000;
  }
LABEL_5:
  *a3 = result;
  a3[1] = v5;
  return result;
}

_QWORD *sub_1D25C76D4(_QWORD *(*a1)(uint64_t *__return_ptr, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  _QWORD *result;
  uint64_t v6;

  if (a3)
  {
    result = a1(&v6, a3, a4 - a3);
    if (v4)
      return result;
    return (_QWORD *)v6;
  }
  result = a1(&v6, 0, 0);
  if (!v4)
    return (_QWORD *)v6;
  return result;
}

char *sub_1D25C7738(uint64_t a1, uint64_t a2, _QWORD *(*a3)(uint64_t *__return_ptr, char *, char *))
{
  uint64_t v3;
  char *result;
  char *v8;
  uint64_t v9;
  BOOL v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  result = (char *)sub_1D26CB64C();
  if (!result)
    goto LABEL_12;
  v8 = result;
  result = (char *)sub_1D26CB670();
  v9 = a1 - (_QWORD)result;
  if (__OFSUB__(a1, result))
  {
    __break(1u);
    goto LABEL_11;
  }
  v10 = __OFSUB__(a2, a1);
  v11 = a2 - a1;
  if (v10)
  {
LABEL_11:
    __break(1u);
LABEL_12:
    __break(1u);
    return result;
  }
  v12 = sub_1D26CB664();
  if (v12 >= v11)
    v13 = v11;
  else
    v13 = v12;
  result = (char *)a3(&v14, &v8[v9], &v8[v9 + v13]);
  if (!v3)
    return (char *)v14;
  return result;
}

uint64_t sub_1D25C77E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *boxed_opaque_existential_1;
  void *v6;
  uint64_t result;
  void *v8;
  _BYTE v9[40];
  uint64_t v10[5];

  v10[3] = a2;
  v10[4] = a3;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v10);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(boxed_opaque_existential_1, a1, a2);
  sub_1D2538510((uint64_t)v10, (uint64_t)v9);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  sub_1D2539514(0, (unint64_t *)&qword_1ED962108);
  if (swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);

    v6 = 0;
LABEL_9:
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
    return (uint64_t)v6;
  }
  if ((swift_dynamicCast() & 1) != 0
    || swift_dynamicCast()
    || swift_dynamicCast()
    || swift_dynamicCast())
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
    v6 = v8;
    goto LABEL_9;
  }
  result = sub_1D26CE1D8();
  __break(1u);
  return result;
}

uint64_t *__swift_allocate_boxed_opaque_existential_1(uint64_t *a1)
{
  uint64_t *v1;
  uint64_t v2;

  v1 = a1;
  if ((*(_BYTE *)(*(_QWORD *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t __swift_mutable_project_boxed_opaque_existential_1(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if ((*(_DWORD *)(*(_QWORD *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_1D25C7A3C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961AE0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1D25C7A7C(_QWORD *a1, _BYTE *a2, uint64_t a3)
{
  void *v3;
  id v7;
  uint64_t v8;
  char v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  _BYTE *v21;

  v7 = v3;
  v8 = sub_1D26CDE84();

  v21 = a2;
  if (!a2 || !a3)
    goto LABEL_5;
  if (a3 < 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (v8 == sub_1D26CDE90())
  {
LABEL_5:
    *a1 = v7;
    a1[1] = v8;
    return;
  }
  v9 = sub_1D26CDE9C();
  v10 = v7;
  v11 = sub_1D26CDE84();
  v12 = sub_1D26CDE90();

  if (v8 >= v11 && v8 < v12)
  {
    *a2 = v9;
    if (a3 == 1)
    {
      ++v8;
      goto LABEL_5;
    }
    v20 = a1;
    v13 = 1;
    while (a3 != v13)
    {
      v14 = v8 + v13;
      if (v8 + v13 == sub_1D26CDE90())
      {
        v8 += v13;
        goto LABEL_18;
      }
      v15 = sub_1D26CDE9C();
      v16 = v10;
      v17 = sub_1D26CDE84();
      v18 = sub_1D26CDE90();

      if (v14 < v17 || v14 >= v18)
        goto LABEL_20;
      v19 = v13 + 1;
      v21[v13] = v15;
      v13 = v19;
      if (a3 == v19)
      {
        v8 += v19;
LABEL_18:
        a1 = v20;
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
LABEL_22:
  __break(1u);
}

void sub_1D25C7C08(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

BOOL sub_1D25C7C48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6)
{
  uint64_t v6;
  uint64_t v7;

  return !a6 && v7 == v6;
}

uint64_t sub_1D25C7D60(uint64_t result)
{
  unint64_t v1;

  if (result)
  {
    v1 = result;
    if (result <= 14)
    {
      if (result < 0)
        __break(1u);
      else
        return 0;
    }
    else
    {
      sub_1D26CB67C();
      swift_allocObject();
      sub_1D26CB658();
      if (v1 >= 0x7FFFFFFF)
      {
        sub_1D26CB8B0();
        result = swift_allocObject();
        *(_QWORD *)(result + 16) = 0;
        *(_QWORD *)(result + 24) = v1;
      }
      else
      {
        return v1 << 32;
      }
    }
  }
  return result;
}

_QWORD *sub_1D25C7DFC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  _QWORD *result;
  uint64_t v6;
  uint64_t v7;
  _QWORD v8[3];
  uint64_t v9;

  v9 = **(_QWORD **)(v3 + 16);
  v8[2] = &v9;
  result = sub_1D25C76D4((_QWORD *(*)(uint64_t *__return_ptr, uint64_t, uint64_t))sub_1D25C8010, (uint64_t)v8, a1, a2);
  *a3 = result;
  a3[1] = v6;
  a3[2] = v7;
  return result;
}

uint64_t sub_1D25C7E58(_BYTE *__src, _BYTE *a2)
{
  unint64_t v2;
  _BYTE __dst[14];
  char v5;
  uint64_t v6;

  v6 = *MEMORY[0x1E0C80C00];
  if (__src)
    v2 = a2 - __src;
  else
    v2 = 0;
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF)
    goto LABEL_11;
  memset(__dst, 0, sizeof(__dst));
  v5 = v2;
  if (__src && a2 != __src)
    memcpy(__dst, __src, a2 - __src);
  return *(_QWORD *)__dst;
}

uint64_t sub_1D25C7F18(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1D26CB67C();
  swift_allocObject();
  result = sub_1D26CB640();
  if (v2 < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1D26CB8B0();
    result = swift_allocObject();
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = v2;
  }
  return result;
}

uint64_t sub_1D25C7F90(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t result;

  if (a1)
    v2 = a2 - a1;
  else
    v2 = 0;
  sub_1D26CB67C();
  swift_allocObject();
  result = sub_1D26CB640();
  if (v2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (v2 > 0x7FFFFFFF)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  if ((v2 & 0x80000000) == 0)
    return v2 << 32;
LABEL_10:
  __break(1u);
  return result;
}

void sub_1D25C8010(_BYTE *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  id v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v10[2];

  v7 = **(id **)(v3 + 16);
  sub_1D25C7A7C(v10, a1, a2);
  v8 = v10[1];
  *a3 = v10[0];
  a3[1] = v8;
  a3[2] = v9;
}

uint64_t destroy for SQLValue(uint64_t a1)
{
  return sub_1D253FBE8(*(_QWORD *)a1, *(_QWORD *)(a1 + 8), *(_BYTE *)(a1 + 16));
}

uint64_t _s9ChronoKit8SQLValueOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D2541E98(*(_QWORD *)a2, v4, v5);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  *(_BYTE *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for SQLValue(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  char v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v3 = *(_QWORD *)a2;
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_BYTE *)(a2 + 16);
  sub_1D2541E98(*(_QWORD *)a2, v4, v5);
  v6 = *(_QWORD *)a1;
  v7 = *(_QWORD *)(a1 + 8);
  *(_QWORD *)a1 = v3;
  *(_QWORD *)(a1 + 8) = v4;
  v8 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v5;
  sub_1D253FBE8(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for SQLValue(uint64_t a1, uint64_t a2)
{
  char v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v3 = *(_BYTE *)(a2 + 16);
  v4 = *(_QWORD *)a1;
  v5 = *(_QWORD *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v6 = *(_BYTE *)(a1 + 16);
  *(_BYTE *)(a1 + 16) = v3;
  sub_1D253FBE8(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLValue(uint64_t a1, unsigned int a2)
{
  unsigned int v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0xFC && *(_BYTE *)(a1 + 17))
    return (*(_DWORD *)a1 + 252);
  v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 4)
    v4 = -1;
  else
    v4 = v3 ^ 0xFF;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLValue(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(_BYTE *)(result + 16) = 0;
    *(_QWORD *)result = a2 - 252;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 1;
  }
  else
  {
    if (a3 >= 0xFC)
      *(_BYTE *)(result + 17) = 0;
    if (a2)
      *(_BYTE *)(result + 16) = -(char)a2;
  }
  return result;
}

uint64_t sub_1D25C8200(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 16) <= 3u)
    return *(unsigned __int8 *)(a1 + 16);
  else
    return (*(_DWORD *)a1 + 4);
}

uint64_t sub_1D25C8218(uint64_t result, unsigned int a2)
{
  if (a2 >= 4)
  {
    *(_QWORD *)result = a2 - 4;
    *(_QWORD *)(result + 8) = 0;
    LOBYTE(a2) = 4;
  }
  *(_BYTE *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for SQLValue()
{
  return &type metadata for SQLValue;
}

uint64_t sub_1D25C8240(void (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(uint64_t);
  uint64_t v19;
  uint64_t v20;

  v4 = v3;
  v18 = a1;
  v19 = a2;
  v17 = sub_1D26CB880();
  v6 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *(_QWORD *)(a3 + 16);
  v10 = MEMORY[0x1E0DEE9D8];
  if (v9)
  {
    v20 = MEMORY[0x1E0DEE9D8];
    sub_1D258439C(0, v9, 0);
    v10 = v20;
    v11 = *(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0) - 8);
    v12 = a3 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v16 = *(_QWORD *)(v11 + 72);
    while (1)
    {
      v18(v12);
      if (v4)
        break;
      v4 = 0;
      v20 = v10;
      v14 = *(_QWORD *)(v10 + 16);
      v13 = *(_QWORD *)(v10 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1D258439C(v13 > 1, v14 + 1, 1);
        v10 = v20;
      }
      *(_QWORD *)(v10 + 16) = v14 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v6 + 32))(v10+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(_QWORD *)(v6 + 72) * v14, v8, v17);
      v12 += v16;
      if (!--v9)
        return v10;
    }
    swift_release();
  }
  return v10;
}

uint64_t sub_1D25C83BC(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25C8428(a1, a2, a3, a4, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], (void (*)(BOOL, unint64_t, uint64_t))sub_1D258439C);
}

uint64_t sub_1D25C83E0(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25C8428(a1, a2, a3, a4, MEMORY[0x1E0D877F8], (void (*)(BOOL, unint64_t, uint64_t))sub_1D2584474);
}

uint64_t sub_1D25C8404(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25C8428(a1, a2, a3, a4, MEMORY[0x1E0D87650], (void (*)(BOOL, unint64_t, uint64_t))sub_1D25844A0);
}

uint64_t sub_1D25C8428(void (*a1)(_QWORD *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(_QWORD), void (*a6)(BOOL, unint64_t, uint64_t))
{
  uint64_t v6;
  uint64_t v8;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t *v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  void (*v20)(BOOL, unint64_t, uint64_t);
  uint64_t v21;
  void (*v22)(_QWORD *);
  uint64_t v23;
  _QWORD v24[2];
  uint64_t v25;

  v8 = v6;
  v22 = a1;
  v23 = a2;
  v21 = a5(0);
  v10 = *(_QWORD *)(v21 - 8);
  MEMORY[0x1E0C80A78](v21);
  v12 = (char *)&v20 - v11;
  v13 = *(_QWORD *)(a3 + 16);
  v14 = MEMORY[0x1E0DEE9D8];
  if (v13)
  {
    v25 = MEMORY[0x1E0DEE9D8];
    v20 = a6;
    a6(0, v13, 0);
    v14 = v25;
    v15 = (uint64_t *)(a3 + 40);
    while (1)
    {
      v16 = *v15;
      v24[0] = *(v15 - 1);
      v24[1] = v16;
      swift_bridgeObjectRetain();
      v22(v24);
      if (v8)
        break;
      v8 = 0;
      swift_bridgeObjectRelease();
      v25 = v14;
      v18 = *(_QWORD *)(v14 + 16);
      v17 = *(_QWORD *)(v14 + 24);
      if (v18 >= v17 >> 1)
      {
        v20(v17 > 1, v18 + 1, 1);
        v14 = v25;
      }
      v15 += 2;
      *(_QWORD *)(v14 + 16) = v18 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v10 + 32))(v14+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v18, v12, v21);
      if (!--v13)
        return v14;
    }
    swift_release();
    swift_bridgeObjectRelease();
  }
  return v14;
}

uint64_t ActivityCacheManager.url(for:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v21 = a2;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = v2[4];
  v11 = v2[5];
  __swift_project_boxed_opaque_existential_0(v2 + 1, v12);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v11 + 24))(a1, v12, v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D253703C((uint64_t)v6, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    swift_allocError();
    v14 = v13;
    v15 = *a1 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(v14, 0, 1, v17);
    return swift_willThrow();
  }
  else
  {
    sub_1D25384CC((uint64_t)v6, (uint64_t)v10, &qword_1ED9630E0);
    v19 = v2[9];
    v20 = v2[10];
    __swift_project_boxed_opaque_existential_0(v2 + 6, v19);
    (*(void (**)(char *, uint64_t, uint64_t))(v20 + 24))(v10, v19, v20);
    return sub_1D253703C((uint64_t)v10, &qword_1ED9630E0);
  }
}

uint64_t type metadata accessor for ActivityCacheManager.CacheManagementError()
{
  uint64_t result;

  result = qword_1EFC82CD8;
  if (!qword_1EFC82CD8)
    return swift_getSingletonMetadata();
  return result;
}

id ActivityCacheManager.fileManager.getter()
{
  id *v0;

  return *v0;
}

void ActivityCacheManager.fileManager.setter(void *a1)
{
  id *v1;

  *v1 = a1;
}

uint64_t (*ActivityCacheManager.fileManager.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityCacheManager.cacheKeyProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 8, a1);
}

uint64_t ActivityCacheManager.cacheKeyProvider.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 8;
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_1D2538F38(a1, v3);
}

uint64_t (*ActivityCacheManager.cacheKeyProvider.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityCacheManager.cacheURLProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 48, a1);
}

uint64_t ActivityCacheManager.cacheURLProvider.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 48;
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_1D2538F38(a1, v3);
}

uint64_t (*ActivityCacheManager.cacheURLProvider.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityCacheManager.protectionLevelProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 88, a1);
}

uint64_t ActivityCacheManager.protectionLevelProvider.setter(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 88;
  __swift_destroy_boxed_opaque_existential_1(v3);
  return sub_1D2538F38(a1, v3);
}

uint64_t (*ActivityCacheManager.protectionLevelProvider.modify())()
{
  return CGSizeMake;
}

uint64_t ActivityCacheManager.init(cacheKeyProvider:cacheURLProvider:protectionLevelProvider:fileManager:)@<X0>(__int128 *a1@<X0>, __int128 *a2@<X1>, __int128 *a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t result;

  sub_1D2538F38(a1, (uint64_t)(a5 + 1));
  sub_1D2538F38(a2, (uint64_t)(a5 + 6));
  result = sub_1D2538F38(a3, (uint64_t)(a5 + 11));
  *a5 = a4;
  return result;
}

uint64_t ActivityCacheManager.protectionLevelForContent(from:)(_QWORD *a1)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1[14];
  v4 = v1[15];
  __swift_project_boxed_opaque_existential_0(v1 + 11, v3);
  return (*(uint64_t (**)(_QWORD, uint64_t, uint64_t))(v4 + 16))(*a1, v3, v4);
}

uint64_t ActivityCacheManager.content(for:from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;

  v15 = a3;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  MEMORY[0x1E0C80A78](v6);
  v8 = (uint64_t *)((char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963268);
  MEMORY[0x1E0C80A78](v9);
  v11 = (uint64_t *)((char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2534120(a2, (uint64_t)v8, type metadata accessor for ActivityKey);
  sub_1D2534120(a1, (uint64_t)v8 + *(int *)(v6 + 68), type metadata accessor for ActivityVariantKey);
  sub_1D25C8BA0(v8, v3, v11);
  sub_1D253703C((uint64_t)v8, &qword_1ED963110);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v16 = *v11;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    return swift_willThrowTypedImpl();
  }
  else
  {
    v13 = sub_1D26CD734();
    return (*(uint64_t (**)(uint64_t, uint64_t *, uint64_t))(*(_QWORD *)(v13 - 8) + 32))(v15, v11, v13);
  }
}

uint64_t sub_1D25C8BA0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(_QWORD *, uint64_t, uint64_t);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  char *v42;
  uint64_t v43;
  _QWORD *v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  char *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char *v59;
  _QWORD *v60;
  char *v61;
  _QWORD *v62;

  v62 = a3;
  v57 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1B8);
  MEMORY[0x1E0C80A78](v57);
  v56 = (uint64_t)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = sub_1D26CD488();
  v50 = *(_QWORD *)(v6 - 8);
  v51 = v6;
  MEMORY[0x1E0C80A78](v6);
  v55 = (char *)&v49 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v49 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CB880();
  v53 = *(_QWORD *)(v15 - 8);
  v54 = v15;
  MEMORY[0x1E0C80A78](v15);
  v52 = (char *)&v49 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v58 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C118);
  v17 = MEMORY[0x1E0C80A78](v58);
  v59 = (char *)&v49 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v49 = (char *)&v49 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (uint64_t *)((char *)&v49 - v22);
  MEMORY[0x1E0C80A78](v21);
  v61 = (char *)&v49 - v24;
  v25 = *(_QWORD *)(a2 + 32);
  v26 = *(_QWORD *)(a2 + 40);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a2 + 8), v25);
  v27 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v26 + 24);
  v60 = a1;
  v27(a1, v25, v26);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_1D253703C((uint64_t)v10, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    v28 = swift_allocError();
    v30 = v29;
    v31 = v60;
    v32 = *v60 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 16))(v30, v32, v33);
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v30, 0, 1, v34);
    swift_willThrow();
    v35 = (uint64_t)v31;
    v43 = (uint64_t)v61;
    v44 = v59;
    *v23 = v28;
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    sub_1D25384CC((uint64_t)v10, (uint64_t)v14, &qword_1ED9630E0);
    v36 = *(_QWORD *)(a2 + 72);
    v37 = *(_QWORD *)(a2 + 80);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(a2 + 48), v36);
    v38 = v52;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 24))(v14, v36, v37);
    sub_1D253703C((uint64_t)v14, &qword_1ED9630E0);
    v39 = *(_QWORD *)(a2 + 112);
    v40 = *(_QWORD *)(a2 + 120);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(a2 + 88), v39);
    v41 = v60;
    v42 = v55;
    (*(void (**)(_QWORD, uint64_t, uint64_t))(v40 + 16))(*v60, v39, v40);
    v35 = (uint64_t)v41;
    v45 = (uint64_t)v49;
    v46 = &v49[*(int *)(v57 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v53 + 32))(v49, v38, v54);
    (*(void (**)(char *, char *, uint64_t))(v50 + 32))(v46, v42, v51);
    swift_storeEnumTagMultiPayload();
    sub_1D25384CC(v45, (uint64_t)v23, (uint64_t *)&unk_1ED96C118);
    v43 = (uint64_t)v61;
    v44 = v59;
  }
  sub_1D25384CC((uint64_t)v23, v43, (uint64_t *)&unk_1ED96C118);
  sub_1D2537078(v43, (uint64_t)v44, (uint64_t *)&unk_1ED96C118);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    *v62 = *v44;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963268);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    v47 = v56;
    sub_1D25384CC((uint64_t)v44, v56, &qword_1ED96B1B8);
    sub_1D25C9BC0(v47, (void **)a2, v35, v62);
    sub_1D253703C(v47, &qword_1ED96B1B8);
  }
  return sub_1D253703C(v43, (uint64_t *)&unk_1ED96C118);
}

_QWORD *ActivityCacheManager.archiveFilePromise(for:from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD *v26;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  uint64_t v34;
  char *v35;
  void (*v36)(_QWORD, _QWORD);
  id v37;
  char *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  void (*v49)(char *, uint64_t);
  id v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  char *v59;
  uint64_t v60;
  uint64_t v61;
  char *v62;
  _QWORD *v63;
  void (*v64)(_QWORD, _QWORD);
  uint64_t v65;
  uint64_t v66;
  char *v67;
  __int128 v68;
  unint64_t v69;
  _UNKNOWN **v70;
  uint64_t v71;

  v3 = v2;
  v71 = *MEMORY[0x1E0C80C00];
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC90);
  MEMORY[0x1E0C80A78](v6);
  v58 = (char *)&v56 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CD488();
  v60 = *(_QWORD *)(v8 - 8);
  v61 = v8;
  MEMORY[0x1E0C80A78](v8);
  v62 = (char *)&v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v56 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  MEMORY[0x1E0C80A78](v17);
  v19 = (uint64_t *)((char *)&v56 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  v20 = sub_1D26CB880();
  v65 = *(_QWORD *)(v20 - 8);
  v66 = v20;
  v21 = MEMORY[0x1E0C80A78](v20);
  v59 = (char *)&v56 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v67 = (char *)&v56 - v23;
  v63 = (_QWORD *)a2;
  sub_1D2534120(a2, (uint64_t)v19, type metadata accessor for ActivityKey);
  sub_1D2534120(a1, (uint64_t)v19 + *(int *)(v17 + 68), type metadata accessor for ActivityVariantKey);
  v25 = *(_QWORD *)(v3 + 32);
  v24 = *(_QWORD *)(v3 + 40);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + 8), v25);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v24 + 24))(v19, v25, v24);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D253703C((uint64_t)v12, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    swift_allocError();
    v27 = v26;
    v28 = *v19 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v29 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(_QWORD *, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 16))(v27, v28, v29);
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(_QWORD *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v27, 0, 1, v30);
    swift_willThrow();
    sub_1D253703C((uint64_t)v19, &qword_1ED963110);
  }
  else
  {
    sub_1D25384CC((uint64_t)v12, (uint64_t)v16, &qword_1ED9630E0);
    v31 = *(_QWORD *)(v3 + 72);
    v32 = *(_QWORD *)(v3 + 80);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + 48), v31);
    v33 = v67;
    (*(void (**)(char *, uint64_t, uint64_t))(v32 + 24))(v16, v31, v32);
    sub_1D253703C((uint64_t)v16, &qword_1ED9630E0);
    sub_1D253703C((uint64_t)v19, &qword_1ED963110);
    v27 = *(_QWORD **)(v3 + 112);
    v34 = *(_QWORD *)(v3 + 120);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + 88), (uint64_t)v27);
    v35 = v62;
    v36 = v64;
    (*(void (**)(_QWORD, _QWORD *, uint64_t))(v34 + 16))(*v63, v27, v34);
    if (v36)
    {
      (*(void (**)(char *, uint64_t))(v65 + 8))(v33, v66);
    }
    else
    {
      v37 = *(id *)v3;
      v38 = v59;
      sub_1D26CB82C();
      v39 = (void *)sub_1D26CB7D8();
      v40 = v65;
      v41 = v66;
      v64 = *(void (**)(_QWORD, _QWORD))(v65 + 8);
      v64(v38, v66);
      *(_QWORD *)&v68 = 0;
      v42 = objc_msgSend(v37, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v39, 1, 0, &v68);

      v43 = (id)v68;
      if ((v42 & 1) != 0)
      {
        *(_QWORD *)&v68 = 0;
        *((_QWORD *)&v68 + 1) = 0xE000000000000000;
        sub_1D26CE0A0();
        swift_bridgeObjectRelease();
        *(_QWORD *)&v68 = 0x506E6F6973736573;
        *((_QWORD *)&v68 + 1) = 0xEF2D72657474616CLL;
        sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
        v44 = v41;
        v45 = v67;
        sub_1D26CE370();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        v57 = *((_QWORD *)&v68 + 1);
        v63 = (_QWORD *)v68;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v38, v45, v44);
        v46 = v60;
        v47 = v61;
        v48 = (uint64_t)v58;
        (*(void (**)(char *, char *, uint64_t))(v60 + 16))(v58, v35, v61);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v46 + 56))(v48, 0, 1, v47);
        v49 = *(void (**)(char *, uint64_t))(v46 + 8);
        v50 = *(id *)v3;
        v49(v35, v47);
        v51 = v66;
        v64(v45, v66);
        v69 = sub_1D257F2D4();
        v70 = &off_1E93D53E8;
        *(_QWORD *)&v68 = v50;
        type metadata accessor for DataProtectedArchiveFilePromise(0);
        v27 = (_QWORD *)swift_allocObject();
        v52 = (char *)v27 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_intermediates;
        v53 = type metadata accessor for DataProtectedArchiveFilePromise.Intermediates(0);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 56))(v52, 1, 1, v53);
        v54 = v57;
        v27[2] = v63;
        v27[3] = v54;
        (*(void (**)(uint64_t, char *, uint64_t))(v65 + 32))((uint64_t)v27 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_destination, v38, v51);
        sub_1D2538F38(&v68, (uint64_t)(v27 + 4));
        sub_1D25384CC(v48, (uint64_t)v27 + OBJC_IVAR____TtC9ChronoKit31DataProtectedArchiveFilePromise_protectionLevel, &qword_1ED96FC90);
      }
      else
      {
        v27 = v43;
        sub_1D26CB76C();

        swift_willThrow();
        (*(void (**)(char *, uint64_t))(v60 + 8))(v35, v61);
        v64(v67, v41);
      }
    }
  }
  return v27;
}

uint64_t ActivityCacheManager.remove(for:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(_QWORD *, uint64_t, uint64_t);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  void *v24;
  void *v25;
  uint64_t (*v26)(char *, uint64_t);
  id v27;
  id v28;
  uint64_t v29;
  char *v30;
  _QWORD *v31;
  uint64_t v32;
  uint64_t v33;
  id v34[4];

  v34[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v29 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v29 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CB880();
  v32 = *(_QWORD *)(v10 - 8);
  v33 = v10;
  MEMORY[0x1E0C80A78](v10);
  v30 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(v1 + 32);
  v13 = *(_QWORD *)(v1 + 40);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v1 + 8), v12);
  v14 = *(void (**)(_QWORD *, uint64_t, uint64_t))(v13 + 24);
  v31 = a1;
  v14(a1, v12, v13);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D253703C((uint64_t)v5, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    swift_allocError();
    v16 = v15;
    v17 = *v31 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 0, 1, v19);
    return swift_willThrow();
  }
  else
  {
    sub_1D25384CC((uint64_t)v5, (uint64_t)v9, &qword_1ED9630E0);
    v21 = *(_QWORD *)(v1 + 72);
    v22 = *(_QWORD *)(v1 + 80);
    __swift_project_boxed_opaque_existential_0((_QWORD *)(v1 + 48), v21);
    v23 = v30;
    (*(void (**)(char *, uint64_t, uint64_t))(v22 + 24))(v9, v21, v22);
    sub_1D253703C((uint64_t)v9, &qword_1ED9630E0);
    v24 = *(void **)v1;
    v25 = (void *)sub_1D26CB7D8();
    v34[0] = 0;
    LOBYTE(v24) = objc_msgSend(v24, sel_removeItemAtURL_error_, v25, v34);

    if ((v24 & 1) != 0)
    {
      v26 = *(uint64_t (**)(char *, uint64_t))(v32 + 8);
      v27 = v34[0];
      return v26(v23, v33);
    }
    else
    {
      v28 = v34[0];
      sub_1D26CB76C();

      swift_willThrow();
      return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v23, v33);
    }
  }
}

id ActivityCacheManager.reaper(for:protecting:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void *v10;
  id v11;
  id v12;
  id v13;
  _QWORD v15[4];

  v3 = v2;
  v6 = *(_QWORD *)(v3 + 72);
  v7 = *(_QWORD *)(v3 + 80);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + 48), v6);
  v8 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 8))(a1, v6, v7);
  v15[2] = v3;
  v9 = sub_1D25C8240((void (*)(uint64_t))sub_1D25C9B58, (uint64_t)v15, a2);
  v10 = *(void **)v3;
  v11 = objc_allocWithZone((Class)type metadata accessor for WidgetReaper());
  v12 = v10;
  v13 = sub_1D25BB4F0(v8, v9, v12);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return v13;
}

uint64_t sub_1D25C9B58(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  v3 = *(_QWORD **)(v1 + 16);
  v4 = v3[9];
  v5 = v3[10];
  __swift_project_boxed_opaque_existential_0(v3 + 6, v4);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(a1, v4, v5);
}

uint64_t sub_1D25C9BC0@<X0>(uint64_t a1@<X0>, void **a2@<X2>, uint64_t a3@<X3>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  void **v19;
  id v20;
  void *v21;
  uint64_t v22;
  uint64_t v24;
  void **v25;
  void *v26;

  v24 = a3;
  v7 = sub_1D26CB880();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v24 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963268);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v24 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (void **)((char *)&v24 - v18);
  v25 = a2;
  v20 = *a2;
  sub_1D25BA864(a1, v20);

  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, a1, v7);
  sub_1D26CD6F8();
  swift_storeEnumTagMultiPayload();
  sub_1D25384CC((uint64_t)v14, (uint64_t)v17, &qword_1ED963268);
  sub_1D25384CC((uint64_t)v17, (uint64_t)v19, &qword_1ED963268);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v26 = *v19;
    v21 = v26;
    sub_1D25C9DCC(&v26, v24, v25, a4);

  }
  else
  {
    v22 = sub_1D26CD734();
    (*(void (**)(_QWORD *, void **, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(a4, v19, v22);
  }
  return swift_storeEnumTagMultiPayload();
}

id sub_1D25C9DCC@<X0>(void **a1@<X0>, uint64_t a2@<X1>, void **a3@<X2>, _QWORD *a4@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void *v21;
  id v22;
  char v23;
  void (*v24)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v25;
  NSObject *v26;
  os_log_type_t v27;
  int v28;
  uint64_t v29;
  uint8_t *v30;
  id *v31;
  id v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  os_log_t v36;
  uint8_t *v37;
  _QWORD *v38;
  void *v39;
  void *v40;
  uint64_t v41;
  id v42;
  uint64_t v43;
  id v44;
  id v45;
  NSObject *v46;
  os_log_type_t v47;
  uint64_t v48;
  id *v49;
  id v50;
  id v51;
  uint64_t v52;
  unint64_t v53;
  id v54;
  uint64_t v55;
  _QWORD *v56;
  os_log_t v57;
  id v58;
  void *v59;
  _QWORD v61[2];
  uint8_t *v62;
  uint64_t v63;
  _QWORD *v64;
  os_log_t v65;
  uint64_t v66;
  id *v67;
  _QWORD *v68;
  uint64_t v69;
  unint64_t v70;
  uint64_t v71[2];

  v68 = a4;
  v71[1] = *MEMORY[0x1E0C80C00];
  v66 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v7 = MEMORY[0x1E0C80A78](v66);
  v9 = (char *)v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v67 = (id *)((char *)v61 - v11);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v61 - v12;
  v14 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96FBD0);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)v61 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CB574();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v20 = (char *)v61 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *a1;
  v69 = (uint64_t)v21;
  v22 = v21;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
  v23 = swift_dynamicCast();
  v24 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56);
  if ((v23 & 1) != 0)
  {
    v24(v16, 0, 1, v17);
    (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v20, v16, v17);
    if (sub_1D25BA0DC())
    {
      if (qword_1EFC821F0 != -1)
        swift_once();
      v25 = sub_1D26CC09C();
      __swift_project_value_buffer(v25, (uint64_t)qword_1EFC8AB10);
      sub_1D2537078(a2, (uint64_t)v13, &qword_1ED963110);
      v26 = sub_1D26CC084();
      v27 = sub_1D26CDD04();
      v28 = v27;
      if (os_log_type_enabled(v26, v27))
      {
        v65 = v26;
        v29 = swift_slowAlloc();
        LODWORD(v63) = v28;
        v30 = (uint8_t *)v29;
        v64 = (_QWORD *)swift_slowAlloc();
        v71[0] = (uint64_t)v64;
        *(_DWORD *)v30 = 136446210;
        v61[1] = v30 + 12;
        v62 = v30;
        v61[0] = v30 + 4;
        v31 = v67;
        sub_1D2537078((uint64_t)v13, (uint64_t)v67, &qword_1ED963110);
        v69 = 91;
        v70 = 0xE100000000000000;
        v32 = *v31;
        v33 = objc_msgSend(v32, sel_description);
        sub_1D26CD938();

        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        type metadata accessor for ActivityKey(0);
        sub_1D26CBAF0();
        sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
        sub_1D26CE370();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        swift_bridgeObjectRetain();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        sub_1D26CDA04();
        ActivityVariantKey.description.getter();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        v34 = v69;
        v35 = v70;
        sub_1D253703C((uint64_t)v31, &qword_1ED963110);
        v69 = sub_1D2537880(v34, v35, v71);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        sub_1D253703C((uint64_t)v13, &qword_1ED963110);
        v36 = v65;
        v37 = v62;
        _os_log_impl(&dword_1D2531000, v65, (os_log_type_t)v63, "Not removing item for key %{public}s because of keybag", v62, 0xCu);
        v38 = v64;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v38, -1, -1);
        MEMORY[0x1D823A5E0](v37, -1, -1);

      }
      else
      {

        sub_1D253703C((uint64_t)v13, &qword_1ED963110);
      }
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
      goto LABEL_19;
    }
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v17);
  }
  else
  {
    v24(v16, 1, 1, v17);
    sub_1D253703C((uint64_t)v16, qword_1ED96FBD0);
  }
  v39 = *a3;
  v40 = (void *)sub_1D26CB7D8();
  v69 = 0;
  LODWORD(v39) = objc_msgSend(v39, sel_removeItemAtURL_error_, v40, &v69);

  if ((_DWORD)v39)
  {
    v41 = qword_1ED96C1C8;
    v42 = (id)v69;
    if (v41 != -1)
      swift_once();
    v43 = sub_1D26CC09C();
    __swift_project_value_buffer(v43, (uint64_t)qword_1ED977F80);
    sub_1D2537078(a2, (uint64_t)v9, &qword_1ED963110);
    v44 = v21;
    v45 = v21;
    v46 = sub_1D26CC084();
    v47 = sub_1D26CDD04();
    if (os_log_type_enabled(v46, v47))
    {
      v48 = swift_slowAlloc();
      v64 = (_QWORD *)swift_slowAlloc();
      v65 = (os_log_t)swift_slowAlloc();
      v71[0] = (uint64_t)v65;
      *(_DWORD *)v48 = 136446466;
      v63 = v48 + 4;
      v49 = v67;
      sub_1D2537078((uint64_t)v9, (uint64_t)v67, &qword_1ED963110);
      v69 = 91;
      v70 = 0xE100000000000000;
      v50 = *v49;
      v51 = objc_msgSend(v50, sel_description);
      sub_1D26CD938();

      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      type metadata accessor for ActivityKey(0);
      sub_1D26CBAF0();
      sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      swift_bridgeObjectRetain();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CDA04();
      ActivityVariantKey.description.getter();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v52 = v69;
      v53 = v70;
      sub_1D253703C((uint64_t)v49, &qword_1ED963110);
      v69 = sub_1D2537880(v52, v53, v71);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D253703C((uint64_t)v9, &qword_1ED963110);
      *(_WORD *)(v48 + 12) = 2112;
      v54 = v21;
      v55 = _swift_stdlib_bridgeErrorToNSError();
      v69 = v55;
      sub_1D26CDF50();
      v56 = v64;
      *v64 = v55;

      _os_log_impl(&dword_1D2531000, v46, v47, "Removing item for key %{public}s because  %@", (uint8_t *)v48, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v56, -1, -1);
      v57 = v65;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v57, -1, -1);
      MEMORY[0x1D823A5E0](v48, -1, -1);
    }
    else
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED963110);

    }
  }
  else
  {
    v58 = (id)v69;
    v59 = (void *)sub_1D26CB76C();

    swift_willThrow();
  }
LABEL_19:
  *v68 = v21;
  return v21;
}

uint64_t ActivityCacheManager.ingestArchive(url:for:)(char *a1, _QWORD *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  void *v30;
  void *v31;
  unsigned __int8 v32;
  char *v33;
  id v34;
  void *v35;
  unsigned int v36;
  uint64_t v37;
  id v38;
  id v39;
  uint64_t v40;
  void (*v41)(char *, uint64_t);
  id v42;
  void *v43;
  os_log_t v44;
  NSObject *v45;
  void *v46;
  void *v47;
  unsigned int v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  void (*v53)(os_log_t, char *, uint64_t);
  NSObject *v54;
  os_log_type_t v55;
  int v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  void (*v60)(os_log_t, uint64_t);
  NSObject *v61;
  uint64_t v62;
  unint64_t v63;
  os_log_t v64;
  _QWORD *v65;
  id v66;
  void (*v67)(char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  os_log_t v70;
  NSObject *v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  char *v75;
  _QWORD *v76;
  uint64_t v77;
  id v78[4];

  v76 = a2;
  v72 = a1;
  v78[3] = *(id *)MEMORY[0x1E0C80C00];
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v68 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CB880();
  v73 = *(_QWORD *)(v10 - 8);
  v74 = v10;
  v11 = MEMORY[0x1E0C80A78](v10);
  v71 = ((char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = MEMORY[0x1E0C80A78](v11);
  v70 = (os_log_t)((char *)&v68 - v14);
  v15 = MEMORY[0x1E0C80A78](v13);
  v75 = (char *)&v68 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v68 - v17;
  v19 = *(_QWORD *)(v2 + 32);
  v20 = *(_QWORD *)(v2 + 40);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + 8), v19);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v20 + 24))(v76, v19, v20);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
  {
    sub_1D253703C((uint64_t)v5, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    swift_allocError();
    v22 = v21;
    v23 = *v76 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 56))(v22, 0, 1, v25);
    return swift_willThrow();
  }
  sub_1D25384CC((uint64_t)v5, (uint64_t)v9, &qword_1ED9630E0);
  v27 = *(_QWORD *)(v2 + 72);
  v28 = *(_QWORD *)(v2 + 80);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + 48), v27);
  (*(void (**)(char *, uint64_t, uint64_t))(v28 + 24))(v9, v27, v28);
  sub_1D253703C((uint64_t)v9, &qword_1ED9630E0);
  v29 = v75;
  sub_1D26CB82C();
  v30 = *(void **)v2;
  v31 = (void *)sub_1D26CB7D8();
  v78[0] = 0;
  v32 = objc_msgSend(v30, sel_createDirectoryAtURL_withIntermediateDirectories_attributes_error_, v31, 1, 0, v78);

  v33 = v18;
  if ((v32 & 1) == 0)
  {
    v39 = v78[0];
    sub_1D26CB76C();

    swift_willThrow();
    v40 = v74;
    v41 = *(void (**)(char *, uint64_t))(v73 + 8);
    v41(v29, v74);
    return ((uint64_t (*)(char *, uint64_t))v41)(v18, v40);
  }
  v34 = v78[0];
  v35 = (void *)sub_1D26CB7D8();
  v78[0] = 0;
  v36 = objc_msgSend(v30, sel_removeItemAtURL_error_, v35, v78);

  v37 = v74;
  if (v36)
  {
    v38 = v78[0];
  }
  else
  {
    v42 = v78[0];
    v43 = (void *)sub_1D26CB76C();

    swift_willThrow();
  }
  v44 = v70;
  v45 = v71;
  v46 = (void *)sub_1D26CB7D8();
  v47 = (void *)sub_1D26CB7D8();
  v78[0] = 0;
  v48 = objc_msgSend(v30, sel_moveItemAtURL_toURL_error_, v46, v47, v78);

  if (v48)
  {
    v49 = qword_1ED96C1C8;
    v50 = v78[0];
    if (v49 != -1)
      swift_once();
    v51 = sub_1D26CC09C();
    __swift_project_value_buffer(v51, (uint64_t)qword_1ED977F80);
    v52 = v73;
    v53 = *(void (**)(os_log_t, char *, uint64_t))(v73 + 16);
    v53(v44, v72, v37);
    v53(v45, v33, v37);
    v54 = sub_1D26CC084();
    v55 = sub_1D26CDD04();
    v56 = v55;
    if (os_log_type_enabled(v54, v55))
    {
      v57 = swift_slowAlloc();
      v76 = (_QWORD *)swift_slowAlloc();
      v78[0] = v76;
      *(_DWORD *)v57 = 136446466;
      v68 = v57 + 4;
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v70 = v54;
      LODWORD(v69) = v56;
      v58 = sub_1D26CE370();
      v77 = sub_1D2537880(v58, v59, (uint64_t *)v78);
      v72 = v33;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v60 = *(void (**)(os_log_t, uint64_t))(v52 + 8);
      v60(v44, v37);
      *(_WORD *)(v57 + 12) = 2082;
      v61 = v71;
      v62 = sub_1D26CE370();
      v77 = sub_1D2537880(v62, v63, (uint64_t *)v78);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v60(v61, v37);
      v64 = v70;
      _os_log_impl(&dword_1D2531000, v70, (os_log_type_t)v69, "Ingested activity archive from %{public}s to %{public}s", (uint8_t *)v57, 0x16u);
      v65 = v76;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v65, -1, -1);
      MEMORY[0x1D823A5E0](v57, -1, -1);

      v60((os_log_t)v75, v37);
      return ((uint64_t (*)(char *, uint64_t))v60)(v72, v37);
    }

    v67 = *(void (**)(char *, uint64_t))(v52 + 8);
    v67((char *)v45, v37);
    v67((char *)v44, v37);
    v67(v29, v37);
  }
  else
  {
    v66 = v78[0];
    sub_1D26CB76C();

    swift_willThrow();
    v67 = *(void (**)(char *, uint64_t))(v73 + 8);
    v67(v29, v37);
  }
  return ((uint64_t (*)(char *, uint64_t))v67)(v33, v37);
}

uint64_t sub_1D25CADB8(char *a1, _QWORD *a2)
{
  return ActivityCacheManager.ingestArchive(url:for:)(a1, a2);
}

uint64_t ActivityCacheManager.version(for:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  unint64_t v42;
  _QWORD *v43;

  v43 = a1;
  v35 = a2;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82BD0);
  v34 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36 = (char *)&v34 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v34 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v38 = (uint64_t)&v34 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CB880();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v40 = (char *)&v34 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = v2[4];
  v14 = v2[5];
  __swift_project_boxed_opaque_existential_0(v2 + 1, v13);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v14 + 24))(v43, v13, v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D253703C((uint64_t)v6, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    swift_allocError();
    v16 = v15;
    v17 = *v43 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v16, v17, v18);
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56))(v16, 0, 1, v19);
    return swift_willThrow();
  }
  else
  {
    v21 = v11;
    v22 = v38;
    sub_1D25384CC((uint64_t)v6, v38, &qword_1ED9630E0);
    v23 = v2[9];
    v24 = v2[10];
    __swift_project_boxed_opaque_existential_0(v2 + 6, v23);
    v25 = v40;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v24 + 24))(v22, v23, v24);
    v26 = sub_1D253703C(v22, &qword_1ED9630E0);
    MEMORY[0x1E0C80A78](v26);
    *(&v34 - 2) = 0xD00000000000001ALL;
    *(&v34 - 1) = 0x80000001D26E10F0;
    v27 = v39;
    sub_1D26CB844();
    if (v27)
    {
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v25, v10);
    }
    else
    {
      v28 = v41;
      v29 = v42;
      sub_1D26CB6F4();
      swift_allocObject();
      sub_1D26CB6E8();
      sub_1D25CBAB0(&qword_1EFC82BE0, MEMORY[0x1E0D0F6A8]);
      v31 = v36;
      v30 = v37;
      sub_1D26CB6DC();
      swift_release();
      sub_1D253EE04(v28, v29);
      v32 = v35;
      sub_1D26CBC04();
      (*(void (**)(char *, uint64_t))(v34 + 8))(v31, v30);
      (*(void (**)(char *, uint64_t))(v21 + 8))(v40, v10);
      v33 = sub_1D26CBA24();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 56))(v32, 0, 1, v33);
    }
  }
}

uint64_t sub_1D25CB1F8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return ActivityCacheManager.version(for:)(a1, a2);
}

uint64_t ActivityCacheManager.markDataWithVersion(for:version:)(_QWORD *a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  void (*v35)(char *, uint64_t, uint64_t);
  uint64_t v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  id *v43;
  id v44;
  id v45;
  id v46;
  uint64_t v47;
  unint64_t v48;
  char *v49;
  uint64_t v50;
  unint64_t v51;
  _QWORD *v52;
  uint64_t v53;
  uint64_t (*v54)(uint64_t);
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  uint64_t v62;
  _QWORD v63[2];
  os_log_t v64;
  int v65;
  char *v66;
  uint64_t v67;
  id *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  uint64_t v80;
  _QWORD *v81;
  uint64_t v82;
  unint64_t v83;
  _QWORD *v84;

  v73 = a2;
  v81 = a1;
  v77 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82BD0);
  v71 = *(_QWORD *)(v77 - 8);
  MEMORY[0x1E0C80A78](v77);
  v76 = (char *)v63 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v74 = sub_1D26CBA24();
  v80 = *(_QWORD *)(v74 - 8);
  v4 = MEMORY[0x1E0C80A78](v74);
  v72 = (char *)v63 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v79 = (char *)v63 - v6;
  v67 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963110);
  v7 = MEMORY[0x1E0C80A78](v67);
  v68 = (id *)((char *)v63 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v7);
  v78 = (uint64_t)v63 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)v63 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CB880();
  v69 = *(_QWORD *)(v17 - 8);
  v70 = v17;
  MEMORY[0x1E0C80A78](v17);
  v19 = (char *)v63 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = v2[4];
  v21 = v2[5];
  __swift_project_boxed_opaque_existential_0(v2 + 1, v20);
  (*(void (**)(_QWORD *, uint64_t, uint64_t))(v21 + 24))(v81, v20, v21);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D253703C((uint64_t)v12, &qword_1ED9630E8);
    type metadata accessor for ActivityCacheManager.CacheManagementError();
    sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
    swift_allocError();
    v23 = v22;
    v24 = *v81 + *MEMORY[0x1E0D0FE30];
    swift_beginAccess();
    v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v25 - 8) + 16))(v23, v24, v25);
    v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 56))(v23, 0, 1, v26);
    return swift_willThrow();
  }
  else
  {
    v28 = (uint64_t)v81;
    sub_1D25384CC((uint64_t)v12, (uint64_t)v16, &qword_1ED9630E0);
    v29 = v2[9];
    v30 = v2[10];
    __swift_project_boxed_opaque_existential_0(v2 + 6, v29);
    (*(void (**)(char *, uint64_t, uint64_t))(v30 + 24))(v16, v29, v30);
    sub_1D253703C((uint64_t)v16, &qword_1ED9630E0);
    v66 = v19;
    if (qword_1ED96C1C8 != -1)
      swift_once();
    v31 = sub_1D26CC09C();
    __swift_project_value_buffer(v31, (uint64_t)qword_1ED977F80);
    v32 = v78;
    sub_1D2537078(v28, v78, &qword_1ED963110);
    v34 = v79;
    v33 = v80;
    v35 = *(void (**)(char *, uint64_t, uint64_t))(v80 + 16);
    v37 = v73;
    v36 = v74;
    v35(v79, v73, v74);
    v38 = sub_1D26CC084();
    v39 = sub_1D26CDD04();
    v40 = v39;
    if (os_log_type_enabled(v38, v39))
    {
      v41 = swift_slowAlloc();
      v65 = v40;
      v42 = v41;
      v81 = (_QWORD *)swift_slowAlloc();
      v84 = v81;
      *(_DWORD *)v42 = 136446466;
      v63[1] = v42 + 4;
      v43 = v68;
      sub_1D2537078(v32, (uint64_t)v68, &qword_1ED963110);
      v82 = 91;
      v83 = 0xE100000000000000;
      v44 = *v43;
      v45 = objc_msgSend(v44, sel_description);
      v64 = v38;
      v46 = v45;
      sub_1D26CD938();

      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      type metadata accessor for ActivityKey(0);
      sub_1D26CBAF0();
      sub_1D25369B0(&qword_1ED962FE8, (uint64_t (*)(uint64_t))MEMORY[0x1E0C8F830], MEMORY[0x1E0C8F850]);
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      swift_bridgeObjectRetain();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D26CDA04();
      ActivityVariantKey.description.getter();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v47 = v82;
      v48 = v83;
      sub_1D253703C((uint64_t)v43, &qword_1ED963110);
      v82 = sub_1D2537880(v47, v48, (uint64_t *)&v84);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D253703C(v78, &qword_1ED963110);
      *(_WORD *)(v42 + 12) = 2082;
      sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v49 = v79;
      v50 = sub_1D26CE370();
      v82 = sub_1D2537880(v50, v51, (uint64_t *)&v84);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v36);
      v38 = v64;
      _os_log_impl(&dword_1D2531000, v64, (os_log_type_t)v65, "%{public}s marked with version %{public}s", (uint8_t *)v42, 0x16u);
      v52 = v81;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v52, -1, -1);
      MEMORY[0x1D823A5E0](v42, -1, -1);
    }
    else
    {
      sub_1D253703C(v32, &qword_1ED963110);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v34, v36);
    }

    v53 = v77;
    v35(v72, v37, v36);
    v54 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998];
    sub_1D25369B0(&qword_1EFC82600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    sub_1D25369B0(&qword_1ED963280, v54, MEMORY[0x1E0CB09B8]);
    v55 = v76;
    sub_1D26CBBF8();
    sub_1D26CB724();
    swift_allocObject();
    sub_1D26CB718();
    sub_1D26CB700();
    sub_1D25CBAB0(&qword_1EFC82BD8, MEMORY[0x1E0D0F6A0]);
    v56 = v75;
    v57 = sub_1D26CB70C();
    v59 = v66;
    if (v56)
    {
      swift_release();
    }
    else
    {
      v60 = v57;
      v61 = v58;
      v62 = swift_release();
      MEMORY[0x1E0C80A78](v62);
      v63[-4] = v60;
      v63[-3] = v61;
      v63[-2] = 0xD00000000000001ALL;
      v63[-1] = 0x80000001D26E10F0;
      sub_1D26CB844();
      sub_1D253EE04(v60, v61);
    }
    (*(void (**)(char *, uint64_t))(v71 + 8))(v55, v53);
    return (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v59, v70);
  }
}

uint64_t sub_1D25CBA9C(_QWORD *a1, uint64_t a2)
{
  return ActivityCacheManager.markDataWithVersion(for:version:)(a1, a2);
}

uint64_t sub_1D25CBAB0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82BD0);
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t dispatch thunk of ActivityCacheURLProviding.candidateURLs(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ActivityCacheURLProviding.urls(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityCacheKeyProviding.baseURLsForTargets(of:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of ActivityCacheKeyProviding.baseURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityCacheKeyProviding.cacheKey(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityCacheIngesting.ingestArchive(url:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ActivityCacheVersionReading.version(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t destroy for ActivityCacheManager(id *a1)
{
  uint64_t v2;

  v2 = (uint64_t)(a1 + 11);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 1));
  __swift_destroy_boxed_opaque_existential_1((uint64_t)(a1 + 6));
  return __swift_destroy_boxed_opaque_existential_1(v2);
}

uint64_t initializeWithCopy for ActivityCacheManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;
  uint64_t v6;
  __int128 v7;
  uint64_t v8;
  void (*v9)(uint64_t, uint64_t, uint64_t);
  id v10;
  __int128 v11;
  __int128 v12;

  v4 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v5 = a1 + 8;
  v6 = a2 + 8;
  v7 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 32) = v7;
  v8 = v7;
  v9 = **(void (***)(uint64_t, uint64_t, uint64_t))(v7 - 8);
  v10 = v4;
  v9(v5, v6, v8);
  v11 = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 72) = v11;
  (**(void (***)(uint64_t, uint64_t))(v11 - 8))(a1 + 48, a2 + 48);
  v12 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v12;
  (**(void (***)(uint64_t, uint64_t))(v12 - 8))(a1 + 88, a2 + 88);
  return a1;
}

uint64_t assignWithCopy for ActivityCacheManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t *v5;
  uint64_t *v6;
  void *v7;
  uint64_t *v8;
  id v9;

  v5 = (uint64_t *)(a2 + 88);
  v4 = *(void **)a2;
  v6 = (uint64_t *)(a1 + 48);
  v7 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v8 = (uint64_t *)(a1 + 88);
  v9 = v4;

  __swift_assign_boxed_opaque_existential_1((uint64_t *)(a1 + 8), (uint64_t *)(a2 + 8));
  __swift_assign_boxed_opaque_existential_1(v6, (uint64_t *)(a2 + 48));
  __swift_assign_boxed_opaque_existential_1(v8, v5);
  return a1;
}

__n128 __swift_memcpy128_8(uint64_t a1, __int128 *a2)
{
  __int128 v2;
  __int128 v3;
  __int128 v4;
  __n128 result;
  __int128 v6;
  __int128 v7;

  v2 = *a2;
  v3 = a2[1];
  v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  result = (__n128)a2[4];
  v6 = a2[5];
  v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(__n128 *)(a1 + 64) = result;
  *(_OWORD *)(a1 + 80) = v6;
  return result;
}

uint64_t assignWithTake for ActivityCacheManager(uint64_t a1, uint64_t a2)
{
  void *v4;
  __int128 v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  __swift_destroy_boxed_opaque_existential_1(a1 + 8);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 40) = *(_QWORD *)(a2 + 40);
  __swift_destroy_boxed_opaque_existential_1(a1 + 48);
  v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(_QWORD *)(a1 + 80) = *(_QWORD *)(a2 + 80);
  __swift_destroy_boxed_opaque_existential_1(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_QWORD *)(a1 + 120) = *(_QWORD *)(a2 + 120);
  return a1;
}

uint64_t getEnumTagSinglePayload for ActivityCacheManager(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 128))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ActivityCacheManager(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 120) = 0;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 128) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 128) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ActivityCacheManager()
{
  return &type metadata for ActivityCacheManager;
}

uint64_t *sub_1D25CBE14(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a1, a2, v10);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t sub_1D25CBEF0(uint64_t a1)
{
  uint64_t v2;
  uint64_t result;
  uint64_t v4;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
  if (!(_DWORD)result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  }
  return result;
}

void *sub_1D25CBF5C(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1D25CC014(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(a1, a2, v13);
      return a1;
    }
    sub_1D253703C((uint64_t)a1, &qword_1EFC82B88);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *sub_1D25CC128(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(void *, const void *, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(a1, a2, v8);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *sub_1D25CC1E0(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  uint64_t v13;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
      (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v13 - 8) + 40))(a1, a2, v13);
      return a1;
    }
    sub_1D253703C((uint64_t)a1, &qword_1EFC82B88);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  (*(void (**)(void *, void *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(a1, a2, v11);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t sub_1D25CC2F4()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25CC300(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t sub_1D25CC350()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25CC35C(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D25CC3B0(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D25CC3EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82B88);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

void sub_1D25CC430()
{
  unint64_t v0;

  sub_1D25CC484();
  if (v0 <= 0x3F)
    swift_initEnumMetadataSinglePayload();
}

void sub_1D25CC484()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFC82CE8)
  {
    v0 = sub_1D26CBCA0();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFC82CE8);
  }
}

uint64_t sub_1D25CC4D8()
{
  return sub_1D25369B0(&qword_1EFC82B80, (uint64_t (*)(uint64_t))type metadata accessor for ActivityCacheManager.CacheManagementError, (uint64_t)&unk_1D26D5360);
}

uint64_t dispatch thunk of ActivityCacheVersionWriting.markDataWithVersion(for:version:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return dispatch thunk of ActivityCacheIngesting.ingestArchive(url:for:)(a1, a2, a3, a4);
}

uint64_t sub_1D25CC51C(uint64_t a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  _DWORD *v8;
  uint64_t v9;
  void *v10;
  id v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__cancellable) = 0;
  v6 = OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock;
  type metadata accessor for UnfairLock();
  v7 = swift_allocObject();
  swift_retain();
  v8 = (_DWORD *)swift_slowAlloc();
  *v8 = 0;
  *(_QWORD *)(v7 + 16) = v8;
  *(_QWORD *)(v3 + v6) = v7;
  v9 = OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor;
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor) = 0;
  sub_1D2538510(a1, v3 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider);
  v10 = *(void **)(v3 + v9);
  *(_QWORD *)(v3 + v9) = a2;
  v11 = a2;
  swift_release();

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)(v3 + 16) = sub_1D26CC150();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *v13 = 0;
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v3 + 24) = v12;
  sub_1D26CC798();
  v14 = swift_retain();
  sub_1D26A5BC8(v14, v3);
  v15 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 24);
  v16 = *(_QWORD *)(v3
                  + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider), v15);
  (*(void (**)(uint64_t, uint64_t))(v16 + 16))(v15, v16);
  v17 = swift_allocObject();
  swift_weakInit();
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = sub_1D25CCC3C;
  *(_QWORD *)(v18 + 24) = v17;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B230);
  sub_1D25CCC68();
  v19 = sub_1D26CC288();

  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a1);
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__cancellable) = v19;
  swift_release();
  return v3;
}

uint64_t sub_1D25CC73C()
{
  uint64_t result;
  uint64_t v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = swift_retain();
    sub_1D26A5BC8(v1, v1);
    return swift_release_n();
  }
  return result;
}

void sub_1D25CC79C()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider);
  swift_release();

}

uint64_t sub_1D25CC7E8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = v0;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__cancellable))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  swift_release();
  swift_release();
  v2 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  v3 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v1 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1D25CC8B0()
{
  return type metadata accessor for DescriptorMixedEnvironmentProviderAdapter();
}

uint64_t type metadata accessor for DescriptorMixedEnvironmentProviderAdapter()
{
  uint64_t result;

  result = qword_1ED96C5D8;
  if (!qword_1ED96C5D8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D25CC8F4()
{
  return swift_updateClassMetadata2();
}

void sub_1D25CC94C(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  void *v14;
  os_unfair_lock_s *v15;
  id v16;
  id v17;
  unsigned int *v18;
  unsigned int *v19;
  uint64_t v20;

  v3 = sub_1D26CD2A8();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v20 - v8;
  v10 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 24);
  v11 = *(_QWORD *)(a2
                  + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider
                  + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(a2 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__sourceEnvironmentProvider), v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v10, v11);
  v12 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  v14 = *(void **)(a2 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor);
  v15 = *(os_unfair_lock_s **)(v12 + 16);
  v16 = v14;
  os_unfair_lock_unlock(v15);
  swift_release();
  if (v14)
  {
    v17 = objc_msgSend(v16, sel_preferredBackgroundStyle);
    v18 = (unsigned int *)MEMORY[0x1E0CEFDD8];
    v19 = (unsigned int *)MEMORY[0x1E0CEFDD0];
    if (v17 != (id)1)
      v19 = (unsigned int *)MEMORY[0x1E0CEFDE0];
    if (v17 != (id)2)
      v18 = v19;
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v7, *v18, v3);
    sub_1D26CC5F4();

  }
  else
  {
    (*(void (**)(char *, _QWORD, uint64_t))(v4 + 104))(v9, *MEMORY[0x1E0CEFDE0], v3);
    sub_1D26CC5F4();
  }
}

uint64_t sub_1D25CCAE8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  void *v7;
  id v8;
  id v9;
  char v10;
  id v11;
  uint64_t v12;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor;
  v7 = *(void **)(v2 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor);
  if (!v7)
  {
    if (a1)
    {
      v7 = 0;
      goto LABEL_7;
    }
    goto LABEL_8;
  }
  if (a1)
  {
    sub_1D25CCBDC();
    v8 = v7;
    v9 = a1;
    v10 = sub_1D26CDECC();

    if ((v10 & 1) == 0)
    {
      v7 = *(void **)(v2 + v6);
      goto LABEL_7;
    }
LABEL_8:
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    return swift_release();
  }
LABEL_7:
  *(_QWORD *)(v2 + v6) = a1;
  v11 = a1;

  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  v12 = swift_retain();
  sub_1D26A5BC8(v12, v2);
  return swift_release();
}

unint64_t sub_1D25CCBDC()
{
  unint64_t result;

  result = qword_1ED96D9A0;
  if (!qword_1ED96D9A0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96D9A0);
  }
  return result;
}

uint64_t sub_1D25CCC18()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D25CCC3C()
{
  return sub_1D25CC73C();
}

uint64_t sub_1D25CCC44()
{
  swift_release();
  return swift_deallocObject();
}

unint64_t sub_1D25CCC68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96B228;
  if (!qword_1ED96B228)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B230);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96B228);
  }
  return result;
}

uint64_t sub_1D25CCCB8()
{
  return 0;
}

uint64_t TimelineServicing.widgetEntry(for:)()
{
  return 0;
}

uint64_t dispatch thunk of TimelineViewProviding.viewModel(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of TimelineReloadPublishing.reloadPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of TimelineReloading.reloadWidget(_:budgeted:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t dispatch thunk of TimelineReloadVisibilityAssertionProviding.acquireReloadWhenVisibleAssertion(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of TimelineServicing.isFailed(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of TimelineServicing.reloadWidgets(inExtensionBundleIdentifier:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 88))();
}

uint64_t dispatch thunk of TimelineServicing.reloadWidgets(with:reason:allowCostOverride:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 96))();
}

uint64_t dispatch thunk of TimelineServicing.reloadWidget(_:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 112))();
}

uint64_t dispatch thunk of TimelineServicing.pauseWidgetReload(key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 120))();
}

uint64_t dispatch thunk of TimelineServicing.resumeWidgetReload(key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of TimelineServicing.contentStaleDate(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 136))();
}

uint64_t dispatch thunk of TimelineServicing.prewarm(for:reason:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 144))();
}

uint64_t dispatch thunk of TimelineServicing.widgetEntry(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

uint64_t dispatch thunk of TimelineServicing.clearEnvironmentMismatchLoopIfNecessary(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 160))();
}

uint64_t dispatch thunk of TimelineServicing.widgetTimelines.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 168))();
}

uint64_t dispatch thunk of TimelineServicing.remoteWidgets.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 176))();
}

uint64_t sub_1D25CCD54()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
}

uint64_t sub_1D25CCD6C(uint64_t result, char a2)
{
  uint64_t v2;
  uint64_t v3;

  v3 = v2 + *(_QWORD *)(*(_QWORD *)v2 + 176);
  *(_QWORD *)v3 = result;
  *(_BYTE *)(v3 + 8) = a2 & 1;
  return result;
}

uint64_t sub_1D25CCD88()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 200));
  swift_retain();
  os_unfair_lock_lock(v1 + 4);
  sub_1D25CE148(&v4);
  v2 = v4;
  os_unfair_lock_unlock(v1 + 4);
  swift_release();
  return v2;
}

uint64_t sub_1D25CCDF4(uint64_t a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 200));
  swift_retain();
  os_unfair_lock_lock(v3 + 4);
  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 216)) = a1;
  swift_retain();
  swift_release();
  os_unfair_lock_unlock(v3 + 4);
  swift_release();
  return swift_release();
}

uint64_t sub_1D25CCE74()
{
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE3A0();
  return 0;
}

uint64_t sub_1D25CCF30()
{
  _QWORD v1[2];

  sub_1D26CE0A0();
  swift_bridgeObjectRelease();
  strcpy((char *)v1, "identifier: ");
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D25CD300();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  ReloadConfiguration.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v1[0];
}

uint64_t sub_1D25CD09C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  void *v11;
  id v12;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;

  v1 = sub_1D26CB9DC();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = 91;
  v17 = 0xE100000000000000;
  v15 = *(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v8 = v0 + *(_QWORD *)(*(_QWORD *)v0 + 168);
  v9 = *(_QWORD *)(v8 + *(int *)(type metadata accessor for ReloadConfiguration(0) + 24));
  v15 = v9;
  sub_1D2534610(v9);
  ReloadConfiguration.ReloadReason.description.getter();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D2534224(v9);
  sub_1D26CDA04();
  sub_1D25CD3A0(v8, (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    if (qword_1ED96C7C0 != -1)
      swift_once();
    v10 = (id)qword_1ED96C848;
    v11 = (void *)sub_1D26CB940();
    v12 = objc_msgSend(v10, sel_stringFromDate_, v11);

    sub_1D26CD938();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return v16;
}

uint64_t sub_1D25CD300()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t result;
  uint64_t v9;

  v1 = v0;
  v2 = sub_1D26CD0F8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CD0E0();
  v6 = sub_1D26CD0D4();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  v7 = *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 184));
  result = v6 - v7;
  if (v6 < v7)
    __break(1u);
  return result;
}

uint64_t sub_1D25CD3A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25CD3E4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v3;

  v3 = (_QWORD *)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 208));
  *v3 = a1;
  v3[1] = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25CD400(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 216)) = a1;
  return swift_release();
}

uint64_t ReloadTask.__allocating_init(identifier:key:variantKeys:configuration:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  ReloadTask.init(identifier:key:variantKeys:configuration:logger:)(a1, a2, a3, a4, a5);
  return v10;
}

char *ReloadTask.init(identifier:key:variantKeys:configuration:logger:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  char *v5;
  char *v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  char *v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;

  v6 = v5;
  v24 = a4;
  v25 = a5;
  v10 = *(_QWORD *)v5;
  v11 = sub_1D26CD0F8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = &v6[*(_QWORD *)(v10 + 176)];
  *(_QWORD *)v15 = 0;
  v15[8] = 1;
  v16 = *(_QWORD *)(*(_QWORD *)v6 + 184);
  sub_1D26CD0E0();
  v17 = sub_1D26CD0D4();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  *(_QWORD *)&v6[v16] = v17;
  v18 = *(_QWORD *)(*(_QWORD *)v6 + 200);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963938);
  v19 = swift_allocObject();
  *(_DWORD *)(v19 + 16) = 0;
  *(_QWORD *)&v6[v18] = v19;
  v20 = &v6[*(_QWORD *)(*(_QWORD *)v6 + 208)];
  *(_QWORD *)v20 = 0;
  *((_QWORD *)v20 + 1) = 0;
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 216)] = 0;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v10 + 80) - 8) + 32))(&v6[*(_QWORD *)(*(_QWORD *)v6 + 144)], a2);
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 152)] = a3;
  *(_QWORD *)&v6[*(_QWORD *)(*(_QWORD *)v6 + 160)] = a1;
  sub_1D25341AC(v24, (uint64_t)&v6[*(_QWORD *)(*(_QWORD *)v6 + 168)]);
  v21 = &v6[*(_QWORD *)(*(_QWORD *)v6 + 192)];
  v22 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 32))(v21, v25, v22);
  return v6;
}

uint64_t static ReloadTask.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  if ((sub_1D26CD908() & 1) != 0
    && (sub_1D26CDC14() & 1) != 0
    && *(_QWORD *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 160)) == *(_QWORD *)(a2 + *(_QWORD *)(*(_QWORD *)a2 + 160)))
  {
    return _s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(a1 + *(_QWORD *)(*(_QWORD *)a1 + 168), a2 + *(_QWORD *)(*(_QWORD *)a2 + 168));
  }
  else
  {
    return 0;
  }
}

void sub_1D25CD6DC(uint64_t a1, void (*a2)(_QWORD, _QWORD), NSObject *a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint64_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  void *v33;
  os_log_type_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;
  void (*v41)(_QWORD, _QWORD);
  NSObject *v42;
  uint64_t v43;
  uint64_t v44;

  v6 = *v3;
  v7 = sub_1D26CD3BC();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D25CCD88();
  v12 = v11;
  swift_bridgeObjectRelease();
  if (v12)
  {
    swift_retain_n();
    v13 = sub_1D26CC084();
    v14 = sub_1D26CDD04();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = swift_slowAlloc();
      v42 = a3;
      v16 = (uint8_t *)v15;
      v17 = swift_slowAlloc();
      v41 = a2;
      v18 = v17;
      v44 = v17;
      v40 = v7;
      *(_DWORD *)v16 = 136446210;
      v19 = sub_1D25CCE74();
      v43 = sub_1D2537880(v19, v20, &v44);
      v7 = v40;
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v13, v14, "%{public}s Cancelled before being scheduled", v16, 0xCu);
      swift_arrayDestroy();
      v21 = v18;
      a2 = v41;
      MEMORY[0x1D823A5E0](v21, -1, -1);
      MEMORY[0x1D823A5E0](v16, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    sub_1D25CE0C4();
    (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0CF00B8], v7);
    v33 = (void *)sub_1D26CDEA8();
    a2(v33, 1);

  }
  else
  {
    v22 = swift_allocObject();
    *(_QWORD *)(v22 + 16) = *(_QWORD *)(v6 + 80);
    *(_QWORD *)(v22 + 24) = *(_QWORD *)(v6 + 88);
    *(_OWORD *)(v22 + 32) = *(_OWORD *)(v6 + 96);
    *(_QWORD *)(v22 + 48) = *(_QWORD *)(v6 + 112);
    *(_OWORD *)(v22 + 56) = *(_OWORD *)(v6 + 120);
    *(_QWORD *)(v22 + 72) = *(_QWORD *)(v6 + 136);
    *(_QWORD *)(v22 + 80) = a2;
    *(_QWORD *)(v22 + 88) = a3;
    swift_retain();
    v23 = sub_1D264E68C();
    swift_release();
    if (v23)
    {
      v24 = swift_retain_n();
      sub_1D25CCDF4(v24);
      swift_retain_n();
      swift_retain_n();
      v25 = sub_1D26CC084();
      v26 = sub_1D26CDD04();
      if (os_log_type_enabled(v25, v26))
      {
        v27 = swift_slowAlloc();
        v28 = swift_slowAlloc();
        v44 = v28;
        *(_DWORD *)v27 = 136446466;
        v29 = sub_1D25CCE74();
        v43 = sub_1D2537880(v29, v30, &v44);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2082;
        v31 = sub_1D264E708();
        v43 = sub_1D2537880(v31, v32, &v44);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v25, v26, "%{public}s Scheduled with cancellable token: [%{public}s]", (uint8_t *)v27, 0x16u);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v28, -1, -1);
        MEMORY[0x1D823A5E0](v27, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      swift_release_n();
    }
    else
    {
      sub_1D25CCDF4(0);
      swift_retain_n();
      v42 = sub_1D26CC084();
      v34 = sub_1D26CDD04();
      if (os_log_type_enabled(v42, v34))
      {
        v35 = (uint8_t *)swift_slowAlloc();
        v36 = swift_slowAlloc();
        v44 = v36;
        *(_DWORD *)v35 = 136446210;
        v37 = sub_1D25CCE74();
        v43 = sub_1D2537880(v37, v38, &v44);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v42, v34, "%{public}s Scheduled with no cancellable token.", v35, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v36, -1, -1);
        MEMORY[0x1D823A5E0](v35, -1, -1);
      }
      else
      {
        swift_release_n();
      }

    }
  }
}

uint64_t sub_1D25CDCC4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  v2 = v1 + *(_QWORD *)(*(_QWORD *)v1 + 176);
  *(_QWORD *)v2 = a1;
  *(_BYTE *)(v2 + 8) = 0;
  return sub_1D25CDCF8(0x6D6563616C706572, 0xEB00000000746E65);
}

uint64_t sub_1D25CDCF8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;

  v5 = *(os_unfair_lock_s **)(v2 + *(_QWORD *)(*(_QWORD *)v2 + 200));
  swift_retain();
  os_unfair_lock_lock(v5 + 4);
  sub_1D25CDD70(v2, a1, a2);
  os_unfair_lock_unlock(v5 + 4);
  return swift_release();
}

uint64_t sub_1D25CDD70(uint64_t result, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = (_QWORD *)(result + *(_QWORD *)(*(_QWORD *)result + 208));
  if (!v3[1])
  {
    v4 = result;
    *v3 = a2;
    v3[1] = a3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v5 = *(_QWORD *)(*(_QWORD *)v4 + 216);
    v6 = *(_QWORD *)(v4 + v5);
    if (v6)
    {
      __swift_project_boxed_opaque_existential_0((_QWORD *)(v6 + 16), *(_QWORD *)(v6 + 40));
      swift_retain();
      sub_1D26CC0E4();
      swift_release();
      v5 = *(_QWORD *)(*(_QWORD *)v4 + 216);
    }
    *(_QWORD *)(v4 + v5) = 0;
    return swift_release();
  }
  return result;
}

uint64_t *ReloadTask.deinit()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = *v0;
  sub_1D25CDCF8(0x74696E696564, 0xE600000000000000);
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 144));
  swift_bridgeObjectRelease();
  sub_1D25CDF64((uint64_t)v0 + *(_QWORD *)(*v0 + 168));
  v2 = (uint64_t)v0 + *(_QWORD *)(*v0 + 192);
  v3 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return v0;
}

uint64_t ReloadTask.__deallocating_deinit()
{
  ReloadTask.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25CDF18(uint64_t *a1, uint64_t *a2)
{
  return static ReloadTask.== infix(_:_:)(*a1, *a2);
}

uint64_t sub_1D25CDF24()
{
  return sub_1D25CCF30();
}

uint64_t sub_1D25CDF44()
{
  return sub_1D25CD09C();
}

uint64_t sub_1D25CDF64(uint64_t a1)
{
  uint64_t v2;

  v2 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D25CDFA0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ReloadConfiguration(319);
    if (v2 <= 0x3F)
    {
      result = sub_1D26CC09C();
      if (v3 <= 0x3F)
        return swift_initClassMetadata2();
    }
  }
  return result;
}

void type metadata accessor for ReloadTask()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for ReloadTask()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReloadTask.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 304))();
}

uint64_t dispatch thunk of ReloadTask.debugDescription.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 312))();
}

uint64_t dispatch thunk of ReloadTask.__allocating_init(identifier:key:variantKeys:configuration:logger:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 400))();
}

unint64_t sub_1D25CE0C4()
{
  unint64_t result;

  result = qword_1ED962310;
  if (!qword_1ED962310)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED962310);
  }
  return result;
}

uint64_t sub_1D25CE100()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25CE124(uint64_t a1, char a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, _QWORD))(v2 + 80))(a1, a2 & 1);
}

uint64_t sub_1D25CE148@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  v2 = (_QWORD *)(v1 + *(_QWORD *)(*(_QWORD *)v1 + 208));
  v3 = v2[1];
  *a1 = *v2;
  a1[1] = v3;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25CE160()
{
  char *v0;
  uint64_t result;
  void *v2;
  uint64_t v3;
  char v4;
  void *v5;
  id v6;
  id v7;
  uint64_t v8;
  void *v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  __int128 v15;
  uint64_t v16;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0F0);
  result = swift_initStackObject();
  *(_OWORD *)(result + 16) = xmmword_1D26D5640;
  v2 = (void *)*MEMORY[0x1E0CD29D0];
  if (!*MEMORY[0x1E0CD29D0])
  {
    __break(1u);
    goto LABEL_9;
  }
  v3 = result;
  *(_QWORD *)(result + 32) = v2;
  v4 = *v0;
  *(_QWORD *)(result + 64) = MEMORY[0x1E0DEAFA0];
  *(_BYTE *)(result + 40) = v4;
  v5 = (void *)*MEMORY[0x1E0CD29C0];
  if (!*MEMORY[0x1E0CD29C0])
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  *(_QWORD *)(result + 72) = v5;
  type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v6 = v2;
  v7 = v5;
  result = sub_1D26CBBE0();
  *(_QWORD *)(v3 + 104) = MEMORY[0x1E0DEA968];
  *(_QWORD *)(v3 + 80) = result;
  *(_QWORD *)(v3 + 88) = v8;
  v9 = (void *)*MEMORY[0x1E0CD29C8];
  if (!*MEMORY[0x1E0CD29C8])
  {
LABEL_10:
    __break(1u);
    return result;
  }
  *(_QWORD *)(v3 + 112) = v9;
  v10 = v9;
  v11 = sub_1D26CBBBC();
  if (v11)
  {
    v12 = v11;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82CF8);
    *(_QWORD *)&v15 = v12;
    sub_1D2538448(&v15, (_OWORD *)(v3 + 120));
  }
  else
  {
    v13 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99E38]), sel_init);
    *(_QWORD *)(v3 + 144) = sub_1D25B2BA8();
    *(_QWORD *)(v3 + 120) = v13;
  }
  sub_1D253DC40(v3);
  type metadata accessor for CFString(0);
  sub_1D25CEF28();
  v14 = sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  return v14;
}

void sub_1D25CE2E0(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  sub_1D25CEDF8(a1, a2, a4);
}

uint64_t sub_1D25CE2EC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  void *v5;
  void *v6;
  id v7;

  v5 = (void *)objc_opt_self();
  objc_msgSend(v5, sel_begin);
  objc_msgSend(v5, sel_activateBackground_, 1);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C358);
  sub_1D26CB868();
  v6 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  objc_msgSend(v6, sel_fileSystemRepresentation);
  v7 = v6;
  CAEncodeLayerTreeToFile();
  objc_msgSend(v5, sel_commit);
  return a4(0);
}

_QWORD *initializeBufferWithCopyOfBuffer for CAMLSnapshotter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  _QWORD *v3;
  int v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  void (*v14)(char *, char *, uint64_t);
  uint64_t v15;

  v3 = a1;
  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    v15 = *a2;
    *v3 = *a2;
    v3 = (_QWORD *)(v15 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    v5 = a2[1];
    *a1 = *a2;
    a1[1] = v5;
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
    v9 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
    v10 = *(int *)(v9 + 20);
    v11 = &v7[v10];
    v12 = &v8[v10];
    v13 = sub_1D26CBBEC();
    v14 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 16);
    swift_bridgeObjectRetain();
    v14(v11, v12, v13);
    *(_QWORD *)&v7[*(int *)(v9 + 24)] = *(_QWORD *)&v8[*(int *)(v9 + 24)];
    swift_bridgeObjectRetain();
  }
  return v3;
}

uint64_t type metadata accessor for CAMLSnapshotter.CAMLOptions(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96CEA0);
}

uint64_t destroy for CAMLSnapshotter(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  swift_bridgeObjectRelease();
  v4 = a1 + *(int *)(a2 + 20);
  v5 = v4 + *(int *)(type metadata accessor for CAMLSnapshotter.CAMLOptions(0) + 20);
  v6 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);
  return swift_bridgeObjectRelease();
}

_QWORD *initializeWithCopy for CAMLSnapshotter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, char *, uint64_t);

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  *((_BYTE *)a1 + v5) = *((_BYTE *)a2 + v5);
  v8 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v9 = *(int *)(v8 + 20);
  v10 = &v6[v9];
  v11 = &v7[v9];
  v12 = sub_1D26CBBEC();
  v13 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  swift_bridgeObjectRetain();
  v13(v10, v11, v12);
  *(_QWORD *)&v6[*(int *)(v8 + 24)] = *(_QWORD *)&v7[*(int *)(v8 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for CAMLSnapshotter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v6 = *(int *)(a3 + 20);
  v7 = (char *)a1 + v6;
  v8 = (char *)a2 + v6;
  *((_BYTE *)a1 + v6) = *((_BYTE *)a2 + v6);
  v9 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v10 = *(int *)(v9 + 20);
  v11 = &v7[v10];
  v12 = &v8[v10];
  v13 = sub_1D26CBBEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v13 - 8) + 24))(v11, v12, v13);
  *(_QWORD *)&v7[*(int *)(v9 + 24)] = *(_QWORD *)&v8[*(int *)(v9 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *initializeWithTake for CAMLSnapshotter(_OWORD *a1, _OWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  *((_BYTE *)a1 + v4) = *((_BYTE *)a2 + v4);
  v7 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v8 = *(int *)(v7 + 20);
  v9 = &v5[v8];
  v10 = &v6[v8];
  v11 = sub_1D26CBBEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 32))(v9, v10, v11);
  *(_QWORD *)&v5[*(int *)(v7 + 24)] = *(_QWORD *)&v6[*(int *)(v7 + 24)];
  return a1;
}

_QWORD *assignWithTake for CAMLSnapshotter(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;

  v6 = a2[1];
  *a1 = *a2;
  a1[1] = v6;
  swift_bridgeObjectRelease();
  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  *((_BYTE *)a1 + v7) = *((_BYTE *)a2 + v7);
  v10 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
  v11 = *(int *)(v10 + 20);
  v12 = &v8[v11];
  v13 = &v9[v11];
  v14 = sub_1D26CBBEC();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(v12, v13, v14);
  *(_QWORD *)&v8[*(int *)(v10 + 24)] = *(_QWORD *)&v9[*(int *)(v10 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CAMLSnapshotter()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25CE7D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  unint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)(a1 + 8);
    if (v4 >= 0xFFFFFFFF)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(a1 + *(int *)(a3 + 20), a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for CAMLSnapshotter()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25CE860(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)(result + 8) = (a2 - 1);
  }
  else
  {
    v7 = type metadata accessor for CAMLSnapshotter.CAMLOptions(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(v5 + *(int *)(a4 + 20), a2, a2, v7);
  }
  return result;
}

uint64_t type metadata accessor for CAMLSnapshotter(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96CEB0);
}

uint64_t sub_1D25CE8E8()
{
  uint64_t result;
  unint64_t v1;

  result = type metadata accessor for CAMLSnapshotter.CAMLOptions(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *initializeBufferWithCopyOfBuffer for CAMLSnapshotter.CAMLOptions(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  int v5;
  uint64_t v7;
  _BYTE *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    *(_BYTE *)a1 = *(_BYTE *)a2;
    v7 = *(int *)(a3 + 20);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D26CBBEC();
    (*(void (**)(_BYTE *, char *, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
    *(uint64_t *)((char *)v4 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
  }
  return v4;
}

uint64_t destroy for CAMLSnapshotter.CAMLOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = a1 + *(int *)(a2 + 20);
  v3 = sub_1D26CBBEC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 8))(v2, v3);
  return swift_bridgeObjectRelease();
}

_BYTE *initializeWithCopy for CAMLSnapshotter.CAMLOptions(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D26CBBEC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  return a1;
}

_BYTE *assignWithCopy for CAMLSnapshotter.CAMLOptions(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D26CBBEC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 24))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_BYTE *initializeWithTake for CAMLSnapshotter.CAMLOptions(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D26CBBEC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  return a1;
}

_BYTE *assignWithTake for CAMLSnapshotter.CAMLOptions(_BYTE *a1, _BYTE *a2, uint64_t a3)
{
  uint64_t v6;
  _BYTE *v7;
  _BYTE *v8;
  uint64_t v9;

  *a1 = *a2;
  v6 = *(int *)(a3 + 20);
  v7 = &a1[v6];
  v8 = &a2[v6];
  v9 = sub_1D26CBBEC();
  (*(void (**)(_BYTE *, _BYTE *, uint64_t))(*(_QWORD *)(v9 - 8) + 40))(v7, v8, v9);
  *(_QWORD *)&a1[*(int *)(a3 + 24)] = *(_QWORD *)&a2[*(int *)(a3 + 24)];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CAMLSnapshotter.CAMLOptions()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25CEC60(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = sub_1D26CBBEC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1 + *(int *)(a3 + 20), a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t storeEnumTagSinglePayload for CAMLSnapshotter.CAMLOptions()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25CECEC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D26CBBEC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1 + *(int *)(a4 + 20), a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1D25CED68()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CBBEC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for CAARSnapshotter()
{
  return &type metadata for CAARSnapshotter;
}

void sub_1D25CEDF8(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  void *v4;
  void *v5;
  int v6;
  void *v7;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C358);
  sub_1D26CB868();
  v4 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  type metadata accessor for CAMLSnapshotter(0);
  v5 = (void *)sub_1D25CE160();
  v6 = CAMLEncodeLayerTreeToPathWithOptions();

  if (v6)
  {
    ((void (*)(_QWORD))a3)(0);
  }
  else
  {
    sub_1D25CEEE4();
    v7 = (void *)swift_allocError();
    a3();

  }
}

unint64_t sub_1D25CEEE4()
{
  unint64_t result;

  result = qword_1EFC82CF0;
  if (!qword_1EFC82CF0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D57A0, &type metadata for CAMLSnapshotter.Error);
    atomic_store(result, (unint64_t *)&qword_1EFC82CF0);
  }
  return result;
}

unint64_t sub_1D25CEF28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96EE38;
  if (!qword_1ED96EE38)
  {
    type metadata accessor for CFString(255);
    result = MEMORY[0x1D823A4E4](&unk_1D26D0124, v1);
    atomic_store(result, (unint64_t *)&qword_1ED96EE38);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for CAMLSnapshotter.Error(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D25CEFB0 + 4 * byte_1D26D5650[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D25CEFD0 + 4 * byte_1D26D5655[v4]))();
}

_BYTE *sub_1D25CEFB0(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D25CEFD0(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D25CEFD8(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D25CEFE0(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D25CEFE8(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D25CEFF0(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for CAMLSnapshotter.Error()
{
  return &type metadata for CAMLSnapshotter.Error;
}

unint64_t sub_1D25CF014()
{
  unint64_t result;

  result = qword_1EFC82D00;
  if (!qword_1EFC82D00)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D5778, &type metadata for CAMLSnapshotter.Error);
    atomic_store(result, (unint64_t *)&qword_1EFC82D00);
  }
  return result;
}

uint64_t dispatch thunk of CacheURLProviding.urls(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of CacheURLProviding.url(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

BOOL static Budget.Level.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

uint64_t Budget.Level.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t Budget.Level.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t Budget.startDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CB9DC();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t Budget.remainingBudget.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + *(int *)(type metadata accessor for Budget() + 20));
}

uint64_t Budget.level.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for Budget();
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 24));
  return result;
}

uint64_t Budget.level.setter(char *a1)
{
  uint64_t v1;
  char v2;

  v2 = *a1;
  *(_BYTE *)(v1 + *(int *)(type metadata accessor for Budget() + 24)) = v2;
  return sub_1D25CF1A4();
}

uint64_t sub_1D25CF1A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = type metadata accessor for Budget();
  v7 = v6;
  v8 = *(_QWORD *)(v0 + *(int *)(v6 + 32));
  if (v8 && *(_QWORD *)(v8 + 16) && (v9 = sub_1D2589198(*(_BYTE *)(v1 + *(int *)(v6 + 24))), (v10 & 1) != 0))
  {
    v11 = *(_QWORD *)(*(_QWORD *)(v8 + 56) + 8 * v9);
  }
  else
  {
    v11 = 40;
    if (*(_BYTE *)(v1 + *(int *)(v7 + 24)))
      v11 = 10;
  }
  *(_QWORD *)(v1 + *(int *)(v7 + 20)) = v11;
  sub_1D26CB910();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v3 + 40))(v1, v5, v2);
}

uint64_t Budget.maximumBudgetPerWindow.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v1 = v0;
  v2 = type metadata accessor for Budget();
  v3 = v2;
  v4 = *(_QWORD *)(v0 + *(int *)(v2 + 32));
  if (v4)
  {
    if (*(_QWORD *)(v4 + 16))
    {
      v5 = sub_1D2589198(*(_BYTE *)(v1 + *(int *)(v2 + 24)));
      if ((v6 & 1) != 0)
        return *(_QWORD *)(*(_QWORD *)(v4 + 56) + 8 * v5);
    }
  }
  if (*(_BYTE *)(v1 + *(int *)(v3 + 24)))
    return 10;
  return 40;
}

void (*Budget.level.modify(_QWORD *a1))(void **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  *v3 = v1;
  v4 = sub_1D26CB9DC();
  v3[1] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[2] = v5;
  v3[3] = malloc(*(_QWORD *)(v5 + 64));
  v6 = type metadata accessor for Budget();
  v3[4] = v6;
  *((_DWORD *)v3 + 10) = *(_DWORD *)(v6 + 24);
  return sub_1D25CF374;
}

void sub_1D25CF374(void **a1, char a2)
{
  uint64_t *v2;
  void *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v2 = (uint64_t *)*a1;
  if ((a2 & 1) == 0)
  {
    v4 = *v2;
    v5 = *(_QWORD *)(*v2 + *(int *)(v2[4] + 32));
    if (v5 && *(_QWORD *)(v5 + 16))
    {
      v6 = sub_1D2589198(*(_BYTE *)(v4 + *((int *)v2 + 10)));
      if ((v7 & 1) != 0)
      {
        v8 = *(_QWORD *)(*(_QWORD *)(v5 + 56) + 8 * v6);
        v4 = *v2;
LABEL_10:
        v3 = (void *)v2[3];
        v9 = v2[1];
        v10 = v2[2];
        *(_QWORD *)(v4 + *(int *)(v2[4] + 20)) = v8;
        sub_1D26CB910();
        (*(void (**)(uint64_t, void *, uint64_t))(v10 + 40))(v4, v3, v9);
        goto LABEL_11;
      }
      v4 = *v2;
    }
    v8 = 40;
    if (*(_BYTE *)(v4 + *((int *)v2 + 10)))
      v8 = 10;
    goto LABEL_10;
  }
  v3 = (void *)v2[3];
LABEL_11:
  free(v3);
  free(v2);
}

uint64_t Budget.isExhausted.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  int *v12;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;

  v1 = v0;
  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v19 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = (int *)type metadata accessor for Budget();
  if (*(uint64_t *)(v0 + v12[5]) >= 1)
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, 1, 1, v2);
LABEL_10:
    v17 = 0;
    goto LABEL_11;
  }
  v13 = *(_QWORD *)(v0 + v12[7]);
  if (v13 && *(_QWORD *)(v13 + 16))
    sub_1D2589198(*(_BYTE *)(v1 + v12[6]));
  sub_1D26CB964();
  sub_1D26CB9B8();
  v14 = sub_1D26CB94C();
  v15 = *(void (**)(char *, uint64_t))(v3 + 8);
  v15(v6, v2);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v8, v2);
    v16 = 0;
  }
  else
  {
    v15(v8, v2);
    v16 = 1;
  }
  v17 = 1;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v11, v16, 1, v2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v11, 1, v2) == 1)
    goto LABEL_10;
LABEL_11:
  sub_1D25D014C((uint64_t)v11);
  return v17;
}

uint64_t Budget.nextResetDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  int *v11;
  uint64_t v13;
  char v14;
  void (*v15)(char *, uint64_t);
  uint64_t v16;

  v2 = v1;
  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v16 - v9;
  v11 = (int *)type metadata accessor for Budget();
  if (*(uint64_t *)(v1 + v11[5]) > 0)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
  v13 = *(_QWORD *)(v1 + v11[7]);
  if (v13 && *(_QWORD *)(v13 + 16))
    sub_1D2589198(*(_BYTE *)(v2 + v11[6]));
  sub_1D26CB964();
  sub_1D26CB9B8();
  v14 = sub_1D26CB94C();
  v15 = *(void (**)(char *, uint64_t))(v5 + 8);
  v15(v8, v4);
  if ((v14 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a1, 0, 1, v4);
  }
  else
  {
    v15(v10, v4);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(a1, 1, 1, v4);
  }
}

int *Budget.init()@<X0>(uint64_t a1@<X8>)
{
  int *result;
  uint64_t v3;

  sub_1D26CB910();
  result = (int *)type metadata accessor for Budget();
  v3 = result[5];
  *(_QWORD *)(a1 + v3) = 0;
  *(_BYTE *)(a1 + result[6]) = 1;
  *(_QWORD *)(a1 + result[7]) = 0;
  *(_QWORD *)(a1 + result[8]) = 0;
  *(_QWORD *)(a1 + v3) = 10;
  return result;
}

int *Budget.init(level:)@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  int v3;
  int *result;
  uint64_t v5;
  uint64_t v6;

  v3 = *a1;
  sub_1D26CB910();
  result = (int *)type metadata accessor for Budget();
  v5 = result[5];
  *(_QWORD *)(a2 + v5) = 0;
  *(_BYTE *)(a2 + result[6]) = v3;
  *(_QWORD *)(a2 + result[7]) = 0;
  *(_QWORD *)(a2 + result[8]) = 0;
  v6 = 40;
  if (v3)
    v6 = 10;
  *(_QWORD *)(a2 + v5) = v6;
  return result;
}

uint64_t Budget.init(startDate:remainingBudget:level:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X8>)
{
  char v7;
  int *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;

  v7 = *a3;
  sub_1D26CB910();
  v8 = (int *)type metadata accessor for Budget();
  v9 = v8[5];
  *(_QWORD *)(a4 + v9) = 0;
  v10 = sub_1D26CB9DC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(a4, a1, v10);
  *(_QWORD *)(a4 + v9) = a2;
  *(_BYTE *)(a4 + v8[6]) = v7;
  *(_QWORD *)(a4 + v8[7]) = 0;
  *(_QWORD *)(a4 + v8[8]) = 0;
  return result;
}

uint64_t Budget.init(startDate:remainingBudget:windowDuration:level:maximumBudgetPerWindow:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v11;
  int *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t result;

  v11 = *a4;
  sub_1D26CB910();
  v12 = (int *)type metadata accessor for Budget();
  v13 = v12[5];
  *(_QWORD *)(a6 + v13) = 0;
  v14 = sub_1D26CB9DC();
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 40))(a6, a1, v14);
  *(_QWORD *)(a6 + v13) = a2;
  *(_QWORD *)(a6 + v12[7]) = a3;
  *(_QWORD *)(a6 + v12[8]) = a5;
  *(_BYTE *)(a6 + v12[6]) = v11;
  return result;
}

Swift::Void __swiftcall Budget.reduceBudget()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  BOOL v3;
  uint64_t v4;

  Budget.resetIfNecessary()();
  v1 = *(int *)(type metadata accessor for Budget() + 20);
  v2 = *(_QWORD *)(v0 + v1);
  v3 = __OFSUB__(v2, 1);
  v4 = v2 - 1;
  if (v3)
    __break(1u);
  else
    *(_QWORD *)(v0 + v1) = v4;
}

Swift::Void __swiftcall Budget.resetIfNecessary()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  int *v13;
  uint64_t v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t v17;
  unint64_t v18;
  char v19;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1D26CB9DC();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v21 - v8;
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v21 - v10;
  sub_1D26CB9B8();
  if ((sub_1D26CB94C() & 1) != 0)
  {
    sub_1D26CB910();
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 40))(v1, v9, v2);
  }
  v12 = type metadata accessor for Budget();
  v13 = (int *)v12;
  v14 = *(_QWORD *)(v1 + *(int *)(v12 + 28));
  if (v14 && *(_QWORD *)(v14 + 16))
    sub_1D2589198(*(_BYTE *)(v1 + *(int *)(v12 + 24)));
  sub_1D26CB964();
  v15 = sub_1D26CB958();
  v16 = *(void (**)(char *, uint64_t))(v3 + 8);
  v16(v6, v2);
  if ((v15 & 1) != 0)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 24))(v1, v11, v2);
    v17 = *(_QWORD *)(v1 + v13[8]);
    if (v17 && *(_QWORD *)(v17 + 16) && (v18 = sub_1D2589198(*(_BYTE *)(v1 + v13[6])), (v19 & 1) != 0))
    {
      v20 = *(_QWORD *)(*(_QWORD *)(v17 + 56) + 8 * v18);
    }
    else if (*(_BYTE *)(v1 + v13[6]))
    {
      v20 = 10;
    }
    else
    {
      v20 = 40;
    }
    v16(v11, v2);
    *(_QWORD *)(v1 + v13[5]) = v20;
  }
  else
  {
    v16(v11, v2);
  }
}

uint64_t Budget.hash(into:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  sub_1D26CB9DC();
  sub_1D25369B0(&qword_1ED96C8C0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08A8]);
  sub_1D26CD8D8();
  v3 = type metadata accessor for Budget();
  sub_1D26CE46C();
  sub_1D26CE46C();
  v4 = *(_QWORD *)(v1 + *(int *)(v3 + 28));
  sub_1D26CE478();
  if (v4)
  {
    swift_bridgeObjectRetain();
    sub_1D25CFEE0(a1, v4);
    swift_bridgeObjectRelease();
  }
  v5 = *(_QWORD *)(v1 + *(int *)(v3 + 32));
  if (!v5)
    return sub_1D26CE478();
  sub_1D26CE478();
  swift_bridgeObjectRetain();
  sub_1D25CFD6C(a1, v5);
  return swift_bridgeObjectRelease();
}

uint64_t Budget.hashValue.getter()
{
  _BYTE v1[72];

  sub_1D26CE460();
  Budget.hash(into:)((uint64_t)v1);
  return sub_1D26CE49C();
}

uint64_t sub_1D25CFCF4()
{
  _BYTE v1[72];

  sub_1D26CE460();
  Budget.hash(into:)((uint64_t)v1);
  return sub_1D26CE49C();
}

uint64_t sub_1D25CFD34()
{
  _BYTE v1[72];

  sub_1D26CE460();
  Budget.hash(into:)((uint64_t)v1);
  return sub_1D26CE49C();
}

uint64_t sub_1D25CFD6C(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = 0;
  v3 = 0;
  v4 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v8)
      return sub_1D26CE46C();
    v11 = *(_QWORD *)(v4 + 8 * v10);
    ++v3;
    if (!v11)
    {
      v3 = v10 + 1;
      if (v10 + 1 >= v8)
        return sub_1D26CE46C();
      v11 = *(_QWORD *)(v4 + 8 * v3);
      if (!v11)
        break;
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
LABEL_5:
    sub_1D26CE46C();
    sub_1D26CE46C();
    result = sub_1D26CE49C();
    v2 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v8)
    return sub_1D26CE46C();
  v11 = *(_QWORD *)(v4 + 8 * v12);
  if (v11)
  {
    v3 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v8)
      return sub_1D26CE46C();
    v11 = *(_QWORD *)(v4 + 8 * v3);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

uint64_t sub_1D25CFEE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t result;
  int64_t v10;
  uint64_t v11;
  int64_t v12;

  v2 = 0;
  v3 = 0;
  v4 = a2 + 64;
  v5 = 1 << *(_BYTE *)(a2 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a2 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v7 &= v7 - 1;
      goto LABEL_5;
    }
    v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v10 >= v8)
      return sub_1D26CE46C();
    v11 = *(_QWORD *)(v4 + 8 * v10);
    ++v3;
    if (!v11)
    {
      v3 = v10 + 1;
      if (v10 + 1 >= v8)
        return sub_1D26CE46C();
      v11 = *(_QWORD *)(v4 + 8 * v3);
      if (!v11)
        break;
    }
LABEL_18:
    v7 = (v11 - 1) & v11;
LABEL_5:
    sub_1D26CE46C();
    sub_1D26CE484();
    result = sub_1D26CE49C();
    v2 ^= result;
  }
  v12 = v10 + 2;
  if (v12 >= v8)
    return sub_1D26CE46C();
  v11 = *(_QWORD *)(v4 + 8 * v12);
  if (v11)
  {
    v3 = v12;
    goto LABEL_18;
  }
  while (1)
  {
    v3 = v12 + 1;
    if (__OFADD__(v12, 1))
      break;
    if (v3 >= v8)
      return sub_1D26CE46C();
    v11 = *(_QWORD *)(v4 + 8 * v3);
    ++v12;
    if (v11)
      goto LABEL_18;
  }
LABEL_21:
  __break(1u);
  return result;
}

BOOL _s9ChronoKit6BudgetV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  int *v4;
  int *v5;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  if ((sub_1D26CB9A0() & 1) == 0)
    return 0;
  v4 = (int *)type metadata accessor for Budget();
  if (*(_QWORD *)(a1 + v4[5]) != *(_QWORD *)(a2 + v4[5]))
    return 0;
  v5 = v4;
  if (*(unsigned __int8 *)(a1 + v4[6]) != *(unsigned __int8 *)(a2 + v4[6]))
    return 0;
  v7 = v4[7];
  v8 = *(_QWORD *)(a1 + v7);
  v9 = *(_QWORD *)(a2 + v7);
  if (v8)
  {
    if (!v9 || (sub_1D2583DF8(v8, v9) & 1) == 0)
      return 0;
  }
  else if (v9)
  {
    return 0;
  }
  v10 = v5[8];
  v11 = *(_QWORD *)(a1 + v10);
  v12 = *(_QWORD *)(a2 + v10);
  if (v11)
    return v12 && (sub_1D2583F74(v11, v12) & 1) != 0;
  return !v12;
}

uint64_t type metadata accessor for Budget()
{
  uint64_t result;

  result = qword_1ED9631E8;
  if (!qword_1ED9631E8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D25D014C(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_1D25D0190()
{
  unint64_t result;

  result = qword_1EFC82D08;
  if (!qword_1EFC82D08)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for Budget.Level, &type metadata for Budget.Level);
    atomic_store(result, (unint64_t *)&qword_1EFC82D08);
  }
  return result;
}

uint64_t sub_1D25D01D4()
{
  return sub_1D25369B0((unint64_t *)&unk_1EFC82D10, (uint64_t (*)(uint64_t))type metadata accessor for Budget, (uint64_t)&protocol conformance descriptor for Budget);
}

uint64_t sub_1D25D0200@<X0>(uint64_t a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t result;

  result = type metadata accessor for Budget();
  *a2 = *(_BYTE *)(a1 + *(int *)(result + 24));
  return result;
}

uint64_t sub_1D25D0234(char *a1, uint64_t a2)
{
  char v2;

  v2 = *a1;
  *(_BYTE *)(a2 + *(int *)(type metadata accessor for Budget() + 24)) = v2;
  return sub_1D25CF1A4();
}

_QWORD *initializeBufferWithCopyOfBuffer for Budget(_QWORD *a1, _QWORD *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v10 = *a2;
    *a1 = *a2;
    a1 = (_QWORD *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CB9DC();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[6];
    *(_QWORD *)((char *)a1 + a3[5]) = *(_QWORD *)((char *)a2 + a3[5]);
    *((_BYTE *)a1 + v8) = *((_BYTE *)a2 + v8);
    v9 = a3[8];
    *(_QWORD *)((char *)a1 + a3[7]) = *(_QWORD *)((char *)a2 + a3[7]);
    *(_QWORD *)((char *)a1 + v9) = *(_QWORD *)((char *)a2 + v9);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for Budget(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;

  v6 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + a3[6]) = *(_BYTE *)(a2 + a3[6]);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_QWORD *)(a1 + v8) = *(_QWORD *)(a2 + v8);
  return a1;
}

uint64_t assignWithTake for Budget(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[6];
  *(_QWORD *)(a1 + a3[5]) = *(_QWORD *)(a2 + a3[5]);
  *(_BYTE *)(a1 + v7) = *(_BYTE *)(a2 + v7);
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[8]) = *(_QWORD *)(a2 + a3[8]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Budget()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25D059C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;
  int v10;

  v6 = sub_1D26CB9DC();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 28));
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  v10 = v9 - 1;
  if (v10 < 0)
    v10 = -1;
  return (v10 + 1);
}

uint64_t storeEnumTagSinglePayload for Budget()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25D0630(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = sub_1D26CB9DC();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 28)) = a2;
  return result;
}

uint64_t sub_1D25D06A8()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CB9DC();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for Budget.Level(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D25D0780 + 4 * byte_1D26D5815[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D25D07B4 + 4 * byte_1D26D5810[v4]))();
}

uint64_t sub_1D25D07B4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25D07BC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25D07C4);
  return result;
}

uint64_t sub_1D25D07D0(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25D07D8);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D25D07DC(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25D07E4(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for Budget.Level()
{
  return &type metadata for Budget.Level;
}

uint64_t dispatch thunk of CacheKeyProviding.isSupported(key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 40))();
}

uint64_t dispatch thunk of CacheKeyProviding.baseURL(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of CacheKeyProviding.cacheKey(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of PowerlogViewServicing.userIsViewing(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 16))();
}

uint64_t dispatch thunk of PowerlogViewServicing.incrementTotalFrameRenderTime(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of PowerlogViewServicing.incrementTotalFrameSubmitTime(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of PowerlogViewServicing.incrementTotalFramesSubmitted(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 40))();
}

uint64_t dispatch thunk of PowerlogViewServicing.incrementTotalFramesRendered(_:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 48))();
}

uint64_t dispatch thunk of PowerlogViewServicing.flush()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 56))();
}

void sub_1D25D0848()
{
  off_1ED96C6A8 = (_UNKNOWN *)MEMORY[0x1E0DEE9D8];
}

void static NSRunLoop.performAfterSwiftUILayout(_:)(uint64_t a1, uint64_t a2)
{
  __CFRunLoop *v4;
  CFRunLoopObserverRef v5;
  void *v6;
  const __CFString *v7;
  __CFString *v8;
  uint64_t v9;
  _QWORD *v10;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v12;
  unint64_t v13;
  _QWORD *v14;

  BSDispatchQueueAssertMain();
  v4 = CFRunLoopGetCurrent();
  if (!qword_1ED96CDF8)
  {
    v5 = CFRunLoopObserverCreate(0, 0xA0uLL, 1u, 0, (CFRunLoopObserverCallBack)sub_1D25D0A44, 0);
    v6 = (void *)qword_1ED96CDF8;
    qword_1ED96CDF8 = (uint64_t)v5;

    if (!qword_1ED96CDF8)
      goto LABEL_18;
    CFRunLoopAddObserver(v4, (CFRunLoopObserverRef)qword_1ED96CDF8, (CFRunLoopMode)*MEMORY[0x1E0C9B270]);
  }
  v7 = CFRunLoopCopyCurrentMode(v4);
  if (v7)
  {
    if (qword_1ED96CDF8)
    {
      v8 = (__CFString *)v7;
      if (CFRunLoopContainsObserver(v4, (CFRunLoopObserverRef)qword_1ED96CDF8, v7))
      {
LABEL_9:

        goto LABEL_10;
      }
      if (qword_1ED96CDF8)
      {
        CFRunLoopAddObserver(v4, (CFRunLoopObserverRef)qword_1ED96CDF8, v8);
        goto LABEL_9;
      }
LABEL_19:
      __break(1u);
      return;
    }
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
LABEL_10:
  if (qword_1ED96D000 != -1)
    swift_once();
  v9 = swift_allocObject();
  *(_QWORD *)(v9 + 16) = a1;
  *(_QWORD *)(v9 + 24) = a2;
  swift_beginAccess();
  v10 = off_1ED96C6A8;
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  off_1ED96C6A8 = v10;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    v10 = sub_1D2561B40(0, v10[2] + 1, 1, v10);
    off_1ED96C6A8 = v10;
  }
  v13 = v10[2];
  v12 = v10[3];
  if (v13 >= v12 >> 1)
  {
    v10 = sub_1D2561B40((_QWORD *)(v12 > 1), v13 + 1, 1, v10);
    off_1ED96C6A8 = v10;
  }
  v10[2] = v13 + 1;
  v14 = &v10[2 * v13];
  v14[4] = sub_1D259B938;
  v14[5] = v9;
  swift_endAccess();

}

uint64_t sub_1D25D0A48()
{
  swift_release();
  return swift_deallocObject();
}

void sub_1D25D0A6C()
{
  void *v0;
  char *v1;
  uint64_t v2;
  char *v3;
  void (*v4)(uint64_t);
  uint64_t v5;

  v0 = (void *)MEMORY[0x1D8239E84]();
  if (qword_1ED96D000 != -1)
    swift_once();
  swift_beginAccess();
  v1 = (char *)off_1ED96C6A8;
  v2 = *((_QWORD *)off_1ED96C6A8 + 2);
  if (v2)
  {
    swift_bridgeObjectRetain();
    v3 = v1 + 40;
    do
    {
      v4 = (void (*)(uint64_t))*((_QWORD *)v3 - 1);
      v5 = swift_retain();
      v4(v5);
      swift_release();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  off_1ED96C6A8 = (_UNKNOWN *)MEMORY[0x1E0DEE9D8];
  swift_bridgeObjectRelease();
  objc_autoreleasePoolPop(v0);
}

uint64_t dispatch thunk of WidgetUpdateTiming.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetUpdateTiming.scheduleUpdate(on:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t sub_1D25D0B68(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]),
        v6 = sub_1D26CD8CC(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1D2536488(&qword_1ED963320, &qword_1ED96FE70, MEMORY[0x1E0D0F980]);
      v12 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

uint64_t sub_1D25D0CF0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  void (*v11)(char *, unint64_t, uint64_t);
  char v12;
  uint64_t v14;
  uint64_t v15;

  v3 = sub_1D26CB880();
  v15 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (*(_QWORD *)(a2 + 16)
    && (sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]),
        v6 = sub_1D26CD8CC(),
        v7 = -1 << *(_BYTE *)(a2 + 32),
        v8 = v6 & ~v7,
        ((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0))
  {
    v9 = ~v7;
    v10 = *(_QWORD *)(v15 + 72);
    v11 = *(void (**)(char *, unint64_t, uint64_t))(v15 + 16);
    do
    {
      v11(v5, *(_QWORD *)(a2 + 48) + v10 * v8, v3);
      sub_1D25369B0(&qword_1ED961AF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v12 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v15 + 8))(v5, v3);
      if ((v12 & 1) != 0)
        break;
      v8 = (v8 + 1) & v9;
    }
    while (((*(_QWORD *)(a2 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) != 0);
  }
  else
  {
    v12 = 0;
  }
  return v12 & 1;
}

id WidgetReaper.__allocating_init<A, B>(candidateURLsToRemove:urlsToProtect:fileManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  objc_class *v7;
  id v15;
  id v16;

  v15 = objc_allocWithZone(v7);
  v16 = sub_1D25D4724(a1, a2, a3, a4, a5, a6, a7);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 8))(a2, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  return v16;
}

id sub_1D25D0F68()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress);
  swift_beginAccess();
  return *v1;
}

void sub_1D25D1008(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;

}

void sub_1D25D1058(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

}

uint64_t (*sub_1D25D10B8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25D10FC()
{
  return sub_1D25D11D0();
}

uint64_t sub_1D25D1108(uint64_t a1)
{
  return sub_1D25D1330(a1, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

uint64_t (*sub_1D25D111C())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25D1160(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25D11C4()
{
  return sub_1D25D11D0();
}

uint64_t sub_1D25D11D0()
{
  swift_beginAccess();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25D1214(uint64_t a1)
{
  return sub_1D25D1330(a1, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEB08]);
}

uint64_t (*sub_1D25D1228())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25D126C(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D25D12D4()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1D25D131C(uint64_t a1)
{
  return sub_1D25D1330(a1, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEEE30]);
}

uint64_t sub_1D25D1330(uint64_t a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  uint64_t *v6;
  uint64_t v7;

  v6 = (uint64_t *)(v3 + *a2);
  swift_beginAccess();
  v7 = *v6;
  *v6 = a1;
  return a3(v7);
}

uint64_t (*sub_1D25D1388())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25D13CC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v9;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D25D4E30(a1, (uint64_t)v6);
  v7 = *a2 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate;
  swift_beginAccess();
  sub_1D25D4E78((uint64_t)v6, v7);
  return swift_endAccess();
}

uint64_t sub_1D25D1478@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate;
  swift_beginAccess();
  return sub_1D25D4E30(v3, a1);
}

uint64_t sub_1D25D14C8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate;
  swift_beginAccess();
  sub_1D25D4E78(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1D25D1520())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

id WidgetReaper.init<A, B>(candidateURLsToRemove:urlsToProtect:fileManager:)(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v12;

  v12 = sub_1D25D4724(a1, a2, a3, a4, a5, a6, a7);

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 8))(a2, a5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 8))(a1, a4);
  return v12;
}

uint64_t sub_1D25D15D8(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t result;
  int64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v21;
  int64_t v22;
  char v23;
  char v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int64_t v28;
  uint64_t (*v29)(char *);
  uint64_t v30;

  v29 = a1;
  v5 = sub_1D26CB880();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *(_QWORD *)(a3 + 56);
  v27 = a3 + 56;
  v13 = 1 << *(_BYTE *)(a3 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & v12;
  v28 = (unint64_t)(v13 + 63) >> 6;
  v30 = a3;
  result = swift_bridgeObjectRetain();
  v17 = 0;
  while (v15)
  {
    v18 = __clz(__rbit64(v15));
    v15 &= v15 - 1;
    v19 = v18 | (v17 << 6);
LABEL_19:
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v11, *(_QWORD *)(v30 + 48) + *(_QWORD *)(v6 + 72) * v19, v5);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v6 + 56))(v11, 0, 1, v5);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
      goto LABEL_29;
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    v23 = v29(v8);
    if (v3)
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      swift_release();
      return v25 & 1;
    }
    v24 = v23;
    result = (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if ((v24 & 1) != 0)
    {
      swift_release();
      v25 = 1;
      return v25 & 1;
    }
  }
  if (__OFADD__(v17++, 1))
  {
    __break(1u);
    goto LABEL_32;
  }
  if (v17 >= v28)
    goto LABEL_28;
  v21 = *(_QWORD *)(v27 + 8 * v17);
  if (v21)
  {
LABEL_18:
    v15 = (v21 - 1) & v21;
    v19 = __clz(__rbit64(v21)) + (v17 << 6);
    goto LABEL_19;
  }
  v22 = v17 + 1;
  if (v17 + 1 >= v28)
    goto LABEL_28;
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 2;
  if (v17 + 2 >= v28)
    goto LABEL_28;
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 3;
  if (v17 + 3 >= v28)
    goto LABEL_28;
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
    goto LABEL_17;
  v22 = v17 + 4;
  if (v17 + 4 >= v28)
  {
LABEL_28:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v11, 1, 1, v5);
LABEL_29:
    swift_release();
    v25 = 0;
    return v25 & 1;
  }
  v21 = *(_QWORD *)(v27 + 8 * v22);
  if (v21)
  {
LABEL_17:
    v17 = v22;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v17 >= v28)
      goto LABEL_28;
    v21 = *(_QWORD *)(v27 + 8 * v17);
    ++v22;
    if (v21)
      goto LABEL_18;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D25D18C8(_QWORD *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t i;
  char v12;
  uint64_t v13;

  v2 = a1[2];
  if (!v2)
    return 0;
  v4 = *(_QWORD *)(a2 + 16);
  if (!v4)
    return 0;
  v6 = a1[4];
  v7 = a1[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v8 = 0;
  v9 = v4 - 1;
  for (i = v2 - 1; ; --i)
  {
    swift_bridgeObjectRetain();
    if (v6 != *(_QWORD *)(a2 + v8 * 8 + 32) || v7 != *(_QWORD *)(a2 + v8 * 8 + 40))
      break;
    swift_bridgeObjectRelease();
    v13 = 0;
    if (!i)
      goto LABEL_16;
LABEL_12:
    if (!v9)
      goto LABEL_16;
    v6 = a1[v8 + 6];
    v7 = a1[v8 + 7];
    --v9;
    v8 += 2;
  }
  v12 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0)
  {
    v13 = 0;
    if (!i)
      goto LABEL_16;
    goto LABEL_12;
  }
  v13 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t WidgetReaper.__allocating_init(merging:)(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  v16 = MEMORY[0x1E0DEE9E8];
  v17 = MEMORY[0x1E0DEE9E8];
  if (!(a1 >> 62))
  {
    v3 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    if (v3)
      goto LABEL_3;
LABEL_14:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v3 = MEMORY[0x1E0DEE9E8];
    v1 = MEMORY[0x1E0DEE9E8];
    goto LABEL_15;
  }
  swift_bridgeObjectRetain();
  v3 = sub_1D26CE1F0();
  if (!v3)
    goto LABEL_14;
LABEL_3:
  if (v3 < 1)
  {
    __break(1u);
LABEL_17:
    v11 = (char *)MEMORY[0x1D8239890](0, a1);
    goto LABEL_12;
  }
  v4 = 0;
  v5 = a1 & 0xC000000000000001;
  do
  {
    if (v5)
      v6 = (id)MEMORY[0x1D8239890](v4, a1);
    else
      v6 = *(id *)(a1 + 8 * v4 + 32);
    v7 = v6;
    ++v4;
    swift_beginAccess();
    v8 = swift_bridgeObjectRetain();
    sub_1D25D1BD8(v8);
    swift_beginAccess();
    v9 = swift_bridgeObjectRetain();
    sub_1D25D1BD8(v9);

  }
  while (v3 != v4);
  result = swift_bridgeObjectRelease();
  v3 = v16;
  v1 = v17;
  if (v5)
    goto LABEL_17;
  if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    v11 = (char *)*(id *)(a1 + 32);
LABEL_12:
    v12 = v11;
    swift_bridgeObjectRelease();
    v13 = *(id *)&v12[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager];

LABEL_15:
    v14 = objc_allocWithZone((Class)type metadata accessor for WidgetReaper());
    v15 = sub_1D25BC134(v1, v3, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (uint64_t)v15;
  }
  __break(1u);
  return result;
}

{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  char *v11;
  char *v12;
  id v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;

  if ((a1 & 0x8000000000000000) != 0 || (a1 & 0x4000000000000000) != 0)
  {
    v2 = (uint64_t)sub_1D259122C(a1);
    swift_bridgeObjectRelease();
  }
  else
  {
    v2 = a1 & 0xFFFFFFFFFFFFFF8;
  }
  v16 = MEMORY[0x1E0DEE9E8];
  v17 = MEMORY[0x1E0DEE9E8];
  if ((v2 & 0x8000000000000000) == 0 && (v2 & 0x4000000000000000) == 0)
  {
    v3 = *(_QWORD *)(v2 + 16);
    swift_retain();
    if (v3)
      goto LABEL_7;
LABEL_19:
    swift_release();
    swift_release();
    v13 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
    v3 = MEMORY[0x1E0DEE9E8];
    v1 = MEMORY[0x1E0DEE9E8];
    goto LABEL_20;
  }
  swift_retain();
  v3 = sub_1D26CE1F0();
  if (!v3)
    goto LABEL_19;
LABEL_7:
  if (v3 < 1)
  {
    __break(1u);
LABEL_22:
    v11 = (char *)MEMORY[0x1D8239890](0, v2);
    goto LABEL_16;
  }
  v4 = 0;
  v5 = v2 & 0xC000000000000001;
  do
  {
    if (v5)
      v6 = (id)MEMORY[0x1D8239890](v4, v2);
    else
      v6 = *(id *)(v2 + 8 * v4 + 32);
    v7 = v6;
    ++v4;
    swift_beginAccess();
    v8 = swift_bridgeObjectRetain();
    sub_1D25D1BD8(v8);
    swift_beginAccess();
    v9 = swift_bridgeObjectRetain();
    sub_1D25D1BD8(v9);

  }
  while (v3 != v4);
  result = swift_release();
  v3 = v16;
  v1 = v17;
  if (v5)
    goto LABEL_22;
  if (*(_QWORD *)(v2 + 16))
  {
    v11 = (char *)*(id *)(v2 + 32);
LABEL_16:
    v12 = v11;
    swift_release();
    v13 = *(id *)&v12[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager];

LABEL_20:
    v14 = objc_allocWithZone((Class)type metadata accessor for WidgetReaper());
    v15 = sub_1D25BC134(v1, v3, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    return (uint64_t)v15;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25D1BD8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  uint64_t v23;
  int64_t v24;

  v2 = sub_1D26CB880();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v23 - v7;
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  result = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v23 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = 0;
  v14 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & *(_QWORD *)(a1 + 56);
  v24 = (unint64_t)(v15 + 63) >> 6;
  if (!v17)
    goto LABEL_5;
LABEL_4:
  v18 = __clz(__rbit64(v17));
  v17 &= v17 - 1;
  for (i = v18 | (v13 << 6); ; i = __clz(__rbit64(v21)) + (v13 << 6))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * i, v2);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v3 + 56))(v12, 0, 1, v2);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v12, 1, v2) == 1)
      return swift_release();
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_1D25F092C((uint64_t)v8, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    if (v17)
      goto LABEL_4;
LABEL_5:
    v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v20);
    ++v13;
    if (!v21)
    {
      v13 = v20 + 1;
      if (v20 + 1 >= v24)
        goto LABEL_24;
      v21 = *(_QWORD *)(v14 + 8 * v13);
      if (!v21)
      {
        v13 = v20 + 2;
        if (v20 + 2 >= v24)
          goto LABEL_24;
        v21 = *(_QWORD *)(v14 + 8 * v13);
        if (!v21)
        {
          v13 = v20 + 3;
          if (v20 + 3 >= v24)
            goto LABEL_24;
          v21 = *(_QWORD *)(v14 + 8 * v13);
          if (!v21)
            break;
        }
      }
    }
LABEL_20:
    v17 = (v21 - 1) & v21;
  }
  v22 = v20 + 4;
  if (v22 >= v24)
  {
LABEL_24:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v12, 1, 1, v2);
    return swift_release();
  }
  v21 = *(_QWORD *)(v14 + 8 * v22);
  if (v21)
  {
    v13 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    v13 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v13 >= v24)
      goto LABEL_24;
    v21 = *(_QWORD *)(v14 + 8 * v13);
    ++v22;
    if (v21)
      goto LABEL_20;
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_1D25D1E68(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  int64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  unint64_t v20;
  int64_t v21;
  unint64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;

  v2 = sub_1D26CD20C();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v24 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v24 - v8;
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v24 - v11;
  v13 = 0;
  v14 = *(_QWORD *)(a1 + 56);
  v25 = a1 + 56;
  v15 = 1 << *(_BYTE *)(a1 + 32);
  v16 = -1;
  if (v15 < 64)
    v16 = ~(-1 << v15);
  v17 = v16 & v14;
  v18 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      v19 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      v20 = v19 | (v13 << 6);
      goto LABEL_5;
    }
    v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v21);
    ++v13;
    if (!v22)
    {
      v13 = v21 + 1;
      if (v21 + 1 >= v18)
        return swift_release();
      v22 = *(_QWORD *)(v25 + 8 * v13);
      if (!v22)
      {
        v13 = v21 + 2;
        if (v21 + 2 >= v18)
          return swift_release();
        v22 = *(_QWORD *)(v25 + 8 * v13);
        if (!v22)
        {
          v13 = v21 + 3;
          if (v21 + 3 >= v18)
            return swift_release();
          v22 = *(_QWORD *)(v25 + 8 * v13);
          if (!v22)
            break;
        }
      }
    }
LABEL_22:
    v17 = (v22 - 1) & v22;
    v20 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v12, *(_QWORD *)(a1 + 48) + *(_QWORD *)(v3 + 72) * v20, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v6, v12, v2);
    sub_1D25F1238((uint64_t)v9, v6);
    result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
  }
  v23 = v21 + 4;
  if (v23 >= v18)
    return swift_release();
  v22 = *(_QWORD *)(v25 + 8 * v23);
  if (v22)
  {
    v13 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    v13 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v13 >= v18)
      return swift_release();
    v22 = *(_QWORD *)(v25 + 8 * v13);
    ++v23;
    if (v22)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

void sub_1D25D208C(unint64_t a1)
{
  unint64_t v1;
  uint64_t v2;
  id v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  unint64_t v10;
  char *v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  char *v15;
  _QWORD *v16;
  id v17[6];

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    sub_1D26CE004();
    sub_1D25D5528();
    sub_1D25369B0((unint64_t *)&qword_1ED96D530, (uint64_t (*)(uint64_t))sub_1D25D5528, MEMORY[0x1E0DEFCF8]);
    sub_1D26CDC20();
    v1 = (unint64_t)v17[1];
    v16 = v17[2];
    v2 = (uint64_t)v17[3];
    v3 = v17[4];
    v4 = (unint64_t)v17[5];
  }
  else
  {
    v3 = 0;
    v5 = -1 << *(_BYTE *)(a1 + 32);
    v16 = (_QWORD *)(a1 + 56);
    v2 = ~v5;
    v6 = -v5;
    if (v6 < 64)
      v7 = ~(-1 << v6);
    else
      v7 = -1;
    v4 = v7 & *(_QWORD *)(a1 + 56);
  }
  v8 = (unint64_t)(v2 + 64) >> 6;
  if ((v1 & 0x8000000000000000) != 0)
    goto LABEL_10;
  while (1)
  {
    if (v4)
    {
      v9 = (v4 - 1) & v4;
      v10 = __clz(__rbit64(v4)) | ((_QWORD)v3 << 6);
      v11 = (char *)v3;
      goto LABEL_29;
    }
    v13 = (uint64_t)v3 + 1;
    if (__OFADD__(v3, 1))
      break;
    if (v13 >= v8)
      goto LABEL_32;
    v14 = v16[v13];
    v11 = (char *)v3 + 1;
    if (!v14)
    {
      v11 = (char *)v3 + 2;
      if ((uint64_t)v3 + 2 >= v8)
        goto LABEL_32;
      v14 = v16[(_QWORD)v11];
      if (!v14)
      {
        v11 = (char *)v3 + 3;
        if ((uint64_t)v3 + 3 >= v8)
          goto LABEL_32;
        v14 = v16[(_QWORD)v11];
        if (!v14)
        {
          v11 = (char *)v3 + 4;
          if ((uint64_t)v3 + 4 >= v8)
            goto LABEL_32;
          v14 = v16[(_QWORD)v11];
          if (!v14)
          {
            v11 = (char *)v3 + 5;
            if ((uint64_t)v3 + 5 >= v8)
              goto LABEL_32;
            v14 = v16[(_QWORD)v11];
            if (!v14)
            {
              v15 = (char *)v3 + 6;
              while ((char *)v8 != v15)
              {
                v14 = v16[(_QWORD)v15++];
                if (v14)
                {
                  v11 = v15 - 1;
                  goto LABEL_28;
                }
              }
LABEL_32:
              sub_1D2592A28();
              return;
            }
          }
        }
      }
    }
LABEL_28:
    v9 = (v14 - 1) & v14;
    v10 = __clz(__rbit64(v14)) + ((_QWORD)v11 << 6);
LABEL_29:
    v12 = *(id *)(*(_QWORD *)(v1 + 48) + 8 * v10);
    if (!v12)
      goto LABEL_32;
    while (1)
    {
      sub_1D25F0F94(v17, v12);

      v3 = v11;
      v4 = v9;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1D26CE034())
      {
        sub_1D25D5528();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        v12 = v17[0];
        swift_unknownObjectRelease();
        v11 = (char *)v3;
        v9 = v4;
        if (v12)
          continue;
      }
      goto LABEL_32;
    }
  }
  __break(1u);
}

uint64_t sub_1D25D2540(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  _QWORD v18[2];
  _QWORD aBlock[6];

  v18[0] = a1;
  v6 = sub_1D26CD074();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CD0C8();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (_QWORD *)swift_allocObject();
  v14[2] = v3;
  v14[3] = a2;
  v14[4] = a3;
  aBlock[4] = sub_1D25D4F30;
  aBlock[5] = v14;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D25351AC;
  aBlock[3] = &block_descriptor_6;
  v15 = _Block_copy(aBlock);
  v16 = v3;
  sub_1D2549DF0(a2);
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v18[1] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v13, v9, v15);
  _Block_release(v15);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  return swift_release();
}

uint64_t sub_1D25D2734()
{
  char *v0;
  char *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  NSObject *v15;
  os_log_type_t v16;
  uint8_t *v17;
  uint64_t *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t *v23;
  id *v24;
  unint64_t v25;
  __int128 v26;
  void *v27;
  uint64_t v28;
  uint64_t *v29;
  uint64_t v30;
  char v31;
  NSObject *v32;
  os_log_type_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint8_t *v37;
  uint64_t v38;
  uint64_t v39;
  unint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  char v43;
  uint64_t v44;
  uint64_t v45;
  char v46;
  char *v47;
  NSObject *v48;
  os_log_type_t v49;
  uint64_t v50;
  uint8_t *v51;
  uint64_t v52;
  uint64_t v53;
  unint64_t v54;
  uint8_t *v55;
  uint64_t v56;
  char v57;
  id v58;
  uint64_t v59;
  char v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  _QWORD v65[2];
  char *v66;
  uint64_t v67;
  __int128 v68;
  uint64_t *v69;
  id *v70;
  uint64_t v71;
  char *v72;
  char *v73;
  uint64_t *v74;
  char *v75;
  uint64_t v76;
  void (*v77)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v78;
  char *v79;
  uint64_t *v80;
  void (*v81)(char *, unint64_t, uint64_t);
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85[3];
  uint64_t v86;

  v1 = v0;
  v2 = sub_1D26CB880();
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v66 = (char *)v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v65 - v7;
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v65 - v9;
  v11 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)v65 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (qword_1ED96B0B8 != -1)
LABEL_32:
    swift_once();
  v14 = sub_1D26CC09C();
  v76 = __swift_project_value_buffer(v14, (uint64_t)qword_1ED977F20);
  v15 = sub_1D26CC084();
  v16 = sub_1D26CDD04();
  if (os_log_type_enabled(v15, v16))
  {
    v17 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v17 = 0;
    _os_log_impl(&dword_1D2531000, v15, v16, "Reaping session initiated.", v17, 2u);
    MEMORY[0x1D823A5E0](v17, -1, -1);
  }

  v18 = (uint64_t *)&v1[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove];
  swift_beginAccess();
  v74 = v18;
  v19 = v1;
  v20 = swift_bridgeObjectRetain();
  v1 = 0;
  v21 = sub_1D25D4280(v20, (uint64_t)v19);
  swift_bridgeObjectRelease();

  v86 = 0;
  v22 = *(_QWORD *)(v21 + 16);
  v72 = v19;
  v65[1] = v21;
  if (v22)
  {
    v23 = (uint64_t *)&v19[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect];
    v24 = (id *)&v19[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress];
    v25 = v21 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v80 = v23;
    swift_beginAccess();
    v70 = v24;
    swift_beginAccess();
    v78 = *(_QWORD *)(v3 + 72);
    v81 = *(void (**)(char *, unint64_t, uint64_t))(v3 + 16);
    v69 = &v84;
    *(_QWORD *)&v26 = 136446210;
    v68 = v26;
    v67 = MEMORY[0x1E0DEE9B8] + 8;
    v73 = v10;
    v79 = v13;
    v71 = v3;
    v81(v13, v25, v2);
    while (1)
    {
      v77 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56);
      v77(v13, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v13, 1, v2) == 1)
        goto LABEL_28;
      v82 = v22;
      v28 = (*(uint64_t (**)(char *, char *, uint64_t))(v3 + 32))(v10, v13, v2);
      v29 = v80;
      v30 = *v80;
      MEMORY[0x1E0C80A78](v28);
      v65[-2] = v10;
      swift_bridgeObjectRetain();
      v31 = sub_1D25D15D8((uint64_t (*)(char *))sub_1D25D4F6C, (uint64_t)&v65[-4], v30);
      swift_bridgeObjectRelease();
      if ((v31 & 1) != 0)
      {
        v81(v8, (unint64_t)v10, v2);
        v32 = sub_1D26CC084();
        v33 = sub_1D26CDCE0();
        if (os_log_type_enabled(v32, v33))
        {
          v34 = swift_slowAlloc();
          v75 = v1;
          v35 = v8;
          v36 = v2;
          v37 = (uint8_t *)v34;
          v38 = swift_slowAlloc();
          v85[0] = v38;
          *(_DWORD *)v37 = v68;
          sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v39 = sub_1D26CE370();
          v83 = sub_1D2537880(v39, v40, v85);
          v3 = v71;
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          v13 = *(char **)(v3 + 8);
          ((void (*)(char *, uint64_t))v13)(v35, v36);
          _os_log_impl(&dword_1D2531000, v32, v33, "Ignoring parent of protected child during reaping: %{public}s", v37, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v38, -1, -1);
          v41 = v37;
          v2 = v36;
          v8 = v35;
          v1 = v75;
          MEMORY[0x1D823A5E0](v41, -1, -1);
        }
        else
        {
          v13 = *(char **)(v3 + 8);
          ((void (*)(char *, uint64_t))v13)(v8, v2);
        }

        v56 = *v74;
        swift_bridgeObjectRetain();
        v10 = v73;
        v57 = sub_1D25D0CF0((uint64_t)v73, v56);
        swift_bridgeObjectRelease();
        if ((v57 & 1) != 0)
        {
          v58 = *v70;
          if (__OFADD__(objc_msgSend(v58, sel_completedUnitCount), 1))
          {
            __break(1u);
            goto LABEL_32;
          }
          goto LABEL_20;
        }
      }
      else
      {
        v42 = *v29;
        swift_bridgeObjectRetain();
        v43 = sub_1D25D0CF0((uint64_t)v10, v42);
        v44 = swift_bridgeObjectRelease();
        if ((v43 & 1) != 0
          || (v45 = *v29,
              MEMORY[0x1E0C80A78](v44),
              v65[-2] = v10,
              swift_bridgeObjectRetain(),
              v46 = sub_1D25D15D8((uint64_t (*)(char *))sub_1D25D4F88, (uint64_t)&v65[-4], v45),
              swift_bridgeObjectRelease(),
              (v46 & 1) == 0))
        {
          v27 = (void *)MEMORY[0x1D8239E84]();
          sub_1D25D325C(v72, (uint64_t)v10, &v86);
          objc_autoreleasePoolPop(v27);
          v13 = *(char **)(v3 + 8);
          goto LABEL_7;
        }
        v75 = v1;
        v47 = v66;
        v81(v66, (unint64_t)v10, v2);
        v48 = sub_1D26CC084();
        v49 = sub_1D26CDCE0();
        if (os_log_type_enabled(v48, v49))
        {
          v50 = swift_slowAlloc();
          v65[0] = v8;
          v51 = (uint8_t *)v50;
          v52 = swift_slowAlloc();
          v85[0] = v52;
          *(_DWORD *)v51 = v68;
          sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
          v53 = sub_1D26CE370();
          v83 = sub_1D2537880(v53, v54, v85);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          v13 = *(char **)(v71 + 8);
          ((void (*)(char *, uint64_t))v13)(v47, v2);
          _os_log_impl(&dword_1D2531000, v48, v49, "Ignoring child of protected path during reaping: %{public}s", v51, 0xCu);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v52, -1, -1);
          v55 = v51;
          v3 = v71;
          v8 = (char *)v65[0];
          MEMORY[0x1D823A5E0](v55, -1, -1);
        }
        else
        {
          v13 = *(char **)(v3 + 8);
          ((void (*)(char *, uint64_t))v13)(v47, v2);
        }

        v59 = *v74;
        swift_bridgeObjectRetain();
        v10 = v73;
        v60 = sub_1D25D0CF0((uint64_t)v73, v59);
        swift_bridgeObjectRelease();
        v1 = v75;
        if ((v60 & 1) != 0)
        {
          v58 = *v70;
          if (__OFADD__(objc_msgSend(v58, sel_completedUnitCount), 1))
          {
            __break(1u);
            break;
          }
LABEL_20:
          objc_msgSend(v58, sel_setCompletedUnitCount_);

        }
      }
LABEL_7:
      ((void (*)(char *, uint64_t))v13)(v10, v2);
      v25 += v78;
      v22 = v82 - 1;
      v13 = v79;
      if (v82 == 1)
      {
        v77(v79, 1, 1, v2);
        goto LABEL_28;
      }
      v81(v79, v25, v2);
    }
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v3 + 56))(v13, 1, 1, v2);
LABEL_28:
  swift_bridgeObjectRelease();
  v61 = sub_1D26CC084();
  v62 = sub_1D26CDD04();
  if (os_log_type_enabled(v61, v62))
  {
    v63 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v63 = 134349056;
    swift_beginAccess();
    v85[0] = v86;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v61, v62, "Reaping session completed: %{public}ld purged", v63, 0xCu);
    MEMORY[0x1D823A5E0](v63, -1, -1);
  }

  swift_beginAccess();
  swift_retain();
  sub_1D26CC180();
  return swift_release();
}

uint64_t sub_1D25D30B4()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v0 = (void *)MEMORY[0x1D8239E84]();
  v1 = sub_1D26CB7B4();
  v2 = (_QWORD *)sub_1D25D402C(v1);
  swift_bridgeObjectRelease();
  v3 = sub_1D26CB7B4();
  v4 = sub_1D25D402C(v3);
  swift_bridgeObjectRelease();
  if (v2[2] >= *(_QWORD *)(v4 + 16))
  {
    v6 = sub_1D25D18C8(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v6 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
  }
  objc_autoreleasePoolPop(v0);
  return v5 & 1;
}

uint64_t sub_1D25D3188()
{
  void *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;

  v0 = (void *)MEMORY[0x1D8239E84]();
  v1 = sub_1D26CB7B4();
  v2 = (_QWORD *)sub_1D25D402C(v1);
  swift_bridgeObjectRelease();
  v3 = sub_1D26CB7B4();
  v4 = sub_1D25D402C(v3);
  swift_bridgeObjectRelease();
  if (v2[2] >= *(_QWORD *)(v4 + 16))
  {
    v6 = sub_1D25D18C8(v2, v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = v6 ^ 1;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v5 = 0;
  }
  objc_autoreleasePoolPop(v0);
  return v5 & 1;
}

void sub_1D25D325C(char *a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  unsigned int (*v26)(char *, uint64_t, uint64_t);
  unsigned int v27;
  char *v28;
  void *v29;
  void *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  uint8_t *v37;
  void *v38;
  void *v39;
  uint64_t v40;
  unint64_t v41;
  void *v42;
  uint8_t *v43;
  uint64_t inited;
  void *v45;
  id v46;
  os_log_t v47;
  void *v48;
  id v49;
  id v50;
  void *v51;
  id v52;
  id v53;
  id v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  id v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  char v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  void *v70;
  id v71;
  id v72;
  NSObject *v73;
  os_log_type_t v74;
  uint64_t v75;
  unint64_t v76;
  id v77;
  uint64_t v78;
  _QWORD *v79;
  os_log_t v80;
  char *v81;
  char *v82;
  char v83;
  void (*v84)(char *, uint64_t);
  uint64_t *v85;
  uint64_t v86;
  char v87;
  id *v88;
  char *v89;
  uint64_t v90;
  void (*v91)(char *, char *, uint64_t);
  unsigned int (*v92)(char *, uint64_t, uint64_t);
  char *v93;
  char *v94;
  char *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  _QWORD *v100;
  os_log_t v101;
  _QWORD *v102;
  char *v103;
  char *v104;
  void *v105;
  uint64_t v106;
  uint64_t v107;
  char *v108;
  void *v109;
  uint64_t v110;
  id v111[7];

  v100 = a3;
  v111[6] = *(id *)MEMORY[0x1E0C80C00];
  v97 = sub_1D26CB598();
  v96 = *(_QWORD *)(v97 - 8);
  MEMORY[0x1E0C80A78](v97);
  v95 = (char *)&v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v102 = (_QWORD *)_s22ExtendedAttributeErrorOMa();
  MEMORY[0x1E0C80A78](v102);
  v103 = (char *)&v90 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB880();
  v8 = *(_QWORD *)(v7 - 8);
  v105 = (void *)v7;
  v106 = v8;
  v9 = MEMORY[0x1E0C80A78](v7);
  v94 = (char *)&v90 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v104 = (char *)&v90 - v11;
  v99 = sub_1D26CB6D0();
  v98 = *(_QWORD *)(v99 - 8);
  MEMORY[0x1E0C80A78](v99);
  v101 = (os_log_t)((char *)&v90 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0));
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v90 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v90 - v17;
  v19 = sub_1D26CB9DC();
  v20 = *(_QWORD *)(v19 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v93 = (char *)&v90 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v90 - v23;
  v108 = a1;
  v25 = (uint64_t)&a1[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate];
  swift_beginAccess();
  sub_1D25D4E30(v25, (uint64_t)v18);
  v26 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48);
  v27 = v26(v18, 1, v19);
  v107 = a2;
  if (v27 == 1)
  {
    v16 = v18;
LABEL_3:
    v28 = v108;
    v29 = v109;
    v31 = v104;
    v30 = v105;
    sub_1D25D014C((uint64_t)v16);
    v32 = v107;
    goto LABEL_4;
  }
  v92 = v26;
  v91 = *(void (**)(char *, char *, uint64_t))(v20 + 32);
  v91(v24, v18, v19);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCD8);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D26D1280;
  v45 = (void *)*MEMORY[0x1E0C998D8];
  *(_QWORD *)(inited + 32) = *MEMORY[0x1E0C998D8];
  v46 = v45;
  sub_1D25F4EF8(inited);
  swift_setDeallocating();
  type metadata accessor for URLResourceKey(0);
  swift_arrayDestroy();
  v47 = v101;
  v48 = v109;
  sub_1D26CB7C0();
  v49 = v48;
  if (v48)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
    swift_bridgeObjectRelease();
    v29 = 0;
    v32 = v107;
    v28 = v108;
    goto LABEL_15;
  }
  v109 = 0;
  swift_bridgeObjectRelease();
  sub_1D26CB6C4();
  (*(void (**)(os_log_t, uint64_t))(v98 + 8))(v47, v99);
  if (v92(v16, 1, v19) == 1)
  {
    (*(void (**)(char *, uint64_t))(v20 + 8))(v24, v19);
    goto LABEL_3;
  }
  v82 = v93;
  v91(v93, v16, v19);
  v83 = sub_1D26CB958();
  v84 = *(void (**)(char *, uint64_t))(v20 + 8);
  v84(v82, v19);
  v84(v24, v19);
  v28 = v108;
  v29 = v109;
  v32 = v107;
  v31 = v104;
  v30 = v105;
  if ((v83 & 1) == 0)
    goto LABEL_41;
LABEL_4:
  if (qword_1ED96B0B8 != -1)
    swift_once();
  v33 = sub_1D26CC09C();
  __swift_project_value_buffer(v33, (uint64_t)qword_1ED977F20);
  v34 = v106;
  (*(void (**)(char *, uint64_t, void *))(v106 + 16))(v31, v32, v30);
  v35 = sub_1D26CC084();
  v36 = sub_1D26CDD04();
  if (os_log_type_enabled(v35, v36))
  {
    v37 = (uint8_t *)swift_slowAlloc();
    v38 = (void *)swift_slowAlloc();
    v109 = v29;
    v39 = v30;
    v30 = v38;
    v111[0] = v38;
    *(_DWORD *)v37 = 136446210;
    sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
    v40 = sub_1D26CE370();
    v110 = sub_1D2537880(v40, v41, (uint64_t *)v111);
    v28 = v108;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v42 = v39;
    v29 = v109;
    (*(void (**)(char *, void *))(v106 + 8))(v31, v42);
    _os_log_impl(&dword_1D2531000, v35, v36, "Reaping %{public}s", v37, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v30, -1, -1);
    v43 = v37;
    v32 = v107;
    MEMORY[0x1D823A5E0](v43, -1, -1);
  }
  else
  {
    (*(void (**)(char *, void *))(v34 + 8))(v31, v30);
  }

  v50 = *(id *)&v28[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager];
  v51 = (void *)sub_1D26CB7D8();
  v111[0] = 0;
  v16 = (char *)objc_msgSend(v50, sel_removeItemAtURL_error_, v51, v111);

  v49 = v111[0];
  if (!(_DWORD)v16)
  {
    v53 = v111[0];
    v49 = (id)sub_1D26CB76C();

    swift_willThrow();
    v29 = 0;
LABEL_15:
    v111[0] = v49;
    v54 = v49;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    v55 = (uint64_t)v103;
    if (swift_dynamicCast())
    {
      if (swift_getEnumCaseMultiPayload() == 1)
      {
        swift_bridgeObjectRelease();
        v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C8);
        v57 = v96;
        v30 = v95;
        v16 = (char *)v97;
        (*(void (**)(char *, uint64_t, uint64_t))(v96 + 32))(v95, v55 + *(int *)(v56 + 64), v97);
        sub_1D25369B0((unint64_t *)&unk_1ED962300, (uint64_t (*)(uint64_t))MEMORY[0x1E0CADE90], MEMORY[0x1E0CADE88]);
        v58 = sub_1D26CB748();
        (*(void (**)(void *, char *))(v57 + 8))(v30, v16);
        if (v58 == 2)
        {

          goto LABEL_41;
        }
      }
      else
      {
        sub_1D25D5564(v55);
      }
    }

    v30 = (void *)sub_1D26CB760();
    v59 = objc_msgSend(v30, sel_domain);
    v60 = sub_1D26CD938();
    v62 = v61;

    v16 = (char *)objc_msgSend(v30, sel_code);
    if (sub_1D26CD938() == v60 && v63 == v62)
    {
      swift_bridgeObjectRelease();
    }
    else
    {
      v64 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      if ((v64 & 1) == 0)
        goto LABEL_28;
    }
    if (v16 == (char *)260)
    {

      swift_bridgeObjectRelease();
      v32 = v107;
      v28 = v108;
      goto LABEL_41;
    }
LABEL_28:
    if (sub_1D26CD938() == v60 && v65 == v62)
    {
      swift_bridgeObjectRelease_n();
      v28 = v108;
      if (v16 != (char *)4)
        goto LABEL_35;
    }
    else
    {
      v66 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v28 = v108;
      if ((v66 & 1) == 0 || v16 != (char *)4)
      {
LABEL_35:
        v16 = v28;
        if (qword_1ED96B0B8 == -1)
          goto LABEL_36;
        goto LABEL_47;
      }
    }

    v32 = v107;
    goto LABEL_41;
  }
  if (__OFADD__(*v100, 1))
    goto LABEL_46;
  ++*v100;
  v52 = v49;
LABEL_41:
  while (1)
  {
    v85 = (uint64_t *)&v28[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove];
    swift_beginAccess();
    v86 = *v85;
    swift_bridgeObjectRetain();
    v87 = sub_1D25D0CF0(v32, v86);
    swift_bridgeObjectRelease();
    if ((v87 & 1) == 0)
      break;
    v88 = (id *)&v28[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress];
    swift_beginAccess();
    v49 = *v88;
    v89 = (char *)objc_msgSend(v49, sel_completedUnitCount);
    if (!__OFADD__(v89, 1))
    {
      objc_msgSend(v49, sel_setCompletedUnitCount_, v89 + 1);

      return;
    }
    __break(1u);
LABEL_46:
    __break(1u);
LABEL_47:
    swift_once();
LABEL_36:
    v67 = sub_1D26CC09C();
    __swift_project_value_buffer(v67, (uint64_t)qword_1ED977F20);
    v68 = v106;
    v32 = v107;
    v69 = v94;
    v70 = v105;
    (*(void (**)(char *, uint64_t, void *))(v106 + 16))(v94, v107, v105);
    v71 = v49;
    v72 = v49;
    v73 = sub_1D26CC084();
    v74 = sub_1D26CDCEC();
    LODWORD(v104) = v74;
    if (os_log_type_enabled(v73, v74))
    {
      v16 = (char *)swift_slowAlloc();
      v102 = (_QWORD *)swift_slowAlloc();
      v103 = (char *)swift_slowAlloc();
      v111[0] = v103;
      *(_DWORD *)v16 = 136446466;
      v109 = v29;
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v101 = v73;
      v75 = sub_1D26CE370();
      v110 = sub_1D2537880(v75, v76, (uint64_t *)v111);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, void *))(v68 + 8))(v69, v70);
      *((_WORD *)v16 + 6) = 2114;
      v77 = v49;
      v78 = _swift_stdlib_bridgeErrorToNSError();
      v110 = v78;
      v32 = v107;
      sub_1D26CDF50();
      v79 = v102;
      *v102 = v78;
      v29 = v109;

      v80 = v101;
      _os_log_impl(&dword_1D2531000, v101, (os_log_type_t)v104, "Error reaping %{public}s: %{public}@", (uint8_t *)v16, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      v28 = v108;
      MEMORY[0x1D823A5E0](v79, -1, -1);
      v81 = v103;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v81, -1, -1);
      MEMORY[0x1D823A5E0](v16, -1, -1);

    }
    else
    {

      (*(void (**)(char *, void *))(v68 + 8))(v69, v70);
      v28 = v16;
    }
  }
}

id WidgetReaper.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void WidgetReaper.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

id WidgetReaper.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetReaper();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D25D3FDC@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange);
  swift_beginAccess();
  *a1 = *v3;
  return swift_retain();
}

uint64_t sub_1D25D402C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v1 = a1;
  v3 = (_QWORD *)(a1 + 16);
  v2 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v2)
  {
    while (1)
    {
      v5 = v1 + 16 * v2;
      result = *(_QWORD *)(v5 + 16);
      if (result != 47 || *(_QWORD *)(v5 + 24) != 0xE100000000000000)
      {
        result = sub_1D26CE3D0();
        if ((result & 1) == 0)
          break;
      }
      v7 = 0;
      v8 = -v2;
      v9 = v1 + 40;
      v10 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v24 = MEMORY[0x1E0DEE9D8];
      v23 = v1 + 40;
      while (2)
      {
        v11 = (uint64_t *)(v9 + 16 * v7++);
        while (1)
        {
          if ((unint64_t)(v7 - 1) >= *v3)
          {
            __break(1u);
LABEL_30:
            __break(1u);
            return result;
          }
          v12 = *(v11 - 1);
          v13 = *v11;
          if (v10[2])
            break;
          swift_bridgeObjectRetain();
          result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
            result = sub_1D258430C(0, 1, 1);
          v15 = v10[2];
          v14 = v10[3];
          if (v15 >= v14 >> 1)
            result = sub_1D258430C(v14 > 1, v15 + 1, 1);
          v10[2] = v15 + 1;
          v16 = &v10[2 * v15];
          v16[4] = v12;
          v16[5] = v13;
          ++v7;
          v11 += 2;
          if (v8 + v7 == 1)
            goto LABEL_4;
        }
        v17 = v10[5];
        v22 = v10[4];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        v18 = v24;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_1D258430C(0, *(_QWORD *)(v24 + 16) + 1, 1);
          v18 = v24;
        }
        v20 = *(_QWORD *)(v18 + 16);
        v19 = *(_QWORD *)(v18 + 24);
        if (v20 >= v19 >> 1)
        {
          sub_1D258430C(v19 > 1, v20 + 1, 1);
          v18 = v24;
        }
        *(_QWORD *)(v18 + 16) = v20 + 1;
        v24 = v18;
        v21 = v18 + 16 * v20;
        *(_QWORD *)(v21 + 32) = v22;
        *(_QWORD *)(v21 + 40) = v17;
        result = swift_isUniquelyReferenced_nonNull_native();
        if ((result & 1) == 0)
        {
          result = sub_1D25D426C((uint64_t)v10);
          v10 = (_QWORD *)result;
        }
        if (!v10[2])
          goto LABEL_30;
        result = swift_bridgeObjectRelease();
        v10[4] = v12;
        v10[5] = v13;
        v9 = v23;
        if (v8 + v7)
          continue;
        break;
      }
LABEL_4:
      swift_bridgeObjectRelease();
      swift_release();
      result = v24;
      v3 = (_QWORD *)(v24 + 16);
      v2 = *(_QWORD *)(v24 + 16);
      v1 = v24;
      if (!v2)
        return result;
    }
  }
  return v1;
}

uint64_t sub_1D25D426C(uint64_t a1)
{
  return sub_1D2584514(0, *(_QWORD *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1D25D4280(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v20;
  int64_t v21;
  void (*v22)(char *, unint64_t, uint64_t);
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;
  id v27;
  void *v28;
  id v29;
  id v30;
  uint64_t v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  id v35;
  void *v36;
  __int128 v38;
  uint64_t v39;
  uint64_t v40;
  int64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  int64_t v48;
  char v49[8];
  id v50;
  uint64_t v51;
  uint64_t v52;

  v52 = *MEMORY[0x1E0C80C00];
  v4 = sub_1D26CB880();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v47 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = MEMORY[0x1E0DEE9D8];
  v10 = *(_QWORD *)(a1 + 56);
  v40 = a1 + 56;
  v11 = 1 << *(_BYTE *)(a1 + 32);
  v12 = -1;
  if (v11 < 64)
    v12 = ~(-1 << v11);
  v13 = v12 & v10;
  v43 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemoveWithChildrenToKeep;
  v39 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager;
  v41 = (unint64_t)(v11 + 63) >> 6;
  v46 = a1;
  swift_bridgeObjectRetain();
  v14 = 0;
  v38 = xmmword_1D26D1280;
  v44 = v9;
  v45 = a2;
  while (1)
  {
    if (v13)
    {
      v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_21;
    }
    if (__OFADD__(v14++, 1))
    {
      __break(1u);
      goto LABEL_34;
    }
    if (v14 >= v41)
      goto LABEL_31;
    v20 = *(_QWORD *)(v40 + 8 * v14);
    if (!v20)
      break;
LABEL_20:
    v13 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_21:
    v22 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
    v22(v9, *(_QWORD *)(v46 + 48) + *(_QWORD *)(v5 + 72) * v18, v4);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v5 + 56))(v9, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4) == 1)
      goto LABEL_32;
    v48 = v14;
    v23 = (uint64_t)v47;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v47, v9, v4);
    v24 = a2;
    v25 = *(_QWORD *)(a2 + v43);
    swift_bridgeObjectRetain();
    v26 = sub_1D25D0CF0(v23, v25);
    swift_bridgeObjectRelease();
    if ((v26 & 1) != 0)
    {
      v27 = *(id *)(v24 + v39);
      sub_1D26CB868();
      v28 = (void *)sub_1D26CD914();
      swift_bridgeObjectRelease();
      v50 = 0;
      v29 = objc_msgSend(v27, sel_subpathsOfDirectoryAtPath_error_, v28, &v50);

      v30 = v50;
      if (v29)
      {
        v31 = sub_1D26CDAF4();
        v32 = v30;

        v34 = v42;
      }
      else
      {
        v35 = v50;
        v36 = (void *)sub_1D26CB76C();

        swift_willThrow();
        v34 = 0;
        v31 = MEMORY[0x1E0DEE9D8];
      }
      v9 = v44;
      MEMORY[0x1E0C80A78](v33);
      v23 = (uint64_t)v47;
      *((_QWORD *)&v38 - 2) = v47;
      v16 = sub_1D25C83BC((void (*)(_QWORD *))sub_1D25D55A0, (uint64_t)(&v38 - 2), v31, (uint64_t)v49);
      v42 = v34;
      swift_bridgeObjectRelease();
    }
    else
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962150);
      v15 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
      v16 = swift_allocObject();
      *(_OWORD *)(v16 + 16) = v38;
      v22((char *)(v16 + v15), v23, v4);
      v9 = v44;
    }
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v23, v4);
    sub_1D25F68E4(v16);
    a2 = v45;
    v14 = v48;
  }
  v21 = v14 + 1;
  if (v14 + 1 >= v41)
    goto LABEL_31;
  v20 = *(_QWORD *)(v40 + 8 * v21);
  if (v20)
    goto LABEL_19;
  v21 = v14 + 2;
  if (v14 + 2 >= v41)
    goto LABEL_31;
  v20 = *(_QWORD *)(v40 + 8 * v21);
  if (v20)
    goto LABEL_19;
  v21 = v14 + 3;
  if (v14 + 3 >= v41)
    goto LABEL_31;
  v20 = *(_QWORD *)(v40 + 8 * v21);
  if (v20)
  {
LABEL_19:
    v14 = v21;
    goto LABEL_20;
  }
  v21 = v14 + 4;
  if (v14 + 4 < v41)
  {
    v20 = *(_QWORD *)(v40 + 8 * v21);
    if (!v20)
    {
      while (1)
      {
        v14 = v21 + 1;
        if (__OFADD__(v21, 1))
          break;
        if (v14 >= v41)
          goto LABEL_31;
        v20 = *(_QWORD *)(v40 + 8 * v14);
        ++v21;
        if (v20)
          goto LABEL_20;
      }
LABEL_34:
      __break(1u);
    }
    goto LABEL_19;
  }
LABEL_31:
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v9, 1, 1, v4);
LABEL_32:
  swift_release();
  return v51;
}

id sub_1D25D4724(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  char *v7;
  char *v8;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  int64_t v35;
  uint64_t v36;
  id result;
  int64_t v38;
  int v39;
  int v40;
  char v41;
  char v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  void (*v47)(char *, char *, uint64_t);
  char *v48;
  uint64_t v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  char v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  char *v57;
  uint64_t v58;
  int64_t v59;
  int64_t v60;
  int v61;
  int v62;
  char v63;
  char v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  void (*v69)(char *, char *, uint64_t);
  char *v70;
  uint64_t v71;
  unint64_t v72;
  unint64_t v73;
  uint64_t v74;
  char v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  char *v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  id v83;
  uint64_t v84;
  uint64_t v85;
  objc_class *v86;
  uint64_t v87;
  char *v88;
  char *v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  char *v96;
  char *v97;
  char *v98;
  uint64_t v99;
  char *v100;
  uint64_t v101;
  objc_super v102;
  uint64_t v103;

  v8 = v7;
  v93 = a7;
  v99 = a6;
  v91 = a2;
  v13 = sub_1D26CB880();
  v101 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](v13);
  v96 = (char *)&v87 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = MEMORY[0x1E0C80A78](v14);
  v98 = (char *)&v87 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v97 = (char *)&v87 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v100 = (char *)&v87 - v21;
  v92 = a5;
  v90 = *(_QWORD *)(a5 - 8);
  v22 = MEMORY[0x1E0C80A78](v20);
  v89 = (char *)&v87 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = *(_QWORD *)(a4 - 8);
  MEMORY[0x1E0C80A78](v22);
  v26 = (char *)&v87 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange;
  sub_1D26CC198();
  swift_allocObject();
  v28 = v8;
  *(_QWORD *)&v8[v27] = sub_1D26CC18C();
  v29 = &v28[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate];
  v30 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v29, 1, 1, v30);
  v88 = v28;
  *(_QWORD *)&v28[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_fileManager] = a3;
  v31 = v13;
  (*(void (**)(char *, uint64_t, uint64_t))(v24 + 16))(v26, a1, a4);
  v32 = sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  v33 = a3;
  v34 = sub_1D26CDC38();
  v35 = *(_QWORD *)(v34 + 16);
  v36 = MEMORY[0x1E0DEE9D8];
  v99 = v13;
  if (v35)
  {
    v87 = v32;
    v103 = MEMORY[0x1E0DEE9D8];
    sub_1D258439C(0, v35, 0);
    result = (id)sub_1D25BAB90(v34);
    v38 = (int64_t)result;
    v40 = v39;
    v42 = v41 & 1;
    v94 = v34;
    v95 = v34 + 56;
    v43 = v101;
    while ((v38 & 0x8000000000000000) == 0 && v38 < 1 << *(_BYTE *)(v34 + 32))
    {
      if (((*(_QWORD *)(v95 + (((unint64_t)v38 >> 3) & 0xFFFFFFFFFFFFF8)) >> v38) & 1) == 0)
        goto LABEL_29;
      if (*(_DWORD *)(v34 + 36) != v40)
        goto LABEL_30;
      v44 = *(_QWORD *)(v34 + 48);
      v45 = *(_QWORD *)(v43 + 72);
      v46 = v97;
      (*(void (**)(char *, uint64_t, uint64_t))(v43 + 16))(v97, v44 + v45 * v38, v31);
      v47 = *(void (**)(char *, char *, uint64_t))(v43 + 32);
      v48 = v98;
      v47(v98, v46, v31);
      sub_1D26CB784();
      (*(void (**)(char *, uint64_t))(v43 + 8))(v48, v31);
      v49 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258439C(0, *(_QWORD *)(v49 + 16) + 1, 1);
        v49 = v103;
      }
      v51 = *(_QWORD *)(v49 + 16);
      v50 = *(_QWORD *)(v49 + 24);
      if (v51 >= v50 >> 1)
      {
        sub_1D258439C(v50 > 1, v51 + 1, 1);
        v49 = v103;
      }
      *(_QWORD *)(v49 + 16) = v51 + 1;
      v31 = v99;
      v47((char *)(v49+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ v51 * v45), v100, v99);
      v103 = v49;
      v34 = v94;
      result = (id)sub_1D25BAC30(v38, v40, v42 & 1, v94);
      v38 = (int64_t)result;
      v40 = v52;
      v42 = v53 & 1;
      if (!--v35)
      {
        sub_1D25BC734((uint64_t)result, v52, v53 & 1);
        swift_bridgeObjectRelease();
        v54 = v92;
        v56 = v90;
        v55 = v91;
        v57 = v89;
        v36 = MEMORY[0x1E0DEE9D8];
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
    goto LABEL_31;
  }
  swift_bridgeObjectRelease();
  v49 = MEMORY[0x1E0DEE9D8];
  v54 = v92;
  v56 = v90;
  v55 = v91;
  v57 = v89;
LABEL_14:
  v94 = v49;
  (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v57, v55, v54);
  v58 = sub_1D26CDC38();
  v59 = *(_QWORD *)(v58 + 16);
  if (v59)
  {
    v103 = v36;
    sub_1D258439C(0, v59, 0);
    result = (id)sub_1D25BAB90(v58);
    v60 = (int64_t)result;
    v62 = v61;
    v64 = v63 & 1;
    v100 = (char *)(v58 + 56);
    v95 = v58;
    v65 = v97;
    while ((v60 & 0x8000000000000000) == 0 && v60 < 1 << *(_BYTE *)(v58 + 32))
    {
      if (((*(_QWORD *)&v100[((unint64_t)v60 >> 3) & 0xFFFFFFFFFFFFF8] >> v60) & 1) == 0)
        goto LABEL_32;
      if (*(_DWORD *)(v58 + 36) != v62)
        goto LABEL_33;
      v66 = *(_QWORD *)(v58 + 48);
      v67 = v101;
      v68 = *(_QWORD *)(v101 + 72);
      (*(void (**)(char *, uint64_t, uint64_t))(v101 + 16))(v65, v66 + v68 * v60, v31);
      v69 = *(void (**)(char *, char *, uint64_t))(v67 + 32);
      v70 = v98;
      v69(v98, v65, v31);
      sub_1D26CB784();
      (*(void (**)(char *, uint64_t))(v67 + 8))(v70, v31);
      v71 = v103;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D258439C(0, *(_QWORD *)(v71 + 16) + 1, 1);
        v71 = v103;
      }
      v73 = *(_QWORD *)(v71 + 16);
      v72 = *(_QWORD *)(v71 + 24);
      if (v73 >= v72 >> 1)
      {
        sub_1D258439C(v72 > 1, v73 + 1, 1);
        v71 = v103;
      }
      *(_QWORD *)(v71 + 16) = v73 + 1;
      v31 = v99;
      v69((char *)(v71+ ((*(unsigned __int8 *)(v101 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v101 + 80))+ v73 * v68), v96, v99);
      v103 = v71;
      v58 = v95;
      result = (id)sub_1D25BAC30(v60, v62, v64 & 1, v95);
      v60 = (int64_t)result;
      v62 = v74;
      v64 = v75 & 1;
      if (!--v59)
      {
        sub_1D25BC734((uint64_t)result, v74, v75 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_27;
      }
    }
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  v71 = MEMORY[0x1E0DEE9D8];
LABEL_27:
  v76 = v94;
  v77 = swift_bridgeObjectRetain();
  v78 = sub_1D25F4A5C(v77);
  swift_bridgeObjectRelease();
  v79 = v88;
  v80 = &v88[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove];
  *(_QWORD *)&v88[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove] = v78;
  v81 = swift_bridgeObjectRetain();
  v82 = sub_1D25F4A5C(v81);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v79[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect] = v82;
  swift_beginAccess();
  v83 = objc_msgSend((id)objc_opt_self(), sel_progressWithTotalUnitCount_, *(_QWORD *)(*(_QWORD *)v80 + 16));
  *(_QWORD *)&v79[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress] = v83;
  v84 = sub_1D25BB080(v76, v71);
  swift_bridgeObjectRelease();
  v85 = sub_1D25F4A5C(v84);
  swift_bridgeObjectRelease();
  *(_QWORD *)&v79[OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemoveWithChildrenToKeep] = v85;

  v86 = (objc_class *)type metadata accessor for WidgetReaper();
  v102.receiver = v79;
  v102.super_class = v86;
  return objc_msgSendSuper2(&v102, sel_init);
}

uint64_t sub_1D25D4E30(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25D4E78(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for WidgetReaper()
{
  uint64_t result;

  result = qword_1ED96B0E0;
  if (!qword_1ED96B0E0)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D25D4EFC()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 24))
    swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25D4F30()
{
  uint64_t v0;
  uint64_t (*v1)(uint64_t);
  uint64_t result;

  v1 = *(uint64_t (**)(uint64_t))(v0 + 24);
  result = sub_1D25D2734();
  if (v1)
    return v1(result);
  return result;
}

uint64_t sub_1D25D4F6C()
{
  return sub_1D25D30B4() & 1;
}

uint64_t sub_1D25D4F88()
{
  return sub_1D25D3188() & 1;
}

id sub_1D25D4FA4@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_progress);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t sub_1D25D4FF8@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove, a2);
}

uint64_t sub_1D25D5004(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25D1160(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_candidateURLsToRemove);
}

uint64_t sub_1D25D5020@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  return keypath_get_1Tm(a1, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect, a2);
}

uint64_t keypath_get_1Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, _QWORD *a3@<X8>)
{
  _QWORD *v4;

  v4 = (_QWORD *)(*a1 + *a2);
  swift_beginAccess();
  *a3 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25D507C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25D1160(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit12WidgetReaper_urlsToProtect);
}

uint64_t sub_1D25D5098@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_objectWillChange);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1D25D50F0@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit12WidgetReaper_cutoffDate;
  swift_beginAccess();
  return sub_1D25D4E30(v3, a2);
}

uint64_t sub_1D25D5148()
{
  return type metadata accessor for WidgetReaper();
}

void sub_1D25D5150()
{
  unint64_t v0;

  sub_1D25D53E4();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t method lookup function for WidgetReaper()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetReaper.progress.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x88))();
}

uint64_t dispatch thunk of WidgetReaper.progress.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x90))();
}

uint64_t dispatch thunk of WidgetReaper.progress.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x98))();
}

uint64_t dispatch thunk of WidgetReaper.candidateURLsToRemove.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA0))();
}

uint64_t dispatch thunk of WidgetReaper.candidateURLsToRemove.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xA8))();
}

uint64_t dispatch thunk of WidgetReaper.candidateURLsToRemove.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB0))();
}

uint64_t dispatch thunk of WidgetReaper.urlsToProtect.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xB8))();
}

uint64_t dispatch thunk of WidgetReaper.urlsToProtect.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC0))();
}

uint64_t dispatch thunk of WidgetReaper.urlsToProtect.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of WidgetReaper.objectWillChange.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of WidgetReaper.objectWillChange.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of WidgetReaper.objectWillChange.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of WidgetReaper.cutoffDate.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of WidgetReaper.cutoffDate.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of WidgetReaper.cutoffDate.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of WidgetReaper.__allocating_init<A, B>(candidateURLsToRemove:urlsToProtect:fileManager:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 304))();
}

uint64_t dispatch thunk of WidgetReaper.runAsync(on:completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x138))();
}

uint64_t dispatch thunk of WidgetReaper.runSync()()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x140))();
}

void sub_1D25D53E4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED96F0B0)
  {
    sub_1D26CB9DC();
    v0 = sub_1D26CDF38();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED96F0B0);
  }
}

uint64_t sub_1D25D5438(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t result;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v4);
  v9 = (char *)&v14 - v8;
  v10 = *(_QWORD *)(a1 + 16);
  if (v10)
  {
    v11 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    v12 = *(_QWORD *)(v3 + 72);
    v13 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    do
    {
      v13(v6, v11, v2);
      sub_1D25F0D34((uint64_t)v9, v6);
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v9, v2);
      v11 += v12;
      --v10;
    }
    while (v10);
  }
  return result;
}

unint64_t sub_1D25D5528()
{
  unint64_t result;

  result = qword_1ED96FEC8;
  if (!qword_1ED96FEC8)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96FEC8);
  }
  return result;
}

uint64_t sub_1D25D5564(uint64_t a1)
{
  uint64_t v2;

  v2 = _s22ExtendedAttributeErrorOMa();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D25D55A0()
{
  return sub_1D26CB820();
}

unint64_t sub_1D25D55D0(uint64_t a1)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t result;
  int64_t i;
  uint64_t *v8;
  _OWORD *v9;
  unint64_t v10;
  unint64_t v11;
  int64_t v12;
  unint64_t v13;
  int64_t v14;
  int64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t *v23;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  char v29[40];
  uint64_t v30;
  uint64_t v31;
  __int128 v32;
  __int128 v33;
  _OWORD v34[2];
  _OWORD v35[3];
  __int128 v36[2];
  uint64_t v37;
  __int128 v38;
  _OWORD v39[2];
  uint64_t v40;

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C0C0);
    v2 = (_QWORD *)sub_1D26CE214();
  }
  else
  {
    v2 = (_QWORD *)MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  result = swift_bridgeObjectRetain();
  i = 0;
  if (v5)
    goto LABEL_10;
LABEL_11:
  v12 = i + 1;
  if (__OFADD__(i, 1))
    goto LABEL_35;
  if (v12 >= v27)
    goto LABEL_32;
  v13 = *(_QWORD *)(v28 + 8 * v12);
  v14 = i + 1;
  if (!v13)
  {
    v14 = i + 2;
    if (i + 2 >= v27)
      goto LABEL_32;
    v13 = *(_QWORD *)(v28 + 8 * v14);
    if (!v13)
    {
      v14 = i + 3;
      if (i + 3 >= v27)
        goto LABEL_32;
      v13 = *(_QWORD *)(v28 + 8 * v14);
      if (!v13)
      {
        v14 = i + 4;
        if (i + 4 >= v27)
          goto LABEL_32;
        v13 = *(_QWORD *)(v28 + 8 * v14);
        if (!v13)
        {
          v15 = i + 5;
          if (i + 5 < v27)
          {
            v13 = *(_QWORD *)(v28 + 8 * v15);
            if (v13)
            {
              v14 = i + 5;
              goto LABEL_26;
            }
            while (1)
            {
              v14 = v15 + 1;
              if (__OFADD__(v15, 1))
                goto LABEL_36;
              if (v14 >= v27)
                break;
              v13 = *(_QWORD *)(v28 + 8 * v14);
              ++v15;
              if (v13)
                goto LABEL_26;
            }
          }
LABEL_32:
          sub_1D2592A28();
          return (unint64_t)v2;
        }
      }
    }
  }
LABEL_26:
  v5 = (v13 - 1) & v13;
  v11 = __clz(__rbit64(v13)) + (v14 << 6);
  for (i = v14; ; v11 = v10 | (i << 6))
  {
    v16 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v11);
    v18 = *v16;
    v17 = v16[1];
    sub_1D2538510(*(_QWORD *)(a1 + 56) + 40 * v11, (uint64_t)v39);
    *(_QWORD *)&v38 = v18;
    *((_QWORD *)&v38 + 1) = v17;
    v35[2] = v38;
    v36[0] = v39[0];
    v36[1] = v39[1];
    v37 = v40;
    v30 = v18;
    v31 = v17;
    sub_1D2538F38(v36, (uint64_t)v29);
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
    swift_dynamicCast();
    v20 = v30;
    v19 = v31;
    sub_1D2538448(&v32, v34);
    sub_1D2538448(v34, v35);
    sub_1D2538448(v35, &v33);
    result = sub_1D25891F4(v20, v19);
    v21 = result;
    if ((v22 & 1) != 0)
    {
      v8 = (uint64_t *)(v2[6] + 16 * result);
      swift_bridgeObjectRelease();
      *v8 = v20;
      v8[1] = v19;
      v9 = (_OWORD *)(v2[7] + 32 * v21);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
      result = (unint64_t)sub_1D2538448(&v33, v9);
      if (!v5)
        goto LABEL_11;
      goto LABEL_10;
    }
    if (v2[2] >= v2[3])
      break;
    *(_QWORD *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    v23 = (uint64_t *)(v2[6] + 16 * result);
    *v23 = v20;
    v23[1] = v19;
    result = (unint64_t)sub_1D2538448(&v33, (_OWORD *)(v2[7] + 32 * result));
    v24 = v2[2];
    v25 = __OFADD__(v24, 1);
    v26 = v24 + 1;
    if (v25)
      goto LABEL_34;
    v2[2] = v26;
    if (!v5)
      goto LABEL_11;
LABEL_10:
    v10 = __clz(__rbit64(v5));
    v5 &= v5 - 1;
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_1D25D5944(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t result;
  int64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  int64_t v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  int64_t v27;
  uint64_t v28;
  __int128 v29;
  __int128 v30;
  uint64_t v31;
  _OWORD v32[2];
  __int128 v33;
  __int128 v34;
  uint64_t v35;
  _OWORD v36[2];
  _OWORD v37[3];
  _OWORD v38[2];
  __int128 v39;
  _OWORD v40[2];

  if (*(_QWORD *)(a1 + 16))
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962140);
    v2 = sub_1D26CE214();
  }
  else
  {
    v2 = MEMORY[0x1E0DEE9E0];
  }
  v28 = a1 + 64;
  v3 = -1 << *(_BYTE *)(a1 + 32);
  if (-v3 < 64)
    v4 = ~(-1 << -(char)v3);
  else
    v4 = -1;
  v5 = v4 & *(_QWORD *)(a1 + 64);
  v27 = (unint64_t)(63 - v3) >> 6;
  v6 = v2 + 64;
  swift_bridgeObjectRetain();
  result = swift_retain();
  v8 = 0;
  while (1)
  {
    if (v5)
    {
      v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v13);
    v15 = v8 + 1;
    if (!v14)
    {
      v15 = v8 + 2;
      if (v8 + 2 >= v27)
        goto LABEL_37;
      v14 = *(_QWORD *)(v28 + 8 * v15);
      if (!v14)
      {
        v15 = v8 + 3;
        if (v8 + 3 >= v27)
          goto LABEL_37;
        v14 = *(_QWORD *)(v28 + 8 * v15);
        if (!v14)
        {
          v15 = v8 + 4;
          if (v8 + 4 >= v27)
            goto LABEL_37;
          v14 = *(_QWORD *)(v28 + 8 * v15);
          if (!v14)
            break;
        }
      }
    }
LABEL_27:
    v5 = (v14 - 1) & v14;
    v12 = __clz(__rbit64(v14)) + (v15 << 6);
    v8 = v15;
LABEL_28:
    v17 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v19 = *v17;
    v18 = v17[1];
    sub_1D2537950(*(_QWORD *)(a1 + 56) + 32 * v12, (uint64_t)v40);
    *(_QWORD *)&v39 = v19;
    *((_QWORD *)&v39 + 1) = v18;
    v37[2] = v39;
    v38[0] = v40[0];
    v38[1] = v40[1];
    *(_QWORD *)&v37[0] = v19;
    *((_QWORD *)&v37[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    sub_1D2538448(v38, v32);
    v33 = v29;
    v34 = v30;
    v35 = v31;
    sub_1D2538448(v32, v36);
    v29 = v33;
    v30 = v34;
    v31 = v35;
    sub_1D2538448(v36, v37);
    sub_1D2538448(v37, &v33);
    result = sub_1D26CE04C();
    v20 = -1 << *(_BYTE *)(v2 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6))) != 0)
    {
      v9 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v6 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v6 + 8 * v22);
      }
      while (v26 == -1);
      v9 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    v10 = *(_QWORD *)(v2 + 48) + 40 * v9;
    *(_OWORD *)v10 = v29;
    *(_OWORD *)(v10 + 16) = v30;
    *(_QWORD *)(v10 + 32) = v31;
    result = (uint64_t)sub_1D2538448(&v33, (_OWORD *)(*(_QWORD *)(v2 + 56) + 32 * v9));
    ++*(_QWORD *)(v2 + 16);
  }
  v16 = v8 + 5;
  if (v8 + 5 >= v27)
  {
LABEL_37:
    swift_release();
    sub_1D2592A28();
    return v2;
  }
  v14 = *(_QWORD *)(v28 + 8 * v16);
  if (v14)
  {
    v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    v15 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v15 >= v27)
      goto LABEL_37;
    v14 = *(_QWORD *)(v28 + 8 * v15);
    ++v16;
    if (v14)
      goto LABEL_27;
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t sub_1D25D5D08@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v5 = type metadata accessor for WidgetExtension();
  swift_allocObject();
  result = sub_1D268706C(a1);
  if (!v2)
  {
    v7 = result;
    a2[3] = v5;
    result = sub_1D25369B0(&qword_1ED961CA0, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtension, (uint64_t)&unk_1D26DAFD8);
    a2[4] = result;
    *a2 = v7;
  }
  return result;
}

uint64_t sub_1D25D5DA0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t inited;
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  void *v8;
  uint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  id v17;
  void *v18;
  uint64_t v19;
  id v20;
  id v21;
  NSObject *v22;
  os_log_type_t v23;
  uint8_t *v24;
  _QWORD *v25;
  id v26;
  uint64_t v27;
  void *v28;
  uint64_t v29;
  void *v30;
  id v31;
  uint64_t v33;
  _BYTE v34[32];
  __int128 aBlock;
  __int128 v36;
  void (*v37)(uint64_t, void *);
  uint64_t v38;
  uint64_t v39;

  v1 = v0;
  v39 = *MEMORY[0x1E0C80C00];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9621A0);
  inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1D26D1280;
  sub_1D26CD938();
  *((_QWORD *)&aBlock + 1) = v3;
  sub_1D26CE064();
  v4 = sub_1D26CD2C0();
  *(_QWORD *)(inited + 96) = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  *(_QWORD *)(inited + 72) = v4;
  sub_1D253E294(inited);
  v5 = (void *)objc_opt_self();
  v6 = (void *)sub_1D26CD7DC();
  *(_QWORD *)&aBlock = 0;
  v7 = objc_msgSend(v5, sel_extensionsWithMatchingAttributes_error_, v6, &aBlock);

  v8 = (void *)aBlock;
  if (v7)
  {
    v9 = sub_1D26CDAF4();
    v10 = v8;

    v11 = sub_1D25D668C(v9, &qword_1ED9620B0);
    if (v11)
    {
      v12 = v11;
      if (qword_1ED9621C0 != -1)
        swift_once();
      v13 = sub_1D26CC09C();
      __swift_project_value_buffer(v13, (uint64_t)qword_1ED977CF0);
      v14 = sub_1D26CC084();
      v15 = sub_1D26CDD04();
      if (os_log_type_enabled(v14, v15))
      {
        v16 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)v16 = 0;
        _os_log_impl(&dword_1D2531000, v14, v15, "Received new extension list.", v16, 2u);
        MEMORY[0x1D823A5E0](v16, -1, -1);
      }

      *(_QWORD *)&aBlock = v12;
      swift_retain();
      sub_1D26CC138();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v17 = (id)aBlock;
    v18 = (void *)sub_1D26CB76C();

    swift_willThrow();
    if (qword_1ED9621C0 != -1)
      swift_once();
    v19 = sub_1D26CC09C();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED977CF0);
    v20 = v18;
    v21 = v18;
    v22 = sub_1D26CC084();
    v23 = sub_1D26CDD04();
    if (os_log_type_enabled(v22, v23))
    {
      v33 = v1;
      v24 = (uint8_t *)swift_slowAlloc();
      v25 = (_QWORD *)swift_slowAlloc();
      *(_DWORD *)v24 = 138543362;
      v26 = v18;
      v27 = _swift_stdlib_bridgeErrorToNSError();
      *(_QWORD *)&aBlock = v27;
      sub_1D26CDF50();
      *v25 = v27;
      v1 = v33;

      _os_log_impl(&dword_1D2531000, v22, v23, "Unexpected error fetching initial extension list: %{public}@", v24, 0xCu);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v25, -1, -1);
      MEMORY[0x1D823A5E0](v24, -1, -1);

    }
    else
    {

    }
  }
  v28 = (void *)sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  v29 = swift_allocObject();
  swift_weakInit();
  v37 = sub_1D25E0D48;
  v38 = v29;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  *(_QWORD *)&v36 = sub_1D25D6608;
  *((_QWORD *)&v36 + 1) = &block_descriptor_26;
  v30 = _Block_copy(&aBlock);
  swift_release();
  v31 = objc_msgSend(v5, sel_beginMatchingExtensionsWithAttributes_completion_, v28, v30);
  _Block_release(v30);

  if (v31)
  {
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
  }
  else
  {
    aBlock = 0u;
    v36 = 0u;
  }
  sub_1D25384CC((uint64_t)&aBlock, (uint64_t)v34, &qword_1ED96FCE0);
  swift_beginAccess();
  sub_1D25E0D50((uint64_t)v34, v1 + 24);
  return swift_endAccess();
}

void sub_1D25D62F8(uint64_t a1, void *a2)
{
  id v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;

  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    if (a2)
    {
      v4 = a2;
      if (qword_1ED9621C0 != -1)
        swift_once();
      v5 = sub_1D26CC09C();
      __swift_project_value_buffer(v5, (uint64_t)qword_1ED977CF0);
      v6 = a2;
      v7 = a2;
      v8 = sub_1D26CC084();
      v9 = sub_1D26CDD04();
      if (os_log_type_enabled(v8, v9))
      {
        v10 = (uint8_t *)swift_slowAlloc();
        v11 = (_QWORD *)swift_slowAlloc();
        *(_DWORD *)v10 = 138543362;
        v12 = a2;
        v17 = _swift_stdlib_bridgeErrorToNSError();
        sub_1D26CDF50();
        *v11 = v17;

        _os_log_impl(&dword_1D2531000, v8, v9, "Unexpected error matching extensions %{public}@", v10, 0xCu);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v11, -1, -1);
        MEMORY[0x1D823A5E0](v10, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();

      }
    }
    else
    {
      if (a1 && sub_1D25D668C(a1, &qword_1ED9620B0))
      {
        if (qword_1ED9621C0 != -1)
          swift_once();
        v13 = sub_1D26CC09C();
        __swift_project_value_buffer(v13, (uint64_t)qword_1ED977CF0);
        v14 = sub_1D26CC084();
        v15 = sub_1D26CDD04();
        if (os_log_type_enabled(v14, v15))
        {
          v16 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v16 = 0;
          _os_log_impl(&dword_1D2531000, v14, v15, "Received new extension list.", v16, 2u);
          MEMORY[0x1D823A5E0](v16, -1, -1);
        }

        swift_retain();
        sub_1D26CC138();
        swift_release();
        swift_bridgeObjectRelease();
      }
      swift_release();
    }
  }
}

uint64_t sub_1D25D6608(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(uint64_t, void *);
  uint64_t v5;
  id v6;

  v4 = *(void (**)(uint64_t, void *))(a1 + 32);
  if (a2)
    v5 = sub_1D26CDAF4();
  else
    v5 = 0;
  swift_retain();
  v6 = a3;
  v4(v5, a3);
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25D668C(uint64_t a1, unint64_t *a2)
{
  uint64_t v4;
  uint64_t i;
  _BYTE v7[32];
  uint64_t v8;

  v8 = MEMORY[0x1E0DEE9D8];
  v4 = *(_QWORD *)(a1 + 16);
  sub_1D26CE13C();
  if (!v4)
    return v8;
  for (i = a1 + 32; ; i += 32)
  {
    sub_1D2537950(i, (uint64_t)v7);
    sub_1D2539514(0, a2);
    if (!swift_dynamicCast())
      break;
    sub_1D26CE118();
    sub_1D26CE148();
    sub_1D26CE154();
    sub_1D26CE124();
    if (!--v4)
      return v8;
  }
  swift_release();

  return 0;
}

uint64_t sub_1D25D679C(uint64_t a1)
{
  return sub_1D25D668C(a1, &qword_1ED962880);
}

uint64_t sub_1D25D67B0()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v9[3];
  uint64_t v10;

  swift_beginAccess();
  sub_1D2537078(v0 + 24, (uint64_t)v9, &qword_1ED96FCE0);
  v1 = v10;
  if (v10)
  {
    v2 = __swift_project_boxed_opaque_existential_0(v9, v10);
    v3 = *(_QWORD *)(v1 - 8);
    MEMORY[0x1E0C80A78](v2);
    v5 = (char *)v9 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0) + 16;
    (*(void (**)(char *))(v3 + 16))(v5);
    v6 = sub_1D26CE3B8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v1);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
  }
  else
  {
    v6 = 0;
  }
  objc_msgSend((id)objc_opt_self(), sel_endMatchingExtensions_, v6);
  return swift_unknownObjectRelease();
}

uint64_t sub_1D25D68BC()
{
  uint64_t v0;

  swift_release();
  sub_1D253703C(v0 + 24, &qword_1ED96FCE0);
  return swift_deallocClassInstance();
}

uint64_t sub_1D25D68F0()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627E8);
  sub_1D2536488((unint64_t *)&unk_1ED9627D8, &qword_1ED9627E8, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

id sub_1D25D6960()
{
  return sub_1D25DFA4C();
}

uint64_t sub_1D25D6974()
{
  return sub_1D25D5DA0();
}

uint64_t sub_1D25D6994()
{
  return sub_1D25D67B0();
}

_QWORD *sub_1D25D69B4()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  _QWORD *v3;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  v2 = swift_bridgeObjectRetain();
  v3 = sub_1D2591338(v2);
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(v1 + 6);
  swift_release();
  return v3;
}

uint64_t sub_1D25D6A24@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v2;
  _QWORD *v3;
  uint64_t result;

  v2 = swift_bridgeObjectRetain();
  v3 = sub_1D2591338(v2);
  result = swift_bridgeObjectRelease();
  *a1 = v3;
  return result;
}

uint64_t sub_1D25D6A70()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D25D6AB4(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D25D6AFC())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D25D6B40()
{
  return sub_1D25D6B78((uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__extensionsPublisher, &qword_1ED96FC80, (unint64_t *)&unk_1ED96FC70);
}

uint64_t sub_1D25D6B5C()
{
  return sub_1D25D6B78((uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__addedPublisher, &qword_1ED961B88, &qword_1ED961B80);
}

uint64_t sub_1D25D6B78(uint64_t a1, uint64_t *a2, unint64_t *a3)
{
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1D2536488(a3, a2, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D25D6BE4()
{
  return sub_1D25D6B78((uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__updatedPublisher, &qword_1ED961B88, &qword_1ED961B80);
}

uint64_t sub_1D25D6C00()
{
  return sub_1D25D6B78((uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__removedPublisher, &qword_1ED961B88, &qword_1ED961B80);
}

id ExtensionManager.__allocating_init(queue:remoteWidgetExtensionProvider:)(void *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id result;
  uint64_t v7;
  _BYTE *v8;
  id v9;
  _BYTE v10[40];

  type metadata accessor for _WidgetExtensionFactory();
  v4 = swift_allocObject();
  type metadata accessor for _SystemNSExtensionDiscoverer();
  v5 = swift_allocObject();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627E8);
  swift_allocObject();
  *(_QWORD *)(v5 + 16) = sub_1D26CC150();
  *(_OWORD *)(v5 + 24) = 0u;
  *(_OWORD *)(v5 + 40) = 0u;
  sub_1D2538510(a2, (uint64_t)v10);
  result = objc_msgSend((id)objc_opt_self(), sel_defaultWorkspace);
  if (result)
  {
    v7 = (uint64_t)result;
    v8 = objc_allocWithZone((Class)type metadata accessor for ExtensionManager());
    v9 = sub_1D25E0278(a1, v4, v5, (uint64_t)v10, v7, v8);

    __swift_destroy_boxed_opaque_existential_1(a2);
    return v9;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for _WidgetExtensionFactory()
{
  return objc_opt_self();
}

uint64_t type metadata accessor for _SystemNSExtensionDiscoverer()
{
  return objc_opt_self();
}

id ExtensionManager.__allocating_init(queue:extensionFactory:nsExtensionDiscoverer:remoteWidgetExtensionProvider:applicationWorkspace:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;
  __int128 v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v22;

  v9 = *(_QWORD *)(a2 + 24);
  v20 = *(_QWORD *)(a2 + 32);
  v19 = __swift_mutable_project_boxed_opaque_existential_1(a2, v9);
  v11 = *(_QWORD *)(a3 + 24);
  v10 = *(_QWORD *)(a3 + 32);
  v12 = __swift_mutable_project_boxed_opaque_existential_1(a3, v11);
  v13 = *(_QWORD *)(a5 + 24);
  v14 = *(_QWORD *)(a5 + 32);
  v15 = __swift_mutable_project_boxed_opaque_existential_1(a5, v13);
  *((_QWORD *)&v18 + 1) = v14;
  *(_QWORD *)&v18 = v10;
  v16 = sub_1D25E07FC(a1, v19, v12, a4, v15, v22, v11, v13, v9, v18, v20);

  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v16;
}

uint64_t type metadata accessor for ExtensionManager()
{
  return objc_opt_self();
}

id ExtensionManager.init(queue:extensionFactory:nsExtensionDiscoverer:remoteWidgetExtensionProvider:applicationWorkspace:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  void *v24;
  id v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  _BYTE *v33;

  v32 = a4;
  v8 = *(_QWORD *)(a2 + 24);
  v30 = *(_QWORD *)(a2 + 32);
  v31 = a1;
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a2, v8);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = *(_QWORD *)(a3 + 24);
  v29 = *(_QWORD *)(a3 + 32);
  v14 = __swift_mutable_project_boxed_opaque_existential_1(a3, v13);
  MEMORY[0x1E0C80A78](v14);
  v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v17 + 16))(v16);
  v19 = *(_QWORD *)(a5 + 24);
  v18 = *(_QWORD *)(a5 + 32);
  v20 = __swift_mutable_project_boxed_opaque_existential_1(a5, v19);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v23 + 16))(v22);
  v27 = v18;
  v24 = v31;
  v25 = sub_1D25E0520(v31, (uint64_t)v11, (uint64_t)v16, v32, (uint64_t)v22, v33, v13, v19, v8, v29, v27, v30);

  __swift_destroy_boxed_opaque_existential_1(a5);
  __swift_destroy_boxed_opaque_existential_1(a3);
  __swift_destroy_boxed_opaque_existential_1(a2);
  return v25;
}

id ExtensionManager.__deallocating_deinit()
{
  void *v0;
  uint64_t v1;
  uint64_t v2;
  objc_super v4;
  _QWORD v5[3];
  uint64_t v6;
  uint64_t v7;

  sub_1D2538510((uint64_t)v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscoverer, (uint64_t)v5);
  v1 = v6;
  v2 = v7;
  __swift_project_boxed_opaque_existential_0(v5, v6);
  (*(void (**)(uint64_t, uint64_t))(v2 + 32))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  v4.receiver = v0;
  v4.super_class = (Class)type metadata accessor for ExtensionManager();
  return objc_msgSendSuper2(&v4, sel_dealloc);
}

uint64_t sub_1D25D7214(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD v31[3];
  uint64_t v32;
  uint64_t v33;

  v3 = v2;
  type metadata accessor for ExtensionManager.InitialValueObserver();
  v6 = swift_allocObject();
  sub_1D2549DF0(a1);
  swift_defaultActor_initialize();
  *(_WORD *)(v6 + 128) = 0;
  *(_QWORD *)(v6 + 112) = a1;
  *(_QWORD *)(v6 + 120) = a2;
  sub_1D25495F4(0);
  if (qword_1ED9621C0 != -1)
    swift_once();
  v7 = sub_1D26CC09C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED977CF0);
  v8 = sub_1D26CC084();
  v9 = sub_1D26CDD04();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v10 = 0;
    _os_log_impl(&dword_1D2531000, v8, v9, "Start", v10, 2u);
    MEMORY[0x1D823A5E0](v10, -1, -1);
  }

  sub_1D2538510(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_applicationWorkspace, (uint64_t)v31);
  v11 = v32;
  v12 = v33;
  __swift_project_boxed_opaque_existential_0(v31, v32);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v12 + 16))(v3, v11, v12);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v13 = v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscoverer;
  sub_1D2538510(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscoverer, (uint64_t)v31);
  v14 = v32;
  v15 = v33;
  __swift_project_boxed_opaque_existential_0(v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v15);
  v16 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v17 = swift_allocObject();
  *(_QWORD *)(v17 + 16) = v16;
  *(_QWORD *)(v17 + 24) = v6;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED961B70);
  v18 = MEMORY[0x1E0C95D90];
  sub_1D2536488(&qword_1ED961B68, (uint64_t *)&unk_1ED961B70, MEMORY[0x1E0C95D90]);
  v19 = sub_1D26CC288();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscovererSubscription) = v19;
  swift_release();
  sub_1D2538510(v13, (uint64_t)v31);
  v20 = v32;
  v21 = v33;
  __swift_project_boxed_opaque_existential_0(v31, v32);
  (*(void (**)(uint64_t, uint64_t))(v21 + 24))(v20, v21);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  v22 = (_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionProvider);
  v23 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionProvider + 24);
  v24 = *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionProvider + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionProvider), v23);
  v31[0] = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 8))(v23, v24);
  v25 = swift_allocObject();
  swift_unknownObjectWeakInit();
  v26 = swift_allocObject();
  *(_QWORD *)(v26 + 16) = v25;
  *(_QWORD *)(v26 + 24) = v6;
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963440);
  sub_1D2536488(&qword_1ED963438, &qword_1ED963440, v18);
  v27 = sub_1D26CC288();
  swift_release();
  swift_release();
  *(_QWORD *)(v3 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionSubscription) = v27;
  swift_release();
  v28 = v22[3];
  v29 = v22[4];
  __swift_project_boxed_opaque_existential_0(v22, v28);
  (*(void (**)(uint64_t, uint64_t))(v29 + 16))(v28, v29);
  return swift_release();
}

uint64_t sub_1D25D75D8(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963898);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *a1;
  swift_beginAccess();
  v10 = MEMORY[0x1D823A688](a2 + 16);
  if (v10)
  {
    v11 = (void *)v10;
    sub_1D25D844C(v9);

  }
  v12 = sub_1D26CDBD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v8, 1, 1, v12);
  v13 = (_QWORD *)swift_allocObject();
  v13[2] = 0;
  v13[3] = 0;
  v13[4] = a3;
  swift_retain();
  sub_1D25D783C((uint64_t)v8, (uint64_t)&unk_1EFC82EC8, (uint64_t)v13);
  return swift_release();
}

uint64_t sub_1D25D76E4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1D25D76FC()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 128) = 1;
  v2 = *(void (**)(void))(v1 + 112);
  if (v2 && *(_BYTE *)(*(_QWORD *)(v0 + 16) + 129) == 1)
  {
    v3 = qword_1ED9621C0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_1D26CC09C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED977CF0);
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDD04();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1D2531000, v5, v6, "Completed start.", v7, 2u);
      MEMORY[0x1D823A5E0](v7, -1, -1);
    }

    v2();
    sub_1D25495F4((uint64_t)v2);
    v8 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v1 + 112) = 0;
    *(_QWORD *)(v1 + 120) = 0;
    sub_1D25495F4(v8);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1D25D783C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = sub_1D26CDBD8();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1D26CDBCC();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(_QWORD *)(a3 + 16))
      goto LABEL_5;
    goto LABEL_3;
  }
  sub_1D253703C(a1, &qword_1ED963898);
  if (*(_QWORD *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1D26CDBC0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  v8 = swift_allocObject();
  *(_QWORD *)(v8 + 16) = a2;
  *(_QWORD *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1D25D7988(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  int64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  BOOL v21;
  uint64_t *boxed_opaque_existential_1;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  void *v26;
  uint64_t v27;
  _QWORD *v28;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35[5];
  BOOL v36;
  uint64_t v37;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963898);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v30 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963570);
  v9 = *(_QWORD *)(v34 - 8);
  v10 = MEMORY[0x1E0C80A78](v34);
  v12 = (char *)&v30 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v30 - v13;
  v15 = *a1;
  v16 = a2 + 16;
  v17 = *(_QWORD *)(*a1 + 16);
  v18 = MEMORY[0x1E0DEE9D8];
  if (v17)
  {
    v31 = v16;
    v32 = v8;
    v33 = a3;
    v37 = MEMORY[0x1E0DEE9D8];
    sub_1D25843E4(0, v17, 0);
    v19 = v15 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    v20 = *(_QWORD *)(v9 + 72);
    do
    {
      sub_1D2537078(v19, (uint64_t)v14, &qword_1ED963570);
      sub_1D2537078((uint64_t)v14, (uint64_t)v12, &qword_1ED963570);
      v21 = swift_getEnumCaseMultiPayload() == 1;
      v35[3] = type metadata accessor for RemoteWidgetExtension();
      v35[4] = sub_1D25369B0(&qword_1EFC82E98, (uint64_t (*)(uint64_t))type metadata accessor for RemoteWidgetExtension, (uint64_t)&protocol conformance descriptor for RemoteWidgetExtension);
      boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v35);
      sub_1D25E0E28((uint64_t)v12, (uint64_t)boxed_opaque_existential_1);
      v36 = v21;
      sub_1D253703C((uint64_t)v14, &qword_1ED963570);
      v18 = v37;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D25843E4(0, *(_QWORD *)(v18 + 16) + 1, 1);
        v18 = v37;
      }
      v24 = *(_QWORD *)(v18 + 16);
      v23 = *(_QWORD *)(v18 + 24);
      if (v24 >= v23 >> 1)
      {
        sub_1D25843E4(v23 > 1, v24 + 1, 1);
        v18 = v37;
      }
      *(_QWORD *)(v18 + 16) = v24 + 1;
      sub_1D25384CC((uint64_t)v35, v18 + 48 * v24 + 32, &qword_1ED963578);
      v19 += v20;
      --v17;
    }
    while (v17);
    v8 = v32;
    a3 = v33;
    v16 = v31;
  }
  swift_beginAccess();
  v25 = MEMORY[0x1D823A688](v16);
  if (v25)
  {
    v26 = (void *)v25;
    sub_1D25DBD80(v18);

  }
  swift_bridgeObjectRelease();
  v27 = sub_1D26CDBD8();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(v8, 1, 1, v27);
  v28 = (_QWORD *)swift_allocObject();
  v28[2] = 0;
  v28[3] = 0;
  v28[4] = a3;
  swift_retain();
  sub_1D25D783C((uint64_t)v8, (uint64_t)&unk_1EFC82EA8, (uint64_t)v28);
  return swift_release();
}

uint64_t sub_1D25D7C6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;

  *(_QWORD *)(v4 + 16) = a4;
  return swift_task_switch();
}

uint64_t sub_1D25D7C84()
{
  uint64_t v0;
  uint64_t v1;
  void (*v2)(void);
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;

  v1 = *(_QWORD *)(v0 + 16);
  *(_BYTE *)(v1 + 129) = 1;
  v2 = *(void (**)(void))(v1 + 112);
  if (v2 && *(_BYTE *)(*(_QWORD *)(v0 + 16) + 128) == 1)
  {
    v3 = qword_1ED9621C0;
    swift_retain();
    if (v3 != -1)
      swift_once();
    v4 = sub_1D26CC09C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED977CF0);
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDD04();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v7 = 0;
      _os_log_impl(&dword_1D2531000, v5, v6, "Completed start.", v7, 2u);
      MEMORY[0x1D823A5E0](v7, -1, -1);
    }

    v2();
    sub_1D25495F4((uint64_t)v2);
    v8 = *(_QWORD *)(v1 + 112);
    *(_QWORD *)(v1 + 112) = 0;
    *(_QWORD *)(v1 + 120) = 0;
    sub_1D25495F4(v8);
  }
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_1D25D7DC4@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1D2536368(a1, a2, a3);
}

uint64_t sub_1D25D7DD8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1D26CBC7C();
  sub_1D2535558((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D25D7E90()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1D253453C(&v4);
  os_unfair_lock_unlock(v1 + 6);
  v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1D25D7F0C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1D26CBC7C();
  v5 = *(os_unfair_lock_s **)(v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1D253453C(&v9);
  os_unfair_lock_unlock(v5 + 6);
  v6 = v9;
  swift_release();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  return v6;
}

uint64_t sub_1D25D8008(uint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  unint64_t v4;
  unint64_t v5;
  uint64_t result;
  uint64_t v7;
  uint64_t *v8;
  unint64_t v9;
  uint64_t v10;
  NSObject *v11;
  int v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  id v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  os_log_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint8_t *v33;
  os_log_t v34;
  uint64_t *v35;
  unint64_t v36;
  unint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint64_t v40;

  v2 = v1;
  v4 = sub_1D26CC09C();
  v5 = *(_QWORD *)(v4 - 8);
  result = MEMORY[0x1E0C80A78](v4);
  v8 = (uint64_t *)((char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (a1)
  {
    result = sub_1D25D668C(a1, &qword_1ED9627A0);
    if (result)
    {
      v9 = result;
      if (qword_1ED9621C0 != -1)
        goto LABEL_24;
      while (1)
      {
        v10 = __swift_project_value_buffer(v4, (uint64_t)qword_1ED977CF0);
        (*(void (**)(uint64_t *, uint64_t, unint64_t))(v5 + 16))(v8, v10, v4);
        swift_bridgeObjectRetain_n();
        v11 = sub_1D26CC084();
        v12 = sub_1D26CDD04();
        if (!os_log_type_enabled(v11, (os_log_type_t)v12))
        {

          swift_bridgeObjectRelease_n();
          (*(void (**)(uint64_t *, unint64_t))(v5 + 8))(v8, v4);
LABEL_21:
          sub_1D25D9D58(v9);
          return swift_bridgeObjectRelease();
        }
        v32 = v12;
        v34 = v11;
        v35 = v8;
        v36 = v5;
        v37 = v4;
        v13 = (uint8_t *)swift_slowAlloc();
        v31 = swift_slowAlloc();
        v40 = v31;
        v33 = v13;
        *(_DWORD *)v13 = 136446210;
        if (v9 >> 62)
        {
          swift_bridgeObjectRetain();
          v14 = sub_1D26CE1F0();
          swift_bridgeObjectRelease();
        }
        else
        {
          v14 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFFF8) + 0x10);
        }
        v15 = MEMORY[0x1E0DEE9D8];
        v38 = v2;
        if (!v14)
        {
LABEL_20:
          v25 = v33;
          v39 = v15;
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
          sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
          v26 = sub_1D26CD8E4();
          v28 = v27;
          swift_bridgeObjectRelease();
          v39 = sub_1D2537880(v26, v28, &v40);
          sub_1D26CDF50();
          swift_bridgeObjectRelease_n();
          swift_bridgeObjectRelease();
          v29 = v34;
          _os_log_impl(&dword_1D2531000, v34, (os_log_type_t)v32, "Plugins did uninstall %{public}s", v25, 0xCu);
          v30 = v31;
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v30, -1, -1);
          MEMORY[0x1D823A5E0](v25, -1, -1);

          (*(void (**)(uint64_t *, unint64_t))(v36 + 8))(v35, v37);
          goto LABEL_21;
        }
        v39 = MEMORY[0x1E0DEE9D8];
        v8 = &v39;
        sub_1D258430C(0, v14 & ~(v14 >> 63), 0);
        if (v14 < 0)
          break;
        v16 = 0;
        v15 = v39;
        v2 = v9 & 0xC000000000000001;
        while (v14 != v16)
        {
          if (v2)
            v17 = (uint64_t *)MEMORY[0x1D8239890](v16, v9);
          else
            v17 = (uint64_t *)*(id *)(v9 + 8 * v16 + 32);
          v8 = v17;
          v18 = objc_msgSend(v17, sel_bundleIdentifier, v31);
          if (!v18)
            goto LABEL_27;
          v19 = v18;
          v20 = sub_1D26CD938();
          v22 = v21;

          v39 = v15;
          v4 = *(_QWORD *)(v15 + 16);
          v23 = *(_QWORD *)(v15 + 24);
          v5 = v4 + 1;
          if (v4 >= v23 >> 1)
          {
            v8 = &v39;
            sub_1D258430C(v23 > 1, v4 + 1, 1);
            v15 = v39;
          }
          ++v16;
          *(_QWORD *)(v15 + 16) = v5;
          v24 = v15 + 16 * v4;
          *(_QWORD *)(v24 + 32) = v20;
          *(_QWORD *)(v24 + 40) = v22;
          if (v14 == v16)
            goto LABEL_20;
        }
        __break(1u);
LABEL_24:
        swift_once();
      }
      __break(1u);
LABEL_27:
      result = swift_bridgeObjectRelease();
      __break(1u);
    }
  }
  return result;
}

uint64_t sub_1D25D844C(unint64_t a1)
{
  char *v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  _QWORD *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t result;
  int64_t v26;
  __int128 v27;
  unint64_t i;
  BOOL v29;
  int64_t v30;
  unint64_t v31;
  int64_t v32;
  _QWORD *v33;
  void (*v34)(char *, unint64_t, uint64_t);
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  char *v40;
  NSObject *v41;
  os_log_type_t v42;
  int v43;
  _BOOL4 v44;
  uint64_t v45;
  uint64_t v46;
  unint64_t v47;
  void (*v48)(char *, uint64_t);
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t (*v55)(char *, uint64_t, uint64_t);
  uint64_t v56;
  uint64_t v57;
  void *v58;
  char *v59;
  uint64_t v60;
  unint64_t v61;
  os_log_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65[2];
  __int128 v66;
  char *v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  os_log_t v72;
  uint64_t v73;
  char *v74;
  char *v75;
  uint64_t v76;
  int64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  char *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  int64_t v85;
  _QWORD *v86;
  uint64_t v87;
  _QWORD v88[3];
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;

  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v68 = (char *)v65 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v86 = *(_QWORD **)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v74 = (char *)v65 - v9;
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v65 - v11;
  MEMORY[0x1E0C80A78](v10);
  v80 = (char *)v65 - v13;
  v79 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier;
  v14 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier];
  swift_retain();
  os_unfair_lock_lock(v14 + 6);
  v15 = swift_bridgeObjectRetain();
  v16 = 0;
  v17 = sub_1D25D8B7C(v15);
  os_unfair_lock_unlock(v14 + 6);
  swift_release();
  v18 = sub_1D25F4C2C(v17);
  swift_bridgeObjectRelease();
  v91 = v18;
  v81 = v1;
  v19 = v1;
  v20 = sub_1D25DFBE4(a1, v19, (uint64_t)&v91);
  v65[0] = sub_1D25E00DC((uint64_t)v20, (uint64_t)v19);

  v21 = *(_QWORD *)(v91 + 56);
  v75 = v19;
  v76 = v91 + 56;
  v22 = 1 << *(_BYTE *)(v91 + 32);
  v23 = -1;
  if (v22 < 64)
    v23 = ~(-1 << v22);
  v24 = v23 & v21;
  v67 = &v19[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_applicationWorkspace];
  v77 = (unint64_t)(v22 + 63) >> 6;
  v82 = v91;
  result = swift_bridgeObjectRetain();
  v26 = 0;
  *(_QWORD *)&v27 = 136446466;
  v66 = v27;
  v65[1] = MEMORY[0x1E0DEE9B8] + 8;
  v78 = v12;
  if (v24)
    goto LABEL_6;
LABEL_7:
  v29 = __OFADD__(v26, 1);
  v30 = v26 + 1;
  if (!v29)
  {
    if (v30 >= v77)
      goto LABEL_36;
    v31 = *(_QWORD *)(v76 + 8 * v30);
    if (v31)
    {
LABEL_17:
      v84 = (v31 - 1) & v31;
      v85 = v30;
      for (i = __clz(__rbit64(v31)) + (v30 << 6); ; i = __clz(__rbit64(v24)) | (v26 << 6))
      {
        v33 = v86;
        v34 = (void (*)(char *, unint64_t, uint64_t))v86[2];
        v35 = v80;
        v34(v80, *(_QWORD *)(v82 + 48) + v86[9] * i, v4);
        ((void (*)(char *, char *, uint64_t))v33[4])(v12, v35, v4);
        v36 = *(_QWORD *)&v81[v79];
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v36 + 24));
        sub_1D2536368((uint64_t *)(v36 + 16), (uint64_t)v12, (uint64_t)v88);
        os_unfair_lock_unlock((os_unfair_lock_t)(v36 + 24));
        swift_release();
        v37 = v89;
        sub_1D253703C((uint64_t)v88, &qword_1ED962040);
        if (v37)
        {
          if (qword_1ED9621C0 != -1)
            swift_once();
          v38 = sub_1D26CC09C();
          __swift_project_value_buffer(v38, (uint64_t)qword_1ED977CF0);
          v39 = v74;
          v12 = v78;
          v34(v74, (unint64_t)v78, v4);
          v34(v7, (unint64_t)v12, v4);
          v40 = v75;
          v41 = sub_1D26CC084();
          v42 = sub_1D26CDD04();
          v43 = v42;
          v44 = os_log_type_enabled(v41, v42);
          v83 = v16;
          if (v44)
          {
            v45 = swift_slowAlloc();
            v73 = swift_slowAlloc();
            v87 = v73;
            *(_DWORD *)v45 = v66;
            sub_1D2536488((unint64_t *)&unk_1ED963390, &qword_1ED9633A0, MEMORY[0x1E0D0FB70]);
            v72 = v41;
            v46 = sub_1D26CE370();
            *(_QWORD *)(v45 + 4) = sub_1D2537880(v46, v47, &v87);
            swift_bridgeObjectRelease();
            v48 = (void (*)(char *, uint64_t))v86[1];
            v48(v39, v4);
            *(_WORD *)(v45 + 12) = 2082;
            sub_1D2538510((uint64_t)v67, (uint64_t)v88);
            v49 = v40;
            v50 = v7;
            v51 = v89;
            v52 = v90;
            __swift_project_boxed_opaque_existential_0(v88, v89);
            v71 = v43;
            v53 = v4;
            v54 = v68;
            sub_1D26CBD54();
            v55 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v52 + 8);
            v56 = v51;
            v12 = v78;
            v57 = v52;
            v7 = v50;
            v58 = (void *)v55(v54, v56, v57);
            v59 = v54;
            v4 = v53;
            (*(void (**)(char *, uint64_t))(v69 + 8))(v59, v70);

            __swift_destroy_boxed_opaque_existential_1((uint64_t)v88);
            if (v58)
              v60 = 5457241;
            else
              v60 = 20302;
            if (v58)
              v61 = 0xE300000000000000;
            else
              v61 = 0xE200000000000000;
            *(_QWORD *)(v45 + 14) = sub_1D2537880(v60, v61, &v87);

            swift_bridgeObjectRelease();
            v48(v50, v53);
            v62 = v72;
            _os_log_impl(&dword_1D2531000, v72, (os_log_type_t)v71, "Discovery reports the removal of %{public}s deferring to LS for actual removal (exists in LS? %{public}s", (uint8_t *)v45, 0x16u);
            v63 = v73;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v63, -1, -1);
            MEMORY[0x1D823A5E0](v45, -1, -1);

          }
          else
          {
            v48 = (void (*)(char *, uint64_t))v86[1];
            v48(v39, v4);

            v48(v7, v4);
          }
          v24 = v84;
          v26 = v85;
          result = ((uint64_t (*)(char *, uint64_t))v48)(v12, v4);
          v16 = v83;
          if (!v24)
            goto LABEL_7;
        }
        else
        {
          result = ((uint64_t (*)(char *, uint64_t))v86[1])(v12, v4);
          v24 = v84;
          v26 = v85;
          if (!v84)
            goto LABEL_7;
        }
LABEL_6:
        v84 = (v24 - 1) & v24;
        v85 = v26;
      }
    }
    v32 = v30 + 1;
    if (v30 + 1 >= v77)
      goto LABEL_36;
    v31 = *(_QWORD *)(v76 + 8 * v32);
    if (!v31)
    {
      v32 = v30 + 2;
      if (v30 + 2 >= v77)
        goto LABEL_36;
      v31 = *(_QWORD *)(v76 + 8 * v32);
      if (!v31)
      {
        v32 = v30 + 3;
        if (v30 + 3 < v77)
        {
          v31 = *(_QWORD *)(v76 + 8 * v32);
          if (v31)
            goto LABEL_16;
          while (1)
          {
            v30 = v32 + 1;
            if (__OFADD__(v32, 1))
              goto LABEL_38;
            if (v30 >= v77)
              break;
            v31 = *(_QWORD *)(v76 + 8 * v30);
            ++v32;
            if (v31)
              goto LABEL_17;
          }
        }
LABEL_36:
        swift_release();
        v64 = *(_QWORD *)&v75[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_removedPluginUUIDsByIdentifier];
        swift_retain();
        os_unfair_lock_lock((os_unfair_lock_t)(v64 + 24));
        swift_bridgeObjectRelease();
        *(_QWORD *)(v64 + 16) = MEMORY[0x1E0DEE9E0];
        os_unfair_lock_unlock((os_unfair_lock_t)(v64 + 24));
        swift_release();
        sub_1D25DBD80(v65[0]);
        swift_bridgeObjectRelease();
        return swift_bridgeObjectRelease();
      }
    }
LABEL_16:
    v30 = v32;
    goto LABEL_17;
  }
  __break(1u);
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_1D25D8B7C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  uint64_t v9;
  char *v10;
  int64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t i;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  char v21;
  int64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  unint64_t v33;
  uint64_t v34;
  int64_t v35;
  char *v36;
  uint64_t v37;
  unint64_t v38;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v32 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v36 = (char *)&v31 - v7;
  result = MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v31 - v9;
  v11 = 0;
  v37 = a1;
  v12 = *(_QWORD *)(a1 + 64);
  v34 = a1 + 64;
  v13 = 1 << *(_BYTE *)(a1 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v33 = MEMORY[0x1E0DEE9D8];
  v38 = MEMORY[0x1E0DEE9D8];
  v15 = v14 & v12;
  v35 = (unint64_t)(v13 + 63) >> 6;
  if ((v14 & v12) == 0)
    goto LABEL_7;
LABEL_4:
  v16 = __clz(__rbit64(v15));
  v15 &= v15 - 1;
  for (i = v16 | (v11 << 6); ; i = __clz(__rbit64(v23)) + (v11 << 6))
  {
    v18 = v36;
    v19 = *(_QWORD *)(v3 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v36, *(_QWORD *)(v37 + 48) + v19 * i, v2);
    v20 = *(void (**)(char *, char *, uint64_t))(v3 + 32);
    v20(v10, v18, v2);
    sub_1D26CBD24();
    v21 = sub_1D26CBCAC();
    swift_bridgeObjectRelease();
    if ((v21 & 1) != 0)
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v10, v2);
      if (v15)
        goto LABEL_4;
    }
    else
    {
      v20(v32, v10, v2);
      v25 = v33;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        sub_1D2584400(0, *(_QWORD *)(v25 + 16) + 1, 1);
      v26 = v38;
      v28 = *(_QWORD *)(v38 + 16);
      v27 = *(_QWORD *)(v38 + 24);
      v29 = v28 + 1;
      if (v28 >= v27 >> 1)
      {
        v33 = v28 + 1;
        sub_1D2584400(v27 > 1, v28 + 1, 1);
        v29 = v33;
        v26 = v38;
      }
      *(_QWORD *)(v26 + 16) = v29;
      v30 = *(unsigned __int8 *)(v3 + 80);
      v33 = v26;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v20)(v26 + ((v30 + 32) & ~v30) + v28 * v19, v32, v2);
      if (v15)
        goto LABEL_4;
    }
LABEL_7:
    v22 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v22 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v22);
    ++v11;
    if (!v23)
    {
      v11 = v22 + 1;
      if (v22 + 1 >= v35)
        goto LABEL_29;
      v23 = *(_QWORD *)(v34 + 8 * v11);
      if (!v23)
      {
        v11 = v22 + 2;
        if (v22 + 2 >= v35)
          goto LABEL_29;
        v23 = *(_QWORD *)(v34 + 8 * v11);
        if (!v23)
        {
          v11 = v22 + 3;
          if (v22 + 3 >= v35)
            goto LABEL_29;
          v23 = *(_QWORD *)(v34 + 8 * v11);
          if (!v23)
            break;
        }
      }
    }
LABEL_22:
    v15 = (v23 - 1) & v23;
  }
  v24 = v22 + 4;
  if (v24 >= v35)
  {
LABEL_29:
    swift_release();
    return v33;
  }
  v23 = *(_QWORD *)(v34 + 8 * v24);
  if (v23)
  {
    v11 = v24;
    goto LABEL_22;
  }
  while (1)
  {
    v11 = v24 + 1;
    if (__OFADD__(v24, 1))
      break;
    if (v11 >= v35)
      goto LABEL_29;
    v23 = *(_QWORD *)(v34 + 8 * v11);
    ++v24;
    if (v23)
      goto LABEL_22;
  }
LABEL_31:
  __break(1u);
  return result;
}

void sub_1D25D8EA4(void **a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  void *v20;
  id v21;
  void *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  uint8_t *v29;
  uint64_t v30;
  id v31;
  void *v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char *v36;
  id v37;
  void *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  id v43;
  id v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  id v48;
  id v49;
  id v50;
  NSObject *v51;
  os_log_type_t v52;
  uint64_t v53;
  uint64_t v54;
  id v55;
  void *v56;
  uint64_t v57;
  unint64_t v58;
  unint64_t v59;
  id v60;
  uint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  char *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t v79;
  uint64_t v80;
  __int128 v81[2];
  id v82;

  v72 = a3;
  v75 = a4;
  v6 = sub_1D26CC09C();
  v76 = *(char **)(v6 - 8);
  v77 = v6;
  v7 = MEMORY[0x1E0C80A78](v6);
  v68 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v74 = (char *)&v68 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633B0);
  MEMORY[0x1E0C80A78](v10);
  v71 = (uint64_t)&v68 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v70 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v69 = *(_QWORD *)(v70 - 8);
  MEMORY[0x1E0C80A78](v70);
  v73 = (char *)&v68 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v68 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v68 - v18;
  v20 = *a1;
  v21 = objc_msgSend(v20, sel_identifier);
  if (!v21)
  {
    __break(1u);
    goto LABEL_23;
  }
  v22 = v21;
  sub_1D26CD938();

  sub_1D26CBC7C();
  v23 = &a2[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions];
  swift_beginAccess();
  LOBYTE(v23) = sub_1D25DF594((uint64_t)v19, 0, 0, *v23);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v13);
  if ((v23 & 1) != 0)
  {
    if (qword_1ED9621C0 != -1)
      swift_once();
    v24 = v77;
    v25 = __swift_project_value_buffer(v77, (uint64_t)qword_1ED977CF0);
    v19 = v76;
    v26 = v74;
    (*((void (**)(char *, uint64_t, uint64_t))v76 + 2))(v74, v25, v24);
    v17 = v20;
    v27 = sub_1D26CC084();
    v28 = sub_1D26CDD04();
    if (!os_log_type_enabled(v27, v28))
    {

      (*((void (**)(char *, uint64_t))v19 + 1))(v26, v24);
      goto LABEL_16;
    }
    v29 = (uint8_t *)swift_slowAlloc();
    v30 = swift_slowAlloc();
    *(_QWORD *)&v81[0] = v30;
    *(_DWORD *)v29 = 136446210;
    v31 = objc_msgSend(v17, sel_identifier);
    if (v31)
    {
      v32 = v31;
      v33 = sub_1D26CD938();
      v35 = v34;

      *(_QWORD *)&v78 = sub_1D2537880(v33, v35, (uint64_t *)v81);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v27, v28, "Ignoring restricted or unknown extension %{public}s", v29, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v30, -1, -1);
      MEMORY[0x1D823A5E0](v29, -1, -1);

      (*((void (**)(char *, uint64_t))v76 + 1))(v74, v77);
LABEL_16:
      v63 = v75;
      *(_QWORD *)(v75 + 32) = 0;
      *(_OWORD *)v63 = 0u;
      *(_OWORD *)(v63 + 16) = 0u;
      *(_BYTE *)(v63 + 40) = -1;
      return;
    }
    goto LABEL_24;
  }
  v36 = a2;
  v37 = objc_msgSend(v20, sel_identifier);
  if (!v37)
  {
LABEL_23:
    __break(1u);
LABEL_24:

    __break(1u);
    goto LABEL_25;
  }
  v38 = v37;
  sub_1D26CD938();

  sub_1D26CBC7C();
  v39 = (uint64_t)v73;
  sub_1D26CBD48();
  v40 = v71;
  sub_1D25DEB88(v39, v71);
  sub_1D253703C(v40, &qword_1ED9633B0);
  sub_1D2538510((uint64_t)&v36[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionFactory], (uint64_t)&v78);
  v41 = v79;
  v42 = v80;
  __swift_project_boxed_opaque_existential_0(&v78, v79);
  v43 = v82;
  (*(void (**)(__int128 *__return_ptr, void *, uint64_t, uint64_t))(v42 + 8))(v81, v20, v41, v42);
  v44 = v43;
  if (!v43)
  {
    (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v39, v70);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
    v64 = v75;
    sub_1D2538F38(v81, v75);
    *(_BYTE *)(v64 + 40) = 0;
    return;
  }
  v74 = v36;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v78);
  if (qword_1ED9621C0 != -1)
    swift_once();
  v45 = v77;
  v46 = __swift_project_value_buffer(v77, (uint64_t)qword_1ED977CF0);
  v19 = v76;
  v47 = v68;
  (*((void (**)(char *, uint64_t, uint64_t))v76 + 2))(v68, v46, v45);
  v48 = v20;
  v49 = v43;
  v17 = (char *)v48;
  v50 = v43;
  v51 = sub_1D26CC084();
  v52 = sub_1D26CDCEC();
  if (os_log_type_enabled(v51, v52))
  {
    v82 = v43;
    v53 = swift_slowAlloc();
    v54 = swift_slowAlloc();
    *(_QWORD *)&v81[0] = v54;
    *(_DWORD *)v53 = 136446466;
    v55 = objc_msgSend(v17, sel_identifier);
    if (!v55)
    {
LABEL_25:

      __break(1u);
      os_unfair_lock_unlock((os_unfair_lock_t)v19);
      __break(1u);
      return;
    }
    v56 = v55;
    v57 = sub_1D26CD938();
    v59 = v58;

    *(_QWORD *)&v78 = sub_1D2537880(v57, v59, (uint64_t *)v81);
    sub_1D26CDF50();

    swift_bridgeObjectRelease();
    *(_WORD *)(v53 + 12) = 2080;
    v44 = v82;
    *(_QWORD *)&v78 = v82;
    v60 = v82;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
    v61 = sub_1D26CD98C();
    *(_QWORD *)&v78 = sub_1D2537880(v61, v62, (uint64_t *)v81);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();

    _os_log_impl(&dword_1D2531000, v51, v52, "Failed to handle new extension of %{public}s due to %s, removing existing version as a safeguard", (uint8_t *)v53, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v54, -1, -1);
    MEMORY[0x1D823A5E0](v53, -1, -1);

    (*((void (**)(char *, uint64_t))v76 + 1))(v68, v77);
    v39 = (uint64_t)v73;
  }
  else
  {

    (*((void (**)(char *, uint64_t))v19 + 1))(v47, v45);
  }
  v65 = *(_QWORD *)&v74[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v65 + 24));
  sub_1D2536368((uint64_t *)(v65 + 16), v39, (uint64_t)&v78);
  os_unfair_lock_unlock((os_unfair_lock_t)(v65 + 24));
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v69 + 8))(v39, v70);
  if (v79)
  {
    sub_1D2538F38(&v78, (uint64_t)v81);
    v66 = v75;
    sub_1D2538F38(v81, v75);
    *(_BYTE *)(v66 + 40) = 1;
  }
  else
  {
    sub_1D253703C((uint64_t)&v78, &qword_1ED962040);
    v67 = v75;
    *(_QWORD *)(v75 + 32) = 0;
    *(_OWORD *)v67 = 0u;
    *(_OWORD *)(v67 + 16) = 0u;
    *(_BYTE *)(v67 + 40) = -1;
  }
}

void sub_1D25D9714(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  void (*v23)(char *, uint64_t);
  uint64_t v24;
  void (*v25)(char *, char *, uint64_t);
  char *v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t (*v33)(uint64_t, uint64_t);
  uint64_t v34;
  _QWORD *v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  _QWORD v40[2];
  _QWORD *v41;
  int v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  uint64_t v50;
  char v51;
  _QWORD v52[3];
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CBA24();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v40 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v40 - v14;
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v40 - v16;
  sub_1D2537078(a1, (uint64_t)&v48, &qword_1ED963578);
  if (v51 == 1)
  {
    sub_1D253703C((uint64_t)&v48, &qword_1ED963578);
    return;
  }
  v45 = v12;
  v46 = v17;
  sub_1D2538F38(&v48, (uint64_t)v52);
  v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_removedPluginUUIDsByIdentifier);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v18 + 24));
  sub_1D25D9BD0((uint64_t *)(v18 + 16), v52, (uint64_t)v7);
  if (v2)
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
    __break(1u);
  }
  else
  {
    os_unfair_lock_unlock((os_unfair_lock_t)(v18 + 24));
    swift_release();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8) == 1)
    {
      sub_1D253703C((uint64_t)v7, &qword_1ED961B18);
LABEL_12:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
      return;
    }
    v19 = v46;
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v46, v7, v8);
    v20 = v53;
    v21 = v54;
    __swift_project_boxed_opaque_existential_0(v52, v53);
    (*(void (**)(uint64_t, uint64_t))(v21 + 64))(v20, v21);
    v22 = sub_1D26CBA00();
    v23 = *(void (**)(char *, uint64_t))(v9 + 8);
    v23(v15, v8);
    if ((v22 & 1) == 0)
    {
      v23(v19, v8);
      goto LABEL_12;
    }
    if (qword_1ED9621C0 != -1)
      swift_once();
    v24 = sub_1D26CC09C();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED977CF0);
    sub_1D2538510((uint64_t)v52, (uint64_t)&v48);
    v25 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
    v26 = v45;
    v25(v45, v19, v8);
    v27 = sub_1D26CC084();
    v28 = sub_1D26CDD04();
    v29 = v28;
    if (os_log_type_enabled(v27, v28))
    {
      v30 = swift_slowAlloc();
      v41 = (_QWORD *)swift_slowAlloc();
      v44 = swift_slowAlloc();
      v55 = v44;
      *(_DWORD *)v30 = 138543618;
      v40[1] = v30 + 4;
      v43 = 0;
      v32 = v49;
      v31 = v50;
      __swift_project_boxed_opaque_existential_0(&v48, v49);
      v33 = *(uint64_t (**)(uint64_t, uint64_t))(v31 + 40);
      v42 = v29;
      v34 = v33(v32, v31);
      v47 = v34;
      sub_1D26CDF50();
      v35 = v41;
      *v41 = v34;
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
      *(_WORD *)(v30 + 12) = 2082;
      sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
      v36 = sub_1D26CE370();
      v47 = sub_1D2537880(v36, v37, &v55);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v23(v26, v8);
      _os_log_impl(&dword_1D2531000, v27, (os_log_type_t)v42, "Ignoring previously removed extension %{public}@, pluginUUID: %{public}s", (uint8_t *)v30, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v35, -1, -1);
      v38 = v44;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v38, -1, -1);
      MEMORY[0x1D823A5E0](v30, -1, -1);

      v39 = v46;
    }
    else
    {

      v23(v26, v8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v48);
      v39 = v19;
    }
    v23(v39, v8);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v52);
  }
}

uint64_t sub_1D25D9BD0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v23 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v10);
  v12 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v11 + 40))(v10, v11);
  v13 = &v12[*MEMORY[0x1E0D0FE30]];
  swift_beginAccess();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v9, v13, v6);

  v14 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v15 = sub_1D25898B8((uint64_t)v9), (v16 & 1) != 0))
  {
    v17 = v15;
    v18 = *(_QWORD *)(v14 + 56);
    v19 = sub_1D26CBA24();
    v20 = *(_QWORD *)(v19 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 16))(a3, v18 + *(_QWORD *)(v20 + 72) * v17, v19);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v20 + 56))(a3, 0, 1, v19);
  }
  else
  {
    v21 = sub_1D26CBA24();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 56))(a3, 1, 1, v21);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

void sub_1D25D9D58(unint64_t a1)
{
  char *v1;
  uint64_t v3;
  void (**v4)(char *, uint64_t);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void (**v12)(char *, uint64_t);
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  void (**v35)(char *, uint64_t);
  __int128 v36;
  void (**v37)(char *, uint64_t);
  id v39;
  void *v40;
  unint64_t v41;
  char v42;
  void *v43;
  uint64_t (*v44)();
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  id v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  id v53;
  void *v54;
  id v55;
  uint64_t v56;
  void (*v57)(char *, uint64_t);
  void (*v58)(char *, uint64_t);
  void (**v59)(char *, uint64_t);
  char *v60;
  uint64_t v61;
  NSObject *v62;
  int v63;
  uint64_t v64;
  id v65;
  void *v66;
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  id v70;
  void *v71;
  unint64_t v72;
  _QWORD *v73;
  void (*v74)(char *, unint64_t, uint64_t);
  char *v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  unint64_t v79;
  unint64_t v80;
  os_log_t v81;
  uint64_t v82;
  uint64_t v83;
  _QWORD *v84;
  void (**v85)(char *, uint64_t);
  unsigned int v86;
  char *v87;
  void (**v88)(char *, uint64_t);
  unsigned int v89;
  unint64_t v90;
  char v91;
  void (*v92)(unint64_t, uint64_t);
  uint64_t v93;
  _QWORD *v94;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v96;
  unint64_t v97;
  os_unfair_lock_s *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;
  void (**v102)(char *, uint64_t);
  NSObject *v103;
  uint64_t v104;
  uint64_t v105;
  id v106;
  void *v107;
  void (**v108)(char *, uint64_t);
  uint64_t v109;
  void (**v110)(char *, uint64_t);
  id v111;
  void *v112;
  unint64_t v113;
  _QWORD *v114;
  char *v115;
  uint64_t v116;
  char *v117;
  uint64_t v118;
  unint64_t v119;
  unint64_t v120;
  void (**v121)(char *, uint64_t);
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  unint64_t v125;
  unint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  os_log_t v131;
  void (**v132)(char *, uint64_t);
  os_unfair_lock_s *v133;
  uint64_t v134;
  void (**v135)(char *, uint64_t);
  uint64_t v136;
  void (**v137)(char *, uint64_t);
  BOOL v138;
  uint64_t v139;
  void *v140;
  void *v141;
  _QWORD *v142;
  void *v143;
  id v144;
  id v145;
  char *v146;
  char *v147;
  uint64_t v148;
  uint64_t v149;
  char *v150;
  uint64_t v151;
  uint64_t v152;
  char *v153;
  void (**v154)(char *, uint64_t);
  uint64_t v155;
  __int128 v156;
  char *v157;
  char *v158;
  __int128 v159;
  char *v160;
  char *v161;
  uint64_t v162;
  char *v163;
  uint64_t v164;
  uint64_t v165;
  _QWORD *v166;
  void (**v167)(char *, uint64_t);
  os_log_t v168;
  uint64_t v169;
  uint64_t *v170;
  char *v171;
  unint64_t v172;
  void (**v173)(char *, uint64_t);
  void (**v174)(char *, uint64_t);
  char *v175;
  uint64_t v176;
  unint64_t v177;
  uint64_t v178;
  os_log_t v179;
  char *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  char *v186;
  char *v187;
  char *v188;
  uint64_t v189;
  unint64_t v190;
  _QWORD *v191;
  void (**v192)(char *, uint64_t);
  unint64_t v193;
  uint64_t v194;
  uint64_t v195;
  char *v196;
  void (**v197)(char *, uint64_t);
  uint64_t v198;
  void (**v199)(char *, uint64_t);
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t aBlock[3];
  void *v204;
  uint64_t (*v205)();
  _QWORD *v206;
  __int128 v207;
  uint64_t v208;
  uint64_t v209;

  v3 = sub_1D26CD074();
  v4 = *(void (***)(char *, uint64_t))(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v153 = (char *)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v152 = sub_1D26CD0C8();
  v151 = *(_QWORD *)(v152 - 8);
  MEMORY[0x1E0C80A78](v152);
  v150 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC09C();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v171 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (void (**)(char *, uint64_t))((char *)&v148 - v11);
  v184 = sub_1D26CBA24();
  v191 = *(_QWORD **)(v184 - 8);
  v13 = MEMORY[0x1E0C80A78](v184);
  v157 = (char *)&v148 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v13);
  v160 = (char *)&v148 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (unint64_t)&v148 - v17;
  v176 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED9621B0);
  MEMORY[0x1E0C80A78](v176);
  v181 = (uint64_t)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  v21 = MEMORY[0x1E0C80A78](v20);
  v158 = (char *)&v148 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = MEMORY[0x1E0C80A78](v21);
  v161 = (char *)&v148 - v24;
  v25 = MEMORY[0x1E0C80A78](v23);
  v180 = (char *)&v148 - v26;
  v27 = MEMORY[0x1E0C80A78](v25);
  v183 = (uint64_t)&v148 - v28;
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v148 - v29;
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  MEMORY[0x1E0C80A78](v31);
  v196 = (char *)&v148 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v195 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v194 = *(_QWORD *)(v195 - 8);
  MEMORY[0x1E0C80A78](v195);
  v186 = (char *)&v148 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  v169 = swift_allocObject();
  *(_QWORD *)(v169 + 16) = MEMORY[0x1E0DEE9D8];
  v162 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier;
  v175 = v1;
  v34 = *(_QWORD *)&v1[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v34 + 24));
  v197 = *(void (***)(char *, uint64_t))(v34 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v34 + 24));
  swift_release();
  v190 = a1;
  if (a1 >> 62)
  {
LABEL_76:
    swift_bridgeObjectRetain();
    v35 = (void (**)(char *, uint64_t))sub_1D26CE1F0();
  }
  else
  {
    v35 = *(void (***)(char *, uint64_t))((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
  }
  v154 = v4;
  if (!v35)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_73:
    v139 = swift_allocObject();
    *(_BYTE *)(v139 + 16) = 0;
    v140 = v175;
    v141 = *(void **)&v175[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_queue];
    v142 = (_QWORD *)swift_allocObject();
    v142[2] = v169;
    v142[3] = v139;
    v142[4] = v140;
    v205 = sub_1D25E0E1C;
    v206 = v142;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = (uint64_t)sub_1D25351AC;
    v204 = &block_descriptor_41;
    v143 = _Block_copy(aBlock);
    v144 = v141;
    swift_retain();
    swift_retain();
    v145 = v140;
    v146 = v150;
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    *(_QWORD *)&v207 = MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
    v147 = v153;
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v146, v147, v143);
    _Block_release(v143);

    v154[1](v147, v3);
    (*(void (**)(char *, uint64_t))(v151 + 8))(v146, v152);
    swift_release();
    swift_release();
    swift_release();
    return;
  }
  v172 = v18;
  v174 = v12;
  v149 = v3;
  v18 = 0;
  v185 = 0;
  v164 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_removedPluginUUIDsByIdentifier;
  v193 = v190 & 0xC000000000000001;
  v178 = v190 & 0xFFFFFFFFFFFFFF8;
  v177 = v190 + 32;
  v170 = (uint64_t *)&v199;
  v163 = (char *)&v207 + 8;
  *(_QWORD *)&v36 = 136446466;
  v156 = v36;
  v155 = MEMORY[0x1E0DEE9B8] + 8;
  *(_QWORD *)&v36 = 136446978;
  v159 = v36;
  v189 = v7;
  v182 = v8;
  v188 = v30;
  v3 = (uint64_t)v186;
  v12 = v197;
  v192 = v35;
  while (1)
  {
    if (v193)
    {
      v37 = (void (**)(char *, uint64_t))MEMORY[0x1D8239890](v18, v190);
    }
    else
    {
      if (v18 >= *(_QWORD *)(v178 + 16))
        goto LABEL_75;
      v37 = (void (**)(char *, uint64_t))*(id *)(v177 + 8 * v18);
    }
    v4 = v37;
    if (__OFADD__(v18++, 1))
    {
      __break(1u);
LABEL_75:
      __break(1u);
      goto LABEL_76;
    }
    v39 = objc_msgSend(v37, sel_bundleIdentifier);
    if (!v39)
      break;
    v40 = v39;
    sub_1D26CD938();

    sub_1D26CBC7C();
    sub_1D26CBD48();
    if (!v12[2] || (v41 = sub_1D25363D0(v3), (v42 & 1) == 0))
    {
      v53 = objc_msgSend(v4, sel_extensionPoint);
      if (v53)
      {
        v54 = v53;
        v55 = objc_msgSend(v53, sel_identifier);

        if (v55)
        {
          v56 = sub_1D26CD938();
          v58 = v57;

          v59 = (void (**)(char *, uint64_t))sub_1D26CD2C0();
          v35 = v59;
          v12 = (void (**)(char *, uint64_t))v59[2];
          if (v12)
          {
            if (v59[4] == (void (*)(char *, uint64_t))v56 && v59[5] == v58 || (sub_1D26CE3D0() & 1) != 0)
            {
LABEL_24:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v60 = v171;
              if (qword_1ED9621C0 != -1)
                swift_once();
              v61 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED977CF0);
              (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v60, v61, v7);
              v35 = v4;
              v62 = sub_1D26CC084();
              v63 = sub_1D26CDD04();
              if (os_log_type_enabled(v62, (os_log_type_t)v63))
              {
                LODWORD(v187) = v63;
                v64 = swift_slowAlloc();
                v4 = (void (**)(char *, uint64_t))swift_slowAlloc();
                aBlock[0] = (uint64_t)v4;
                *(_DWORD *)v64 = v156;
                v65 = objc_msgSend(v35, sel_bundleIdentifier);
                if (!v65)
                  goto LABEL_84;
                v66 = v65;
                v179 = v62;
                v67 = sub_1D26CD938();
                v69 = v68;

                *(_QWORD *)&v207 = sub_1D2537880(v67, v69, aBlock);
                sub_1D26CDF50();

                swift_bridgeObjectRelease();
                *(_WORD *)(v64 + 12) = 2082;
                v70 = objc_msgSend(v35, sel_pluginUUID);
                if (!v70)
                  goto LABEL_82;
                v71 = v70;
                v72 = v172;
                sub_1D26CBA0C();

                v73 = v191;
                v74 = (void (*)(_QWORD, _QWORD, _QWORD))v191[4];
                v75 = v158;
                v76 = v184;
                v74(v158, v72, v184);
                ((void (*)(char *, _QWORD, uint64_t, uint64_t))v73[7])(v75, 0, 1, v76);
                if (((unsigned int (*)(char *, uint64_t, uint64_t))v73[6])(v75, 1, v76) == 1)
                  goto LABEL_83;
                v77 = v157;
                v74(v157, v75, v76);
                sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
                v78 = sub_1D26CE370();
                v80 = v79;
                ((void (*)(char *, uint64_t))v73[1])(v77, v76);
                *(_QWORD *)&v207 = sub_1D2537880(v78, v80, aBlock);
                sub_1D26CDF50();

                swift_bridgeObjectRelease();
                v81 = v179;
                _os_log_impl(&dword_1D2531000, v179, (os_log_type_t)v187, "Pending removal of extension %{public}s, pluginUUID: %{public}s without existing widget extension", (uint8_t *)v64, 0x16u);
                swift_arrayDestroy();
                MEMORY[0x1D823A5E0](v4, -1, -1);
                MEMORY[0x1D823A5E0](v64, -1, -1);

                v8 = v182;
                (*(void (**)(char *, uint64_t))(v182 + 8))(v171, v189);
                v30 = v188;
                v3 = (uint64_t)v186;
              }
              else
              {

                (*(void (**)(char *, uint64_t))(v8 + 8))(v60, v7);
              }
              v133 = *(os_unfair_lock_s **)&v175[v164];
              swift_retain();
              os_unfair_lock_lock(v133 + 6);
              v134 = v185;
              sub_1D25DB48C((uint64_t)&v133[4], v3, v35);
              v185 = v134;
              os_unfair_lock_unlock(v133 + 6);
              swift_release();

              (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v3, v195);
              v7 = v189;
              goto LABEL_56;
            }
            if (v12 != (void (**)(char *, uint64_t))1)
            {
              if (v35[6] == (void (*)(char *, uint64_t))v56 && v35[7] == v58 || (sub_1D26CE3D0() & 1) != 0)
                goto LABEL_24;
              if (v12 != (void (**)(char *, uint64_t))2)
              {
                v135 = v35 + 9;
                v136 = 2;
                while (1)
                {
                  v137 = (void (**)(char *, uint64_t))(v136 + 1);
                  if (__OFADD__(v136, 1))
                    break;
                  v138 = *(v135 - 1) == (void (*)(char *, uint64_t))v56 && *v135 == v58;
                  if (v138 || (sub_1D26CE3D0() & 1) != 0)
                  {
                    v7 = v189;
                    v8 = v182;
                    v3 = (uint64_t)v186;
                    goto LABEL_24;
                  }
                  v135 += 2;
                  ++v136;
                  if (v137 == v12)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    v7 = v189;
                    v8 = v182;
                    v3 = (uint64_t)v186;
                    goto LABEL_55;
                  }
                }
                __break(1u);
                break;
              }
            }
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
        }
      }
LABEL_55:

      (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v3, v195);
LABEL_56:
      v12 = v197;
      goto LABEL_7;
    }
    v187 = (char *)v18;
    sub_1D2538510((uint64_t)v12[7] + 40 * v41, (uint64_t)&v207);
    sub_1D2538F38(&v207, (uint64_t)aBlock);
    v43 = v204;
    v44 = v205;
    __swift_project_boxed_opaque_existential_0(aBlock, (uint64_t)v204);
    (*((void (**)(void *, uint64_t (*)()))v44 + 8))(v43, v44);
    v45 = v191[7];
    v46 = 1;
    v47 = v184;
    ((void (*)(char *, _QWORD, uint64_t, uint64_t))v45)(v30, 0, 1, v184);
    v48 = objc_msgSend(v4, sel_pluginUUID);
    if (v48)
    {
      v49 = v48;
      v50 = v183;
      sub_1D26CBA0C();

      v46 = 0;
      v51 = v181;
      v52 = (uint64_t)v180;
    }
    else
    {
      v51 = v181;
      v52 = (uint64_t)v180;
      v50 = v183;
    }
    v179 = v45;
    ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v45)(v50, v46, 1, v47);
    v82 = v51 + *(int *)(v176 + 48);
    v83 = (uint64_t)v188;
    sub_1D2537078((uint64_t)v188, v51, &qword_1ED961B18);
    sub_1D2537078(v50, v82, &qword_1ED961B18);
    v84 = v191;
    v85 = (void (**)(char *, uint64_t))v191[6];
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v85)(v51, 1, v47) == 1)
    {
      sub_1D253703C(v50, &qword_1ED961B18);
      sub_1D253703C(v83, &qword_1ED961B18);
      v86 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v85)(v82, 1, v47);
      v87 = (char *)v83;
      v3 = (uint64_t)v186;
      v88 = v85;
      v30 = v87;
      v18 = (unint64_t)v187;
      if (v86 != 1)
        goto LABEL_37;
      sub_1D253703C(v51, &qword_1ED961B18);
    }
    else
    {
      sub_1D2537078(v51, v52, &qword_1ED961B18);
      v173 = v85;
      v89 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v85)(v82, 1, v47);
      v18 = (unint64_t)v187;
      if (v89 == 1)
      {
        sub_1D253703C(v183, &qword_1ED961B18);
        v30 = v188;
        sub_1D253703C((uint64_t)v188, &qword_1ED961B18);
        ((void (*)(uint64_t, uint64_t))v84[1])(v52, v47);
        v3 = (uint64_t)v186;
        v88 = v173;
LABEL_37:
        sub_1D253703C(v51, (uint64_t *)&unk_1ED9621B0);
        v7 = v189;
LABEL_44:
        v12 = v197;
        if (qword_1ED9621C0 != -1)
          swift_once();
        v100 = __swift_project_value_buffer(v7, (uint64_t)qword_1ED977CF0);
        v101 = v182;
        v102 = v174;
        (*(void (**)(void (**)(char *, uint64_t), uint64_t, uint64_t))(v182 + 16))(v174, v100, v7);
        sub_1D2538510((uint64_t)aBlock, (uint64_t)&v207);
        sub_1D2538510((uint64_t)aBlock, (uint64_t)&v200);
        v4 = v4;
        v103 = sub_1D26CC084();
        LODWORD(v187) = sub_1D26CDD04();
        if (os_log_type_enabled(v103, (os_log_type_t)v187))
        {
          v104 = swift_slowAlloc();
          v105 = swift_slowAlloc();
          v35 = (void (**)(char *, uint64_t))swift_slowAlloc();
          v199 = v35;
          *(_DWORD *)v104 = v159;
          v106 = objc_msgSend(v4, sel_bundleIdentifier);
          v12 = v4;
          if (!v106)
            goto LABEL_79;
          v107 = v106;
          v166 = (_QWORD *)v105;
          v167 = v35;
          v108 = v88;
          v168 = v103;
          v109 = sub_1D26CD938();
          v35 = v110;

          v198 = sub_1D2537880(v109, (unint64_t)v35, (uint64_t *)&v199);
          sub_1D26CDF50();

          swift_bridgeObjectRelease();
          *(_WORD *)(v104 + 12) = 2082;
          v173 = v12;
          v111 = objc_msgSend(v12, sel_pluginUUID);
          if (!v111)
            goto LABEL_80;
          v112 = v111;
          v113 = v172;
          sub_1D26CBA0C();

          v114 = v191;
          v35 = (void (**)(char *, uint64_t))v191[4];
          v115 = v161;
          v116 = v184;
          ((void (*)(char *, unint64_t, uint64_t))v35)(v161, v113, v184);
          ((void (*)(char *, _QWORD, uint64_t, uint64_t))v179)(v115, 0, 1, v116);
          if (((unsigned int (*)(char *, uint64_t, uint64_t))v108)(v115, 1, v116) == 1)
            goto LABEL_81;
          v165 = v104 + 14;
          v117 = v160;
          ((void (*)(char *, char *, uint64_t))v35)(v160, v115, v116);
          sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
          v118 = sub_1D26CE370();
          v120 = v119;
          v179 = (os_log_t)v114[1];
          ((void (*)(char *, uint64_t))v179)(v117, v116);
          v198 = sub_1D2537880(v118, v120, (uint64_t *)&v199);
          v4 = (void (**)(char *, uint64_t))v170;
          sub_1D26CDF50();
          v121 = v173;

          swift_bridgeObjectRelease();
          *(_WORD *)(v104 + 22) = 2082;
          v122 = v208;
          v123 = v209;
          __swift_project_boxed_opaque_existential_0(&v207, v208);
          (*(void (**)(uint64_t, uint64_t))(v123 + 64))(v122, v123);
          v124 = sub_1D26CE370();
          v126 = v125;
          ((void (*)(unint64_t, uint64_t))v179)(v113, v116);
          v198 = sub_1D2537880(v124, v126, (uint64_t *)&v199);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v207);
          *(_WORD *)(v104 + 32) = 2114;
          v127 = v201;
          v128 = v202;
          __swift_project_boxed_opaque_existential_0(&v200, v201);
          v129 = (*(uint64_t (**)(uint64_t, uint64_t))(v128 + 40))(v127, v128);
          v198 = v129;
          sub_1D26CDF50();
          v130 = v166;
          *v166 = v129;
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);
          v131 = v168;
          _os_log_impl(&dword_1D2531000, v168, (os_log_type_t)v187, "Not removing extension %{public}s, pluginUUID: %{public}s because we have UUID %{public}s, %{public}@", (uint8_t *)v104, 0x2Au);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v130, -1, -1);
          v132 = v167;
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v132, -1, -1);
          MEMORY[0x1D823A5E0](v104, -1, -1);

          v8 = v182;
          v7 = v189;
          (*(void (**)(_QWORD *, uint64_t))(v182 + 8))(v174, v189);
          v30 = v188;
          v3 = (uint64_t)v186;
          v12 = v197;
        }
        else
        {

          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v207);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)&v200);

          (*(void (**)(_QWORD *, uint64_t))(v101 + 8))(v102, v7);
          v8 = v101;
        }
        goto LABEL_6;
      }
      v90 = v172;
      ((void (*)(unint64_t, uint64_t, uint64_t))v84[4])(v172, v82, v47);
      sub_1D25369B0(&qword_1EFC82978, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09D0]);
      v91 = sub_1D26CD908();
      v92 = (void (*)(_QWORD, _QWORD))v84[1];
      v92(v90, v47);
      sub_1D253703C(v183, &qword_1ED961B18);
      v30 = v188;
      sub_1D253703C((uint64_t)v188, &qword_1ED961B18);
      v92(v180, v47);
      sub_1D253703C(v181, &qword_1ED961B18);
      v3 = (uint64_t)v186;
      v7 = v189;
      v88 = v173;
      if ((v91 & 1) == 0)
        goto LABEL_44;
    }
    sub_1D2538510((uint64_t)aBlock, (uint64_t)&v207);
    v93 = v169;
    v94 = *(_QWORD **)(v169 + 16);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v93 + 16) = v94;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v94 = sub_1D2538F50(0, v94[2] + 1, 1, v94);
      *(_QWORD *)(v169 + 16) = v94;
    }
    v8 = v182;
    v97 = v94[2];
    v96 = v94[3];
    if (v97 >= v96 >> 1)
    {
      v94 = sub_1D2538F50((_QWORD *)(v96 > 1), v97 + 1, 1, v94);
      *(_QWORD *)(v169 + 16) = v94;
    }
    v94[2] = v97 + 1;
    sub_1D2538F38(&v207, (uint64_t)&v94[5 * v97 + 4]);
    v98 = *(os_unfair_lock_s **)&v175[v162];
    swift_retain();
    os_unfair_lock_lock(v98 + 6);
    v99 = v185;
    sub_1D25DB5C0((uint64_t)&v98[4], v3);
    v185 = v99;
    os_unfair_lock_unlock(v98 + 6);

    swift_release();
    v7 = v189;
    v12 = v197;
LABEL_6:
    (*(void (**)(uint64_t, uint64_t))(v194 + 8))(v3, v195);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)aBlock);
LABEL_7:
    v35 = v192;
    if ((void (**)(char *, uint64_t))v18 == v192)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 = v149;
      goto LABEL_73;
    }
  }
  __break(1u);
LABEL_79:

  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v207);
  __break(1u);
LABEL_80:

  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v179)(v161, 1, 1, v184);
  __break(1u);
LABEL_81:

  __break(1u);
LABEL_82:

  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v191[7])(v158, 1, 1, v184);
  __break(1u);
LABEL_83:

  __break(1u);
LABEL_84:

  __break(1u);
}

uint64_t sub_1D25DB48C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  id v10;
  void *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CBD54();
  v10 = objc_msgSend(a3, sel_pluginUUID);
  if (v10)
  {
    v11 = v10;
    sub_1D26CBA0C();

    v12 = sub_1D26CBA24();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v6, 0, 1, v12);
  }
  else
  {
    v13 = sub_1D26CBA24();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v6, 1, 1, v13);
  }
  return sub_1D25E5ABC((uint64_t)v6, (uint64_t)v9);
}

uint64_t sub_1D25DB5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _OWORD v8[2];
  uint64_t v9;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v6 + 16))(v5, a2);
  v9 = 0;
  memset(v8, 0, sizeof(v8));
  return sub_1D25E5C50((uint64_t)v8, (uint64_t)v5);
}

uint64_t sub_1D25DB660(uint64_t a1, uint64_t a2)
{
  _BYTE *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t result;
  uint64_t v14;
  uint64_t v15[3];

  v3 = (_BYTE *)(a2 + 16);
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    swift_beginAccess();
    *v3 = 1;
    if (qword_1ED9621C0 != -1)
      swift_once();
    v4 = sub_1D26CC09C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED977CF0);
    swift_retain_n();
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDD04();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v15[0] = v14;
      *(_DWORD *)v7 = 136446210;
      swift_beginAccess();
      v8 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      v10 = MEMORY[0x1D82392C0](v8, v9);
      v12 = v11;
      swift_bridgeObjectRelease();
      sub_1D2537880(v10, v12, v15);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v5, v6, "Removed extensions [LS]: %{public}s", v7, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v14, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D26CC138();
    swift_bridgeObjectRelease();
  }
  result = swift_beginAccess();
  if (*v3 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    return sub_1D26CC1A4();
  }
  return result;
}

uint64_t sub_1D25DB944(_QWORD *a1)
{
  char *v1;
  uint64_t v3;
  uint64_t (*v4)(uint64_t);
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  os_unfair_lock_s *v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  char *v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD aBlock[6];
  __int128 v22[3];

  v3 = sub_1D26CD074();
  v4 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8];
  v19 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = sub_1D26CD0C8();
  v7 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v9 = (char *)&v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(os_unfair_lock_s **)&v1[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier];
  swift_retain();
  os_unfair_lock_lock(v10 + 6);
  sub_1D25DBBA4((uint64_t)&v10[4], a1);
  os_unfair_lock_unlock(v10 + 6);
  swift_release();
  v11 = *(void **)&v1[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_queue];
  sub_1D2538510((uint64_t)a1, (uint64_t)v22);
  v12 = swift_allocObject();
  *(_QWORD *)(v12 + 16) = v1;
  sub_1D2538F38(v22, v12 + 24);
  aBlock[4] = sub_1D25E0DDC;
  aBlock[5] = v12;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D25351AC;
  aBlock[3] = &block_descriptor_33;
  v13 = _Block_copy(aBlock);
  v14 = v11;
  v15 = v1;
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v20 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, v4, MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v9, v6, v13);
  _Block_release(v13);

  (*(void (**)(char *, uint64_t))(v19 + 8))(v6, v3);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v18);
  return swift_release();
}

uint64_t sub_1D25DBBA4(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE v10[40];

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  MEMORY[0x1E0C80A78](v3);
  v5 = &v10[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  v6 = a2[3];
  v7 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v6);
  sub_1D25DBC60(v6, v7);
  sub_1D2538510((uint64_t)a2, (uint64_t)v10);
  return sub_1D25E5C50((uint64_t)v10, (uint64_t)v5);
}

void sub_1D25DBC60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  id *v6;
  id v7;
  uint64_t v8;

  v4 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1E0C80A78](v4);
  v6 = (id *)((char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t, uint64_t))(a2 + 32))(a1, a2);
  v7 = *v6;
  sub_1D2538928((uint64_t)v6);
  sub_1D26CDE48();

}

uint64_t sub_1D25DBD00(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962168);
  v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1D26D1280;
  sub_1D2538510(a2, v3 + 32);
  sub_1D26CC138();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25DBD80(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _QWORD *v25;
  char v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  _QWORD *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  os_log_type_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  char v43;
  unint64_t v44;
  uint64_t v45;
  NSObject *v46;
  os_log_type_t v47;
  int v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  char *v56;
  uint64_t v57;
  uint64_t v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  unint64_t v67;
  unint64_t v68;
  char *v69;
  uint64_t v70;
  uint64_t v71;
  _QWORD *v72;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v74;
  unint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  void *v80;
  _QWORD *v81;
  uint64_t v82;
  void *v83;
  id v84;
  char *v85;
  char *v86;
  char *v87;
  uint64_t v88;
  _QWORD v90[2];
  char *v91;
  uint64_t v92;
  uint64_t v93;
  char *v94;
  uint64_t v95;
  uint64_t v96;
  __int128 v97;
  uint64_t v98;
  __int128 v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  os_log_t v106;
  uint64_t v107;
  int v108;
  uint64_t v109;
  uint64_t *v110;
  uint64_t v111;
  uint64_t v112;
  uint64_t v113;
  char *v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD v118[3];
  uint64_t v119;
  uint64_t v120;
  uint64_t v121[3];
  uint64_t v122;
  uint64_t v123;
  __int128 v124;
  uint64_t v125;
  __int128 v126;
  uint64_t v127;
  __int128 aBlock;
  uint64_t (*v129)(uint64_t);
  void *v130;
  uint64_t (*v131)();
  _QWORD *v132;
  __int128 v133[2];
  _QWORD v134[3];
  uint64_t v135;
  uint64_t v136;

  v2 = 0;
  v3 = sub_1D26CD074();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v90 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v91 = (char *)v90 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = sub_1D26CBA24();
  v101 = *(_QWORD *)(v10 - 8);
  v102 = v10;
  MEMORY[0x1E0C80A78](v10);
  v100 = (char *)v90 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = swift_allocObject();
  v13 = MEMORY[0x1E0DEE9D8];
  v113 = v12;
  *(_QWORD *)(v12 + 16) = MEMORY[0x1E0DEE9D8];
  v112 = swift_allocObject();
  *(_QWORD *)(v112 + 16) = v13;
  v14 = swift_allocObject();
  v15 = v13;
  v115 = v14;
  *(_QWORD *)(v14 + 16) = v13;
  v16 = *(_QWORD *)(a1 + 16);
  v95 = v4;
  v96 = v3;
  v93 = v7;
  v94 = v6;
  v92 = v8;
  if (v16)
  {
    v17 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier;
    v18 = a1 + 32;
    v110 = &v117;
    v90[1] = a1;
    swift_bridgeObjectRetain();
    *(_QWORD *)&v19 = 136446210;
    v99 = v19;
    v98 = MEMORY[0x1E0DEE9B8] + 8;
    *(_QWORD *)&v19 = 136446722;
    v97 = v19;
    v111 = v17;
    while (1)
    {
      sub_1D2537078(v18, (uint64_t)&aBlock, &qword_1ED963578);
      if ((v132 & 1) != 0)
        break;
      sub_1D2538F38(&aBlock, (uint64_t)v134);
      v32 = *(_QWORD *)&v114[v17];
      swift_retain();
      os_unfair_lock_lock((os_unfair_lock_t)(v32 + 24));
      sub_1D25DC8D0((uint64_t *)(v32 + 16), v134, (uint64_t)&v126);
      os_unfair_lock_unlock((os_unfair_lock_t)(v32 + 24));
      swift_release();
      if (v127)
      {
        sub_1D2538F38(&v126, (uint64_t)v133);
        v33 = v135;
        v34 = v136;
        __swift_project_boxed_opaque_existential_0(v134, v135);
        if (((*(uint64_t (**)(__int128 *, uint64_t, uint64_t))(v34 + 304))(v133, v33, v34) & 1) != 0)
        {
          if (qword_1ED9621C0 != -1)
            swift_once();
          v35 = sub_1D26CC09C();
          __swift_project_value_buffer(v35, (uint64_t)qword_1ED977CF0);
          sub_1D2538510((uint64_t)v134, (uint64_t)&v124);
          v36 = sub_1D26CC084();
          v37 = sub_1D26CDD04();
          if (os_log_type_enabled(v36, v37))
          {
            v38 = swift_slowAlloc();
            v39 = swift_slowAlloc();
            v121[0] = v39;
            *(_DWORD *)v38 = v99;
            __swift_project_boxed_opaque_existential_0(&v124, v125);
            v40 = sub_1D26CE370();
            *(_QWORD *)(v38 + 4) = sub_1D2537880(v40, v41, v121);
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
            _os_log_impl(&dword_1D2531000, v36, v37, "Unchanged extension: %{public}s", (uint8_t *)v38, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v39, -1, -1);
            MEMORY[0x1D823A5E0](v38, -1, -1);

          }
          else
          {

            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
          }
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
          v17 = v111;
        }
        else
        {
          if (qword_1ED9621C0 != -1)
            swift_once();
          v45 = sub_1D26CC09C();
          __swift_project_value_buffer(v45, (uint64_t)qword_1ED977CF0);
          sub_1D2538510((uint64_t)v134, (uint64_t)&v124);
          sub_1D2538510((uint64_t)v134, (uint64_t)v121);
          sub_1D2538510((uint64_t)v133, (uint64_t)v118);
          v46 = sub_1D26CC084();
          v47 = sub_1D26CDD04();
          v48 = v47;
          if (os_log_type_enabled(v46, v47))
          {
            v49 = swift_slowAlloc();
            v108 = v48;
            v50 = v49;
            v51 = swift_slowAlloc();
            v106 = v46;
            v107 = v51;
            v117 = v51;
            *(_DWORD *)v50 = v97;
            v109 = v2;
            __swift_project_boxed_opaque_existential_0(&v124, v125);
            v52 = sub_1D26CE370();
            v116 = sub_1D2537880(v52, v53, &v117);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
            *(_WORD *)(v50 + 12) = 2082;
            v55 = v122;
            v54 = v123;
            __swift_project_boxed_opaque_existential_0(v121, v122);
            v56 = v100;
            (*(void (**)(uint64_t, uint64_t))(v54 + 64))(v55, v54);
            v105 = sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
            v57 = v102;
            v58 = sub_1D26CE370();
            v60 = v59;
            v104 = *(void (**)(char *, uint64_t))(v101 + 8);
            v104(v56, v57);
            v116 = sub_1D2537880(v58, v60, &v117);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
            *(_WORD *)(v50 + 22) = 2082;
            v103 = v50 + 24;
            v62 = v119;
            v61 = v120;
            __swift_project_boxed_opaque_existential_0(v118, v119);
            v63 = v62;
            v64 = v111;
            v65 = v109;
            (*(void (**)(uint64_t, uint64_t))(v61 + 64))(v63, v61);
            v66 = sub_1D26CE370();
            v68 = v67;
            v69 = v56;
            v2 = v65;
            v17 = v64;
            v104(v69, v57);
            v116 = sub_1D2537880(v66, v68, &v117);
            sub_1D26CDF50();
            swift_bridgeObjectRelease();
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
            v46 = v106;
            _os_log_impl(&dword_1D2531000, v106, (os_log_type_t)v108, "Updated extension: %{public}s, now with pluginUUID %{public}s, (was %{public}s)", (uint8_t *)v50, 0x20u);
            v70 = v107;
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v70, -1, -1);
            MEMORY[0x1D823A5E0](v50, -1, -1);
          }
          else
          {
            __swift_destroy_boxed_opaque_existential_1((uint64_t)&v124);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v121);
            __swift_destroy_boxed_opaque_existential_1((uint64_t)v118);
          }

          sub_1D2538510((uint64_t)v134, (uint64_t)&v124);
          v71 = v112;
          v72 = *(_QWORD **)(v112 + 16);
          isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(_QWORD *)(v71 + 16) = v72;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            v72 = sub_1D2538F50(0, v72[2] + 1, 1, v72);
            *(_QWORD *)(v112 + 16) = v72;
          }
          v75 = v72[2];
          v74 = v72[3];
          if (v75 >= v74 >> 1)
          {
            v72 = sub_1D2538F50((_QWORD *)(v74 > 1), v75 + 1, 1, v72);
            *(_QWORD *)(v112 + 16) = v72;
          }
          v72[2] = v75 + 1;
          sub_1D2538F38(&v124, (uint64_t)&v72[5 * v75 + 4]);
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v133);
        }
        goto LABEL_6;
      }
      sub_1D253703C((uint64_t)&v126, &qword_1ED962040);
      sub_1D2538510((uint64_t)v134, (uint64_t)v133);
      v42 = v113;
      v25 = *(_QWORD **)(v113 + 16);
      v43 = swift_isUniquelyReferenced_nonNull_native();
      *(_QWORD *)(v42 + 16) = v25;
      if ((v43 & 1) == 0)
      {
        v25 = sub_1D2538F50(0, v25[2] + 1, 1, v25);
        *(_QWORD *)(v113 + 16) = v25;
      }
      v28 = v25[2];
      v44 = v25[3];
      v29 = v28 + 1;
      if (v28 >= v44 >> 1)
      {
        v30 = sub_1D2538F50((_QWORD *)(v44 > 1), v28 + 1, 1, v25);
        v25 = v30;
        v31 = v113;
LABEL_4:
        *(_QWORD *)(v31 + 16) = v30;
      }
LABEL_5:
      v25[2] = v29;
      sub_1D2538F38(v133, (uint64_t)&v25[5 * v28 + 4]);
LABEL_6:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v134);
      v18 += 48;
      if (!--v16)
      {
        swift_bridgeObjectRelease();
        v23 = v115;
        v22 = *(_QWORD *)(v115 + 16);
        v21 = *(_QWORD *)(v113 + 16);
        v20 = *(_QWORD *)(v112 + 16);
        goto LABEL_35;
      }
    }
    sub_1D2538F38(&aBlock, (uint64_t)v134);
    sub_1D2538510((uint64_t)v134, (uint64_t)v133);
    v24 = v115;
    v25 = *(_QWORD **)(v115 + 16);
    v26 = swift_isUniquelyReferenced_nonNull_native();
    *(_QWORD *)(v24 + 16) = v25;
    if ((v26 & 1) == 0)
    {
      v25 = sub_1D2538F50(0, v25[2] + 1, 1, v25);
      *(_QWORD *)(v115 + 16) = v25;
    }
    v28 = v25[2];
    v27 = v25[3];
    v29 = v28 + 1;
    if (v28 < v27 >> 1)
      goto LABEL_5;
    v30 = sub_1D2538F50((_QWORD *)(v27 > 1), v28 + 1, 1, v25);
    v25 = v30;
    v31 = v115;
    goto LABEL_4;
  }
  v20 = v15;
  v21 = v15;
  v22 = v15;
  v23 = v115;
LABEL_35:
  *(_QWORD *)&aBlock = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1D25F6A3C(v20);
  v76 = aBlock;
  v77 = v114;
  v78 = *(_QWORD *)&v114[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier];
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v78 + 24));
  sub_1D25DC9CC((uint64_t *)(v78 + 16), v22, v76);
  os_unfair_lock_unlock((os_unfair_lock_t)(v78 + 24));
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v79 = swift_allocObject();
  *(_BYTE *)(v79 + 16) = 0;
  v80 = *(void **)&v77[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_queue];
  v81 = (_QWORD *)swift_allocObject();
  v82 = v112;
  v81[2] = v113;
  v81[3] = v79;
  v81[4] = v77;
  v81[5] = v82;
  v81[6] = v23;
  v131 = sub_1D25E0D14;
  v132 = v81;
  *(_QWORD *)&aBlock = MEMORY[0x1E0C809B0];
  *((_QWORD *)&aBlock + 1) = 1107296256;
  v129 = sub_1D25351AC;
  v130 = &block_descriptor_7;
  v83 = _Block_copy(&aBlock);
  v84 = v80;
  swift_retain();
  swift_retain();
  v85 = v77;
  swift_retain();
  swift_retain();
  v86 = v91;
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v134[0] = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  v87 = v94;
  v88 = v96;
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v86, v87, v83);
  _Block_release(v83);

  (*(void (**)(char *, uint64_t))(v95 + 8))(v87, v88);
  (*(void (**)(char *, uint64_t))(v92 + 8))(v86, v93);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return swift_release();
}

uint64_t sub_1D25DC8D0@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  char v14;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = a2[3];
  v11 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v10);
  sub_1D25DBC60(v10, v11);
  v12 = *a1;
  if (*(_QWORD *)(*a1 + 16) && (v13 = sub_1D25363D0((uint64_t)v9), (v14 & 1) != 0))
  {
    sub_1D2538510(*(_QWORD *)(v12 + 56) + 40 * v13, a3);
  }
  else
  {
    *(_QWORD *)(a3 + 32) = 0;
    *(_OWORD *)a3 = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
}

uint64_t sub_1D25DC9CC(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  _QWORD *v14;
  void (*v15)(unint64_t, uint64_t);
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v20;
  char v21;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  int v30;
  _QWORD *v31;
  char v32;
  unint64_t v33;
  uint64_t v34;
  _BOOL8 v35;
  uint64_t v36;
  char v37;
  unint64_t v38;
  char v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  BOOL v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  __int128 v49[2];
  __int128 v50;
  __int128 v51;
  uint64_t v52;
  _QWORD *v53;

  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v6 = *(_QWORD *)(v48 - 8);
  v7 = MEMORY[0x1E0C80A78](v48);
  v9 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  result = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)&v45 - v11;
  v13 = *(_QWORD *)(a2 + 16);
  v46 = a3;
  if (v13)
  {
    v14 = (_QWORD *)(a2 + 32);
    v45 = a2;
    swift_bridgeObjectRetain();
    v47 = v6;
    do
    {
      v17 = v14[3];
      v18 = v14[4];
      __swift_project_boxed_opaque_existential_0(v14, v17);
      sub_1D25DBC60(v17, v18);
      swift_bridgeObjectRetain();
      v19 = sub_1D25363D0((uint64_t)v12);
      v21 = v20;
      swift_bridgeObjectRelease();
      if ((v21 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v23 = *a1;
        *(_QWORD *)&v49[0] = *a1;
        *a1 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1D2671170();
          v23 = *(_QWORD *)&v49[0];
        }
        v24 = *(_QWORD *)(v23 + 48) + *(_QWORD *)(v6 + 72) * v19;
        v15 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
        v16 = v48;
        v15(v24, v48);
        sub_1D2538F38((__int128 *)(*(_QWORD *)(v23 + 56) + 40 * v19), (uint64_t)&v50);
        sub_1D266CD0C(v19, v23);
        *a1 = v23;
        swift_bridgeObjectRelease();
      }
      else
      {
        v52 = 0;
        v50 = 0u;
        v51 = 0u;
        v15 = *(void (**)(unint64_t, uint64_t))(v6 + 8);
        v16 = v48;
      }
      v15((unint64_t)v12, v16);
      sub_1D253703C((uint64_t)&v50, &qword_1ED962040);
      v14 += 5;
      --v13;
      v6 = v47;
    }
    while (v13);
    result = swift_bridgeObjectRelease();
    a3 = v46;
  }
  v25 = *(_QWORD *)(a3 + 16);
  if (v25)
  {
    v26 = a3 + 32;
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_1D2538510(v26, (uint64_t)&v50);
      v28 = *((_QWORD *)&v51 + 1);
      v29 = v52;
      __swift_project_boxed_opaque_existential_0(&v50, *((uint64_t *)&v51 + 1));
      sub_1D25DBC60(v28, v29);
      sub_1D2538510((uint64_t)&v50, (uint64_t)v49);
      v30 = swift_isUniquelyReferenced_nonNull_native();
      v53 = (_QWORD *)*a1;
      v31 = v53;
      *a1 = 0x8000000000000000;
      v33 = sub_1D25363D0((uint64_t)v9);
      v34 = v31[2];
      v35 = (v32 & 1) == 0;
      v36 = v34 + v35;
      if (__OFADD__(v34, v35))
        break;
      v37 = v32;
      if (v31[3] >= v36)
      {
        if ((v30 & 1) == 0)
          sub_1D2671170();
      }
      else
      {
        sub_1D26682A8(v36, v30);
        v38 = sub_1D25363D0((uint64_t)v9);
        if ((v37 & 1) != (v39 & 1))
          goto LABEL_27;
        v33 = v38;
      }
      v40 = v48;
      v41 = v53;
      if ((v37 & 1) != 0)
      {
        v27 = v53[7] + 40 * v33;
        __swift_destroy_boxed_opaque_existential_1(v27);
        sub_1D2538F38(v49, v27);
      }
      else
      {
        v53[(v33 >> 6) + 8] |= 1 << v33;
        (*(void (**)(unint64_t, char *, uint64_t))(v6 + 16))(v41[6] + *(_QWORD *)(v6 + 72) * v33, v9, v40);
        sub_1D2538F38(v49, v41[7] + 40 * v33);
        v42 = v41[2];
        v43 = __OFADD__(v42, 1);
        v44 = v42 + 1;
        if (v43)
          goto LABEL_26;
        v41[2] = v44;
      }
      *a1 = (uint64_t)v41;
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v40);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v50);
      v26 += 40;
      if (!--v25)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    result = sub_1D26CE424();
    __break(1u);
  }
  return result;
}

uint64_t sub_1D25DCD6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v8;
  _BYTE *v9;
  uint64_t *v10;
  _QWORD *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  unint64_t v21;
  uint8_t *v22;
  uint64_t v23;
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  _QWORD *v31;
  uint64_t v32;
  unint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint8_t *v36;
  uint64_t v37;
  NSObject *v38;
  os_log_type_t v39;
  uint64_t v40;
  uint8_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  uint64_t result;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t *v52;
  _BYTE *v53;
  uint64_t v54[3];
  uint64_t v55;
  uint64_t v56[3];
  uint64_t v57;
  uint64_t v58[3];

  v8 = (uint64_t *)(a1 + 16);
  v9 = (_BYTE *)(a2 + 16);
  v10 = (uint64_t *)(a4 + 16);
  swift_beginAccess();
  v11 = &unk_1ED963000;
  v53 = v9;
  v52 = v10;
  if (*(_QWORD *)(*(_QWORD *)(a1 + 16) + 16))
  {
    swift_beginAccess();
    *v9 = 1;
    if (qword_1ED9633E8 != -1)
      swift_once();
    v12 = sub_1D26CC09C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED977DD0);
    swift_retain_n();
    v13 = sub_1D26CC084();
    v14 = sub_1D26CDD04();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      v49 = swift_slowAlloc();
      v58[0] = v49;
      *(_DWORD *)v15 = 136446210;
      swift_beginAccess();
      v16 = *(_QWORD *)(a1 + 16);
      swift_bridgeObjectRetain();
      v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      v18 = MEMORY[0x1D82392C0](v16, v17);
      v19 = a5;
      v21 = v20;
      v11 = (_QWORD *)&unk_1ED963000;
      swift_bridgeObjectRelease();
      v57 = sub_1D2537880(v18, v21, v58);
      sub_1D26CDF50();
      swift_release_n();
      a5 = v19;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v13, v14, "Added extensions: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v49, -1, -1);
      v22 = v15;
      v9 = v53;
      MEMORY[0x1D823A5E0](v22, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v10 = v52;
    swift_beginAccess();
    v57 = *v8;
    swift_bridgeObjectRetain();
    sub_1D26CC138();
    swift_bridgeObjectRelease();
  }
  v23 = a5 + 16;
  swift_beginAccess();
  if (*(_QWORD *)(*v10 + 16))
  {
    swift_beginAccess();
    *v9 = 1;
    if (v11[125] != -1)
      swift_once();
    v24 = sub_1D26CC09C();
    __swift_project_value_buffer(v24, (uint64_t)qword_1ED977DD0);
    swift_retain_n();
    v25 = sub_1D26CC084();
    v26 = sub_1D26CDD04();
    if (os_log_type_enabled(v25, v26))
    {
      v51 = a5 + 16;
      v27 = (uint8_t *)swift_slowAlloc();
      v50 = swift_slowAlloc();
      v56[0] = v50;
      *(_DWORD *)v27 = 136446210;
      swift_beginAccess();
      v28 = a5;
      v29 = *(_QWORD *)(a4 + 16);
      swift_bridgeObjectRetain();
      v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      v31 = v11;
      v32 = MEMORY[0x1D82392C0](v29, v30);
      v34 = v33;
      a5 = v28;
      swift_bridgeObjectRelease();
      v35 = v32;
      v11 = v31;
      v55 = sub_1D2537880(v35, v34, v56);
      v9 = v53;
      sub_1D26CDF50();
      swift_release_n();
      v10 = v52;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v25, v26, "Updated extensions: %{public}s", v27, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v50, -1, -1);
      v36 = v27;
      v23 = v51;
      MEMORY[0x1D823A5E0](v36, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    v55 = *v10;
    swift_bridgeObjectRetain();
    sub_1D26CC138();
    swift_bridgeObjectRelease();
  }
  swift_beginAccess();
  if (*(_QWORD *)(*(_QWORD *)v23 + 16))
  {
    swift_beginAccess();
    *v9 = 1;
    if (v11[125] != -1)
      swift_once();
    v37 = sub_1D26CC09C();
    __swift_project_value_buffer(v37, (uint64_t)qword_1ED977DD0);
    swift_retain_n();
    v38 = sub_1D26CC084();
    v39 = sub_1D26CDD04();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = a5;
      v41 = (uint8_t *)swift_slowAlloc();
      v42 = swift_slowAlloc();
      v54[0] = v42;
      *(_DWORD *)v41 = 136446210;
      swift_beginAccess();
      v43 = *(_QWORD *)(v40 + 16);
      swift_bridgeObjectRetain();
      v44 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
      v45 = MEMORY[0x1D82392C0](v43, v44);
      v47 = v46;
      swift_bridgeObjectRelease();
      sub_1D2537880(v45, v47, v54);
      v9 = v53;
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v38, v39, "Removed extensions: %{public}s", v41, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v42, -1, -1);
      MEMORY[0x1D823A5E0](v41, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D26CC138();
    swift_bridgeObjectRelease();
  }
  result = swift_beginAccess();
  if (*v9 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    return sub_1D26CC1A4();
  }
  return result;
}

uint64_t sub_1D25DD4F4()
{
  uint64_t result;

  result = sub_1D25DD514();
  byte_1ED962270 = result & 1;
  return result;
}

uint64_t sub_1D25DD514()
{
  void *v0;
  uint64_t v1;
  char v2;
  uint64_t v4;
  uint64_t v5;

  v0 = (void *)sub_1D26CD914();
  v1 = MGCopyAnswer();

  if (v1 && (swift_dynamicCast() & 1) != 0)
  {
    if (v4 == 18499 && v5 == 0xE200000000000000)
    {
      swift_bridgeObjectRelease();
      v2 = 1;
    }
    else
    {
      v2 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    v2 = 0;
  }
  return v2 & 1;
}

id ExtensionManager.__allocating_init()()
{
  objc_class *v0;

  return objc_msgSend(objc_allocWithZone(v0), sel_init);
}

void ExtensionManager.init()()
{
  _swift_stdlib_reportUnimplementedInitializer();
  __break(1u);
}

uint64_t sub_1D25DD664(uint64_t a1, uint64_t a2)
{
  return sub_1D25DD7F4(a1, a2, (uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__extensionsPublisher, &qword_1ED96FC80, (unint64_t *)&unk_1ED96FC70);
}

uint64_t sub_1D25DD680()
{
  _QWORD *v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(os_unfair_lock_s **)(*v0 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1D25D6A24(&v4);
  os_unfair_lock_unlock(v1 + 6);
  v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1D25DD6FC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v7;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_bridgeObjectRetain();
  sub_1D26CBC7C();
  sub_1D2535558((uint64_t)v5, a1);
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_1D25DD7B8()
{
  return sub_1D25D7F0C();
}

uint64_t sub_1D25DD7D8(uint64_t a1, uint64_t a2)
{
  return sub_1D25DD7F4(a1, a2, (uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__addedPublisher, &qword_1ED961B88, &qword_1ED961B80);
}

uint64_t sub_1D25DD7F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1D2536488(a5, a4, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D25DD864(uint64_t a1, uint64_t a2)
{
  return sub_1D25DD7F4(a1, a2, (uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__updatedPublisher, &qword_1ED961B88, &qword_1ED961B80);
}

uint64_t sub_1D25DD880(uint64_t a1, uint64_t a2)
{
  return sub_1D25DD7F4(a1, a2, (uint64_t)&OBJC_IVAR____TtC9ChronoKit16ExtensionManager__removedPublisher, &qword_1ED961B88, &qword_1ED961B80);
}

uint64_t sub_1D25DD89C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  __int128 v5;
  uint64_t v6;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  sub_1D2535558(a1, (uint64_t)&v5);
  if (v6)
  {
    sub_1D2538F38(&v5, (uint64_t)v7);
    v1 = v8;
    v2 = v9;
    __swift_project_boxed_opaque_existential_0(v7, v8);
    v3 = (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 40))(v1, v2);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    sub_1D253703C((uint64_t)&v5, &qword_1ED962040);
    return 0;
  }
  return v3;
}

id LSApplicationWorkspace.pluginProxyForBundleIdentifier(_:)()
{
  id v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  sub_1D26CBC88();
  v0 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  return sub_1D2536A30();
}

id sub_1D25DD9A8()
{
  id v0;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  sub_1D26CBC88();
  v0 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  return sub_1D2536A30();
}

id sub_1D25DDA20(uint64_t a1)
{
  id *v1;

  return objc_msgSend(*v1, sel_addObserver_, a1);
}

uint64_t sub_1D25DDA34()
{
  uint64_t v0;

  sub_1D25495F4(*(_QWORD *)(v0 + 112));
  swift_defaultActor_destroy();
  return swift_defaultActor_deallocate();
}

id sub_1D25DDA58(uint64_t a1, uint64_t a2, char a3)
{
  void *v3;
  void *v5;
  id v6;
  id v7;
  id v8;
  id v10[2];

  v10[1] = *(id *)MEMORY[0x1E0C80C00];
  v5 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v10[0] = 0;
  v6 = objc_msgSend(v3, sel_initWithBundleIdentifier_requireValid_error_, v5, a3 & 1, v10);

  if (v6)
  {
    v7 = v10[0];
  }
  else
  {
    v8 = v10[0];
    sub_1D26CB76C();

    swift_willThrow();
  }
  return v6;
}

uint64_t sub_1D25DDB30(uint64_t a1, int *a2)
{
  uint64_t v2;
  _QWORD *v4;
  uint64_t (*v6)(uint64_t);

  v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  v4 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v4;
  *v4 = v2;
  v4[1] = sub_1D25DDB94;
  return v6(a1);
}

uint64_t sub_1D25DDB94()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D25DDBE0(uint64_t a1, uint64_t a2)
{
  return sub_1D25DDC28(a1, a2, (uint64_t *)&unk_1ED96C0B0, (unint64_t *)&qword_1ED96BFB8, 0x1E0D101D8, (void (*)(unint64_t))sub_1D25F16F4);
}

uint64_t sub_1D25DDC04(uint64_t a1, uint64_t a2)
{
  return sub_1D25DDC28(a1, a2, &qword_1ED963910, (unint64_t *)&qword_1ED96FEC8, 0x1E0D10188, (void (*)(unint64_t))sub_1D25F1C64);
}

uint64_t sub_1D25DDC28(uint64_t a1, uint64_t a2, uint64_t *a3, unint64_t *a4, uint64_t a5, void (*a6)(unint64_t))
{
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  char v16;
  unint64_t v17;
  BOOL v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a2)
  {
    __swift_instantiateConcreteTypeFromMangledName(a3);
    v8 = sub_1D26CE088();
    v21 = v8;
    sub_1D26CE004();
    if (sub_1D26CE034())
    {
      sub_1D2539514(0, a4);
      do
      {
        swift_dynamicCast();
        v8 = v21;
        v15 = *(_QWORD *)(v21 + 16);
        if (*(_QWORD *)(v21 + 24) <= v15)
        {
          a6(v15 + 1);
          v8 = v21;
        }
        result = sub_1D26CDEC0();
        v10 = v8 + 56;
        v11 = -1 << *(_BYTE *)(v8 + 32);
        v12 = result & ~v11;
        v13 = v12 >> 6;
        if (((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6))) != 0)
        {
          v14 = __clz(__rbit64((-1 << v12) & ~*(_QWORD *)(v8 + 56 + 8 * (v12 >> 6)))) | v12 & 0x7FFFFFFFFFFFFFC0;
        }
        else
        {
          v16 = 0;
          v17 = (unint64_t)(63 - v11) >> 6;
          do
          {
            if (++v13 == v17 && (v16 & 1) != 0)
            {
              __break(1u);
              return result;
            }
            v18 = v13 == v17;
            if (v13 == v17)
              v13 = 0;
            v16 |= v18;
            v19 = *(_QWORD *)(v10 + 8 * v13);
          }
          while (v19 == -1);
          v14 = __clz(__rbit64(~v19)) + (v13 << 6);
        }
        *(_QWORD *)(v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
        *(_QWORD *)(*(_QWORD *)(v8 + 48) + 8 * v14) = v20;
        ++*(_QWORD *)(v8 + 16);
      }
      while (sub_1D26CE034());
    }
    swift_release();
  }
  else
  {
    swift_unknownObjectRelease();
    return MEMORY[0x1E0DEE9E8];
  }
  return v8;
}

unint64_t sub_1D25DDE28(uint64_t a1, uint64_t a2)
{
  unint64_t result;

  sub_1D26CDEC0();
  result = sub_1D26CDFF8();
  *(_QWORD *)(a2 + 56 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
  *(_QWORD *)(*(_QWORD *)(a2 + 48) + 8 * result) = a1;
  ++*(_QWORD *)(a2 + 16);
  return result;
}

id sub_1D25DDEA8()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C0B0);
  v2 = *v0;
  v3 = sub_1D26CE070();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_26:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_26;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
        break;
    }
LABEL_25:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 2;
  if (v20 >= v13)
    goto LABEL_26;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_26;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_25;
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1D25DE03C()
{
  return sub_1D25DE3D0((uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8], &qword_1ED962118);
}

void *sub_1D25DE050()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  void *result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  _QWORD *v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962120);
  v2 = *v0;
  v3 = sub_1D26CE070();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (void *)swift_release();
    *v1 = v4;
    return result;
  }
  result = (void *)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      v9 = v20 + 1;
      if (v20 + 1 >= v13)
        goto LABEL_28;
      v21 = *(_QWORD *)(v6 + 8 * v9);
      if (!v21)
      {
        v9 = v20 + 2;
        if (v20 + 2 >= v13)
          goto LABEL_28;
        v21 = *(_QWORD *)(v6 + 8 * v9);
        if (!v21)
          break;
      }
    }
LABEL_27:
    v12 = (v21 - 1) & v21;
    v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    v16 = 16 * v15;
    v17 = (_QWORD *)(*(_QWORD *)(v2 + 48) + v16);
    v18 = v17[1];
    v19 = (_QWORD *)(*(_QWORD *)(v4 + 48) + v16);
    *v19 = *v17;
    v19[1] = v18;
    result = (void *)swift_bridgeObjectRetain();
  }
  v22 = v20 + 3;
  if (v22 >= v13)
    goto LABEL_28;
  v21 = *(_QWORD *)(v6 + 8 * v22);
  if (v21)
  {
    v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v22 + 1;
    if (__OFADD__(v22, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v21 = *(_QWORD *)(v6 + 8 * v9);
    ++v22;
    if (v21)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D25DE200()
{
  return sub_1D25DE608(&qword_1ED9633A0, &qword_1ED963908);
}

id sub_1D25DE214()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  id result;
  uint64_t v6;
  unint64_t v7;
  int64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  int64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;
  void *v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;

  v1 = v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963910);
  v2 = *v0;
  v3 = sub_1D26CE070();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
LABEL_28:
    result = (id)swift_release();
    *v1 = v4;
    return result;
  }
  result = (id)(v3 + 56);
  v6 = v2 + 56;
  v7 = (unint64_t)((1 << *(_BYTE *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7)
    result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  v9 = 0;
  *(_QWORD *)(v4 + 16) = *(_QWORD *)(v2 + 16);
  v10 = 1 << *(_BYTE *)(v2 + 32);
  v11 = -1;
  if (v10 < 64)
    v11 = ~(-1 << v10);
  v12 = v11 & *(_QWORD *)(v2 + 56);
  v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      v9 = v18 + 1;
      if (v18 + 1 >= v13)
        goto LABEL_28;
      v19 = *(_QWORD *)(v6 + 8 * v9);
      if (!v19)
      {
        v9 = v18 + 2;
        if (v18 + 2 >= v13)
          goto LABEL_28;
        v19 = *(_QWORD *)(v6 + 8 * v9);
        if (!v19)
          break;
      }
    }
LABEL_27:
    v12 = (v19 - 1) & v19;
    v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    v16 = 8 * v15;
    v17 = *(void **)(*(_QWORD *)(v2 + 48) + v16);
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + v16) = v17;
    result = v17;
  }
  v20 = v18 + 3;
  if (v20 >= v13)
    goto LABEL_28;
  v19 = *(_QWORD *)(v6 + 8 * v20);
  if (v19)
  {
    v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    v9 = v20 + 1;
    if (__OFADD__(v20, 1))
      break;
    if (v9 >= v13)
      goto LABEL_28;
    v19 = *(_QWORD *)(v6 + 8 * v9);
    ++v20;
    if (v19)
      goto LABEL_27;
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1D25DE3BC()
{
  return sub_1D25DE3D0((uint64_t (*)(_QWORD))MEMORY[0x1E0CEFCE8], &qword_1ED962B70);
}

void *sub_1D25DE3D0(uint64_t (*a1)(_QWORD), uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = a1(0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - v7;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1D26CE070();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

void *sub_1D25DE5F4()
{
  return sub_1D25DE608(&qword_1ED96FE70, (uint64_t *)&unk_1ED9638F8);
}

void *sub_1D25DE608(uint64_t *a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *result;
  uint64_t v13;
  unint64_t v14;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v4 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(a1);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *v2;
  v10 = sub_1D26CE070();
  v11 = v10;
  if (!*(_QWORD *)(v9 + 16))
  {
    result = (void *)swift_release();
LABEL_30:
    *v4 = v11;
    return result;
  }
  v28 = v4;
  result = (void *)(v10 + 56);
  v13 = v9 + 56;
  v14 = (unint64_t)((1 << *(_BYTE *)(v11 + 32)) + 63) >> 6;
  if (v11 != v9 || (unint64_t)result >= v9 + 56 + 8 * v14)
    result = memmove(result, (const void *)(v9 + 56), 8 * v14);
  v16 = 0;
  *(_QWORD *)(v11 + 16) = *(_QWORD *)(v9 + 16);
  v17 = 1 << *(_BYTE *)(v9 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & *(_QWORD *)(v9 + 56);
  v20 = (unint64_t)(v17 + 63) >> 6;
  while (1)
  {
    if (v19)
    {
      v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      v22 = v21 | (v16 << 6);
      goto LABEL_12;
    }
    v24 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v24 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v24);
    ++v16;
    if (!v25)
    {
      v16 = v24 + 1;
      if (v24 + 1 >= v20)
        goto LABEL_28;
      v25 = *(_QWORD *)(v13 + 8 * v16);
      if (!v25)
      {
        v16 = v24 + 2;
        if (v24 + 2 >= v20)
          goto LABEL_28;
        v25 = *(_QWORD *)(v13 + 8 * v16);
        if (!v25)
          break;
      }
    }
LABEL_27:
    v19 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v16 << 6);
LABEL_12:
    v23 = *(_QWORD *)(v6 + 72) * v22;
    (*(void (**)(char *, unint64_t, uint64_t))(v6 + 16))(v8, *(_QWORD *)(v9 + 48) + v23, v5);
    result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v6 + 32))(*(_QWORD *)(v11 + 48) + v23, v8, v5);
  }
  v26 = v24 + 3;
  if (v26 >= v20)
  {
LABEL_28:
    result = (void *)swift_release();
    v4 = v28;
    goto LABEL_30;
  }
  v25 = *(_QWORD *)(v13 + 8 * v26);
  if (v25)
  {
    v16 = v26;
    goto LABEL_27;
  }
  while (1)
  {
    v16 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v16 >= v20)
      goto LABEL_28;
    v25 = *(_QWORD *)(v13 + 8 * v16);
    ++v26;
    if (v25)
      goto LABEL_27;
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1D25DE828(void *a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  id v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v19;

  v3 = *v1;
  if ((*v1 & 0xC000000000000001) != 0)
  {
    if (v3 < 0)
      v4 = *v1;
    else
      v4 = v3 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v5 = a1;
    v6 = sub_1D26CE040();

    if ((v6 & 1) != 0)
    {
      v7 = sub_1D25DEDDC(v4, v5);
      swift_bridgeObjectRelease();
      return v7;
    }
LABEL_15:
    swift_bridgeObjectRelease();
    return 0;
  }
  swift_bridgeObjectRetain();
  v8 = sub_1D26CDEC0();
  v9 = -1 << *(_BYTE *)(v3 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
    goto LABEL_15;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96BFB8);
  v11 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
  v12 = sub_1D26CDECC();

  if ((v12 & 1) == 0)
  {
    v13 = ~v9;
    do
    {
      v10 = (v10 + 1) & v13;
      if (((*(_QWORD *)(v3 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        goto LABEL_15;
      v14 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v10);
      v15 = sub_1D26CDECC();

    }
    while ((v15 & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v17 = *v1;
  v19 = *v1;
  *v1 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D25DDEA8();
    v17 = v19;
  }
  v7 = *(_QWORD *)(*(_QWORD *)(v17 + 48) + 8 * v10);
  sub_1D25DEFB0(v10);
  *v1 = v19;
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_1D25DE9FC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  BOOL v11;
  int isUniquelyReferenced_nonNull_native;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v19;

  v5 = *v2;
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  v6 = sub_1D26CE49C();
  v7 = -1 << *(_BYTE *)(v5 + 32);
  v8 = v6 & ~v7;
  if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  v9 = *(_QWORD *)(v5 + 48);
  v10 = (_QWORD *)(v9 + 16 * v8);
  v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1D26CE3D0() & 1) == 0)
  {
    v15 = ~v7;
    do
    {
      v8 = (v8 + 1) & v15;
      if (((*(_QWORD *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
        goto LABEL_18;
      v16 = (_QWORD *)(v9 + 16 * v8);
      v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1D26CE3D0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v13 = *v2;
  v19 = *v2;
  *v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_1D25DE050();
    v13 = v19;
  }
  v14 = *(_QWORD *)(*(_QWORD *)(v13 + 48) + 16 * v8);
  sub_1D25DF150(v8);
  *v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1D25DEB88@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, unint64_t, uint64_t);
  unint64_t v16;
  char v17;
  uint64_t v18;
  uint64_t *v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  unint64_t v22;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v2;
  sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
  swift_bridgeObjectRetain();
  v27 = a1;
  v10 = sub_1D26CD8CC();
  v11 = -1 << *(_BYTE *)(v9 + 32);
  v12 = v10 & ~v11;
  if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) != 0)
  {
    v25 = v2;
    v26 = a2;
    v13 = ~v11;
    v14 = *(_QWORD *)(v6 + 72);
    v28 = v6;
    v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    while (1)
    {
      v16 = v14 * v12;
      v15(v8, *(_QWORD *)(v9 + 48) + v14 * v12, v5);
      sub_1D2536488(&qword_1ED963380, &qword_1ED9633A0, MEMORY[0x1E0D0FB58]);
      v17 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v28 + 8))(v8, v5);
      if ((v17 & 1) != 0)
        break;
      v12 = (v12 + 1) & v13;
      if (((*(_QWORD *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v18 = 1;
        a2 = v26;
        v6 = v28;
        return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
      }
    }
    swift_bridgeObjectRelease();
    v19 = v25;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v21 = *v19;
    v29 = *v19;
    *v19 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_1D25DE608(&qword_1ED9633A0, &qword_1ED963908);
      v21 = v29;
    }
    v22 = *(_QWORD *)(v21 + 48) + v16;
    v6 = v28;
    a2 = v26;
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v28 + 32))(v26, v22, v5);
    sub_1D25DF314(v12);
    *v19 = v29;
    swift_bridgeObjectRelease();
    v18 = 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = 1;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56))(a2, v18, 1, v5);
}

uint64_t sub_1D25DEDDC(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  void *v16;
  id v17;
  id v18;
  char v19;
  uint64_t result;
  uint64_t v21;

  v3 = v2;
  swift_bridgeObjectRelease();
  v5 = sub_1D26CE010();
  v6 = swift_unknownObjectRetain();
  v7 = sub_1D25DDC28(v6, v5, (uint64_t *)&unk_1ED96C0B0, (unint64_t *)&qword_1ED96BFB8, 0x1E0D101D8, (void (*)(unint64_t))sub_1D25F16F4);
  v21 = v7;
  swift_retain();
  v8 = sub_1D26CDEC0();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    sub_1D2539514(0, (unint64_t *)&qword_1ED96BFB8);
    v11 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v10);
    v12 = sub_1D26CDECC();

    if ((v12 & 1) != 0)
    {
LABEL_6:
      swift_release();
      v16 = *(void **)(*(_QWORD *)(v7 + 48) + 8 * v10);
      sub_1D25DEFB0(v10);
      v17 = a2;
      v18 = v16;
      v19 = sub_1D26CDECC();

      if ((v19 & 1) != 0)
      {
        *v3 = v21;
        return (uint64_t)v18;
      }
      __break(1u);
    }
    else
    {
      v13 = ~v9;
      while (1)
      {
        v10 = (v10 + 1) & v13;
        if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v10);
        v15 = sub_1D26CDECC();

        if ((v15 & 1) != 0)
          goto LABEL_6;
      }
    }
    swift_release();
    __break(1u);
  }
  result = swift_release();
  __break(1u);
  return result;
}

unint64_t sub_1D25DEFB0(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v15;
  _QWORD *v16;
  _QWORD *v17;
  uint64_t v18;
  BOOL v19;
  uint64_t v20;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        v10 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v6);
        v11 = sub_1D26CDEC0();

        v12 = v11 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= (uint64_t)v12)
          {
LABEL_16:
            v15 = *(_QWORD *)(v3 + 48);
            v16 = (_QWORD *)(v15 + 8 * v2);
            v17 = (_QWORD *)(v15 + 8 * v6);
            if (v2 != v6 || (v2 = v6, v16 >= v17 + 1))
            {
              *v16 = *v17;
              v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= (uint64_t)v12)
        {
          goto LABEL_16;
        }
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v18 = *(_QWORD *)(v3 + 16);
  v19 = __OFSUB__(v18, 1);
  v20 = v18 - 1;
  if (v19)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v20;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_1D25DF150(unint64_t result)
{
  uint64_t *v1;
  int64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  _OWORD *v14;
  uint64_t v15;
  BOOL v16;
  uint64_t v17;

  v2 = result;
  v3 = *v1;
  v4 = *v1 + 56;
  v5 = -1 << *(_BYTE *)(*v1 + 32);
  v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(_QWORD *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    v7 = ~v5;
    swift_retain();
    v8 = sub_1D26CDFEC();
    if ((*(_QWORD *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      v9 = (v8 + 1) & v7;
      do
      {
        sub_1D26CE460();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        v10 = sub_1D26CE49C();
        swift_bridgeObjectRelease();
        v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9)
            goto LABEL_5;
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          v12 = *(_QWORD *)(v3 + 48);
          v13 = (_OWORD *)(v12 + 16 * v2);
          v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (v2 = v6, v13 >= v14 + 1))
          {
            *v13 = *v14;
            v2 = v6;
          }
        }
LABEL_5:
        v6 = (v6 + 1) & v7;
      }
      while (((*(_QWORD *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(_QWORD *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    result = swift_release();
  }
  else
  {
    *(_QWORD *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  v15 = *(_QWORD *)(v3 + 16);
  v16 = __OFSUB__(v15, 1);
  v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

uint64_t sub_1D25DF314(int64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  int64_t v15;
  uint64_t v16;
  unint64_t v17;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t *v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v28 = *(_QWORD *)(v3 - 8);
  result = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = *v1;
  v8 = *v1 + 56;
  v9 = -1 << *(_BYTE *)(*v1 + 32);
  v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(_QWORD *)(v8 + 8 * (v10 >> 6))) != 0)
  {
    v25 = v1;
    v11 = ~v9;
    swift_retain();
    v12 = sub_1D26CDFEC();
    v27 = v8;
    if ((*(_QWORD *)(v8 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      v13 = (v12 + 1) & v11;
      v14 = *(_QWORD *)(v28 + 72);
      v26 = *(void (**)(char *, unint64_t, uint64_t))(v28 + 16);
      do
      {
        v15 = v14 * v10;
        v26(v6, *(_QWORD *)(v7 + 48) + v14 * v10, v3);
        sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
        v16 = sub_1D26CD8CC();
        (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v3);
        v17 = v16 & v11;
        if (a1 >= (uint64_t)v13)
        {
          if (v17 < v13 || a1 < (uint64_t)v17)
            goto LABEL_6;
        }
        else if (v17 < v13 && a1 < (uint64_t)v17)
        {
          goto LABEL_6;
        }
        v20 = v14 * a1;
        if (v14 * a1 < v15 || *(_QWORD *)(v7 + 48) + v14 * a1 >= (unint64_t)(*(_QWORD *)(v7 + 48) + v15 + v14))
        {
          swift_arrayInitWithTakeFrontToBack();
        }
        else
        {
          a1 = v10;
          if (v20 == v15)
            goto LABEL_6;
          swift_arrayInitWithTakeBackToFront();
        }
        a1 = v10;
LABEL_6:
        v10 = (v10 + 1) & v11;
      }
      while (((*(_QWORD *)(v27 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    *(_QWORD *)(v27 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
    result = swift_release();
    v1 = v25;
  }
  else
  {
    *(_QWORD *)(v8 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a1) - 1;
  }
  v21 = *v1;
  v22 = *(_QWORD *)(*v1 + 16);
  v23 = __OFSUB__(v22, 1);
  v24 = v22 - 1;
  if (v23)
  {
    __break(1u);
  }
  else
  {
    *(_QWORD *)(v21 + 16) = v24;
    ++*(_DWORD *)(v21 + 36);
  }
  return result;
}

uint64_t sub_1D25DF594(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v20;
  id v21;
  void *v22;
  uint64_t v23;
  uint64_t v24;
  int v25;
  _BYTE v27[16];

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = &v27[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v9);
  v13 = &v27[-v12];
  if (a3)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639A8);
    v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1D26D1280;
    sub_1D26CBC70();
    v15 = sub_1D25F4650(v14);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if (qword_1ED962498 != -1)
      swift_once();
    v16 = byte_1ED962270;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v11, a1, v7);
    if (v16 == 1)
    {
      a4 = sub_1D25D0B68((uint64_t)v11, v15);
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
      return a4 & 1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v11, v7);
LABEL_8:
    swift_bridgeObjectRelease();
    a4 = 0;
    return a4 & 1;
  }
  v17 = sub_1D26CBC88();
  v19 = v18;
  v20 = objc_allocWithZone(MEMORY[0x1E0CA5848]);
  v21 = sub_1D25DDA58(v17, v19, a4 & 1);
  v22 = v21;
  if (v21)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9639A8);
    v23 = swift_allocObject();
    *(_OWORD *)(v23 + 16) = xmmword_1D26D1280;
    sub_1D26CBC70();
    v24 = sub_1D25F4650(v23);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if (qword_1ED962498 != -1)
      swift_once();
    v25 = byte_1ED962270;
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v8 + 16))(v13, a1, v7);
    if (v25 == 1)
    {
      a4 = sub_1D25D0B68((uint64_t)v13, v24);
      swift_bridgeObjectRelease();
      (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);

      return a4 & 1;
    }
    (*(void (**)(_BYTE *, uint64_t))(v8 + 8))(v13, v7);

    goto LABEL_8;
  }
  return a4 & 1;
}

id sub_1D25DFA4C()
{
  void *v0;
  void *v1;
  id v2;
  id v3;
  uint64_t v4;
  id v5;
  id v6;
  id v8;
  __int128 v9;
  __int128 v10;
  uint64_t v11;

  v11 = *MEMORY[0x1E0C80C00];
  v0 = (void *)objc_opt_self();
  v1 = (void *)sub_1D26CD7DC();
  v8 = 0;
  v2 = objc_msgSend(v0, sel_extensionsWithMatchingAttributes_error_, v1, &v8);

  v3 = v8;
  if (v2)
  {
    v4 = sub_1D26CDAF4();
    v5 = v3;

    if (*(_QWORD *)(v4 + 16))
    {
      sub_1D2537950(v4 + 32, (uint64_t)&v9);
    }
    else
    {
      v9 = 0u;
      v10 = 0u;
    }
    swift_bridgeObjectRelease();
    if (*((_QWORD *)&v10 + 1))
    {
      sub_1D2539514(0, &qword_1ED9620B0);
      if (swift_dynamicCast())
        return v8;
      else
        return 0;
    }
    else
    {
      sub_1D253703C((uint64_t)&v9, &qword_1ED96FCE0);
      return 0;
    }
  }
  else
  {
    v6 = v8;
    sub_1D26CB76C();

    return (id)swift_willThrow();
  }
}

_QWORD *sub_1D25DFBE4(unint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v5;
  _QWORD *v6;
  uint64_t i;
  id v8;
  void *v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v16[48];
  _BYTE v17[48];
  void *v18;

  if (a1 >> 62)
    goto LABEL_20;
  v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  for (; v5; v5 = sub_1D26CE1F0())
  {
    v6 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    for (i = 4; ; ++i)
    {
      v8 = (a1 & 0xC000000000000001) != 0 ? (id)MEMORY[0x1D8239890](i - 4, a1) : *(id *)(a1 + 8 * i);
      v9 = v8;
      v10 = i - 3;
      if (__OFADD__(i - 4, 1))
        break;
      v18 = v8;
      sub_1D25D8EA4(&v18, a2, a3, (uint64_t)v16);
      if (v3)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();

        return v6;
      }

      if (v16[40] == 255)
      {
        sub_1D253703C((uint64_t)v16, qword_1ED963A98);
      }
      else
      {
        sub_1D25384CC((uint64_t)v16, (uint64_t)v17, &qword_1ED963578);
        sub_1D25384CC((uint64_t)v17, (uint64_t)v16, &qword_1ED963578);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          v6 = sub_1D2561C4C(0, v6[2] + 1, 1, v6);
        v12 = v6[2];
        v11 = v6[3];
        if (v12 >= v11 >> 1)
          v6 = sub_1D2561C4C((_QWORD *)(v11 > 1), v12 + 1, 1, v6);
        v6[2] = v12 + 1;
        sub_1D25384CC((uint64_t)v16, (uint64_t)&v6[6 * v12 + 4], &qword_1ED963578);
      }
      if (v10 == v5)
      {
        swift_bridgeObjectRelease();
        return v6;
      }
    }
    __break(1u);
LABEL_20:
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return (_QWORD *)MEMORY[0x1E0DEE9D8];
}

uint64_t sub_1D25DFDE0(uint64_t a1, void (*a2)(__int128 *__return_ptr, char *, uint64_t))
{
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t result;
  int64_t v11;
  _QWORD *v12;
  int64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t i;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  int64_t v26;
  __int128 v27;
  uint64_t v28;
  __int128 v29[2];
  void (*v30)(__int128 *__return_ptr, char *, uint64_t);

  v30 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963368);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(a1 + 64);
  v25 = a1 + 64;
  v7 = 1 << *(_BYTE *)(a1 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & v6;
  v26 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v11 = 0;
  v12 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  if (v9)
    goto LABEL_28;
LABEL_6:
  v13 = v11 + 1;
  if (!__OFADD__(v11, 1))
  {
    if (v13 < v26)
    {
      v14 = *(_QWORD *)(v25 + 8 * v13);
      ++v11;
      if (v14)
        goto LABEL_21;
      v11 = v13 + 1;
      if (v13 + 1 >= v26)
        goto LABEL_29;
      v14 = *(_QWORD *)(v25 + 8 * v11);
      if (v14)
        goto LABEL_21;
      v11 = v13 + 2;
      if (v13 + 2 >= v26)
        goto LABEL_29;
      v14 = *(_QWORD *)(v25 + 8 * v11);
      if (v14)
        goto LABEL_21;
      v11 = v13 + 3;
      if (v13 + 3 >= v26)
        goto LABEL_29;
      v14 = *(_QWORD *)(v25 + 8 * v11);
      if (v14)
      {
LABEL_21:
        v9 = (v14 - 1) & v14;
        for (i = __clz(__rbit64(v14)) + (v11 << 6); ; i = v23 | (v11 << 6))
        {
          v17 = *(_QWORD *)(a1 + 48);
          v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
          (*(void (**)(char *, unint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(v5, v17 + *(_QWORD *)(*(_QWORD *)(v18 - 8) + 72) * i, v18);
          v19 = *(_QWORD *)(a1 + 56) + 40 * i;
          v20 = (uint64_t)&v5[*(int *)(v3 + 48)];
          sub_1D2538510(v19, v20);
          v30(&v27, v5, v20);
          sub_1D253703C((uint64_t)v5, &qword_1ED963368);
          if (v28)
          {
            sub_1D2538F38(&v27, (uint64_t)v29);
            sub_1D2538F38(v29, (uint64_t)&v27);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              v12 = sub_1D2538F50(0, v12[2] + 1, 1, v12);
            v22 = v12[2];
            v21 = v12[3];
            if (v22 >= v21 >> 1)
              v12 = sub_1D2538F50((_QWORD *)(v21 > 1), v22 + 1, 1, v12);
            v12[2] = v22 + 1;
            result = sub_1D2538F38(&v27, (uint64_t)&v12[5 * v22 + 4]);
            if (!v9)
              goto LABEL_6;
          }
          else
          {
            result = sub_1D253703C((uint64_t)&v27, &qword_1ED962040);
            if (!v9)
              goto LABEL_6;
          }
LABEL_28:
          v23 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
        }
      }
      v15 = v13 + 4;
      if (v15 < v26)
      {
        v14 = *(_QWORD *)(v25 + 8 * v15);
        if (v14)
        {
          v11 = v15;
          goto LABEL_21;
        }
        while (1)
        {
          v11 = v15 + 1;
          if (__OFADD__(v15, 1))
            goto LABEL_31;
          if (v11 >= v26)
            break;
          v14 = *(_QWORD *)(v25 + 8 * v11);
          ++v15;
          if (v14)
            goto LABEL_21;
        }
      }
    }
LABEL_29:
    swift_release();
    return (uint64_t)v12;
  }
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1D25E00DC(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _BYTE v13[48];
  _BYTE v14[48];
  uint64_t v15;

  v3 = result;
  v4 = MEMORY[0x1E0DEE9D8];
  v15 = MEMORY[0x1E0DEE9D8];
  v5 = *(_QWORD *)(result + 16);
  if (v5)
  {
    v7 = 0;
    v8 = result + 32;
    while (v7 < *(_QWORD *)(v3 + 16))
    {
      sub_1D2537078(v8, (uint64_t)v14, &qword_1ED963578);
      sub_1D25D9714((uint64_t)v14, a2);
      if (v2)
      {
        sub_1D253703C((uint64_t)v14, &qword_1ED963578);
        swift_release();
        swift_bridgeObjectRelease();
        return v4;
      }
      if ((v9 & 1) != 0)
      {
        v10 = a2;
        sub_1D25384CC((uint64_t)v14, (uint64_t)v13, &qword_1ED963578);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D25843E4(0, *(_QWORD *)(v4 + 16) + 1, 1);
        v4 = v15;
        v12 = *(_QWORD *)(v15 + 16);
        v11 = *(_QWORD *)(v15 + 24);
        if (v12 >= v11 >> 1)
        {
          sub_1D25843E4(v11 > 1, v12 + 1, 1);
          v4 = v15;
        }
        *(_QWORD *)(v4 + 16) = v12 + 1;
        result = sub_1D25384CC((uint64_t)v13, v4 + 48 * v12 + 32, &qword_1ED963578);
        a2 = v10;
      }
      else
      {
        result = sub_1D253703C((uint64_t)v14, &qword_1ED963578);
      }
      ++v7;
      v8 += 48;
      if (v5 == v7)
      {
        v4 = v15;
        goto LABEL_15;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_15:
    swift_bridgeObjectRelease();
    return v4;
  }
  return result;
}

id sub_1D25E0278(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6)
{
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _DWORD *v24;
  id v25;
  id v26;
  objc_super v28;
  _QWORD v29[5];
  _QWORD v30[5];
  _QWORD v31[5];

  v31[3] = type metadata accessor for _WidgetExtensionFactory();
  v31[4] = &off_1E93D3578;
  v31[0] = a2;
  v30[3] = type metadata accessor for _SystemNSExtensionDiscoverer();
  v30[4] = &off_1E93D4628;
  v30[0] = a3;
  v29[3] = sub_1D2539514(0, (unint64_t *)&unk_1ED9620E0);
  v29[4] = &protocol witness table for LSApplicationWorkspace;
  v29[0] = a5;
  a6[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions] = 1;
  v12 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__extensionsPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  v13 = a6;
  *(_QWORD *)&a6[v12] = sub_1D26CC150();
  v14 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__addedPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B88);
  swift_allocObject();
  *(_QWORD *)&v13[v14] = sub_1D26CC150();
  v15 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__updatedPublisher;
  swift_allocObject();
  *(_QWORD *)&v13[v15] = sub_1D26CC150();
  v16 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__removedPublisher;
  swift_allocObject();
  *(_QWORD *)&v13[v16] = sub_1D26CC150();
  v17 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963920);
  v18 = swift_allocObject();
  v19 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v18 + 24) = 0;
  *(_QWORD *)(v18 + 16) = v19;
  *(_QWORD *)&v13[v17] = v18;
  v20 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_removedPluginUUIDsByIdentifier;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963918);
  v21 = swift_allocObject();
  *(_DWORD *)(v21 + 24) = 0;
  *(_QWORD *)(v21 + 16) = v19;
  *(_QWORD *)&v13[v20] = v21;
  v22 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_lookupLock;
  type metadata accessor for UnfairLock();
  v23 = swift_allocObject();
  v24 = (_DWORD *)swift_slowAlloc();
  *v24 = 0;
  *(_QWORD *)(v23 + 16) = v24;
  *(_QWORD *)&v13[v22] = v23;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscovererSubscription] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionSubscription] = 0;
  *(_QWORD *)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_queue] = a1;
  sub_1D2538510((uint64_t)v31, (uint64_t)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionFactory]);
  sub_1D2538510((uint64_t)v30, (uint64_t)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscoverer]);
  sub_1D2538510(a4, (uint64_t)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionProvider]);
  sub_1D2538510((uint64_t)v29, (uint64_t)&v13[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_applicationWorkspace]);
  v25 = a1;

  v28.receiver = v13;
  v28.super_class = (Class)type metadata accessor for ExtensionManager();
  v26 = objc_msgSendSuper2(&v28, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v29);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v30);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v31);
  return v26;
}

id sub_1D25E0520(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t *v20;
  uint64_t *v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _DWORD *v34;
  id v35;
  id v36;
  objc_super v39;
  uint64_t v40[5];
  uint64_t v41[5];
  uint64_t v42[6];

  v42[3] = a9;
  v42[4] = a12;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v42);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a9 - 8) + 32))(boxed_opaque_existential_1, a2, a9);
  v41[3] = a7;
  v41[4] = a10;
  v20 = __swift_allocate_boxed_opaque_existential_1(v41);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a7 - 8) + 32))(v20, a3, a7);
  v40[3] = a8;
  v40[4] = a11;
  v21 = __swift_allocate_boxed_opaque_existential_1(v40);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a8 - 8) + 32))(v21, a5, a8);
  a6[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions] = 1;
  v22 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__extensionsPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  v23 = a6;
  *(_QWORD *)&a6[v22] = sub_1D26CC150();
  v24 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__addedPublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B88);
  swift_allocObject();
  *(_QWORD *)&v23[v24] = sub_1D26CC150();
  v25 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__updatedPublisher;
  swift_allocObject();
  *(_QWORD *)&v23[v25] = sub_1D26CC150();
  v26 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager__removedPublisher;
  swift_allocObject();
  *(_QWORD *)&v23[v26] = sub_1D26CC150();
  v27 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionsByIdentifier;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963920);
  v28 = swift_allocObject();
  v29 = MEMORY[0x1E0DEE9E0];
  *(_DWORD *)(v28 + 24) = 0;
  *(_QWORD *)(v28 + 16) = v29;
  *(_QWORD *)&v23[v27] = v28;
  v30 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_removedPluginUUIDsByIdentifier;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963918);
  v31 = swift_allocObject();
  *(_DWORD *)(v31 + 24) = 0;
  *(_QWORD *)(v31 + 16) = v29;
  *(_QWORD *)&v23[v30] = v31;
  v32 = OBJC_IVAR____TtC9ChronoKit16ExtensionManager_lookupLock;
  type metadata accessor for UnfairLock();
  v33 = swift_allocObject();
  v34 = (_DWORD *)swift_slowAlloc();
  *v34 = 0;
  *(_QWORD *)(v33 + 16) = v34;
  *(_QWORD *)&v23[v32] = v33;
  *(_QWORD *)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscovererSubscription] = 0;
  *(_QWORD *)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionSubscription] = 0;
  *(_QWORD *)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_queue] = a1;
  sub_1D2538510((uint64_t)v42, (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_extensionFactory]);
  sub_1D2538510((uint64_t)v41, (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_nsExtensionDiscoverer]);
  sub_1D2538510(a4, (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_remoteWidgetExtensionProvider]);
  sub_1D2538510((uint64_t)v40, (uint64_t)&v23[OBJC_IVAR____TtC9ChronoKit16ExtensionManager_applicationWorkspace]);
  v35 = a1;

  v39.receiver = v23;
  v39.super_class = (Class)type metadata accessor for ExtensionManager();
  v36 = objc_msgSendSuper2(&v39, sel_init);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v40);
  __swift_destroy_boxed_opaque_existential_1(a4);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v41);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
  return v36;
}

id sub_1D25E07FC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, __int128 a10, uint64_t a11)
{
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  _BYTE *v25;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  __int128 v31;
  void *v32;
  uint64_t v33;

  v32 = a1;
  v33 = a4;
  v27 = a2;
  v28 = a3;
  v31 = a10;
  v29 = a11;
  v30 = a5;
  v13 = *(_QWORD *)(a8 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(v17 - 8);
  v19 = MEMORY[0x1E0C80A78](v14);
  v21 = (char *)&v27 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = *(_QWORD *)(a9 - 8);
  MEMORY[0x1E0C80A78](v19);
  v24 = (char *)&v27 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = objc_allocWithZone((Class)type metadata accessor for ExtensionManager());
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v24, v27, a9);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v21, v28, a7);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v16, v30, a8);
  return sub_1D25E0520(v32, (uint64_t)v24, (uint64_t)v21, v33, (uint64_t)v16, v25, a7, a8, a9, v31, *((uint64_t *)&v31 + 1), v29);
}

uint64_t type metadata accessor for ExtensionManager.InitialValueObserver()
{
  return objc_opt_self();
}

uint64_t sub_1D25E0988()
{
  swift_unknownObjectWeakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D25E09B0(unint64_t *a1)
{
  uint64_t v1;

  return sub_1D25D75D8(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t objectdestroy_2Tm_0()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25E09E8(uint64_t *a1)
{
  uint64_t v1;

  return sub_1D25D7988(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D25E09F0@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1D25E0A40(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit16ExtensionManager_requireValidExtensions);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t dispatch thunk of ExtensionFactory.makeExtension(from:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SystemApplicationWorkspace.pluginProxyForBundleIdentifier(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of SystemApplicationWorkspace.addObserver(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SystemNSExtensionDiscoverer.publisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of SystemNSExtensionDiscoverer.nsExtension(attributes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of SystemNSExtensionDiscoverer.start()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of SystemNSExtensionDiscoverer.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t method lookup function for ExtensionManager()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ExtensionManager.extensions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xC8))();
}

uint64_t dispatch thunk of ExtensionManager.requireValidExtensions.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD0))();
}

uint64_t dispatch thunk of ExtensionManager.requireValidExtensions.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xD8))();
}

uint64_t dispatch thunk of ExtensionManager.requireValidExtensions.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE0))();
}

uint64_t dispatch thunk of ExtensionManager.extensionsPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xE8))();
}

uint64_t dispatch thunk of ExtensionManager.addedPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF0))();
}

uint64_t dispatch thunk of ExtensionManager.updatedPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0xF8))();
}

uint64_t dispatch thunk of ExtensionManager.removedPublisher.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x100))();
}

uint64_t dispatch thunk of ExtensionManager.__allocating_init(queue:extensionFactory:nsExtensionDiscoverer:remoteWidgetExtensionProvider:applicationWorkspace:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 456))();
}

uint64_t dispatch thunk of ExtensionManager.start(completion:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D0))();
}

uint64_t dispatch thunk of ExtensionManager.extension(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1D8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E0))();
}

uint64_t dispatch thunk of ExtensionManager.extensions(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1E8))();
}

{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x1F0))();
}

uint64_t dispatch thunk of ExtensionManager.pluginsDidUninstall(_:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x208))();
}

uint64_t dispatch thunk of ExtensionManager.localExtension(for:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x218))();
}

uint64_t sub_1D25E0C9C()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D25E0CC0()
{
  return swift_deallocObject();
}

uint64_t sub_1D25E0CD0()
{
  uint64_t v0;

  swift_release();
  swift_release();

  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25E0D14()
{
  uint64_t *v0;

  return sub_1D25DCD6C(v0[2], v0[3], v0[4], v0[5], v0[6]);
}

uint64_t sub_1D25E0D24()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

void sub_1D25E0D48(uint64_t a1, void *a2)
{
  sub_1D25D62F8(a1, a2);
}

uint64_t sub_1D25E0D50(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCE0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25E0D98@<X0>(uint64_t *a1@<X8>)
{
  return sub_1D253453C(a1);
}

uint64_t sub_1D25E0DB0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

uint64_t sub_1D25E0DDC()
{
  uint64_t v0;

  return sub_1D25DBD00(*(_QWORD *)(v0 + 16), v0 + 24);
}

uint64_t sub_1D25E0DE8()
{
  uint64_t v0;

  swift_release();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_1D25E0E1C()
{
  uint64_t v0;

  return sub_1D25DB660(*(_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D25E0E28(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteWidgetExtension();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25E0E70()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D25E0ED0;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1D25E0ED0()
{
  uint64_t *v0;
  uint64_t v2;

  v2 = *v0;
  swift_task_dealloc();
  return (*(uint64_t (**)(void))(v2 + 8))();
}

uint64_t sub_1D25E0F18()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25E0F3C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  int *v4;
  _QWORD *v5;

  v4 = *(int **)(v1 + 16);
  v5 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v2 + 16) = v5;
  *v5 = v2;
  v5[1] = sub_1D25E0ED0;
  return ((uint64_t (*)(uint64_t, int *))((char *)&dword_1EFC82EB0 + dword_1EFC82EB0))(a1, v4);
}

uint64_t objectdestroy_43Tm()
{
  swift_unknownObjectRelease();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25E0FDC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;

  v2 = *(_QWORD *)(v0 + 32);
  v3 = (_QWORD *)swift_task_alloc();
  *(_QWORD *)(v1 + 16) = v3;
  *v3 = v1;
  v3[1] = sub_1D25E103C;
  v3[2] = v2;
  return swift_task_switch();
}

uint64_t sub_1D25E1058()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1D25E10C0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v9;
  unsigned int v10;
  uint64_t v11;

  v3 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_DWORD *)(v4 + 80);
  if (v6 <= 7 && (unint64_t)(v5 + 1) <= 0x18 && (*(_DWORD *)(v4 + 80) & 0x100000) == 0)
  {
    v10 = *((unsigned __int8 *)a2 + v5);
    if (v10 >= 2)
    {
      if (v5 <= 3)
        v11 = v5;
      else
        v11 = 4;
      __asm { BR              X12 }
    }
    (*(void (**)(uint64_t *))(v4 + 16))(a1);
    *((_BYTE *)v3 + v5) = v10 == 1;
  }
  else
  {
    v9 = *a2;
    *v3 = *a2;
    v3 = (uint64_t *)(v9 + ((v6 + 16) & ~v6));
    swift_retain();
  }
  return v3;
}

uint64_t sub_1D25E11C4(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 8))();
}

uint64_t sub_1D25E11D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  v8 = v6 == 1;
  (*(void (**)(uint64_t))(v4 + 16))(a1);
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1D25E1290(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    v10 = v8 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v10;
  }
  return a1;
}

uint64_t sub_1D25E1378(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  unsigned int v6;
  uint64_t v7;
  BOOL v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(unsigned __int8 *)(a2 + v5);
  if (v6 >= 2)
  {
    if (v5 <= 3)
      v7 = v5;
    else
      v7 = 4;
    __asm { BR              X13 }
  }
  v8 = v6 == 1;
  (*(void (**)(uint64_t))(v4 + 32))(a1);
  *(_BYTE *)(a1 + v5) = v8;
  return a1;
}

uint64_t sub_1D25E1434(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unsigned int v8;
  uint64_t v9;
  BOOL v10;

  if (a1 != a2)
  {
    v5 = *(_QWORD *)(a3 + 16);
    v6 = *(_QWORD *)(v5 - 8);
    v7 = *(_QWORD *)(v6 + 64);
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    v8 = *(unsigned __int8 *)(a2 + v7);
    if (v8 >= 2)
    {
      if (v7 <= 3)
        v9 = v7;
      else
        v9 = 4;
      __asm { BR              X12 }
    }
    v10 = v8 == 1;
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 32))(a1, a2, v5);
    *(_BYTE *)(a1 + v7) = v10;
  }
  return a1;
}

uint64_t sub_1D25E151C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v4;
  char v5;
  int v6;
  unsigned int v8;
  int v9;
  unsigned int v10;

  if (!a2)
    return 0;
  v3 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 < 0xFF)
    goto LABEL_19;
  v4 = v3 + 1;
  v5 = 8 * (v3 + 1);
  if ((v3 + 1) <= 3)
  {
    v8 = ((a2 + ~(-1 << v5) - 254) >> v5) + 1;
    if (HIWORD(v8))
    {
      v6 = *(_DWORD *)(a1 + v4);
      if (!v6)
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 > 0xFF)
    {
      v6 = *(unsigned __int16 *)(a1 + v4);
      if (!*(_WORD *)(a1 + v4))
        goto LABEL_19;
      goto LABEL_12;
    }
    if (v8 < 2)
    {
LABEL_19:
      v10 = *(unsigned __int8 *)(a1 + v3);
      if (v10 >= 2)
        return (v10 ^ 0xFF) + 1;
      else
        return 0;
    }
  }
  v6 = *(unsigned __int8 *)(a1 + v4);
  if (!*(_BYTE *)(a1 + v4))
    goto LABEL_19;
LABEL_12:
  v9 = (v6 - 1) << v5;
  if (v4 > 3)
    v9 = 0;
  if (!(_DWORD)v4)
    return (v9 + 255);
  if (v4 > 3)
    LODWORD(v4) = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D25E15D4 + 4 * byte_1D26D5C99[(v4 - 1)]))();
}

void sub_1D25E1620(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  size_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  int v10;

  v5 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a4 + 16) - 8) + 64);
  v6 = v5 + 1;
  if (a3 < 0xFF)
  {
    v7 = 0u;
  }
  else if (v6 <= 3)
  {
    v9 = ((a3 + ~(-1 << (8 * v6)) - 254) >> (8 * v6)) + 1;
    if (HIWORD(v9))
    {
      v7 = 4u;
    }
    else if (v9 >= 0x100)
    {
      v7 = 2;
    }
    else
    {
      v7 = v9 > 1;
    }
  }
  else
  {
    v7 = 1u;
  }
  if (a2 <= 0xFE)
    __asm { BR              X11 }
  v8 = a2 - 255;
  if (v6 < 4)
  {
    if ((_DWORD)v5 != -1)
    {
      v10 = v8 & ~(-1 << (8 * v6));
      bzero(a1, v6);
      if ((_DWORD)v6 == 3)
      {
        *a1 = v10;
        *((_BYTE *)a1 + 2) = BYTE2(v10);
      }
      else if ((_DWORD)v6 == 2)
      {
        *a1 = v10;
      }
      else
      {
        *(_BYTE *)a1 = v10;
      }
    }
  }
  else
  {
    bzero(a1, v5 + 1);
    *(_DWORD *)a1 = v8;
  }
  __asm { BR              X10 }
}

uint64_t sub_1D25E17BC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 64);
  if (*(unsigned __int8 *)(a1 + v2) < 2u)
    return *(unsigned __int8 *)(a1 + v2);
  if (v2 <= 3)
    v3 = v2;
  else
    v3 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D25E17F8 + 4 * byte_1D26D5CA7[v3]))();
}

void sub_1D25E1840(_BYTE *a1, unsigned int a2, uint64_t a3)
{
  size_t v4;
  unsigned int v5;
  unsigned int v6;
  int v7;

  v4 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)(a3 + 16) - 8) + 64);
  if (a2 > 1)
  {
    v5 = a2 - 2;
    if (v4 < 4)
    {
      v6 = v5 >> (8 * v4);
      v7 = v5 & ~(-1 << (8 * v4));
      a1[v4] = v6 + 2;
      bzero(a1, v4);
      if ((_DWORD)v4 == 3)
      {
        *(_WORD *)a1 = v7;
        a1[2] = BYTE2(v7);
      }
      else if ((_DWORD)v4 == 2)
      {
        *(_WORD *)a1 = v7;
      }
      else
      {
        *a1 = v7;
      }
    }
    else
    {
      a1[v4] = 2;
      bzero(a1, v4);
      *(_DWORD *)a1 = v5;
    }
  }
  else
  {
    a1[v4] = a2;
  }
}

uint64_t type metadata accessor for ExtensionChange(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for ExtensionChange);
}

uint64_t sub_1D25E1908()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D25E1978()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtCC9ChronoKit34WidgetPreviewHostingViewController15EntryController__entryIndex;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F90);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D25E19CC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for WidgetPreviewHostingViewController.EntryController();
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

uint64_t sub_1D25E1A08(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_viewCollection);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D25E1A70()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1D25E1AB8()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 24);
}

double sub_1D25E1ACC()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 32);
  v2 = objc_retain(*(id *)(v0
                         + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView
                         + 40));
  swift_retain();
  swift_retain();
  v3 = v1;
  v4 = (void *)sub_1D26CD7A0();

  swift_release();
  swift_release();
  objc_msgSend(v4, sel__effectiveCornerRadius);
  v6 = v5;

  return v6;
}

double sub_1D25E1B6C()
{
  uint64_t v0;
  void *v1;
  id v2;
  id v3;
  void *v4;
  double v5;
  double v6;

  v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 32);
  v2 = objc_retain(*(id *)(v0
                         + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView
                         + 40));
  swift_retain();
  swift_retain();
  v3 = v1;
  v4 = (void *)sub_1D26CD7A0();

  swift_release();
  swift_release();
  objc_msgSend(v4, sel__rawEffectiveSize);
  v6 = v5;

  return v6;
}

uint64_t WidgetPreviewHostingViewController.usesIOSLockScreenVibrancyEffect.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0
                            + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_usesIOSLockScreenVibrancyEffect);
}

uint64_t sub_1D25E1C24()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_isLuminanceReduced);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D25E1C68(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_isLuminanceReduced);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D25E1CB0())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

char *WidgetPreviewHostingViewController.__allocating_init(viewCollection:currentEntryIndex:widgetLocation:usesIOSLockScreenVibrancyEffect:renderBoxRendersAsynchronously:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  objc_class *v5;
  id v11;

  v11 = objc_allocWithZone(v5);
  return WidgetPreviewHostingViewController.init(viewCollection:currentEntryIndex:widgetLocation:usesIOSLockScreenVibrancyEffect:renderBoxRendersAsynchronously:)(a1, a2, a3, a4, a5);
}

char *WidgetPreviewHostingViewController.init(viewCollection:currentEntryIndex:widgetLocation:usesIOSLockScreenVibrancyEffect:renderBoxRendersAsynchronously:)(uint64_t a1, uint64_t a2, uint64_t a3, char a4, char a5)
{
  _BYTE *v5;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  void *v15;
  void *v16;
  id v17;
  id v18;
  uint64_t v19;
  char *v20;
  void **v21;
  void *v22;
  uint64_t v23;
  void *v24;
  char *v25;
  id v26;
  id v27;
  _BOOL8 v28;
  char *v29;
  void *v30;
  char *v31;
  uint64_t v32;
  id v33;
  id v34;
  id v35;
  id v36;
  char *v37;
  id v38;
  id v39;
  char *result;
  char *v41;
  id v42;
  char *v43;
  uint64_t v44;
  id v45;
  char *v46;
  void *v47;
  id v48;
  char *v49;
  id v50;
  void *v51;
  double v52;
  double v53;
  double v54;
  double v55;
  char *v56;

  v5[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_isLuminanceReduced] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters] = 0;
  *(_QWORD *)&v5[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_viewCollection] = a1;
  type metadata accessor for WidgetPreviewHostingViewController.EntryController();
  v10 = swift_allocObject();
  swift_beginAccess();
  v11 = v5;
  swift_retain();
  sub_1D26CC1B0();
  swift_endAccess();
  *(_QWORD *)&v11[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_entryController] = v10;
  sub_1D25369B0(&qword_1EFC82F08, (uint64_t (*)(uint64_t))type metadata accessor for WidgetPreviewHostingViewController.EntryController, (uint64_t)&unk_1D26D5E0C);
  swift_retain();
  swift_retain();
  v12 = sub_1D26CC39C();
  v13 = (uint64_t *)&v11[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView];
  *v13 = v12;
  v13[1] = v14;
  v13[2] = a1;
  v13[3] = a3;
  v13[4] = 0;
  v13[5] = 0;
  v11[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_usesIOSLockScreenVibrancyEffect] = a4;

  v15 = (void *)v13[4];
  v16 = (void *)v13[5];
  sub_1D25E22A0();
  swift_retain();
  swift_retain();
  v17 = v15;
  v18 = v16;
  v19 = sub_1D26CCFC0();
  v20 = sub_1D25878D8(v19, 0, (unint64_t)(a3 - 2) < 4, a5);
  v21 = (void **)&v20[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters];
  swift_beginAccess();
  v22 = *v21;
  if (v22)
  {
    v23 = OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView;
    v24 = *(void **)&v20[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView];
    v25 = v20;
    v26 = v22;
    v27 = v24;
    v28 = objc_msgSend(v26, sel_filterStyle) == (id)2 || objc_msgSend(v26, sel_filterStyle) == (id)3;
    objc_msgSend(v27, sel_setIsEnabled_, v28);

    v30 = *(void **)&v20[v23];
    v31 = &v25[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_vibrancyColor];
    swift_beginAccess();
    v32 = *(_QWORD *)v31;
    if (v32)
    {
      v33 = objc_allocWithZone(MEMORY[0x1E0D01958]);
      v34 = v30;
      v35 = objc_msgSend(v33, sel_initWithEffectType_backgroundType_color_, 1, 0, v32);
    }
    else
    {
      v36 = objc_allocWithZone(MEMORY[0x1E0DC3658]);
      v37 = v25;
      v38 = v30;
      v39 = objc_msgSend(v36, sel_initWithWhite_alpha_, 1.0, 0.5);
      v35 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D01958]), sel_initWithEffectType_backgroundType_color_, 0, 0, v39);

    }
    objc_msgSend(v30, sel_setConfiguration_, v35);

  }
  else
  {
    v29 = v20;
  }
  result = (char *)objc_msgSend(v20, sel_view);
  if (!result)
  {
    __break(1u);
    goto LABEL_15;
  }
  v41 = result;
  v42 = objc_msgSend((id)objc_opt_self(), sel_clearColor);
  objc_msgSend(v41, sel_setBackgroundColor_, v42);

  result = (char *)objc_msgSend(v20, sel_view);
  if (!result)
  {
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  v43 = result;
  v44 = OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView;
  objc_msgSend(result, sel_addSubview_, *(_QWORD *)&v20[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView]);

  v45 = objc_msgSend(*(id *)&v20[v44], sel_contentView);
  result = (char *)objc_msgSend(*(id *)&v20[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController], sel_view);
  if (result)
  {
    v46 = result;
    objc_msgSend(v45, sel_addSubview_, result);

    v47 = *(void **)&v20[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 32];
    v48 = objc_retain(*(id *)&v20[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView
                                + 40]);
    v49 = v20;
    swift_retain();
    swift_retain();
    v50 = v47;
    v51 = (void *)sub_1D26CD7A0();

    swift_release();
    swift_release();
    objc_msgSend(v51, sel__rawEffectiveSize);
    v53 = v52;
    v55 = v54;

    objc_msgSend(v49, sel_setPreferredContentSize_, v53, v55);
    v56 = v49;
    sub_1D2587DC4();

    swift_release();
    return v56;
  }
LABEL_16:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for WidgetPreviewHostingViewController.EntryController()
{
  uint64_t result;

  result = qword_1EFC82F18;
  if (!qword_1EFC82F18)
    return swift_getSingletonMetadata();
  return result;
}

unint64_t sub_1D25E22A0()
{
  unint64_t result;

  result = qword_1EFC82F10;
  if (!qword_1EFC82F10)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D5DBC, &type metadata for WidgetPreviewHostingViewController._AutoupdatingPreviewView);
    atomic_store(result, (unint64_t *)&qword_1EFC82F10);
  }
  return result;
}

id WidgetPreviewHostingViewController.__allocating_init(coder:)(void *a1)
{
  objc_class *v1;
  id v3;

  v3 = objc_msgSend(objc_allocWithZone(v1), sel_initWithCoder_, a1);

  return v3;
}

void WidgetPreviewHostingViewController.init(coder:)()
{
  _BYTE *v0;

  v0[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_isLuminanceReduced] = 0;
  *(_QWORD *)&v0[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters] = 0;

  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D25E2418@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  char **v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char *v49;
  void (*v50)(char *, uint64_t);
  void (*v51)(char *, uint64_t);
  void (*v52)(char *, char *, uint64_t);
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int v57;
  uint64_t v58;
  uint64_t v59;
  void (*v60)(char *, uint64_t);
  void (*v61)(char *, uint64_t);
  void (*v62)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v63;
  void (*v64)(char *, uint64_t);
  void (*v65)(char *, char *, uint64_t);
  void (*v66)(void *, uint64_t);
  uint64_t v67;
  NSObject *v68;
  os_log_type_t v69;
  _BOOL4 v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint8_t *v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  void (*v78)(char *, char *, uint64_t);
  uint64_t v79;
  uint64_t v80;
  void *v81;
  void *v82;
  id v83;
  id v84;
  id v85;
  id v86;
  NSObject *v87;
  os_log_type_t v88;
  _BOOL4 v89;
  uint8_t *v90;
  char *v91;
  void *v92;
  uint64_t v93;
  unint64_t v94;
  unint64_t v95;
  uint64_t v96;
  os_log_t v97;
  uint8_t *v98;
  uint64_t v99;
  uint64_t v100;
  void (*v101)(char *, uint64_t);
  char *v102;
  char *v103;
  char *v104;
  uint64_t v105;
  char *v106;
  char *v107;
  uint64_t v108;
  uint64_t v109;
  char *v110;
  void (*v111)(char *, char *, uint64_t);
  int v112;
  void (*v113)(char *, uint64_t);
  char *v114;
  uint64_t *v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  NSObject *v119;
  os_log_type_t v120;
  uint8_t *v121;
  uint8_t *v122;
  int v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  id v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t KeyPath;
  uint64_t *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  NSObject *v140;
  os_log_type_t v141;
  uint8_t *v142;
  char *v143;
  uint64_t v144;
  uint64_t v145;
  uint64_t v146;
  uint64_t v147;
  uint8_t *v148;
  uint8_t *v149;
  os_log_t v150;
  uint64_t v151;
  void *v152;
  uint64_t v153;
  uint64_t v154;
  void (*v155)(char *, char *, uint64_t);
  char *v156;
  char *v157;
  char *v158;
  void (*v159)(char *, uint64_t);
  uint64_t v160;
  void *v161;
  void (*v162)(char *, uint64_t);
  char *v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  char *v168;
  uint64_t v169;
  char *v170;
  char *v171;
  char *v172;
  char *v173;
  char *v174;
  char *v175;
  char *v176;
  void (*v177)(char *, char *, uint64_t);
  uint64_t v178;
  uint64_t v179;
  uint64_t v180;
  void (*v181)(char *, uint64_t);
  char *v182;
  uint64_t v183;
  uint64_t v184;
  id v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  uint64_t v189;
  uint64_t *v190;
  uint64_t v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  __int128 v199;

  v195 = a1;
  v191 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963CA8);
  MEMORY[0x1E0C80A78](v191);
  v194 = (uint64_t *)((char *)&v148 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F30);
  MEMORY[0x1E0C80A78](v3);
  v190 = (uint64_t *)((char *)&v148 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  v188 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F38);
  MEMORY[0x1E0C80A78](v188);
  v192 = (uint64_t)&v148 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v189 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F40);
  MEMORY[0x1E0C80A78](v189);
  v193 = (uint64_t)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  MEMORY[0x1E0C80A78](v7);
  v163 = (char *)&v148 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  MEMORY[0x1E0C80A78](v9);
  v174 = (char *)&v148 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v167 = sub_1D26CD56C();
  v166 = *(_QWORD *)(v167 - 8);
  MEMORY[0x1E0C80A78](v167);
  v164 = (char *)&v148 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v179 = sub_1D26CD164();
  v177 = *(void (**)(char *, char *, uint64_t))(v179 - 8);
  v12 = MEMORY[0x1E0C80A78](v179);
  v173 = (char *)&v148 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v182 = (char *)&v148 - v14;
  v180 = sub_1D26CD1DC();
  v178 = *(_QWORD *)(v180 - 8);
  MEMORY[0x1E0C80A78](v180);
  v16 = (char *)&v148 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = sub_1D26CD170();
  v183 = *(_QWORD *)(v17 - 8);
  v184 = v17;
  v18 = MEMORY[0x1E0C80A78](v17);
  v172 = (char *)&v148 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v18);
  v22 = (char *)&v148 - v21;
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)&v148 - v23;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B280);
  v26 = MEMORY[0x1E0C80A78](v25);
  v170 = (char *)&v148 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28 = MEMORY[0x1E0C80A78](v26);
  v171 = (char *)&v148 - v29;
  v30 = MEMORY[0x1E0C80A78](v28);
  v32 = (char *)&v148 - v31;
  MEMORY[0x1E0C80A78](v30);
  v176 = (char *)&v148 - v33;
  v34 = sub_1D26CC7A4();
  v181 = *(void (**)(char *, uint64_t))(v34 - 8);
  v35 = MEMORY[0x1E0C80A78](v34);
  v168 = (char *)&v148 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v35);
  v39 = (char *)&v148 - v38;
  MEMORY[0x1E0C80A78](v37);
  v175 = (char *)&v148 - v40;
  v196 = sub_1D26CC2C4();
  v187 = *(_QWORD *)(v196 - 8);
  MEMORY[0x1E0C80A78](v196);
  v186 = (char *)&v148 - ((v41 + 15) & 0xFFFFFFFFFFFFFFF0);
  v42 = *(_QWORD *)(v1 + 24) - 2;
  v43 = (void *)objc_opt_self();
  v44 = &selRef_clearColor;
  if (v42 >= 4)
    v44 = &selRef_systemBackgroundColor;
  v185 = objc_msgSend(v43, *v44);
  v199 = *(_OWORD *)v1;
  v45 = *((_QWORD *)&v199 + 1);
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  v165 = v45;
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  sub_1D25E50AC((uint64_t)&v199);
  v46 = v198;
  v169 = v1;
  v47 = *(_QWORD *)(v1 + 16);
  v48 = *(_QWORD *)(sub_1D26CD794() + 16);
  swift_bridgeObjectRelease();
  if (v46 >= v48)
    goto LABEL_9;
  sub_1D26CD758();
  sub_1D26CC798();
  v49 = v16;
  sub_1D26CD194();
  v158 = v16;
  v50 = v181;
  v162 = (void (*)(char *, uint64_t))*((_QWORD *)v181 + 1);
  v162(v39, v34);
  v51 = *(void (**)(char *, uint64_t))(v178 + 8);
  v51(v49, v180);
  v52 = *(void (**)(char *, char *, uint64_t))(v183 + 16);
  v161 = v24;
  v53 = v24;
  v54 = v184;
  v155 = v52;
  v52(v22, v53, v184);
  v154 = sub_1D25369B0(&qword_1EFC82F58, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFBE0], MEMORY[0x1E0CEFBE8]);
  sub_1D26CDA4C();
  v55 = sub_1D25369B0(&qword_1EFC82F60, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFBD0], MEMORY[0x1E0CEFBD8]);
  v56 = v179;
  v153 = v55;
  sub_1D26CDF44();
  v178 = *((_QWORD *)v50 + 6);
  v57 = ((uint64_t (*)(char *, uint64_t, uint64_t))v178)(v32, 1, v34);
  v160 = v47;
  v58 = v56;
  v59 = v54;
  v157 = v22;
  v156 = v39;
  v159 = v51;
  if (v57 == 1)
  {
    v60 = (void (*)(char *, uint64_t))*((_QWORD *)v177 + 1);
    v60(v182, v58);
    v61 = v181;
    v62 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v181 + 7);
    v63 = (uint64_t)v176;
    v62(v176, 1, 1, v34);
  }
  else
  {
    v64 = v181;
    v65 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v181 + 4);
    v65(v39, v32, v34);
    v60 = (void (*)(char *, uint64_t))*((_QWORD *)v177 + 1);
    v60(v182, v58);
    v63 = (uint64_t)v176;
    v65(v176, v39, v34);
    v62 = (void (*)(char *, uint64_t, uint64_t, uint64_t))*((_QWORD *)v64 + 7);
    v62((char *)v63, 0, 1, v34);
    v61 = v64;
  }
  v66 = *(void (**)(void *, uint64_t))(v183 + 8);
  v66(v161, v59);
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v178)(v63, 1, v34) != 1)
  {
    v181 = v60;
    v182 = (char *)v62;
    v78 = (void (*)(char *, char *, uint64_t))*((_QWORD *)v61 + 4);
    v183 = v34;
    v177 = v78;
    v78(v175, (char *)v63, v34);
    v72 = v186;
    sub_1D26CC474();
    if (qword_1ED96C188 != -1)
      swift_once();
    v79 = sub_1D26CC09C();
    v80 = __swift_project_value_buffer(v79, (uint64_t)qword_1ED977F68);
    v82 = *(void **)(v169 + 32);
    v81 = *(void **)(v169 + 40);
    sub_1D25E5148((uint64_t)&v199);
    v152 = v81;
    v83 = v81;
    swift_retain();
    v161 = v82;
    v84 = v82;
    sub_1D25E5148((uint64_t)&v199);
    swift_retain();
    v85 = v84;
    v86 = v83;
    v169 = v80;
    v87 = sub_1D26CC084();
    v88 = sub_1D26CDCE0();
    v89 = os_log_type_enabled(v87, v88);
    v176 = (char *)v66;
    if (v89)
    {
      v90 = (uint8_t *)swift_slowAlloc();
      v151 = swift_slowAlloc();
      v198 = v151;
      v150 = v87;
      v149 = v90;
      *(_DWORD *)v90 = 136446210;
      v148 = v90 + 4;
      v91 = v158;
      sub_1D26CD758();
      v92 = (void *)sub_1D26CD188();
      v159(v91, v180);
      v93 = sub_1D26CD1C4();
      v95 = v94;

      v197 = sub_1D2537880(v93, v95, &v198);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25E50AC((uint64_t)&v199);

      swift_release();
      sub_1D25E50AC((uint64_t)&v199);

      v96 = v180;
      swift_release();
      v97 = v150;
      v98 = v149;
      _os_log_impl(&dword_1D2531000, v150, v88, "Trying to use preview view for environment: %{public}s", v149, 0xCu);
      v99 = v151;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v99, -1, -1);
      MEMORY[0x1D823A5E0](v98, -1, -1);

      v100 = v187;
      v101 = v162;
    }
    else
    {
      sub_1D25E50AC((uint64_t)&v199);

      swift_release();
      sub_1D25E50AC((uint64_t)&v199);

      swift_release();
      v100 = v187;
      v101 = v162;
      v96 = v180;
      v91 = v158;
    }
    v102 = v157;
    sub_1D26CD758();
    v103 = v156;
    sub_1D26CC798();
    v104 = v172;
    sub_1D26CD194();
    v105 = v183;
    v101(v103, v183);
    v159(v91, v96);
    v155(v102, v104, v184);
    v106 = v173;
    sub_1D26CDA4C();
    v107 = v170;
    v108 = v179;
    sub_1D26CDF44();
    if (((unsigned int (*)(char *, uint64_t, uint64_t))v178)(v107, 1, v105) == 1)
    {
      v181(v106, v108);
      v109 = 1;
      v110 = v171;
    }
    else
    {
      v111 = v177;
      v177(v103, v107, v105);
      v181(v106, v108);
      v110 = v171;
      v111(v171, v103, v105);
      v109 = 0;
    }
    v73 = v100;
    ((void (*)(char *, uint64_t, uint64_t, uint64_t))v182)(v110, v109, 1, v105);
    ((void (*)(char *, uint64_t))v176)(v104, v184);
    v112 = ((uint64_t (*)(char *, uint64_t, uint64_t))v178)(v110, 1, v105);
    v113 = v162;
    v114 = v174;
    if (v112 == 1)
    {
      v115 = &qword_1ED96B280;
      v116 = (uint64_t)v110;
    }
    else
    {
      v177(v168, v110, v105);
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1D26CC1E0();
      swift_release();
      swift_release();
      sub_1D25E50AC((uint64_t)&v199);
      sub_1D26CD764();
      v117 = v166;
      v118 = v167;
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v166 + 48))(v114, 1, v167) != 1)
      {
        (*(void (**)(char *, char *, uint64_t))(v117 + 32))(v164, v114, v118);
        v140 = sub_1D26CC084();
        v141 = sub_1D26CDCE0();
        if (os_log_type_enabled(v140, v141))
        {
          v142 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v142 = 0;
          _os_log_impl(&dword_1D2531000, v140, v141, "View matching environment found!", v142, 2u);
          MEMORY[0x1D823A5E0](v142, -1, -1);
        }

        v143 = v164;
        v144 = sub_1D26CD548();
        v145 = v160;
        swift_retain();
        v146 = (uint64_t)v163;
        sub_1D26CD524();
        v75 = sub_1D25E5170(v144, v145, v146, v152, v161);
        swift_release();
        sub_1D253703C(v146, &qword_1ED96D500);
        (*(void (**)(char *, uint64_t))(v166 + 8))(v143, v167);
        v147 = v183;
        v113(v168, v183);
        v113(v175, v147);
        swift_release();
        v76 = 0xE700000000000000;
        v77 = 0x57454956455250;
        goto LABEL_29;
      }
      v105 = v183;
      v113(v168, v183);
      v115 = (uint64_t *)&unk_1ED96BF50;
      v116 = (uint64_t)v114;
    }
    sub_1D253703C(v116, v115);
    v119 = sub_1D26CC084();
    v120 = sub_1D26CDCE0();
    if (os_log_type_enabled(v119, v120))
    {
      v121 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v121 = 0;
      _os_log_impl(&dword_1D2531000, v119, v120, "No view matching environment found in preview view collection", v121, 2u);
      v122 = v121;
      v105 = v183;
      MEMORY[0x1D823A5E0](v122, -1, -1);
    }

    v75 = sub_1D26CCFC0();
    v113(v175, v105);
    v76 = 0x80000001D26E1B20;
    v77 = 0xD000000000000025;
LABEL_29:
    v71 = v196;
    goto LABEL_30;
  }
  sub_1D253703C(v63, &qword_1ED96B280);
LABEL_9:
  if (qword_1ED96C188 != -1)
    swift_once();
  v67 = sub_1D26CC09C();
  __swift_project_value_buffer(v67, (uint64_t)qword_1ED977F68);
  v68 = sub_1D26CC084();
  v69 = sub_1D26CDCE0();
  v70 = os_log_type_enabled(v68, v69);
  v71 = v196;
  v72 = v186;
  v73 = v187;
  if (v70)
  {
    v74 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v74 = 0;
    _os_log_impl(&dword_1D2531000, v68, v69, "No view found in preview view collection: showing empty view.", v74, 2u);
    MEMORY[0x1D823A5E0](v74, -1, -1);
  }

  (*(void (**)(char *, _QWORD, uint64_t))(v73 + 104))(v72, *MEMORY[0x1E0CD86E0], v71);
  v75 = sub_1D26CCFC0();
  v76 = 0xEF295954504D4528;
  v77 = 0x2057454956455250;
LABEL_30:
  swift_retain();
  v123 = sub_1D26CCB7C();
  v124 = sub_1D26CD008();
  v125 = (uint64_t)v190;
  *v190 = v124;
  *(_QWORD *)(v125 + 8) = v126;
  v127 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F48);
  sub_1D25E457C(v75, v123, v77, v76, (_QWORD *)(v125 + *(int *)(v127 + 44)));
  swift_release();
  swift_bridgeObjectRelease();
  v128 = v185;
  v129 = MEMORY[0x1D82386A8]();
  LOBYTE(v123) = sub_1D26CCB7C();
  v130 = v192;
  sub_1D2537078(v125, v192, &qword_1EFC82F30);
  v131 = v130 + *(int *)(v188 + 36);
  *(_QWORD *)v131 = v129;
  *(_BYTE *)(v131 + 8) = v123;
  sub_1D253703C(v125, &qword_1EFC82F30);
  KeyPath = swift_getKeyPath();
  v133 = v194;
  (*(void (**)(char *, char *, uint64_t))(v73 + 16))((char *)v194 + *(int *)(v191 + 28), v72, v71);
  *v133 = KeyPath;
  v134 = v72;
  v135 = v193;
  sub_1D2537078(v130, v193, &qword_1EFC82F38);
  sub_1D2537078((uint64_t)v133, v135 + *(int *)(v189 + 36), &qword_1ED963CA8);
  swift_retain();
  sub_1D253703C((uint64_t)v133, &qword_1ED963CA8);
  swift_release();

  swift_release();
  sub_1D253703C(v130, &qword_1EFC82F38);
  v136 = swift_getKeyPath();
  v137 = v195;
  sub_1D2537078(v135, v195, &qword_1EFC82F40);
  v138 = v137 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F50) + 36);
  *(_QWORD *)v138 = v136;
  *(_BYTE *)(v138 + 8) = 1;
  sub_1D253703C(v135, &qword_1EFC82F40);
  return (*(uint64_t (**)(char *, uint64_t))(v73 + 8))(v134, v196);
}

uint64_t sub_1D25E3694()
{
  return sub_1D26CC474();
}

uint64_t sub_1D25E36B4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;

  v2 = sub_1D26CC2C4();
  MEMORY[0x1E0C80A78](v2);
  (*(void (**)(char *, uint64_t))(v4 + 16))((char *)&v6 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0), a1);
  return sub_1D26CC480();
}

uint64_t sub_1D25E3730@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC738();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25E375C()
{
  return sub_1D26CC744();
}

uint64_t sub_1D25E3780@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25E2418(a1);
}

void sub_1D25E37B8()
{
  char *v0;
  char *v1;
  id v2;
  void *v3;
  void *v4;
  id v5;
  id v6;
  void *v7;
  objc_super v8;

  v8.receiver = v0;
  v8.super_class = (Class)type metadata accessor for WidgetPreviewHostingViewController();
  objc_msgSendSuper2(&v8, sel_viewDidLoad);
  v1 = &v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize];
  swift_beginAccess();
  if (*v1 == 1)
  {
    v2 = objc_msgSend(v0, sel_view);
    if (v2)
    {
      v3 = v2;
      v4 = *(void **)&v0[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 32];
      v5 = objc_retain(*(id *)&v0[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView
                                + 40]);
      swift_retain();
      swift_retain();
      v6 = v4;
      v7 = (void *)sub_1D26CD7A0();

      swift_release();
      swift_release();
      objc_msgSend(v7, sel__rawEffectiveSize);

      objc_msgSend(v3, sel_frame);
      objc_msgSend(v3, sel_setFrame_);

    }
    else
    {
      __break(1u);
    }
  }
}

void sub_1D25E392C()
{
  char *v0;
  char *v1;
  char *v2;
  void *v3;
  char *v4;
  void *v5;
  id v6;
  id v7;
  id v8;
  void *v9;
  id v10;
  void *v11;
  void *v12;
  id v13;
  id v14;
  void *v15;
  objc_super v16;

  v1 = v0;
  v16.receiver = v0;
  v16.super_class = (Class)type metadata accessor for WidgetPreviewHostingViewController();
  objc_msgSendSuper2(&v16, sel_viewWillLayoutSubviews);
  v2 = &v0[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_metricsDefineSize];
  swift_beginAccess();
  if (*v2 == 1)
  {
    v3 = *(void **)&v1[OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView];
    v4 = &v1[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView];
    v5 = *(void **)&v1[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 32];
    v6 = objc_retain(*(id *)&v1[OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView
                              + 40]);
    v7 = v3;
    swift_retain();
    swift_retain();
    v8 = v5;
    v9 = (void *)sub_1D26CD7A0();

    swift_release();
    swift_release();
    objc_msgSend(v9, sel__rawEffectiveSize);

    objc_msgSend(v7, sel_frame);
    objc_msgSend(v7, sel_setFrame_);

    v10 = objc_msgSend(*(id *)&v1[OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController], sel_view);
    if (v10)
    {
      v11 = v10;
      v12 = (void *)*((_QWORD *)v4 + 4);
      v13 = *((id *)v4 + 5);
      swift_retain();
      swift_retain();
      v14 = v12;
      v15 = (void *)sub_1D26CD7A0();

      swift_release();
      swift_release();
      objc_msgSend(v15, sel__rawEffectiveSize);

      objc_msgSend(v11, sel_frame);
      objc_msgSend(v11, sel_setFrame_);

    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_1D25E3B5C()
{
  uint64_t v0;
  id *v1;
  void *v2;
  id v3;
  id v4;
  _BOOL8 v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  id v10;
  void **v11;
  void *v12;
  id v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  uint64_t v18;
  id v19;
  id v20;
  id v21;
  void *v23;
  void *v24;

  v1 = (id *)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters);
  swift_beginAccess();
  if (*v1)
  {
    v2 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView);
    v3 = *v1;
    v4 = v2;
    v5 = objc_msgSend(v3, sel_filterStyle) == (id)2 || objc_msgSend(v3, sel_filterStyle) == (id)3;
    objc_msgSend(v4, sel_setIsEnabled_, v5);

  }
  else
  {
    objc_msgSend(*(id *)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController__vibrancyView), sel_setIsEnabled_, 0);
  }
  v6 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_viewCollection);
  swift_beginAccess();
  v7 = *v6;
  v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView);
  v9 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 24);
  v10 = *v1;
  v11 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  v12 = *v11;
  type metadata accessor for WidgetPreviewHostingViewController.EntryController();
  sub_1D25369B0(&qword_1EFC82F08, (uint64_t (*)(uint64_t))type metadata accessor for WidgetPreviewHostingViewController.EntryController, (uint64_t)&unk_1D26D5E0C);
  swift_retain();
  swift_retain();
  v13 = v10;
  v14 = v12;
  v15 = sub_1D26CC39C();
  v16 = (void *)v8[4];
  v17 = (void *)v8[5];
  *v8 = v15;
  v8[1] = v18;
  v8[2] = v7;
  v8[3] = v9;
  v8[4] = (uint64_t)v10;
  v8[5] = (uint64_t)v12;
  swift_release();
  swift_release();

  v23 = (void *)v8[4];
  v24 = (void *)v8[5];
  sub_1D25E22A0();
  swift_retain();
  swift_retain();
  v19 = v23;
  v20 = v24;
  sub_1D26CCFC0();
  v21 = *(id *)(v0 + OBJC_IVAR____TtC9ChronoKit31BaseWidgetContentViewController_hostingController);
  swift_retain();
  sub_1D26CC8F4();

  return swift_release();
}

uint64_t sub_1D25E3DC8(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0)
  {
    if (qword_1ED962F08 != -1)
      swift_once();
    a1 = swift_retain();
  }
  MEMORY[0x1E0C80A78](a1);
  sub_1D26CC378();
  return swift_release();
}

uint64_t sub_1D25E3E7C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D25E3EFC()
{
  uint64_t v1;

  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D25E3F84()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  swift_retain();
  v0 = sub_1D26CD794();
  swift_release();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRelease();
  return v1;
}

void *sub_1D25E4038()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D25E4100(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_1D25E3B5C();
}

void sub_1D25E4168(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;

  sub_1D25E3B5C();
}

uint64_t (*sub_1D25E41D8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D25E4220;
}

uint64_t sub_1D25E4220(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1D25E3B5C();
  return result;
}

void *sub_1D25E429C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D25E436C(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit28PreviewHostingViewController_inlineTextParameters);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;

  sub_1D25E3B5C();
}

void (*sub_1D25E43D8(_QWORD *a1))(_QWORD *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[4] = v1;
  v3[5] = sub_1D25875E8();
  return sub_1D25E4420;
}

void sub_1D25E4420(_QWORD *a1, char a2)
{
  void *v3;

  v3 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 40))(*a1, 0);
  if ((a2 & 1) == 0)
    sub_1D25E3B5C();
  free(v3);
}

void sub_1D25E4460()
{
  uint64_t v0;
  void *v1;
  void *v2;

  swift_release();
  v1 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 32);
  v2 = *(void **)(v0 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_autoupdatingPreviewView + 40);
  swift_release();
  swift_release();

  swift_release();
}

id WidgetPreviewHostingViewController.__deallocating_deinit()
{
  void *v0;
  objc_super v2;

  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for WidgetPreviewHostingViewController();
  return objc_msgSendSuper2(&v2, sel_dealloc);
}

uint64_t sub_1D25E457C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, _QWORD *a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  _OWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  _QWORD *v47;
  uint64_t v48;
  uint64_t v50;
  int v51;
  int v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  int v60;
  _QWORD *v61;
  uint64_t v62;

  v56 = a3;
  v57 = a4;
  v60 = a2;
  v61 = a5;
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B278);
  MEMORY[0x1E0C80A78](v54);
  v55 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = sub_1D26CC444();
  MEMORY[0x1E0C80A78](v53);
  v8 = (_OWORD *)((char *)&v50 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = sub_1D26CCE70();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v50 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F78);
  v58 = *(_QWORD *)(v13 - 8);
  v59 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v50 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F80);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v50 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v50 - v20;
  v22 = qword_1ED96F1C8;
  v62 = a1;
  swift_retain();
  if (v22 != -1)
    swift_once();
  v23 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 14) + 88);
  v24 = *(os_unfair_lock_s **)(v23 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v24);
  LOBYTE(v24) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v23 + 16));
  swift_release();
  swift_release();
  if ((v24 & 1) != 0)
  {
    v25 = v57;
    swift_bridgeObjectRetain();
    v52 = sub_1D26CCB7C();
    sub_1D26CC2B8();
    v27 = v26;
    v29 = v28;
    v31 = v30;
    v33 = v32;
    (*(void (**)(char *, _QWORD, uint64_t))(v10 + 104))(v12, *MEMORY[0x1E0CDF3E0], v9);
    sub_1D26CCEDC();
    v34 = sub_1D26CCEC4();
    swift_release();
    v51 = sub_1D26CCB7C();
    v35 = (char *)v8 + *(int *)(v53 + 20);
    v36 = *MEMORY[0x1E0CDB0C0];
    v37 = sub_1D26CC828();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v37 - 8) + 104))(v35, v36, v37);
    __asm { FMOV            V0.2D, #5.0 }
    *v8 = _Q0;
    v43 = v55;
    sub_1D25E5610((uint64_t)v8, v55);
    *(_WORD *)(v43 + *(int *)(v54 + 36)) = 256;
    v44 = v59;
    sub_1D2537078(v43, (uint64_t)&v15[*(int *)(v59 + 36)], &qword_1ED96B278);
    v45 = v56;
    *(_QWORD *)v15 = v56;
    *((_QWORD *)v15 + 1) = v25;
    v15[16] = 0;
    *((_QWORD *)v15 + 3) = MEMORY[0x1E0DEE9D8];
    v15[32] = v52;
    *((_QWORD *)v15 + 5) = v27;
    *((_QWORD *)v15 + 6) = v29;
    *((_QWORD *)v15 + 7) = v31;
    *((_QWORD *)v15 + 8) = v33;
    v15[72] = 0;
    *((_QWORD *)v15 + 10) = v34;
    v15[88] = v51;
    sub_1D25725F0(v45, v25, 0);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D253703C(v43, &qword_1ED96B278);
    sub_1D25E5654((uint64_t)v8);
    sub_1D25725E0(v45, v25, 0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_1D25E5690((uint64_t)v15, (uint64_t)v21);
    v46 = 0;
  }
  else
  {
    v46 = 1;
    v44 = v59;
  }
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v58 + 56))(v21, v46, 1, v44);
  sub_1D2537078((uint64_t)v21, (uint64_t)v19, &qword_1EFC82F80);
  v47 = v61;
  *v61 = v62;
  *((_BYTE *)v47 + 8) = v60;
  v48 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F88);
  sub_1D2537078((uint64_t)v19, (uint64_t)v47 + *(int *)(v48 + 48), &qword_1EFC82F80);
  swift_retain();
  sub_1D253703C((uint64_t)v21, &qword_1EFC82F80);
  sub_1D253703C((uint64_t)v19, &qword_1EFC82F80);
  return swift_release();
}

uint64_t sub_1D25E49D4@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D25E4A50()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t type metadata accessor for WidgetPreviewHostingViewController()
{
  return objc_opt_self();
}

uint64_t sub_1D25E4AE0()
{
  return sub_1D25E3E7C();
}

uint64_t sub_1D25E4B00@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_viewCollection);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1D25E4B58@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(*a1 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_isLuminanceReduced);
  result = swift_beginAccess();
  *a2 = *v3;
  return result;
}

uint64_t sub_1D25E4BA8(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_isLuminanceReduced);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

id sub_1D25E4BF4@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit34WidgetPreviewHostingViewController_tintParameters);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

uint64_t method lookup function for WidgetPreviewHostingViewController()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.viewCollection.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x230))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.widgetLocation.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x248))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.widgetSize.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x250))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.isLuminanceReduced.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x258))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.isLuminanceReduced.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x260))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.isLuminanceReduced.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x268))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.__allocating_init(viewCollection:currentEntryIndex:widgetLocation:usesIOSLockScreenVibrancyEffect:renderBoxRendersAsynchronously:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 648))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.updateCurrentEntry(to:disableAnimations:)()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2A8))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.currentEntryIndex.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B0))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.numberOfEntries.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2B8))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.tintParameters.getter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C0))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.tintParameters.setter()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2C8))();
}

uint64_t dispatch thunk of WidgetPreviewHostingViewController.tintParameters.modify()
{
  _QWORD *v0;

  return (*(uint64_t (**)(void))((*MEMORY[0x1E0DEEDD8] & *v0) + 0x2D0))();
}

uint64_t sub_1D25E4DAC()
{
  return type metadata accessor for WidgetPreviewHostingViewController.EntryController();
}

void sub_1D25E4DB4()
{
  unint64_t v0;

  sub_1D25E4E20();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

void sub_1D25E4E20()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1EFC82F28)
  {
    v0 = sub_1D26CC1F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1EFC82F28);
  }
}

void destroy for WidgetPreviewHostingViewController._AutoupdatingPreviewView(uint64_t a1)
{
  swift_release();
  swift_release();

}

_QWORD *initializeWithCopy for WidgetPreviewHostingViewController._AutoupdatingPreviewView(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;
  uint64_t v4;
  void *v5;
  void *v6;
  id v7;
  id v8;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  v5 = (void *)a2[4];
  v6 = (void *)a2[5];
  a1[4] = v5;
  a1[5] = v6;
  swift_retain();
  swift_retain();
  v7 = v5;
  v8 = v6;
  return a1;
}

_QWORD *assignWithCopy for WidgetPreviewHostingViewController._AutoupdatingPreviewView(_QWORD *a1, _QWORD *a2)
{
  void *v4;
  void *v5;
  id v6;
  void *v7;
  void *v8;
  id v9;

  *a1 = *a2;
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  a1[3] = a2[3];
  v4 = (void *)a1[4];
  v5 = (void *)a2[4];
  a1[4] = v5;
  v6 = v5;

  v7 = (void *)a1[5];
  v8 = (void *)a2[5];
  a1[5] = v8;
  v9 = v8;

  return a1;
}

uint64_t assignWithTake for WidgetPreviewHostingViewController._AutoupdatingPreviewView(uint64_t a1, uint64_t a2)
{
  void *v4;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_release();
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);

  v4 = *(void **)(a1 + 40);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);

  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetPreviewHostingViewController._AutoupdatingPreviewView(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 48))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetPreviewHostingViewController._AutoupdatingPreviewView(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 48) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 48) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetPreviewHostingViewController._AutoupdatingPreviewView()
{
  return &type metadata for WidgetPreviewHostingViewController._AutoupdatingPreviewView;
}

uint64_t sub_1D25E509C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25E50AC(uint64_t a1)
{
  swift_release();
  return a1;
}

uint64_t sub_1D25E50D4()
{
  return sub_1D26CC474();
}

uint64_t sub_1D25E50F8@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC738();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D25E5124()
{
  return sub_1D26CC744();
}

uint64_t sub_1D25E5148(uint64_t a1)
{
  swift_retain();
  return a1;
}

uint64_t sub_1D25E5170(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  void (*v31)(char *, char *, uint64_t);
  uint64_t v32;
  id v33;
  id v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  id v40;
  uint64_t v41;
  void *v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  void *v47;
  uint64_t v48;

  v42 = a5;
  v40 = a4;
  v41 = type metadata accessor for InlineTextView(0);
  MEMORY[0x1E0C80A78](v41);
  v39 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC90);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CCB1C();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v39 - v20;
  v48 = a2;
  sub_1D26CD7B8();
  v22 = (void *)sub_1D26CD5B4();
  v23 = objc_msgSend(v22, sel_family);

  if (v23 == (id)12)
  {
    sub_1D2537078(a3, (uint64_t)v11, &qword_1ED96D500);
    v24 = sub_1D26CD254();
    v25 = *(_QWORD *)(v24 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v25 + 48))(v11, 1, v24) == 1)
    {
      sub_1D253703C((uint64_t)v11, &qword_1ED96D500);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
    }
    else
    {
      sub_1D26CD224();
      (*(void (**)(char *, uint64_t))(v25 + 8))(v11, v24);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15) != 1)
      {
        v31 = *(void (**)(char *, char *, uint64_t))(v16 + 32);
        v31(v21, v14, v15);
        (*(void (**)(char *, char *, uint64_t))(v16 + 16))(v19, v21, v15);
        v32 = qword_1ED96C188;
        v33 = v40;
        v34 = v40;
        if (v32 != -1)
          swift_once();
        v35 = sub_1D26CC09C();
        v36 = __swift_project_value_buffer(v35, (uint64_t)qword_1ED977F68);
        v37 = v41;
        v38 = v39;
        (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 16))(&v39[*(int *)(v41 + 24)], v36, v35);
        v31(v38, v19, v15);
        *(_QWORD *)&v38[*(int *)(v37 + 20)] = v33;
        sub_1D25369B0(&qword_1ED96CE70, type metadata accessor for InlineTextView, (uint64_t)&unk_1D26D1C9C);
        a1 = sub_1D26CCFC0();
        (*(void (**)(char *, uint64_t))(v16 + 8))(v21, v15);
        v26 = v42;
        if (v42)
          goto LABEL_7;
        return a1;
      }
    }
    sub_1D253703C((uint64_t)v14, &qword_1ED96CC90);
  }
  swift_retain();
  v26 = v42;
  if (v42)
  {
LABEL_7:
    type metadata accessor for TintedWidgetViewModel();
    swift_allocObject();
    swift_beginAccess();
    v47 = v26;
    sub_1D25E55D4();
    v27 = v26;
    sub_1D26CC1B0();
    swift_endAccess();
    sub_1D25369B0((unint64_t *)&qword_1ED96D168, (uint64_t (*)(uint64_t))type metadata accessor for TintedWidgetViewModel, (uint64_t)&protocol conformance descriptor for TintedWidgetViewModel);
    swift_retain_n();
    swift_retain();
    v43 = sub_1D26CC39C();
    v44 = v28;
    v45 = a1;
    v46 = a1;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F68);
    sub_1D2536488(&qword_1EFC82F70, &qword_1EFC82F68, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
    v29 = sub_1D26CCFC0();
    swift_release();

    swift_release();
    return v29;
  }
  return a1;
}

unint64_t sub_1D25E55D4()
{
  unint64_t result;

  result = qword_1ED96C760;
  if (!qword_1ED96C760)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96C760);
  }
  return result;
}

uint64_t sub_1D25E5610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC444();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25E5654(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CC444();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D25E5690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82F78);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D25E56DC()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC82F98;
  if (!qword_1EFC82F98)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82F50);
    v2[0] = sub_1D25E5760();
    v2[1] = sub_1D2536488(&qword_1ED96B298, &qword_1ED96B2A0, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC82F98);
  }
  return result;
}

unint64_t sub_1D25E5760()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC82FA0;
  if (!qword_1EFC82FA0)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82F40);
    v2[0] = sub_1D25E57E4();
    v2[1] = sub_1D2536488(&qword_1ED963CA0, &qword_1ED963CA8, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC82FA0);
  }
  return result;
}

unint64_t sub_1D25E57E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1EFC82FA8;
  if (!qword_1EFC82FA8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC82F38);
    v2[0] = sub_1D2536488(&qword_1EFC82FB0, &qword_1EFC82F30, MEMORY[0x1E0CDFCF8]);
    v2[1] = sub_1D2536488(&qword_1ED96C310, (uint64_t *)&unk_1ED96C318, MEMORY[0x1E0CDC6D0]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1EFC82FA8);
  }
  return result;
}

uint64_t sub_1D25E5880(uint64_t a1, _QWORD *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CD56C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D253703C(a1, (uint64_t *)&unk_1ED96BF50);
    sub_1D266AC18(a2, (uint64_t)v8);
    sub_1D25340E4((uint64_t)a2, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
    return sub_1D253703C((uint64_t)v8, (uint64_t *)&unk_1ED96BF50);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D266E20C((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;
    swift_bridgeObjectRelease();
    return sub_1D25340E4((uint64_t)a2, type metadata accessor for LiveWidgetEntryViewableEntryCache.CacheKey);
  }
}

uint64_t sub_1D25E59F4(uint64_t a1, id *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t *v5;
  __int128 *v6;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1D2538F38((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1D266E608(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = &qword_1ED963110;
    v6 = (__int128 *)a2;
  }
  else
  {
    sub_1D253703C(a1, &qword_1EFC82FD0);
    sub_1D266B140(a2, (uint64_t)v9);
    sub_1D253703C((uint64_t)a2, &qword_1ED963110);
    v6 = v9;
    v5 = &qword_1EFC82FD0;
  }
  return sub_1D253703C((uint64_t)v6, v5);
}

uint64_t sub_1D25E5ABC(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CBA24();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D253703C(a1, &qword_1ED961B18);
    sub_1D266B314(a2, (uint64_t)v8);
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1D253703C((uint64_t)v8, &qword_1ED961B18);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D266EBD0((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1D25E5C50(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v5;
  uint64_t v7;
  uint64_t v8;
  __int128 v9[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1D2538F38((__int128 *)a1, (uint64_t)v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v8 = *v2;
    *v2 = 0x8000000000000000;
    sub_1D266ED74(v9, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v8;
    swift_bridgeObjectRelease();
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(a2, v5);
  }
  else
  {
    sub_1D253703C(a1, &qword_1ED962040);
    sub_1D266B498(a2, (uint64_t)v9);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(a2, v7);
    return sub_1D253703C((uint64_t)v9, &qword_1ED962040);
  }
}

uint64_t sub_1D25E5D3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v17;
  uint64_t v18;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82FB8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RemoteActivityArchiveBudget();
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v17 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v14 + 48))(a1, 1) == 1)
  {
    sub_1D253703C(a1, &qword_1EFC82FB8);
    sub_1D266B5A0(a2, a3, (uint64_t)v10);
    swift_bridgeObjectRelease();
    return sub_1D253703C((uint64_t)v10, &qword_1EFC82FB8);
  }
  else
  {
    sub_1D2539ADC(a1, (uint64_t)v13, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v4;
    *v4 = 0x8000000000000000;
    sub_1D266EEF8((uint64_t)v13, a2, a3, isUniquelyReferenced_nonNull_native);
    *v4 = v18;
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D25E5EA4(uint64_t a1, void *a2)
{
  uint64_t *v2;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v6;
  __int128 v7[2];

  if (*(_QWORD *)(a1 + 24))
  {
    sub_1D2538F38((__int128 *)a1, (uint64_t)v7);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v6 = *v2;
    *v2 = 0x8000000000000000;
    sub_1D266F038(v7, a2, isUniquelyReferenced_nonNull_native);
    *v2 = v6;

    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D253703C(a1, &qword_1ED961D70);
    sub_1D266B6D8((uint64_t)a2, (uint64_t)v7);

    return sub_1D253703C((uint64_t)v7, &qword_1ED961D70);
  }
}

uint64_t sub_1D25E5F5C(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82FC8);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CBE5C();
  v10 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))(a1, 1, v9) == 1)
  {
    sub_1D253703C(a1, &qword_1EFC82FC8);
    sub_1D266B948(a2, (uint64_t)v8);
    v13 = sub_1D26CBED4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(a2, v13);
    return sub_1D253703C((uint64_t)v8, &qword_1EFC82FC8);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 32))(v12, a1, v9);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v18 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D266F850((uint64_t)v12, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v18;
    swift_bridgeObjectRelease();
    v16 = sub_1D26CBED4();
    return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 8))(a2, v16);
  }
}

uint64_t sub_1D25E60E8(uint64_t a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v15;
  uint64_t v16;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9627C0);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = type metadata accessor for ExtensionMetadata();
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((*(unsigned int (**)(uint64_t, uint64_t))(v12 + 48))(a1, 1) == 1)
  {
    sub_1D253703C(a1, &qword_1ED9627C0);
    sub_1D266BA84((uint64_t)a2, (uint64_t)v8);

    return sub_1D253703C((uint64_t)v8, &qword_1ED9627C0);
  }
  else
  {
    sub_1D2539ADC(a1, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v16 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D266F9D8((uint64_t)v11, a2, isUniquelyReferenced_nonNull_native);
    *v3 = v16;

    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_1D25E623C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v13[3];

  if (a3)
  {
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v13[0] = *v5;
    *v5 = 0x8000000000000000;
    sub_1D266FB08(a1, a2, a3, a4, a5, isUniquelyReferenced_nonNull_native);
    *v5 = v13[0];
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D266BBA8(a4, a5, (uint64_t)v13);
    swift_bridgeObjectRelease();
    return sub_1D25E7E14(v13[0], v13[1], v13[2]);
  }
}

uint64_t RemoteActivityArchiveBudgetStore.__allocating_init(backingStore:)(uint64_t a1)
{
  uint64_t v2;

  swift_allocObject();
  v2 = sub_1D25E7C10(a1);
  swift_release();
  return v2;
}

uint64_t RemoteActivityArchiveBudgetStore.init(backingStore:)(uint64_t a1)
{
  uint64_t v1;

  v1 = sub_1D25E7C10(a1);
  swift_release();
  return v1;
}

uint64_t sub_1D25E6388()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  v2 = *(_QWORD *)(v1 + 16);
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  swift_release();
  return v2;
}

uint64_t sub_1D25E63E0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  *a2 = *a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25E63FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v7;

  v7 = *(_QWORD *)(v3 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v7 + 24));
  sub_1D25E6478((uint64_t *)(v7 + 16), a1, a2, a3);
  os_unfair_lock_unlock((os_unfair_lock_t)(v7 + 24));
  return swift_release();
}

uint64_t sub_1D25E6478@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v5;
  unint64_t v8;
  char v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v16;

  v5 = *a1;
  if (*(_QWORD *)(*a1 + 16))
  {
    swift_bridgeObjectRetain();
    v8 = sub_1D25891F4(a2, a3);
    if ((v9 & 1) != 0)
    {
      v10 = v8;
      v11 = *(_QWORD *)(v5 + 56);
      v12 = type metadata accessor for RemoteActivityArchiveBudget();
      v13 = *(_QWORD *)(v12 - 8);
      sub_1D254D374(v11 + *(_QWORD *)(v13 + 72) * v10, a4);
      (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v13 + 56))(a4, 0, 1, v12);
    }
    else
    {
      v16 = type metadata accessor for RemoteActivityArchiveBudget();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a4, 1, 1, v16);
    }
    return swift_bridgeObjectRelease();
  }
  else
  {
    v14 = type metadata accessor for RemoteActivityArchiveBudget();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 56))(a4, 1, 1, v14);
  }
}

uint64_t sub_1D25E6574(NSObject *a1)
{
  uint64_t v1;
  os_unfair_lock_s *v3;

  v3 = *(os_unfair_lock_s **)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock(v3 + 6);
  sub_1D25E65E4((uint64_t)&v3[4], v1, a1);
  os_unfair_lock_unlock(v3 + 6);
  return swift_release();
}

uint64_t sub_1D25E65E4(uint64_t a1, uint64_t a2, NSObject *a3)
{
  void *v3;
  void *v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  uint64_t v20;
  id v21;
  id v22;
  NSObject *v23;
  os_log_type_t v24;
  int v25;
  uint64_t v26;
  uint64_t *v27;
  unint64_t v28;
  uint64_t v29;
  id v30;
  uint64_t v31;
  _QWORD *v32;
  os_log_t v33;
  os_log_t *v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  os_log_t v40;
  int v41;
  _QWORD *v42;
  os_log_t *v43;
  uint64_t v44;
  NSObject *v45;
  uint64_t v46;
  uint64_t v47;
  os_log_t *v48;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82FB8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for RemoteActivityArchiveBudget();
  v46 = *(_QWORD *)(v11 - 8);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *(_QWORD *)(a2 + 16);
  if (v15)
  {
    v43 = &v40;
    v44 = a1;
    MEMORY[0x1E0C80A78](v12);
    v45 = a3;
    *(&v40 - 2) = a3;
    v16 = *(_QWORD *)(v15 + 16);
    type metadata accessor for ChronoMetadataStore.MutableStore();
    swift_allocObject();
    v17 = sub_1D2672BD8();
    v18 = *(_QWORD *)(v15 + 128);
    v19 = *(os_unfair_lock_s **)(v18 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v19);
    swift_retain();
    sub_1D255A944(0xD000000000000021, 0x80000001D26E1BD0, v16, (void (*)(uint64_t))sub_1D25E7E40, (uint64_t)&(&v40)[-4], (uint64_t)v17);
    if (v4)
    {
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
      swift_release();
      sub_1D265505C();
      swift_release();
      if (qword_1ED963A80 != -1)
        swift_once();
      v20 = sub_1D26CC09C();
      __swift_project_value_buffer(v20, (uint64_t)qword_1ED977EB8);
      a3 = v45;
      sub_1D254D374((uint64_t)v45, (uint64_t)v14);
      v21 = v4;
      v22 = v4;
      v23 = sub_1D26CC084();
      v24 = sub_1D26CDCEC();
      v25 = v24;
      if (os_log_type_enabled(v23, v24))
      {
        v26 = swift_slowAlloc();
        v42 = (_QWORD *)swift_slowAlloc();
        v43 = (os_log_t *)swift_slowAlloc();
        v48 = v43;
        *(_DWORD *)v26 = 136446466;
        v27 = (uint64_t *)&v14[*(int *)(v11 + 24)];
        v41 = v25;
        v29 = *v27;
        v28 = v27[1];
        swift_bridgeObjectRetain();
        v47 = sub_1D2537880(v29, v28, (uint64_t *)&v48);
        v40 = v23;
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        sub_1D25340E4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
        *(_WORD *)(v26 + 12) = 2114;
        v30 = v4;
        v31 = _swift_stdlib_bridgeErrorToNSError();
        v47 = v31;
        sub_1D26CDF50();
        v32 = v42;
        *v42 = v31;

        v33 = v40;
        _os_log_impl(&dword_1D2531000, v40, (os_log_type_t)v41, "Failed to update activity archive budget in store: %{public}s; %{public}@",
          (uint8_t *)v26,
          0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v32, -1, -1);
        v34 = v43;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v34, -1, -1);
        v35 = v26;
        a3 = v45;
        MEMORY[0x1D823A5E0](v35, -1, -1);

        swift_release();
      }
      else
      {
        swift_release();

        sub_1D25340E4((uint64_t)v14, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
      }
    }
    else
    {
      swift_release();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
      swift_release();
      sub_1D265505C();
      swift_release();
      swift_release();
      a3 = v45;
    }
  }
  v36 = (uint64_t *)((char *)a3 + *(int *)(v11 + 24));
  v37 = *v36;
  v38 = v36[1];
  sub_1D254D374((uint64_t)a3, (uint64_t)v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v46 + 56))(v10, 0, 1, v11);
  swift_bridgeObjectRetain();
  return sub_1D25E5D3C((uint64_t)v10, v37, v38);
}

uint64_t sub_1D25E6A84(uint64_t a1)
{
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v2 = (uint64_t *)(a1 + *(int *)(type metadata accessor for RemoteActivityArchiveBudget() + 24));
  v3 = *v2;
  v4 = v2[1];
  v5 = *(os_unfair_lock_s **)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1D25E6B64(v3, v4);
  os_unfair_lock_unlock(v5 + 6);
  return swift_release();
}

uint64_t sub_1D25E6AFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  os_unfair_lock_s *v5;

  v5 = *(os_unfair_lock_s **)(v2 + 24);
  swift_retain();
  os_unfair_lock_lock(v5 + 6);
  sub_1D25E6B64(a1, a2);
  os_unfair_lock_unlock(v5 + 6);
  return swift_release();
}

uint64_t sub_1D25E6B64(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  _QWORD *v9;
  _QWORD *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC82FB8);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v2 + 16);
  if (v8)
  {
    v9 = *(_QWORD **)(v8 + 16);
    type metadata accessor for ChronoMetadataStore.MutableStore();
    swift_initStackObject();
    v10 = sub_1D2672BD8();
    v11 = *(_QWORD *)(v8 + 128);
    v12 = *(os_unfair_lock_s **)(v11 + 16);
    swift_bridgeObjectRetain_n();
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v12);
    swift_retain();
    sub_1D255BFC8(0xD000000000000021, 0x80000001D26E1B50, v9, (uint64_t)v10, a1, a2);
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
    swift_release();
    sub_1D265505C();
    swift_release();
    swift_release();
    swift_bridgeObjectRelease();
  }
  v13 = type metadata accessor for RemoteActivityArchiveBudget();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 56))(v7, 1, 1, v13);
  swift_bridgeObjectRetain();
  return sub_1D25E5D3C((uint64_t)v7, a1, a2);
}

uint64_t sub_1D25E6F88(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D26A68DC(a2, a3);
}

void sub_1D25E6FB0(uint64_t *a1, uint64_t a2)
{
  void *v2;
  uint64_t v4;
  uint64_t v5;
  id v6;
  id v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  _QWORD *v11;
  id v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;

  if (!*(_QWORD *)(a2 + 16))
  {
    if (qword_1ED963A80 != -1)
      swift_once();
    v13 = sub_1D26CC09C();
    __swift_project_value_buffer(v13, (uint64_t)qword_1ED977EB8);
    v14 = sub_1D26CC084();
    v15 = sub_1D26CDCEC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v16 = 0;
      _os_log_impl(&dword_1D2531000, v14, v15, "Failed to load existing activity archive budgets from store as store is missing", v16, 2u);
      MEMORY[0x1D823A5E0](v16, -1, -1);
    }
    goto LABEL_15;
  }
  swift_retain();
  swift_retain();
  v4 = sub_1D26A5D78();
  if (!v2)
  {
    v17 = v4;
    swift_release();
    swift_bridgeObjectRelease();
    *a1 = v17;
    v18 = qword_1ED963A80;
    swift_bridgeObjectRetain();
    if (v18 != -1)
      swift_once();
    v19 = sub_1D26CC09C();
    __swift_project_value_buffer(v19, (uint64_t)qword_1ED977EB8);
    swift_bridgeObjectRetain();
    v14 = sub_1D26CC084();
    v20 = sub_1D26CDD04();
    if (!os_log_type_enabled(v14, v20))
    {

      swift_release();
      swift_bridgeObjectRelease_n();
      return;
    }
    v21 = (uint8_t *)swift_slowAlloc();
    v25 = swift_slowAlloc();
    v26 = v25;
    *(_DWORD *)v21 = 136446210;
    type metadata accessor for RemoteActivityArchiveBudget();
    swift_bridgeObjectRetain();
    v22 = sub_1D26CD800();
    v24 = v23;
    swift_bridgeObjectRelease();
    sub_1D2537880(v22, v24, &v26);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v14, v20, "Fetched activity archive budgets from backing store: %{public}s", v21, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v25, -1, -1);
    MEMORY[0x1D823A5E0](v21, -1, -1);
    swift_release();
LABEL_15:

    return;
  }
  swift_release();
  swift_release();
  if (qword_1ED963A80 != -1)
    swift_once();
  v5 = sub_1D26CC09C();
  __swift_project_value_buffer(v5, (uint64_t)qword_1ED977EB8);
  v6 = v2;
  v7 = v2;
  v8 = sub_1D26CC084();
  v9 = sub_1D26CDCEC();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = (uint8_t *)swift_slowAlloc();
    v11 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v10 = 138543362;
    v12 = v2;
    v26 = _swift_stdlib_bridgeErrorToNSError();
    sub_1D26CDF50();
    *v11 = v26;

    _os_log_impl(&dword_1D2531000, v8, v9, "Failed to load existing activity archive budgets from store: %{public}@", v10, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v11, -1, -1);
    MEMORY[0x1D823A5E0](v10, -1, -1);

  }
  else
  {

  }
}

uint64_t sub_1D25E7434()
{
  uint64_t v0;

  v0 = swift_bridgeObjectRetain();
  sub_1D25E79D4(v0, (void (*)(uint64_t, uint64_t, uint64_t))sub_1D25E7E68);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25E7484(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char v15;
  void (*v16)(char *, uint64_t);
  uint64_t result;
  uint64_t v18;
  NSObject *v19;
  os_log_type_t v20;
  uint8_t *v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v26 = a1;
  v5 = type metadata accessor for RemoteActivityArchiveBudget();
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v25 - v13;
  sub_1D26CB9B8();
  sub_1D26CB964();
  v15 = sub_1D26CB94C();
  v16 = *(void (**)(char *, uint64_t))(v9 + 8);
  v16(v12, v8);
  result = ((uint64_t (*)(char *, uint64_t))v16)(v14, v8);
  if ((v15 & 1) != 0)
  {
    if (qword_1ED963A80 != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED977EB8);
    sub_1D254D374(a3, (uint64_t)v7);
    v19 = sub_1D26CC084();
    v20 = sub_1D26CDCEC();
    if (os_log_type_enabled(v19, v20))
    {
      v21 = (uint8_t *)swift_slowAlloc();
      v22 = swift_slowAlloc();
      v28 = v22;
      *(_DWORD *)v21 = 136446210;
      v25 = a2;
      v23 = sub_1D254CF50();
      v27 = sub_1D2537880(v23, v24, &v28);
      a2 = v25;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      sub_1D25340E4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
      _os_log_impl(&dword_1D2531000, v19, v20, "Removing expired activity archive budget from store: %{public}s", v21, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v22, -1, -1);
      MEMORY[0x1D823A5E0](v21, -1, -1);
    }
    else
    {
      sub_1D25340E4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for RemoteActivityArchiveBudget);
    }

    return sub_1D25E6B64(v26, a2);
  }
  return result;
}

uint64_t RemoteActivityArchiveBudgetStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  return v0;
}

uint64_t RemoteActivityArchiveBudgetStore.__deallocating_deinit()
{
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25E7798()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = *(_QWORD *)(*(_QWORD *)v0 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v1 + 24));
  sub_1D25E63E0((_QWORD *)(v1 + 16), &v4);
  os_unfair_lock_unlock((os_unfair_lock_t)(v1 + 24));
  v2 = v4;
  swift_release();
  return v2;
}

uint64_t sub_1D25E780C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 24);
  swift_retain();
  os_unfair_lock_lock((os_unfair_lock_t)(v3 + 24));
  sub_1D25E7DFC((uint64_t *)(v3 + 16), a1);
  os_unfair_lock_unlock((os_unfair_lock_t)(v3 + 24));
  return swift_release();
}

uint64_t sub_1D25E7884()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1D25E7DE4((uint64_t)&v1[4]);
  os_unfair_lock_unlock(v1 + 6);
  return swift_release();
}

uint64_t sub_1D25E78EC()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *v0;
  type metadata accessor for RemoteActivityArchiveBudget();
  v2 = *(os_unfair_lock_s **)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock(v2 + 6);
  sub_1D25E7DB8();
  os_unfair_lock_unlock(v2 + 6);
  return swift_release();
}

uint64_t sub_1D25E796C()
{
  uint64_t v0;
  os_unfair_lock_s *v1;

  v1 = *(os_unfair_lock_s **)(*(_QWORD *)v0 + 24);
  swift_retain();
  os_unfair_lock_lock(v1 + 6);
  sub_1D25E7DB8();
  os_unfair_lock_unlock(v1 + 6);
  return swift_release();
}

uint64_t sub_1D25E79D4(uint64_t a1, void (*a2)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t result;
  int64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  int64_t v19;
  unint64_t v20;
  int64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t);

  v26 = a2;
  v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963C78);
  MEMORY[0x1E0C80A78](v25);
  v4 = (uint64_t *)((char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  v5 = *(_QWORD *)(a1 + 64);
  v23 = a1 + 64;
  v6 = 1 << *(_BYTE *)(a1 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & v5;
  v24 = (unint64_t)(v6 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  while (1)
  {
    if (v8)
    {
      v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v19);
    ++v10;
    if (!v20)
    {
      v10 = v19 + 1;
      if (v19 + 1 >= v24)
        return swift_release();
      v20 = *(_QWORD *)(v23 + 8 * v10);
      if (!v20)
      {
        v10 = v19 + 2;
        if (v19 + 2 >= v24)
          return swift_release();
        v20 = *(_QWORD *)(v23 + 8 * v10);
        if (!v20)
        {
          v10 = v19 + 3;
          if (v19 + 3 >= v24)
            return swift_release();
          v20 = *(_QWORD *)(v23 + 8 * v10);
          if (!v20)
            break;
        }
      }
    }
LABEL_22:
    v8 = (v20 - 1) & v20;
    v12 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_5:
    v13 = *(_QWORD *)(a1 + 56);
    v14 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v12);
    v15 = *v14;
    v16 = v14[1];
    v17 = v13 + *(_QWORD *)(*(_QWORD *)(type metadata accessor for RemoteActivityArchiveBudget() - 8) + 72) * v12;
    v18 = (uint64_t)v4 + *(int *)(v25 + 48);
    sub_1D254D374(v17, v18);
    *v4 = v15;
    v4[1] = v16;
    swift_bridgeObjectRetain();
    v26(v15, v16, v18);
    result = sub_1D253703C((uint64_t)v4, &qword_1ED963C78);
  }
  v21 = v19 + 4;
  if (v21 >= v24)
    return swift_release();
  v20 = *(_QWORD *)(v23 + 8 * v21);
  if (v20)
  {
    v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    v10 = v21 + 1;
    if (__OFADD__(v21, 1))
      break;
    if (v10 >= v24)
      return swift_release();
    v20 = *(_QWORD *)(v23 + 8 * v10);
    ++v21;
    if (v20)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D25E7C10(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t *v5;
  os_unfair_lock_s *v6;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963C98);
  v3 = swift_allocObject();
  *(_DWORD *)(v3 + 24) = 0;
  v4 = (os_unfair_lock_s *)(v3 + 24);
  *(_QWORD *)(v3 + 16) = MEMORY[0x1E0DEE9E0];
  v5 = (uint64_t *)(v3 + 16);
  *(_QWORD *)(v1 + 16) = a1;
  *(_QWORD *)(v1 + 24) = v3;
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D25E6FB0(v5, v1);
  os_unfair_lock_unlock(v4);
  swift_release();
  v6 = *(os_unfair_lock_s **)(v1 + 24);
  swift_retain();
  os_unfair_lock_lock(v6 + 6);
  sub_1D25E7434();
  os_unfair_lock_unlock(v6 + 6);
  swift_release();
  return v1;
}

unint64_t sub_1D25E7CF4()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC82FC0;
  if (!qword_1EFC82FC0)
  {
    v1 = type metadata accessor for RemoteActivityArchiveBudget();
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivityArchiveBudget, v1);
    atomic_store(result, (unint64_t *)&qword_1EFC82FC0);
  }
  return result;
}

uint64_t type metadata accessor for RemoteActivityArchiveBudgetStore()
{
  return objc_opt_self();
}

uint64_t method lookup function for RemoteActivityArchiveBudgetStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.__allocating_init(backingStore:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 96))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.retrieveAllBudgets()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.retrieveBudget(budgetID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.update(budget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.remove(budget:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.remove(budgetID:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of RemoteActivityArchiveBudgetStore.lock_remove(budgetID:budgets:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1D25E7DB8()
{
  uint64_t v0;

  return sub_1D25E6B64(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

uint64_t sub_1D25E7DE4(uint64_t a1)
{
  uint64_t v1;

  return sub_1D25E65E4(a1, *(_QWORD *)(v1 + 16), *(NSObject **)(v1 + 24));
}

uint64_t sub_1D25E7DFC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D25E6478(a1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24), a2);
}

uint64_t sub_1D25E7E14(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1D253EE04(result, a2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D25E7E40()
{
  uint64_t v0;

  return sub_1D26A6524(*(_QWORD *)(v0 + 16));
}

uint64_t sub_1D25E7E68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25E7484(a1, a2, a3);
}

uint64_t sub_1D25E7E70()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D25E7F18(uint64_t a1, uint64_t a2)
{
  return sub_1D25E8150(a1, a2, LiveWidgetViewChangeReason.rawValue.getter);
}

void sub_1D25E7F24(char a1)
{
  __asm { BR              X12 }
}

uint64_t sub_1D25E7F70(uint64_t a1, unsigned __int8 a2)
{
  uint64_t v2;

  return ((uint64_t (*)(uint64_t))((char *)sub_1D25E7FF4 + 4 * byte_1D26D5F36[a2]))(v2 + 5);
}

uint64_t sub_1D25E7FF4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;

  if (a1 == v1 + 5 && v2 == 0x80000001D26DD840)
    v3 = 1;
  else
    v3 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3 & 1;
}

uint64_t sub_1D25E80A8(char a1, char a2)
{
  BOOL v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  char v7;

  v2 = (a1 & 1) == 0;
  if ((a1 & 1) != 0)
    v3 = 1701147238;
  else
    v3 = 0x6465746567647562;
  if (v2)
    v4 = 0xE800000000000000;
  else
    v4 = 0xE400000000000000;
  if ((a2 & 1) != 0)
    v5 = 1701147238;
  else
    v5 = 0x6465746567647562;
  if ((a2 & 1) != 0)
    v6 = 0xE400000000000000;
  else
    v6 = 0xE800000000000000;
  if (v3 == v5 && v4 == v6)
    v7 = 1;
  else
    v7 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D25E8144(uint64_t a1, uint64_t a2)
{
  return sub_1D25E8150(a1, a2, PowerlogWakeReason.rawValue.getter);
}

uint64_t sub_1D25E8150(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;

  v4 = a3();
  v6 = v5;
  if (v4 == a3() && v6 == v7)
    v9 = 1;
  else
    v9 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D25E81E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2;
  uint64_t v3;
  unint64_t v4;
  int v5;
  uint64_t v6;
  unint64_t v7;
  char v8;

  v2 = a1;
  if (a1)
  {
    if (a1 == 1)
      v3 = 0x7363697274656DLL;
    else
      v3 = 1953722216;
    if (v2 == 1)
      v4 = 0xE700000000000000;
    else
      v4 = 0xE400000000000000;
    v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1)
        v6 = 0x7363697274656DLL;
      else
        v6 = 1953722216;
      if (v5 == 1)
        v7 = 0xE700000000000000;
      else
        v7 = 0xE400000000000000;
      if (v3 != v6)
        goto LABEL_21;
      goto LABEL_19;
    }
  }
  else
  {
    v4 = 0xE600000000000000;
    v3 = 0x746567646977;
    v5 = a2;
    if (a2)
      goto LABEL_9;
  }
  v7 = 0xE600000000000000;
  if (v3 != 0x746567646977)
  {
LABEL_21:
    v8 = sub_1D26CE3D0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7)
    goto LABEL_21;
  v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

char *sub_1D25E82E8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, _BYTE *a6, _BYTE *a7, uint64_t a8, double a9)
{
  char *v18;
  uint64_t v19;
  char *v20;

  v18 = (char *)swift_allocObject();
  v19 = *(_QWORD *)v18;
  LOBYTE(a6) = *a6;
  LOBYTE(a7) = *a7;
  *((_QWORD *)v18 + 2) = a1;
  *((_QWORD *)v18 + 3) = a2;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v19 + 80) - 8) + 32))(&v18[*(_QWORD *)(v19 + 104)], a3);
  v20 = &v18[*(_QWORD *)(*(_QWORD *)v18 + 112)];
  *(_QWORD *)v20 = a4;
  *((_QWORD *)v20 + 1) = a5;
  v18[*(_QWORD *)(*(_QWORD *)v18 + 120)] = (char)a6;
  v18[*(_QWORD *)(*(_QWORD *)v18 + 128)] = (char)a7;
  *(_QWORD *)&v18[*(_QWORD *)(*(_QWORD *)v18 + 136)] = a8;
  *(double *)&v18[*(_QWORD *)(*(_QWORD *)v18 + 144)] = a9;
  return v18;
}

char *sub_1D25E83D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char *a6, char *a7, uint64_t a8, double a9)
{
  char *v9;
  uint64_t v14;
  char v15;
  char v16;
  char *v17;

  v14 = *(_QWORD *)v9;
  v15 = *a6;
  v16 = *a7;
  *((_QWORD *)v9 + 2) = a1;
  *((_QWORD *)v9 + 3) = a2;
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(*(_QWORD *)(v14 + 80) - 8) + 32))(&v9[*(_QWORD *)(v14 + 104)], a3);
  v17 = &v9[*(_QWORD *)(*(_QWORD *)v9 + 112)];
  *(_QWORD *)v17 = a4;
  *((_QWORD *)v17 + 1) = a5;
  v9[*(_QWORD *)(*(_QWORD *)v9 + 120)] = v15;
  v9[*(_QWORD *)(*(_QWORD *)v9 + 128)] = v16;
  *(_QWORD *)&v9[*(_QWORD *)(*(_QWORD *)v9 + 136)] = a8;
  *(double *)&v9[*(_QWORD *)(*(_QWORD *)v9 + 144)] = a9;
  return v9;
}

uint64_t sub_1D25E8484()
{
  sub_1D26CE0A0();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE394();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  return 0;
}

uint64_t sub_1D25E86A8@<X0>(uint64_t a1@<X0>, char **a2@<X8>)
{
  char *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t updated;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  char *v16;
  uint64_t v18;
  char v19;
  char v20;

  v4 = *(_QWORD *)v2;
  v5 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  updated = type metadata accessor for PowerlogUpdateEntry(0, v5, *(_QWORD *)(v4 + 88), v9);
  v11 = *((_QWORD *)v2 + 2);
  v12 = *((_QWORD *)v2 + 3);
  (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v8, &v2[*(_QWORD *)(v4 + 104)], v5);
  v13 = *(_QWORD **)v2;
  v14 = (uint64_t *)&v2[*(_QWORD *)(*(_QWORD *)v2 + 112)];
  v20 = v2[*(_QWORD *)(*(_QWORD *)v2 + 120)];
  v15 = v13[17];
  v19 = v2[v13[16]];
  v16 = sub_1D25E82E8(v11, v12, (uint64_t)v8, *v14, v14[1], &v20, &v19, *(_QWORD *)&v2[v15], *(double *)&v2[v13[18]]);
  a2[3] = (char *)updated;
  *a2 = v16;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25E87B8(uint64_t a1)
{
  uint64_t v1;
  char *v3[4];

  sub_1D25E86A8(a1, v3);
  __swift_project_boxed_opaque_existential_0(v3, (uint64_t)v3[3]);
  v1 = sub_1D26CE3B8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  return v1;
}

uint64_t sub_1D25E880C()
{
  uint64_t v0;

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CD8D8();
  if (*(_QWORD *)(v0 + *(_QWORD *)(*(_QWORD *)v0 + 112) + 8))
  {
    sub_1D26CE478();
    swift_bridgeObjectRetain();
    sub_1D26CD9D4();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D26CE478();
  }
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  PowerlogWakeReason.rawValue.getter();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  sub_1D26CE46C();
  return sub_1D26CE484();
}

BOOL sub_1D25E8990(_QWORD *a1, _QWORD *a2)
{
  BOOL v4;
  char v5;
  _BOOL8 result;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  char v14;
  int v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v26;

  v4 = a1[2] == a2[2] && a1[3] == a2[3];
  if (v4 || (v5 = sub_1D26CE3D0(), result = 0, (v5 & 1) != 0))
  {
    if ((sub_1D26CD908() & 1) != 0)
    {
      v7 = *a1;
      v8 = (_QWORD *)((char *)a1 + *(_QWORD *)(*a1 + 112));
      v9 = v8[1];
      v10 = *a2;
      v11 = (_QWORD *)((char *)a2 + *(_QWORD *)(*a2 + 112));
      v12 = v11[1];
      if (v9)
      {
        if (v12)
        {
          if (*v8 != *v11 || v9 != v12)
          {
            v14 = sub_1D26CE3D0();
            result = 0;
            if ((v14 & 1) == 0)
              return result;
            v7 = *a1;
            v10 = *a2;
          }
LABEL_16:
          v15 = *((unsigned __int8 *)a2 + *(_QWORD *)(v10 + 120));
          if (*((_BYTE *)a1 + *(_QWORD *)(v7 + 120)))
            v16 = 1701147238;
          else
            v16 = 0x6465746567647562;
          if (*((_BYTE *)a1 + *(_QWORD *)(v7 + 120)))
            v17 = 0xE400000000000000;
          else
            v17 = 0xE800000000000000;
          if (v15)
            v18 = 1701147238;
          else
            v18 = 0x6465746567647562;
          if (v15)
            v19 = 0xE400000000000000;
          else
            v19 = 0xE800000000000000;
          if (v16 == v18 && v17 == v19)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v21 = sub_1D26CE3D0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = 0;
            if ((v21 & 1) == 0)
              return result;
          }
          v22 = PowerlogWakeReason.rawValue.getter();
          v24 = v23;
          if (v22 == PowerlogWakeReason.rawValue.getter() && v24 == v25)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v26 = sub_1D26CE3D0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            result = 0;
            if ((v26 & 1) == 0)
              return result;
          }
          if (*(_QWORD *)((char *)a1 + *(_QWORD *)(*a1 + 136)) == *(_QWORD *)((char *)a2 + *(_QWORD *)(*a2 + 136)))
            return *(double *)((char *)a1 + *(_QWORD *)(*a1 + 144)) == *(double *)((char *)a2
                                                                                   + *(_QWORD *)(*a2 + 144));
        }
      }
      else if (!v12)
      {
        goto LABEL_16;
      }
    }
    return 0;
  }
  return result;
}

uint64_t *sub_1D25E8BE4()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(v1 + 80) - 8) + 8))((uint64_t)v0 + *(_QWORD *)(*v0 + 104));
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D25E8C3C()
{
  sub_1D25E8BE4();
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for PowerlogUpdateEntry(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for PowerlogUpdateEntry);
}

uint64_t sub_1D25E8C6C()
{
  sub_1D26CE460();
  sub_1D25E880C();
  return sub_1D26CE49C();
}

uint64_t sub_1D25E8CA8()
{
  return sub_1D25E8C6C();
}

uint64_t sub_1D25E8CC8()
{
  return sub_1D25E880C();
}

uint64_t sub_1D25E8CE8()
{
  sub_1D26CE460();
  sub_1D25E880C();
  return sub_1D26CE49C();
}

uint64_t sub_1D25E8D24()
{
  return sub_1D25E8484();
}

BOOL sub_1D25E8D44(_QWORD **a1, _QWORD **a2)
{
  return sub_1D25E8990(*a1, *a2);
}

void sub_1D25E8D50()
{
  JUMPOUT(0x1D823A4E4);
}

void sub_1D25E8D60(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21[2];
  _QWORD aBlock[6];

  v3 = sub_1D26CD074();
  v4 = *(void **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D25EA474(a1);
  if (v11)
  {
    v12 = (void *)v11;
    v21[0] = v4;
    v13 = *(void **)(v1 + 24);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v12;
    v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1D25EA874;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_9;
    v15 = _Block_copy(aBlock);
    v16 = v13;
    v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v21[1] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D25EA110();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25483C0();
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v10, v6, v15);
    _Block_release(v15);

    (*((void (**)(char *, uint64_t))v21[0] + 1))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  else
  {
    if (qword_1ED96B0A8 != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED977F08);
    v21[0] = (id)sub_1D26CC084();
    v19 = sub_1D26CDD04();
    if (os_log_type_enabled((os_log_t)v21[0], v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, (os_log_t)v21[0], v19, "No powerlog update entries to flush.", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

  }
}

void sub_1D25E901C(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21[2];
  _QWORD aBlock[6];

  v3 = sub_1D26CD074();
  v4 = *(void **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D25E9A80(a1);
  if (v11)
  {
    v12 = (void *)v11;
    v21[0] = v4;
    v13 = *(void **)(v1 + 24);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v12;
    v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1D25EA0CC;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_8;
    v15 = _Block_copy(aBlock);
    v16 = v13;
    v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v21[1] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D25EA110();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25483C0();
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v10, v6, v15);
    _Block_release(v15);

    (*((void (**)(char *, uint64_t))v21[0] + 1))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  else
  {
    if (qword_1ED96B0A8 != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED977F08);
    v21[0] = (id)sub_1D26CC084();
    v19 = sub_1D26CDD04();
    if (os_log_type_enabled((os_log_t)v21[0], v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, (os_log_t)v21[0], v19, "No powerlog view entries to flush.", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

  }
}

void sub_1D25E92D8(void *a1, uint64_t a2, unint64_t a3, const char *a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;

  if (qword_1ED96B0A8 != -1)
    swift_once();
  v11 = sub_1D26CC09C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED977F08);
  v12 = a1;
  v13 = sub_1D26CC084();
  v14 = sub_1D26CDCE0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138543362;
    v16 = v12;
    sub_1D26CDF50();
    *v21 = v12;

    _os_log_impl(&dword_1D2531000, v13, v14, a4, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v21, -1, -1);
    MEMORY[0x1D823A5E0](v15, -1, -1);

  }
  else
  {

  }
  v17 = (void *)sub_1D26CD914();
  PLLogRegisteredEvent();

  swift_bridgeObjectRetain_n();
  v18 = sub_1D26CC084();
  v19 = sub_1D26CDD04();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v20 = 134349056;
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1D26CE1F0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v18, v19, a7, v20, 0xCu);
    MEMORY[0x1D823A5E0](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

uint64_t sub_1D25E95D8()
{
  uint64_t v0;

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ControlsPowerlogProvider()
{
  return objc_opt_self();
}

unint64_t sub_1D25E9620()
{
  unint64_t result;

  result = qword_1EFC82FD8;
  if (!qword_1EFC82FD8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogControlUpdateIdentity, &type metadata for PowerlogControlUpdateIdentity);
    atomic_store(result, (unint64_t *)&qword_1EFC82FD8);
  }
  return result;
}

unint64_t sub_1D25E9668()
{
  unint64_t result;

  result = qword_1EFC82FE0;
  if (!qword_1EFC82FE0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogControlViewIdentity, &type metadata for PowerlogControlViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1EFC82FE0);
  }
  return result;
}

void sub_1D25E96AC(unint64_t a1)
{
  sub_1D25E901C(a1);
}

void sub_1D25E96CC(unint64_t a1)
{
  sub_1D25E8D60(a1);
}

uint64_t sub_1D25E96EC(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  uint64_t v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  char v26;
  char v27;
  char v28;
  uint64_t v29;
  _OWORD v31[2];
  __int128 v32;
  uint64_t v33;

  v2 = objc_msgSend(*(id *)(a1 + 16), sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = sub_1D26CBC88();
  v4 = MEMORY[0x1E0DEA968];
  v33 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v32 = v3;
  *((_QWORD *)&v32 + 1) = v5;
  swift_endAccess();

  sub_1D2538448(&v32, v31);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v31, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(*(id *)(a1 + 16), sel_kind);
  v8 = sub_1D26CD938();
  v10 = v9;

  v33 = MEMORY[0x1E0DEBAF0];
  v11 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v32 = v11;
  v12 = sub_1D26443E4(6uLL, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  v11[2] = v12;
  v11[3] = v14;
  v11[4] = v16;
  v11[5] = v18;
  sub_1D2538448(&v32, v31);
  v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v31, 1684957547, 0xE400000000000000, v19);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 48) == 1)
    v20 = qword_1D26D6160[*(_QWORD *)(a1 + 40)];
  else
    v20 = 3;
  v33 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v32 = v20;
  sub_1D2538448(&v32, v31);
  v21 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v31, 0x6E6F697461636F6CLL, 0xE800000000000000, v21);
  swift_bridgeObjectRelease();
  v22 = *(_QWORD *)(a1 + 24);
  v23 = *(_QWORD *)(a1 + 32);
  v33 = v4;
  *(_QWORD *)&v32 = v22;
  *((_QWORD *)&v32 + 1) = v23;
  sub_1D2538448(&v32, v31);
  swift_bridgeObjectRetain();
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v31, 0x696669746E656469, 0xEA00000000007265, v24);
  swift_bridgeObjectRelease();
  v25 = *(_QWORD *)(a1 + 88);
  v33 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v32 = v25;
  sub_1D2538448(&v32, v31);
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v31, 0xD000000000000016, 0x80000001D26E1D00, v26);
  swift_bridgeObjectRelease();
  v27 = *(_BYTE *)(a1 + 49);
  v33 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v32) = v27;
  sub_1D2538448(&v32, v31);
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v31, 0x7361426574617473, 0xEA00000000006465, v28);
  swift_bridgeObjectRelease();
  v29 = sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  return v29;
}

uint64_t sub_1D25E9A80(unint64_t a1)
{
  __objc2_ivar *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char v18;
  char v19;
  __int128 v20;
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  char v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  id v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  id v41;
  unint64_t v42;
  uint64_t v43;
  unint64_t v44;
  __int128 v45;
  uint64_t v46;
  __int128 v47;
  uint64_t v48;
  uint64_t v49;
  char v50;
  char v51;
  __int128 v52;
  __int128 v53;
  uint64_t v54;

  v2 = &stru_1E93E6000;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE1F0();
    v4 = result;
    if (result)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_23;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  v7 = a1 & 0xC000000000000001;
  v8 = (_QWORD *)&unk_1ED96B000;
  v40 = MEMORY[0x1E0DEE9B8] + 8;
  v43 = v4;
  v44 = a1;
  v41 = v3;
  v42 = a1 & 0xC000000000000001;
  do
  {
    if (v7)
    {
      v9 = MEMORY[0x1D8239890](v6, a1);
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 8 * v6 + 32);
      swift_retain();
    }
    if (*(double *)(v9 + 88) <= 0.0)
    {
      if (v8[21] != -1)
        swift_once();
      v21 = sub_1D26CC09C();
      __swift_project_value_buffer(v21, (uint64_t)qword_1ED977F08);
      swift_retain_n();
      v22 = sub_1D26CC084();
      v23 = sub_1D26CDCE0();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        *(_QWORD *)&v45 = v25;
        *(_DWORD *)v24 = 136446210;
        v26 = *(_QWORD *)(v9 + 32);
        v27 = *(_QWORD *)(v9 + 40);
        v28 = *(_BYTE *)(v9 + 48);
        v29 = *(_BYTE *)(v9 + 49);
        v47 = *(_OWORD *)(v9 + 16);
        v48 = v26;
        v49 = v27;
        v50 = v28;
        v51 = v29;
        v30 = PowerlogControlViewIdentity.description.getter();
        *(_QWORD *)(v24 + 4) = sub_1D2537880(v30, v31, (uint64_t *)&v45);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v22, v23, "Dropped view entry for identity: [%{public}s] because it was incomplete.", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        v32 = v25;
        a1 = v44;
        MEMORY[0x1D823A5E0](v32, -1, -1);
        v33 = v24;
        v4 = v43;
        MEMORY[0x1D823A5E0](v33, -1, -1);
        swift_release();

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      v10 = (void *)sub_1D25E96EC(v9);
      objc_msgSend(v3, sel_addObject_, v10);

      if (v8[21] != -1)
        swift_once();
      v11 = sub_1D26CC09C();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED977F08);
      swift_retain_n();
      v12 = sub_1D26CC084();
      v13 = sub_1D26CDCE0();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v46 = v15;
        *(_QWORD *)&v47 = 0;
        *(_DWORD *)v14 = 136446210;
        *((_QWORD *)&v47 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1D26CE0A0();
        v45 = v47;
        sub_1D26CDA04();
        v16 = *(_QWORD *)(v9 + 32);
        v17 = *(_QWORD *)(v9 + 40);
        v18 = *(_BYTE *)(v9 + 48);
        v19 = *(_BYTE *)(v9 + 49);
        v47 = *(_OWORD *)(v9 + 16);
        v48 = v16;
        v49 = v17;
        v50 = v18;
        v51 = v19;
        sub_1D26CE190();
        sub_1D26CDA04();
        v20 = *(_OWORD *)(v9 + 72);
        v52 = *(_OWORD *)(v9 + 56);
        v53 = v20;
        v54 = *(_QWORD *)(v9 + 88);
        sub_1D259E888();
        sub_1D26CDA04();
        a1 = v44;
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        swift_release();
        *(_QWORD *)&v47 = sub_1D2537880(v45, *((unint64_t *)&v45 + 1), &v46);
        v4 = v43;
        v3 = v41;
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v12, v13, "Flushing powerlog view entry: %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v15, -1, -1);
        MEMORY[0x1D823A5E0](v14, -1, -1);
        swift_release();

      }
      else
      {

        swift_release_n();
      }
      v7 = v42;
      v8 = &unk_1ED96B000;
    }
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  v2 = &stru_1E93E6000;
LABEL_24:
  if (objc_msgSend(v3, sel_count, v40))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C100);
    v34 = swift_allocObject();
    *(_OWORD *)(v34 + 16) = xmmword_1D26D5A90;
    v35 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v34 + 32) = 0x7374617473;
    *(_QWORD *)(v34 + 40) = 0xE500000000000000;
    objc_msgSend(v3, sel_copyWithZone_, 0);
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    *(_QWORD *)(v34 + 120) = v35;
    *(_QWORD *)(v34 + 96) = 0x6D617473656D6974;
    *(_QWORD *)(v34 + 104) = 0xE900000000000070;
    v36 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), v2[79].type);
    objc_msgSend(v36, sel_timeIntervalSince1970);
    v38 = v37;

    *(_QWORD *)(v34 + 152) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v34 + 128) = v38;
    sub_1D25EA158();
    v39 = sub_1D26CDCB0();

  }
  else
  {

    return 0;
  }
  return v39;
}

void sub_1D25EA0CC()
{
  uint64_t v0;

  sub_1D25E92D8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), "Flushing views to powerlog: %{public}@", 0xD000000000000012, 0x80000001D26E1CE0, "Flushed %{public}ld powerlog view entries.");
}

unint64_t sub_1D25EA110()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96EA60;
  if (!qword_1ED96EA60)
  {
    v1 = sub_1D26CD074();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEF510], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96EA60);
  }
  return result;
}

unint64_t sub_1D25EA158()
{
  unint64_t result;

  result = qword_1ED96BFC0;
  if (!qword_1ED96BFC0)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96BFC0);
  }
  return result;
}

uint64_t sub_1D25EA194()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D25EA1B8(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  uint64_t v13;
  char v14;
  uint64_t v15;
  char v16;
  uint64_t v17;
  _OWORD v19[2];
  __int128 v20;
  uint64_t v21;

  v2 = objc_msgSend(*(id *)(a1 + 32), sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = sub_1D26CBC88();
  v4 = MEMORY[0x1E0DEA968];
  v21 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v20 = v3;
  *((_QWORD *)&v20 + 1) = v5;
  swift_endAccess();

  sub_1D2538448(&v20, v19);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v19, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v7 = *(_QWORD *)(a1 + 40);
  v8 = *(_QWORD *)(a1 + 48);
  v21 = v4;
  *(_QWORD *)&v20 = v7;
  *((_QWORD *)&v20 + 1) = v8;
  sub_1D2538448(&v20, v19);
  swift_bridgeObjectRetain();
  v9 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v19, 0x696669746E656469, 0xEA00000000007265, v9);
  swift_bridgeObjectRelease();
  v10 = qword_1D26D60F0[*(char *)(a1 + 89)];
  v11 = MEMORY[0x1E0DEB418];
  v21 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v20 = v10;
  sub_1D2538448(&v20, v19);
  v12 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v19, 0x6E6F73616572, 0xE600000000000000, v12);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 64) == 1)
    v13 = qword_1D26D6160[*(_QWORD *)(a1 + 56)];
  else
    v13 = 3;
  v21 = v11;
  *(_QWORD *)&v20 = v13;
  sub_1D2538448(&v20, v19);
  v14 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v19, 0x6E6F697461636F6CLL, 0xE800000000000000, v14);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(a1 + 104);
  v21 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v20 = v15;
  sub_1D2538448(&v20, v19);
  v16 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v19, 0x6F69747563657865, 0xED0000656D69546ELL, v16);
  swift_bridgeObjectRelease();
  v17 = sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_1D25EA474(unint64_t a1)
{
  __objc2_ivar *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  __objc2_ivar *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;

  v2 = &stru_1E93E6000;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE1F0();
    v4 = result;
    if (result)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_16;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  v7 = a1 & 0xC000000000000001;
  v8 = &stru_1E93E6000;
  v29 = a1;
  v30 = v3;
  v27 = a1 & 0xC000000000000001;
  v28 = v4;
  do
  {
    if (v7)
    {
      v9 = MEMORY[0x1D8239890](v6, a1);
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 8 * v6 + 32);
      swift_retain();
    }
    v10 = (void *)sub_1D25EA1B8(v9);
    objc_msgSend(v3, *(SEL *)&v8[120].align, v10);

    if (qword_1ED96B0A8 != -1)
      swift_once();
    v11 = sub_1D26CC09C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED977F08);
    swift_retain_n();
    v12 = sub_1D26CC084();
    v13 = sub_1D26CDCE0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v31 = v15;
      *(_DWORD *)v14 = 136446210;
      swift_retain();
      v16 = sub_1D26430B4();
      v18 = v17;
      swift_release();
      sub_1D2537880(v16, v18, &v31);
      v4 = v28;
      v3 = v30;
      sub_1D26CDF50();
      swift_release_n();
      v7 = v27;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v12, v13, "Flushing powerlog update entry: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      v19 = v15;
      v8 = &stru_1E93E6000;
      MEMORY[0x1D823A5E0](v19, -1, -1);
      v20 = v14;
      a1 = v29;
      MEMORY[0x1D823A5E0](v20, -1, -1);
      swift_release();

    }
    else
    {

      swift_release_n();
    }
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  v2 = &stru_1E93E6000;
LABEL_17:
  if (objc_msgSend(v3, sel_count))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C100);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1D26D5A90;
    v22 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 32) = 0x7374617473;
    *(_QWORD *)(v21 + 40) = 0xE500000000000000;
    objc_msgSend(v3, sel_copyWithZone_, 0);
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    *(_QWORD *)(v21 + 120) = v22;
    *(_QWORD *)(v21 + 96) = 0x6D617473656D6974;
    *(_QWORD *)(v21 + 104) = 0xE900000000000070;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), v2[79].type);
    objc_msgSend(v23, sel_timeIntervalSince1970);
    v25 = v24;

    *(_QWORD *)(v21 + 152) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v21 + 128) = v25;
    sub_1D25EA158();
    v26 = sub_1D26CDCB0();

  }
  else
  {

    return 0;
  }
  return v26;
}

void sub_1D25EA874()
{
  uint64_t v0;

  sub_1D25E92D8(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), "Flushing updates to powerlog: %{public}@", 0xD000000000000014, 0x80000001D26E1D20, "Flushed %{public}ld powerlog update entries.");
}

uint64_t View.widgetURLReader(enabled:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v27)(char *, char *, uint64_t);
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[2];
  _QWORD v48[2];
  _QWORD v49[2];

  v44 = a4;
  v45 = a5;
  v40 = a1;
  v6 = *(_QWORD *)(a3 - 8);
  v38 = a2;
  v39 = v6;
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v38 - v10;
  v12 = type metadata accessor for WidgetURLReaderModifier(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CC3E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v38 - v20;
  v22 = sub_1D26CC918();
  v42 = *(_QWORD *)(v22 - 8);
  v43 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v38 - v23;
  if ((v40 & 1) != 0)
  {
    sub_1D2537078(v38, (uint64_t)v14, &qword_1ED96B2A8);
    v25 = v44;
    MEMORY[0x1D823860C](v14, a3, v12, v44);
    sub_1D25340E4((uint64_t)v14, type metadata accessor for WidgetURLReaderModifier);
    v26 = sub_1D25369B0(&qword_1ED96C8A8, type metadata accessor for WidgetURLReaderModifier, (uint64_t)&unk_1D26D6388);
    v46[0] = v25;
    v46[1] = v26;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v46);
    v27 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v27(v21, v19, v15);
    v28 = *(void (**)(char *, uint64_t))(v16 + 8);
    v28(v19, v15);
    v27(v19, v21, v15);
    v29 = v25;
    sub_1D25EAC5C((uint64_t)v19, v15);
    v28(v19, v15);
    v28(v21, v15);
  }
  else
  {
    v30 = v39;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v39 + 16);
    v31(v11, v41, a3);
    v31(v9, (uint64_t)v11, a3);
    v32 = sub_1D25369B0(&qword_1ED96C8A8, type metadata accessor for WidgetURLReaderModifier, (uint64_t)&unk_1D26D6388);
    v29 = v44;
    v49[0] = v44;
    v49[1] = v32;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v49);
    sub_1D25EAD20((uint64_t)v9, v15, a3);
    v33 = *(void (**)(char *, uint64_t))(v30 + 8);
    v33(v9, a3);
    v33(v11, a3);
  }
  v34 = sub_1D25369B0(&qword_1ED96C8A8, type metadata accessor for WidgetURLReaderModifier, (uint64_t)&unk_1D26D6388);
  v48[0] = v29;
  v48[1] = v34;
  v47[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v48);
  v47[1] = v29;
  v35 = v43;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v43, v47);
  v36 = v42;
  (*(void (**)(uint64_t, char *, uint64_t))(v42 + 16))(v45, v24, v35);
  return (*(uint64_t (**)(char *, uint64_t))(v36 + 8))(v24, v35);
}

uint64_t type metadata accessor for WidgetURLReaderModifier(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96C7C8);
}

uint64_t sub_1D25EAC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))(a3, a1);
}

uint64_t sub_1D25EAC5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = sub_1D26CC900();
  MEMORY[0x1E0C80A78](v4);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 16))((char *)&v7 - v5, a1, a2);
  swift_storeEnumTagMultiPayload();
  return sub_1D26CC90C();
}

uint64_t sub_1D25EAD20(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v8;

  v5 = sub_1D26CC900();
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v8 - v6, a1, a3);
  swift_storeEnumTagMultiPayload();
  return sub_1D26CC90C();
}

uint64_t View.onWidgetLaunch(enabled:launchHandler:touchDownHandler:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t KeyPath;
  uint64_t v26;
  unint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  void (*v30)(char *, uint64_t, uint64_t);
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD v46[2];
  _QWORD v47[5];
  __int16 v48;
  _QWORD v49[2];
  _QWORD v50[2];
  _QWORD v51[3];

  v45 = a7;
  v39 = a4;
  v40 = a5;
  v38 = a3;
  v37 = a2;
  v41 = a1;
  v44 = a8;
  v9 = *(_QWORD *)(a6 - 8);
  v10 = MEMORY[0x1E0C80A78](a1);
  v12 = (char *)&v37 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v37 - v13;
  v15 = sub_1D26CC3E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v37 - v20;
  v22 = sub_1D26CC918();
  v43 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v37 - v23;
  if ((v41 & 1) != 0)
  {
    KeyPath = swift_getKeyPath();
    v47[0] = v37;
    v47[1] = v38;
    v47[2] = v39;
    v47[3] = v40;
    v47[4] = KeyPath;
    v48 = 0;
    v26 = v45;
    MEMORY[0x1D823860C](v47, a6, &type metadata for WidgetLaunchViewModifier, v45);
    swift_release();
    v27 = sub_1D25544AC();
    v46[0] = v26;
    v46[1] = v27;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v46);
    v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v28(v21, v19, v15);
    v29 = *(void (**)(char *, uint64_t))(v16 + 8);
    v29(v19, v15);
    v28(v19, v21, v15);
    sub_1D25EAC5C((uint64_t)v19, v15);
    v29(v19, v15);
    v29(v21, v15);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
    v30(v14, v42, a6);
    v30(v12, (uint64_t)v14, a6);
    v31 = sub_1D25544AC();
    v51[0] = v45;
    v51[1] = v31;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v51);
    sub_1D25EAD20((uint64_t)v12, v15, a6);
    v32 = *(void (**)(char *, uint64_t))(v9 + 8);
    v32(v12, a6);
    v32(v14, a6);
  }
  v33 = sub_1D25544AC();
  v34 = v45;
  v50[0] = v45;
  v50[1] = v33;
  v49[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v50);
  v49[1] = v34;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v22, v49);
  v35 = v43;
  (*(void (**)(uint64_t, char *, uint64_t))(v43 + 16))(v44, v24, v22);
  return (*(uint64_t (**)(char *, uint64_t))(v35 + 8))(v24, v22);
}

uint64_t View.onSystemURLInvoked(enabled:_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *, char *, uint64_t);
  void (*v29)(char *, uint64_t);
  uint64_t v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  uint64_t v33;
  void (*v34)(char *, uint64_t);
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  int v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD v49[2];
  _QWORD v50[2];
  _QWORD v51[2];
  _QWORD v52[2];

  v47 = a5;
  v48 = a6;
  v40 = a2;
  v41 = a3;
  v43 = a1;
  v42 = *(_QWORD *)(a4 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v39 - v10;
  v12 = type metadata accessor for SystemURLActionViewModifier(0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CC3E4();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v39 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v39 - v20;
  v22 = sub_1D26CC918();
  v45 = *(_QWORD *)(v22 - 8);
  v46 = v22;
  MEMORY[0x1E0C80A78](v22);
  v24 = (char *)&v39 - v23;
  if ((v43 & 1) != 0)
  {
    v25 = swift_allocObject();
    *(_QWORD *)(v25 + 16) = v40;
    *(_QWORD *)(v25 + 24) = v41;
    swift_retain();
    sub_1D26CC360();
    v26 = v47;
    MEMORY[0x1D823860C](v14, a4, v12, v47);
    sub_1D25340E4((uint64_t)v14, type metadata accessor for SystemURLActionViewModifier);
    v27 = sub_1D25369B0(&qword_1ED96D388, type metadata accessor for SystemURLActionViewModifier, (uint64_t)&unk_1D26D62E8);
    v49[0] = v26;
    v49[1] = v27;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v49);
    v28 = *(void (**)(char *, char *, uint64_t))(v16 + 16);
    v28(v21, v19, v15);
    v29 = *(void (**)(char *, uint64_t))(v16 + 8);
    v30 = v26;
    v29(v19, v15);
    v28(v19, v21, v15);
    sub_1D25EAC5C((uint64_t)v19, v15);
    v29(v19, v15);
    v29(v21, v15);
  }
  else
  {
    v31 = v42;
    v32 = *(void (**)(char *, uint64_t, uint64_t))(v42 + 16);
    v32(v11, v44, a4);
    v32(v9, (uint64_t)v11, a4);
    v33 = sub_1D25369B0(&qword_1ED96D388, type metadata accessor for SystemURLActionViewModifier, (uint64_t)&unk_1D26D62E8);
    v30 = v47;
    v52[0] = v47;
    v52[1] = v33;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v52);
    sub_1D25EAD20((uint64_t)v9, v15, a4);
    v34 = *(void (**)(char *, uint64_t))(v31 + 8);
    v34(v9, a4);
    v34(v11, a4);
  }
  v35 = sub_1D25369B0(&qword_1ED96D388, type metadata accessor for SystemURLActionViewModifier, (uint64_t)&unk_1D26D62E8);
  v51[0] = v30;
  v51[1] = v35;
  v50[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v15, v51);
  v50[1] = v30;
  v36 = v46;
  MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v46, v50);
  v37 = v45;
  (*(void (**)(uint64_t, char *, uint64_t))(v45 + 16))(v48, v24, v36);
  return (*(uint64_t (**)(char *, uint64_t))(v37 + 8))(v24, v36);
}

uint64_t sub_1D25EB4A4(uint64_t a1, uint64_t (*a2)(_QWORD), uint64_t a3, uint64_t (*a4)(void))
{
  char v5;

  v5 = a4();
  return a2(v5 & 1);
}

uint64_t sub_1D25EB4E0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v12;

  v7 = sub_1D26CC36C();
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v10 + 16))(v9, a1);
  return a5(v9);
}

uint64_t sub_1D25EB560@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t KeyPath;
  uint64_t *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  void (*v13)(char *, uint64_t, uint64_t);
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v18;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9D0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  KeyPath = swift_getKeyPath();
  v9 = (uint64_t *)&v7[*(int *)(v5 + 36)];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B290);
  v11 = (char *)v9 + *(int *)(v10 + 28);
  v12 = sub_1D26CC36C();
  v13 = *(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16);
  v13(v11, v2, v12);
  *v9 = KeyPath;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC18);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v14 - 8) + 16))(v7, a1, v14);
  v15 = swift_getKeyPath();
  v16 = (uint64_t *)(a2 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA90) + 36));
  v13((char *)v16 + *(int *)(v10 + 28), v2, v12);
  *v16 = v15;
  return sub_1D25ED9A8((uint64_t)v7, a2);
}

BOOL static WidgetURLSource.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetURLSource.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t WidgetURLSource.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D25EB724@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  _OWORD *v13;
  __int128 v14;
  _OWORD *v15;
  __int128 v16;
  char *v17;
  uint64_t OpaqueTypeConformance2;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;

  v33 = a1;
  v29 = sub_1D26CC3CC();
  v31 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v25 = (char *)&v25 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96E9F0);
  v4 = *(_QWORD *)(v3 - 8);
  v27 = v3;
  v28 = v4;
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96E9F8);
  v32 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v26 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 32);
  v9 = *(unsigned __int8 *)(v1 + 40);
  v10 = *(unsigned __int8 *)(v1 + 41);
  sub_1D25ECD80(v8, v9, *(_BYTE *)(v1 + 41));
  sub_1D25EC1F0(v8, v9 | (v10 << 8));
  sub_1D25ECDC4(v8, v9, v10);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CBF8);
  v12 = sub_1D2536488(&qword_1ED96CBF0, &qword_1ED96CBF8, MEMORY[0x1E0CDBF10]);
  sub_1D26CCD80();
  v13 = (_OWORD *)swift_allocObject();
  v14 = *(_OWORD *)(v1 + 16);
  v13[1] = *(_OWORD *)v1;
  v13[2] = v14;
  *(_OWORD *)((char *)v13 + 42) = *(_OWORD *)(v1 + 26);
  v15 = (_OWORD *)swift_allocObject();
  v16 = *(_OWORD *)(v1 + 16);
  v15[1] = *(_OWORD *)v1;
  v15[2] = v16;
  *(_OWORD *)((char *)v15 + 42) = *(_OWORD *)(v1 + 26);
  sub_1D25ECD80(v8, v9, v10);
  swift_retain();
  swift_retain();
  sub_1D25ECD80(v8, v9, v10);
  swift_retain();
  swift_retain();
  v17 = v25;
  sub_1D26CC3C0();
  sub_1D26CC2D0();
  v34 = v11;
  v35 = v12;
  OpaqueTypeConformance2 = swift_getOpaqueTypeConformance2();
  v19 = sub_1D25369B0(&qword_1ED96E9E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9718], MEMORY[0x1E0CD9710]);
  v21 = v26;
  v20 = v27;
  v22 = v29;
  sub_1D26CCE1C();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v17, v22);
  (*(void (**)(char *, uint64_t))(v28 + 8))(v6, v20);
  v34 = v20;
  v35 = v22;
  v36 = OpaqueTypeConformance2;
  v37 = v19;
  swift_getOpaqueTypeConformance2();
  v23 = v30;
  sub_1D26CCD80();
  return (*(uint64_t (**)(char *, uint64_t))(v32 + 8))(v21, v23);
}

uint64_t sub_1D25EBA64(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  NSObject *v21;
  os_log_type_t v22;
  char *v23;
  uint8_t *v24;
  uint8_t *v25;
  uint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  uint64_t v29;
  uint8_t *v30;
  uint64_t v31;
  unint64_t v32;
  void (*v33)(char *, uint64_t);
  uint64_t v34;
  uint8_t *v35;
  void (*v36)(char *, uint64_t);
  _QWORD v38[2];
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;

  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)v38 - v9;
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v38 - v11;
  v13 = sub_1D26CB880();
  v14 = *(_QWORD *)(v13 - 8);
  v15 = MEMORY[0x1E0C80A78](v13);
  v17 = (char *)v38 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)v38 - v18;
  sub_1D2537078(a1, (uint64_t)v12, (uint64_t *)&unk_1ED96FC50);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_1D258C76C((uint64_t)v12);
    if (qword_1ED96C188 != -1)
      swift_once();
    v20 = sub_1D26CC09C();
    __swift_project_value_buffer(v20, (uint64_t)qword_1ED977F68);
    v21 = sub_1D26CC084();
    v22 = sub_1D26CDD04();
    if (os_log_type_enabled(v21, v22))
    {
      v23 = v7;
      v24 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v24 = 0;
      _os_log_impl(&dword_1D2531000, v21, v22, "WidgetURLPreferenceKey has no url", v24, 2u);
      v25 = v24;
      v7 = v23;
      MEMORY[0x1D823A5E0](v25, -1, -1);
    }

  }
  else
  {
    v42 = a1;
    (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v19, v12, v13);
    if (qword_1ED96C188 != -1)
      swift_once();
    v26 = sub_1D26CC09C();
    __swift_project_value_buffer(v26, (uint64_t)qword_1ED977F68);
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v13);
    v27 = sub_1D26CC084();
    v28 = sub_1D26CDD04();
    if (os_log_type_enabled(v27, v28))
    {
      v29 = swift_slowAlloc();
      v40 = v7;
      v30 = (uint8_t *)v29;
      v39 = swift_slowAlloc();
      v44 = v39;
      v41 = a2;
      *(_DWORD *)v30 = 136642819;
      v38[1] = v30 + 4;
      sub_1D25369B0(qword_1ED96C220, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0048]);
      v31 = sub_1D26CE370();
      v43 = sub_1D2537880(v31, v32, &v44);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v33 = *(void (**)(char *, uint64_t))(v14 + 8);
      v33(v17, v13);
      _os_log_impl(&dword_1D2531000, v27, v28, "Assigning url from preference key change: %{sensitive}s", v30, 0xCu);
      v34 = v39;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v34, -1, -1);
      v35 = v30;
      v7 = v40;
      MEMORY[0x1D823A5E0](v35, -1, -1);

      v33(v19, v13);
    }
    else
    {

      v36 = *(void (**)(char *, uint64_t))(v14 + 8);
      v36(v17, v13);
      v36(v19, v13);
    }
    a1 = v42;
  }
  sub_1D2537078(a1, (uint64_t)v10, (uint64_t *)&unk_1ED96FC50);
  sub_1D2537078((uint64_t)v10, (uint64_t)v7, (uint64_t *)&unk_1ED96FC50);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8);
  sub_1D26CCFCC();
  return sub_1D258C76C((uint64_t)v10);
}

uint64_t sub_1D25EBE8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t result;
  uint64_t (**v12)(uint64_t);
  uint64_t v13;

  v6 = *(_QWORD *)(a2 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  sub_1D25ED750(v3, (uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = (*(unsigned __int8 *)(v6 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
  v9 = swift_allocObject();
  sub_1D25ED84C((uint64_t)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), v9 + v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C878);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(a3, a1, v10);
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C868);
  v12 = (uint64_t (**)(uint64_t))(a3 + *(int *)(result + 36));
  *v12 = sub_1D25ED890;
  v12[1] = (uint64_t (*)(uint64_t))v9;
  return result;
}

uint64_t sub_1D25EBF6C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25EBFB8(&qword_1ED96C928, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB1470], 0x656E6F5A656D6954, 0xE800000000000000, a1);
}

uint64_t sub_1D25EBF94@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25EBFB8(&qword_1ED96C918, (uint64_t (*)(_QWORD))MEMORY[0x1E0CB0E38], 0x656C61636F4CLL, 0xE600000000000000, a1);
}

uint64_t sub_1D25EBFB8@<X0>(uint64_t *a1@<X0>, uint64_t (*a2)(_QWORD)@<X1>, uint64_t a3@<X2>, unint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  os_log_type_t v20;
  NSObject *v21;
  uint64_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v28 = a3;
  v9 = v5;
  v11 = sub_1D26CC7A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v25 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(a1);
  MEMORY[0x1E0C80A78](v15);
  v17 = (char *)&v25 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(v9, (uint64_t)v17, a1);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v18 = a2(0);
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v18 - 8) + 32))(a5, v17, v18);
  }
  else
  {
    v20 = sub_1D26CDCF8();
    v21 = sub_1D26CCB58();
    if (os_log_type_enabled(v21, v20))
    {
      v26 = a4;
      v22 = swift_slowAlloc();
      v27 = a5;
      v23 = (uint8_t *)v22;
      v24 = swift_slowAlloc();
      v30 = v24;
      *(_DWORD *)v23 = 136315138;
      v29 = sub_1D2537880(v28, v26, &v30);
      sub_1D26CDF50();
      _os_log_impl(&dword_1D2531000, v21, v20, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v23, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v24, -1, -1);
      MEMORY[0x1D823A5E0](v23, -1, -1);
    }

    sub_1D26CC798();
    swift_getAtKeyPath();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  }
}

uint64_t sub_1D25EC1F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  _QWORD v14[2];
  uint64_t v15;

  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 0x100) == 0)
  {
    swift_retain();
    v8 = sub_1D26CDCF8();
    v9 = sub_1D26CCB58();
    v10 = v8;
    if (os_log_type_enabled(v9, v8))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      v12 = swift_slowAlloc();
      v15 = v12;
      *(_DWORD *)v11 = 136315138;
      v14[0] = v11 + 4;
      v14[1] = sub_1D2537880(0xD000000000000011, 0x80000001D26E1D40, &v15);
      sub_1D26CDF50();
      _os_log_impl(&dword_1D2531000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v12, -1, -1);
      MEMORY[0x1D823A5E0](v11, -1, -1);
    }

    sub_1D26CC798();
    swift_getAtKeyPath();
    sub_1D25ECDC4(a1, a2, 0);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return v15;
  }
  return a1;
}

uint64_t sub_1D25EC3C4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  os_log_type_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD v18[3];
  uint64_t v19;

  v2 = v1;
  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C938);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(v2, (uint64_t)v10, &qword_1ED96C938);
  if (swift_getEnumCaseMultiPayload() == 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(a1, v10, v4);
  v12 = sub_1D26CDCF8();
  v13 = sub_1D26CCB58();
  v14 = v12;
  if (os_log_type_enabled(v13, v12))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v16 = swift_slowAlloc();
    v18[1] = a1;
    v17 = v16;
    v19 = v16;
    *(_DWORD *)v15 = 136315138;
    v18[2] = sub_1D2537880(0xD000000000000011, 0x80000001D26E1D60, &v19);
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v13, v14, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v15, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v17, -1, -1);
    MEMORY[0x1D823A5E0](v15, -1, -1);
  }

  sub_1D26CC798();
  swift_getAtKeyPath();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D25EC5F4(uint64_t a1, char a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  os_log_type_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;
  uint64_t v12;
  uint64_t v14;
  uint64_t v15;

  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((a2 & 1) != 0)
    return a1 & 1;
  swift_retain();
  v8 = sub_1D26CDCF8();
  v9 = sub_1D26CCB58();
  v10 = v8;
  if (os_log_type_enabled(v9, v8))
  {
    v11 = (uint8_t *)swift_slowAlloc();
    v12 = swift_slowAlloc();
    v15 = v12;
    *(_DWORD *)v11 = 136315138;
    v14 = sub_1D2537880(1819242306, 0xE400000000000000, &v15);
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v9, v10, "Accessing Environment<%s>'s value outside of being installed on a View. This will always read the default value and will not update.", v11, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v12, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);
  }

  sub_1D26CC798();
  swift_getAtKeyPath();
  sub_1D25ED9F0(a1, 0);
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v15;
}

uint64_t sub_1D25EC7AC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1D26CC498();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1D25EC7DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  char v3;

  result = sub_1D26CC498();
  *(_QWORD *)a1 = result;
  *(_BYTE *)(a1 + 8) = v3 & 1;
  return result;
}

uint64_t sub_1D25EC80C()
{
  return sub_1D26CC4A4();
}

uint64_t sub_1D25EC838()
{
  return sub_1D26CC4A4();
}

uint64_t type metadata accessor for SystemURLActionViewModifier(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96D390);
}

uint64_t sub_1D25EC878()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25EC89C(uint64_t a1, uint64_t (*a2)(_QWORD))
{
  uint64_t v2;
  char v4;

  v4 = (*(uint64_t (**)(void))(v2 + 16))();
  return a2(v4 & 1);
}

unint64_t sub_1D25EC8DC()
{
  unint64_t result;

  result = qword_1EFC82FE8;
  if (!qword_1EFC82FE8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for WidgetURLSource, &type metadata for WidgetURLSource);
    atomic_store(result, (unint64_t *)&qword_1EFC82FE8);
  }
  return result;
}

uint64_t storeEnumTagSinglePayload for WidgetURLSource(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D25EC96C + 4 * byte_1D26D61B5[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D25EC9A0 + 4 * byte_1D26D61B0[v4]))();
}

uint64_t sub_1D25EC9A0(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25EC9A8(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25EC9B0);
  return result;
}

uint64_t sub_1D25EC9BC(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25EC9C4);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D25EC9C8(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25EC9D0(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetURLSource()
{
  return &type metadata for WidgetURLSource;
}

uint64_t sub_1D25EC9EC(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA19_ConditionalContentVyAA08ModifiedE0Vyx9ChronoKit015SystemURLActionC8ModifierVGxGAaBHPAjaBHPxAaBHD1__AiA0cK0HPyHCHC_xAaBHD1_HCTm(a1, type metadata accessor for SystemURLActionViewModifier, &qword_1ED96D388, (uint64_t)&unk_1D26D62E8);
}

uint64_t sub_1D25ECA08(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[2];
  _QWORD v6[2];

  v1 = *(_QWORD *)(a1 + 8);
  v2 = sub_1D26CC3E4();
  v3 = sub_1D26CC918();
  v6[0] = v1;
  v6[1] = sub_1D25544AC();
  v5[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v2, v6);
  v5[1] = v1;
  return MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v3, v5);
}

uint64_t sub_1D25ECA94(uint64_t a1)
{
  return get_witness_table_7SwiftUI4ViewRzlAA19_ConditionalContentVyAA08ModifiedE0Vyx9ChronoKit015SystemURLActionC8ModifierVGxGAaBHPAjaBHPxAaBHD1__AiA0cK0HPyHCHC_xAaBHD1_HCTm(a1, type metadata accessor for WidgetURLReaderModifier, &qword_1ED96C8A8, (uint64_t)&unk_1D26D6388);
}

uint64_t get_witness_table_7SwiftUI4ViewRzlAA19_ConditionalContentVyAA08ModifiedE0Vyx9ChronoKit015SystemURLActionC8ModifierVGxGAaBHPAjaBHPxAaBHD1__AiA0cK0HPyHCHC_xAaBHD1_HCTm(uint64_t a1, uint64_t (*a2)(uint64_t), unint64_t *a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD v11[2];
  _QWORD v12[2];

  v7 = *(_QWORD *)(a1 + 8);
  a2(255);
  v8 = sub_1D26CC3E4();
  v9 = sub_1D26CC918();
  v12[0] = v7;
  v12[1] = sub_1D25369B0(a3, a2, a4);
  v11[0] = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v8, v12);
  v11[1] = v7;
  return MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v9, v11);
}

uint64_t sub_1D25ECB60(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  return (**(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8))(a1, a2, v4);
}

uint64_t sub_1D25ECB9C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CC36C();
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
}

uint64_t sub_1D25ECBD0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D25ECC14(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D25ECC58(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D25ECC9C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_1D25ECCE0()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25ECCEC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D25ECD28()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25ECD34(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CC36C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D25ECD74(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25ED660(a1, a2, a3, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9030]);
}

uint64_t sub_1D25ECD80(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_retain();
  return result;
}

uint64_t destroy for WidgetLaunchViewModifier(uint64_t a1)
{
  swift_release();
  swift_release();
  return sub_1D25ECDC4(*(_QWORD *)(a1 + 32), *(unsigned __int8 *)(a1 + 40), *(_BYTE *)(a1 + 41));
}

uint64_t sub_1D25ECDC4(uint64_t a1, uint64_t a2, char a3)
{
  uint64_t result;

  if ((a3 & 1) == 0)
    return swift_release();
  return result;
}

uint64_t initializeWithCopy for WidgetLaunchViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  char v4;
  uint64_t v5;

  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  v3 = *(_QWORD *)(a2 + 32);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  v4 = *(_BYTE *)(a2 + 41);
  v5 = *(unsigned __int8 *)(a2 + 40);
  swift_retain();
  swift_retain();
  sub_1D25ECD80(v3, v5, v4);
  *(_QWORD *)(a1 + 32) = v3;
  *(_BYTE *)(a1 + 40) = v5;
  *(_BYTE *)(a1 + 41) = v4;
  return a1;
}

uint64_t assignWithCopy for WidgetLaunchViewModifier(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  char v10;
  uint64_t v11;

  v4 = *(_QWORD *)(a2 + 8);
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_retain();
  swift_release();
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_retain();
  swift_release();
  v6 = *(_QWORD *)(a2 + 32);
  v7 = *(_BYTE *)(a2 + 41);
  v8 = *(unsigned __int8 *)(a2 + 40);
  sub_1D25ECD80(v6, v8, v7);
  v9 = *(_QWORD *)(a1 + 32);
  v10 = *(_BYTE *)(a1 + 41);
  *(_QWORD *)(a1 + 32) = v6;
  v11 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v8;
  *(_BYTE *)(a1 + 41) = v7;
  sub_1D25ECDC4(v9, v11, v10);
  return a1;
}

__n128 __swift_memcpy42_8(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;

  result = *(__n128 *)a2;
  v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 26) = *(_OWORD *)(a2 + 26);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for WidgetLaunchViewModifier(uint64_t a1, uint64_t a2)
{
  char v4;
  char v5;
  uint64_t v6;
  char v7;
  uint64_t v8;

  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_release();
  v4 = *(_BYTE *)(a2 + 40);
  v5 = *(_BYTE *)(a2 + 41);
  v6 = *(_QWORD *)(a1 + 32);
  v7 = *(_BYTE *)(a1 + 41);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  v8 = *(unsigned __int8 *)(a1 + 40);
  *(_BYTE *)(a1 + 40) = v4;
  *(_BYTE *)(a1 + 41) = v5;
  sub_1D25ECDC4(v6, v8, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetLaunchViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 42))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetLaunchViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_WORD *)(result + 40) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 42) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 42) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for WidgetLaunchViewModifier()
{
  return &type metadata for WidgetLaunchViewModifier;
}

uint64_t *sub_1D25ED004(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4;
  int v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  unsigned int (*v12)(char *, uint64_t, uint64_t);
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8);
  v5 = *(_DWORD *)(*(_QWORD *)(v4 - 8) + 80);
  v6 = *a2;
  *a1 = *a2;
  if ((v5 & 0x20000) != 0)
  {
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    a1[1] = a2[1];
    v7 = *(int *)(v4 + 32);
    v8 = (char *)a1 + v7;
    v9 = (char *)a2 + v7;
    v10 = sub_1D26CB880();
    v11 = *(_QWORD *)(v10 - 8);
    v12 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48);
    swift_retain();
    swift_retain();
    if (v12(v9, 1, v10))
    {
      v13 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
      memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v13 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v8, v9, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
    }
  }
  return a1;
}

uint64_t sub_1D25ED118(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;

  swift_release();
  swift_release();
  v2 = a1 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8) + 32);
  v3 = sub_1D26CB880();
  v4 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return result;
}

_QWORD *sub_1D25ED1A4(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_retain();
  swift_retain();
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8) + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D26CB880();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1D25ED27C(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8) + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D26CB880();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

_QWORD *sub_1D25ED3BC(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  v5 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8) + 32);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = sub_1D26CB880();
  v9 = *(_QWORD *)(v8 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

_QWORD *sub_1D25ED488(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(char *, uint64_t, uint64_t);
  int v10;
  int v11;
  uint64_t v12;

  *a1 = *a2;
  swift_release();
  a1[1] = a2[1];
  swift_release();
  v4 = *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8) + 32);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = sub_1D26CB880();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v10 = v9(v5, 1, v7);
  v11 = v9(v6, 1, v7);
  if (!v10)
  {
    if (!v11)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v5, v6, v7);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v5, v7);
    goto LABEL_6;
  }
  if (v11)
  {
LABEL_6:
    v12 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  return a1;
}

uint64_t sub_1D25ED5B8()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25ED5C4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
}

uint64_t sub_1D25ED604()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D25ED610(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, a2, v4);
}

uint64_t sub_1D25ED654(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25ED660(a1, a2, a3, (uint64_t (*)(uint64_t))sub_1D25ED6C8);
}

uint64_t sub_1D25ED660(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t))
{
  uint64_t result;
  unint64_t v5;

  result = a4(319);
  if (v5 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void sub_1D25ED6C8()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED96B2B0)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED96FC50);
    v0 = sub_1D26CCFD8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED96B2B0);
  }
}

uint64_t sub_1D25ED720()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25ED730()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25ED740()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D25ED750(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetURLReaderModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25ED794()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetURLReaderModifier(0) - 8) + 80);
  swift_release();
  swift_release();
  v2 = v0 + ((v1 + 16) & ~v1) + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B2A8) + 32);
  v3 = sub_1D26CB880();
  v4 = *(_QWORD *)(v3 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3))
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v2, v3);
  return swift_deallocObject();
}

uint64_t sub_1D25ED84C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetURLReaderModifier(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25ED890(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for WidgetURLReaderModifier(0) - 8) + 80);
  return sub_1D25EBA64(a1, v1 + ((v3 + 16) & ~v3));
}

uint64_t objectdestroy_10Tm()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1D25ECDC4(*(_QWORD *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(_BYTE *)(v0 + 57));
  return swift_deallocObject();
}

uint64_t sub_1D25ED910()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 32))();
}

uint64_t sub_1D25ED930()
{
  return sub_1D26CC5DC();
}

uint64_t sub_1D25ED950(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25EB4E0(a1, a2, a3, a4, MEMORY[0x1E0CDA958]);
}

uint64_t sub_1D25ED96C()
{
  return sub_1D26CC510();
}

uint64_t sub_1D25ED98C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25EB4E0(a1, a2, a3, a4, MEMORY[0x1E0CDA6C8]);
}

uint64_t sub_1D25ED9A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C9D0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25ED9F0(uint64_t a1, char a2)
{
  uint64_t result;

  if ((a2 & 1) == 0)
    return swift_release();
  return result;
}

unint64_t sub_1D25EDA00()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96C860;
  if (!qword_1ED96C860)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96C868);
    v2[0] = sub_1D2536488(&qword_1ED96C870, &qword_1ED96C878, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2536488(&qword_1ED96C880, &qword_1ED96C888, MEMORY[0x1E0CDC940]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96C860);
  }
  return result;
}

uint64_t sub_1D25EDA9C()
{
  uint64_t (*v0)(uint64_t);

  __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED96E9F8);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96E9F0);
  sub_1D26CC3CC();
  v0 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CD9718];
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CBF8);
  sub_1D2536488(&qword_1ED96CBF0, &qword_1ED96CBF8, MEMORY[0x1E0CDBF10]);
  swift_getOpaqueTypeConformance2();
  sub_1D25369B0(&qword_1ED96E9E8, v0, MEMORY[0x1E0CD9710]);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1D25EDB98()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96CA88;
  if (!qword_1ED96CA88)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CA90);
    v2[0] = sub_1D25EDC1C();
    v2[1] = sub_1D2536488(&qword_1ED96B288, &qword_1ED96B290, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96CA88);
  }
  return result;
}

unint64_t sub_1D25EDC1C()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED96C9C8;
  if (!qword_1ED96C9C8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96C9D0);
    v2[0] = sub_1D2536488(&qword_1ED96CC10, &qword_1ED96CC18, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2536488(&qword_1ED96B288, &qword_1ED96B290, MEMORY[0x1E0CDCF80]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED96C9C8);
  }
  return result;
}

uint64_t sub_1D25EDCBC()
{
  uint64_t result;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  result = sub_1D26CC150();
  qword_1ED963740 = result;
  return result;
}

uint64_t static StorefrontChangeCoordinator._storefrontDidChangePublisher.getter()
{
  return sub_1D25EDE80(&qword_1ED963750);
}

uint64_t static StorefrontChangeCoordinator._storefrontDidChangePublisher.setter(uint64_t a1)
{
  return sub_1D25EDEF4(a1, &qword_1ED963750, &qword_1ED963740);
}

uint64_t (*static StorefrontChangeCoordinator._storefrontDidChangePublisher.modify())()
{
  if (qword_1ED963750 != -1)
    swift_once();
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D25EDDA0()
{
  uint64_t v0;
  uint64_t result;

  if (qword_1ED963750 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC70, MEMORY[0x1E0C95F48]);
  v0 = sub_1D26CC204();
  result = swift_release();
  qword_1ED963730 = v0;
  return result;
}

uint64_t static StorefrontChangeCoordinator.storefrontDidChangePublisher.getter()
{
  return sub_1D25EDE80(&qword_1ED963738);
}

uint64_t sub_1D25EDE80(_QWORD *a1)
{
  if (*a1 != -1)
    swift_once();
  swift_beginAccess();
  return swift_retain();
}

uint64_t static StorefrontChangeCoordinator.storefrontDidChangePublisher.setter(uint64_t a1)
{
  return sub_1D25EDEF4(a1, &qword_1ED963738, &qword_1ED963730);
}

uint64_t sub_1D25EDEF4(uint64_t a1, _QWORD *a2, _QWORD *a3)
{
  if (*a2 != -1)
    swift_once();
  swift_beginAccess();
  *a3 = a1;
  return swift_release();
}

uint64_t (*static StorefrontChangeCoordinator.storefrontDidChangePublisher.modify())()
{
  if (qword_1ED963738 != -1)
    swift_once();
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t StorefrontChangeCoordinator.__allocating_init()()
{
  uint64_t v0;
  __CFNotificationCenter *v1;
  __CFString *v2;

  v0 = swift_allocObject();
  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  v2 = (__CFString *)sub_1D26CD914();
  CFNotificationCenterAddObserver(v1, 0, (CFNotificationCallback)sub_1D25EE0D0, v2, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  return v0;
}

uint64_t StorefrontChangeCoordinator.init()()
{
  uint64_t v0;
  __CFNotificationCenter *v1;
  __CFString *v2;

  v1 = CFNotificationCenterGetDarwinNotifyCenter();
  v2 = (__CFString *)sub_1D26CD914();
  CFNotificationCenterAddObserver(v1, 0, (CFNotificationCallback)sub_1D25EE0D0, v2, 0, CFNotificationSuspensionBehaviorDeliverImmediately);

  return v0;
}

uint64_t sub_1D25EE0D0(void *a1, uint64_t a2, void *a3, uint64_t a4, void *a5)
{
  uint64_t v7;
  id v8;
  id v9;
  id v10;

  v7 = qword_1ED963750;
  v8 = a1;
  v9 = a3;
  v10 = a5;
  if (v7 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();

  return swift_release();
}

uint64_t static StorefrontChangeCoordinator._simulateStorefrontChange()()
{
  if (qword_1ED963750 != -1)
    swift_once();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  return swift_release();
}

uint64_t StorefrontChangeCoordinator.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t StorefrontChangeCoordinator.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for StorefrontChangeCoordinator()
{
  return objc_opt_self();
}

uint64_t method lookup function for StorefrontChangeCoordinator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StorefrontChangeCoordinator.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 80))();
}

void sub_1D25EE2A8(char a1)
{
  sub_1D26CE460();
  __asm { BR              X10 }
}

uint64_t sub_1D25EE304()
{
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

void sub_1D25EE394(uint64_t a1, char a2)
{
  __asm { BR              X11 }
}

uint64_t sub_1D25EE3DC()
{
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

void sub_1D25EE454(uint64_t a1, char a2)
{
  sub_1D26CE460();
  __asm { BR              X10 }
}

uint64_t sub_1D25EE4AC()
{
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25EE53C(uint64_t a1)
{
  uint64_t result;
  int64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1D26CDC08();
  v3 = 0;
  v18 = result;
  v4 = a1 + 64;
  v5 = 1 << *(_BYTE *)(a1 + 32);
  v6 = -1;
  if (v5 < 64)
    v6 = ~(-1 << v5);
  v7 = v6 & *(_QWORD *)(a1 + 64);
  v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      v3 = v14 + 1;
      if (v14 + 1 >= v8)
        goto LABEL_23;
      v15 = *(_QWORD *)(v4 + 8 * v3);
      if (!v15)
      {
        v3 = v14 + 2;
        if (v14 + 2 >= v8)
          goto LABEL_23;
        v15 = *(_QWORD *)(v4 + 8 * v3);
        if (!v15)
        {
          v3 = v14 + 3;
          if (v14 + 3 >= v8)
            goto LABEL_23;
          v15 = *(_QWORD *)(v4 + 8 * v3);
          if (!v15)
            break;
        }
      }
    }
LABEL_22:
    v7 = (v15 - 1) & v15;
    v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    v11 = (uint64_t *)(*(_QWORD *)(a1 + 48) + 16 * v10);
    v12 = *v11;
    v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_1D25F0B88(&v17, v12, v13);
    result = swift_bridgeObjectRelease();
  }
  v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  v15 = *(_QWORD *)(v4 + 8 * v16);
  if (v15)
  {
    v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    v3 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v3 >= v8)
      goto LABEL_23;
    v15 = *(_QWORD *)(v4 + 8 * v3);
    ++v16;
    if (v15)
      goto LABEL_22;
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1D25EE6D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t result;
  uint64_t v12;
  char *v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t i;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, unint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  char v31;
  void (*v32)(char *, uint64_t);
  char *v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  uint64_t v37;
  int64_t v38;
  uint64_t v39;
  uint64_t v40;

  v4 = sub_1D26CD20C();
  v40 = *(_QWORD *)(v4 - 8);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = MEMORY[0x1E0C80A78](v5);
  v10 = (char *)&v33 - v9;
  result = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v33 - v12;
  if (a1 == a2)
    return 1;
  if (*(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return 0;
  v14 = 0;
  v15 = *(_QWORD *)(a1 + 56);
  v34 = a1;
  v35 = a1 + 56;
  v16 = 1 << *(_BYTE *)(a1 + 32);
  if (v16 < 64)
    v17 = ~(-1 << v16);
  else
    v17 = -1;
  v18 = v17 & v15;
  v36 = (unint64_t)(v16 + 63) >> 6;
  v39 = a2 + 56;
  v33 = (char *)&v33 - v12;
  if (!v18)
    goto LABEL_9;
LABEL_7:
  v37 = (v18 - 1) & v18;
  v38 = v14;
  for (i = __clz(__rbit64(v18)) | (v14 << 6); ; i = __clz(__rbit64(v21)) + (v22 << 6))
  {
    v24 = v40;
    v25 = *(_QWORD *)(v40 + 72);
    v26 = *(void (**)(char *, unint64_t, uint64_t))(v40 + 16);
    v26(v13, *(_QWORD *)(a1 + 48) + v25 * i, v4);
    (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v10, v13, v4);
    sub_1D25369B0(&qword_1ED96D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD00]);
    v27 = sub_1D26CD8CC();
    v28 = -1 << *(_BYTE *)(a2 + 32);
    v29 = v27 & ~v28;
    if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v10, v4);
      return 0;
    }
    v30 = ~v28;
    while (1)
    {
      v26(v7, *(_QWORD *)(a2 + 48) + v29 * v25, v4);
      sub_1D25369B0(&qword_1ED963838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD08]);
      v31 = sub_1D26CD908();
      v32 = *(void (**)(char *, uint64_t))(v40 + 8);
      v32(v7, v4);
      if ((v31 & 1) != 0)
        break;
      v29 = (v29 + 1) & v30;
      if (((*(_QWORD *)(v39 + ((v29 >> 3) & 0xFFFFFFFFFFFFF8)) >> v29) & 1) == 0)
      {
        v32(v10, v4);
        return 0;
      }
    }
    result = ((uint64_t (*)(char *, uint64_t))v32)(v10, v4);
    v13 = v33;
    a1 = v34;
    v18 = v37;
    v14 = v38;
    if (v37)
      goto LABEL_7;
LABEL_9:
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v20 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v20);
    v22 = v14 + 1;
    if (!v21)
    {
      v22 = v20 + 1;
      if (v20 + 1 >= v36)
        return 1;
      v21 = *(_QWORD *)(v35 + 8 * v22);
      if (!v21)
      {
        v22 = v20 + 2;
        if (v20 + 2 >= v36)
          return 1;
        v21 = *(_QWORD *)(v35 + 8 * v22);
        if (!v21)
        {
          v22 = v20 + 3;
          if (v20 + 3 >= v36)
            return 1;
          v21 = *(_QWORD *)(v35 + 8 * v22);
          if (!v21)
            break;
        }
      }
    }
LABEL_24:
    v37 = (v21 - 1) & v21;
    v38 = v22;
  }
  v23 = v20 + 4;
  if (v23 >= v36)
    return 1;
  v21 = *(_QWORD *)(v35 + 8 * v23);
  if (v21)
  {
    v22 = v23;
    goto LABEL_24;
  }
  while (1)
  {
    v22 = v23 + 1;
    if (__OFADD__(v23, 1))
      break;
    if (v22 >= v36)
      return 1;
    v21 = *(_QWORD *)(v35 + 8 * v22);
    ++v23;
    if (v21)
      goto LABEL_24;
  }
LABEL_35:
  __break(1u);
  return result;
}

void sub_1D25EEA40(uint64_t a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  int64_t v15;
  unint64_t v16;
  int64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  id v22;
  char v23;
  uint64_t v24;
  id v25;
  char v26;
  uint64_t v27;
  int64_t v28;
  int64_t v29;

  v4 = a2 & 0xC000000000000001;
  if ((a1 & 0xC000000000000001) != 0)
  {
    if (a1 < 0)
      v5 = a1;
    else
      v5 = a1 & 0xFFFFFFFFFFFFFF8;
    if (v4)
    {
      sub_1D26CE028();
      return;
    }
    v6 = v5;
    v7 = a2;
    goto LABEL_13;
  }
  if (v4)
  {
    if (a2 < 0)
      v6 = a2;
    else
      v6 = a2 & 0xFFFFFFFFFFFFFF8;
    v7 = a1;
LABEL_13:
    sub_1D25F0540(v6, v7);
    return;
  }
  if (a1 == a2 || *(_QWORD *)(a1 + 16) != *(_QWORD *)(a2 + 16))
    return;
  v27 = a1 + 56;
  v8 = 1 << *(_BYTE *)(a1 + 32);
  if (v8 < 64)
    v9 = ~(-1 << v8);
  else
    v9 = -1;
  v10 = v9 & *(_QWORD *)(a1 + 56);
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
  v11 = 0;
  v28 = (unint64_t)(v8 + 63) >> 6;
  v12 = a2 + 56;
  while (1)
  {
    if (v10)
    {
      v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      v14 = v13 | (v11 << 6);
      goto LABEL_39;
    }
    v15 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_49;
    }
    if (v15 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v15);
    ++v11;
    if (!v16)
    {
      v11 = v15 + 1;
      if (v15 + 1 >= v28)
        return;
      v16 = *(_QWORD *)(v27 + 8 * v11);
      if (!v16)
      {
        v11 = v15 + 2;
        if (v15 + 2 >= v28)
          return;
        v16 = *(_QWORD *)(v27 + 8 * v11);
        if (!v16)
        {
          v11 = v15 + 3;
          if (v15 + 3 >= v28)
            return;
          v16 = *(_QWORD *)(v27 + 8 * v11);
          if (!v16)
            break;
        }
      }
    }
LABEL_38:
    v10 = (v16 - 1) & v16;
    v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_39:
    v18 = *(id *)(*(_QWORD *)(a1 + 48) + 8 * v14);
    v19 = sub_1D26CDEC0();
    v20 = -1 << *(_BYTE *)(a2 + 32);
    v21 = v19 & ~v20;
    if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
      goto LABEL_46;
    v29 = v11;
    v22 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
    v23 = sub_1D26CDECC();

    if ((v23 & 1) == 0)
    {
      v24 = ~v20;
      while (1)
      {
        v21 = (v21 + 1) & v24;
        if (((*(_QWORD *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFF8)) >> v21) & 1) == 0)
          break;
        v25 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v21);
        v26 = sub_1D26CDECC();

        if ((v26 & 1) != 0)
          goto LABEL_20;
      }
LABEL_46:

      return;
    }
LABEL_20:

    v11 = v29;
  }
  v17 = v15 + 4;
  if (v17 >= v28)
    return;
  v16 = *(_QWORD *)(v27 + 8 * v17);
  if (v16)
  {
    v11 = v17;
    goto LABEL_38;
  }
  while (1)
  {
    v11 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v11 >= v28)
      return;
    v16 = *(_QWORD *)(v27 + 8 * v11);
    ++v17;
    if (v16)
      goto LABEL_38;
  }
LABEL_49:
  __break(1u);
}

uint64_t EnvironmentModifiers.canAppearInSecureEnvironment.getter()
{
  unsigned __int8 *v0;

  return *v0;
}

uint64_t EnvironmentModifiers.canAppearInSecureEnvironment.setter(uint64_t result)
{
  _BYTE *v1;

  *v1 = result;
  return result;
}

uint64_t (*EnvironmentModifiers.canAppearInSecureEnvironment.modify())()
{
  return CGSizeMake;
}

uint64_t EnvironmentModifiers.supportedColorSchemes.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 8);
}

uint64_t EnvironmentModifiers.supportedColorSchemes.setter(uint64_t result)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 8) = result;
  return result;
}

uint64_t (*EnvironmentModifiers.supportedColorSchemes.modify())()
{
  return CGSizeMake;
}

uint64_t EnvironmentModifiers.supportedRenderSchemes.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EnvironmentModifiers.supportedRenderSchemes.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 16) = a1;
  return result;
}

uint64_t (*EnvironmentModifiers.supportedRenderSchemes.modify())()
{
  return CGSizeMake;
}

uint64_t EnvironmentModifiers.wantsLowLuminanceContent.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 24);
}

uint64_t EnvironmentModifiers.wantsLowLuminanceContent.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 24) = result;
  return result;
}

uint64_t (*EnvironmentModifiers.wantsLowLuminanceContent.modify())()
{
  return CGSizeMake;
}

uint64_t EnvironmentModifiers.showsWidgetLabel.getter()
{
  uint64_t v0;

  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t EnvironmentModifiers.showsWidgetLabel.setter(uint64_t result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + 25) = result;
  return result;
}

uint64_t (*EnvironmentModifiers.showsWidgetLabel.modify())()
{
  return CGSizeMake;
}

uint64_t EnvironmentModifiers.supportedDisplayProperties.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t EnvironmentModifiers.supportedDisplayProperties.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 32) = a1;
  return result;
}

uint64_t (*EnvironmentModifiers.supportedDisplayProperties.modify())()
{
  return CGSizeMake;
}

void EnvironmentModifiers.init()(uint64_t a1@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = MEMORY[0x1E0DEE9E8];
  v3 = MEMORY[0x1E0DEE9E8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1D26CE1F0())
      sub_1D25F5124(MEMORY[0x1E0DEE9D8]);
    else
      v3 = MEMORY[0x1E0DEE9E8];
  }
  *(_BYTE *)a1 = 0;
  *(_QWORD *)(a1 + 8) = 0;
  *(_QWORD *)(a1 + 16) = v2;
  *(_WORD *)(a1 + 24) = 0;
  *(_QWORD *)(a1 + 32) = v3;
}

uint64_t sub_1D25EEEC8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  BOOL v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  _QWORD *v41;
  uint64_t v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  unint64_t v55;
  uint64_t result;
  uint64_t v57;
  uint64_t v59;
  uint64_t v60;
  _QWORD *v61;
  uint64_t v62;
  char v63;
  char v64;
  BOOL v65;
  uint64_t v66;
  uint64_t v67;
  BOOL v68;
  BOOL v69;

  v4 = *a1;
  v5 = a1[1];
  v6 = a1[2];
  v59 = a1[3];
  v7 = a1[4];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1D26CE1F0())
    sub_1D25F5124(MEMORY[0x1E0DEE9D8]);
  if (v6)
    v8 = (v4 & 1) == 0;
  else
    v8 = 1;
  v60 = v6;
  v61 = a2;
  v57 = v7;
  if (v8)
  {
    v9 = a2[2];
    if (v9)
    {
      swift_bridgeObjectRetain();
      v10 = a2 + 8;
      v11 = MEMORY[0x1E0DEE9D8];
      do
      {
        if (*((_BYTE *)v10 - 32) == 1)
        {
          v15 = *(v10 - 2);
          v62 = *(v10 - 3);
          v16 = *((_BYTE *)v10 - 8);
          v17 = *((_BYTE *)v10 - 7);
          v18 = *v10;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            sub_1D258442C(0, *(_QWORD *)(v11 + 16) + 1, 1);
          v13 = *(_QWORD *)(v11 + 16);
          v12 = *(_QWORD *)(v11 + 24);
          if (v13 >= v12 >> 1)
            sub_1D258442C(v12 > 1, v13 + 1, 1);
          *(_QWORD *)(v11 + 16) = v13 + 1;
          v14 = v11 + 40 * v13;
          *(_BYTE *)(v14 + 32) = 1;
          *(_QWORD *)(v14 + 40) = v62;
          *(_QWORD *)(v14 + 48) = v15;
          *(_BYTE *)(v14 + 56) = v16;
          *(_BYTE *)(v14 + 57) = v17;
          *(_QWORD *)(v14 + 64) = v18;
        }
        v10 += 5;
        --v9;
      }
      while (v9);
      a2 = v61;
      swift_bridgeObjectRelease();
      v6 = v60;
    }
    else
    {
      v11 = MEMORY[0x1E0DEE9D8];
    }
    v19 = *(_QWORD *)(v11 + 16);
    swift_release();
    v65 = v19 != 0;
    if (!v6)
      v5 = 0;
  }
  else
  {
    v65 = 1;
  }
  v66 = v5;
  v20 = a2[2];
  if (v20)
  {
    v21 = a2 + 5;
    v22 = a2[2];
    v23 = v5;
    do
    {
      v24 = *v21;
      v21 += 5;
      v25 = v24 | v23;
      if ((v24 & v23) != v24)
      {
        v5 = v25;
        v23 = v25;
      }
      --v22;
    }
    while (v22);
    v66 = v5;
  }
  if (v6)
  {
    swift_bridgeObjectRetain();
    v67 = v6;
    if (v20)
    {
LABEL_28:
      swift_bridgeObjectRetain();
      v26 = 48;
      v27 = v20;
      do
      {
        v28 = swift_bridgeObjectRetain();
        sub_1D25D1E68(v28);
        v26 += 40;
        --v27;
      }
      while (v27);
      swift_bridgeObjectRelease();
      v6 = v60;
      if (!v60 || (v59 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        v29 = a2 + 8;
        v30 = MEMORY[0x1E0DEE9D8];
        v31 = v20;
        do
        {
          if (*((_BYTE *)v29 - 8) == 1)
          {
            v35 = *((_BYTE *)v29 - 32);
            v36 = *(v29 - 3);
            v37 = *(v29 - 2);
            v63 = *((_BYTE *)v29 - 7);
            v38 = *v29;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
              sub_1D258442C(0, *(_QWORD *)(v30 + 16) + 1, 1);
            v33 = *(_QWORD *)(v30 + 16);
            v32 = *(_QWORD *)(v30 + 24);
            if (v33 >= v32 >> 1)
              sub_1D258442C(v32 > 1, v33 + 1, 1);
            *(_QWORD *)(v30 + 16) = v33 + 1;
            v34 = v30 + 40 * v33;
            *(_BYTE *)(v34 + 32) = v35;
            *(_QWORD *)(v34 + 40) = v36;
            *(_QWORD *)(v34 + 48) = v37;
            *(_BYTE *)(v34 + 56) = 1;
            *(_BYTE *)(v34 + 57) = v63;
            *(_QWORD *)(v34 + 64) = v38;
            a2 = v61;
          }
          v29 += 5;
          --v31;
        }
        while (v31);
        swift_bridgeObjectRelease();
        v6 = v60;
LABEL_46:
        v39 = *(_QWORD *)(v30 + 16);
        swift_release();
        v68 = v39 != 0;
        if (!v6)
          goto LABEL_48;
        goto LABEL_47;
      }
      goto LABEL_43;
    }
  }
  else
  {
    v67 = MEMORY[0x1E0DEE9E8];
    if (v20)
      goto LABEL_28;
  }
  if (!v6 || (v59 & 1) == 0)
  {
    v30 = MEMORY[0x1E0DEE9D8];
    goto LABEL_46;
  }
LABEL_43:
  v68 = 1;
LABEL_47:
  if ((v59 & 0x100) != 0)
  {
    v69 = 1;
    goto LABEL_61;
  }
LABEL_48:
  v40 = MEMORY[0x1E0DEE9D8];
  if (v20)
  {
    swift_bridgeObjectRetain();
    v41 = a2 + 8;
    v42 = MEMORY[0x1E0DEE9D8];
    v43 = v20;
    do
    {
      if (*((_BYTE *)v41 - 7) == 1)
      {
        v64 = *((_BYTE *)v41 - 32);
        v47 = *(v41 - 3);
        v48 = *(v41 - 2);
        v49 = *((_BYTE *)v41 - 8);
        v50 = *v41;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          sub_1D258442C(0, *(_QWORD *)(v42 + 16) + 1, 1);
        v45 = *(_QWORD *)(v42 + 16);
        v44 = *(_QWORD *)(v42 + 24);
        if (v45 >= v44 >> 1)
          sub_1D258442C(v44 > 1, v45 + 1, 1);
        *(_QWORD *)(v42 + 16) = v45 + 1;
        v46 = v42 + 40 * v45;
        *(_BYTE *)(v46 + 32) = v64;
        *(_QWORD *)(v46 + 40) = v47;
        *(_QWORD *)(v46 + 48) = v48;
        *(_BYTE *)(v46 + 56) = v49;
        *(_BYTE *)(v46 + 57) = 1;
        *(_QWORD *)(v46 + 64) = v50;
      }
      v41 += 5;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    v6 = v60;
    v40 = MEMORY[0x1E0DEE9D8];
  }
  else
  {
    v42 = MEMORY[0x1E0DEE9D8];
  }
  v51 = *(_QWORD *)(v42 + 16);
  swift_release();
  v69 = v51 != 0;
  if (!v6)
  {
    if ((v40 & 0xC000000000000000) != 0 && sub_1D26CE1F0())
    {
      sub_1D25F5124(MEMORY[0x1E0DEE9D8]);
      v52 = v53;
    }
    else
    {
      v52 = MEMORY[0x1E0DEE9E8];
    }
    goto LABEL_66;
  }
LABEL_61:
  swift_bridgeObjectRelease();
  v52 = v57;
LABEL_66:
  swift_bridgeObjectRelease();
  if (v20)
  {
    v54 = 64;
    do
    {
      v55 = swift_bridgeObjectRetain();
      sub_1D25D208C(v55);
      v54 += 40;
      --v20;
    }
    while (v20);
  }
  result = swift_bridgeObjectRelease();
  *(_BYTE *)a3 = v65;
  *(_QWORD *)(a3 + 8) = v66;
  *(_QWORD *)(a3 + 16) = v67;
  *(_BYTE *)(a3 + 24) = v68;
  *(_BYTE *)(a3 + 25) = v69;
  *(_QWORD *)(a3 + 32) = v52;
  return result;
}

uint64_t sub_1D25EF478(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D25EF4B4 + 4 * byte_1D26D6492[a1]))(0xD00000000000001CLL, 0x80000001D26DD820);
}

uint64_t sub_1D25EF4B4()
{
  uint64_t v0;

  return v0 + 5;
}

uint64_t sub_1D25EF518(unsigned __int8 a1)
{
  return ((uint64_t (*)(unint64_t, unint64_t))((char *)sub_1D25EF554 + 4 * byte_1D26D6498[a1]))(0xD00000000000001CLL, 0x80000001D26DD820);
}

uint64_t sub_1D25EF554()
{
  uint64_t v0;

  return v0 + 5;
}

void sub_1D25EF5B8(char *a1)
{
  sub_1D25E7F24(*a1);
}

void sub_1D25EF5C4()
{
  char *v0;

  sub_1D25EE2A8(*v0);
}

void sub_1D25EF5CC(uint64_t a1)
{
  char *v1;

  sub_1D25EE394(a1, *v1);
}

void sub_1D25EF5D4(uint64_t a1)
{
  char *v1;

  sub_1D25EE454(a1, *v1);
}

uint64_t sub_1D25EF5DC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25F5A08();
  *a1 = result;
  return result;
}

uint64_t sub_1D25EF608@<X0>(uint64_t *a1@<X8>)
{
  unsigned __int8 *v1;
  uint64_t result;
  uint64_t v4;

  result = sub_1D25EF478(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

uint64_t sub_1D25EF630()
{
  unsigned __int8 *v0;

  return sub_1D25EF518(*v0);
}

uint64_t sub_1D25EF638@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D25F5A08();
  *a1 = result;
  return result;
}

void sub_1D25EF65C(_BYTE *a1@<X8>)
{
  *a1 = 6;
}

uint64_t sub_1D25EF668()
{
  sub_1D25F5480();
  return sub_1D26CE4F0();
}

uint64_t sub_1D25EF690()
{
  sub_1D25F5480();
  return sub_1D26CE4FC();
}

uint64_t EnvironmentModifiers.init(from:)@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  char v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  _QWORD v15[2];
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  int v19;
  int v20;
  uint64_t v21;
  _BYTE *v22;
  __int128 v23;
  uint64_t v24;
  __int128 v25;
  unint64_t v26;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962B80);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = a2;
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0 && sub_1D26CE1F0())
    sub_1D25F5124(MEMORY[0x1E0DEE9D8]);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D25F5480();
  sub_1D26CE4D8();
  if (v2)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
LABEL_5:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  LOBYTE(v25) = 0;
  v9 = sub_1D26CE298();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FEC0);
  LOBYTE(v23) = 2;
  sub_1D25F54C4(&qword_1ED9638A0, &qword_1ED963840, MEMORY[0x1E0CEFD10], MEMORY[0x1E0DEB3D8]);
  sub_1D26CE2C8();
  v11 = v25;
  LOBYTE(v25) = 1;
  swift_bridgeObjectRetain();
  v21 = sub_1D26CE2BC();
  LOBYTE(v25) = 3;
  v20 = sub_1D26CE298();
  LOBYTE(v25) = 4;
  v19 = sub_1D26CE298();
  LOBYTE(v23) = 5;
  sub_1D25A1D50();
  sub_1D26CE2C8();
  v17 = *((_QWORD *)&v25 + 1);
  v18 = v25;
  v15[1] = sub_1D2539514(0, &qword_1ED9620C8);
  __swift_instantiateConcreteTypeFromMangledName(qword_1ED9639E0);
  v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1D26D5A90;
  *(_QWORD *)(v12 + 32) = sub_1D2539514(0, (unint64_t *)&unk_1ED9638E8);
  *(_QWORD *)(v12 + 40) = sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
  v16 = v12;
  sub_1D26CDD34();
  result = swift_bridgeObjectRelease();
  if (v24)
  {
    LODWORD(v16) = v9 & 1;
    v19 &= 1u;
    v20 &= 1u;
    sub_1D2538448(&v23, &v25);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963880);
    swift_dynamicCast();
    v13 = sub_1D25F4C50(v26);
    swift_bridgeObjectRelease();
    sub_1D253EE04(v18, v17);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    v14 = v22;
    *v22 = v16;
    *((_QWORD *)v14 + 1) = v21;
    *((_QWORD *)v14 + 2) = v11;
    v14[24] = v20;
    v14[25] = v19;
    *((_QWORD *)v14 + 4) = v13;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)a1);
    goto LABEL_5;
  }
  __break(1u);
  return result;
}

uint64_t EnvironmentModifiers.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  char *v15;
  void *v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  void *v21;
  void *v22;
  void *v23;
  void *v24;
  _DWORD v25[4];
  void *v26;
  uint64_t v27;
  char v28;
  id v29[3];

  v29[2] = *(id *)MEMORY[0x1E0C80C00];
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FA48);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v1 + 8);
  v26 = *(void **)(v1 + 16);
  v27 = v8;
  LODWORD(v8) = *(unsigned __int8 *)(v1 + 24);
  v25[2] = *(unsigned __int8 *)(v1 + 25);
  v25[3] = v8;
  v9 = a1[3];
  v10 = a1;
  v12 = v11;
  __swift_project_boxed_opaque_existential_0(v10, v9);
  sub_1D25F5480();
  sub_1D26CE4E4();
  LOBYTE(v29[0]) = 0;
  sub_1D26CE328();
  if (v2)
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
  v13 = v26;
  LOBYTE(v29[0]) = 1;
  sub_1D26CE34C();
  v29[0] = v13;
  v28 = 2;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FEC0);
  sub_1D25F54C4(&qword_1ED96F9D0, &qword_1ED96F9C8, MEMORY[0x1E0CEFCF8], MEMORY[0x1E0DEB3B8]);
  sub_1D26CE358();
  LOBYTE(v29[0]) = 3;
  sub_1D26CE328();
  LOBYTE(v29[0]) = 4;
  sub_1D26CE328();
  v15 = v7;
  v16 = (void *)objc_opt_self();
  v17 = swift_bridgeObjectRetain();
  sub_1D2591428(v17);
  swift_bridgeObjectRelease();
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
  v18 = (void *)sub_1D26CDADC();
  swift_release();
  v29[0] = 0;
  v19 = objc_msgSend(v16, sel_archivedDataWithRootObject_requiringSecureCoding_error_, v18, 1, v29);

  v20 = v29[0];
  if (v19)
  {
    v21 = (void *)sub_1D26CB8E0();
    v23 = v22;

    v29[0] = v21;
    v29[1] = v23;
    v28 = 5;
    sub_1D25A1DD0();
    sub_1D26CE358();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v15, v12);
    return sub_1D253EE04((uint64_t)v21, (unint64_t)v23);
  }
  else
  {
    v24 = v20;
    sub_1D26CB76C();

    swift_willThrow();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v15, v12);
  }
}

unint64_t EnvironmentModifiers.swiftUIColorSchemes.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;
  unint64_t v12;
  unint64_t v13;
  uint64_t v15;

  v1 = sub_1D26CC2C4();
  v2 = *(_QWORD *)(v1 - 8);
  v3 = MEMORY[0x1E0C80A78](v1);
  v5 = (char *)&v15 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v3);
  v7 = (char *)&v15 - v6;
  v8 = *(_QWORD *)(v0 + 8);
  if ((v8 & 1) == 0)
  {
    v9 = MEMORY[0x1E0DEE9D8];
    if ((v8 & 2) == 0)
      return v9;
    goto LABEL_7;
  }
  (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))((char *)&v15 - v6, *MEMORY[0x1E0CD86E0], v1);
  v9 = sub_1D2561D6C(0, 1, 1, MEMORY[0x1E0DEE9D8]);
  v11 = *(_QWORD *)(v9 + 16);
  v10 = *(_QWORD *)(v9 + 24);
  if (v11 >= v10 >> 1)
    v9 = sub_1D2561D6C(v10 > 1, v11 + 1, 1, v9);
  *(_QWORD *)(v9 + 16) = v11 + 1;
  (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v9+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v11, v7, v1);
  if ((v8 & 2) != 0)
  {
LABEL_7:
    (*(void (**)(char *, _QWORD, uint64_t))(v2 + 104))(v5, *MEMORY[0x1E0CD86D0], v1);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v9 = sub_1D2561D6C(0, *(_QWORD *)(v9 + 16) + 1, 1, v9);
    v13 = *(_QWORD *)(v9 + 16);
    v12 = *(_QWORD *)(v9 + 24);
    if (v13 >= v12 >> 1)
      v9 = sub_1D2561D6C(v12 > 1, v13 + 1, 1, v9);
    *(_QWORD *)(v9 + 16) = v13 + 1;
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(v9+ ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80))+ *(_QWORD *)(v2 + 72) * v13, v5, v1);
  }
  return v9;
}

uint64_t EnvironmentModifiers.hash(into:)(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(_QWORD *)(v1 + 32);
  sub_1D26CE478();
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D25F43C4(a1, v3);
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  sub_1D26CE478();
  swift_bridgeObjectRetain();
  sub_1D25F4154((uint64_t)a1, v4);
  return swift_bridgeObjectRelease();
}

uint64_t EnvironmentModifiers.description.getter()
{
  sub_1D26CE0A0();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  type metadata accessor for CHSColorSchemes(0);
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CD20C();
  sub_1D25369B0(&qword_1ED96D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD00]);
  swift_bridgeObjectRetain();
  sub_1D26CDBFC();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
  sub_1D25F5548();
  swift_bridgeObjectRetain();
  sub_1D26CDBFC();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t EnvironmentModifiers.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1D26CE460();
  sub_1D26CE478();
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D25F43C4(v4, v1);
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  sub_1D26CE478();
  swift_bridgeObjectRetain();
  sub_1D25F4154((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25F0444@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return EnvironmentModifiers.init(from:)(a1, a2);
}

uint64_t sub_1D25F0458(_QWORD *a1)
{
  return EnvironmentModifiers.encode(to:)(a1);
}

uint64_t sub_1D25F0474()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  __int128 v4[4];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 32);
  sub_1D26CE460();
  sub_1D26CE478();
  sub_1D26CE46C();
  swift_bridgeObjectRetain();
  sub_1D25F43C4(v4, v1);
  swift_bridgeObjectRelease();
  sub_1D26CE478();
  sub_1D26CE478();
  swift_bridgeObjectRetain();
  sub_1D25F4154((uint64_t)v4, v2);
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

void sub_1D25F0540(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  int64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  unint64_t v10;
  unint64_t v11;
  id v12;
  char v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;

  v3 = *(_QWORD *)(a2 + 16);
  if (v3 != sub_1D26CE010())
    return;
  v4 = 0;
  v5 = a2 + 56;
  v6 = 1 << *(_BYTE *)(a2 + 32);
  v7 = -1;
  if (v6 < 64)
    v7 = ~(-1 << v6);
  v8 = v7 & *(_QWORD *)(a2 + 56);
  v9 = (unint64_t)(v6 + 63) >> 6;
  while (v8)
  {
    v10 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    v11 = v10 | (v4 << 6);
LABEL_6:
    v12 = *(id *)(*(_QWORD *)(a2 + 48) + 8 * v11);
    v13 = sub_1D26CE040();

    if ((v13 & 1) == 0)
      return;
  }
  v14 = v4 + 1;
  if (__OFADD__(v4, 1))
  {
    __break(1u);
    goto LABEL_23;
  }
  if (v14 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v14);
  ++v4;
  if (v15)
    goto LABEL_19;
  v4 = v14 + 1;
  if (v14 + 1 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v4);
  if (v15)
  {
LABEL_19:
    v8 = (v15 - 1) & v15;
    v11 = __clz(__rbit64(v15)) + (v4 << 6);
    goto LABEL_6;
  }
  v16 = v14 + 2;
  if (v16 >= v9)
    return;
  v15 = *(_QWORD *)(v5 + 8 * v16);
  if (v15)
  {
    v4 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    v4 = v16 + 1;
    if (__OFADD__(v16, 1))
      break;
    if (v4 >= v9)
      return;
    v15 = *(_QWORD *)(v5 + 8 * v4);
    ++v16;
    if (v15)
      goto LABEL_19;
  }
LABEL_23:
  __break(1u);
}

uint64_t sub_1D25F0690(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  char isUniquelyReferenced_nonNull_native;
  id v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1D26CE01C();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1D2539514(0, (unint64_t *)&qword_1ED96BFB8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      result = 0;
      *a1 = v26;
      return result;
    }
    result = sub_1D26CE010();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1D25DDBE0(v7, result + 1);
    v27 = v21;
    if (*(_QWORD *)(v21 + 24) <= *(_QWORD *)(v21 + 16))
    {
      v25 = v8;
      sub_1D25F16F4();
      v22 = v27;
    }
    else
    {
      v22 = v21;
      v23 = v8;
    }
    sub_1D25DDE24(v8, v22);
    *v3 = v22;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D26CDEC0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1D2539514(0, (unint64_t *)&qword_1ED96BFB8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1D26CDECC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1D26CDECC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v28 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1D25F25CC((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v28;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1D25F092C(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1D25369B0(&qword_1ED961AF0, v11, MEMORY[0x1E0CB0018]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1D26CD8CC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1D25369B0(&qword_1ED961AF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v21 = sub_1D26CD908();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D25F2750((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1D25F0B88(uint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  BOOL v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v17;
  _QWORD *v18;
  BOOL v19;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;

  v7 = *v3;
  sub_1D26CE460();
  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  v8 = sub_1D26CE49C();
  v9 = -1 << *(_BYTE *)(v7 + 32);
  v10 = v8 & ~v9;
  if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) != 0)
  {
    v11 = *(_QWORD *)(v7 + 48);
    v12 = (_QWORD *)(v11 + 16 * v10);
    v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1D26CE3D0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v14 = (uint64_t *)(*(_QWORD *)(*v3 + 48) + 16 * v10);
      v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    v17 = ~v9;
    while (1)
    {
      v10 = (v10 + 1) & v17;
      if (((*(_QWORD *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
        break;
      v18 = (_QWORD *)(v11 + 16 * v10);
      v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1D26CE3D0() & 1) != 0)
        goto LABEL_7;
    }
  }
  swift_bridgeObjectRelease();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v21 = *v3;
  *v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_1D25F2994(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_1D25F0D34(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  char v20;
  void (*v21)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
  swift_bridgeObjectRetain();
  v29 = a2;
  v11 = sub_1D26CD8CC();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v25 = v2;
    v26 = a1;
    v27 = ~v12;
    v28 = v7;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v18 = v14;
      v19 = v17;
      v17(v9, *(_QWORD *)(v14 + 48) + v16 * v13, v6);
      sub_1D2536488(&qword_1ED963380, &qword_1ED9633A0, MEMORY[0x1E0D0FB58]);
      v20 = sub_1D26CD908();
      v21 = *(void (**)(char *, uint64_t))(v28 + 8);
      v21(v9, v6);
      if ((v20 & 1) != 0)
        break;
      v13 = (v13 + 1) & v27;
      v14 = v18;
      v17 = v19;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v25;
        a1 = v26;
        v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v29, v6);
    v19(v26, *(_QWORD *)(*v25 + 48) + v16 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = v29;
    v17(v9, v29, v6);
    v30 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D25F2B2C((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v23, v6);
    return 1;
  }
}

uint64_t sub_1D25F0F94(_QWORD *a1, void *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  id v17;
  char v18;
  void *v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  id v24;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v3 = v2;
  v6 = *v2;
  if ((*v2 & 0xC000000000000001) != 0)
  {
    if (v6 < 0)
      v7 = *v2;
    else
      v7 = v6 & 0xFFFFFFFFFFFFFF8;
    swift_bridgeObjectRetain();
    v8 = a2;
    v9 = sub_1D26CE01C();

    if (v9)
    {
      swift_bridgeObjectRelease();

      sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      *a1 = v28;
      swift_unknownObjectRelease();
      return 0;
    }
    result = sub_1D26CE010();
    if (__OFADD__(result, 1))
    {
      __break(1u);
      return result;
    }
    v21 = sub_1D25DDC04(v7, result + 1);
    v29 = v21;
    v22 = *(_QWORD *)(v21 + 16);
    if (*(_QWORD *)(v21 + 24) <= v22)
    {
      v26 = v22 + 1;
      v27 = v8;
      sub_1D25F1C70(v26, &qword_1ED963910);
      v23 = v29;
    }
    else
    {
      v23 = v21;
      v24 = v8;
    }
    sub_1D25DDE24(v8, v23);
    *v3 = v23;
  }
  else
  {
    swift_bridgeObjectRetain();
    v11 = sub_1D26CDEC0();
    v12 = -1 << *(_BYTE *)(v6 + 32);
    v13 = v11 & ~v12;
    if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
    {
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
      v14 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
      v15 = sub_1D26CDECC();

      if ((v15 & 1) != 0)
      {
LABEL_12:

        swift_bridgeObjectRelease();
        v19 = *(void **)(*(_QWORD *)(*v2 + 48) + 8 * v13);
        *a1 = v19;
        v20 = v19;
        return 0;
      }
      v16 = ~v12;
      while (1)
      {
        v13 = (v13 + 1) & v16;
        if (((*(_QWORD *)(v6 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
          break;
        v17 = *(id *)(*(_QWORD *)(v6 + 48) + 8 * v13);
        v18 = sub_1D26CDECC();

        if ((v18 & 1) != 0)
          goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v30 = *v2;
    *v2 = 0x8000000000000000;
    v8 = a2;
    sub_1D25F2D74((uint64_t)v8, v13, isUniquelyReferenced_nonNull_native);
    *v2 = v30;
  }
  swift_bridgeObjectRelease();
  *a1 = v8;
  return 1;
}

uint64_t sub_1D25F1238(uint64_t a1, char *a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t);
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(_QWORD, _QWORD, _QWORD);
  uint64_t v19;
  void (*v20)(_QWORD, _QWORD, _QWORD);
  char v21;
  void (*v22)(char *, uint64_t);
  uint64_t v23;
  char isUniquelyReferenced_nonNull_native;
  char *v25;
  _QWORD *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;

  v3 = v2;
  v6 = sub_1D26CD20C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v3;
  sub_1D25369B0(&qword_1ED96D4F8, v11, MEMORY[0x1E0CEFD00]);
  swift_bridgeObjectRetain();
  v31 = a2;
  v12 = sub_1D26CD8CC();
  v13 = -1 << *(_BYTE *)(v10 + 32);
  v14 = v12 & ~v13;
  v15 = v10;
  v16 = v10 + 56;
  if (((*(_QWORD *)(v10 + 56 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) != 0)
  {
    v27 = v3;
    v28 = a1;
    v29 = ~v13;
    v30 = v7;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v19 = v15;
      v20 = v18;
      v18(v9, *(_QWORD *)(v15 + 48) + v17 * v14, v6);
      sub_1D25369B0(&qword_1ED963838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD08]);
      v21 = sub_1D26CD908();
      v22 = *(void (**)(char *, uint64_t))(v30 + 8);
      v22(v9, v6);
      if ((v21 & 1) != 0)
        break;
      v14 = (v14 + 1) & v29;
      v15 = v19;
      v18 = v20;
      if (((*(_QWORD *)(v16 + ((v14 >> 3) & 0xFFFFFFFFFFFFF8)) >> v14) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v27;
        a1 = v28;
        v23 = v30;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v31, v6);
    v20(v28, *(_QWORD *)(*v27 + 48) + v17 * v14, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v18 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    v23 = v7;
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v25 = v31;
    v18(v9, v31, v6);
    v32 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D25F2F04((uint64_t)v9, v14, isUniquelyReferenced_nonNull_native);
    *v3 = v32;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v23 + 32))(a1, v25, v6);
    return 1;
  }
}

uint64_t sub_1D25F1494(uint64_t a1, char *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void (*v17)(_QWORD, _QWORD, _QWORD);
  uint64_t v18;
  void (*v19)(_QWORD, _QWORD, _QWORD);
  char v20;
  void (*v21)(char *, uint64_t);
  char isUniquelyReferenced_nonNull_native;
  char *v23;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;

  v3 = v2;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *v2;
  sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
  swift_bridgeObjectRetain();
  v29 = a2;
  v11 = sub_1D26CD8CC();
  v12 = -1 << *(_BYTE *)(v10 + 32);
  v13 = v11 & ~v12;
  v14 = v10;
  v15 = v10 + 56;
  if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) != 0)
  {
    v25 = v2;
    v26 = a1;
    v27 = ~v12;
    v28 = v7;
    v16 = *(_QWORD *)(v7 + 72);
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
    while (1)
    {
      v18 = v14;
      v19 = v17;
      v17(v9, *(_QWORD *)(v14 + 48) + v16 * v13, v6);
      sub_1D2536488(&qword_1ED963320, &qword_1ED96FE70, MEMORY[0x1E0D0F980]);
      v20 = sub_1D26CD908();
      v21 = *(void (**)(char *, uint64_t))(v28 + 8);
      v21(v9, v6);
      if ((v20 & 1) != 0)
        break;
      v13 = (v13 + 1) & v27;
      v14 = v18;
      v17 = v19;
      if (((*(_QWORD *)(v15 + ((v13 >> 3) & 0xFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        v3 = v25;
        a1 = v26;
        v7 = v28;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v21(v29, v6);
    v19(v26, *(_QWORD *)(*v25 + 48) + v16 * v13, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    v17 = *(void (**)(_QWORD, _QWORD, _QWORD))(v7 + 16);
LABEL_7:
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v23 = v29;
    v17(v9, v29, v6);
    v30 = *v3;
    *v3 = 0x8000000000000000;
    sub_1D25F3148((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *v3 = v30;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v23, v6);
    return 1;
  }
}

uint64_t sub_1D25F16F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD *v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t *v28;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C0B0);
  v3 = sub_1D26CE07C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v28 = v0;
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v6 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v7 = ~(-1 << v5);
    else
      v7 = -1;
    v8 = v7 & *(_QWORD *)(v2 + 56);
    v9 = (unint64_t)(v5 + 63) >> 6;
    v10 = v3 + 56;
    result = swift_retain();
    v12 = 0;
    while (1)
    {
      if (v8)
      {
        v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        v15 = v14 | (v12 << 6);
      }
      else
      {
        v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
          return result;
        }
        if (v16 >= v9)
          goto LABEL_31;
        v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          v12 = v16 + 1;
          if (v16 + 1 >= v9)
            goto LABEL_31;
          v17 = v6[v12];
          if (!v17)
          {
            v18 = v16 + 2;
            if (v18 >= v9)
            {
LABEL_31:
              swift_release();
              v1 = v28;
              v27 = 1 << *(_BYTE *)(v2 + 32);
              if (v27 > 63)
                bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              else
                *v6 = -1 << v27;
              *(_QWORD *)(v2 + 16) = 0;
              break;
            }
            v17 = v6[v18];
            if (!v17)
            {
              while (1)
              {
                v12 = v18 + 1;
                if (__OFADD__(v18, 1))
                  goto LABEL_37;
                if (v12 >= v9)
                  goto LABEL_31;
                v17 = v6[v12];
                ++v18;
                if (v17)
                  goto LABEL_21;
              }
            }
            v12 = v18;
          }
        }
LABEL_21:
        v8 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      v19 = *(_QWORD *)(*(_QWORD *)(v2 + 48) + 8 * v15);
      result = sub_1D26CDEC0();
      v20 = -1 << *(_BYTE *)(v4 + 32);
      v21 = result & ~v20;
      v22 = v21 >> 6;
      if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v23 = 0;
        v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_36;
          }
          v25 = v22 == v24;
          if (v22 == v24)
            v22 = 0;
          v23 |= v25;
          v26 = *(_QWORD *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D25F197C(uint64_t a1)
{
  return sub_1D25F1C70(a1, &qword_1EFC82A38);
}

uint64_t sub_1D25F1988()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  _QWORD *v30;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962120);
  v3 = sub_1D26CE07C();
  v4 = v3;
  if (*(_QWORD *)(v2 + 16))
  {
    v5 = 1 << *(_BYTE *)(v2 + 32);
    v30 = (_QWORD *)(v2 + 56);
    if (v5 < 64)
      v6 = ~(-1 << v5);
    else
      v6 = -1;
    v7 = v6 & *(_QWORD *)(v2 + 56);
    v8 = (unint64_t)(v5 + 63) >> 6;
    v9 = v3 + 56;
    result = swift_retain();
    v11 = 0;
    while (1)
    {
      if (v7)
      {
        v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        v15 = v14 | (v11 << 6);
      }
      else
      {
        v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8)
          goto LABEL_33;
        v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          v11 = v16 + 1;
          if (v16 + 1 >= v8)
            goto LABEL_33;
          v17 = v30[v11];
          if (!v17)
          {
            v11 = v16 + 2;
            if (v16 + 2 >= v8)
              goto LABEL_33;
            v17 = v30[v11];
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                v1 = v0;
                v29 = 1 << *(_BYTE *)(v2 + 32);
                if (v29 > 63)
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v30 = -1 << v29;
                *(_QWORD *)(v2 + 16) = 0;
                break;
              }
              v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  v11 = v18 + 1;
                  if (__OFADD__(v18, 1))
                    goto LABEL_39;
                  if (v11 >= v8)
                    goto LABEL_33;
                  v17 = v30[v11];
                  ++v18;
                  if (v17)
                    goto LABEL_23;
                }
              }
              v11 = v18;
            }
          }
        }
LABEL_23:
        v7 = (v17 - 1) & v17;
        v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
      v20 = *v19;
      v21 = v19[1];
      sub_1D26CE460();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v22 = -1 << *(_BYTE *)(v4 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
      *v13 = v20;
      v13[1] = v21;
      ++*(_QWORD *)(v4 + 16);
    }
  }
  result = swift_release();
  *v1 = v4;
  return result;
}

uint64_t sub_1D25F1C64(uint64_t a1)
{
  return sub_1D25F1C70(a1, &qword_1ED963910);
}

uint64_t sub_1D25F1C70(uint64_t a1, uint64_t *a2)
{
  uint64_t *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  uint64_t v12;
  uint64_t result;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  unint64_t v17;
  int64_t v18;
  unint64_t v19;
  int64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t *v30;

  v3 = v2;
  v4 = *v2;
  __swift_instantiateConcreteTypeFromMangledName(a2);
  v5 = sub_1D26CE07C();
  v6 = v5;
  if (*(_QWORD *)(v4 + 16))
  {
    v30 = v2;
    v7 = 1 << *(_BYTE *)(v4 + 32);
    v8 = (_QWORD *)(v4 + 56);
    if (v7 < 64)
      v9 = ~(-1 << v7);
    else
      v9 = -1;
    v10 = v9 & *(_QWORD *)(v4 + 56);
    v11 = (unint64_t)(v7 + 63) >> 6;
    v12 = v5 + 56;
    result = swift_retain();
    v14 = 0;
    while (1)
    {
      if (v10)
      {
        v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        v17 = v16 | (v14 << 6);
      }
      else
      {
        v18 = v14 + 1;
        if (__OFADD__(v14, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v11)
          goto LABEL_33;
        v19 = v8[v18];
        ++v14;
        if (!v19)
        {
          v14 = v18 + 1;
          if (v18 + 1 >= v11)
            goto LABEL_33;
          v19 = v8[v14];
          if (!v19)
          {
            v14 = v18 + 2;
            if (v18 + 2 >= v11)
              goto LABEL_33;
            v19 = v8[v14];
            if (!v19)
            {
              v20 = v18 + 3;
              if (v20 >= v11)
              {
LABEL_33:
                swift_release();
                v3 = v30;
                v29 = 1 << *(_BYTE *)(v4 + 32);
                if (v29 > 63)
                  bzero((void *)(v4 + 56), ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v8 = -1 << v29;
                *(_QWORD *)(v4 + 16) = 0;
                break;
              }
              v19 = v8[v20];
              if (!v19)
              {
                while (1)
                {
                  v14 = v20 + 1;
                  if (__OFADD__(v20, 1))
                    goto LABEL_39;
                  if (v14 >= v11)
                    goto LABEL_33;
                  v19 = v8[v14];
                  ++v20;
                  if (v19)
                    goto LABEL_23;
                }
              }
              v14 = v20;
            }
          }
        }
LABEL_23:
        v10 = (v19 - 1) & v19;
        v17 = __clz(__rbit64(v19)) + (v14 << 6);
      }
      v21 = *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v17);
      result = sub_1D26CDEC0();
      v22 = -1 << *(_BYTE *)(v6 + 32);
      v23 = result & ~v22;
      v24 = v23 >> 6;
      if (((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6))) != 0)
      {
        v15 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v25 = 0;
        v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v27 = v24 == v26;
          if (v24 == v26)
            v24 = 0;
          v25 |= v27;
          v28 = *(_QWORD *)(v12 + 8 * v24);
        }
        while (v28 == -1);
        v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(_QWORD *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(_QWORD *)(*(_QWORD *)(v6 + 48) + 8 * v15) = v21;
      ++*(_QWORD *)(v6 + 16);
    }
  }
  result = swift_release();
  *v3 = v6;
  return result;
}

uint64_t sub_1D25F1F08(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t (*v44)(uint64_t);
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = a2(0);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - v9;
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1D26CE07C();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1D25369B0(v45, v44, v46);
      result = sub_1D26CD8CC();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

uint64_t sub_1D25F2268(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t result;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  int64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, unint64_t, uint64_t);
  uint64_t v31;
  unint64_t v32;
  unint64_t v33;
  char v34;
  unint64_t v35;
  BOOL v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t *v40;
  int64_t v41;
  _QWORD *v42;
  uint64_t v43;
  uint64_t *v44;
  unint64_t *v45;
  uint64_t v46;

  v45 = a4;
  v46 = a5;
  v7 = v5;
  v44 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v43 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v12 = sub_1D26CE07C();
  v13 = v12;
  if (*(_QWORD *)(v11 + 16))
  {
    v14 = 1 << *(_BYTE *)(v11 + 32);
    v15 = *(_QWORD *)(v11 + 56);
    v42 = (_QWORD *)(v11 + 56);
    if (v14 < 64)
      v16 = ~(-1 << v14);
    else
      v16 = -1;
    v17 = v16 & v15;
    v40 = v5;
    v41 = (unint64_t)(v14 + 63) >> 6;
    v18 = v12 + 56;
    result = swift_retain();
    v20 = 0;
    while (1)
    {
      if (v17)
      {
        v22 = __clz(__rbit64(v17));
        v17 &= v17 - 1;
        v23 = v22 | (v20 << 6);
      }
      else
      {
        v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v24 >= v41)
          goto LABEL_33;
        v25 = v42[v24];
        ++v20;
        if (!v25)
        {
          v20 = v24 + 1;
          if (v24 + 1 >= v41)
            goto LABEL_33;
          v25 = v42[v20];
          if (!v25)
          {
            v20 = v24 + 2;
            if (v24 + 2 >= v41)
              goto LABEL_33;
            v25 = v42[v20];
            if (!v25)
            {
              v26 = v24 + 3;
              if (v26 >= v41)
              {
LABEL_33:
                swift_release();
                v7 = v40;
                v38 = 1 << *(_BYTE *)(v11 + 32);
                if (v38 > 63)
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                else
                  *v42 = -1 << v38;
                *(_QWORD *)(v11 + 16) = 0;
                break;
              }
              v25 = v42[v26];
              if (!v25)
              {
                while (1)
                {
                  v20 = v26 + 1;
                  if (__OFADD__(v26, 1))
                    goto LABEL_39;
                  if (v20 >= v41)
                    goto LABEL_33;
                  v25 = v42[v20];
                  ++v26;
                  if (v25)
                    goto LABEL_23;
                }
              }
              v20 = v26;
            }
          }
        }
LABEL_23:
        v17 = (v25 - 1) & v25;
        v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      v27 = v11;
      v28 = *(_QWORD *)(v11 + 48);
      v29 = *(_QWORD *)(v43 + 72);
      v30 = *(void (**)(char *, unint64_t, uint64_t))(v43 + 32);
      v30(v10, v28 + v29 * v23, v8);
      sub_1D2536488(v45, v44, v46);
      result = sub_1D26CD8CC();
      v31 = -1 << *(_BYTE *)(v13 + 32);
      v32 = result & ~v31;
      v33 = v32 >> 6;
      if (((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6))) != 0)
      {
        v21 = __clz(__rbit64((-1 << v32) & ~*(_QWORD *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        v34 = 0;
        v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          v36 = v33 == v35;
          if (v33 == v35)
            v33 = 0;
          v34 |= v36;
          v37 = *(_QWORD *)(v18 + 8 * v33);
        }
        while (v37 == -1);
        v21 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(_QWORD *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      result = ((uint64_t (*)(unint64_t, char *, uint64_t))v30)(*(_QWORD *)(v13 + 48) + v21 * v29, v10, v8);
      ++*(_QWORD *)(v13 + 16);
      v11 = v27;
    }
  }
  result = swift_release();
  *v7 = v13;
  return result;
}

void sub_1D25F25CC(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1D25F16F4();
  }
  else
  {
    if (v7 > v6)
    {
      sub_1D25DDEA8();
      goto LABEL_14;
    }
    sub_1D25F3390();
  }
  v8 = *v3;
  v9 = sub_1D26CDEC0();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1D2539514(0, (unint64_t *)&qword_1ED96BFB8);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1D26CDECC();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1D26CE418();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1D26CDECC();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1D25F2750(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D25F1F08(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED962118, &qword_1ED961AF0, MEMORY[0x1E0CB0018]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D25DE03C();
      goto LABEL_12;
    }
    sub_1D25F3B18(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], &qword_1ED962118, &qword_1ED961AF0, MEMORY[0x1E0CB0018]);
  }
  v13 = *v3;
  sub_1D25369B0(&qword_1ED961AF0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0018]);
  v14 = sub_1D26CD8CC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1D25369B0(&qword_1ED961AF8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8], MEMORY[0x1E0CB0028]);
      v19 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D26CE418();
  __break(1u);
  return result;
}

uint64_t sub_1D25F2994(uint64_t result, uint64_t a2, unint64_t a3, char a4)
{
  uint64_t *v4;
  uint64_t *v5;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _QWORD *v15;
  BOOL v16;
  uint64_t v17;
  _QWORD *v18;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;

  v5 = v4;
  v8 = result;
  v9 = *(_QWORD *)(*v4 + 16);
  v10 = *(_QWORD *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0)
    goto LABEL_22;
  if ((a4 & 1) != 0)
  {
    sub_1D25F1988();
  }
  else
  {
    if (v10 > v9)
    {
      result = (uint64_t)sub_1D25DE050();
      goto LABEL_22;
    }
    sub_1D25F35F4();
  }
  v11 = *v4;
  sub_1D26CE460();
  sub_1D26CD9D4();
  result = sub_1D26CE49C();
  v12 = -1 << *(_BYTE *)(v11 + 32);
  a3 = result & ~v12;
  v13 = v11 + 56;
  if (((*(_QWORD *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) != 0)
  {
    v14 = *(_QWORD *)(v11 + 48);
    v15 = (_QWORD *)(v14 + 16 * a3);
    v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (result = sub_1D26CE3D0(), (result & 1) != 0))
    {
LABEL_21:
      result = sub_1D26CE418();
      __break(1u);
    }
    else
    {
      v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(_QWORD *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFF8)) >> a3) & 1) == 0)
          break;
        v18 = (_QWORD *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          result = sub_1D26CE3D0();
          if ((result & 1) == 0)
            continue;
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  v20 = *v5;
  *(_QWORD *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  v21 = (uint64_t *)(*(_QWORD *)(v20 + 48) + 16 * a3);
  *v21 = v8;
  v21[1] = a2;
  v22 = *(_QWORD *)(v20 + 16);
  v23 = __OFADD__(v22, 1);
  v24 = v22 + 1;
  if (v23)
    __break(1u);
  else
    *(_QWORD *)(v20 + 16) = v24;
  return result;
}

uint64_t sub_1D25F2B2C(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D25F2268(v12, &qword_1ED9633A0, &qword_1ED963908, (unint64_t *)&unk_1ED963370, MEMORY[0x1E0D0FB50]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D25DE200();
      goto LABEL_12;
    }
    sub_1D25F3E34(v12, &qword_1ED9633A0, &qword_1ED963908, (unint64_t *)&unk_1ED963370, MEMORY[0x1E0D0FB50]);
  }
  v13 = *v3;
  sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
  v14 = sub_1D26CD8CC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1D2536488(&qword_1ED963380, &qword_1ED9633A0, MEMORY[0x1E0D0FB58]);
      v19 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D26CE418();
  __break(1u);
  return result;
}

void sub_1D25F2D74(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  char v12;
  uint64_t v13;
  id v14;
  char v15;
  uint64_t v16;
  uint64_t v17;
  BOOL v18;
  uint64_t v19;

  v6 = *(_QWORD *)(*v3 + 16);
  v7 = *(_QWORD *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0)
    goto LABEL_14;
  if ((a3 & 1) != 0)
  {
    sub_1D25F1C70(v6 + 1, &qword_1ED963910);
  }
  else
  {
    if (v7 > v6)
    {
      sub_1D25DE214();
      goto LABEL_14;
    }
    sub_1D25F38A0();
  }
  v8 = *v3;
  v9 = sub_1D26CDEC0();
  v10 = -1 << *(_BYTE *)(v8 + 32);
  a2 = v9 & ~v10;
  if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
    v11 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
    v12 = sub_1D26CDECC();

    if ((v12 & 1) != 0)
    {
LABEL_13:
      sub_1D26CE418();
      __break(1u);
    }
    else
    {
      v13 = ~v10;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(_QWORD *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) == 0)
          break;
        v14 = *(id *)(*(_QWORD *)(v8 + 48) + 8 * a2);
        v15 = sub_1D26CDECC();

        if ((v15 & 1) != 0)
          goto LABEL_13;
      }
    }
  }
LABEL_14:
  v16 = *v3;
  *(_QWORD *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(_QWORD *)(*(_QWORD *)(v16 + 48) + 8 * a2) = a1;
  v17 = *(_QWORD *)(v16 + 16);
  v18 = __OFADD__(v17, 1);
  v19 = v17 + 1;
  if (v18)
    __break(1u);
  else
    *(_QWORD *)(v16 + 16) = v19;
}

uint64_t sub_1D25F2F04(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = sub_1D26CD20C();
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D25F1F08(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], &qword_1ED962B70, &qword_1ED96D4F8, MEMORY[0x1E0CEFD00]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D25DE3BC();
      goto LABEL_12;
    }
    sub_1D25F3B18(v12, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], &qword_1ED962B70, &qword_1ED96D4F8, MEMORY[0x1E0CEFD00]);
  }
  v13 = *v3;
  sub_1D25369B0(&qword_1ED96D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD00]);
  v14 = sub_1D26CD8CC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1D25369B0(&qword_1ED963838, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD08]);
      v19 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D26CE418();
  __break(1u);
  return result;
}

uint64_t sub_1D25F3148(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t *v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  unint64_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  void (*v18)(char *, unint64_t, uint64_t);
  char v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t result;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t *v26;
  uint64_t v27;

  v27 = a1;
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = *(_QWORD *)(*v3 + 16);
  v11 = *(_QWORD *)(*v3 + 24);
  v26 = v3;
  if (v11 > v10 && (a3 & 1) != 0)
    goto LABEL_12;
  v12 = v10 + 1;
  if ((a3 & 1) != 0)
  {
    sub_1D25F2268(v12, &qword_1ED96FE70, (uint64_t *)&unk_1ED9638F8, &qword_1ED963318, MEMORY[0x1E0D0F978]);
  }
  else
  {
    if (v11 > v10)
    {
      sub_1D25DE5F4();
      goto LABEL_12;
    }
    sub_1D25F3E34(v12, &qword_1ED96FE70, (uint64_t *)&unk_1ED9638F8, &qword_1ED963318, MEMORY[0x1E0D0F978]);
  }
  v13 = *v3;
  sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
  v14 = sub_1D26CD8CC();
  v15 = -1 << *(_BYTE *)(v13 + 32);
  a2 = v14 & ~v15;
  if (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0)
  {
    v16 = ~v15;
    v17 = *(_QWORD *)(v7 + 72);
    v18 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    do
    {
      v18(v9, *(_QWORD *)(v13 + 48) + v17 * a2, v6);
      sub_1D2536488(&qword_1ED963320, &qword_1ED96FE70, MEMORY[0x1E0D0F980]);
      v19 = sub_1D26CD908();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
      if ((v19 & 1) != 0)
        goto LABEL_15;
      a2 = (a2 + 1) & v16;
    }
    while (((*(_QWORD *)(v13 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  v20 = v27;
  v21 = *v26;
  *(_QWORD *)(*v26 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v7 + 32))(*(_QWORD *)(v21 + 48) + *(_QWORD *)(v7 + 72) * a2, v20, v6);
  v23 = *(_QWORD *)(v21 + 16);
  v24 = __OFADD__(v23, 1);
  v25 = v23 + 1;
  if (!v24)
  {
    *(_QWORD *)(v21 + 16) = v25;
    return result;
  }
  __break(1u);
LABEL_15:
  result = sub_1D26CE418();
  __break(1u);
  return result;
}

uint64_t sub_1D25F3390()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C0B0);
  v3 = sub_1D26CE07C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_32:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain_n();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_21;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v16 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_30;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v18 = v16 + 2;
        if (v18 >= v9)
        {
LABEL_30:
          result = swift_release_n();
          v1 = v27;
          goto LABEL_32;
        }
        v17 = *(_QWORD *)(v6 + 8 * v18);
        v12 = v18;
        if (!v17)
          break;
      }
    }
LABEL_20:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_21:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1D26CDEC0();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_33;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_30;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_20;
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_1D25F35F4()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  uint64_t result;
  int64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  unint64_t v24;
  char v25;
  unint64_t v26;
  BOOL v27;
  uint64_t v28;
  int64_t v29;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962120);
  v3 = sub_1D26CE07C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v29 = (unint64_t)(v5 + 63) >> 6;
  v9 = v3 + 56;
  result = swift_retain();
  v11 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      v11 = v16 + 1;
      if (v16 + 1 >= v29)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v11);
      if (!v17)
      {
        v11 = v16 + 2;
        if (v16 + 2 >= v29)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v11);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    v19 = (uint64_t *)(*(_QWORD *)(v2 + 48) + 16 * v15);
    v20 = *v19;
    v21 = v19[1];
    sub_1D26CE460();
    swift_bridgeObjectRetain();
    sub_1D26CD9D4();
    result = sub_1D26CE49C();
    v22 = -1 << *(_BYTE *)(v4 + 32);
    v23 = result & ~v22;
    v24 = v23 >> 6;
    if (((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      v12 = __clz(__rbit64((-1 << v23) & ~*(_QWORD *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v25 = 0;
      v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v27 = v24 == v26;
        if (v24 == v26)
          v24 = 0;
        v25 |= v27;
        v28 = *(_QWORD *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(_QWORD *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    v13 = (_QWORD *)(*(_QWORD *)(v4 + 48) + 16 * v12);
    *v13 = v20;
    v13[1] = v21;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v0;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v11 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v11 >= v29)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v11);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D25F38A0()
{
  uint64_t *v0;
  uint64_t *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  int64_t v9;
  uint64_t v10;
  uint64_t result;
  int64_t v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  id v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  char v23;
  unint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t *v27;

  v1 = v0;
  v2 = *v0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963910);
  v3 = sub_1D26CE07C();
  v4 = v3;
  if (!*(_QWORD *)(v2 + 16))
  {
    result = swift_release();
LABEL_35:
    *v1 = v4;
    return result;
  }
  v27 = v0;
  v5 = 1 << *(_BYTE *)(v2 + 32);
  v6 = v2 + 56;
  if (v5 < 64)
    v7 = ~(-1 << v5);
  else
    v7 = -1;
  v8 = v7 & *(_QWORD *)(v2 + 56);
  v9 = (unint64_t)(v5 + 63) >> 6;
  v10 = v3 + 56;
  result = swift_retain();
  v12 = 0;
  while (1)
  {
    if (v8)
    {
      v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      v12 = v16 + 1;
      if (v16 + 1 >= v9)
        goto LABEL_33;
      v17 = *(_QWORD *)(v6 + 8 * v12);
      if (!v17)
      {
        v12 = v16 + 2;
        if (v16 + 2 >= v9)
          goto LABEL_33;
        v17 = *(_QWORD *)(v6 + 8 * v12);
        if (!v17)
          break;
      }
    }
LABEL_23:
    v8 = (v17 - 1) & v17;
    v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    v19 = *(id *)(*(_QWORD *)(v2 + 48) + 8 * v15);
    result = sub_1D26CDEC0();
    v20 = -1 << *(_BYTE *)(v4 + 32);
    v21 = result & ~v20;
    v22 = v21 >> 6;
    if (((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      v13 = __clz(__rbit64((-1 << v21) & ~*(_QWORD *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v23 = 0;
      v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v25 = v22 == v24;
        if (v22 == v24)
          v22 = 0;
        v23 |= v25;
        v26 = *(_QWORD *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(_QWORD *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(_QWORD *)(*(_QWORD *)(v4 + 48) + 8 * v13) = v19;
    ++*(_QWORD *)(v4 + 16);
  }
  v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    result = swift_release_n();
    v1 = v27;
    goto LABEL_35;
  }
  v17 = *(_QWORD *)(v6 + 8 * v18);
  if (v17)
  {
    v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    v12 = v18 + 1;
    if (__OFADD__(v18, 1))
      break;
    if (v12 >= v9)
      goto LABEL_33;
    v17 = *(_QWORD *)(v6 + 8 * v12);
    ++v18;
    if (v17)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D25F3B18(uint64_t a1, uint64_t (*a2)(uint64_t), uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t (*v39)(uint64_t);
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = a2(0);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - v10;
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1D26CE07C();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1D25369B0(v40, v39, v41);
    result = sub_1D26CD8CC();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_1D25F3E34(uint64_t a1, uint64_t *a2, uint64_t *a3, unint64_t *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t result;
  int64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  int64_t v25;
  unint64_t v26;
  int64_t v27;
  uint64_t v28;
  uint64_t v29;
  unint64_t v30;
  unint64_t v31;
  char v32;
  unint64_t v33;
  BOOL v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  int64_t v38;
  uint64_t *v39;
  unint64_t *v40;
  uint64_t v41;

  v40 = a4;
  v41 = a5;
  v7 = v5;
  v39 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v36 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = *v5;
  __swift_instantiateConcreteTypeFromMangledName(a3);
  v13 = sub_1D26CE07C();
  v14 = v13;
  if (!*(_QWORD *)(v12 + 16))
  {
    result = swift_release();
LABEL_35:
    *v7 = v14;
    return result;
  }
  v15 = 1 << *(_BYTE *)(v12 + 32);
  v16 = *(_QWORD *)(v12 + 56);
  v36 = v5;
  v37 = v12 + 56;
  if (v15 < 64)
    v17 = ~(-1 << v15);
  else
    v17 = -1;
  v18 = v17 & v16;
  v38 = (unint64_t)(v15 + 63) >> 6;
  v19 = v13 + 56;
  result = swift_retain();
  v21 = 0;
  while (1)
  {
    if (v18)
    {
      v23 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      v24 = v23 | (v21 << 6);
      goto LABEL_24;
    }
    v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v25 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v25);
    ++v21;
    if (!v26)
    {
      v21 = v25 + 1;
      if (v25 + 1 >= v38)
        goto LABEL_33;
      v26 = *(_QWORD *)(v37 + 8 * v21);
      if (!v26)
      {
        v21 = v25 + 2;
        if (v25 + 2 >= v38)
          goto LABEL_33;
        v26 = *(_QWORD *)(v37 + 8 * v21);
        if (!v26)
          break;
      }
    }
LABEL_23:
    v18 = (v26 - 1) & v26;
    v24 = __clz(__rbit64(v26)) + (v21 << 6);
LABEL_24:
    v28 = *(_QWORD *)(v9 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v9 + 16))(v11, *(_QWORD *)(v12 + 48) + v28 * v24, v8);
    sub_1D2536488(v40, v39, v41);
    result = sub_1D26CD8CC();
    v29 = -1 << *(_BYTE *)(v14 + 32);
    v30 = result & ~v29;
    v31 = v30 >> 6;
    if (((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6))) != 0)
    {
      v22 = __clz(__rbit64((-1 << v30) & ~*(_QWORD *)(v19 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      v32 = 0;
      v33 = (unint64_t)(63 - v29) >> 6;
      do
      {
        if (++v31 == v33 && (v32 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        v34 = v31 == v33;
        if (v31 == v33)
          v31 = 0;
        v32 |= v34;
        v35 = *(_QWORD *)(v19 + 8 * v31);
      }
      while (v35 == -1);
      v22 = __clz(__rbit64(~v35)) + (v31 << 6);
    }
    *(_QWORD *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v9 + 32))(*(_QWORD *)(v14 + 48) + v22 * v28, v11, v8);
    ++*(_QWORD *)(v14 + 16);
  }
  v27 = v25 + 3;
  if (v27 >= v38)
  {
LABEL_33:
    result = swift_release_n();
    v7 = v36;
    goto LABEL_35;
  }
  v26 = *(_QWORD *)(v37 + 8 * v27);
  if (v26)
  {
    v21 = v27;
    goto LABEL_23;
  }
  while (1)
  {
    v21 = v27 + 1;
    if (__OFADD__(v27, 1))
      break;
    if (v21 >= v38)
      goto LABEL_33;
    v26 = *(_QWORD *)(v37 + 8 * v21);
    ++v27;
    if (v26)
      goto LABEL_23;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1D25F4154(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  int64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int64_t v11;
  uint64_t v12;
  unint64_t v13;
  int64_t v14;
  void *v15;
  id v16;
  uint64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  int64_t v24;
  unint64_t v25;

  sub_1D26CE49C();
  if ((a2 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D26CE004();
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
    sub_1D25F5548();
    sub_1D26CDC20();
    a2 = v21;
    v3 = v22;
    v4 = v23;
    v5 = v24;
    v6 = v25;
  }
  else
  {
    v7 = -1 << *(_BYTE *)(a2 + 32);
    v3 = a2 + 56;
    v4 = ~v7;
    v8 = -v7;
    if (v8 < 64)
      v9 = ~(-1 << v8);
    else
      v9 = -1;
    v6 = v9 & *(_QWORD *)(a2 + 56);
    swift_bridgeObjectRetain();
    v5 = 0;
  }
  v10 = 0;
  v11 = (unint64_t)(v4 + 64) >> 6;
  while (a2 < 0)
  {
    if (!sub_1D26CE034())
      goto LABEL_26;
    sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
    swift_dynamicCast();
    v15 = v20;
    if (!v20)
      goto LABEL_26;
    v14 = v5;
    v12 = v6;
LABEL_10:
    v17 = sub_1D26CDEC0();

    v10 ^= v17;
    v5 = v14;
    v6 = v12;
  }
  if (v6)
  {
    v12 = (v6 - 1) & v6;
    v13 = __clz(__rbit64(v6)) | (v5 << 6);
    v14 = v5;
LABEL_9:
    v15 = *(void **)(*(_QWORD *)(a2 + 48) + 8 * v13);
    v20 = v15;
    v16 = v15;
    if (!v15)
      goto LABEL_26;
    goto LABEL_10;
  }
  v14 = v5 + 1;
  if (!__OFADD__(v5, 1))
  {
    if (v14 >= v11)
      goto LABEL_26;
    v18 = *(_QWORD *)(v3 + 8 * v14);
    if (!v18)
    {
      v14 = v5 + 2;
      if (v5 + 2 >= v11)
        goto LABEL_26;
      v18 = *(_QWORD *)(v3 + 8 * v14);
      if (!v18)
      {
        v19 = v5 + 3;
        while (v11 != v19)
        {
          v18 = *(_QWORD *)(v3 + 8 * v19++);
          if (v18)
          {
            v14 = v19 - 1;
            goto LABEL_22;
          }
        }
LABEL_26:
        sub_1D2592A28();
        sub_1D26CE46C();
        return;
      }
    }
LABEL_22:
    v12 = (v18 - 1) & v18;
    v13 = __clz(__rbit64(v18)) + (v14 << 6);
    goto LABEL_9;
  }
  __break(1u);
}

uint64_t sub_1D25F43C4(__int128 *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  __int128 v9;
  __int128 v10;
  __int128 v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  int64_t v20;
  unint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v25;
  int64_t v26;
  _QWORD v27[2];
  __int128 v28;
  __int128 v29;
  __int128 v30;
  __int128 v31;
  uint64_t v32;

  v4 = sub_1D26CD20C();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *((_QWORD *)a1 + 8);
  v9 = a1[1];
  v28 = *a1;
  v29 = v9;
  v10 = a1[2];
  v11 = a1[3];
  v27[0] = a1;
  v30 = v10;
  v31 = v11;
  v32 = v8;
  v27[1] = sub_1D26CE49C();
  v12 = a2 + 56;
  v13 = 1 << *(_BYTE *)(a2 + 32);
  v14 = -1;
  if (v13 < 64)
    v14 = ~(-1 << v13);
  v15 = v14 & *(_QWORD *)(a2 + 56);
  v16 = (unint64_t)(v13 + 63) >> 6;
  v17 = a2;
  result = swift_bridgeObjectRetain();
  v19 = 0;
  v20 = 0;
  while (1)
  {
    if (v15)
    {
      v21 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v22 = v21 | (v20 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v20++, 1))
      goto LABEL_19;
    if (v20 >= v16)
    {
LABEL_17:
      swift_release();
      return sub_1D26CE46C();
    }
    v25 = *(_QWORD *)(v12 + 8 * v20);
    if (!v25)
      break;
LABEL_16:
    v15 = (v25 - 1) & v25;
    v22 = __clz(__rbit64(v25)) + (v20 << 6);
LABEL_5:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(_QWORD *)(v17 + 48) + *(_QWORD *)(v5 + 72) * v22, v4);
    sub_1D25369B0(&qword_1ED96D4F8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], MEMORY[0x1E0CEFD00]);
    v23 = sub_1D26CD8CC();
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    v19 ^= v23;
  }
  v26 = v20 + 1;
  if (v20 + 1 >= v16)
    goto LABEL_17;
  v25 = *(_QWORD *)(v12 + 8 * v26);
  if (v25)
  {
    ++v20;
    goto LABEL_16;
  }
  while (1)
  {
    v20 = v26 + 1;
    if (__OFADD__(v26, 1))
      break;
    if (v20 >= v16)
      goto LABEL_17;
    v25 = *(_QWORD *)(v12 + 8 * v20);
    ++v26;
    if (v25)
      goto LABEL_16;
  }
  __break(1u);
LABEL_19:
  __break(1u);
  return result;
}

void _s9ChronoKit20EnvironmentModifiersV2eeoiySbAC_ACtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  uint64_t v3;
  uint64_t v4;
  int v5;
  int v6;
  int v7;
  int v8;

  if (*a1 == *a2 && *((_QWORD *)a1 + 1) == *((_QWORD *)a2 + 1))
  {
    v3 = *((_QWORD *)a1 + 4);
    v4 = *((_QWORD *)a2 + 4);
    v5 = a2[25];
    v6 = a2[24];
    v7 = a1[25];
    v8 = a1[24];
    if ((sub_1D25EE6D0(*((_QWORD *)a1 + 2), *((_QWORD *)a2 + 2)) & 1) != 0
      && ((v6 ^ v8) & 1) == 0
      && ((v5 ^ v7) & 1) == 0)
    {
      sub_1D25EEA40(v3, v4);
    }
  }
}

uint64_t sub_1D25F4650(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  void (*v22)(char *, uint64_t);
  uint64_t result;
  uint64_t v24;
  BOOL v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  void (*v31)(char *, uint64_t, uint64_t);
  uint64_t v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v27 - v7;
  v9 = *(_QWORD *)(a1 + 16);
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED9638F8);
    v10 = sub_1D26CE094();
    v11 = 0;
    v12 = *(unsigned __int8 *)(v3 + 80);
    v28 = v9;
    v29 = a1 + ((v12 + 32) & ~v12);
    v13 = *(_QWORD *)(v3 + 72);
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    v32 = v10 + 56;
    while (1)
    {
      v30 = v11;
      v31(v8, v29 + v13 * v11, v2);
      sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
      v14 = sub_1D26CD8CC();
      v15 = ~(-1 << *(_BYTE *)(v10 + 32));
      v16 = v14 & v15;
      v17 = (v14 & (unint64_t)v15) >> 6;
      v18 = *(_QWORD *)(v32 + 8 * v17);
      v19 = 1 << (v14 & v15);
      if ((v19 & v18) != 0)
      {
        do
        {
          v31(v6, *(_QWORD *)(v10 + 48) + v16 * v13, v2);
          sub_1D2536488(&qword_1ED963320, &qword_1ED96FE70, MEMORY[0x1E0D0F980]);
          v20 = sub_1D26CD908();
          v21 = v3;
          v22 = *(void (**)(char *, uint64_t))(v3 + 8);
          v22(v6, v2);
          if ((v20 & 1) != 0)
          {
            v22(v8, v2);
            v3 = v21;
            v9 = v28;
            goto LABEL_4;
          }
          v16 = (v16 + 1) & v15;
          v17 = v16 >> 6;
          v18 = *(_QWORD *)(v32 + 8 * (v16 >> 6));
          v19 = 1 << v16;
          v3 = v21;
        }
        while ((v18 & (1 << v16)) != 0);
        v9 = v28;
      }
      *(_QWORD *)(v32 + 8 * v17) = v19 | v18;
      result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(_QWORD *)(v10 + 48) + v16 * v13, v8, v2);
      v24 = *(_QWORD *)(v10 + 16);
      v25 = __OFADD__(v24, 1);
      v26 = v24 + 1;
      if (v25)
        break;
      *(_QWORD *)(v10 + 16) = v26;
LABEL_4:
      v11 = v30 + 1;
      if (v30 + 1 == v9)
        return v10;
    }
    __break(1u);
  }
  else
  {
    return MEMORY[0x1E0DEE9E8];
  }
  return result;
}

uint64_t sub_1D25F48BC(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  _QWORD *v16;
  BOOL v17;
  uint64_t v18;
  _QWORD *v19;
  _QWORD *v21;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t v25;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962120);
    v3 = sub_1D26CE094();
    v4 = 0;
    v5 = v3 + 56;
    v25 = a1 + 32;
    while (1)
    {
      v6 = (uint64_t *)(v25 + 16 * v4);
      v8 = *v6;
      v7 = v6[1];
      sub_1D26CE460();
      swift_bridgeObjectRetain();
      sub_1D26CD9D4();
      result = sub_1D26CE49C();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = result & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = *(_QWORD *)(v3 + 48);
        v16 = (_QWORD *)(v15 + 16 * v11);
        v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (result = sub_1D26CE3D0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        v18 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v18;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v19 = (_QWORD *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            result = sub_1D26CE3D0();
            if ((result & 1) == 0)
              continue;
          }
          goto LABEL_3;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      v21 = (_QWORD *)(*(_QWORD *)(v3 + 48) + 16 * v11);
      *v21 = v8;
      v21[1] = v7;
      v22 = *(_QWORD *)(v3 + 16);
      v23 = __OFADD__(v22, 1);
      v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1D25F4A5C(uint64_t a1)
{
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  void (*v15)(char *, uint64_t, uint64_t);
  void (*v16)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;

  v2 = sub_1D26CB880();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0CAFFF8];
  v4 = *(_QWORD *)(v2 - 8);
  v5 = MEMORY[0x1E0C80A78](v2);
  v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v18 - v8;
  v10 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = *(_QWORD *)(a1 + 16);
  sub_1D25369B0(&qword_1ED961AF0, v3, MEMORY[0x1E0CB0018]);
  v19 = sub_1D26CDC08();
  if (v13)
  {
    v14 = a1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    v18 = *(_QWORD *)(v4 + 72);
    v15 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    while (1)
    {
      v15(v12, v14, v2);
      v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
      v16(v12, 0, 1, v2);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v12, 1, v2) == 1)
        break;
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v7, v12, v2);
      sub_1D25F092C((uint64_t)v9, v7);
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v2);
      v14 += v18;
      if (!--v13)
        goto LABEL_7;
    }
  }
  else
  {
    v16 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56);
LABEL_7:
    v16(v12, 1, 1, v2);
  }
  return v19;
}

uint64_t sub_1D25F4C2C(uint64_t a1)
{
  return sub_1D25F4DCC(a1, &qword_1ED9633A0, (unint64_t *)&unk_1ED963370, MEMORY[0x1E0D0FB50], (void (*)(char *, char *))sub_1D25F0D34);
}

uint64_t sub_1D25F4C50(unint64_t a1)
{
  unint64_t v2;
  uint64_t result;
  uint64_t v4;
  uint64_t i;
  void *v6;
  void **v7;
  void *v8;
  id v9;
  uint64_t v10;

  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D26CE1F0();
    swift_bridgeObjectRelease();
  }
  sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
  sub_1D25F5548();
  result = sub_1D26CDC08();
  v10 = result;
  if (v2)
  {
    swift_bridgeObjectRetain();
    v4 = sub_1D26CE1F0();
    result = swift_bridgeObjectRelease();
    if (!v4)
      return v10;
  }
  else
  {
    v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v4)
      return v10;
  }
  if (v4 >= 1)
  {
    if ((a1 & 0xC000000000000001) != 0)
    {
      for (i = 0; i != v4; ++i)
      {
        v6 = (void *)MEMORY[0x1D8239890](i, a1);
        sub_1D25F0F94(&v9, v6);

      }
    }
    else
    {
      v7 = (void **)(a1 + 32);
      do
      {
        v8 = *v7++;
        sub_1D25F0F94(&v9, v8);

        --v4;
      }
      while (v4);
    }
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25F4DA8(uint64_t a1)
{
  return sub_1D25F4DCC(a1, &qword_1ED96FE70, &qword_1ED963318, MEMORY[0x1E0D0F978], (void (*)(char *, char *))sub_1D25F1494);
}

uint64_t sub_1D25F4DCC(uint64_t a1, uint64_t *a2, unint64_t *a3, uint64_t a4, void (*a5)(char *, char *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;

  v10 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v22 - v15;
  v17 = *(_QWORD *)(a1 + 16);
  sub_1D2536488(a3, a2, a4);
  result = sub_1D26CDC08();
  v23 = result;
  if (v17)
  {
    v19 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
    v20 = *(_QWORD *)(v11 + 72);
    v21 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 16);
    do
    {
      v21(v14, v19, v10);
      a5(v16, v14);
      (*(void (**)(char *, uint64_t))(v11 + 8))(v16, v10);
      v19 += v20;
      --v17;
    }
    while (v17);
    return v23;
  }
  return result;
}

uint64_t sub_1D25F4EF8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char v27;
  uint64_t v28;
  BOOL v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1EFC82160);
    v3 = sub_1D26CE094();
    v4 = 0;
    v5 = v3 + 56;
    v31 = v1;
    v32 = a1 + 32;
    while (1)
    {
      v6 = *(void **)(v32 + 8 * v4);
      sub_1D26CD938();
      sub_1D26CE460();
      v7 = v6;
      sub_1D26CD9D4();
      v8 = sub_1D26CE49C();
      result = swift_bridgeObjectRelease();
      v10 = -1 << *(_BYTE *)(v3 + 32);
      v11 = v8 & ~v10;
      v12 = v11 >> 6;
      v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
      v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        v15 = sub_1D26CD938();
        v17 = v16;
        if (v15 == sub_1D26CD938() && v17 == v18)
        {
LABEL_3:
          swift_bridgeObjectRelease_n();
LABEL_4:

          goto LABEL_5;
        }
        v20 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        result = swift_bridgeObjectRelease();
        if ((v20 & 1) != 0)
          goto LABEL_4;
        v21 = ~v10;
        while (1)
        {
          v11 = (v11 + 1) & v21;
          v12 = v11 >> 6;
          v13 = *(_QWORD *)(v5 + 8 * (v11 >> 6));
          v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0)
            break;
          v22 = sub_1D26CD938();
          v24 = v23;
          if (v22 == sub_1D26CD938() && v24 == v25)
            goto LABEL_3;
          v27 = sub_1D26CE3D0();
          swift_bridgeObjectRelease();
          result = swift_bridgeObjectRelease();
          if ((v27 & 1) != 0)
            goto LABEL_4;
        }
      }
      *(_QWORD *)(v5 + 8 * v12) = v14 | v13;
      *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v11) = v7;
      v28 = *(_QWORD *)(v3 + 16);
      v29 = __OFADD__(v28, 1);
      v30 = v28 + 1;
      if (v29)
      {
        __break(1u);
        return result;
      }
      *(_QWORD *)(v3 + 16) = v30;
LABEL_5:
      if (++v4 == v31)
        return v3;
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

void sub_1D25F5124(unint64_t a1)
{
  unint64_t v1;
  unint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  BOOL v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  char v18;
  uint64_t v19;
  id v20;
  char v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  id v32;
  char v33;
  uint64_t v34;
  id v35;
  char v36;
  uint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  uint64_t v41;
  uint64_t v42;

  v1 = a1;
  v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v5)
    {
LABEL_3:
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963910);
      v3 = sub_1D26CE094();
      if (!v2)
        goto LABEL_4;
LABEL_8:
      swift_bridgeObjectRetain();
      v4 = sub_1D26CE1F0();
      swift_bridgeObjectRelease();
      if (!v4)
        return;
      goto LABEL_9;
    }
  }
  else if (*(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  v3 = MEMORY[0x1E0DEE9E8];
  if (v2)
    goto LABEL_8;
LABEL_4:
  v4 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  if (!v4)
    return;
LABEL_9:
  v6 = v3 + 56;
  v42 = v4;
  if ((v1 & 0xC000000000000001) != 0)
  {
    v7 = 0;
    v40 = v1;
    while (1)
    {
      while (1)
      {
        v8 = MEMORY[0x1D8239890](v7, v1);
        v9 = __OFADD__(v7++, 1);
        if (v9)
        {
          __break(1u);
          goto LABEL_36;
        }
        v10 = v8;
        v11 = sub_1D26CDEC0();
        v12 = -1 << *(_BYTE *)(v3 + 32);
        v13 = v11 & ~v12;
        v14 = v13 >> 6;
        v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
        v16 = 1 << v13;
        if (((1 << v13) & v15) != 0)
          break;
LABEL_20:
        *(_QWORD *)(v6 + 8 * v14) = v16 | v15;
        *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v13) = v10;
        v22 = *(_QWORD *)(v3 + 16);
        v9 = __OFADD__(v22, 1);
        v23 = v22 + 1;
        if (v9)
          goto LABEL_37;
        *(_QWORD *)(v3 + 16) = v23;
        if (v7 == v4)
          return;
      }
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
      v17 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
      v18 = sub_1D26CDECC();

      if ((v18 & 1) == 0)
      {
        v19 = ~v12;
        while (1)
        {
          v13 = (v13 + 1) & v19;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v6 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
            break;
          v20 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v13);
          v21 = sub_1D26CDECC();

          if ((v21 & 1) != 0)
            goto LABEL_11;
        }
        v1 = v40;
        v4 = v42;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      v1 = v40;
      v4 = v42;
      if (v7 == v42)
        return;
    }
  }
  v24 = 0;
  v39 = v1 + 32;
  v41 = *(_QWORD *)((v1 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v24 != v41)
  {
    v25 = *(id *)(v39 + 8 * v24);
    v26 = sub_1D26CDEC0();
    v27 = -1 << *(_BYTE *)(v3 + 32);
    v28 = v26 & ~v27;
    v29 = v28 >> 6;
    v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
    v31 = 1 << v28;
    if (((1 << v28) & v30) != 0)
    {
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
      v32 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
      v33 = sub_1D26CDECC();

      if ((v33 & 1) != 0)
      {
LABEL_24:

        goto LABEL_25;
      }
      v34 = ~v27;
      while (1)
      {
        v28 = (v28 + 1) & v34;
        v29 = v28 >> 6;
        v30 = *(_QWORD *)(v6 + 8 * (v28 >> 6));
        v31 = 1 << v28;
        if ((v30 & (1 << v28)) == 0)
          break;
        v35 = *(id *)(*(_QWORD *)(v3 + 48) + 8 * v28);
        v36 = sub_1D26CDECC();

        if ((v36 & 1) != 0)
          goto LABEL_24;
      }
    }
    *(_QWORD *)(v6 + 8 * v29) = v31 | v30;
    *(_QWORD *)(*(_QWORD *)(v3 + 48) + 8 * v28) = v25;
    v37 = *(_QWORD *)(v3 + 16);
    v9 = __OFADD__(v37, 1);
    v38 = v37 + 1;
    if (v9)
      goto LABEL_38;
    *(_QWORD *)(v3 + 16) = v38;
LABEL_25:
    if (++v24 == v42)
      return;
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

unint64_t sub_1D25F5480()
{
  unint64_t result;

  result = qword_1ED96FEB0;
  if (!qword_1ED96FEB0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D66C0, &type metadata for EnvironmentModifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED96FEB0);
  }
  return result;
}

uint64_t sub_1D25F54C4(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;

  result = *a1;
  if (!result)
  {
    v9 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FEC0);
    v10 = sub_1D25369B0(a2, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFCE8], a3);
    result = MEMORY[0x1D823A4E4](a4, v9, &v10);
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1D25F5548()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96D530;
  if (!qword_1ED96D530)
  {
    v1 = sub_1D2539514(255, (unint64_t *)&qword_1ED96FEC8);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEFCF8], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96D530);
  }
  return result;
}

unint64_t sub_1D25F55A4()
{
  unint64_t result;

  result = qword_1EFC82FF0;
  if (!qword_1EFC82FF0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for EnvironmentModifiers, &type metadata for EnvironmentModifiers);
    atomic_store(result, (unint64_t *)&qword_1EFC82FF0);
  }
  return result;
}

uint64_t destroy for EnvironmentModifiers()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EnvironmentModifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v3;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v3 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v3;
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EnvironmentModifiers(uint64_t a1, uint64_t a2)
{
  *(_BYTE *)a1 = *(_BYTE *)a2;
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EnvironmentModifiers(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  *(_BYTE *)a1 = *(_BYTE *)a2;
  v4 = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = v4;
  swift_bridgeObjectRelease();
  *(_BYTE *)(a1 + 24) = *(_BYTE *)(a2 + 24);
  *(_BYTE *)(a1 + 25) = *(_BYTE *)(a2 + 25);
  *(_QWORD *)(a1 + 32) = *(_QWORD *)(a2 + 32);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EnvironmentModifiers(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 40))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentModifiers(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 40) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 16) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 40) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentModifiers()
{
  return &type metadata for EnvironmentModifiers;
}

uint64_t getEnumTagSinglePayload for EnvironmentModifiers.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFB)
    goto LABEL_17;
  if (a2 + 5 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 5) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 5;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 5;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 5;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 6;
  v8 = v6 - 6;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentModifiers.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 5 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 5) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFB)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFA)
    return ((uint64_t (*)(void))((char *)&loc_1D25F58B0 + 4 * byte_1D26D64A3[v4]))();
  *a1 = a2 + 5;
  return ((uint64_t (*)(void))((char *)sub_1D25F58E4 + 4 * byte_1D26D649E[v4]))();
}

uint64_t sub_1D25F58E4(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25F58EC(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D25F58F4);
  return result;
}

uint64_t sub_1D25F5900(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D25F5908);
  *(_BYTE *)result = a2 + 5;
  return result;
}

uint64_t sub_1D25F590C(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D25F5914(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentModifiers.CodingKeys()
{
  return &type metadata for EnvironmentModifiers.CodingKeys;
}

unint64_t sub_1D25F5934()
{
  unint64_t result;

  result = qword_1EFC82FF8;
  if (!qword_1EFC82FF8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D6698, &type metadata for EnvironmentModifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC82FF8);
  }
  return result;
}

unint64_t sub_1D25F597C()
{
  unint64_t result;

  result = qword_1ED96FD60[0];
  if (!qword_1ED96FD60[0])
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D65D0, &type metadata for EnvironmentModifiers.CodingKeys);
    atomic_store(result, qword_1ED96FD60);
  }
  return result;
}

unint64_t sub_1D25F59C4()
{
  unint64_t result;

  result = qword_1ED96FEB8;
  if (!qword_1ED96FEB8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D65F8, &type metadata for EnvironmentModifiers.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1ED96FEB8);
  }
  return result;
}

uint64_t sub_1D25F5A08()
{
  unint64_t v0;

  v0 = sub_1D26CE250();
  swift_bridgeObjectRelease();
  if (v0 >= 6)
    return 6;
  else
    return v0;
}

uint64_t sub_1D25F5A50(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  unint64_t v7;
  uint64_t *v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t *v17;
  uint64_t v18;
  unint64_t v19;
  char v21;
  uint64_t *v22;
  uint64_t v23;
  BOOL v24;
  uint64_t v25;
  uint64_t v27;
  uint64_t v28;

  v1 = *(_QWORD *)(a1 + 16);
  if (v1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963238);
    v3 = sub_1D26CE094();
    v4 = 0;
    v5 = v3 + 56;
    v27 = v1;
    v28 = a1 + 32;
LABEL_6:
    v8 = (uint64_t *)(v28 + 16 * v4);
    v9 = *v8;
    v10 = v8[1];
    sub_1D26CE460();
    switch(v10)
    {
      case 0uLL:
      case 1uLL:
      case 2uLL:
      case 3uLL:
      case 4uLL:
      case 5uLL:
        sub_1D26CE46C();
        break;
      default:
        sub_1D26CE46C();
        swift_bridgeObjectRetain();
        sub_1D26CD9D4();
        break;
    }
    v11 = sub_1D26CE49C();
    v12 = ~(-1 << *(_BYTE *)(v3 + 32));
    v13 = v11 & v12;
    v14 = (v11 & (unint64_t)v12) >> 6;
    v15 = *(_QWORD *)(v5 + 8 * v14);
    v16 = 1 << (v11 & v12);
    if ((v16 & v15) == 0)
      goto LABEL_32;
    while (1)
    {
      v17 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v13);
      v18 = *v17;
      v19 = v17[1];
      switch(v19)
      {
        case 0uLL:
          if (v10)
            goto LABEL_29;
          sub_1D25F5E28(*v17, 0);
          v6 = v9;
          v7 = 0;
          goto LABEL_4;
        case 1uLL:
          if (v10 != 1)
            goto LABEL_29;
          sub_1D25F5E28(*v17, 1uLL);
          v6 = v9;
          v7 = 1;
          goto LABEL_4;
        case 2uLL:
          if (v10 != 2)
            goto LABEL_29;
          sub_1D25F5E28(*v17, 2uLL);
          v6 = v9;
          v7 = 2;
          goto LABEL_4;
        case 3uLL:
          if (v10 != 3)
            goto LABEL_29;
          sub_1D25F5E28(*v17, 3uLL);
          v6 = v9;
          v7 = 3;
          goto LABEL_4;
        case 4uLL:
          if (v10 != 4)
            goto LABEL_29;
          sub_1D25F5E28(*v17, 4uLL);
          v6 = v9;
          v7 = 4;
          goto LABEL_4;
        case 5uLL:
          if (v10 != 5)
            goto LABEL_29;
          sub_1D25F5E28(*v17, 5uLL);
          v6 = v9;
          v7 = 5;
          goto LABEL_4;
        default:
          if (v10 < 6)
          {
LABEL_29:
            sub_1D25F5E14(v9, v10);
            sub_1D25F5E14(v18, v19);
            sub_1D25F5E28(v18, v19);
            sub_1D25F5E28(v9, v10);
          }
          else
          {
            if (v18 == v9 && v19 == v10)
            {
              sub_1D25F5E14(v9, v10);
              sub_1D25F5E14(v9, v10);
              sub_1D25F5E28(v9, v10);
              sub_1D25F5E28(v9, v10);
LABEL_35:
              v6 = v9;
              v7 = v10;
LABEL_4:
              sub_1D25F5E28(v6, v7);
              v1 = v27;
LABEL_5:
              if (++v4 == v1)
                return v3;
              goto LABEL_6;
            }
            v21 = sub_1D26CE3D0();
            sub_1D25F5E14(v9, v10);
            sub_1D25F5E14(v18, v19);
            sub_1D25F5E28(v18, v19);
            sub_1D25F5E28(v9, v10);
            if ((v21 & 1) != 0)
              goto LABEL_35;
          }
          v13 = (v13 + 1) & v12;
          v14 = v13 >> 6;
          v15 = *(_QWORD *)(v5 + 8 * (v13 >> 6));
          v16 = 1 << v13;
          if ((v15 & (1 << v13)) == 0)
          {
            v1 = v27;
LABEL_32:
            *(_QWORD *)(v5 + 8 * v14) = v16 | v15;
            v22 = (uint64_t *)(*(_QWORD *)(v3 + 48) + 16 * v13);
            *v22 = v9;
            v22[1] = v10;
            v23 = *(_QWORD *)(v3 + 16);
            v24 = __OFADD__(v23, 1);
            v25 = v23 + 1;
            if (v24)
            {
              __break(1u);
              JUMPOUT(0x1D25F5DE4);
            }
            *(_QWORD *)(v3 + 16) = v25;
            goto LABEL_5;
          }
          break;
      }
    }
  }
  return MEMORY[0x1E0DEE9E8];
}

uint64_t sub_1D25F5E14(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 6)
    return swift_bridgeObjectRetain();
  return result;
}

uint64_t sub_1D25F5E28(uint64_t a1, unint64_t a2)
{
  uint64_t result;

  if (a2 >= 6)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D25F5E3C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 16) = v3;
  *(_QWORD *)(v4 + 24) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25F5E98()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D25F5EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 16) = a1;
  *(_QWORD *)(v2 + 24) = a2;
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25F5F30(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  v2 = a1[1];
  v4 = *a2;
  swift_beginAccess();
  *(_QWORD *)(v4 + 32) = v3;
  *(_QWORD *)(v4 + 40) = v2;
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25F5F8C()
{
  uint64_t v0;
  uint64_t v1;

  swift_beginAccess();
  v1 = *(_QWORD *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D25F5FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  swift_beginAccess();
  *(_QWORD *)(v2 + 32) = a1;
  *(_QWORD *)(v2 + 40) = a2;
  return swift_bridgeObjectRelease();
}

_QWORD *ActivityCacheURLProvider.__allocating_init(subdirectory:fileExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v8;

  v8 = (_QWORD *)swift_allocObject();
  v8[3] = 0;
  v8[2] = 0;
  swift_beginAccess();
  v8[2] = a1;
  v8[3] = a2;
  swift_bridgeObjectRelease();
  v8[4] = a3;
  v8[5] = a4;
  return v8;
}

_QWORD *ActivityCacheURLProvider.init(subdirectory:fileExtension:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v4;

  v4[3] = 0;
  v4[2] = 0;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  swift_bridgeObjectRelease();
  v4[4] = a3;
  v4[5] = a4;
  return v4;
}

uint64_t sub_1D25F6128(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962150);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D26CB880() - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D26D1280;
  sub_1D25F61A8(a1, v4 + v3);
  return v4;
}

uint64_t sub_1D25F61A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963178);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29 = type metadata accessor for ActivityVariantKey(0);
  v8 = *(_QWORD *)(v29 - 8);
  MEMORY[0x1E0C80A78](v29);
  v27 = (uint64_t)&v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED963058);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v27 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for ActivityKey(0);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v13);
  v30 = (uint64_t)&v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(a2, a1, v16);
  swift_beginAccess();
  v28 = v2;
  if (*(_QWORD *)(v2 + 24))
  {
    swift_bridgeObjectRetain();
    sub_1D26CB7E4();
    swift_bridgeObjectRelease();
  }
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9630E0);
  sub_1D2537078(a1 + *(int *)(v17 + 68), (uint64_t)v12, qword_1ED963058);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
    return sub_1D253703C((uint64_t)v12, qword_1ED963058);
  v19 = (uint64_t)v12;
  v20 = v30;
  sub_1D2539ADC(v19, v30, type metadata accessor for ActivityKey);
  sub_1D2537078(a1 + *(int *)(v17 + 72), (uint64_t)v7, &qword_1ED963178);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v7, 1, v29) == 1)
  {
    sub_1D25340E4(v20, type metadata accessor for ActivityKey);
    return sub_1D253703C((uint64_t)v7, &qword_1ED963178);
  }
  else
  {
    v21 = v27;
    sub_1D2539ADC((uint64_t)v7, v27, type metadata accessor for ActivityVariantKey);
    v22 = (uint64_t *)(v20 + *(int *)(v13 + 24));
    v23 = v22[1];
    v31 = *v22;
    v32 = v23;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    v33 = sub_1D26CD650();
    v34 = v24;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v26 = v33;
    v25 = v34;
    sub_1D26CD3EC();
    v33 = v26;
    v34 = v25;
    swift_bridgeObjectRetain();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    sub_1D26CB7E4();
    swift_bridgeObjectRelease();
    swift_beginAccess();
    swift_bridgeObjectRetain();
    sub_1D26CB7FC();
    swift_bridgeObjectRelease();
    sub_1D25340E4(v21, type metadata accessor for ActivityVariantKey);
    return sub_1D25340E4(v20, type metadata accessor for ActivityKey);
  }
}

uint64_t sub_1D25F654C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  void *v16;
  uint64_t v17;
  id v18;
  void *v19;
  id v20;
  id v21;
  _QWORD v22[3];
  id v23;
  uint64_t v24;
  id v25;
  uint64_t v26;
  uint64_t v27;

  v27 = *MEMORY[0x1E0C80C00];
  v3 = sub_1D26CB880();
  v4 = *(_QWORD *)(v3 - 8);
  v5 = MEMORY[0x1E0C80A78](v3);
  v7 = (char *)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)v22 - v8;
  result = MEMORY[0x1E0DEE9D8];
  v26 = MEMORY[0x1E0DEE9D8];
  v11 = *(_QWORD *)(a1 + 16);
  if (v11)
  {
    v12 = *(_QWORD *)(type metadata accessor for WidgetCacheKey() - 8);
    v13 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    v23 = (id)objc_opt_self();
    v24 = v1;
    v22[1] = a1;
    swift_bridgeObjectRetain();
    v22[2] = v1 + 16;
    swift_beginAccess();
    v14 = *(_QWORD *)(v12 + 72);
    do
    {
      v18 = objc_msgSend(v23, sel_defaultManager);
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, v13, v3);
      if (*(_QWORD *)(v24 + 24))
      {
        swift_bridgeObjectRetain();
        sub_1D26CB7E4();
        swift_bridgeObjectRelease();
      }
      (*(void (**)(char *, char *, uint64_t))(v4 + 32))(v9, v7, v3);
      v19 = (void *)sub_1D26CB7D8();
      (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
      v25 = 0;
      v20 = objc_msgSend(v18, sel_contentsOfDirectoryAtURL_includingPropertiesForKeys_options_error_, v19, 0, 0, &v25);

      v21 = v25;
      if (v20)
      {
        v17 = sub_1D26CDAF4();

      }
      else
      {
        v15 = v21;
        v16 = (void *)sub_1D26CB76C();

        swift_willThrow();
        v17 = MEMORY[0x1E0DEE9D8];
      }
      sub_1D25F6DA4(v17, (uint64_t (*)(void))sub_1D2561A20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
      v13 += v14;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    return v26;
  }
  return result;
}

uint64_t ActivityCacheURLProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ActivityCacheURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D25F6820(uint64_t a1)
{
  return sub_1D25F654C(a1);
}

uint64_t sub_1D25F6840(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962150);
  v2 = *(unsigned __int8 *)(*(_QWORD *)(sub_1D26CB880() - 8) + 80);
  v3 = (v2 + 32) & ~v2;
  v4 = swift_allocObject();
  *(_OWORD *)(v4 + 16) = xmmword_1D26D1280;
  sub_1D25F61A8(a1, v4 + v3);
  return v4;
}

uint64_t sub_1D25F68C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D25F61A8(a1, a2);
}

uint64_t sub_1D25F68E4(uint64_t a1)
{
  return sub_1D25F6DA4(a1, (uint64_t (*)(void))sub_1D2561A20, (uint64_t (*)(_QWORD))MEMORY[0x1E0CAFFF8]);
}

uint64_t sub_1D25F68F8@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D25F6944@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for ActivityCacheURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for ActivityCacheURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.subdirectory.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.subdirectory.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.subdirectory.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.fileExtension.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.fileExtension.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.fileExtension.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.__allocating_init(subdirectory:fileExtension:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.urls(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.url(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ActivityCacheURLProvider.candidateURLs(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t sub_1D25F6A30(unint64_t a1)
{
  return sub_1D25F6BD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1D25F6F1C);
}

uint64_t sub_1D25F6A3C(uint64_t a1)
{
  uint64_t v1;
  unint64_t v2;
  _QWORD *v3;
  int64_t v4;
  int64_t v5;
  _QWORD *isUniquelyReferenced_nonNull_native;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v12;
  BOOL v13;
  uint64_t v14;
  int64_t v15;
  uint64_t result;

  v2 = *(_QWORD *)(a1 + 16);
  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  isUniquelyReferenced_nonNull_native = (_QWORD *)swift_isUniquelyReferenced_nonNull_native();
  if ((_DWORD)isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    v8 = *(_QWORD *)(a1 + 16);
    if (v8)
      goto LABEL_5;
LABEL_18:
    if (!v2)
      goto LABEL_19;
    goto LABEL_21;
  }
  if (v4 <= v5)
    v15 = v4 + v2;
  else
    v15 = v4;
  v3 = sub_1D2538F50(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  v8 = *(_QWORD *)(a1 + 16);
  if (!v8)
    goto LABEL_18;
LABEL_5:
  v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  v10 = (unint64_t)&v3[5 * v9 + 4];
  if (a1 + 32 < v10 + 40 * v8 && v10 < a1 + 32 + 40 * v8)
    goto LABEL_24;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962038);
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  v12 = v3[2];
  v13 = __OFADD__(v12, v8);
  v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    result = swift_bridgeObjectRelease();
    *(_QWORD *)v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F6BB0(unint64_t a1)
{
  return sub_1D25F6BD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1D25F7334);
}

uint64_t sub_1D25F6BBC(unint64_t a1)
{
  return sub_1D25F6BD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1D25F7548);
}

uint64_t sub_1D25F6BC8(unint64_t a1)
{
  return sub_1D25F6BD4(a1, (uint64_t (*)(uint64_t, _QWORD, unint64_t))sub_1D25F775C);
}

uint64_t sub_1D25F6BD4(unint64_t a1, uint64_t (*a2)(uint64_t, _QWORD, unint64_t))
{
  unint64_t *v2;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v16;

  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    v5 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
  }
  else
  {
    v5 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  }
  v6 = *v2;
  if (*v2 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    v8 = v7 + v5;
    if (!__OFADD__(v7, v5))
      goto LABEL_5;
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  v7 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  v8 = v7 + v5;
  if (__OFADD__(v7, v5))
    goto LABEL_23;
LABEL_5:
  v6 = *v2;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v2 = v6;
  v7 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v6 & 0x8000000000000000) == 0 && (v6 & 0x4000000000000000) == 0)
  {
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
    if (v8 <= *(_QWORD *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_15;
    v7 = 1;
  }
  if (v6 >> 62)
    goto LABEL_25;
  v11 = *(_QWORD *)((v6 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (v11 <= v8)
      v11 = v8;
    swift_bridgeObjectRetain();
    v6 = MEMORY[0x1D823989C](v7, v11, 1, v6);
    swift_bridgeObjectRelease();
    *v2 = v6;
    v10 = v6 & 0xFFFFFFFFFFFFFF8;
LABEL_15:
    result = a2(v10 + 8 * *(_QWORD *)(v10 + 16) + 32, (*(_QWORD *)(v10 + 24) >> 1) - *(_QWORD *)(v10 + 16), a1);
    if (v13 >= v5)
      break;
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain();
    v11 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
  }
  if (v13 < 1)
    goto LABEL_19;
  v14 = *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10);
  v15 = __OFADD__(v14, v13);
  v16 = v14 + v13;
  if (!v15)
  {
    *(_QWORD *)((*v2 & 0xFFFFFFFFFFFFFF8) + 0x10) = v16;
LABEL_19:
    swift_bridgeObjectRelease();
    return sub_1D26CDB0C();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25F6D90(uint64_t a1)
{
  return sub_1D25F6DA4(a1, (uint64_t (*)(void))sub_1D25625A0, (uint64_t (*)(_QWORD))type metadata accessor for ExtensionMetadata);
}

uint64_t sub_1D25F6DA4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(_QWORD))
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v22;
  BOOL v23;
  uint64_t v24;
  uint64_t result;

  v4 = *(_QWORD *)(a1 + 16);
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v6 + v4 <= *(_QWORD *)(v5 + 24) >> 1)
  {
    if (*(_QWORD *)(a1 + 16))
      goto LABEL_5;
    goto LABEL_15;
  }
  v5 = a2();
  if (!*(_QWORD *)(a1 + 16))
  {
LABEL_15:
    if (!v4)
      goto LABEL_16;
    goto LABEL_18;
  }
LABEL_5:
  v10 = *(_QWORD *)(v5 + 16);
  v11 = (*(_QWORD *)(v5 + 24) >> 1) - v10;
  v12 = a3(0);
  if (v11 < v4)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v13 = *(_QWORD *)(v12 - 8);
  v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  v15 = *(_QWORD *)(v13 + 72);
  v16 = v5 + v14 + v15 * v10;
  v17 = a1 + v14;
  v18 = v15 * v4;
  v19 = v16 + v18;
  v20 = v17 + v18;
  if (v17 < v19 && v16 < v20)
    goto LABEL_21;
  swift_arrayInitWithCopy();
  if (!v4)
  {
LABEL_16:
    result = swift_bridgeObjectRelease();
    *v3 = v5;
    return result;
  }
  v22 = *(_QWORD *)(v5 + 16);
  v23 = __OFADD__(v22, v4);
  v24 = v22 + v4;
  if (!v23)
  {
    *(_QWORD *)(v5 + 16) = v24;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F6F1C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D25F7970(&qword_1ED963878, &qword_1ED963870);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963870);
          v12 = sub_1D2591620(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F7130(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  void (*v16[4])(id *);

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D25F7970(&qword_1EFC83028, &qword_1EFC83020);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83020);
          v12 = sub_1D2591678(v16, i, a3);
          v14 = *v13;
          ((void (*)(void (**)(id *), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    type metadata accessor for WidgetReaper();
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F7334(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D25F7970(&qword_1EFC83018, &qword_1EFC83010);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83010);
          v12 = sub_1D2591620(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D2539514(0, (unint64_t *)&qword_1ED96D9A0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F7548(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D25F7970(&qword_1EFC83008, (uint64_t *)&unk_1ED963888);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963888);
          v12 = sub_1D2591620(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D2539514(0, &qword_1ED9638E0);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F775C(unint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t i;
  void (*v12)(_QWORD *);
  id *v13;
  id v14;
  uint64_t result;
  uint64_t (*v16[4])();

  v6 = a3 >> 62;
  if (a3 >> 62)
  {
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (!v7)
      return a3;
  }
  else
  {
    v7 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (!v7)
      return a3;
  }
  if (!a1)
    goto LABEL_19;
  v8 = a3 & 0xFFFFFFFFFFFFFF8;
  if (v6)
  {
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v10 <= a2)
    {
      if (v7 >= 1)
      {
        sub_1D25F7970(&qword_1EFC83000, &qword_1ED963228);
        swift_bridgeObjectRetain();
        for (i = 0; i != v7; ++i)
        {
          __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963228);
          v12 = sub_1D2591620(v16, i, a3);
          v14 = *v13;
          ((void (*)(uint64_t (**)(), _QWORD))v12)(v16, 0);
          *(_QWORD *)(a1 + 8 * i) = v14;
        }
        swift_bridgeObjectRelease();
        return a3;
      }
      goto LABEL_18;
    }
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  v9 = *(_QWORD *)((a3 & 0xFFFFFFFFFFFFFF8) + 0x10);
  if (v9 > a2)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (v8 + 32 >= a1 + 8 * v9 || v8 + 32 + 8 * v9 <= a1)
  {
    sub_1D2539514(0, &qword_1ED963230);
    swift_arrayInitWithCopy();
    return a3;
  }
LABEL_20:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D25F7970(unint64_t *a1, uint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = __swift_instantiateConcreteTypeFromMangledNameAbstract(a2);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEAF50], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D25F79B0(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1D2538510(a1, (uint64_t)v5);
  v3 = *a2 + 120;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(v5, v3);
  return swift_endAccess();
}

_QWORD *DefaultEnvironmentProvidingFactory.__allocating_init(extensionManager:keybagStateProvider:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  _QWORD *v6;
  _BYTE v8[40];
  _BYTE v9[40];

  type metadata accessor for IOSSystemEnvironmentProvider();
  swift_allocObject();
  v4 = sub_1D2632AE4();
  sub_1D2538510(a1, (uint64_t)v9);
  sub_1D2538510(a2, (uint64_t)v8);
  type metadata accessor for DefaultEnvironmentProvidingFactory();
  v5 = (_QWORD *)swift_allocObject();
  v6 = sub_1D25F81F8((uint64_t)v9, (uint64_t)v8, v4, v5);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v6;
}

_QWORD *DefaultEnvironmentProvidingFactory.__allocating_init(extensionManager:keybagStateProvider:systemProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  v10 = sub_1D25F855C(a1, a2, v9, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v10;
}

_QWORD *DefaultEnvironmentProvidingFactory.init(extensionManager:keybagStateProvider:systemProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a3 + 24);
  v8 = *(_QWORD *)(a3 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a3, v7);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_1D25F83A4(a1, a2, (uint64_t)v11, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v13;
}

uint64_t sub_1D25F7BE4(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + 112);
    v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1D25F7C78(v1, v3);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D25F7C78(uint64_t result, uint64_t a2)
{
  uint64_t v2;
  uint64_t *v3;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  unint64_t v8;
  char v9;
  char v10;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v12;
  _OWORD v13[2];
  uint64_t v14;
  uint64_t v15;

  v2 = *(_QWORD *)(result + 16);
  if (v2)
  {
    v3 = (uint64_t *)(a2 + 96);
    v4 = (_QWORD *)(result + 32);
    swift_bridgeObjectRetain();
    do
    {
      v5 = v4[3];
      v6 = v4[4];
      __swift_project_boxed_opaque_existential_0(v4, v5);
      v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
      swift_beginAccess();
      swift_bridgeObjectRetain();
      v8 = sub_1D25393D8((uint64_t)v7);
      v10 = v9;
      swift_bridgeObjectRelease();
      if ((v10 & 1) != 0)
      {
        isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v12 = *v3;
        v15 = *v3;
        *v3 = 0x8000000000000000;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1D26715FC();
          v12 = v15;
        }

        sub_1D2538F38((__int128 *)(*(_QWORD *)(v12 + 56) + 40 * v8), (uint64_t)v13);
        sub_1D266D1C4(v8, v12);
        *v3 = v12;
        swift_bridgeObjectRelease();
      }
      else
      {
        v14 = 0;
        memset(v13, 0, sizeof(v13));
      }

      sub_1D253703C((uint64_t)v13, &qword_1ED961D70);
      swift_endAccess();
      v4 += 5;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D25F7DE4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = v2[14];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D25F7E54(v2, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t sub_1D25F7E54@<X0>(_QWORD *a1@<X0>, void *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  id v7;
  unint64_t v8;
  char v9;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  id v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  _QWORD v19[5];
  __int128 v20;
  uint64_t v21;
  _UNKNOWN **v22;
  __int128 v23;
  __int128 v24;
  uint64_t v25;

  swift_beginAccess();
  v6 = a1[12];
  if (*(_QWORD *)(v6 + 16))
  {
    v7 = a2;
    swift_bridgeObjectRetain();
    v8 = sub_1D25393D8((uint64_t)v7);
    if ((v9 & 1) != 0)
    {
      sub_1D2538510(*(_QWORD *)(v6 + 56) + 40 * v8, (uint64_t)&v23);
    }
    else
    {
      v25 = 0;
      v23 = 0u;
      v24 = 0u;
    }

    swift_bridgeObjectRelease();
  }
  else
  {
    v25 = 0;
    v23 = 0u;
    v24 = 0u;
  }
  sub_1D25F8690((uint64_t)&v23, (uint64_t)&v20);
  v10 = v21;
  sub_1D253703C((uint64_t)&v20, &qword_1ED961D70);
  if (!v10)
  {
    swift_beginAccess();
    sub_1D2538510((uint64_t)(a1 + 15), (uint64_t)&v20);
    v11 = a1 + 2;
    sub_1D2538510((uint64_t)(a1 + 2), (uint64_t)v19);
    v12 = type metadata accessor for BundleEnvironmentProvider();
    swift_allocObject();
    v13 = a2;
    v14 = sub_1D26462EC(v13, &v20, v19);
    v21 = v12;
    v22 = &off_1E93D2380;
    *(_QWORD *)&v20 = v14;
    sub_1D253703C((uint64_t)&v23, &qword_1ED961D70);
    sub_1D25F86D8((uint64_t)&v20, (uint64_t)&v23);
    v15 = a1[5];
    v16 = a1[6];
    __swift_project_boxed_opaque_existential_0(v11, v15);
    ExtensionManaging.extension(for:)((uint64_t)v13, v15, v16);
    v17 = v21;
    sub_1D253703C((uint64_t)&v20, &qword_1ED962040);
    if (v17)
    {
      sub_1D25F8690((uint64_t)&v23, (uint64_t)&v20);
      swift_beginAccess();
      sub_1D25E5EA4((uint64_t)&v20, v13);
      swift_endAccess();
    }
  }
  result = sub_1D25F8690((uint64_t)&v23, (uint64_t)&v20);
  if (v21)
  {
    sub_1D253703C((uint64_t)&v23, &qword_1ED961D70);
    return sub_1D2538F38(&v20, a3);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t DefaultEnvironmentProvidingFactory.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return v0;
}

uint64_t DefaultEnvironmentProvidingFactory.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  __swift_destroy_boxed_opaque_existential_1(v0 + 56);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 120);
  return swift_deallocClassInstance();
}

uint64_t sub_1D25F8118@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + 120;
  swift_beginAccess();
  return sub_1D2538510(v3, a1);
}

uint64_t sub_1D25F8164@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD **v2;
  _QWORD *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;

  v5 = *v2;
  v6 = v5[14];
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_1D25F7E54(v5, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  return swift_release();
}

uint64_t type metadata accessor for DefaultEnvironmentProvidingFactory()
{
  return objc_opt_self();
}

_QWORD *sub_1D25F81F8(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4)
{
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD v13[5];

  v13[3] = type metadata accessor for IOSSystemEnvironmentProvider();
  v13[4] = &off_1E93D2380;
  v13[0] = a3;
  a4[12] = MEMORY[0x1E0DEE9E0];
  a4[13] = MEMORY[0x1E0DEE9E8];
  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *v9 = 0;
  *(_QWORD *)(v8 + 16) = v9;
  a4[14] = v8;
  sub_1D2538510(a1, (uint64_t)(a4 + 2));
  sub_1D2538510(a2, (uint64_t)(a4 + 7));
  sub_1D2538510((uint64_t)v13, (uint64_t)(a4 + 15));
  v10 = a4[5];
  v11 = a4[6];
  __swift_project_boxed_opaque_existential_0(a4 + 2, v10);
  (*(void (**)(uint64_t, uint64_t))(v11 + 72))(v10, v11);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED961B58);
  sub_1D25F874C();
  sub_1D26CC288();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a4;
}

_QWORD *sub_1D25F83A4(uint64_t a1, uint64_t a2, uint64_t a3, _QWORD *a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17[5];

  v17[3] = a5;
  v17[4] = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1(v17);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a3, a5);
  a4[12] = MEMORY[0x1E0DEE9E0];
  a4[13] = MEMORY[0x1E0DEE9E8];
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *v13 = 0;
  *(_QWORD *)(v12 + 16) = v13;
  a4[14] = v12;
  sub_1D2538510(a1, (uint64_t)(a4 + 2));
  sub_1D2538510(a2, (uint64_t)(a4 + 7));
  sub_1D2538510((uint64_t)v17, (uint64_t)(a4 + 15));
  v14 = a4[5];
  v15 = a4[6];
  __swift_project_boxed_opaque_existential_0(a4 + 2, v14);
  (*(void (**)(uint64_t, uint64_t))(v15 + 72))(v14, v15);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED961B58);
  sub_1D25F874C();
  sub_1D26CC288();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v17);
  __swift_destroy_boxed_opaque_existential_1(a2);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return a4;
}

_QWORD *sub_1D25F855C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v11;
  uint64_t v12;
  char *v13;
  _QWORD *v14;
  uint64_t v16;

  v11 = *(_QWORD *)(a5 - 8);
  MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for DefaultEnvironmentProvidingFactory();
  v14 = (_QWORD *)swift_allocObject();
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v13, a3, a5);
  return sub_1D25F83A4(a1, a2, (uint64_t)v13, v14, a5, a6);
}

uint64_t sub_1D25F8614@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 120;
  swift_beginAccess();
  return sub_1D2538510(v3, a2);
}

uint64_t method lookup function for DefaultEnvironmentProvidingFactory()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of DefaultEnvironmentProvidingFactory.system.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of DefaultEnvironmentProvidingFactory.__allocating_init(extensionManager:keybagStateProvider:systemProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 200))();
}

uint64_t dispatch thunk of DefaultEnvironmentProvidingFactory.makeProvider(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t sub_1D25F8690(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25F86D8(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961D70);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D25F8720()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D25F8744(uint64_t *a1)
{
  return sub_1D25F7BE4(a1);
}

unint64_t sub_1D25F874C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED961B50;
  if (!qword_1ED961B50)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract((uint64_t *)&unk_1ED961B58);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0C95D90], v1);
    atomic_store(result, (unint64_t *)&qword_1ED961B50);
  }
  return result;
}

ValueMetadata *type metadata accessor for BackoffPolicy()
{
  return &type metadata for BackoffPolicy;
}

uint64_t sub_1D25F87A8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  NSObject *v54;
  os_log_type_t v55;
  BOOL v56;
  uint64_t v57;
  uint8_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  unint64_t v64;
  uint64_t v65;
  void (*v66)(char *, uint64_t);
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  char *v76;
  char *v77;
  void (*v78)(char *, uint64_t);
  uint64_t v79;
  char *v80;
  uint64_t v81;
  uint64_t v82;
  void (*v83)(char *, uint64_t);
  uint64_t v84;
  uint64_t v85;
  char v86;
  uint64_t v87;
  uint64_t v88;
  char *v89;
  NSObject *v90;
  os_log_type_t v91;
  uint64_t v92;
  uint64_t v93;
  char v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  unint64_t v99;
  char *v100;
  uint64_t v101;
  uint64_t v102;
  uint64_t v103;
  os_unfair_lock_s *v104;
  char v105;
  char v106;
  _QWORD *v107;
  unint64_t v108;
  unint64_t v109;
  _QWORD *v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  uint64_t v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  char v120;
  uint64_t v121;
  uint64_t v122;
  void (*v123)(uint64_t, uint64_t);
  uint64_t v124;
  char *v125;
  NSObject *v126;
  os_log_type_t v127;
  uint8_t *v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  unint64_t v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  char v139;
  char *v140;
  _QWORD *v141;
  unint64_t v142;
  unint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  int v147;
  NSObject *v148;
  os_log_type_t v149;
  uint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t v154;
  unint64_t v155;
  char *v156;
  uint64_t v157;
  char *v158;
  uint64_t v159;
  uint64_t v160;
  uint64_t v161;
  unsigned int (*v162)(uint64_t, uint64_t, uint64_t);
  uint64_t v163;
  char *v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  _QWORD *v171;
  unint64_t v172;
  unint64_t v173;
  uint64_t v174;
  _QWORD *v175;
  _QWORD *v176;
  const char *v177;
  unint64_t v178;
  unint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  uint64_t v187;
  _QWORD *v188;
  char *v189;
  unint64_t v190;
  unint64_t v191;
  _QWORD *v192;
  uint64_t v193;
  unint64_t v194;
  unint64_t v195;
  uint64_t v196;
  uint64_t v197;
  NSObject *v198;
  os_log_type_t v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  unint64_t v205;
  uint64_t v206;
  char *v207;
  unint64_t v208;
  unint64_t v209;
  uint64_t v210;
  uint64_t v211;
  char *v212;
  NSObject *v213;
  os_log_type_t v214;
  uint64_t v215;
  uint64_t v216;
  uint64_t v217;
  uint64_t v218;
  uint64_t v219;
  unint64_t v220;
  uint64_t v221;
  uint64_t v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  char *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  uint64_t v231;
  NSObject *v232;
  os_log_type_t v233;
  uint8_t *v234;
  uint64_t v235;
  char *v236;
  uint64_t v237;
  uint64_t v238;
  uint64_t v239;
  unint64_t v240;
  char *v241;
  uint64_t v242;
  void (*v243)(char *, uint64_t);
  uint64_t v244;
  _QWORD *v246;
  unint64_t v247;
  unint64_t v248;
  _QWORD *v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  uint64_t *v254;
  char *v255;
  uint64_t v256;
  uint64_t v257;
  char *v258;
  char *v259;
  int v260;
  uint64_t v261;
  uint64_t v262;
  uint8_t *v263;
  char *v264;
  uint64_t v265;
  uint64_t v266;
  uint64_t v267;
  uint64_t v268;
  char *v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  char *v274;
  char *v275;
  char *v276;
  char *v277;
  char *v278;
  char *v279;
  char *v280;
  uint64_t v281;
  uint64_t v282;
  char *v283;
  uint64_t v284;
  uint64_t v285;
  uint64_t v286;
  uint64_t v287;
  void (*v288)(char *, uint64_t);
  uint64_t v289;
  uint64_t v290;
  uint64_t v291;
  unsigned __int8 v292;
  _QWORD *v293;
  _QWORD *v294;
  uint64_t v295;
  uint64_t v296;

  v268 = a2;
  v282 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  v284 = *(_QWORD *)(v282 - 8);
  v3 = MEMORY[0x1E0C80A78](v282);
  v252 = (uint64_t)&v250 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = MEMORY[0x1E0C80A78](v3);
  v262 = (uint64_t)&v250 - v6;
  MEMORY[0x1E0C80A78](v5);
  v253 = (uint64_t)&v250 - v7;
  v265 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  v8 = MEMORY[0x1E0C80A78](v265);
  v254 = (uint64_t *)((char *)&v250 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v250 - v10;
  v267 = sub_1D26CD488();
  v266 = *(_QWORD *)(v267 - 8);
  v12 = MEMORY[0x1E0C80A78](v267);
  v277 = (char *)&v250 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v276 = (char *)&v250 - v14;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D380);
  v16 = MEMORY[0x1E0C80A78](v15);
  v255 = (char *)&v250 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = MEMORY[0x1E0C80A78](v16);
  v261 = (uint64_t)&v250 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v273 = (uint64_t)&v250 - v21;
  v22 = MEMORY[0x1E0C80A78](v20);
  v256 = (uint64_t)&v250 - v23;
  v24 = MEMORY[0x1E0C80A78](v22);
  v257 = (uint64_t)&v250 - v25;
  MEMORY[0x1E0C80A78](v24);
  v286 = (uint64_t)&v250 - v26;
  v281 = sub_1D26CC438();
  v270 = *(_QWORD *)(v281 - 8);
  v27 = MEMORY[0x1E0C80A78](v281);
  v283 = (char *)&v250 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v280 = (char *)&v250 - v29;
  v287 = sub_1D26CC7A4();
  v30 = *(_QWORD *)(v287 - 8);
  v31 = MEMORY[0x1E0C80A78](v287);
  v264 = (char *)&v250 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  v33 = MEMORY[0x1E0C80A78](v31);
  v279 = (char *)&v250 - v34;
  MEMORY[0x1E0C80A78](v33);
  v278 = (char *)&v250 - v35;
  v36 = sub_1D26CC09C();
  v37 = *(void (**)(char *, uint64_t))(v36 - 8);
  v38 = MEMORY[0x1E0C80A78](v36);
  v251 = (char *)&v250 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = MEMORY[0x1E0C80A78](v38);
  v259 = (char *)&v250 - v41;
  v42 = MEMORY[0x1E0C80A78](v40);
  v258 = (char *)&v250 - v43;
  v44 = MEMORY[0x1E0C80A78](v42);
  v275 = (char *)&v250 - v45;
  v46 = MEMORY[0x1E0C80A78](v44);
  v272 = (char *)&v250 - v47;
  v48 = MEMORY[0x1E0C80A78](v46);
  v269 = (char *)&v250 - v49;
  MEMORY[0x1E0C80A78](v48);
  v51 = (char *)&v250 - v50;
  v52 = a1[3];
  v53 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v52);
  (*(void (**)(uint64_t, uint64_t))(v53 + 24))(v52, v53);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
  v54 = sub_1D26CC084();
  v55 = sub_1D26CDCE0();
  v56 = os_log_type_enabled(v54, v55);
  v285 = v36;
  v274 = v11;
  if (v56)
  {
    v57 = swift_slowAlloc();
    v288 = v37;
    v58 = (uint8_t *)v57;
    v59 = swift_slowAlloc();
    v271 = v30;
    v60 = v59;
    v291 = v59;
    *(_DWORD *)v58 = 136315138;
    v263 = v58 + 4;
    v61 = v295;
    v62 = v296;
    __swift_project_boxed_opaque_existential_0(&v294, v295);
    v63 = (*(uint64_t (**)(uint64_t, uint64_t))(v62 + 32))(v61, v62);
    v293 = (_QWORD *)sub_1D2537880(v63, v64, &v291);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
    _os_log_impl(&dword_1D2531000, v54, v55, "[%s] viewEvaluate: begin", v58, 0xCu);
    swift_arrayDestroy();
    v65 = v60;
    v30 = v271;
    MEMORY[0x1D823A5E0](v65, -1, -1);
    MEMORY[0x1D823A5E0](v58, -1, -1);

    v66 = (void (*)(char *, uint64_t))*((_QWORD *)v288 + 1);
    v67 = v51;
    v68 = v285;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);

    v66 = (void (*)(char *, uint64_t))*((_QWORD *)v37 + 1);
    v67 = v51;
    v68 = v36;
  }
  v288 = v66;
  v66(v67, v68);
  v293 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v69 = a1[3];
  v70 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v69);
  v71 = (*(uint64_t (**)(uint64_t, uint64_t))(v70 + 48))(v69, v70);
  v72 = a1[3];
  v73 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v72);
  LODWORD(v263) = (*(uint64_t (**)(uint64_t, uint64_t))(v73 + 56))(v72, v73);
  v74 = a1[3];
  v75 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v74);
  v76 = v278;
  (*(void (**)(uint64_t, uint64_t))(v75 + 40))(v74, v75);
  v77 = v280;
  sub_1D26CC4F8();
  v78 = *(void (**)(char *, uint64_t))(v30 + 8);
  v79 = v287;
  v78(v76, v287);
  v80 = v283;
  sub_1D26CC42C();
  v81 = sub_1D25369B0((unint64_t *)&qword_1ED96C308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
  v82 = v281;
  v271 = v81;
  LOBYTE(v74) = sub_1D26CDFBC();
  v83 = *(void (**)(char *, uint64_t))(v270 + 8);
  v83(v80, v82);
  v83(v77, v82);
  v84 = a1[3];
  v85 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v84);
  (*(void (**)(uint64_t, uint64_t))(v85 + 40))(v84, v85);
  LOBYTE(v83) = sub_1D26CC51C();
  v283 = (char *)v78;
  v78(v76, v79);
  v260 = v71;
  v86 = sub_1D2562F94(v83 & 1, a1, &v293, v74 & 1, v71 & 1, v263 & 1);
  v87 = a1[3];
  v88 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v87);
  v89 = v269;
  (*(void (**)(uint64_t, uint64_t))(v88 + 24))(v87, v88);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
  v90 = sub_1D26CC084();
  v91 = sub_1D26CDCE0();
  if (os_log_type_enabled(v90, v91))
  {
    v92 = swift_slowAlloc();
    v93 = swift_slowAlloc();
    v291 = v93;
    *(_DWORD *)v92 = 136315394;
    v94 = v86;
    v96 = v295;
    v95 = v296;
    __swift_project_boxed_opaque_existential_0(&v294, v295);
    v97 = v96;
    v86 = v94;
    v98 = (*(uint64_t (**)(uint64_t, uint64_t))(v95 + 32))(v97, v95);
    v290 = sub_1D2537880(v98, v99, &v291);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
    *(_WORD *)(v92 + 12) = 1024;
    LODWORD(v290) = v94 & 1;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v90, v91, "[%s] viewEvaluate: securityAllowsLiveContent = %{BOOL}d", (uint8_t *)v92, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v93, -1, -1);
    MEMORY[0x1D823A5E0](v92, -1, -1);

    v100 = v269;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);

    v100 = v89;
  }
  v101 = v285;
  v288(v100, v285);
  v102 = v282;
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v103 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 12) + 88);
  v104 = *(os_unfair_lock_s **)(v103 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v104);
  v105 = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v103 + 16));
  swift_release();
  swift_release();
  v106 = v86;
  if ((v105 & 1) != 0)
  {
    v107 = v293;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v107 = sub_1D25615EC(0, v107[2] + 1, 1, v107);
    v109 = v107[2];
    v108 = v107[3];
    if (v109 >= v108 >> 1)
      v107 = sub_1D25615EC((_QWORD *)(v108 > 1), v109 + 1, 1, v107);
    v107[2] = v109 + 1;
    v110 = &v107[2 * v109];
    v110[4] = 0xD000000000000049;
    v110[5] = 0x80000001D26DED70;
    v293 = v107;
    v106 = 1;
  }
  v292 = v86 & ~v105 & 1;
  v269 = *(char **)(v284 + 56);
  ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v269)(v286, 1, 1, v102);
  if ((v106 & 1) == 0 && ((v260 ^ 1) & 1) == 0)
  {
    v111 = a1[3];
    v112 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v111);
    v113 = v264;
    (*(void (**)(uint64_t, uint64_t))(v112 + 40))(v111, v112);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC826C8);
    v114 = swift_allocObject();
    *(_OWORD *)(v114 + 16) = xmmword_1D26D1280;
    sub_1D26CC42C();
    v294 = (_QWORD *)v114;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
    sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
    sub_1D26CDFE0();
    sub_1D26CC504();
    v115 = a1[3];
    v116 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v115);
    v117 = (uint64_t)v255;
    (*(void (**)(char *, uint64_t, uint64_t))(v116 + 88))(v113, v115, v116);
    v118 = v286;
    sub_1D25AB51C(v117, v286, &qword_1ED96D380);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v284 + 48))(v118, 1, v102)
      || (v119 = v252,
          sub_1D2534120(v286, v252, type metadata accessor for DefaultWidgetLiveViewEntry),
          v120 = DefaultWidgetLiveViewEntry.containsPrivacyRedactions.getter(),
          sub_1D25340E4(v119, type metadata accessor for DefaultWidgetLiveViewEntry),
          (v120 & 1) == 0))
    {
      ((void (*)(char *, uint64_t))v283)(v264, v287);
    }
    else
    {
      v121 = a1[3];
      v122 = a1[4];
      __swift_project_boxed_opaque_existential_0(a1, v121);
      v123 = *(void (**)(uint64_t, uint64_t))(v122 + 24);
      v124 = v122;
      v125 = v251;
      v123(v121, v124);
      sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
      v126 = sub_1D26CC084();
      v127 = sub_1D26CDCE0();
      if (os_log_type_enabled(v126, v127))
      {
        v128 = (uint8_t *)swift_slowAlloc();
        v129 = swift_slowAlloc();
        v291 = v129;
        *(_DWORD *)v128 = 136315138;
        v130 = v295;
        v131 = v296;
        __swift_project_boxed_opaque_existential_0(&v294, v295);
        v132 = (*(uint64_t (**)(uint64_t, uint64_t))(v131 + 32))(v130, v131);
        v290 = sub_1D2537880(v132, v133, &v291);
        v101 = v285;
        v102 = v282;
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
        _os_log_impl(&dword_1D2531000, v126, v127, "[%s] viewEvaluate: liveContentContainsPrivacyRedactions = true", v128, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v129, -1, -1);
        MEMORY[0x1D823A5E0](v128, -1, -1);

        v134 = v251;
      }
      else
      {
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);

        v134 = v125;
      }
      v288(v134, v101);
      v246 = v293;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v246 = sub_1D25615EC(0, v246[2] + 1, 1, v246);
      v248 = v246[2];
      v247 = v246[3];
      if (v248 >= v247 >> 1)
        v246 = sub_1D25615EC((_QWORD *)(v247 > 1), v248 + 1, 1, v246);
      v246[2] = v248 + 1;
      v249 = &v246[2 * v248];
      v249[4] = 0xD000000000000021;
      v249[5] = 0x80000001D26DED40;
      v293 = v246;
      ((void (*)(char *, uint64_t))v283)(v264, v287);
      v292 = 1;
    }
  }
  v135 = a1[3];
  v136 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v135);
  (*(void (**)(uint64_t, uint64_t))(v136 + 80))(v135, v136);
  v137 = a1[3];
  v138 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v137);
  (*(void (**)(uint64_t, uint64_t))(v138 + 72))(v137, v138);
  v139 = sub_1D26CD470();
  v140 = v272;
  if ((v139 & 1) == 0)
  {
    v141 = v293;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v141 = sub_1D25615EC(0, v141[2] + 1, 1, v141);
    v143 = v141[2];
    v142 = v141[3];
    if (v143 >= v142 >> 1)
      v141 = sub_1D25615EC((_QWORD *)(v142 > 1), v143 + 1, 1, v141);
    v141[2] = v143 + 1;
    v144 = &v141[2 * v143];
    v144[4] = 0xD000000000000042;
    v144[5] = 0x80000001D26DEC50;
    v293 = v141;
    v292 = 0;
  }
  v145 = a1[3];
  v146 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v145);
  (*(void (**)(uint64_t, uint64_t))(v146 + 24))(v145, v146);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
  v147 = v292;
  v148 = sub_1D26CC084();
  v149 = sub_1D26CDCE0();
  if (os_log_type_enabled(v148, v149))
  {
    v150 = swift_slowAlloc();
    v151 = swift_slowAlloc();
    v291 = v151;
    *(_DWORD *)v150 = 136315394;
    v152 = v295;
    v153 = v296;
    __swift_project_boxed_opaque_existential_0(&v294, v295);
    v154 = (*(uint64_t (**)(uint64_t, uint64_t))(v153 + 32))(v152, v153);
    v290 = sub_1D2537880(v154, v155, &v291);
    v102 = v282;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
    *(_WORD *)(v150 + 12) = 1024;
    LODWORD(v290) = v147;
    v101 = v285;
    sub_1D26CDF50();
    _os_log_impl(&dword_1D2531000, v148, v149, "[%s] viewEvaluate: allowedToFetchLiveContent = %{BOOL}d", (uint8_t *)v150, 0x12u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v151, -1, -1);
    MEMORY[0x1D823A5E0](v150, -1, -1);

    v156 = v272;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);

    v156 = v140;
  }
  v288(v156, v101);
  v157 = (uint64_t)v274;
  v158 = v275;
  v159 = a1[3];
  v160 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v159);
  (*(void (**)(uint64_t, uint64_t))(v160 + 40))(v159, v160);
  v294 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
  sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  sub_1D26CC504();
  swift_beginAccess();
  if (v292 != 1)
    goto LABEL_42;
  v161 = v256;
  sub_1D2537078(v286, v256, &qword_1ED96D380);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
  v162 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v284 + 48);
  if (v162(v161, 1, v102) == 1)
  {
    v163 = v101;
    v164 = v158;
    v165 = v157;
    v166 = v161;
    v167 = v295;
    v168 = v296;
    __swift_project_boxed_opaque_existential_0(&v294, v295);
    v169 = v257;
    (*(void (**)(char *, uint64_t, uint64_t))(v168 + 88))(v279, v167, v168);
    v170 = v166;
    v157 = v165;
    v158 = v164;
    v101 = v163;
    v102 = v282;
    sub_1D253703C(v170, &qword_1ED96D380);
  }
  else
  {
    v169 = v257;
    sub_1D2539ADC(v161, v257, type metadata accessor for DefaultWidgetLiveViewEntry);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v269)(v169, 0, 1, v102);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
  if (v162(v169, 1, v102) != 1)
  {
    v222 = v253;
    sub_1D2539ADC(v169, v253, type metadata accessor for DefaultWidgetLiveViewEntry);
    sub_1D2539ADC(v222, v157, type metadata accessor for DefaultWidgetLiveViewEntry);
LABEL_61:
    swift_storeEnumTagMultiPayload();
    goto LABEL_62;
  }
  sub_1D253703C(v169, &qword_1ED96D380);
  if (v292 == 1)
  {
    v171 = v293;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v171 = sub_1D25615EC(0, v171[2] + 1, 1, v171);
    v173 = v171[2];
    v172 = v171[3];
    v174 = v157;
    if (v173 >= v172 >> 1)
      v171 = sub_1D25615EC((_QWORD *)(v172 > 1), v173 + 1, 1, v171);
    v171[2] = v173 + 1;
    v175 = &v171[2 * v173];
    v175[4] = 0xD00000000000003DLL;
    v176 = v175 + 4;
    v177 = "Policy would prefer live entry, but couldn't find one to show";
  }
  else
  {
LABEL_42:
    v171 = v293;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      v171 = sub_1D25615EC(0, v171[2] + 1, 1, v171);
    v179 = v171[2];
    v178 = v171[3];
    v174 = v157;
    if (v179 >= v178 >> 1)
      v171 = sub_1D25615EC((_QWORD *)(v178 > 1), v179 + 1, 1, v171);
    v171[2] = v179 + 1;
    v180 = &v171[2 * v179];
    v180[4] = 0xD000000000000024;
    v176 = v180 + 4;
    v177 = "Policy decided must show placeholder";
  }
  v176[1] = (unint64_t)(v177 - 32) | 0x8000000000000000;
  v293 = v171;
  v181 = a1[3];
  v182 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v181);
  v183 = a1[3];
  v184 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v183);
  v185 = v278;
  (*(void (**)(uint64_t, uint64_t))(v184 + 40))(v183, v184);
  v186 = v273;
  (*(void (**)(char *, uint64_t, uint64_t))(v182 + 96))(v185, v181, v182);
  ((void (*)(char *, uint64_t))v283)(v185, v287);
  v187 = v261;
  sub_1D2537078(v186, v261, &qword_1ED96D380);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v284 + 48))(v187, 1, v282) != 1)
  {
    sub_1D2539ADC(v187, v262, type metadata accessor for DefaultWidgetLiveViewEntry);
    v294 = v293;
    swift_bridgeObjectRetain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
    sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
    v284 = sub_1D26CD8E4();
    v209 = v208;
    swift_bridgeObjectRelease();
    v210 = a1[3];
    v211 = a1[4];
    __swift_project_boxed_opaque_existential_0(a1, v210);
    v212 = v258;
    (*(void (**)(uint64_t, uint64_t))(v211 + 24))(v210, v211);
    sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
    swift_bridgeObjectRetain();
    v213 = sub_1D26CC084();
    v214 = sub_1D26CDD04();
    v157 = v174;
    if (os_log_type_enabled(v213, v214))
    {
      v215 = swift_slowAlloc();
      v282 = swift_slowAlloc();
      v290 = v282;
      *(_DWORD *)v215 = 136446466;
      v217 = v295;
      v216 = v296;
      __swift_project_boxed_opaque_existential_0(&v294, v295);
      v218 = v217;
      v157 = v174;
      v101 = v285;
      v219 = (*(uint64_t (**)(uint64_t, uint64_t))(v216 + 32))(v218, v216);
      v289 = sub_1D2537880(v219, v220, &v290);
      v158 = v275;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
      *(_WORD *)(v215 + 12) = 2082;
      swift_bridgeObjectRetain();
      v289 = sub_1D2537880(v284, v209, &v290);
      sub_1D26CDF50();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_1D2531000, v213, v214, "[%{public}s] Security policy yielding placeholder content: %{public}s.", (uint8_t *)v215, 0x16u);
      v221 = v282;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v221, -1, -1);
      MEMORY[0x1D823A5E0](v215, -1, -1);

      v288(v258, v101);
      sub_1D253703C(v273, &qword_1ED96D380);
    }
    else
    {
      swift_bridgeObjectRelease_n();

      __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
      v288(v212, v101);
      sub_1D253703C(v273, &qword_1ED96D380);
      v158 = v275;
    }
    sub_1D2539ADC(v262, v157, type metadata accessor for DefaultWidgetLiveViewEntry);
    goto LABEL_61;
  }
  sub_1D253703C(v187, &qword_1ED96D380);
  v188 = v293;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    v188 = sub_1D25615EC(0, v188[2] + 1, 1, v188);
  v189 = v259;
  v191 = v188[2];
  v190 = v188[3];
  if (v191 >= v190 >> 1)
    v188 = sub_1D25615EC((_QWORD *)(v190 > 1), v191 + 1, 1, v188);
  v188[2] = v191 + 1;
  v192 = &v188[2 * v191];
  v192[4] = 0xD000000000000023;
  v192[5] = 0x80000001D26DECD0;
  v293 = v188;
  v294 = v188;
  swift_bridgeObjectRetain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
  v193 = sub_1D26CD8E4();
  v195 = v194;
  swift_bridgeObjectRelease();
  v196 = a1[3];
  v197 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v196);
  (*(void (**)(uint64_t, uint64_t))(v197 + 24))(v196, v197);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
  swift_bridgeObjectRetain();
  v198 = sub_1D26CC084();
  v199 = sub_1D26CDCEC();
  if (os_log_type_enabled(v198, v199))
  {
    v200 = swift_slowAlloc();
    v282 = v193;
    v201 = v200;
    v284 = swift_slowAlloc();
    v290 = v284;
    *(_DWORD *)v201 = 136446466;
    v203 = v295;
    v202 = v296;
    __swift_project_boxed_opaque_existential_0(&v294, v295);
    v204 = (*(uint64_t (**)(uint64_t, uint64_t))(v202 + 32))(v203, v202);
    v289 = sub_1D2537880(v204, v205, &v290);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
    *(_WORD *)(v201 + 12) = 2082;
    swift_bridgeObjectRetain();
    v289 = sub_1D2537880(v282, v195, &v290);
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v198, v199, "[%{public}s] Security policy determined view will be empty: %{public}s.", (uint8_t *)v201, 0x16u);
    v206 = v284;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v206, -1, -1);
    MEMORY[0x1D823A5E0](v201, -1, -1);

    v207 = v259;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);

    swift_bridgeObjectRelease_n();
    v207 = v189;
  }
  v101 = v285;
  v288(v207, v285);
  v223 = a1[3];
  v224 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v223);
  v225 = a1[3];
  v226 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v225);
  v227 = v278;
  (*(void (**)(uint64_t, uint64_t))(v226 + 40))(v225, v226);
  v228 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v224 + 104))(v227, v223, v224);
  ((void (*)(char *, uint64_t))v283)(v227, v287);
  sub_1D253703C(v273, &qword_1ED96D380);
  v229 = (uint64_t)v254;
  *v254 = v228;
  swift_storeEnumTagMultiPayload();
  sub_1D25384CC(v229, v174, &qword_1ED96D438);
  v157 = v174;
  v158 = v275;
LABEL_62:
  v230 = a1[3];
  v231 = a1[4];
  __swift_project_boxed_opaque_existential_0(a1, v230);
  (*(void (**)(uint64_t, uint64_t))(v231 + 24))(v230, v231);
  sub_1D2538510((uint64_t)a1, (uint64_t)&v294);
  v232 = sub_1D26CC084();
  v233 = sub_1D26CDCE0();
  if (os_log_type_enabled(v232, v233))
  {
    v234 = (uint8_t *)swift_slowAlloc();
    v235 = swift_slowAlloc();
    v290 = v235;
    *(_DWORD *)v234 = 136315138;
    v236 = v158;
    v237 = v295;
    v238 = v296;
    __swift_project_boxed_opaque_existential_0(&v294, v295);
    v239 = (*(uint64_t (**)(uint64_t, uint64_t))(v238 + 32))(v237, v238);
    v289 = sub_1D2537880(v239, v240, &v290);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);
    _os_log_impl(&dword_1D2531000, v232, v233, "[%s] viewEvaluate: end", v234, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v235, -1, -1);
    MEMORY[0x1D823A5E0](v234, -1, -1);

    v241 = v236;
    v157 = (uint64_t)v274;
    v242 = v285;
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v294);

    v241 = v158;
    v242 = v101;
  }
  v288(v241, v242);
  swift_bridgeObjectRelease();
  v293 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  ((void (*)(char *, uint64_t))v283)(v279, v287);
  v243 = *(void (**)(char *, uint64_t))(v266 + 8);
  v244 = v267;
  v243(v277, v267);
  v243(v276, v244);
  swift_bridgeObjectRelease();
  sub_1D25384CC(v157, v268, &qword_1ED96D438);
  return sub_1D253703C(v286, &qword_1ED96D380);
}

uint64_t sub_1D25FA570(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;
  int64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;

  v1 = a1;
  if ((a1 & 0xC000000000000001) != 0)
  {
    swift_bridgeObjectRetain();
    sub_1D26CE004();
    sub_1D26CC114();
    sub_1D25369B0(&qword_1EFC83058, (uint64_t (*)(uint64_t))MEMORY[0x1E0C95E00], MEMORY[0x1E0C95E18]);
    result = sub_1D26CDC20();
    v1 = v18;
    v17 = v19;
    v3 = v20;
    v4 = v21;
    v5 = v22;
  }
  else
  {
    v6 = -1 << *(_BYTE *)(a1 + 32);
    v17 = a1 + 56;
    v3 = ~v6;
    v7 = -v6;
    if (v7 < 64)
      v8 = ~(-1 << v7);
    else
      v8 = -1;
    v5 = v8 & *(_QWORD *)(a1 + 56);
    result = swift_bridgeObjectRetain();
    v4 = 0;
  }
  v9 = (unint64_t)(v3 + 64) >> 6;
  if (v1 < 0)
    goto LABEL_10;
  while (1)
  {
    if (v5)
    {
      v10 = (v5 - 1) & v5;
      v11 = __clz(__rbit64(v5)) | (v4 << 6);
      v12 = v4;
      goto LABEL_29;
    }
    v13 = v4 + 1;
    if (__OFADD__(v4, 1))
      break;
    if (v13 >= v9)
      return sub_1D2592A28();
    v14 = *(_QWORD *)(v17 + 8 * v13);
    v12 = v4 + 1;
    if (!v14)
    {
      v12 = v4 + 2;
      if (v4 + 2 >= v9)
        return sub_1D2592A28();
      v14 = *(_QWORD *)(v17 + 8 * v12);
      if (!v14)
      {
        v12 = v4 + 3;
        if (v4 + 3 >= v9)
          return sub_1D2592A28();
        v14 = *(_QWORD *)(v17 + 8 * v12);
        if (!v14)
        {
          v12 = v4 + 4;
          if (v4 + 4 >= v9)
            return sub_1D2592A28();
          v14 = *(_QWORD *)(v17 + 8 * v12);
          if (!v14)
          {
            v12 = v4 + 5;
            if (v4 + 5 >= v9)
              return sub_1D2592A28();
            v14 = *(_QWORD *)(v17 + 8 * v12);
            if (!v14)
            {
              v15 = v4 + 6;
              while (v9 != v15)
              {
                v14 = *(_QWORD *)(v17 + 8 * v15++);
                if (v14)
                {
                  v12 = v15 - 1;
                  goto LABEL_28;
                }
              }
              return sub_1D2592A28();
            }
          }
        }
      }
    }
LABEL_28:
    v10 = (v14 - 1) & v14;
    v11 = __clz(__rbit64(v14)) + (v12 << 6);
LABEL_29:
    v16 = *(_QWORD *)(*(_QWORD *)(v1 + 48) + 8 * v11);
    swift_retain();
    if (!v16)
      return sub_1D2592A28();
    while (1)
    {
      sub_1D26CC108();
      result = swift_release();
      v4 = v12;
      v5 = v10;
      if ((v1 & 0x8000000000000000) == 0)
        break;
LABEL_10:
      if (sub_1D26CE034())
      {
        sub_1D26CC114();
        swift_unknownObjectRetain();
        swift_dynamicCast();
        swift_unknownObjectRelease();
        v12 = v4;
        v10 = v5;
        if (v23)
          continue;
      }
      return sub_1D2592A28();
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_1D25FA810(uint64_t a1, uint64_t (*a2)(void))
{
  return a2();
}

uint64_t DisplayGamut.description.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  int v6;
  uint64_t v8;

  v1 = v0;
  v2 = sub_1D26CC2E8();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v1, v2);
  v6 = (*(uint64_t (**)(char *, uint64_t))(v3 + 88))(v5, v2);
  if (v6 == *MEMORY[0x1E0CD8A98])
    return 1111970419;
  if (v6 == *MEMORY[0x1E0CD8AA0])
    return 0x5079616C70736964;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  return 0x6E776F6E6B6E55;
}

uint64_t sub_1D25FA92C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  int v5;
  uint64_t v7;

  v2 = *(_QWORD *)(a1 - 8);
  MEMORY[0x1E0C80A78]();
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v2 + 16))(v4);
  v5 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, a1);
  if (v5 == *MEMORY[0x1E0CD8A98])
    return 1111970419;
  if (v5 == *MEMORY[0x1E0CD8AA0])
    return 0x5079616C70736964;
  (*(void (**)(char *, uint64_t))(v2 + 8))(v4, a1);
  return 0x6E776F6E6B6E55;
}

BOOL static WidgetEntrySourceType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t WidgetEntrySourceType.hash(into:)()
{
  return sub_1D26CE46C();
}

uint64_t WidgetEntrySourceType.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D25FAA9C()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  return swift_deallocClassInstance();
}

id sub_1D25FAAC8()
{
  uint64_t v0;

  return *(id *)(*(_QWORD *)v0 + 16);
}

void sub_1D25FAAD4(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(*(_QWORD *)v1 + 24);
}

uint64_t sub_1D25FAAE4@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;

  return sub_1D2538510(*v1 + 32, a1);
}

uint64_t LiveWidgetViewChangeReason.description.getter()
{
  return LiveWidgetViewChangeReason.rawValue.getter();
}

uint64_t LiveWidgetViewChangeReason.rawValue.getter()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D25FAB64 + 4 * byte_1D26D6810[*v0]))(0x6C616974696E69, 0xE700000000000000);
}

uint64_t sub_1D25FAB64()
{
  return 0x7265646E6572;
}

uint64_t sub_1D25FAB78()
{
  return 0x756F726765726F66;
}

unint64_t sub_1D25FAB98()
{
  return 0xD00000000000001CLL;
}

uint64_t sub_1D25FAD0C()
{
  return 0x63537265646E6572;
}

uint64_t sub_1D25FAD48()
{
  return 0x646E456863746162;
}

ChronoKit::LiveWidgetViewChangeReason_optional __swiftcall LiveWidgetViewChangeReason.init(rawValue:)(Swift::String rawValue)
{
  char *v1;
  char *v2;
  uint64_t v3;
  ChronoKit::LiveWidgetViewChangeReason_optional result;
  char v5;
  char v6;

  v2 = v1;
  v3 = sub_1D26CE400();
  result.value = swift_bridgeObjectRelease();
  v5 = 0;
  v6 = 2;
  switch(v3)
  {
    case 0:
      goto LABEL_3;
    case 1:
      v5 = 1;
LABEL_3:
      v6 = v5;
      break;
    case 2:
      break;
    case 3:
      v6 = 3;
      break;
    case 4:
      v6 = 4;
      break;
    case 5:
      v6 = 5;
      break;
    case 6:
      v6 = 6;
      break;
    case 7:
      v6 = 7;
      break;
    case 8:
      v6 = 8;
      break;
    case 9:
      v6 = 9;
      break;
    case 10:
      v6 = 10;
      break;
    case 11:
      v6 = 11;
      break;
    case 12:
      v6 = 12;
      break;
    case 13:
      v6 = 13;
      break;
    case 14:
      v6 = 14;
      break;
    case 15:
      v6 = 15;
      break;
    case 16:
      v6 = 16;
      break;
    case 17:
      v6 = 17;
      break;
    case 18:
      v6 = 18;
      break;
    case 19:
      v6 = 19;
      break;
    default:
      v6 = 20;
      break;
  }
  *v2 = v6;
  return result;
}

uint64_t sub_1D25FAE78(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D25E7F18(*a1, *a2);
}

uint64_t sub_1D25FAE84()
{
  sub_1D26CE460();
  LiveWidgetViewChangeReason.rawValue.getter();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D25FAEE8()
{
  LiveWidgetViewChangeReason.rawValue.getter();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D25FAF38()
{
  sub_1D26CE460();
  LiveWidgetViewChangeReason.rawValue.getter();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

ChronoKit::LiveWidgetViewChangeReason_optional sub_1D25FAF98(Swift::String *a1)
{
  return LiveWidgetViewChangeReason.init(rawValue:)(*a1);
}

uint64_t sub_1D25FAFA4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = LiveWidgetViewChangeReason.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D25FAFC8()
{
  return LiveWidgetViewChangeReason.rawValue.getter();
}

uint64_t sub_1D25FAFF8()
{
  return sub_1D25FBDE0();
}

uint64_t sub_1D25FB014()
{
  return sub_1D25FBE64();
}

uint64_t (*sub_1D25FB028(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D26CC1D4();
  return sub_1D25FB0A0;
}

uint64_t sub_1D25FB0A4()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets, &qword_1ED96B258);
}

uint64_t sub_1D25FB0B8(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets, &qword_1ED96B258);
}

uint64_t (*sub_1D25FB0D4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

uint64_t sub_1D25FB1A0()
{
  return sub_1D25FBDE0();
}

uint64_t sub_1D25FB1BC()
{
  return sub_1D25FBE64();
}

uint64_t (*sub_1D25FB1D0(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D26CC1D4();
  return sub_1D25FB0A0;
}

uint64_t sub_1D25FB248()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled, &qword_1ED96B258);
}

uint64_t sub_1D25FB25C(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled, &qword_1ED96B258);
}

uint64_t (*sub_1D25FB278(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

uint64_t sub_1D25FB340()
{
  return sub_1D25FBDE0();
}

uint64_t sub_1D25FB35C()
{
  return sub_1D25FBE64();
}

uint64_t (*sub_1D25FB370(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D26CC1D4();
  return sub_1D25FB0A0;
}

uint64_t sub_1D25FB3E8()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape, &qword_1ED96B258);
}

uint64_t sub_1D25FB3FC(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape, &qword_1ED96B258);
}

uint64_t (*sub_1D25FB418(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

uint64_t sub_1D25FB4E0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D25FB55C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D25FB5CC()
{
  return sub_1D25FBDE0();
}

uint64_t sub_1D25FB5E8()
{
  return sub_1D25FBE64();
}

uint64_t (*sub_1D25FB5FC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D26CC1D4();
  return sub_1D25FB0A0;
}

uint64_t sub_1D25FB674()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown, &qword_1ED96B258);
}

uint64_t sub_1D25FB688(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown, &qword_1ED96B258);
}

uint64_t (*sub_1D25FB6A4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

double sub_1D25FB76C@<D0>(_OWORD *a1@<X8>)
{
  return sub_1D25FC09C(a1);
}

uint64_t sub_1D25FB780(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1D259BAF8;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
  }
  sub_1D2549DF0(v1);
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t (*sub_1D25FB874())()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_1D259B938;
}

uint64_t sub_1D25FB924()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D25FB948(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
  }
  swift_retain();
  return sub_1D26CC1EC();
}

void (*sub_1D25FB9F0(_QWORD *a1))(uint64_t **a1, char a2)
{
  _QWORD *v2;
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v2 = malloc(0x50uLL);
  *a1 = v2;
  v2[6] = swift_getKeyPath();
  v2[7] = swift_getKeyPath();
  v2[8] = sub_1D26CC1D4();
  v2[9] = v3;
  v4 = *v3;
  v5 = v3[1];
  if (*v3)
  {
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1D259BAF8;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  v2[4] = v7;
  v2[5] = v6;
  sub_1D2549DF0(v4);
  return sub_1D25FBAB8;
}

void sub_1D25FBAB8(uint64_t **a1, char a2)
{
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t (*v6)();
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)();
  uint64_t *v10;
  void (*v11)(uint64_t *, _QWORD);
  uint64_t v12;
  uint64_t *v13;
  void (*v14)(uint64_t *, _QWORD);
  uint64_t v15;

  v2 = *a1;
  v3 = (*a1)[4];
  if ((a2 & 1) != 0)
  {
    v4 = v2[5];
    if (v3)
    {
      v5 = swift_allocObject();
      *(_QWORD *)(v5 + 16) = v3;
      *(_QWORD *)(v5 + 24) = v4;
      v6 = sub_1D259BAF8;
    }
    else
    {
      v6 = 0;
      v5 = 0;
    }
    v11 = (void (*)(uint64_t *, _QWORD))v2[8];
    v10 = (uint64_t *)v2[9];
    v12 = *v10;
    *v10 = (uint64_t)v6;
    v10[1] = v5;
    sub_1D2549DF0(v3);
    sub_1D25495F4(v12);
    sub_1D25495F4(v2[4]);
    v11(v2, 0);
    swift_release();
  }
  else
  {
    if (v3)
    {
      v7 = v2[5];
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v3;
      *(_QWORD *)(v8 + 24) = v7;
      v9 = sub_1D259BAF8;
    }
    else
    {
      v9 = 0;
      v8 = 0;
    }
    v14 = (void (*)(uint64_t *, _QWORD))v2[8];
    v13 = (uint64_t *)v2[9];
    v15 = *v13;
    *v13 = (uint64_t)v9;
    v13[1] = v8;
    sub_1D25495F4(v15);
    v14(v2, 0);
    swift_release();
  }
  swift_release();
  free(v2);
}

uint64_t sub_1D25FBBE4()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler, &qword_1ED96C900);
}

uint64_t sub_1D25FBBF8(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1EFC83030, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler, &qword_1ED96C900);
}

uint64_t (*sub_1D25FBC14(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83030);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C900);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

uint64_t sub_1D25FBCDC(_QWORD *a1, uint64_t (*a2)(_QWORD))
{
  return a2(*a1);
}

uint64_t (*sub_1D25FBD00())(uint64_t a1)
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_1D25FBDB0;
}

uint64_t sub_1D25FBDB0(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2553230(a1, *(uint64_t (**)(uint64_t *))(v1 + 16));
}

uint64_t sub_1D25FBDB8()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__interactionHandler, &qword_1ED962E10);
}

uint64_t sub_1D25FBDCC()
{
  return sub_1D25FBDE0();
}

uint64_t sub_1D25FBDE0()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D25FBE50()
{
  return sub_1D25FBE64();
}

uint64_t sub_1D25FBE64()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t (*sub_1D25FBECC(_QWORD *a1))()
{
  _QWORD *v2;

  v2 = malloc(0x38uLL);
  *a1 = v2;
  v2[4] = swift_getKeyPath();
  v2[5] = swift_getKeyPath();
  v2[6] = sub_1D26CC1D4();
  return sub_1D25FB0A0;
}

void sub_1D25FBF44(_QWORD *a1)
{
  void *v1;

  v1 = (void *)*a1;
  (*(void (**)(_QWORD, _QWORD))(*a1 + 48))(*a1, 0);
  swift_release();
  swift_release();
  free(v1);
}

uint64_t sub_1D25FBF90()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate, &qword_1ED96B258);
}

uint64_t sub_1D25FBFA4(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate, &qword_1ED96B258);
}

uint64_t (*sub_1D25FBFC0(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF8);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

double sub_1D25FC088@<D0>(_OWORD *a1@<X8>)
{
  return sub_1D25FC09C(a1);
}

double sub_1D25FC09C@<D0>(_OWORD *a1@<X8>)
{
  double result;
  __int128 v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  result = *(double *)&v3;
  *a1 = v3;
  return result;
}

uint64_t sub_1D25FC114(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t (*v4)();
  uint64_t v5;

  v1 = *a1;
  v2 = a1[1];
  if (*a1)
  {
    v3 = swift_allocObject();
    *(_QWORD *)(v3 + 16) = v1;
    *(_QWORD *)(v3 + 24) = v2;
    v4 = sub_1D2610750;
  }
  else
  {
    v4 = 0;
    v3 = 0;
  }
  swift_getKeyPath();
  swift_getKeyPath();
  if (v1)
  {
    v5 = swift_allocObject();
    *(_QWORD *)(v5 + 16) = v4;
    *(_QWORD *)(v5 + 24) = v3;
  }
  sub_1D2549DF0(v1);
  sub_1D2549DF0((uint64_t)v4);
  swift_retain();
  sub_1D26CC1EC();
  sub_1D25FC228();
  return sub_1D25495F4((uint64_t)v4);
}

void sub_1D25FC228()
{
  uint64_t v0;
  uint64_t v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  NSObject *oslog;
  uint64_t v8;

  v1 = v0;
  BSDispatchQueueAssertMain();
  swift_retain_n();
  oslog = sub_1D26CC084();
  v2 = sub_1D26CDCE0();
  if (os_log_type_enabled(oslog, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    v4 = swift_slowAlloc();
    v8 = v4;
    *(_DWORD *)v3 = 136446210;
    v5 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    sub_1D2537880(v5, v6, &v8);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, oslog, v2, "[%{public}s] backgroundViewBuilder changed", v3, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v4, -1, -1);
    MEMORY[0x1D823A5E0](v3, -1, -1);

  }
  else
  {
    swift_release_n();

  }
}

uint64_t (*sub_1D25FC3C4())()
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_1D25FC474;
}

uint64_t sub_1D25FC474()
{
  uint64_t v0;
  uint64_t v2;

  (*(void (**)(uint64_t *__return_ptr))(v0 + 16))(&v2);
  return v2;
}

uint64_t sub_1D25FC4A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  swift_getKeyPath();
  swift_getKeyPath();
  if (a1)
  {
    v4 = swift_allocObject();
    *(_QWORD *)(v4 + 16) = a1;
    *(_QWORD *)(v4 + 24) = a2;
  }
  sub_1D2549DF0(a1);
  swift_retain();
  sub_1D26CC1EC();
  sub_1D25FC228();
  return sub_1D25495F4(a1);
}

uint64_t sub_1D25FC568@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 16))();
  *a1 = result;
  return result;
}

void (*sub_1D25FC590(_QWORD *a1))(uint64_t **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)();

  v3 = malloc(0x28uLL);
  *a1 = v3;
  v3[4] = v1;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v4 = v3[2];
  if (v4)
  {
    v5 = v3[3];
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = v4;
    *(_QWORD *)(v6 + 24) = v5;
    v7 = sub_1D2610750;
  }
  else
  {
    v7 = 0;
    v6 = 0;
  }
  *v3 = v7;
  v3[1] = v6;
  return sub_1D25FC660;
}

void sub_1D25FC660(uint64_t **a1, char a2)
{
  uint64_t *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t (*v7)@<X0>(uint64_t *@<X8>);
  uint64_t v8;
  uint64_t (*v9)@<X0>(uint64_t *@<X8>);
  uint64_t v10;

  v3 = *a1;
  v5 = **a1;
  v4 = (*a1)[1];
  swift_getKeyPath();
  swift_getKeyPath();
  if ((a2 & 1) != 0)
  {
    if (v5)
    {
      v6 = swift_allocObject();
      *(_QWORD *)(v6 + 16) = v5;
      *(_QWORD *)(v6 + 24) = v4;
      v7 = sub_1D2610704;
    }
    else
    {
      v7 = 0;
      v6 = 0;
    }
    v3[2] = (uint64_t)v7;
    v3[3] = v6;
    sub_1D2549DF0(v5);
    swift_retain();
    sub_1D2549DF0(v5);
    sub_1D26CC1EC();
    sub_1D25FC228();
    sub_1D25495F4(v5);
    v10 = *v3;
  }
  else
  {
    if (v5)
    {
      v8 = swift_allocObject();
      *(_QWORD *)(v8 + 16) = v5;
      *(_QWORD *)(v8 + 24) = v4;
      v9 = sub_1D2610704;
    }
    else
    {
      v9 = 0;
      v8 = 0;
    }
    v3[2] = (uint64_t)v9;
    v3[3] = v8;
    sub_1D2549DF0(v5);
    swift_retain();
    sub_1D26CC1EC();
    sub_1D25FC228();
    v10 = v5;
  }
  sub_1D25495F4(v10);
  free(v3);
}

uint64_t sub_1D25FC7C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a5);
  sub_1D26CC1BC();
  return swift_endAccess();
}

uint64_t sub_1D25FC830(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5, uint64_t a6, uint64_t *a7)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  void (*v16)(char *, uint64_t, uint64_t);
  uint64_t v18;

  v9 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v18 - v14;
  v16 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
  v16((char *)&v18 - v14, a1, v9);
  v16(v13, (uint64_t)v15, v9);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a7);
  sub_1D26CC1C8();
  swift_endAccess();
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
}

uint64_t sub_1D25FC948()
{
  return sub_1D25FC95C((uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder, &qword_1ED962E00);
}

uint64_t sub_1D25FC95C(uint64_t a1, uint64_t *a2)
{
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a2);
  sub_1D26CC1BC();
  return swift_endAccess();
}

uint64_t sub_1D25FC9C0(uint64_t a1)
{
  return sub_1D25FC9DC(a1, &qword_1EFC83038, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder, &qword_1ED962E00);
}

uint64_t sub_1D25FC9DC(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v6 = __swift_instantiateConcreteTypeFromMangledName(a2);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v6);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)&v10 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(a4);
  sub_1D26CC1C8();
  swift_endAccess();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
}

uint64_t (*sub_1D25FCAB4(_QWORD *a1))()
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83038);
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder;
  v3[14] = v7;
  v3[15] = v8;
  swift_beginAccess();
  v3[16] = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E00);
  sub_1D26CC1BC();
  swift_endAccess();
  return sub_1D25FB19C;
}

void sub_1D25FCB7C(uint64_t a1, char a2)
{
  _QWORD *v3;
  void (*v4)(_QWORD, _QWORD, _QWORD);
  void *v5;
  void *v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t);

  v3 = *(_QWORD **)a1;
  v4 = *(void (**)(_QWORD, _QWORD, _QWORD))(*(_QWORD *)(*(_QWORD *)a1 + 88) + 16);
  v4(*(_QWORD *)(*(_QWORD *)a1 + 104), v3[14], v3[10]);
  v5 = (void *)v3[13];
  v6 = (void *)v3[14];
  v8 = v3[11];
  v7 = (void *)v3[12];
  v9 = v3[10];
  if ((a2 & 1) != 0)
  {
    v4(v3[12], v3[13], v3[10]);
    swift_beginAccess();
    sub_1D26CC1C8();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
    v10(v5, v9);
  }
  else
  {
    swift_beginAccess();
    sub_1D26CC1C8();
    swift_endAccess();
    v10 = *(void (**)(void *, uint64_t))(v8 + 8);
  }
  v10(v6, v9);
  free(v6);
  free(v5);
  free(v7);
  free(v3);
}

uint64_t LiveWidgetEntryViewModel.viewEntryDidChangePublisher.getter()
{
  return swift_retain();
}

uint64_t sub_1D25FCCA4(uint64_t a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t result;
  uint64_t v10;
  BOOL v11;
  uint64_t v12;
  uint64_t v13;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2537078(a1, (uint64_t)v6, &qword_1ED96D438);
  v7 = *a2;
  v8 = *a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D26106B4((uint64_t)v6, v8, &qword_1ED96D438);
  swift_endAccess();
  result = sub_1D253703C((uint64_t)v6, &qword_1ED96D438);
  v10 = *(_QWORD *)(v7 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
  v11 = __OFADD__(v10, 1);
  v12 = v10 + 1;
  if (v11)
    __break(1u);
  else
    *(_QWORD *)(v7 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber) = v12;
  return result;
}

uint64_t sub_1D25FCD84@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry, &qword_1ED96D438, a1);
}

uint64_t sub_1D25FCD98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  int EnumCaseMultiPayload;
  uint64_t v23;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;

  v45 = a1;
  v44 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  v42 = *(_QWORD *)(v44 - 8);
  MEMORY[0x1E0C80A78](v44);
  v43 = (char *)&v39 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CD56C();
  v40 = *(_QWORD *)(v3 - 8);
  v41 = v3;
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v39 - v10;
  v12 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v39 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v39 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v39 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v21, (uint64_t)v20, &qword_1ED96D438);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
    {
      v23 = sub_1D26CB9DC();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v23 - 8) + 56))(v45, 1, 1, v23);
      return sub_1D253703C((uint64_t)v20, &qword_1ED96D438);
    }
    else
    {
      swift_release();
      v30 = sub_1D26CB9DC();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 56))(v45, 1, 1, v30);
    }
  }
  else
  {
    v26 = (uint64_t)v43;
    v25 = v44;
    v39 = v5;
    sub_1D2539ADC((uint64_t)v20, (uint64_t)v17, type metadata accessor for DefaultWidgetLiveViewEntry);
    sub_1D2534120((uint64_t)v17, (uint64_t)v15, type metadata accessor for DefaultWidgetLiveViewEntry);
    v27 = (uint64_t)v17;
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D2539ADC((uint64_t)v15, v26, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      v28 = v45;
      sub_1D26CD530();
      sub_1D25340E4(v26, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      sub_1D25340E4((uint64_t)v17, type metadata accessor for DefaultWidgetLiveViewEntry);
      v29 = sub_1D26CB9DC();
      return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v28, 0, 1, v29);
    }
    else
    {
      swift_release();
      v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
      sub_1D25384CC((uint64_t)&v15[*(int *)(v31 + 64)], (uint64_t)v11, &qword_1ED96D478);
      sub_1D2537078((uint64_t)v11, (uint64_t)v9, &qword_1ED96D478);
      v32 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v42 + 48))(v9, 1, v25);
      v33 = v45;
      if (v32 == 1)
      {
        sub_1D253703C((uint64_t)v11, &qword_1ED96D478);
        sub_1D25340E4((uint64_t)v17, type metadata accessor for DefaultWidgetLiveViewEntry);
        sub_1D253703C((uint64_t)v9, &qword_1ED96D478);
        v34 = sub_1D26CB9DC();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v34 - 8) + 56))(v33, 1, 1, v34);
      }
      else
      {
        v36 = v40;
        v35 = v41;
        v37 = v39;
        (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v39, &v9[*(int *)(v25 + 20)], v41);
        sub_1D25340E4((uint64_t)v9, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
        sub_1D26CD530();
        (*(void (**)(char *, uint64_t))(v36 + 8))(v37, v35);
        sub_1D253703C((uint64_t)v11, &qword_1ED96D478);
        sub_1D25340E4(v27, type metadata accessor for DefaultWidgetLiveViewEntry);
        v38 = sub_1D26CB9DC();
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v38 - 8) + 56))(v33, 0, 1, v38);
      }
      return sub_1D25340E4((uint64_t)&v15[*(int *)(v31 + 48)], type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    }
  }
}

uint64_t type metadata accessor for EnvironmentWrappedViewableTimelineEntry(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D468);
}

uint64_t type metadata accessor for DefaultWidgetLiveViewEntry(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96D370);
}

uint64_t sub_1D25FD21C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  int EnumCaseMultiPayload;
  char v9;
  uint64_t v11;

  v1 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v7, (uint64_t)v6, &qword_1ED96D438);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload)
  {
    if (EnumCaseMultiPayload == 1)
      sub_1D253703C((uint64_t)v6, &qword_1ED96D438);
    else
      swift_release();
    v9 = 0;
  }
  else
  {
    sub_1D2539ADC((uint64_t)v6, (uint64_t)v3, type metadata accessor for DefaultWidgetLiveViewEntry);
    v9 = DefaultWidgetLiveViewEntry.containsInteractiveControls.getter();
    sub_1D25340E4((uint64_t)v3, type metadata accessor for DefaultWidgetLiveViewEntry);
  }
  return v9 & 1;
}

uint64_t DefaultWidgetLiveViewEntry.containsInteractiveControls.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t (*v27)(_QWORD);
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  char v35;
  char *v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  unsigned int (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  char v45;
  void (*v46)(char *, uint64_t);
  char v47;
  char *v48;
  char *v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;

  v52 = sub_1D26CD56C();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v49 = (char *)&v48 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  v3 = MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v48 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v48 = (char *)&v48 - v7;
  MEMORY[0x1E0C80A78](v6);
  v51 = (char *)&v48 - v8;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v48 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v48 - v13;
  v15 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v48 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = MEMORY[0x1E0C80A78](v17);
  v53 = (uint64_t)&v48 - v21;
  MEMORY[0x1E0C80A78](v20);
  v23 = (char *)&v48 - v22;
  v24 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v24);
  v26 = (char *)&v48 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v0, (uint64_t)v26, v27);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D2539ADC((uint64_t)v26, (uint64_t)v19, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D26CD524();
    v28 = sub_1D26CD254();
    v29 = *(_QWORD *)(v28 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v5, 1, v28) != 1)
    {
      v35 = sub_1D26CD23C();
      sub_1D25340E4((uint64_t)v19, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      (*(void (**)(char *, uint64_t))(v29 + 8))(v5, v28);
      return v35 & 1;
    }
    v30 = (uint64_t)v19;
    goto LABEL_4;
  }
  swift_release();
  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
  v32 = (uint64_t)&v26[*(int *)(v31 + 64)];
  sub_1D2539ADC((uint64_t)&v26[*(int *)(v31 + 48)], (uint64_t)v23, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  sub_1D25384CC(v32, (uint64_t)v14, &qword_1ED96D478);
  sub_1D2537078((uint64_t)v14, (uint64_t)v12, &qword_1ED96D478);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48))(v12, 1, v15) == 1)
  {
    v33 = &qword_1ED96D478;
    v34 = (uint64_t)v12;
LABEL_10:
    sub_1D253703C(v34, v33);
    v44 = v53;
LABEL_11:
    sub_1D2534120((uint64_t)v23, v44, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
LABEL_12:
    sub_1D25340E4(v44, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D253703C((uint64_t)v14, &qword_1ED96D478);
    sub_1D25340E4((uint64_t)v23, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    return 0;
  }
  v37 = v49;
  v38 = v50;
  v39 = v52;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v49, &v12[*(int *)(v15 + 20)], v52);
  sub_1D25340E4((uint64_t)v12, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  v40 = v51;
  sub_1D26CD524();
  (*(void (**)(char *, uint64_t))(v38 + 8))(v37, v39);
  v41 = sub_1D26CD254();
  v42 = *(_QWORD *)(v41 - 8);
  v43 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v42 + 48);
  if (v43(v40, 1, v41) == 1)
  {
    v33 = &qword_1ED96D500;
    v34 = (uint64_t)v40;
    goto LABEL_10;
  }
  v45 = sub_1D26CD23C();
  v46 = *(void (**)(char *, uint64_t))(v42 + 8);
  v46(v40, v41);
  v44 = v53;
  if (v45 == 2)
    goto LABEL_11;
  sub_1D2534120((uint64_t)v23, v53, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  if ((v45 & 1) == 0)
    goto LABEL_12;
  v5 = v48;
  sub_1D26CD524();
  if (v43(v5, 1, v41) == 1)
  {
    sub_1D25340E4(v44, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D253703C((uint64_t)v14, &qword_1ED96D478);
    v30 = (uint64_t)v23;
LABEL_4:
    sub_1D25340E4(v30, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D253703C((uint64_t)v5, &qword_1ED96D500);
    return 0;
  }
  v47 = sub_1D26CD23C();
  sub_1D25340E4(v44, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  sub_1D253703C((uint64_t)v14, &qword_1ED96D478);
  sub_1D25340E4((uint64_t)v23, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  v46(v5, v41);
  if (v47 != 2)
    return v47 & 1;
  return 0;
}

uint64_t sub_1D25FD884@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  id *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  void *v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  id *v31;
  id v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  id *v39;
  uint64_t result;
  id v41;
  _QWORD v42[2];
  char *v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  char *v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  _QWORD v56[3];
  uint64_t v57;
  uint64_t v58;

  v2 = v1;
  v53 = sub_1D26CC438();
  v42[1] = *(_QWORD *)(v53 - 8);
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v51 = sub_1D26CBC4C();
  v49 = *(_QWORD *)(v51 - 8);
  MEMORY[0x1E0C80A78](v51);
  v48 = (char *)v42 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = sub_1D26CBC64();
  v50 = *(_QWORD *)(v52 - 8);
  MEMORY[0x1E0C80A78](v52);
  v47 = (char *)v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD20C();
  MEMORY[0x1E0C80A78](v7);
  v46 = (char *)v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)v42 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v45 = sub_1D26CC2C4();
  v44 = *(_QWORD *)(v45 - 8);
  MEMORY[0x1E0C80A78](v45);
  v43 = (char *)v42 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v13);
  v15 = (id *)((char *)v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = sub_1D26CD14C();
  MEMORY[0x1E0C80A78](v16);
  v17 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
  swift_beginAccess();
  v18 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v18 - 8) + 16))(a1, v17, v18);
  v19 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource;
  sub_1D2538510(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v56);
  v20 = v57;
  v21 = v58;
  __swift_project_boxed_opaque_existential_0(v56, v57);
  v22 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v20, v21);
  sub_1D2534120((uint64_t)v22 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v23 = *v15;
  sub_1D25340E4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  objc_msgSend(v23, sel_family);

  sub_1D26CD158();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  sub_1D26CC630();
  sub_1D2538510(v19, (uint64_t)v56);
  v24 = v57;
  v25 = v58;
  __swift_project_boxed_opaque_existential_0(v56, v57);
  v26 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
  sub_1D2534120((uint64_t)v26 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v27 = v15[1];
  sub_1D25340E4((uint64_t)v15, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  sub_1D26CC654();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v56);
  v28 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v44 + 16))(v43, v28, v45);
  sub_1D26CC480();
  v29 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  sub_1D2537078(v29, (uint64_t)v11, &qword_1ED96B1E0);
  v30 = sub_1D26CB9DC();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 48))(v11, 1, v30);
  sub_1D253703C((uint64_t)v11, &qword_1ED96B1E0);
  sub_1D26CC528();
  swift_beginAccess();
  sub_1D26CC600();
  v31 = (id *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v32 = *v31;
  sub_1D26CD218();
  sub_1D26CC69C();
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__keybagStateProvider), *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__keybagStateProvider + 24));
  v33 = v47;
  sub_1D26CBCD0();
  v34 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  swift_beginAccess();
  v35 = v49;
  v36 = v48;
  v37 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v49 + 16))(v48, v34, v51);
  LOBYTE(v34) = sub_1D26CBC58();
  (*(void (**)(char *, uint64_t))(v35 + 8))(v36, v37);
  (*(void (**)(char *, uint64_t))(v50 + 8))(v33, v52);
  if ((v34 & 1) != 0)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC826C8);
    v38 = swift_allocObject();
    *(_OWORD *)(v38 + 16) = xmmword_1D26D1280;
    sub_1D26CC42C();
    v55 = v38;
  }
  else
  {
    v55 = MEMORY[0x1E0DEE9D8];
  }
  sub_1D25369B0((unint64_t *)&qword_1ED96C308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
  sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  sub_1D26CC504();
  v39 = (id *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties);
  result = swift_beginAccess();
  if (*v39)
  {
    v41 = *v39;
    return sub_1D26CC6FC();
  }
  return result;
}

id sub_1D25FDF6C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2538510(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v10);
  v4 = v11;
  v5 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  sub_1D2534120((uint64_t)v6 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v7 = *v3;
  sub_1D25340E4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

id sub_1D25FE058()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  id *v3;
  uint64_t v4;
  uint64_t v5;
  void *v6;
  id v7;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  v1 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v1);
  v3 = (id *)((char *)&v10[-1] - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2538510(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v10);
  v4 = v11;
  v5 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  v6 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(v4, v5);
  sub_1D2534120((uint64_t)v6 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v7 = v3[1];
  sub_1D25340E4((uint64_t)v3, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v7;
}

uint64_t sub_1D25FE144@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  _QWORD v9[3];
  uint64_t v10;
  uint64_t v11;

  sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v9);
  v3 = v10;
  v4 = v11;
  __swift_project_boxed_opaque_existential_0(v9, v10);
  v5 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = &v5[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType];
  swift_beginAccess();
  v7 = sub_1D26CD488();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, v6, v7);

  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v9);
}

uint64_t sub_1D25FE1FC()
{
  return sub_1D25FE2EC(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry_contentDidChangePublisher);
}

uint64_t sub_1D25FE208@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v10);
  v3 = v11;
  v4 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  v5 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = *(_QWORD *)&v5[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = (uint64_t)&v5[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content];
  swift_beginAccess();
  sub_1D2537078(v8, a1, &qword_1ED96BF68);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));

  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
}

uint64_t sub_1D25FE2E0()
{
  return sub_1D25FE2EC(&OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorDidChangePublisher);
}

uint64_t sub_1D25FE2EC(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v8);
  v3 = v9;
  v4 = v10;
  __swift_project_boxed_opaque_existential_0(v8, v9);
  v5 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v4 + 8))(v3, v4);
  v6 = *(_QWORD *)&v5[*a1];
  swift_retain();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
  return v6;
}

void *sub_1D25FE374()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  void *v6;
  os_unfair_lock_s *v7;
  id v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1D2538510(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v10);
  v1 = v11;
  v2 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  v3 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v2 + 8))(v1, v2);
  v4 = *(_QWORD *)&v3[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(void **)&v3[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  v7 = *(os_unfair_lock_s **)(v4 + 16);
  v8 = v6;
  os_unfair_lock_unlock(v7);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v6;
}

uint64_t sub_1D25FE42C()
{
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC70, &qword_1ED96FC80, MEMORY[0x1E0C95F48]);
  return sub_1D26CC204();
}

uint64_t sub_1D25FE4A0(unsigned __int8 *a1, _QWORD *a2)
{
  int v2;
  _BYTE *v3;
  uint64_t result;
  int v5;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  result = swift_beginAccess();
  v5 = *v3;
  *v3 = v2;
  if (v2 != v5)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    sub_1D26CC1A4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D25FE554()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D25FE598(char a1)
{
  uint64_t v1;
  int v3;
  _BYTE *v4;
  uint64_t result;
  int v6;

  v3 = a1 & 1;
  v4 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  result = swift_beginAccess();
  v6 = *v4;
  *v4 = a1;
  if (v6 != v3)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    sub_1D26CC1A4();
    return swift_release();
  }
  return result;
}

void (*sub_1D25FE64C(_QWORD *a1))(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D25FE6B8;
}

void sub_1D25FE6B8(uint64_t a1)
{
  void *v1;
  uint64_t v2;
  uint64_t v3;
  int v4;
  int v5;

  v1 = *(void **)a1;
  v3 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v4 = *(unsigned __int8 *)(*(_QWORD *)a1 + 40);
  v5 = *(unsigned __int8 *)(v3 + v2);
  *(_BYTE *)(v3 + v2) = v4;
  if (v4 != v5)
  {
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
    sub_1D26CC1A4();
    swift_release();
  }
  free(v1);
}

uint64_t sub_1D25FE754(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D26CC2C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1D25FE818@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25452C0(&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8], a1);
}

void sub_1D25FE82C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  unsigned int (*v17)(uint64_t, uint64_t, uint64_t);
  char v18;
  void (*v19)(char *, uint64_t);
  NSObject *v20;
  os_log_type_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v2 = v1;
  v4 = sub_1D26CC2C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B268);
  v8 = MEMORY[0x1E0C80A78](v30);
  v29 = (uint64_t)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v28 - v10;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E20);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)&v28 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v15 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme;
  swift_beginAccess();
  v16 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1D2537078(a1, (uint64_t)v14, &qword_1ED96B268);
  sub_1D2537078(v15, v16, &qword_1ED96B268);
  v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1)
    {
      sub_1D253703C((uint64_t)v14, &qword_1ED96B268);
      return;
    }
  }
  else
  {
    sub_1D2537078((uint64_t)v14, (uint64_t)v11, &qword_1ED96B268);
    if (v17(v16, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
      sub_1D25369B0(&qword_1EFC83070, (uint64_t (*)(uint64_t))MEMORY[0x1E0CD86F8], MEMORY[0x1E0CD8718]);
      v18 = sub_1D26CD908();
      v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v11, v4);
      sub_1D253703C((uint64_t)v14, &qword_1ED96B268);
      if ((v18 & 1) != 0)
        return;
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v11, v4);
  }
  sub_1D253703C((uint64_t)v14, &qword_1ED962E20);
LABEL_8:
  sub_1D2608154();
  swift_retain_n();
  v20 = sub_1D26CC084();
  v21 = sub_1D26CDCE0();
  if (os_log_type_enabled(v20, v21))
  {
    v22 = swift_slowAlloc();
    v23 = swift_slowAlloc();
    v32 = v23;
    *(_DWORD *)v22 = 136446466;
    v24 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v25 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    v31 = sub_1D2537880(v24, v25, &v32);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v22 + 12) = 2082;
    sub_1D2537078(v15, v29, &qword_1ED96B268);
    v26 = sub_1D26CD98C();
    v31 = sub_1D2537880(v26, v27, &v32);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v20, v21, "[%{public}s] preferred color scheme changed %{public}s)", (uint8_t *)v22, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v23, -1, -1);
    MEMORY[0x1D823A5E0](v22, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v32) = 5;
  sub_1D26083C0((char *)&v32);
}

uint64_t sub_1D25FEC64@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme, &qword_1ED96B268, a1);
}

uint64_t sub_1D25FEC78(uint64_t a1)
{
  return sub_1D2600E28(a1, &qword_1ED96B268, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme, (void (*)(_BYTE *))sub_1D25FE82C);
}

void (*sub_1D25FEC94(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B268) - 8) + 64);
  v3[10] = malloc(v4);
  v3[11] = malloc(v4);
  v5 = malloc(v4);
  v6 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme;
  v3[12] = v5;
  v3[13] = v6;
  v7 = v1 + v6;
  swift_beginAccess();
  sub_1D2537078(v7, (uint64_t)v5, &qword_1ED96B268);
  return sub_1D25FED48;
}

void sub_1D25FED48(uint64_t a1, char a2)
{
  sub_1D2600FDC(a1, a2, &qword_1ED96B268, (void (*)(void *))sub_1D25FE82C);
}

void sub_1D25FED5C(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  int v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  uint64_t v12;

  v2 = v1;
  v3 = a1 & 1;
  v4 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused);
  swift_beginAccess();
  v5 = *v4;
  if (v5 != v3)
  {
    swift_retain_n();
    v6 = sub_1D26CC084();
    v7 = sub_1D26CDCE0();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v12 = v9;
      *(_DWORD *)v8 = 136446466;
      v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v10, v11, &v12);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v8 + 12) = 1026;
      swift_release();
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v6, v7, "[%{public}s] content paused changed %{BOOL,public}d)", (uint8_t *)v8, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v9, -1, -1);
      MEMORY[0x1D823A5E0](v8, -1, -1);

      if ((v5 & 1) != 0)
        return;
    }
    else
    {

      swift_release_n();
      if ((v5 & 1) != 0)
        return;
    }
    LOBYTE(v12) = 6;
    sub_1D26083C0((char *)&v12);
  }
}

uint64_t sub_1D25FEF54()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D25FEF98(char a1)
{
  return sub_1D2601F84(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused, (uint64_t (*)(uint64_t))sub_1D25FED5C);
}

void (*sub_1D25FEFAC(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D25FF018;
}

void sub_1D25FF018(uint64_t a1, uint64_t a2)
{
  sub_1D2602054(a1, a2, (void (*)(uint64_t))sub_1D25FED5C);
}

void sub_1D25FF024(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  unsigned __int8 *v15;
  NSObject *v16;
  os_log_type_t v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  uint64_t v21;
  os_log_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  _QWORD v27[2];
  os_log_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  uint64_t v34[3];

  v2 = v1;
  v3 = a1 & 1;
  v4 = sub_1D26CC438();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)v27 - v9;
  v11 = sub_1D26CC7A4();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)v27 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v15 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment);
  swift_beginAccess();
  if (*v15 != v3)
  {
    swift_retain_n();
    v16 = sub_1D26CC084();
    v17 = sub_1D26CDCE0();
    v32 = v17;
    if (os_log_type_enabled(v16, v17))
    {
      v18 = swift_slowAlloc();
      v31 = v4;
      v19 = v18;
      v29 = swift_slowAlloc();
      v34[0] = v29;
      *(_DWORD *)v19 = 136446466;
      v27[1] = v19 + 4;
      v28 = v16;
      v30 = v5;
      v21 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v33 = sub_1D2537880(v21, v20, v34);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v19 + 12) = 1026;
      LODWORD(v20) = *v15;
      swift_release();
      LODWORD(v33) = v20;
      v5 = v30;
      sub_1D26CDF50();
      swift_release();
      v22 = v28;
      _os_log_impl(&dword_1D2531000, v28, (os_log_type_t)v32, "[%{public}s] canAppearInSecureEnvironment changed %{BOOL,public}d)", (uint8_t *)v19, 0x12u);
      v23 = v29;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v23, -1, -1);
      v24 = v19;
      v4 = v31;
      MEMORY[0x1D823A5E0](v24, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v25 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))(v14, v25, v11);
    sub_1D26CC4F8();
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    sub_1D26CC42C();
    sub_1D25369B0((unint64_t *)&qword_1ED96C308, (uint64_t (*)(uint64_t))MEMORY[0x1E0CDA008], MEMORY[0x1E0CDA028]);
    LOBYTE(v25) = sub_1D26CDFBC();
    v26 = *(void (**)(char *, uint64_t))(v5 + 8);
    v26(v8, v4);
    v26(v10, v4);
    if ((v25 & 1) != 0)
    {
      LOBYTE(v33) = 7;
      sub_1D26083C0((char *)&v33);
    }
  }
}

uint64_t sub_1D25FF36C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D25FF3B0(char a1)
{
  return sub_1D2601F84(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment, (uint64_t (*)(uint64_t))sub_1D25FF024);
}

void (*sub_1D25FF3C4(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D25FF430;
}

void sub_1D25FF430(uint64_t a1, uint64_t a2)
{
  sub_1D2602054(a1, a2, (void (*)(uint64_t))sub_1D25FF024);
}

uint64_t sub_1D25FF43C(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  void (*v11)(_BYTE *, uint64_t, uint64_t);
  uint64_t v12;
  void (*v13)(_BYTE *, uint64_t);
  _BYTE v15[24];

  v4 = sub_1D26CBC4C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v15[-v9];
  v11 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v5 + 16);
  v11(&v15[-v9], a1, v4);
  v12 = *a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  swift_beginAccess();
  v11(v8, v12, v4);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v5 + 24))(v12, v10, v4);
  swift_endAccess();
  sub_1D25FF56C();
  v13 = *(void (**)(_BYTE *, uint64_t))(v5 + 8);
  v13(v10, v4);
  return ((uint64_t (*)(_BYTE *, uint64_t))v13)(v8, v4);
}

void sub_1D25FF56C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t (*v3)(uint64_t);
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  void (*v8)(char *, uint64_t, uint64_t);
  char v9;
  NSObject *v10;
  os_log_type_t v11;
  int v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  int v22;
  uint64_t v23;
  uint64_t v24;

  v1 = v0;
  v2 = sub_1D26CBC4C();
  v3 = (uint64_t (*)(uint64_t))MEMORY[0x1E0D0F8A8];
  v4 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v7 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  swift_beginAccess();
  v8 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
  v8(v6, v7, v2);
  sub_1D25369B0(&qword_1ED96B048, v3, MEMORY[0x1E0D0F8B8]);
  v9 = sub_1D26CD908();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v2);
  if ((v9 & 1) == 0)
  {
    swift_retain_n();
    v10 = sub_1D26CC084();
    v11 = sub_1D26CDCE0();
    v12 = v11;
    if (os_log_type_enabled(v10, v11))
    {
      v13 = swift_slowAlloc();
      v22 = v12;
      v14 = v13;
      v21 = swift_slowAlloc();
      v24 = v21;
      *(_DWORD *)v14 = 136446466;
      v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v23 = sub_1D2537880(v16, v15, &v24);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v14 + 12) = 2082;
      v8(v6, v7, v2);
      v17 = sub_1D26CD98C();
      v23 = sub_1D2537880(v17, v18, &v24);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v10, (os_log_type_t)v22, "[%{public}s] keybagLockPolicy changed %{public}s)", (uint8_t *)v14, 0x16u);
      v19 = v21;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v19, -1, -1);
      MEMORY[0x1D823A5E0](v14, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v24) = 8;
    sub_1D26083C0((char *)&v24);
  }
}

uint64_t sub_1D25FF82C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25452C0(&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy, (uint64_t (*)(_QWORD))MEMORY[0x1E0D0F8A8], a1);
}

uint64_t sub_1D25FF840(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t);
  _BYTE v10[24];

  v3 = sub_1D26CBC4C();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v10[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v7, v3);
  swift_beginAccess();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v4 + 24))(v7, a1, v3);
  swift_endAccess();
  sub_1D25FF56C();
  v8 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v8(a1, v3);
  return ((uint64_t (*)(_BYTE *, uint64_t))v8)(v6, v3);
}

void (*sub_1D25FF934(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  size_t v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(void *, uint64_t, uint64_t);

  v3 = malloc(0x88uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = sub_1D26CBC4C();
  v3[10] = v4;
  v5 = *(_QWORD *)(v4 - 8);
  v3[11] = v5;
  v6 = *(_QWORD *)(v5 + 64);
  v3[12] = malloc(v6);
  v3[13] = malloc(v6);
  v7 = malloc(v6);
  v8 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  v3[14] = v7;
  v3[15] = v8;
  v9 = v1 + v8;
  swift_beginAccess();
  v10 = *(void (**)(void *, uint64_t, uint64_t))(v5 + 16);
  v3[16] = v10;
  v10(v7, v9, v4);
  return sub_1D25FF9FC;
}

void sub_1D25FF9FC(uint64_t a1, char a2)
{
  void *v2;
  void (*v3)(void *, void *, uint64_t);
  void *v4;
  void *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  void (*v10)(void *, uint64_t);
  void *v11;

  v2 = *(void **)a1;
  v3 = *(void (**)(void *, void *, uint64_t))(*(_QWORD *)a1 + 128);
  v4 = *(void **)(*(_QWORD *)a1 + 104);
  v5 = *(void **)(*(_QWORD *)a1 + 112);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 88);
  v6 = *(void **)(*(_QWORD *)a1 + 96);
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v9 = (void *)(*(_QWORD *)(*(_QWORD *)a1 + 72) + *(_QWORD *)(*(_QWORD *)a1 + 120));
  if ((a2 & 1) != 0)
  {
    v3(*(void **)(*(_QWORD *)a1 + 104), v5, v8);
    v3(v6, v9, v8);
    swift_beginAccess();
    (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v4, v8);
    swift_endAccess();
    sub_1D25FF56C();
    v10 = *(void (**)(void *, uint64_t))(v7 + 8);
    v10(v4, v8);
    v10(v6, v8);
    v11 = v5;
  }
  else
  {
    v3(*(void **)(*(_QWORD *)a1 + 104), v9, v8);
    swift_beginAccess();
    (*(void (**)(void *, void *, uint64_t))(v7 + 24))(v9, v5, v8);
    swift_endAccess();
    sub_1D25FF56C();
    v10 = *(void (**)(void *, uint64_t))(v7 + 8);
    v10(v5, v8);
    v11 = v4;
  }
  v10(v11, v8);
  free(v5);
  free(v4);
  free(v6);
  free(v2);
}

void sub_1D25FFB54(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  _BYTE *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = v1;
  v3 = a1 & 1;
  BSDispatchQueueAssertMain();
  v4 = (_BYTE *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground);
  swift_beginAccess();
  if (*v4 != v3)
  {
    swift_retain_n();
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDCE0();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136446466;
      v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v9, v10, &v11);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v7 + 12) = 1026;
      swift_release();
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v5, v6, "[%{public}s] isForeground changed (%{BOOL,public}d)", (uint8_t *)v7, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v8, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    if (*v4 == 1)
    {
      LOBYTE(v11) = 2;
      sub_1D26083C0((char *)&v11);
    }
  }
}

uint64_t sub_1D25FFD54()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D25FFD98(char a1)
{
  return sub_1D2601F84(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground, (uint64_t (*)(uint64_t))sub_1D25FFB54);
}

void (*sub_1D25FFDAC(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D25FFE18;
}

void sub_1D25FFE18(uint64_t a1, uint64_t a2)
{
  sub_1D2602054(a1, a2, (void (*)(uint64_t))sub_1D25FFB54);
}

void sub_1D25FFE24(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  _BYTE *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20[3];

  v2 = v1;
  v3 = a1 & 1;
  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v8 = (_BYTE *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance);
  swift_beginAccess();
  if (*v8 != v3)
  {
    swift_retain_n();
    v9 = sub_1D26CC084();
    v10 = sub_1D26CDCE0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20[0] = v18;
      *(_DWORD *)v11 = 136446466;
      v17[1] = v11 + 4;
      v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v19 = sub_1D2537880(v13, v12, v20);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v11 + 12) = 1026;
      LODWORD(v12) = *v8;
      swift_release();
      LODWORD(v19) = v12;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v9, v10, "[%{public}s] supports low luminance changed (%{BOOL,public}d)", (uint8_t *)v11, 0x12u);
      v14 = v18;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v14, -1, -1);
      MEMORY[0x1D823A5E0](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    v15 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    LOBYTE(v15) = sub_1D26CC51C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v15 & 1) != 0)
    {
      if (*v8)
        v16 = 14;
      else
        v16 = 15;
      LOBYTE(v19) = v16;
      sub_1D26083C0((char *)&v19);
    }
  }
}

uint64_t sub_1D26000B8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D26000FC(char a1)
{
  return sub_1D2601F84(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance, (uint64_t (*)(uint64_t))sub_1D25FFE24);
}

void (*sub_1D2600110(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D260017C;
}

void sub_1D260017C(uint64_t a1, uint64_t a2)
{
  sub_1D2602054(a1, a2, (void (*)(uint64_t))sub_1D25FFE24);
}

void sub_1D2600188(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  unsigned __int8 *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  int v14;
  uint64_t v15;
  char v16;
  _QWORD v17[2];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;

  v2 = v1;
  v3 = a1 & 1;
  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v8 = (unsigned __int8 *)(v2
                         + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment);
  swift_beginAccess();
  if (*v8 != v3)
  {
    swift_retain_n();
    v9 = sub_1D26CC084();
    v10 = sub_1D26CDCE0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v20 = v18;
      *(_DWORD *)v11 = 136446466;
      v17[1] = v11 + 4;
      v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v19 = sub_1D2537880(v13, v12, &v20);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v11 + 12) = 1026;
      v14 = *v8;
      swift_release();
      LODWORD(v19) = v14;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v9, v10, "[%{public}s] prefersUnredactedContentInLowLuminanceEnvironment changed (%{BOOL,public}d)", (uint8_t *)v11, 0x12u);
      v15 = v18;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v15, -1, -1);
      MEMORY[0x1D823A5E0](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1D25FD884((uint64_t)v7);
    v16 = sub_1D26CC51C();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    if ((v16 & 1) != 0)
    {
      LOBYTE(v20) = 16;
      sub_1D26083C0((char *)&v20);
    }
  }
}

uint64_t sub_1D26003E8()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D260042C(char a1)
{
  return sub_1D2601F84(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment, (uint64_t (*)(uint64_t))sub_1D2600188);
}

void (*sub_1D2600440(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D26004AC;
}

void sub_1D26004AC(uint64_t a1, uint64_t a2)
{
  sub_1D2602054(a1, a2, (void (*)(uint64_t))sub_1D2600188);
}

uint64_t sub_1D26004B8(uint64_t *a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v3;

  v2 = *a1;
  v3 = (_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDateDidChangePublisher);
  swift_beginAccess();
  *v3 = v2;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D2600520()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1D2600568(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = (_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDateDidChangePublisher);
  swift_beginAccess();
  *v3 = a1;
  return swift_release();
}

uint64_t (*sub_1D26005B8())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D26005FC(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t *a5, _QWORD *a6, void (*a7)(_BYTE *))
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  _BYTE *v15;
  uint64_t v16;
  _BYTE *v17;
  uint64_t v18;
  _BYTE v20[24];

  v12 = __swift_instantiateConcreteTypeFromMangledName(a5);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = &v20[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v13);
  v17 = &v20[-v16];
  sub_1D2537078(a1, (uint64_t)&v20[-v16], a5);
  v18 = *a2 + *a6;
  swift_beginAccess();
  sub_1D2537078(v18, (uint64_t)v15, a5);
  swift_beginAccess();
  sub_1D26106B4((uint64_t)v17, v18, a5);
  swift_endAccess();
  a7(v15);
  sub_1D253703C((uint64_t)v17, a5);
  return sub_1D253703C((uint64_t)v15, a5);
}

void sub_1D2600724(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  void (*v36)(char *, uint64_t);
  uint64_t v37;
  id v38;
  void *v39;
  id v40;
  unint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  unsigned int v45;
  uint64_t v46;
  unsigned int v47;
  char v48;
  uint64_t *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;

  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v49 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v51 = (uint64_t)&v49 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v52 = (uint64_t)&v49 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v54 = (uint64_t)&v49 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v53 = (uint64_t)&v49 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v49 - v16;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v18);
  v20 = (char *)&v49 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v56 = v1;
  v21 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  v22 = (uint64_t)&v20[*(int *)(v18 + 48)];
  v55 = a1;
  sub_1D2537078(a1, (uint64_t)v20, &qword_1ED96B1E0);
  v57 = v21;
  sub_1D2537078(v21, v22, &qword_1ED96B1E0);
  v23 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  if (v23((uint64_t)v20, 1, v3) == 1)
  {
    if (v23(v22, 1, v3) == 1)
    {
      sub_1D253703C((uint64_t)v20, &qword_1ED96B1E0);
      return;
    }
  }
  else
  {
    sub_1D2537078((uint64_t)v20, (uint64_t)v17, &qword_1ED96B1E0);
    if (v23(v22, 1, v3) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v6, v22, v3);
      sub_1D25369B0((unint64_t *)&qword_1ED96B1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
      v35 = sub_1D26CD908();
      v36 = *(void (**)(char *, uint64_t))(v4 + 8);
      v36(v6, v3);
      v36(v17, v3);
      sub_1D253703C((uint64_t)v20, &qword_1ED96B1E0);
      v24 = v56;
      if ((v35 & 1) != 0)
        return;
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v4 + 8))(v17, v3);
  }
  sub_1D253703C((uint64_t)v20, &qword_1ED96B1E8);
  v24 = v56;
LABEL_7:
  swift_retain_n();
  v25 = sub_1D26CC084();
  v26 = sub_1D26CDD04();
  if (os_log_type_enabled(v25, (os_log_type_t)v26))
  {
    LODWORD(v56) = v26;
    v27 = swift_slowAlloc();
    v50 = swift_slowAlloc();
    v59 = v50;
    *(_DWORD *)v27 = 136446466;
    v29 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v28 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    v58 = sub_1D2537880(v29, v28, &v59);
    v49 = &v59;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v27 + 12) = 2082;
    v30 = v57;
    v31 = v53;
    sub_1D2537078(v57, v53, &qword_1ED96B1E0);
    LODWORD(v28) = v23(v31, 1, v3);
    sub_1D253703C(v31, &qword_1ED96B1E0);
    if ((_DWORD)v28 == 1)
    {
      v32 = 0xE300000000000000;
      v33 = 7104878;
    }
    else
    {
      v37 = v54;
      sub_1D2537078(v30, v54, &qword_1ED96B1E0);
      if (v23(v37, 1, v3) == 1)
      {
        swift_release();
        __break(1u);
        return;
      }
      if (qword_1ED96C7C0 != -1)
        swift_once();
      v38 = (id)qword_1ED96C848;
      v39 = (void *)sub_1D26CB940();
      v40 = objc_msgSend(v38, sel_stringFromDate_, v39);

      v33 = sub_1D26CD938();
      v32 = v41;

      (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v54, v3);
    }
    v34 = v55;
    v58 = sub_1D2537880(v33, v32, &v59);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v25, (os_log_type_t)v56, "[%{public}s] AoD override date changed (%{public}s)", (uint8_t *)v27, 0x16u);
    v42 = v50;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v42, -1, -1);
    MEMORY[0x1D823A5E0](v27, -1, -1);

  }
  else
  {

    swift_release_n();
    v34 = v55;
  }
  v43 = v57;
  if (v23(v34, 1, v3) == 1
    && (v44 = v52,
        sub_1D2537078(v43, v52, &qword_1ED96B1E0),
        v45 = v23(v44, 1, v3),
        sub_1D253703C(v44, &qword_1ED96B1E0),
        v45 != 1))
  {
    v48 = 14;
  }
  else
  {
    if (v23(v34, 1, v3) == 1
      || (v46 = v51,
          sub_1D2537078(v43, v51, &qword_1ED96B1E0),
          v47 = v23(v46, 1, v3),
          sub_1D253703C(v46, &qword_1ED96B1E0),
          v47 != 1))
    {
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
      sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
      sub_1D26CC1A4();
      swift_release();
      return;
    }
    v48 = 15;
  }
  LOBYTE(v59) = v48;
  sub_1D26083C0((char *)&v59);
}

uint64_t sub_1D2600DF8@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate, &qword_1ED96B1E0, a1);
}

uint64_t sub_1D2600E0C(uint64_t a1)
{
  return sub_1D2600E28(a1, &qword_1ED96B1E0, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate, (void (*)(_BYTE *))sub_1D2600724);
}

uint64_t sub_1D2600E28(uint64_t a1, uint64_t *a2, _QWORD *a3, void (*a4)(_BYTE *))
{
  uint64_t v4;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  _BYTE v14[24];

  v9 = __swift_instantiateConcreteTypeFromMangledName(a2);
  MEMORY[0x1E0C80A78](v9);
  v11 = &v14[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = v4 + *a3;
  swift_beginAccess();
  sub_1D2537078(v12, (uint64_t)v11, a2);
  swift_beginAccess();
  sub_1D26106B4(a1, v12, a2);
  swift_endAccess();
  a4(v11);
  sub_1D253703C(a1, a2);
  return sub_1D253703C((uint64_t)v11, a2);
}

void (*sub_1D2600F14(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  uint64_t v7;

  v3 = malloc(0x70uLL);
  *a1 = v3;
  v3[9] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0) - 8) + 64);
  v3[10] = malloc(v4);
  v3[11] = malloc(v4);
  v5 = malloc(v4);
  v6 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  v3[12] = v5;
  v3[13] = v6;
  v7 = v1 + v6;
  swift_beginAccess();
  sub_1D2537078(v7, (uint64_t)v5, &qword_1ED96B1E0);
  return sub_1D2600FC8;
}

void sub_1D2600FC8(uint64_t a1, char a2)
{
  sub_1D2600FDC(a1, a2, &qword_1ED96B1E0, (void (*)(void *))sub_1D2600724);
}

void sub_1D2600FDC(uint64_t a1, char a2, uint64_t *a3, void (*a4)(void *))
{
  void *v6;
  uint64_t v7;
  void *v8;
  void *v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;

  v6 = *(void **)a1;
  v8 = *(void **)(*(_QWORD *)a1 + 96);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 104);
  v9 = *(void **)(*(_QWORD *)a1 + 80);
  v10 = *(void **)(*(_QWORD *)a1 + 88);
  v11 = *(_QWORD *)(*(_QWORD *)a1 + 72) + v7;
  if ((a2 & 1) != 0)
  {
    sub_1D2537078(*(_QWORD *)(*(_QWORD *)a1 + 96), (uint64_t)v10, a3);
    sub_1D2537078(v11, (uint64_t)v9, a3);
    swift_beginAccess();
    sub_1D26106B4((uint64_t)v10, v11, a3);
    swift_endAccess();
    a4(v9);
    sub_1D253703C((uint64_t)v10, a3);
    v12 = (uint64_t)v9;
    v13 = (uint64_t)v8;
  }
  else
  {
    sub_1D2537078(*(_QWORD *)(*(_QWORD *)a1 + 72) + v7, (uint64_t)v10, a3);
    swift_beginAccess();
    sub_1D26106B4((uint64_t)v8, v11, a3);
    swift_endAccess();
    a4(v10);
    v12 = (uint64_t)v8;
    v13 = (uint64_t)v10;
  }
  sub_1D253703C(v12, a3);
  sub_1D253703C(v13, a3);
  free(v8);
  free(v10);
  free(v9);
  free(v6);
}

void sub_1D2601124(void **a1, _QWORD *a2)
{
  void *v2;
  void **v3;
  void *v4;
  id v5;

  v2 = *a1;
  v3 = (void **)(*a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v4 = *v3;
  *v3 = v2;
  v5 = v2;
  sub_1D2601198();

}

void sub_1D2601198()
{
  uint64_t v0;
  uint64_t v1;
  id *v2;
  id v3;
  id v4;
  char v5;
  NSObject *v6;
  os_log_type_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  id v12;
  uint64_t v13;
  unint64_t v14;
  unint64_t v15;
  uint64_t v16;

  v1 = v0;
  BSDispatchQueueAssertMain();
  v2 = (id *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v3 = *v2;
  sub_1D2539514(0, &qword_1ED962FA8);
  v4 = v3;
  v5 = sub_1D26CDECC();

  if ((v5 & 1) == 0)
  {
    swift_retain_n();
    v6 = sub_1D26CC084();
    v7 = sub_1D26CDD04();
    if (os_log_type_enabled(v6, v7))
    {
      v8 = swift_slowAlloc();
      v9 = swift_slowAlloc();
      v16 = v9;
      *(_DWORD *)v8 = 136446466;
      v10 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v11 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v10, v11, &v16);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v8 + 12) = 2082;
      v12 = objc_msgSend(*v2, sel_description);
      v13 = sub_1D26CD938();
      v15 = v14;

      sub_1D2537880(v13, v15, &v16);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v6, v7, "[%{public}s] renderScheme changed (%{public}s)", (uint8_t *)v8, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v9, -1, -1);
      MEMORY[0x1D823A5E0](v8, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    sub_1D2607EA4();
    LOBYTE(v16) = 17;
    sub_1D26083C0((char *)&v16);
  }
}

id sub_1D2601410()
{
  uint64_t v0;
  id *v1;

  v1 = (id *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  return *v1;
}

void sub_1D2601454(void *a1)
{
  uint64_t v1;
  void **v3;
  void *v4;
  id v5;

  v3 = (void **)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v4 = *v3;
  *v3 = a1;
  v5 = a1;
  sub_1D2601198();

}

void (*sub_1D26014C0(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess();
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1D2601534;
}

void sub_1D2601534(uint64_t a1, char a2)
{
  void *v3;
  void *v4;
  void **v5;
  uint64_t v6;
  uint64_t v7;
  void *v8;
  id v9;
  void *v10;
  id v11;

  v3 = *(void **)a1;
  v5 = (void **)(*(_QWORD *)a1 + 24);
  v4 = *v5;
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v8 = *(void **)(v7 + v6);
  *(_QWORD *)(v7 + v6) = *v5;
  v9 = v4;
  v10 = v9;
  if ((a2 & 1) != 0)
  {
    v11 = v9;
    sub_1D2601198();

    v8 = *v5;
  }
  else
  {
    sub_1D2601198();

  }
  free(v3);
}

void sub_1D26015BC(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id v5;
  id v6;
  id v7;
  char v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  id v20;
  uint64_t v21;
  uint64_t v22;

  v2 = v1;
  BSDispatchQueueAssertMain();
  v4 = (id *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters);
  swift_beginAccess();
  v5 = *v4;
  if (!a1)
  {
    if (!v5)
      return;
LABEL_6:
    swift_retain_n();
    v9 = sub_1D26CC084();
    v10 = sub_1D26CDCE0();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v12 = swift_slowAlloc();
      v22 = v12;
      *(_DWORD *)v11 = 136446466;
      v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v13, v14, &v22);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2082;
      v21 = v12;
      if (*v4)
      {
        v15 = objc_msgSend(*v4, sel_description);
        v16 = sub_1D26CD938();
        v18 = v17;

      }
      else
      {
        v18 = 0xE300000000000000;
        v16 = 7104878;
      }
      sub_1D2537880(v16, v18, &v22);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v9, v10, "[%{public}s] tintParameters changed (%{public}s)", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v21, -1, -1);
      MEMORY[0x1D823A5E0](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    if (sub_1D2602CFC())
    {
      v19 = *v4;
      if (!*v4)
      {
        swift_release();
        if (*v4)
        {
LABEL_16:
          if (a1)
            return;
          goto LABEL_17;
        }
LABEL_20:
        if (!a1)
          return;
LABEL_17:
        LOBYTE(v22) = 10;
        sub_1D26083C0((char *)&v22);
        return;
      }
      swift_getKeyPath();
      swift_getKeyPath();
      v22 = (uint64_t)v19;
      v20 = v19;
      sub_1D26CC1EC();
    }
    if (*v4)
      goto LABEL_16;
    goto LABEL_20;
  }
  if (!v5)
    goto LABEL_6;
  sub_1D2539514(0, (unint64_t *)&qword_1ED96C760);
  v6 = v5;
  v7 = a1;
  v8 = sub_1D26CDECC();

  if ((v8 & 1) == 0)
    goto LABEL_6;
}

void *sub_1D26018D8()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D2601924(void *a1)
{
  sub_1D26023DC(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters, sub_1D26015BC);
}

void (*sub_1D2601938(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess();
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1D26019AC;
}

void sub_1D26019AC(uint64_t a1, char a2)
{
  sub_1D26024D0(a1, a2, sub_1D26015BC);
}

void sub_1D26019B8(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  id *v4;
  id v5;
  id v6;
  id v7;
  char v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  id v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;

  v2 = v1;
  BSDispatchQueueAssertMain();
  v4 = (id *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters);
  swift_beginAccess();
  v5 = *v4;
  if (a1)
  {
    if (v5)
    {
      sub_1D2539514(0, &qword_1EFC83068);
      v6 = v5;
      v7 = a1;
      v8 = sub_1D26CDECC();

      if ((v8 & 1) != 0)
        return;
    }
  }
  else if (!v5)
  {
    return;
  }
  swift_retain_n();
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDCE0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    sub_1D2537880(v13, v14, &v19);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2082;
    if (*v4)
    {
      v15 = objc_msgSend(*v4, sel_description);
      v16 = sub_1D26CD938();
      v18 = v17;

    }
    else
    {
      v18 = 0xE300000000000000;
      v16 = 7104878;
    }
    sub_1D2537880(v16, v18, &v19);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v9, v10, "[%{public}s] inlineTextParameters changed (%{public}s)", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v12, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v19) = 11;
  sub_1D26083C0((char *)&v19);
}

void *sub_1D2601C58()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D2601CA4(void *a1)
{
  sub_1D26023DC(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters, sub_1D26019B8);
}

void (*sub_1D2601CB8(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess();
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1D2601D2C;
}

void sub_1D2601D2C(uint64_t a1, char a2)
{
  sub_1D26024D0(a1, a2, sub_1D26019B8);
}

void sub_1D2601D38(char a1)
{
  uint64_t v1;
  uint64_t v2;
  int v3;
  unsigned __int8 *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;

  v2 = v1;
  v3 = a1 & 1;
  BSDispatchQueueAssertMain();
  v4 = (unsigned __int8 *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel);
  swift_beginAccess();
  if (*v4 != v3)
  {
    swift_retain_n();
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDCE0();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v11 = v8;
      *(_DWORD *)v7 = 136446466;
      v9 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v10 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v9, v10, &v11);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      *(_WORD *)(v7 + 12) = 1026;
      swift_release();
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v5, v6, "[%{public}s] shows widgetLabel changed (%{BOOL,public}d)", (uint8_t *)v7, 0x12u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v8, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v11) = 13;
    sub_1D26083C0((char *)&v11);
  }
}

uint64_t sub_1D2601F2C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D2601F70(char a1)
{
  return sub_1D2601F84(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel, (uint64_t (*)(uint64_t))sub_1D2601D38);
}

uint64_t sub_1D2601F84(char a1, _QWORD *a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v3;
  _BYTE *v6;
  uint64_t v7;

  v6 = (_BYTE *)(v3 + *a2);
  swift_beginAccess();
  v7 = *v6;
  *v6 = a1;
  return a3(v7);
}

void (*sub_1D2601FDC(_QWORD *a1))(uint64_t a1, uint64_t a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  _BYTE *v5;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel;
  v3[3] = v1;
  v3[4] = v4;
  v5 = (_BYTE *)(v1 + v4);
  swift_beginAccess();
  *((_BYTE *)v3 + 40) = *v5;
  return sub_1D2602048;
}

void sub_1D2602048(uint64_t a1, uint64_t a2)
{
  sub_1D2602054(a1, a2, (void (*)(uint64_t))sub_1D2601D38);
}

void sub_1D2602054(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  void *v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  uint64_t v7;

  v3 = *(void **)a1;
  v5 = *(_QWORD *)(*(_QWORD *)a1 + 24);
  v4 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v6 = *(_BYTE *)(*(_QWORD *)a1 + 40);
  v7 = *(unsigned __int8 *)(v5 + v4);
  *(_BYTE *)(v5 + v4) = v6;
  a3(v7);
  free(v3);
}

void sub_1D2602088(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, void (*a6)(void *))
{
  void *v7;
  void **v8;
  void *v9;
  id v10;

  v7 = *a1;
  v8 = (void **)(*a2 + *a5);
  swift_beginAccess();
  v9 = *v8;
  *v8 = v7;
  v10 = v7;
  a6(v9);

}

void sub_1D2602104(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  void **v4;
  void *v5;
  id v6;
  id v7;
  char v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;

  v2 = v1;
  BSDispatchQueueAssertMain();
  v4 = (void **)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties);
  swift_beginAccess();
  v5 = *v4;
  if (a1)
  {
    if (v5)
    {
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
      v6 = v5;
      v7 = a1;
      v8 = sub_1D26CDECC();

      if ((v8 & 1) != 0)
        return;
    }
  }
  else if (!v5)
  {
    return;
  }
  swift_retain_n();
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDCE0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v17 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v14 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    sub_1D2537880(v13, v14, &v17);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v11 + 12) = 2082;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83060);
    v15 = sub_1D26CDF2C();
    sub_1D2537880(v15, v16, &v17);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v9, v10, "[%{public}s] displayProperties changed (%{public}s)", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v12, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  LOBYTE(v17) = 5;
  sub_1D26083C0((char *)&v17);
}

void *sub_1D260237C()
{
  uint64_t v0;
  void **v1;
  void *v2;
  id v3;

  v1 = (void **)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties);
  swift_beginAccess();
  v2 = *v1;
  v3 = v2;
  return v2;
}

void sub_1D26023C8(void *a1)
{
  sub_1D26023DC(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties, sub_1D2602104);
}

void sub_1D26023DC(void *a1, _QWORD *a2, void (*a3)(void *))
{
  uint64_t v3;
  void **v6;
  void *v7;
  id v8;

  v6 = (void **)(v3 + *a2);
  swift_beginAccess();
  v7 = *v6;
  *v6 = a1;
  v8 = a1;
  a3(v7);

}

void (*sub_1D2602450(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  void **v5;
  void *v6;
  id v7;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties;
  v3[4] = v1;
  v3[5] = v4;
  v5 = (void **)(v1 + v4);
  swift_beginAccess();
  v6 = *v5;
  v3[3] = *v5;
  v7 = v6;
  return sub_1D26024C4;
}

void sub_1D26024C4(uint64_t a1, char a2)
{
  sub_1D26024D0(a1, a2, sub_1D2602104);
}

void sub_1D26024D0(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  void **v6;
  uint64_t v7;
  uint64_t v8;
  void *v9;
  id v10;
  id v11;

  v4 = *(void **)a1;
  v6 = (void **)(*(_QWORD *)a1 + 24);
  v5 = *v6;
  v8 = *(_QWORD *)(*(_QWORD *)a1 + 32);
  v7 = *(_QWORD *)(*(_QWORD *)a1 + 40);
  v9 = *(void **)(v8 + v7);
  *(_QWORD *)(v8 + v7) = *v6;
  if ((a2 & 1) != 0)
  {
    v10 = v5;
    a3(v9);

    v9 = *v6;
  }
  else
  {
    v11 = v5;
    a3(v9);

  }
  free(v4);
}

uint64_t sub_1D260255C()
{
  uint64_t v0;
  unsigned __int8 *v1;

  v1 = (unsigned __int8 *)(v0
                         + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_ignoreComplicationUserRedactionPreference);
  swift_beginAccess();
  return *v1;
}

uint64_t sub_1D26025A0(char a1)
{
  uint64_t v1;
  _BYTE *v3;
  uint64_t result;

  v3 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_ignoreComplicationUserRedactionPreference);
  result = swift_beginAccess();
  *v3 = a1;
  return result;
}

uint64_t (*sub_1D26025E8())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D260262C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v11;
  uint64_t v12;

  v3 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v9, (uint64_t)v8, &qword_1ED96D438);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    swift_release();
    v11 = sub_1D26CB880();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56))(a1, 1, 1, v11);
  }
  else
  {
    sub_1D2539ADC((uint64_t)v8, (uint64_t)v5, type metadata accessor for DefaultWidgetLiveViewEntry);
    DefaultWidgetLiveViewEntry.widgetURL.getter(a1);
    return sub_1D25340E4((uint64_t)v5, type metadata accessor for DefaultWidgetLiveViewEntry);
  }
}

uint64_t DefaultWidgetLiveViewEntry.widgetURL.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t (*v19)(_QWORD);
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  v5 = MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v9 = (char *)&v28 - v8;
  v10 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v28 - v14;
  v16 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v16);
  v18 = (char *)&v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v2, (uint64_t)v18, v19);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D2539ADC((uint64_t)v18, (uint64_t)v13, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D26CD524();
    v20 = sub_1D26CD254();
    v21 = *(_QWORD *)(v20 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v21 + 48))(v7, 1, v20) == 1)
    {
      sub_1D25340E4((uint64_t)v13, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      sub_1D253703C((uint64_t)v7, &qword_1ED96D500);
      v22 = sub_1D26CB880();
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(a1, 1, 1, v22);
    }
    else
    {
      sub_1D26CD248();
      sub_1D25340E4((uint64_t)v13, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v7, v20);
    }
  }
  else
  {
    swift_release();
    v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    sub_1D2539ADC((uint64_t)&v18[*(int *)(v24 + 48)], (uint64_t)v15, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D26CD524();
    v25 = sub_1D26CD254();
    v26 = *(_QWORD *)(v25 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v9, 1, v25) == 1)
    {
      sub_1D25340E4((uint64_t)v15, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      sub_1D253703C((uint64_t)v9, &qword_1ED96D500);
      v27 = sub_1D26CB880();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v27 - 8) + 56))(a1, 1, 1, v27);
    }
    else
    {
      sub_1D26CD248();
      sub_1D25340E4((uint64_t)v15, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      (*(void (**)(char *, uint64_t))(v26 + 8))(v9, v25);
    }
    return sub_1D253703C((uint64_t)&v18[*(int *)(v24 + 64)], &qword_1ED96D478);
  }
}

uint64_t sub_1D2602A84@<X0>(uint64_t a1@<X8>)
{
  return sub_1D25A9D94(&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL, (uint64_t *)&unk_1ED96FC50, a1);
}

uint64_t sub_1D2602A98@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;
  void (*v11)(_QWORD *__return_ptr, _QWORD);
  char v12;
  _BYTE *v13;
  uint64_t v14;
  uint64_t v15;
  int v16;
  uint64_t v17;
  char v18;
  void (*v19)(_QWORD *__return_ptr, _QWORD);
  char v20;
  void (*v21)(_QWORD *__return_ptr, _QWORD);
  char v22;
  void (*v23)(_QWORD *__return_ptr, uint64_t);
  uint64_t v24;

  v2 = v1;
  v4 = sub_1D26CC2C4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  v8 = swift_release();
  v9 = (uint64_t)v23;
  if (v23)
  {
    v23(&v23, v8);
    if (v23)
    {
      v21 = v23;
      v22 = 0;
      swift_retain_n();
      sub_1D26CC90C();
      sub_1D25495F4(v9);
      result = swift_release_n();
      v11 = v23;
      v12 = v24;
      goto LABEL_13;
    }
    sub_1D25495F4(v9);
  }
  v13 = (_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  swift_beginAccess();
  if (*v13 == 1)
  {
    v14 = sub_1D26CCEAC();
  }
  else
  {
    v15 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v15, v4);
    v16 = (*(uint64_t (**)(char *, uint64_t))(v5 + 88))(v7, v4);
    if (v16 == *MEMORY[0x1E0CD86E0])
    {
      v14 = sub_1D26CCEB8();
    }
    else if (v16 == *MEMORY[0x1E0CD86D0])
    {
      v14 = sub_1D26CCEA0();
    }
    else
    {
      v14 = sub_1D26CCE7C();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  v17 = v14;
  v18 = 1;
  result = sub_1D26CC90C();
  v11 = v19;
  v12 = v20;
LABEL_13:
  *(_QWORD *)a1 = v11;
  *(_BYTE *)(a1 + 8) = v12;
  return result;
}

uint64_t sub_1D2602CFC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  int EnumCaseMultiPayload;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  v1 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (uint64_t *)((char *)&v18 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v2);
  v6 = (uint64_t *)((char *)&v18 - v5);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v10, (uint64_t)v9, &qword_1ED96D438);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (!EnumCaseMultiPayload)
  {
    sub_1D2539ADC((uint64_t)v9, (uint64_t)v6, type metadata accessor for DefaultWidgetLiveViewEntry);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      sub_1D25340E4((uint64_t)v6, type metadata accessor for DefaultWidgetLiveViewEntry);
      return 0;
    }
    v12 = *v6;
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v14 = (uint64_t)v6 + *(int *)(v16 + 48);
    v15 = (uint64_t)v6 + *(int *)(v16 + 64);
LABEL_11:
    sub_1D253703C(v15, &qword_1ED96D478);
    sub_1D25340E4(v14, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    return v12;
  }
  if (EnumCaseMultiPayload != 1)
  {
    sub_1D253703C((uint64_t)v9, &qword_1ED96D438);
    return 0;
  }
  sub_1D2539ADC((uint64_t)v9, (uint64_t)v4, type metadata accessor for DefaultWidgetLiveViewEntry);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    v12 = *v4;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v14 = (uint64_t)v4 + *(int *)(v13 + 48);
    v15 = (uint64_t)v4 + *(int *)(v13 + 64);
    goto LABEL_11;
  }
  sub_1D25340E4((uint64_t)v4, type metadata accessor for DefaultWidgetLiveViewEntry);
  return 0;
}

uint64_t sub_1D2602F04(uint64_t (*a1)(uint64_t))
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t result;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v2 = v1;
  BSDispatchQueueAssertMain();
  v4 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__inBatch;
  *(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__inBatch) = 1;
  v5 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__batchedChangeReasons;
  swift_beginAccess();
  v6 = MEMORY[0x1E0DEE9D8];
  *(_QWORD *)v5 = MEMORY[0x1E0DEE9D8];
  v7 = swift_bridgeObjectRelease();
  result = a1(v7);
  *(_BYTE *)(v1 + v4) = 0;
  if (*(_QWORD *)(*(_QWORD *)v5 + 16))
  {
    swift_retain_n();
    v9 = sub_1D26CC084();
    v10 = sub_1D26CDD04();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = swift_slowAlloc();
      v18 = swift_slowAlloc();
      v19 = v18;
      *(_DWORD *)v11 = 136446466;
      v12 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v13 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v12, v13, &v19);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v11 + 12) = 2080;
      v14 = swift_bridgeObjectRetain();
      v15 = MEMORY[0x1D82392C0](v14, &type metadata for LiveWidgetViewChangeReason);
      v17 = v16;
      swift_bridgeObjectRelease();
      sub_1D2537880(v15, v17, &v19);
      sub_1D26CDF50();
      v6 = MEMORY[0x1E0DEE9D8];
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v9, v10, "[%{public}s] Ending batch update with reasons: %s", (uint8_t *)v11, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v18, -1, -1);
      MEMORY[0x1D823A5E0](v11, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    LOBYTE(v19) = 19;
    sub_1D26083C0((char *)&v19);
    *(_QWORD *)v5 = v6;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t LiveWidgetEntryViewModel.__allocating_init(liveSource:placeholderSource:logger:keybagStateProvider:dataProtectionMonitor:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  v10 = swift_allocObject();
  LiveWidgetEntryViewModel.init(liveSource:placeholderSource:logger:keybagStateProvider:dataProtectionMonitor:)(a1, a2, a3, a4, a5);
  return v10;
}

uint64_t LiveWidgetEntryViewModel.init(liveSource:placeholderSource:logger:keybagStateProvider:dataProtectionMonitor:)(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  uint64_t v36;
  void (*v37)(uint64_t, char *, uint64_t);
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  void **v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  _QWORD *v58;
  _QWORD *v59;
  uint64_t v60;
  uint64_t v61;
  void (*v62)(uint64_t, uint64_t);
  _QWORD *v63;
  uint64_t v64;
  uint64_t v65;
  _QWORD *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  os_unfair_lock_s *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  void *v77;
  id *v78;
  id v79;
  id v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t *v84;
  uint64_t v85;
  void (*v86)(uint64_t, uint64_t);
  _BYTE *v87;
  void *v88;
  id v89;
  uint64_t v90;
  void **v91;
  void *v92;
  uint64_t v93;
  uint64_t v94;
  _QWORD *v95;
  uint64_t v96;
  uint64_t v97;
  char *v98;
  void *v99;
  id v100;
  id v101;
  uint64_t v102;
  uint64_t v103;
  _QWORD *v104;
  uint64_t v105;
  uint64_t v106;
  char *v107;
  char *v108;
  uint64_t v109;
  os_unfair_lock_s *v110;
  os_unfair_lock_s *v111;
  id v112;
  uint64_t v113;
  char v114;
  uint64_t v115;
  uint64_t v116;
  uint64_t v117;
  _QWORD *v118;
  uint64_t v119;
  uint64_t v120;
  char *v121;
  char *v122;
  uint64_t v123;
  os_unfair_lock_s *v124;
  void *v125;
  os_unfair_lock_s *v126;
  id v127;
  unsigned __int8 v128;
  uint64_t v129;
  uint64_t v130;
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  uint64_t v135;
  NSObject *v136;
  int v137;
  uint64_t v138;
  uint64_t v139;
  unint64_t v140;
  _QWORD *v141;
  uint64_t v142;
  uint64_t v143;
  _QWORD *v144;
  uint64_t v145;
  uint64_t v146;
  char *v147;
  char *v148;
  uint64_t v149;
  os_unfair_lock_s *v150;
  uint64_t v151;
  uint64_t v152;
  void (*v153)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  char *v159;
  char *v160;
  uint64_t v161;
  os_unfair_lock_s *v162;
  uint64_t v163;
  char *v164;
  _QWORD *v165;
  void *v166;
  id v167;
  void *v168;
  id v169;
  uint64_t v170;
  unint64_t v171;
  unint64_t v172;
  _QWORD *v173;
  ValueMetadata *v174;
  unint64_t v175;
  char *v176;
  uint64_t v177;
  uint64_t v178;
  char *v179;
  uint64_t v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  char *v185;
  uint64_t v186;
  char *v187;
  _QWORD *v188;
  uint64_t v189;
  uint64_t v190;
  char *v191;
  void *v192;
  uint64_t v193;
  uint64_t v194;
  char *v195;
  uint64_t v196;
  char *v197;
  uint64_t v198;
  char *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  char *v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  char *v209;
  char *v210;
  uint64_t v211;
  uint64_t v212;
  uint64_t v213;
  _QWORD *v214;
  uint64_t v215;
  uint64_t v216;
  char *v217;
  uint64_t v218;
  uint64_t v219;
  os_unfair_lock_s *v220;
  uint64_t v221;
  char *v222;
  uint64_t v223;
  uint64_t v224;
  uint64_t v225;
  uint64_t v226;
  void *v227;
  uint64_t result;
  char *v229;
  uint64_t v230;
  void (*v231)(uint64_t, uint64_t, uint64_t, _QWORD *);
  char *v232;
  char *v233;
  uint64_t v234;
  _QWORD *v235;
  uint64_t v236;
  char *v237;
  uint64_t v238;
  uint64_t v239;
  char *v240;
  uint64_t v241;
  uint64_t v242;
  char *v243;
  char *v244;
  uint64_t v245;
  uint64_t v246;
  char *v247;
  uint64_t v248;
  char *v249;
  uint64_t v250;
  char *v251;
  uint64_t v252;
  uint64_t v253;
  void (*v254)(char *, uint64_t, uint64_t);
  uint64_t v255;
  uint64_t v256;
  char *v257;
  void **v258;
  uint64_t v259;
  uint64_t v260;
  id *v261;
  uint64_t v262;
  char **v263;
  void *v264;
  uint64_t v265;
  void (*v266)(char *, uint64_t, uint64_t, uint64_t);
  char *v267;
  char *v268;
  uint64_t v269;
  uint64_t v270;
  uint64_t v271;
  char *v272;
  uint64_t v273;
  uint64_t v274;
  uint64_t v275;
  uint64_t v276;
  uint64_t v277;
  _QWORD *v278;
  _QWORD *v279;
  id v280;
  char v281;
  __int128 v282;
  ValueMetadata *v283;
  unint64_t v284;

  v6 = v5;
  v275 = a5;
  v276 = a4;
  v277 = a3;
  v278 = a2;
  v279 = a1;
  v250 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96B1F8);
  MEMORY[0x1E0C80A78](v250);
  v249 = (char *)&v229 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v246 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DC0);
  v245 = *(_QWORD *)(v246 - 8);
  MEMORY[0x1E0C80A78](v246);
  v244 = (char *)&v229 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v248 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DE0);
  MEMORY[0x1E0C80A78](v248);
  v247 = (char *)&v229 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v253 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DB0);
  v252 = *(_QWORD *)(v253 - 8);
  MEMORY[0x1E0C80A78](v253);
  v251 = (char *)&v229 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C078);
  MEMORY[0x1E0C80A78](v11);
  v243 = (char *)&v229 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v269 = sub_1D26CDEFC();
  v236 = *(_QWORD *)(v269 - 8);
  MEMORY[0x1E0C80A78](v269);
  v268 = (char *)&v229 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v239 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B058);
  v238 = *(_QWORD *)(v239 - 8);
  MEMORY[0x1E0C80A78](v239);
  v237 = (char *)&v229 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v242 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B068);
  v241 = *(_QWORD *)(v242 - 8);
  MEMORY[0x1E0C80A78](v242);
  v240 = (char *)&v229 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BFC8);
  MEMORY[0x1E0C80A78](v16);
  v267 = (char *)&v229 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v235 = (_QWORD *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DD0);
  v234 = *(v235 - 1);
  MEMORY[0x1E0C80A78](v235);
  v233 = (char *)&v229 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v266 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1D26CB9DC();
  v265 = *((_QWORD *)v266 - 1);
  MEMORY[0x1E0C80A78](v266);
  v229 = (char *)&v229 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v20);
  v232 = (char *)&v229 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v264 = (void *)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v264);
  v263 = (char **)((char *)&v229 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0));
  v23 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v23);
  v261 = (id *)((char *)&v229 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0));
  v274 = sub_1D26CC7A4();
  v273 = *(_QWORD *)(v274 - 8);
  MEMORY[0x1E0C80A78](v274);
  v272 = (char *)&v229 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E00);
  v258 = *(void ***)(v271 - 8);
  MEMORY[0x1E0C80A78](v271);
  v257 = (char *)&v229 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v256 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E10);
  v255 = *(_QWORD *)(v256 - 8);
  MEMORY[0x1E0C80A78](v256);
  v28 = (char *)&v229 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  v254 = (void (*)(char *, uint64_t, uint64_t))__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C900);
  v29 = *((_QWORD *)v254 - 1);
  MEMORY[0x1E0C80A78](v254);
  v31 = (char *)&v229 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  v260 = *(_QWORD *)(v32 - 8);
  v33 = v260;
  MEMORY[0x1E0C80A78](v32);
  v35 = (char *)&v229 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  v36 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets;
  LOBYTE(v282) = 0;
  sub_1D26CC1B0();
  v37 = *(void (**)(uint64_t, char *, uint64_t))(v33 + 32);
  v262 = v36;
  v37(v36, v35, v32);
  v38 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled;
  LOBYTE(v282) = 0;
  sub_1D26CC1B0();
  v37(v38, v35, v32);
  v39 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape;
  v259 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape;
  LOBYTE(v282) = 0;
  sub_1D26CC1B0();
  v37(v39, v35, v32);
  v40 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown;
  LOBYTE(v282) = 0;
  sub_1D26CC1B0();
  v270 = v32;
  v37(v40, v35, v32);
  v41 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler;
  v282 = 0uLL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D578);
  sub_1D26CC1B0();
  (*(void (**)(uint64_t, char *, _QWORD *))(v29 + 32))(v41, v31, v254);
  v42 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__interactionHandler;
  v282 = 0uLL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FC0);
  sub_1D26CC1B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v255 + 32))(v42, v28, v256);
  v43 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate;
  LOBYTE(v282) = 0;
  sub_1D26CC1B0();
  v37(v43, v35, v32);
  v44 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder;
  v282 = 0uLL;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962EE0);
  v45 = v257;
  sub_1D26CC1B0();
  ((void (*)(uint64_t, char *, uint64_t))v258[4])(v44, v45, v271);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber) = 0;
  v46 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__contentTransparencyDidChangePublisher;
  v271 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)(v6 + v46) = sub_1D26CC150();
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent) = 0;
  v47 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
  v48 = *MEMORY[0x1E0CD86E0];
  v49 = sub_1D26CC2C4();
  v50 = *(_QWORD *)(v49 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v50 + 104))(v47, v48, v49);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 56))(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme, 1, 1, v49);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment) = 0;
  v51 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  v52 = *MEMORY[0x1E0D0F890];
  v53 = sub_1D26CBC4C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v53 - 8) + 104))(v51, v52, v53);
  v257 = (char *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground);
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__currentViewInLowLuminance) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment) = 0;
  v231 = *(void (**)(uint64_t, uint64_t, uint64_t, _QWORD *))(v265 + 56);
  v231(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate, 1, 1, v266);
  v54 = (void **)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel) = 0;
  v258 = (void **)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_ignoreComplicationUserRedactionPreference) = 0;
  v55 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL;
  v56 = sub_1D26CB880();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v56 - 8) + 56))(v55, 1, 1, v56);
  v230 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canConsumeLaunchRequest;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canConsumeLaunchRequest) = 1;
  v57 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__placeholderSource;
  *(_OWORD *)v57 = 0u;
  *(_OWORD *)(v57 + 16) = 0u;
  *(_QWORD *)(v57 + 32) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__invalidated) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__cancellable) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewSecurityDataSource) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__descriptorDidChangeSubscription) = 0;
  *(_BYTE *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__inBatch) = 0;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__batchedChangeReasons) = MEMORY[0x1E0DEE9D8];
  v58 = (_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource);
  v59 = v279;
  sub_1D2538510((uint64_t)v279, v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource);
  sub_1D2538510((uint64_t)v278, (uint64_t)&v282);
  swift_beginAccess();
  sub_1D25AB51C((uint64_t)&v282, v57, (uint64_t *)&unk_1ED962EF8);
  swift_endAccess();
  v60 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
  v61 = sub_1D26CC09C();
  v255 = *(_QWORD *)(v61 - 8);
  v62 = *(void (**)(uint64_t, uint64_t))(v255 + 16);
  v256 = v61;
  v62(v60, v277);
  sub_1D2538510(v276, v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__keybagStateProvider);
  sub_1D2538510(v275, v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__dataProtectionMonitor);
  type metadata accessor for LiveWidgetEntryViewableEntryCache(0);
  swift_allocObject();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewableEntryCache) = sub_1D268CD5C();
  v63 = v59;
  v64 = v59[3];
  v65 = v63[4];
  v66 = v63;
  __swift_project_boxed_opaque_existential_0(v63, v64);
  v67 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v65 + 8))(v64, v65);
  v68 = *(_QWORD *)&v67[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider];
  swift_retain();

  v69 = *(_QWORD *)(v68 + 24);
  v70 = *(os_unfair_lock_s **)(v69 + 16);
  swift_retain();
  os_unfair_lock_lock(v70);
  v71 = v68 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  v72 = v273;
  v73 = v272;
  v74 = v274;
  v254 = *(void (**)(char *, uint64_t, uint64_t))(v273 + 16);
  v254(v272, v71, v274);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v69 + 16));
  swift_release();
  (*(void (**)(uint64_t, char *, uint64_t))(v72 + 32))(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues, v73, v74);
  swift_release();
  v75 = v66[3];
  v76 = v66[4];
  __swift_project_boxed_opaque_existential_0(v66, v75);
  v77 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v76 + 8))(v75, v76);
  v78 = v261;
  sub_1D2534120((uint64_t)v77 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v261, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v79 = *v78;
  sub_1D25340E4((uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  v80 = objc_msgSend(v79, sel__loggingIdentifierWithoutMetrics);

  v81 = sub_1D26CD938();
  v83 = v82;

  v84 = (uint64_t *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
  *v84 = v81;
  v84[1] = v83;
  v85 = v259;
  swift_beginAccess();
  v86 = *(void (**)(uint64_t, uint64_t))(v260 + 8);
  v86(v85, v270);
  v281 = 0;
  sub_1D26CC1B0();
  swift_endAccess();
  v87 = v257;
  swift_beginAccess();
  *v87 = 0;
  swift_beginAccess();
  v88 = *v54;
  *v54 = 0;

  type metadata accessor for DefaultWidgetViewSecurityPolicy();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewSecurityPolicy) = swift_allocObject();
  v89 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10250]), sel_initWithRenderingMode_, 0);
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme) = v89;
  swift_beginAccess();
  v90 = sub_1D26CC6F0();
  swift_endAccess();
  v91 = v258;
  swift_beginAccess();
  v92 = *v91;
  *v91 = (void *)v90;

  v93 = v58[3];
  v94 = v58[4];
  v95 = __swift_project_boxed_opaque_existential_0(v58, v93);
  v96 = *(_QWORD *)(v93 - 8);
  MEMORY[0x1E0C80A78](v95);
  v98 = (char *)&v229 - v97;
  (*(void (**)(char *))(v96 + 16))((char *)&v229 - v97);
  v99 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v94 + 8))(v93, v94);
  (*(void (**)(char *, uint64_t))(v96 + 8))(v98, v93);
  sub_1D2534120((uint64_t)v99 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v100 = *v78;
  sub_1D25340E4((uint64_t)v78, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
  v101 = objc_msgSend(v100, sel_family);

  v102 = v58[3];
  v103 = v58[4];
  v104 = __swift_project_boxed_opaque_existential_0(v58, v102);
  v105 = *(_QWORD *)(v102 - 8);
  MEMORY[0x1E0C80A78](v104);
  v107 = (char *)&v229 - v106;
  (*(void (**)(char *))(v105 + 16))((char *)&v229 - v106);
  v108 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v103 + 8))(v102, v103);
  (*(void (**)(char *, uint64_t))(v105 + 8))(v107, v102);
  v109 = *(_QWORD *)&v108[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v110 = *(os_unfair_lock_s **)(v109 + 16);
  swift_retain();
  os_unfair_lock_lock(v110);
  v111 = *(os_unfair_lock_s **)(v109 + 16);
  v112 = *(id *)&v108[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  os_unfair_lock_unlock(v111);
  swift_release();

  objc_msgSend(v112, sel_enablesMultipleTapTargets);
  v283 = &type metadata for FeatureFlags.Widgets;
  v284 = sub_1D25545A4();
  LOBYTE(v282) = 4;
  LOBYTE(v109) = sub_1D26CBB98();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
  if ((v109 & 1) != 0)
  {
    v113 = v262;
    swift_beginAccess();
    v86(v113, v270);
    LOBYTE(v280) = 1;
  }
  else
  {
    v114 = (v101 != (id)1) & ~CHSWidgetFamilyIsAccessory();
    v115 = v262;
    swift_beginAccess();
    v86(v115, v270);
    LOBYTE(v280) = v114;
  }
  sub_1D26CC1B0();
  swift_endAccess();
  v116 = v58[3];
  v117 = v58[4];
  v118 = __swift_project_boxed_opaque_existential_0(v58, v116);
  v119 = *(_QWORD *)(v116 - 8);
  MEMORY[0x1E0C80A78](v118);
  v121 = (char *)&v229 - ((v120 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v119 + 16))(v121);
  v122 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v117 + 8))(v116, v117);
  (*(void (**)(char *, uint64_t))(v119 + 8))(v121, v116);
  v123 = *(_QWORD *)&v122[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v124 = *(os_unfair_lock_s **)(v123 + 16);
  swift_retain();
  os_unfair_lock_lock(v124);
  v125 = *(void **)&v122[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  v126 = *(os_unfair_lock_s **)(v123 + 16);
  v127 = v125;
  os_unfair_lock_unlock(v126);
  swift_release();

  if (v125)
  {
    v128 = objc_msgSend(v127, sel_supportsInteraction);

    if ((v128 & 1) == 0)
      *(_BYTE *)(v6 + v230) = 0;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF0);
  swift_allocObject();
  v129 = sub_1D26CC150();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewEntryDidChangePublisher) = v129;
  *(_QWORD *)&v282 = v129;
  v130 = MEMORY[0x1E0C95F48];
  sub_1D2536488(&qword_1ED962DE8, &qword_1ED962DF0, MEMORY[0x1E0C95F48]);
  v262 = v129;
  swift_retain();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntryDidChangePublisher) = sub_1D26CC204();
  swift_allocObject();
  v131 = sub_1D26CC150();
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__overrideDateDidChangePublisher) = v131;
  *(_QWORD *)&v282 = v131;
  v132 = sub_1D2536488((unint64_t *)&unk_1ED96FC70, &qword_1ED96FC80, v130);
  v261 = (id *)v131;
  swift_retain();
  v260 = v132;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDateDidChangePublisher) = sub_1D26CC204();
  *(_QWORD *)&v282 = sub_1D26CCEAC();
  v133 = sub_1D26CCFC0();
  v134 = (uint64_t)v263;
  *v263 = (char *)v133;
  swift_storeEnumTagMultiPayload();
  sub_1D25384CC(v134, v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry, &qword_1ED96D438);
  type metadata accessor for _LiveWidgetEntryViewModelSecurityDataSource();
  v135 = swift_allocObject();
  *(_QWORD *)(v135 + 16) = v6;
  *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewSecurityDataSource) = v135;
  swift_retain();
  swift_release();
  sub_1D2607EA4();
  sub_1D2608154();
  LOBYTE(v282) = 0;
  sub_1D26083C0((char *)&v282);
  swift_retain_n();
  v136 = sub_1D26CC084();
  v137 = sub_1D26CDCE0();
  if (!os_log_type_enabled(v136, (os_log_type_t)v137))
  {

    swift_release_n();
    v173 = v235;
LABEL_18:
    sub_1D2538510(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v282);
    v174 = v283;
    v175 = v284;
    __swift_project_boxed_opaque_existential_0(&v282, (uint64_t)v283);
    v176 = (char *)(*(uint64_t (**)(ValueMetadata *, unint64_t))(v175 + 8))(v174, v175);
    v177 = *(_QWORD *)&v176[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_descriptorDidChangePublisher];
    swift_retain();

    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
    *(_QWORD *)&v282 = v177;
    v264 = (void *)sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
    v280 = (id)sub_1D26CDD94();
    v270 = sub_1D26CDD58();
    v266 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v270 - 8) + 56);
    v178 = (uint64_t)v267;
    v266(v267, 1, 1, v270);
    v263 = (char **)__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B230);
    v259 = sub_1D2536488((unint64_t *)&qword_1ED96B228, &qword_1ED96B230, MEMORY[0x1E0C95D90]);
    v265 = sub_1D260DE84((unint64_t *)&qword_1ED96BFD0, (unint64_t *)&qword_1ED96EE50, 0x1E0C80610, MEMORY[0x1E0DEF7F8]);
    v179 = v233;
    sub_1D26CC258();
    sub_1D253703C(v178, &qword_1ED96BFC8);

    swift_release();
    v180 = swift_allocObject();
    swift_weakInit();
    v181 = swift_allocObject();
    *(_QWORD *)(v181 + 16) = sub_1D260DEE8;
    *(_QWORD *)(v181 + 24) = v180;
    sub_1D2536488(&qword_1ED962DC8, &qword_1ED962DD0, MEMORY[0x1E0C95CB8]);
    v182 = sub_1D26CC288();
    swift_release();
    (*(void (**)(char *, _QWORD *))(v234 + 8))(v179, v173);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__descriptorDidChangeSubscription) = v182;
    swift_release();
    v183 = v279[3];
    v184 = v279[4];
    __swift_project_boxed_opaque_existential_0(v279, v183);
    v185 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v184 + 8))(v183, v184);
    v186 = *(_QWORD *)&v185[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange];
    swift_retain();

    *(_QWORD *)&v282 = v186;
    swift_allocObject();
    swift_weakInit();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B220);
    sub_1D2536488(&qword_1ED96B218, &qword_1ED96B220, MEMORY[0x1E0C95D90]);
    sub_1D26CC288();
    swift_release();
    swift_release();
    v187 = (char *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__cancellable);
    swift_beginAccess();
    sub_1D26CC0FC();
    swift_endAccess();
    swift_release();
    v188 = v278;
    v189 = v278[3];
    v190 = v278[4];
    __swift_project_boxed_opaque_existential_0(v278, v189);
    v191 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v190 + 8))(v189, v190);
    v192 = *(void **)&v191[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange];
    swift_retain();

    v280 = v192;
    v193 = swift_allocObject();
    swift_weakInit();
    sub_1D2538510((uint64_t)v188, (uint64_t)&v282);
    v194 = swift_allocObject();
    *(_QWORD *)(v194 + 16) = v193;
    sub_1D2538F38(&v282, v194 + 24);
    sub_1D26CC288();
    swift_release();
    swift_release();
    swift_beginAccess();
    sub_1D26CC0FC();
    swift_endAccess();
    swift_release();
    __swift_project_boxed_opaque_existential_0((_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__keybagStateProvider), *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__keybagStateProvider + 24));
    *(_QWORD *)&v282 = sub_1D26CBCDC();
    v195 = v268;
    sub_1D26CDEF0();
    v258 = (void **)objc_opt_self();
    v280 = objc_msgSend(v258, sel_mainRunLoop);
    v257 = (char *)sub_1D26CDEE4();
    v235 = *(_QWORD **)(*((_QWORD *)v257 - 1) + 56);
    v196 = (uint64_t)v243;
    ((void (*)(char *, uint64_t, uint64_t, char *))v235)(v243, 1, 1, v257);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FBB8);
    v234 = sub_1D2539514(0, (unint64_t *)&unk_1ED96C090);
    sub_1D2536488(&qword_1ED96FBB0, &qword_1ED96FBB8, MEMORY[0x1E0C95D90]);
    v233 = (char *)sub_1D260DE84((unint64_t *)&qword_1ED96C080, (unint64_t *)&unk_1ED96C090, 0x1E0C99E58, MEMORY[0x1E0CB2358]);
    v197 = v237;
    sub_1D26CC264();
    sub_1D253703C(v196, &qword_1ED96C078);

    v236 = *(_QWORD *)(v236 + 8);
    ((void (*)(char *, uint64_t))v236)(v195, v269);
    swift_release();
    *(_QWORD *)&v282 = sub_1D26CDD94();
    v198 = (uint64_t)v267;
    v266(v267, 1, 1, v270);
    sub_1D2536488(&qword_1ED96B050, &qword_1ED96B058, MEMORY[0x1E0C95BB0]);
    v199 = v240;
    v200 = v239;
    sub_1D26CC258();
    sub_1D253703C(v198, &qword_1ED96BFC8);

    (*(void (**)(char *, uint64_t))(v238 + 8))(v197, v200);
    swift_allocObject();
    swift_weakInit();
    sub_1D2536488(&qword_1ED96B060, &qword_1ED96B068, MEMORY[0x1E0C95CB8]);
    v201 = v242;
    sub_1D26CC288();
    swift_release();
    (*(void (**)(char *, uint64_t))(v241 + 8))(v199, v201);
    v232 = v187;
    swift_beginAccess();
    sub_1D26CC0FC();
    swift_endAccess();
    swift_release();
    v202 = v279[3];
    v203 = v279[4];
    __swift_project_boxed_opaque_existential_0(v279, v202);
    v204 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v203 + 8))(v202, v203);
    v205 = *(_QWORD *)&v204[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider];
    swift_retain();

    *(_QWORD *)&v282 = *(_QWORD *)(v205 + 16);
    v206 = sub_1D26CC204();
    swift_release();
    *(_QWORD *)&v282 = v206;
    v271 = v206;
    v207 = v244;
    sub_1D26CC240();
    *(_QWORD *)&v282 = sub_1D26CDD94();
    v266((char *)v198, 1, 1, v270);
    sub_1D2536488(&qword_1ED962DB8, &qword_1ED962DC0, MEMORY[0x1E0C95A38]);
    v208 = v246;
    sub_1D26CC258();
    sub_1D253703C(v198, &qword_1ED96BFC8);

    (*(void (**)(char *, uint64_t))(v245 + 8))(v207, v208);
    *(_QWORD *)&v282 = v206;
    v209 = v268;
    sub_1D26CDEF0();
    v280 = objc_msgSend(v258, sel_mainRunLoop);
    ((void (*)(uint64_t, uint64_t, uint64_t, char *))v235)(v196, 1, 1, v257);
    sub_1D26CC264();
    sub_1D253703C(v196, &qword_1ED96C078);

    ((void (*)(char *, uint64_t))v236)(v209, v269);
    sub_1D2536488(&qword_1ED962DD8, &qword_1ED962DE0, MEMORY[0x1E0C95CB8]);
    sub_1D2536488(&qword_1ED96B1F0, (uint64_t *)&unk_1ED96B1F8, MEMORY[0x1E0C95BB0]);
    v210 = v251;
    sub_1D26CC0D8();
    v211 = swift_allocObject();
    swift_weakInit();
    v212 = swift_allocObject();
    *(_QWORD *)(v212 + 16) = sub_1D260DF38;
    *(_QWORD *)(v212 + 24) = v211;
    sub_1D2536488(&qword_1ED962DA8, &qword_1ED962DB0, MEMORY[0x1E0C95788]);
    v213 = v253;
    sub_1D26CC288();
    swift_release();
    swift_beginAccess();
    sub_1D26CC0FC();
    swift_endAccess();
    swift_release();
    v214 = v279;
    v215 = v279[3];
    v216 = v279[4];
    __swift_project_boxed_opaque_existential_0(v279, v215);
    v217 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v216 + 8))(v215, v216);
    v218 = *(_QWORD *)&v217[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider];
    swift_retain();

    v219 = *(_QWORD *)(v218 + 24);
    v220 = *(os_unfair_lock_s **)(v219 + 16);
    swift_retain();
    os_unfair_lock_lock(v220);
    v221 = v218 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
    swift_beginAccess();
    v222 = v272;
    v223 = v221;
    v224 = v274;
    v254(v272, v223, v274);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v219 + 16));
    swift_release();
    v225 = v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v273 + 40))(v225, v222, v224);
    swift_endAccess();
    swift_release();
    swift_beginAccess();
    v226 = sub_1D26CC6F0();
    swift_endAccess();
    swift_release();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v275);
    __swift_destroy_boxed_opaque_existential_1(v276);
    (*(void (**)(uint64_t, uint64_t))(v255 + 8))(v277, v256);
    (*(void (**)(char *, uint64_t))(v252 + 8))(v210, v213);
    v227 = *(void **)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties);
    *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties) = v226;

    __swift_destroy_boxed_opaque_existential_1((uint64_t)v278);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v214);
    return v6;
  }
  LODWORD(v270) = v137;
  v138 = swift_slowAlloc();
  v264 = (void *)swift_slowAlloc();
  v280 = v264;
  *(_DWORD *)v138 = 136446466;
  v139 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
  v140 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
  swift_bridgeObjectRetain();
  *(_QWORD *)&v282 = sub_1D2537880(v139, v140, (uint64_t *)&v280);
  sub_1D26CDF50();
  swift_bridgeObjectRelease();
  swift_release_n();
  *(_WORD *)(v138 + 12) = 2082;
  v141 = (_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource);
  v142 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource + 24);
  v143 = *(_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource + 32);
  v144 = __swift_project_boxed_opaque_existential_0((_QWORD *)(v6 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource), v142);
  v145 = *(_QWORD *)(v142 - 8);
  MEMORY[0x1E0C80A78](v144);
  v147 = (char *)&v229 - v146;
  (*(void (**)(char *))(v145 + 16))((char *)&v229 - v146);
  v148 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v143 + 8))(v142, v143);
  (*(void (**)(char *, uint64_t))(v145 + 8))(v147, v142);
  v149 = *(_QWORD *)&v148[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v150 = *(os_unfair_lock_s **)(v149 + 16);
  swift_retain();
  os_unfair_lock_lock(v150);
  v151 = (uint64_t)&v148[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
  swift_beginAccess();
  sub_1D2537078(v151, (uint64_t)&v282, &qword_1ED96BF40);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v149 + 16));
  swift_release();

  if (!v283)
  {
    sub_1D253703C((uint64_t)&v282, &qword_1ED96BF40);
    v152 = (uint64_t)v232;
    v231((uint64_t)v232, 1, 1, v266);
    goto LABEL_16;
  }
  __swift_project_boxed_opaque_existential_0(&v282, (uint64_t)v283);
  v152 = (uint64_t)v232;
  sub_1D26CD3E0();
  v153 = v266;
  v231(v152, 0, 1, v266);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v265 + 48))(v152, 1, v153) == 1)
  {
LABEL_16:
    sub_1D253703C(v152, &qword_1ED96B1E0);
    v172 = 0xE900000000000064;
    v170 = 0x6E756F6620746F6ELL;
    v165 = v235;
    v166 = v264;
LABEL_17:
    *(_QWORD *)&v282 = sub_1D2537880(v170, v172, (uint64_t *)&v280);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v136, (os_log_type_t)v270, "[%{public}s] initial entry: %{public}s", (uint8_t *)v138, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v166, -1, -1);
    MEMORY[0x1D823A5E0](v138, -1, -1);

    v173 = v165;
    goto LABEL_18;
  }
  sub_1D253703C(v152, &qword_1ED96B1E0);
  v154 = v141[3];
  v155 = v141[4];
  v156 = __swift_project_boxed_opaque_existential_0(v141, v154);
  v263 = &v229;
  v157 = *(_QWORD *)(v154 - 8);
  MEMORY[0x1E0C80A78](v156);
  v159 = (char *)&v229 - ((v158 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v157 + 16))(v159);
  v160 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v155 + 8))(v154, v155);
  (*(void (**)(char *, uint64_t))(v157 + 8))(v159, v154);
  v161 = *(_QWORD *)&v160[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v162 = *(os_unfair_lock_s **)(v161 + 16);
  swift_retain();
  os_unfair_lock_lock(v162);
  v163 = (uint64_t)&v160[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
  swift_beginAccess();
  sub_1D2537078(v163, (uint64_t)&v282, &qword_1ED96BF40);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v161 + 16));
  swift_release();

  if (v283)
  {
    __swift_project_boxed_opaque_existential_0(&v282, (uint64_t)v283);
    v164 = v229;
    sub_1D26CD3E0();
    v165 = v235;
    v166 = v264;
    if (qword_1ED96C7C0 != -1)
      swift_once();
    v167 = (id)qword_1ED96C848;
    v168 = (void *)sub_1D26CB940();
    v169 = objc_msgSend(v167, sel_stringFromDate_, v168);

    v170 = sub_1D26CD938();
    v172 = v171;

    (*(void (**)(char *, void (*)(char *, uint64_t, uint64_t, uint64_t)))(v265 + 8))(v164, v266);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v282);
    goto LABEL_17;
  }
  result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_1D26056FC()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D2607EA4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2605750()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t result;
  uint64_t v11;
  NSObject *v12;
  int v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  os_unfair_lock_s *v28;
  uint64_t v29;
  uint64_t v30;
  id v31;
  void *v32;
  id v33;
  uint64_t v34;
  unint64_t v35;
  unint64_t v36;
  os_log_t v37;
  uint64_t v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  int v45;
  os_log_t v46;
  char *v47;
  _QWORD v48[3];
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v43 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CB9DC();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v11 = result;
    BSDispatchQueueAssertMain();
    swift_retain_n();
    v12 = sub_1D26CC084();
    v13 = sub_1D26CDCE0();
    if (!os_log_type_enabled(v12, (os_log_type_t)v13))
    {

      swift_release_n();
LABEL_13:
      v38 = *(_QWORD *)(v11 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewableEntryCache);
      v39 = *(_QWORD *)(v38 + 24);
      v40 = *(os_unfair_lock_s **)(v39 + 16);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v40);
      swift_beginAccess();
      *(_QWORD *)(v38 + 32) = MEMORY[0x1E0DEE9E0];
      swift_bridgeObjectRelease();
      objc_msgSend(*(id *)(v38 + 40), sel_removeAllObjects);
      v41 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v41 - 8) + 56))(v2, 1, 1, v41);
      v42 = v38 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
      swift_beginAccess();
      sub_1D25AB51C((uint64_t)v2, v42, &qword_1ED96CDD8);
      swift_endAccess();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 16));
      swift_release();
      swift_release();
      LOBYTE(v48[0]) = 3;
      sub_1D26083C0((char *)v48);
      return swift_release();
    }
    v45 = v13;
    v46 = v12;
    v47 = v2;
    v14 = swift_slowAlloc();
    v44 = swift_slowAlloc();
    v54 = v44;
    *(_DWORD *)v14 = 136446466;
    v15 = *(_QWORD *)(v11 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v16 = *(_QWORD *)(v11 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    v51[0] = sub_1D2537880(v15, v16, &v54);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v14 + 12) = 2082;
    v17 = v11 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource;
    sub_1D2538510(v11 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v48);
    v19 = v49;
    v18 = v50;
    __swift_project_boxed_opaque_existential_0(v48, v49);
    v20 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v18 + 8))(v19, v18);
    v21 = *(_QWORD *)&v20[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
    v22 = *(os_unfair_lock_s **)(v21 + 16);
    swift_retain();
    os_unfair_lock_lock(v22);
    v23 = (uint64_t)&v20[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
    swift_beginAccess();
    sub_1D2537078(v23, (uint64_t)v51, &qword_1ED96BF40);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 16));
    swift_release();

    if (v52)
    {
      __swift_project_boxed_opaque_existential_0(v51, v52);
      sub_1D26CD3E0();
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v4 + 56))(v9, 0, 1, v3);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v9, 1, v3) != 1)
      {
        sub_1D253703C((uint64_t)v9, &qword_1ED96B1E0);
        sub_1D2538510(v17, (uint64_t)v51);
        v24 = v52;
        v25 = v53;
        __swift_project_boxed_opaque_existential_0(v51, v52);
        v26 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v24, v25);
        v27 = *(_QWORD *)&v26[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
        v28 = *(os_unfair_lock_s **)(v27 + 16);
        swift_retain();
        os_unfair_lock_lock(v28);
        v29 = (uint64_t)&v26[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
        swift_beginAccess();
        sub_1D2537078(v29, (uint64_t)v48, &qword_1ED96BF40);
        os_unfair_lock_unlock(*(os_unfair_lock_t *)(v27 + 16));
        swift_release();

        if (!v49)
        {
          result = swift_release();
          __break(1u);
          return result;
        }
        __swift_project_boxed_opaque_existential_0(v48, v49);
        sub_1D26CD3E0();
        v30 = v44;
        if (qword_1ED96C7C0 != -1)
          swift_once();
        v31 = (id)qword_1ED96C848;
        v32 = (void *)sub_1D26CB940();
        v33 = objc_msgSend(v31, sel_stringFromDate_, v32);

        v34 = sub_1D26CD938();
        v36 = v35;

        (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v51);
        goto LABEL_12;
      }
    }
    else
    {
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v48);
      sub_1D253703C((uint64_t)v51, &qword_1ED96BF40);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v4 + 56))(v9, 1, 1, v3);
    }
    sub_1D253703C((uint64_t)v9, &qword_1ED96B1E0);
    v36 = 0xE900000000000064;
    v34 = 0x6E756F6620746F6ELL;
    v30 = v44;
LABEL_12:
    v51[0] = sub_1D2537880(v34, v36, &v54);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    v37 = v46;
    _os_log_impl(&dword_1D2531000, v46, (os_log_type_t)v45, "[%{public}s] new live entry: %{public}s", (uint8_t *)v14, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v30, -1, -1);
    MEMORY[0x1D823A5E0](v14, -1, -1);

    v2 = v47;
    goto LABEL_13;
  }
  return result;
}

void sub_1D2605E1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t Strong;
  uint64_t v24;
  NSObject *v25;
  int v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  os_unfair_lock_s *v40;
  uint64_t v41;
  id v42;
  void *v43;
  id v44;
  uint64_t v45;
  unint64_t v46;
  unint64_t v47;
  os_log_t v48;
  uint64_t v49;
  uint64_t v50;
  int EnumCaseMultiPayload;
  uint64_t v52;
  uint64_t v53;
  int v54;
  uint64_t v55;
  uint64_t v56;
  os_unfair_lock_s *v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int v62;
  os_log_t v63;
  char *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  _QWORD v69[3];
  uint64_t v70;
  uint64_t v71[3];
  _QWORD v72[3];
  uint64_t v73;
  uint64_t v74;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v60 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  v8 = MEMORY[0x1E0C80A78](v7);
  v68 = (uint64_t)&v60 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v67 = (uint64_t)&v60 - v11;
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v60 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v60 - v15;
  v17 = sub_1D26CB9DC();
  v18 = *(_QWORD *)(v17 - 8);
  MEMORY[0x1E0C80A78](v17);
  v66 = (char *)&v60 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v20);
  v22 = (char *)&v60 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (!Strong)
    return;
  v24 = Strong;
  BSDispatchQueueAssertMain();
  sub_1D2538510(a3, (uint64_t)v72);
  swift_retain_n();
  v25 = sub_1D26CC084();
  v26 = sub_1D26CDD04();
  if (!os_log_type_enabled(v25, (os_log_type_t)v26))
  {

    swift_release_n();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
    goto LABEL_13;
  }
  v62 = v26;
  v63 = v25;
  v65 = v7;
  v64 = v6;
  v27 = swift_slowAlloc();
  v61 = swift_slowAlloc();
  v71[0] = v61;
  *(_DWORD *)v27 = 136446466;
  v28 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
  v29 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
  swift_bridgeObjectRetain();
  v69[0] = sub_1D2537880(v28, v29, v71);
  sub_1D26CDF50();
  swift_bridgeObjectRelease();
  swift_release_n();
  *(_WORD *)(v27 + 12) = 2082;
  v30 = v73;
  v31 = v74;
  __swift_project_boxed_opaque_existential_0(v72, v73);
  v32 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v31 + 8))(v30, v31);
  v33 = *(_QWORD *)&v32[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v34 = *(os_unfair_lock_s **)(v33 + 16);
  swift_retain();
  os_unfair_lock_lock(v34);
  v35 = (uint64_t)&v32[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
  swift_beginAccess();
  sub_1D2537078(v35, (uint64_t)v69, &qword_1ED96BF40);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
  swift_release();

  if (v70)
  {
    __swift_project_boxed_opaque_existential_0(v69, v70);
    sub_1D26CD3E0();
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v22, 0, 1, v17);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v22, 1, v17) != 1)
    {
      sub_1D253703C((uint64_t)v22, &qword_1ED96B1E0);
      v36 = v73;
      v37 = v74;
      __swift_project_boxed_opaque_existential_0(v72, v73);
      v38 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v37 + 8))(v36, v37);
      v39 = *(_QWORD *)&v38[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
      v40 = *(os_unfair_lock_s **)(v39 + 16);
      swift_retain();
      os_unfair_lock_lock(v40);
      v41 = (uint64_t)&v38[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
      swift_beginAccess();
      sub_1D2537078(v41, (uint64_t)v69, &qword_1ED96BF40);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v39 + 16));
      swift_release();

      if (!v70)
      {
        __break(1u);
        return;
      }
      __swift_project_boxed_opaque_existential_0(v69, v70);
      sub_1D26CD3E0();
      if (qword_1ED96C7C0 != -1)
        swift_once();
      v42 = (id)qword_1ED96C848;
      v43 = (void *)sub_1D26CB940();
      v44 = objc_msgSend(v42, sel_stringFromDate_, v43);

      v45 = sub_1D26CD938();
      v47 = v46;

      (*(void (**)(char *, uint64_t))(v18 + 8))(v66, v17);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v69);
      goto LABEL_12;
    }
  }
  else
  {
    sub_1D253703C((uint64_t)v69, &qword_1ED96BF40);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v18 + 56))(v22, 1, 1, v17);
  }
  sub_1D253703C((uint64_t)v22, &qword_1ED96B1E0);
  v47 = 0xE900000000000064;
  v45 = 0x6E756F6620746F6ELL;
LABEL_12:
  v69[0] = sub_1D2537880(v45, v47, v71);
  sub_1D26CDF50();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v72);
  v48 = v63;
  _os_log_impl(&dword_1D2531000, v63, (os_log_type_t)v62, "[%{public}s] new placeholder entry: %{public}s", (uint8_t *)v27, 0x16u);
  v49 = v61;
  swift_arrayDestroy();
  MEMORY[0x1D823A5E0](v49, -1, -1);
  MEMORY[0x1D823A5E0](v27, -1, -1);

  v6 = v64;
LABEL_13:
  v50 = v24 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v50, (uint64_t)v16, &qword_1ED96D438);
  sub_1D2537078((uint64_t)v16, (uint64_t)v14, &qword_1ED96D438);
  EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  sub_1D253703C((uint64_t)v14, &qword_1ED96D438);
  sub_1D253703C((uint64_t)v16, &qword_1ED96D438);
  if (EnumCaseMultiPayload == 1
    || (v52 = v67,
        sub_1D2537078(v50, v67, &qword_1ED96D438),
        v53 = v68,
        sub_1D2537078(v52, v68, &qword_1ED96D438),
        v54 = swift_getEnumCaseMultiPayload(),
        sub_1D253703C(v53, &qword_1ED96D438),
        sub_1D253703C(v52, &qword_1ED96D438),
        v54 == 2))
  {
    v55 = *(_QWORD *)(v24 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewableEntryCache);
    v56 = *(_QWORD *)(v55 + 24);
    v57 = *(os_unfair_lock_s **)(v56 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v57);
    swift_beginAccess();
    *(_QWORD *)(v55 + 32) = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v55 + 40), sel_removeAllObjects);
    v58 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v58 - 8) + 56))(v6, 1, 1, v58);
    v59 = v55 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
    swift_beginAccess();
    sub_1D25AB51C((uint64_t)v6, v59, &qword_1ED96CDD8);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v56 + 16));
    swift_release();
    swift_release();
    LOBYTE(v71[0]) = 4;
    sub_1D26083C0((char *)v71);
  }
  swift_release();
}

uint64_t sub_1D260665C()
{
  uint64_t result;
  char v1;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = 9;
    sub_1D26083C0(&v1);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26066BC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t result;
  uint64_t v22;
  uint64_t v23;
  void (*v24)(char *, uint64_t, uint64_t);
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  char *v40;
  char *v41;
  NSObject *v42;
  os_log_type_t v43;
  int v44;
  uint64_t v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  char *v50;
  uint64_t v51;
  char *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  unint64_t v56;
  unint64_t v57;
  void (*v58)(char *, uint64_t);
  os_log_t v59;
  uint64_t v60;
  _QWORD v61[2];
  int v62;
  os_log_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  char *v73;
  char *v74;
  char *v75;
  char *v76;
  uint64_t v77;
  uint64_t v78[3];
  _QWORD v79[3];
  uint64_t v80;
  uint64_t v81;

  v0 = sub_1D26CD1A0();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v73 = (char *)v61 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v72 = sub_1D26CD1DC();
  v71 = *(_QWORD *)(v72 - 8);
  MEMORY[0x1E0C80A78](v72);
  v70 = (char *)v61 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CDD8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)v61 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC7A4();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)v61 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v75 = (char *)v61 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v76 = (char *)v61 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)v61 - v17;
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)v61 - v19;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v22 = result;
    v66 = v1;
    v67 = v0;
    BSDispatchQueueAssertMain();
    v23 = v22 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
    swift_beginAccess();
    v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    v24(v20, v23, v7);
    sub_1D2538510(v22 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v79);
    v69 = v11;
    v74 = v20;
    v26 = v80;
    v25 = v81;
    __swift_project_boxed_opaque_existential_0(v79, v80);
    v27 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v25 + 8))(v26, v25);
    v28 = *(_QWORD *)&v27[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider];
    swift_retain();

    v29 = *(_QWORD *)(v28 + 24);
    v30 = *(os_unfair_lock_s **)(v29 + 16);
    swift_retain();
    os_unfair_lock_lock(v30);
    v31 = v28 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
    swift_beginAccess();
    v24(v18, v31, v7);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v29 + 16));
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v79);
    v32 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewableEntryCache);
    v33 = *(_QWORD *)(v32 + 24);
    v34 = *(os_unfair_lock_s **)(v33 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v34);
    swift_beginAccess();
    *(_QWORD *)(v32 + 32) = MEMORY[0x1E0DEE9E0];
    swift_bridgeObjectRelease();
    objc_msgSend(*(id *)(v32 + 40), sel_removeAllObjects);
    v35 = type metadata accessor for LiveWidgetEntryViewableEntryCache.PrewarmRequest(0);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56))(v6, 1, 1, v35);
    v36 = v32 + OBJC_IVAR____TtC9ChronoKit33LiveWidgetEntryViewableEntryCache__lock_prewarmRequest;
    swift_beginAccess();
    v37 = v36;
    v38 = v74;
    sub_1D25AB51C((uint64_t)v6, v37, &qword_1ED96CDD8);
    swift_endAccess();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
    v39 = v69;
    swift_release();
    swift_release();
    v40 = v76;
    v24(v76, (uint64_t)v18, v7);
    swift_beginAccess();
    v68 = v8;
    (*(void (**)(uint64_t, char *, uint64_t))(v8 + 40))(v23, v40, v7);
    swift_endAccess();
    sub_1D2608154();
    v41 = v75;
    v24(v75, (uint64_t)v38, v7);
    v24(v39, (uint64_t)v18, v7);
    swift_retain_n();
    v42 = sub_1D26CC084();
    v43 = sub_1D26CDD04();
    v44 = v43;
    if (os_log_type_enabled(v42, v43))
    {
      v45 = swift_slowAlloc();
      v63 = v42;
      v46 = v39;
      v47 = v45;
      v64 = swift_slowAlloc();
      v78[0] = v64;
      *(_DWORD *)v47 = 136446466;
      v62 = v44;
      v65 = v18;
      v48 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v49 = *(_QWORD *)(v22 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v77 = sub_1D2537880(v48, v49, v78);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      *(_WORD *)(v47 + 12) = 2082;
      v61[1] = v47 + 14;
      v24(v76, (uint64_t)v41, v7);
      v50 = v70;
      sub_1D26CD1B8();
      v51 = v66;
      v52 = v73;
      v53 = v67;
      (*(void (**)(char *, _QWORD, uint64_t))(v66 + 104))(v73, *MEMORY[0x1E0CEFC28], v67);
      v54 = sub_1D26CD17C();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v52, v53);
      (*(void (**)(char *, uint64_t))(v71 + 8))(v50, v72);
      v77 = v54;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
      sub_1D2536488((unint64_t *)&qword_1ED96BF78, &qword_1ED96BF70, MEMORY[0x1E0DEAF20]);
      v55 = sub_1D26CD8E4();
      v57 = v56;
      v38 = v74;
      swift_bridgeObjectRelease();
      v77 = sub_1D2537880(v55, v57, v78);
      sub_1D26CDF50();
      v18 = v65;
      swift_bridgeObjectRelease();
      v58 = *(void (**)(char *, uint64_t))(v68 + 8);
      v58(v41, v7);
      v58(v46, v7);
      v59 = v63;
      _os_log_impl(&dword_1D2531000, v63, (os_log_type_t)v62, "[%{public}s] environment changed: %{public}s", (uint8_t *)v47, 0x16u);
      v60 = v64;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v60, -1, -1);
      MEMORY[0x1D823A5E0](v47, -1, -1);

    }
    else
    {

      swift_release_n();
      v58 = *(void (**)(char *, uint64_t))(v68 + 8);
      v58(v41, v7);
      v58(v39, v7);
    }
    LOBYTE(v78[0]) = 5;
    sub_1D26083C0((char *)v78);
    swift_release();
    v58(v18, v7);
    return ((uint64_t (*)(char *, uint64_t))v58)(v38, v7);
  }
  return result;
}

void LiveWidgetEntryViewModel.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  void (*v3)(uint64_t, uint64_t);
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  if (*(_BYTE *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__invalidated) == 1)
  {
    v1 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets;
    v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
    v3 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8);
    v3(v1, v2);
    v3(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled, v2);
    v3(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape, v2);
    v3(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown, v2);
    v4 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler;
    v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C900);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
    v6 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__interactionHandler;
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E10);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 8))(v6, v7);
    v3(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate, v2);
    v8 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder;
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962E00);
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8))(v8, v9);
    swift_release();
    swift_release();
    sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry, &qword_1ED96D438);
    __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__keybagStateProvider);
    v10 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
    v11 = sub_1D26CC7A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
    swift_release();
    v12 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
    v13 = sub_1D26CC2C4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
    sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme, &qword_1ED96B268);
    v14 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
    v15 = sub_1D26CBC4C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 8))(v14, v15);
    swift_release();
    swift_release();
    sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate, &qword_1ED96B1E0);

    sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL, (uint64_t *)&unk_1ED96FC50);
    swift_bridgeObjectRelease();
    v16 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
    v17 = sub_1D26CC09C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 8))(v16, v17);
    __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource);
    sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__placeholderSource, (uint64_t *)&unk_1ED962EF8);
    swift_release();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();
    __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__dataProtectionMonitor);
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

uint64_t LiveWidgetEntryViewModel.__deallocating_deinit()
{
  LiveWidgetEntryViewModel.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26071F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unsigned int (*v23)(char *, uint64_t, uint64_t);
  uint64_t v24;
  NSObject *v25;
  os_log_type_t v26;
  uint8_t *v27;
  uint64_t result;
  void (*v29)(_QWORD, uint64_t);
  uint64_t v30;
  char *v31;
  NSObject *v32;
  os_log_type_t v33;
  uint8_t *v34;
  void (*v35)(_QWORD *, uint64_t);
  uint64_t v36;
  _QWORD *v37;
  NSObject *v38;
  os_log_type_t v39;
  uint8_t *v40;
  uint64_t v41;
  char *v42;
  char *v43;
  char *v44;
  void (*v45)(_QWORD *, uint64_t);
  void (*v46)(_QWORD *, uint64_t);

  v1 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v41 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v44 = (char *)&v41 - v12;
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v41 - v13;
  v15 = sub_1D26CB880();
  v16 = *(_QWORD *)(v15 - 8);
  v17 = MEMORY[0x1E0C80A78](v15);
  v42 = (char *)&v41 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v17);
  v43 = (char *)&v41 - v19;
  v20 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D2537078(v20, (uint64_t)v6, &qword_1ED96D438);
  if (swift_getEnumCaseMultiPayload() > 1)
  {
    swift_release();
    v22 = v16;
    v21 = v15;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v16 + 56))(v14, 1, 1, v15);
  }
  else
  {
    sub_1D2539ADC((uint64_t)v6, (uint64_t)v3, type metadata accessor for DefaultWidgetLiveViewEntry);
    DefaultWidgetLiveViewEntry.widgetURL.getter((uint64_t)v14);
    sub_1D25340E4((uint64_t)v3, type metadata accessor for DefaultWidgetLiveViewEntry);
    v21 = v15;
    v22 = v16;
  }
  v23 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v22 + 48);
  if (v23(v14, 1, v21) != 1)
  {
    v31 = v43;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v43, v14, v21);
    v32 = sub_1D26CC084();
    v33 = sub_1D26CDD04();
    if (os_log_type_enabled(v32, v33))
    {
      v34 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v34 = 0;
      _os_log_impl(&dword_1D2531000, v32, v33, "Launching from widgetURL", v34, 2u);
      MEMORY[0x1D823A5E0](v34, -1, -1);
    }

    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    v35 = v46;
    if (!v46)
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v31, v21);
    LOBYTE(v46) = 1;
    v36 = (uint64_t)v44;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v44, v31, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v36, 0, 1, v21);
    swift_retain();
    v37 = &v46;
    goto LABEL_18;
  }
  sub_1D253703C((uint64_t)v14, (uint64_t *)&unk_1ED96FC50);
  v24 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_currentActionURL;
  swift_beginAccess();
  sub_1D2537078(v24, (uint64_t)v10, (uint64_t *)&unk_1ED96FC50);
  if (v23(v10, 1, v21) != 1)
  {
    v31 = v42;
    (*(void (**)(char *, char *, uint64_t))(v22 + 32))(v42, v10, v21);
    v38 = sub_1D26CC084();
    v39 = sub_1D26CDD04();
    if (os_log_type_enabled(v38, v39))
    {
      v40 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v40 = 0;
      _os_log_impl(&dword_1D2531000, v38, v39, "Launching from legacy widgetURL", v40, 2u);
      MEMORY[0x1D823A5E0](v40, -1, -1);
    }

    swift_getKeyPath();
    swift_getKeyPath();
    sub_1D26CC1E0();
    swift_release();
    swift_release();
    v35 = v45;
    if (!v45)
      return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v31, v21);
    LOBYTE(v45) = 1;
    v36 = (uint64_t)v44;
    (*(void (**)(char *, char *, uint64_t))(v22 + 16))(v44, v31, v21);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v22 + 56))(v36, 0, 1, v21);
    swift_retain();
    v37 = &v45;
LABEL_18:
    v35(v37, v36);
    sub_1D25495F4((uint64_t)v35);
    sub_1D25495F4((uint64_t)v35);
    sub_1D253703C(v36, (uint64_t *)&unk_1ED96FC50);
    return (*(uint64_t (**)(char *, uint64_t))(v22 + 8))(v31, v21);
  }
  sub_1D253703C((uint64_t)v10, (uint64_t *)&unk_1ED96FC50);
  v25 = sub_1D26CC084();
  v26 = sub_1D26CDD04();
  if (os_log_type_enabled(v25, v26))
  {
    v27 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v27 = 0;
    _os_log_impl(&dword_1D2531000, v25, v26, "Launching with no widgetURL", v27, 2u);
    MEMORY[0x1D823A5E0](v27, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  v29 = (void (*)(_QWORD, uint64_t))v45;
  if (v45)
  {
    LOBYTE(v45) = 0;
    v30 = (uint64_t)v44;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v22 + 56))(v44, 1, 1, v21);
    swift_retain();
    v29(&v45, v30);
    sub_1D25495F4((uint64_t)v29);
    sub_1D25495F4((uint64_t)v29);
    return sub_1D253703C(v30, (uint64_t *)&unk_1ED96FC50);
  }
  return result;
}

void sub_1D260786C()
{
  uint64_t v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  *(_BYTE *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__invalidated) = 1;
  v1 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__descriptorDidChangeSubscription;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__descriptorDidChangeSubscription))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  *(_QWORD *)(v0 + v1) = 0;
  swift_release();
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewSecurityDataSource) = 0;
  swift_release();
  v2 = (_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__cancellable);
  swift_beginAccess();
  v3 = swift_bridgeObjectRetain();
  sub_1D25FA570(v3);
  swift_bridgeObjectRelease();
  *v2 = MEMORY[0x1E0DEE9E8];
  swift_bridgeObjectRelease();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1EC();
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1EC();
  sub_1D25FC228();
}

uint64_t sub_1D26079CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  _QWORD *v5;
  uint64_t v6;

  if (a1)
  {
    v4 = swift_allocObject();
    swift_weakInit();
    v5 = (_QWORD *)swift_allocObject();
    v5[2] = v4;
    v5[3] = a1;
    v5[4] = a2;
    swift_getKeyPath();
    swift_getKeyPath();
    v6 = swift_allocObject();
    *(_QWORD *)(v6 + 16) = sub_1D260DF6C;
    *(_QWORD *)(v6 + 24) = v5;
    sub_1D2549DF0(a1);
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
  }
  swift_retain();
  return sub_1D26CC1EC();
}

uint64_t sub_1D2607B00(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t result;
  uint64_t v12;
  int EnumCaseMultiPayload;
  _BYTE v14[15];
  char v15;

  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v6);
  v10 = &v14[-v9];
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v12 = result + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
    swift_beginAccess();
    sub_1D2537078(v12, (uint64_t)v10, &qword_1ED96D438);
    sub_1D2537078((uint64_t)v10, (uint64_t)v8, &qword_1ED96D438);
    EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    sub_1D253703C((uint64_t)v8, &qword_1ED96D438);
    sub_1D253703C((uint64_t)v10, &qword_1ED96D438);
    if (EnumCaseMultiPayload != 1)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1D26CC1E0();
      swift_release();
      swift_release();
      if ((v15 & 1) == 0)
      {
        swift_getKeyPath();
        swift_getKeyPath();
        v15 = 1;
        swift_retain();
        sub_1D26CC1EC();
      }
      a3(a1);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2607CE8(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  NSObject *v5;
  os_log_type_t v6;
  uint8_t *v7;
  void (*v8)(_QWORD, char *);
  uint64_t v9;
  uint64_t v10;
  void (*v12)(_QWORD, char *);

  v2 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CC084();
  v6 = sub_1D26CDD04();
  if (os_log_type_enabled(v5, v6))
  {
    v7 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v7 = 0;
    _os_log_impl(&dword_1D2531000, v5, v6, "Launching from system URL", v7, 2u);
    MEMORY[0x1D823A5E0](v7, -1, -1);
  }

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  v8 = v12;
  if (v12)
  {
    LOBYTE(v12) = 2;
    v9 = sub_1D26CB880();
    v10 = *(_QWORD *)(v9 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v4, a1, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v4, 0, 1, v9);
    swift_retain();
    v8(&v12, v4);
    sub_1D25495F4((uint64_t)v8);
    sub_1D25495F4((uint64_t)v8);
    sub_1D253703C((uint64_t)v4, (uint64_t *)&unk_1ED96FC50);
  }
  return 1;
}

void sub_1D2607EA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  id *v4;
  char *v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  void *v13;
  os_unfair_lock_s *v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  void *v18;
  id v19;
  id v20;
  char v21;
  id *v22;
  id v23;
  int v24;
  int v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v1 = v0;
  v2 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v2);
  v4 = (id *)((char *)v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  BSDispatchQueueAssertMain();
  v5 = (char *)(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  swift_beginAccess();
  v6 = *v5;
  v7 = v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource;
  sub_1D2538510(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v26);
  v8 = v27;
  v9 = v28;
  __swift_project_boxed_opaque_existential_0(v26, v27);
  v10 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v9 + 8))(v8, v9);
  v11 = *(_QWORD *)&v10[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  v13 = *(void **)&v10[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  v14 = *(os_unfair_lock_s **)(v11 + 16);
  v15 = v13;
  os_unfair_lock_unlock(v14);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
  if (v13)
  {
    sub_1D2538510(v7, (uint64_t)v26);
    v16 = v27;
    v17 = v28;
    __swift_project_boxed_opaque_existential_0(v26, v27);
    v18 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v17 + 8))(v16, v17);
    sub_1D2534120((uint64_t)v18 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

    v19 = *v4;
    sub_1D25340E4((uint64_t)v4, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
    v20 = objc_msgSend(v19, sel_family);

    LODWORD(v19) = objc_msgSend(v15, sel_isTransparentForFamily_, v20);
    if ((_DWORD)v19)
    {
      if ((v6 & 1) != 0)
        return;
      v21 = *v5;
      *v5 = 1;
      if ((v21 & 1) != 0)
        return;
LABEL_8:
      swift_retain();
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
      sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
      sub_1D26CC1A4();
      swift_release();
      return;
    }
  }
  v22 = (id *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v23 = objc_msgSend(*v22, sel_backgroundViewPolicy);
  if (v6 != (v23 != 0))
  {
    v24 = v23 != 0;
    v25 = *v5;
    *v5 = v24;
    if (v24 != v25)
      goto LABEL_8;
  }
}

uint64_t sub_1D2608154()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v20;
  uint64_t v21;

  v1 = v0;
  v2 = sub_1D26CC7A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B268);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CC2C4();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v21 - v14;
  BSDispatchQueueAssertMain();
  v16 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme;
  swift_beginAccess();
  sub_1D2537078(v16, (uint64_t)v8, &qword_1ED96B268);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    sub_1D253703C((uint64_t)v8, &qword_1ED96B268);
    v17 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))(v5, v17, v2);
    sub_1D26CC474();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    v18 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v18, v13, v9);
    return swift_endAccess();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v8, v9);
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    v20 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
    swift_beginAccess();
    (*(void (**)(uint64_t, char *, uint64_t))(v10 + 40))(v20, v13, v9);
    swift_endAccess();
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
}

void sub_1D26083C0(char *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  char *v23;
  int v24;
  char v25;
  char **v26;
  char *v27;
  char isUniquelyReferenced_nonNull_native;
  unint64_t v29;
  unint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  int v40;
  int v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t *v45;
  const char *v46;
  int v47;
  char *v48;
  void (*v49)(char *, uint64_t);
  void *v50;
  uint64_t v51;
  unsigned __int8 *v52;
  int v53;
  _BYTE *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  BOOL v60;
  uint64_t v61;
  NSObject *v62;
  int v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  unint64_t v70;
  unint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  int v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  uint64_t v82;
  unint64_t v83;
  uint64_t v84;
  uint64_t v85;
  unint64_t v86;
  unint64_t v87;
  unsigned __int8 *v88;
  int v89;
  uint64_t v90;
  char *v91;
  _QWORD v92[6];
  char *v93;
  char *v94;
  const char *v95;
  int v96;
  uint64_t v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t *v101;
  uint64_t v102;
  int v103;
  uint64_t v104[3];
  uint64_t v105;
  char v106;

  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  v3 = MEMORY[0x1E0C80A78](v99);
  v5 = (char *)v92 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v3);
  v8 = (char *)v92 - v7;
  MEMORY[0x1E0C80A78](v6);
  v101 = (_QWORD *)((char *)v92 - v9);
  v10 = sub_1D26CB9DC();
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v98 = (char *)v92 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v13);
  v100 = (uint64_t)v92 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v92 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v16);
  v21 = (char *)v92 - v20;
  MEMORY[0x1E0C80A78](v19);
  v23 = (char *)v92 - v22;
  if ((*(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__invalidated) & 1) != 0)
    return;
  v24 = *a1;
  if (*(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__inBatch) == 1)
  {
    v25 = *a1;
    v26 = (char **)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__batchedChangeReasons);
    swift_beginAccess();
    v27 = *v26;
    isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *v26 = v27;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      v27 = sub_1D25616F8(0, *((_QWORD *)v27 + 2) + 1, 1, v27);
      *v26 = v27;
    }
    v30 = *((_QWORD *)v27 + 2);
    v29 = *((_QWORD *)v27 + 3);
    if (v30 >= v29 >> 1)
    {
      v91 = sub_1D25616F8((char *)(v29 > 1), v30 + 1, 1, v27);
      v31 = v25;
      v27 = v91;
      *v26 = v91;
    }
    else
    {
      v31 = v25;
    }
    *((_QWORD *)v27 + 2) = v30 + 1;
    v27[v30 + 32] = v31;
    swift_endAccess();
    return;
  }
  v94 = v5;
  v97 = v1;
  v96 = v24;
  v106 = v24;
  v32 = LiveWidgetViewChangeReason.rawValue.getter();
  v93 = v8;
  if (v32 == 0x646E456863746162 && v33 == 0xEA00000000006465)
  {
    swift_bridgeObjectRelease();
LABEL_12:
    v35 = v97;
    v36 = (uint64_t *)(v97 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__batchedChangeReasons);
    swift_beginAccess();
    v102 = *v36;
    swift_bridgeObjectRetain();
    goto LABEL_14;
  }
  v34 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  if ((v34 & 1) != 0)
    goto LABEL_12;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962FB0);
  v37 = swift_allocObject();
  *(_OWORD *)(v37 + 16) = xmmword_1D26D1280;
  v102 = v37;
  *(_BYTE *)(v37 + 32) = v96;
  v35 = v97;
LABEL_14:
  BSDispatchQueueAssertMain();
  v38 = v35;
  v39 = v35 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  sub_1D2537078(v39, (uint64_t)v23, &qword_1ED96B1E0);
  v95 = *(const char **)(v11 + 48);
  v40 = ((uint64_t (*)(char *, uint64_t, uint64_t))v95)(v23, 1, v10);
  sub_1D253703C((uint64_t)v23, &qword_1ED96B1E0);
  if (v40 == 1)
  {
    v41 = 0;
    v42 = v38;
  }
  else if (*(_BYTE *)(v38 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__currentViewInLowLuminance) == 1)
  {
    sub_1D25FCD98((uint64_t)v21);
    v43 = v100;
    v44 = v100 + *(int *)(v13 + 48);
    v45 = &qword_1ED96B1E0;
    sub_1D2537078((uint64_t)v21, v100, &qword_1ED96B1E0);
    sub_1D2537078(v39, v44, &qword_1ED96B1E0);
    v46 = v95;
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v95)(v43, 1, v10) == 1)
    {
      sub_1D253703C((uint64_t)v21, &qword_1ED96B1E0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v46)(v44, 1, v10) == 1)
      {
        v47 = -1;
      }
      else
      {
        v45 = &qword_1ED96B1E8;
        v47 = 0;
      }
    }
    else
    {
      sub_1D2537078(v43, (uint64_t)v18, &qword_1ED96B1E0);
      if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v46)(v44, 1, v10) == 1)
      {
        sub_1D253703C((uint64_t)v21, &qword_1ED96B1E0);
        (*(void (**)(char *, uint64_t))(v11 + 8))(v18, v10);
        v47 = 0;
        v45 = &qword_1ED96B1E8;
      }
      else
      {
        v48 = v98;
        (*(void (**)(char *, uint64_t, uint64_t))(v11 + 32))(v98, v44, v10);
        sub_1D25369B0((unint64_t *)&qword_1ED96B1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
        v47 = sub_1D26CD908();
        v49 = *(void (**)(char *, uint64_t))(v11 + 8);
        v49(v48, v10);
        v45 = &qword_1ED96B1E0;
        sub_1D253703C((uint64_t)v21, &qword_1ED96B1E0);
        v49(v18, v10);
      }
    }
    v42 = v97;
    sub_1D253703C(v43, v45);
    v41 = v47 ^ 1;
  }
  else
  {
    v41 = 1;
    v42 = v38;
  }
  v50 = (void *)v102;
  v51 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce;
  if (*(_BYTE *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce) == 1)
  {
    if (*(_QWORD *)(v102 + 16))
    {
      v100 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__hasLoadedViewOnce;
      swift_bridgeObjectRetain();
      v98 = "al";
      v95 = "timelineAdvancedOrNewArchive";
      v92[5] = "chive";
      v92[4] = "iers";
      v92[3] = "contentPauseResumption";
      v92[2] = "keybagLockPolicyChanged";
      v92[1] = "lockStateChanged";
      v92[0] = "inlineTextParameters";
      __asm { BR              X9 }
    }
    v52 = (unsigned __int8 *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused);
    swift_beginAccess();
    v53 = *v52 ^ 1 | v41;
  }
  else
  {
    v53 = 1;
  }
  v54 = (_BYTE *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground);
  swift_beginAccess();
  if ((*v54 & 1) != 0)
  {
LABEL_35:
    if ((v53 & 1) != 0)
      goto LABEL_36;
LABEL_41:
    *(_BYTE *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) = 1;
    swift_retain_n();
    swift_bridgeObjectRetain();
    v79 = sub_1D26CC084();
    v80 = sub_1D26CDD04();
    if (os_log_type_enabled(v79, v80))
    {
      v81 = swift_slowAlloc();
      v102 = swift_slowAlloc();
      v105 = v102;
      *(_DWORD *)v81 = 136446978;
      v82 = *(_QWORD *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v83 = *(_QWORD *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v104[0] = sub_1D2537880(v82, v83, &v105);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v81 + 12) = 2082;
      v84 = swift_bridgeObjectRetain();
      v85 = MEMORY[0x1D82392C0](v84, &type metadata for LiveWidgetViewChangeReason);
      v87 = v86;
      swift_bridgeObjectRelease();
      v104[0] = sub_1D2537880(v85, v87, &v105);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v81 + 22) = 1024;
      v88 = (unsigned __int8 *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused);
      swift_beginAccess();
      LODWORD(v88) = *v88;
      swift_release();
      v103 = (int)v88;
      sub_1D26CDF50();
      swift_release();
      *(_WORD *)(v81 + 28) = 1024;
      v89 = *v54;
      swift_release();
      v103 = v89;
      sub_1D26CDF50();
      swift_release();
      _os_log_impl(&dword_1D2531000, v79, v80, "[%{public}s] Ignored view update for reason: %{public}s, (content paused: %{BOOL}d, foreground: %{BOOL}d)", (uint8_t *)v81, 0x22u);
      v90 = v102;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v90, -1, -1);
      MEMORY[0x1D823A5E0](v81, -1, -1);

    }
    else
    {

      swift_release_n();
      swift_bridgeObjectRelease_n();
    }
    return;
  }
  LOBYTE(v104[0]) = v96;
  if (LiveWidgetViewChangeReason.rawValue.getter() == 0x7265646E6572 && v55 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    goto LABEL_35;
  }
  v78 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  if ((v78 & v53 & 1) == 0)
    goto LABEL_41;
LABEL_36:
  v56 = v101;
  sub_1D26094B4(v101);
  v57 = v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry;
  swift_beginAccess();
  sub_1D26106B4((uint64_t)v56, v57, &qword_1ED96D438);
  swift_endAccess();
  sub_1D253703C((uint64_t)v56, &qword_1ED96D438);
  v58 = OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber;
  v59 = *(_QWORD *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber);
  v60 = __OFADD__(v59, 1);
  v61 = v59 + 1;
  if (v60)
  {
    __break(1u);
    JUMPOUT(0x1D2609464);
  }
  *(_QWORD *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewSequenceNumber) = v61;
  swift_retain_n();
  swift_bridgeObjectRetain_n();
  v62 = sub_1D26CC084();
  v63 = sub_1D26CDD04();
  if (os_log_type_enabled(v62, (os_log_type_t)v63))
  {
    LODWORD(v101) = v63;
    v100 = v51;
    v64 = swift_slowAlloc();
    v98 = (char *)swift_slowAlloc();
    v104[0] = (uint64_t)v98;
    *(_DWORD *)v64 = 136446978;
    v65 = *(_QWORD *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
    v66 = *(_QWORD *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
    swift_bridgeObjectRetain();
    v105 = sub_1D2537880(v65, v66, v104);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release();
    *(_WORD *)(v64 + 12) = 2082;
    v67 = (uint64_t)v93;
    sub_1D2537078(v57, (uint64_t)v93, &qword_1ED96D438);
    v68 = (uint64_t)v94;
    sub_1D2537078(v67, (uint64_t)v94, &qword_1ED96D438);
    swift_getEnumCaseMultiPayload();
    sub_1D253703C(v68, &qword_1ED96D438);
    sub_1D253703C(v67, &qword_1ED96D438);
    v69 = sub_1D26CD9A4();
    v71 = v70;
    swift_bridgeObjectRelease();
    v105 = sub_1D2537880(v69, v71, v104);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_release_n();
    *(_WORD *)(v64 + 22) = 2048;
    v72 = *(_QWORD *)(v42 + v58);
    swift_release();
    v105 = v72;
    sub_1D26CDF50();
    swift_release();
    *(_WORD *)(v64 + 32) = 2082;
    v50 = (void *)v102;
    v73 = swift_bridgeObjectRetain();
    v74 = MEMORY[0x1D82392C0](v73, &type metadata for LiveWidgetViewChangeReason);
    v76 = v75;
    swift_bridgeObjectRelease();
    v105 = sub_1D2537880(v74, v76, v104);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v62, (os_log_type_t)v101, "[%{public}s] Evaluated inner view with result: %{public}s - view sequence number: %lld, reasons: %{public}s", (uint8_t *)v64, 0x2Au);
    v77 = v98;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v77, -1, -1);
    MEMORY[0x1D823A5E0](v64, -1, -1);

    v51 = v100;
    if ((*(_BYTE *)(v42 + v100) & 1) != 0)
      goto LABEL_46;
    goto LABEL_45;
  }

  swift_release_n();
  swift_bridgeObjectRelease_n();
  if ((*(_BYTE *)(v42 + v51) & 1) == 0)
  {
LABEL_45:
    swift_bridgeObjectRelease();
    *(_BYTE *)(v42 + v51) = 1;
    v50 = &unk_1E93D36B0;
  }
LABEL_46:
  *(_BYTE *)(v42 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__needsViewRebuild) = 0;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  if (LOBYTE(v104[0]) == 1)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    LOBYTE(v104[0]) = 0;
    swift_retain();
    sub_1D26CC1EC();
  }
  v104[0] = (uint64_t)v50;
  swift_retain();
  sub_1D26CC138();
  swift_release();
  swift_bridgeObjectRelease();
}

uint64_t sub_1D26094B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  BOOL v12;
  uint64_t v13;
  NSObject *v15;
  uint64_t v16;
  uint8_t *v17;
  uint64_t v18;
  unint64_t v19;
  uint64_t v20;
  uint64_t *v21;
  uint64_t v22[6];

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D438);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v22[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22[-1] - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
  swift_beginAccess();
  sub_1D2537078(v10, (uint64_t)v9, &qword_1ED96B1E0);
  v11 = sub_1D26CB9DC();
  v12 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 48))(v9, 1, v11) != 1;
  sub_1D253703C((uint64_t)v9, &qword_1ED96B1E0);
  *(_BYTE *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__currentViewInLowLuminance) = v12;
  v13 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewSecurityDataSource);
  if (v13)
  {
    v22[3] = type metadata accessor for _LiveWidgetEntryViewModelSecurityDataSource();
    v22[4] = sub_1D25369B0(qword_1ED96D488, (uint64_t (*)(uint64_t))type metadata accessor for _LiveWidgetEntryViewModelSecurityDataSource, (uint64_t)&unk_1D26D6EC8);
    v22[0] = v13;
    swift_retain_n();
    sub_1D25F87A8(v22, (uint64_t)v6);
    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
    return sub_1D25384CC((uint64_t)v6, (uint64_t)a1, &qword_1ED96D438);
  }
  else
  {
    swift_retain_n();
    v15 = sub_1D26CC084();
    v16 = sub_1D26CDCF8();
    if (os_log_type_enabled(v15, (os_log_type_t)v16))
    {
      v17 = (uint8_t *)swift_slowAlloc();
      v18 = swift_slowAlloc();
      v21 = a1;
      v22[0] = v18;
      *(_DWORD *)v17 = 136446210;
      v20 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v19 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      v22[5] = sub_1D2537880(v20, v19, v22);
      a1 = v21;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_1D2531000, v15, (os_log_type_t)v16, "[%{public}s] Could not evaluate inner view because the viewSecurityDataSource is nil.", v17, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v18, -1, -1);
      MEMORY[0x1D823A5E0](v17, -1, -1);

    }
    else
    {

      swift_release_n();
    }
    *a1 = sub_1D26CCFC0();
    return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_1D26097DC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  uint64_t v16;
  void (*v17)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  void *v27;
  void (*v28)(char *, uint64_t);
  uint64_t v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  os_unfair_lock_s *v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  void *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  _QWORD *v49;
  uint64_t v50;
  uint64_t v51;
  char *v52;
  void *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  int *v57;
  uint64_t *v58;
  uint64_t *v59;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  _QWORD v65[3];
  uint64_t v66;
  uint64_t v67;
  _QWORD v68[3];
  uint64_t v69;
  uint64_t v70;
  _QWORD v71[3];
  uint64_t v72;
  uint64_t v73;

  v2 = v1;
  v64 = a1;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
  v7 = MEMORY[0x1E0C80A78](v6);
  v9 = (char *)&v61 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v61 - v10;
  v12 = v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource;
  sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v71);
  v13 = v72;
  v14 = v73;
  __swift_project_boxed_opaque_existential_0(v71, v72);
  v15 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v14 + 8))(v13, v14);
  sub_1D2534120((uint64_t)v15 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v11, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

  v16 = type metadata accessor for WidgetEntryKey();
  v17 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56);
  v62 = v11;
  v17(v11, 0, 1, v16);
  v18 = v2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__placeholderSource;
  swift_beginAccess();
  v61 = v18;
  sub_1D2537078(v18, (uint64_t)v68, (uint64_t *)&unk_1ED962EF8);
  v19 = v69;
  v63 = v9;
  if (v69)
  {
    v20 = v5;
    v21 = v70;
    v22 = __swift_project_boxed_opaque_existential_0(v68, v69);
    v23 = v12;
    v24 = *(_QWORD *)(v19 - 8);
    MEMORY[0x1E0C80A78](v22);
    v26 = (char *)&v61 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v24 + 16))(v26);
    sub_1D253703C((uint64_t)v68, (uint64_t *)&unk_1ED962EF8);
    v27 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v21 + 8))(v19, v21);
    v28 = *(void (**)(char *, uint64_t))(v24 + 8);
    v12 = v23;
    v28(v26, v19);
    sub_1D2534120((uint64_t)v27 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v9, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

    v5 = v20;
    v17(v9, 0, 1, v16);
  }
  else
  {
    sub_1D253703C((uint64_t)v68, (uint64_t *)&unk_1ED962EF8);
    v17(v9, 1, 1, v16);
  }
  sub_1D2538510(v12, (uint64_t)v68);
  v29 = v69;
  v30 = v70;
  __swift_project_boxed_opaque_existential_0(v68, v69);
  v31 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v30 + 8))(v29, v30);
  v32 = *(_QWORD *)&v31[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v33 = *(os_unfair_lock_s **)(v32 + 16);
  swift_retain();
  os_unfair_lock_lock(v33);
  v34 = (uint64_t)&v31[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_content];
  swift_beginAccess();
  sub_1D2537078(v34, (uint64_t)v65, &qword_1ED96BF68);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v32 + 16));

  swift_release();
  v35 = v66;
  if (v66)
  {
    v36 = __swift_project_boxed_opaque_existential_0(v65, v66);
    v37 = *(_QWORD *)(v35 - 8);
    MEMORY[0x1E0C80A78](v36);
    v39 = (char *)&v61 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v37 + 16))(v39);
    sub_1D253703C((uint64_t)v65, &qword_1ED96BF68);
    sub_1D26CD5CC();
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v35);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  }
  else
  {
    sub_1D253703C((uint64_t)v65, &qword_1ED96BF68);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
    v40 = sub_1D26CB9DC();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v40 - 8) + 56))(v5, 1, 1, v40);
  }
  sub_1D2538510(v12, (uint64_t)v68);
  v41 = v69;
  v42 = v70;
  __swift_project_boxed_opaque_existential_0(v68, v69);
  v43 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v42 + 8))(v41, v42);
  v44 = sub_1D26813C0();
  v46 = v45;

  sub_1D2537078(v61, (uint64_t)v65, (uint64_t *)&unk_1ED962EF8);
  v47 = v66;
  if (v66)
  {
    v48 = v67;
    v49 = __swift_project_boxed_opaque_existential_0(v65, v66);
    v50 = *(_QWORD *)(v47 - 8);
    MEMORY[0x1E0C80A78](v49);
    v52 = (char *)&v61 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v50 + 16))(v52);
    sub_1D253703C((uint64_t)v65, (uint64_t *)&unk_1ED962EF8);
    v53 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v48 + 8))(v47, v48);
    (*(void (**)(char *, uint64_t))(v50 + 8))(v52, v47);
    v54 = sub_1D26813C0();
    v47 = v55;

  }
  else
  {
    sub_1D253703C((uint64_t)v65, (uint64_t *)&unk_1ED962EF8);
    v54 = 0;
  }
  v56 = v64;
  sub_1D25384CC((uint64_t)v62, v64, &qword_1ED96CE98);
  v57 = (int *)type metadata accessor for DebugInfo();
  sub_1D25384CC((uint64_t)v63, v56 + v57[5], &qword_1ED96CE98);
  sub_1D25384CC((uint64_t)v5, v56 + v57[6], &qword_1ED96B1E0);
  v58 = (uint64_t *)(v56 + v57[7]);
  *v58 = v44;
  v58[1] = v46;
  v59 = (uint64_t *)(v56 + v57[8]);
  *v59 = v54;
  v59[1] = v47;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v68);
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v71);
}

uint64_t sub_1D2609DAC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for LiveWidgetEntryViewModel(0);
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

uint64_t (*sub_1D2609DE8())(uint64_t)
{
  uint64_t v0;
  uint64_t v2;
  uint64_t v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  if (!v2)
    return 0;
  v0 = swift_allocObject();
  *(_QWORD *)(v0 + 16) = v2;
  *(_QWORD *)(v0 + 24) = v3;
  return sub_1D2610754;
}

uint64_t sub_1D2609E94()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t DefaultWidgetLiveViewEntry.view.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char *v29;
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  _QWORD *v34;
  uint64_t (*v35)(_QWORD);
  uint64_t v36;
  uint64_t v37;
  void *v38;
  void *v39;
  uint64_t v40;
  uint64_t v41;
  char *v42;
  id v43;
  id v44;
  uint64_t *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  char *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  char *v58;
  void *v59;
  void *v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  id v64;
  uint64_t v65;
  uint64_t v66;
  void *v67;
  void *v68;
  uint64_t v69;
  uint64_t v70;
  id v71;
  id v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  _QWORD v84[2];
  char *v85;
  uint64_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t *v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  char *v93;
  uint64_t v94;
  uint64_t *v95;
  uint64_t v96;
  uint64_t v97;
  uint64_t v98;
  uint64_t v99;
  uint64_t v100;
  uint64_t v101;

  v100 = a1;
  v99 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CAD0);
  MEMORY[0x1E0C80A78](v99);
  v98 = (uint64_t)v84 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B280);
  MEMORY[0x1E0C80A78](v2);
  v93 = (char *)v84 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v96 = sub_1D26CD74C();
  v94 = *(_QWORD *)(v96 - 8);
  MEMORY[0x1E0C80A78](v96);
  v5 = (char *)v84 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v101 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA60);
  v87 = *(_QWORD *)(v101 - 8);
  v6 = MEMORY[0x1E0C80A78](v101);
  v86 = (_QWORD *)((char *)v84 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v6);
  v95 = (_QWORD *)((char *)v84 - v8);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CA68);
  v10 = MEMORY[0x1E0C80A78](v9);
  v90 = (uint64_t)v84 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v92 = (uint64_t)v84 - v12;
  v97 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96CF60);
  v13 = MEMORY[0x1E0C80A78](v97);
  v89 = (_QWORD *)((char *)v84 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x1E0C80A78](v13);
  v88 = (uint64_t)v84 - v16;
  MEMORY[0x1E0C80A78](v15);
  v18 = (char *)v84 - v17;
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
  v20 = MEMORY[0x1E0C80A78](v19);
  v22 = (char *)v84 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v24 = (char *)v84 - v23;
  v25 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v29 = (char *)v84 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v31 = (char *)v84 - v30;
  v32 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v32);
  v34 = (_QWORD *)((char *)v84 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1D2534120((uint64_t)v91, (uint64_t)v34, v35);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D2539ADC((uint64_t)v34, (uint64_t)v29, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    v36 = sub_1D26CD548();
    v37 = *(int *)(v25 + 28);
    v38 = *(void **)&v29[*(int *)(v25 + 24)];
    v39 = *(void **)&v29[v37];
    v40 = sub_1D26CC7A4();
    v41 = *(_QWORD *)(v40 - 8);
    v42 = v93;
    (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v93, v29, v40);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v42, 0, 1, v40);
    v43 = v38;
    v44 = v39;
    sub_1D26CD740();
    v45 = v86;
    v46 = v94;
    v47 = v96;
    (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))((uint64_t)v86 + *(int *)(v101 + 36), v5, v96);
    *v45 = v36;
    (*(void (**)(char *, uint64_t))(v46 + 8))(v5, v47);
    v48 = (uint64_t)v45;
    v49 = (uint64_t)v95;
    sub_1D25384CC(v48, (uint64_t)v95, &qword_1ED96CA60);
    sub_1D2537078(v49, v98, &qword_1ED96CA60);
    swift_storeEnumTagMultiPayload();
    sub_1D2536488(&qword_1ED96CF58, qword_1ED96CF60, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
    sub_1D2554684();
    sub_1D26CC90C();
    sub_1D253703C(v49, &qword_1ED96CA60);
    v50 = (uint64_t)v29;
  }
  else
  {
    v91 = v18;
    v51 = v5;
    v84[1] = *v34;
    v52 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v53 = (uint64_t)v34 + *(int *)(v52 + 64);
    v54 = (uint64_t)v34 + *(int *)(v52 + 48);
    v85 = v31;
    sub_1D2539ADC(v54, (uint64_t)v31, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D25384CC(v53, (uint64_t)v24, &qword_1ED96D478);
    v86 = (uint64_t *)v24;
    sub_1D2537078((uint64_t)v24, (uint64_t)v22, &qword_1ED96D478);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v26 + 48))(v22, 1, v25) == 1)
    {
      sub_1D253703C((uint64_t)v22, &qword_1ED96D478);
      v87 = *(_QWORD *)(v87 + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v87)(v92, 1, 1, v101);
      v56 = v95;
      v55 = v96;
      v58 = v93;
      v57 = v94;
    }
    else
    {
      v84[0] = sub_1D26CD548();
      v59 = *(void **)&v22[*(int *)(v25 + 24)];
      v60 = *(void **)&v22[*(int *)(v25 + 28)];
      v61 = sub_1D26CC7A4();
      v62 = *(_QWORD *)(v61 - 8);
      v58 = v93;
      (*(void (**)(char *, char *, uint64_t))(v62 + 16))(v93, v22, v61);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v62 + 56))(v58, 0, 1, v61);
      v63 = v59;
      v64 = v60;
      sub_1D26CD740();
      v65 = v101;
      v57 = v94;
      v56 = v95;
      v55 = v96;
      (*(void (**)(uint64_t, char *, uint64_t))(v94 + 16))((uint64_t)v95 + *(int *)(v101 + 36), v51, v96);
      *v56 = v84[0];
      (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v55);
      v66 = v92;
      sub_1D25384CC((uint64_t)v56, v92, &qword_1ED96CA60);
      sub_1D25340E4((uint64_t)v22, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      v87 = *(_QWORD *)(v87 + 56);
      ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v87)(v66, 0, 1, v65);
    }
    v50 = (uint64_t)v85;
    v96 = sub_1D26CD548();
    v67 = *(void **)(v50 + *(int *)(v25 + 24));
    v68 = *(void **)(v50 + *(int *)(v25 + 28));
    v69 = sub_1D26CC7A4();
    v70 = *(_QWORD *)(v69 - 8);
    (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v58, v50, v69);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v70 + 56))(v58, 0, 1, v69);
    v71 = v67;
    v72 = v68;
    sub_1D26CD740();
    v73 = v101;
    (*(void (**)(char *, char *, uint64_t))(v57 + 16))((char *)v56 + *(int *)(v101 + 36), v51, v55);
    *v56 = v96;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v55);
    v74 = v90;
    sub_1D25384CC((uint64_t)v56, v90, &qword_1ED96CA60);
    ((void (*)(uint64_t, _QWORD, uint64_t, uint64_t))v87)(v74, 0, 1, v73);
    v75 = v97;
    v76 = v89;
    v77 = v92;
    sub_1D2537078(v92, (uint64_t)v89 + *(int *)(v97 + 52), &qword_1ED96CA68);
    sub_1D2537078(v74, (uint64_t)v76 + *(int *)(v75 + 56), &qword_1ED96CA68);
    type metadata accessor for TintedWidgetViewModel();
    sub_1D25369B0((unint64_t *)&qword_1ED96D168, (uint64_t (*)(uint64_t))type metadata accessor for TintedWidgetViewModel, (uint64_t)&protocol conformance descriptor for TintedWidgetViewModel);
    swift_retain();
    v78 = sub_1D26CC39C();
    v80 = v79;
    sub_1D253703C(v74, &qword_1ED96CA68);
    sub_1D253703C(v77, &qword_1ED96CA68);
    *v76 = v78;
    v76[1] = v80;
    v81 = v88;
    sub_1D25384CC((uint64_t)v76, v88, qword_1ED96CF60);
    v82 = (uint64_t)v91;
    sub_1D25384CC(v81, (uint64_t)v91, qword_1ED96CF60);
    sub_1D2537078(v82, v98, qword_1ED96CF60);
    swift_storeEnumTagMultiPayload();
    sub_1D2536488(&qword_1ED96CF58, qword_1ED96CF60, (uint64_t)&protocol conformance descriptor for TintedWidgetView<A, B>);
    sub_1D2554684();
    sub_1D26CC90C();
    swift_release();
    sub_1D253703C(v82, qword_1ED96CF60);
    sub_1D253703C((uint64_t)v86, &qword_1ED96D478);
  }
  return sub_1D25340E4(v50, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
}

uint64_t DefaultWidgetLiveViewEntry.containsPrivacyRedactions.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t (*v28)(_QWORD);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t (*v42)(uint64_t, uint64_t, uint64_t);
  int v43;
  char v45;
  void (*v46)(uint64_t, uint64_t);
  char *v47;
  char *v48;
  char *v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  char *v53;

  v1 = sub_1D26CD56C();
  v51 = *(_QWORD *)(v1 - 8);
  v52 = v1;
  MEMORY[0x1E0C80A78](v1);
  v49 = (char *)&v48 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = MEMORY[0x1E0C80A78](v4);
  v48 = (char *)&v48 - v8;
  MEMORY[0x1E0C80A78](v7);
  v50 = (char *)&v48 - v9;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v48 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v48 - v14;
  v16 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  v17 = *(_QWORD *)(v16 - 8);
  v18 = MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v48 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v18);
  v53 = (char *)&v48 - v22;
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v48 - v23;
  v25 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v25);
  v27 = (char *)&v48 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v0, (uint64_t)v27, v28);
  if (swift_getEnumCaseMultiPayload() != 1)
  {
    swift_release();
    v32 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v33 = (uint64_t)&v27[*(int *)(v32 + 64)];
    sub_1D2539ADC((uint64_t)&v27[*(int *)(v32 + 48)], (uint64_t)v24, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D25384CC(v33, (uint64_t)v15, &qword_1ED96D478);
    sub_1D2537078((uint64_t)v15, (uint64_t)v13, &qword_1ED96D478);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v13, 1, v16) == 1)
    {
      sub_1D253703C((uint64_t)v13, &qword_1ED96D478);
      v34 = (uint64_t)v53;
    }
    else
    {
      v37 = v51;
      v36 = v52;
      v38 = v49;
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v49, &v13[*(int *)(v16 + 20)], v52);
      sub_1D25340E4((uint64_t)v13, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      v39 = (uint64_t)v50;
      sub_1D26CD524();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v38, v36);
      v40 = sub_1D26CD254();
      v41 = *(_QWORD *)(v40 - 8);
      v42 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v41 + 48);
      v43 = v42(v39, 1, v40);
      v34 = (uint64_t)v53;
      if (v43 != 1)
      {
        v45 = sub_1D26CD230();
        v46 = *(void (**)(uint64_t, uint64_t))(v41 + 8);
        v46(v39, v40);
        sub_1D2534120((uint64_t)v24, v34, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
        if ((v45 & 1) != 0)
        {
          v47 = v48;
          sub_1D26CD524();
          if (v42((uint64_t)v47, 1, v40) != 1)
          {
            v35 = sub_1D26CD230();
            sub_1D25340E4(v34, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
            sub_1D253703C((uint64_t)v15, &qword_1ED96D478);
            sub_1D25340E4((uint64_t)v24, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
            v46((uint64_t)v47, v40);
            return v35 & 1;
          }
          sub_1D25340E4(v34, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
          sub_1D253703C((uint64_t)v15, &qword_1ED96D478);
          sub_1D25340E4((uint64_t)v24, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
          v31 = (uint64_t)v47;
          goto LABEL_4;
        }
LABEL_11:
        sub_1D25340E4(v34, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
        sub_1D253703C((uint64_t)v15, &qword_1ED96D478);
        sub_1D25340E4((uint64_t)v24, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
        goto LABEL_12;
      }
      sub_1D253703C(v39, &qword_1ED96D500);
    }
    sub_1D2534120((uint64_t)v24, v34, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    goto LABEL_11;
  }
  sub_1D2539ADC((uint64_t)v27, (uint64_t)v20, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  sub_1D26CD524();
  v29 = sub_1D26CD254();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v6, 1, v29) == 1)
  {
    sub_1D25340E4((uint64_t)v20, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    v31 = (uint64_t)v6;
LABEL_4:
    sub_1D253703C(v31, &qword_1ED96D500);
LABEL_12:
    v35 = 0;
    return v35 & 1;
  }
  v35 = sub_1D26CD230();
  sub_1D25340E4((uint64_t)v20, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  (*(void (**)(char *, uint64_t))(v30 + 8))(v6, v29);
  return v35 & 1;
}

uint64_t DefaultWidgetLiveViewEntry.entryData.getter()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t (*v8)(_QWORD);
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v1 = v0;
  v2 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  MEMORY[0x1E0C80A78](v5);
  v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2534120(v1, (uint64_t)v7, v8);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_1D2539ADC((uint64_t)v7, (uint64_t)v4, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    v9 = sub_1D26CD554();
    sub_1D25340E4((uint64_t)v4, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
  }
  else
  {
    swift_release();
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v11 = (uint64_t)&v7[*(int *)(v10 + 64)];
    sub_1D2539ADC((uint64_t)&v7[*(int *)(v10 + 48)], (uint64_t)v4, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    v9 = sub_1D26CD554();
    sub_1D25340E4((uint64_t)v4, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    sub_1D253703C(v11, &qword_1ED96D478);
  }
  return v9;
}

uint64_t sub_1D260AE58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t (*v5)(uint64_t, uint64_t);
  char *v6;
  char *v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1D2538510(*(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v10);
  v3 = v11;
  v4 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  v5 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
  swift_retain();
  v6 = (char *)v5(v3, v4);
  v7 = &v6[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_protectionType];
  swift_beginAccess();
  v8 = sub_1D26CD488();
  (*(void (**)(uint64_t, char *, uint64_t))(*(_QWORD *)(v8 - 8) + 16))(a1, v7, v8);

  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return swift_release();
}

uint64_t sub_1D260AF2C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _BYTE *v5;
  uint64_t v6;
  unsigned __int8 *v8;
  _BYTE v9[24];

  v1 = v0;
  v2 = sub_1D26CC7A4();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = &v9[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v6 = *(_QWORD *)(v1 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__rawEnvironmentValues;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v3 + 16))(v5, v6, v2);
  LOBYTE(v6) = sub_1D26CC60C();
  (*(void (**)(_BYTE *, uint64_t))(v3 + 8))(v5, v2);
  if ((v6 & 1) != 0)
    return 1;
  v8 = (unsigned __int8 *)(*(_QWORD *)(v1 + 16)
                         + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_ignoreComplicationUserRedactionPreference);
  swift_beginAccess();
  return *v8;
}

uint64_t sub_1D260B01C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  _QWORD v11[2];

  v1 = sub_1D26CC2C4();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  BSDispatchQueueAssertMain();
  v5 = *(_QWORD *)(v0 + 16);
  v6 = (_BYTE *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent);
  swift_beginAccess();
  if (*v6 == 1)
  {
    v7 = sub_1D26CCEAC();
  }
  else
  {
    v8 = v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme;
    swift_beginAccess();
    (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
    v9 = (*(uint64_t (**)(char *, uint64_t))(v2 + 88))(v4, v1);
    if (v9 == *MEMORY[0x1E0CD86E0])
    {
      v7 = sub_1D26CCEB8();
    }
    else if (v9 == *MEMORY[0x1E0CD86D0])
    {
      v7 = sub_1D26CCEA0();
    }
    else
    {
      swift_retain();
      v7 = sub_1D26CCE7C();
      (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
      swift_release();
    }
  }
  v11[1] = v7;
  return sub_1D26CCFC0();
}

uint64_t sub_1D260B18C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  id *v30;
  void **v31;
  void *v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(_QWORD *, uint64_t, uint64_t, uint64_t);
  _QWORD *v37;
  NSObject *v38;
  uint64_t v39;
  os_log_type_t v40;
  uint64_t v41;
  _QWORD *v42;
  void *v43;
  uint64_t *v44;
  uint64_t v45;
  unint64_t v46;
  void **v47;
  void *v48;
  id v49;
  NSObject *v50;
  uint64_t v51;
  os_log_type_t v52;
  uint64_t v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t *v56;
  uint64_t v57;
  unint64_t v58;
  id *v59;
  id v60;
  id v61;
  uint64_t v62;
  uint64_t *v63;
  uint64_t v64;
  unint64_t v65;
  void **v66;
  id v67;
  _QWORD *v68;
  uint64_t v69;
  id v70;
  void *v71;
  uint64_t v72;
  id v73;
  void (*v74)(char *, id, uint64_t);
  uint64_t v75;
  char *v76;
  uint64_t v77;
  id *v78;
  NSObject *v79;
  os_log_type_t v80;
  uint64_t v81;
  _QWORD *v82;
  void *v83;
  uint64_t *v84;
  uint64_t v85;
  unint64_t v86;
  id *v87;
  id v88;
  id v89;
  void (*v90)(char *, uint64_t);
  uint64_t v91;
  NSObject *v92;
  uint64_t v93;
  os_log_type_t v94;
  uint64_t v95;
  _QWORD *v96;
  void *v97;
  uint64_t *v98;
  uint64_t v99;
  unint64_t v100;
  id *v101;
  id v102;
  id v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  char *v106;
  uint64_t v107;
  NSObject *v108;
  uint64_t v109;
  os_log_type_t v110;
  uint64_t v111;
  _QWORD *v112;
  void *v113;
  uint64_t *v114;
  uint64_t v115;
  unint64_t v116;
  id *v117;
  id v118;
  id v119;
  void (*v120)(uint64_t, uint64_t);
  _QWORD *v121;
  uint64_t v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v128;
  uint64_t v129;
  _QWORD *v130;
  uint64_t v131;
  char *v132;
  uint64_t v133;
  uint64_t v134;
  char *v135;
  id v136;
  uint64_t v137;
  id v138;
  id v139[3];
  id v140;
  uint64_t v141[3];
  uint64_t v142;
  __int128 v143;
  uint64_t v144;
  _QWORD v145[6];

  v4 = v3;
  v136 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v128 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v128 - v12;
  v14 = MEMORY[0x1E0C80A78](v11);
  v129 = (uint64_t)&v128 - v15;
  MEMORY[0x1E0C80A78](v14);
  v17 = (char *)&v128 - v16;
  v137 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
  v18 = *(_QWORD *)(v137 - 8);
  v19 = MEMORY[0x1E0C80A78](v137);
  v133 = (uint64_t)&v128 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = (char *)&v128 - v22;
  MEMORY[0x1E0C80A78](v21);
  v128 = (uint64_t)&v128 - v24;
  v25 = sub_1D26CD29C();
  MEMORY[0x1E0C80A78](v25);
  v26 = sub_1D26CD20C();
  MEMORY[0x1E0C80A78](v26);
  v131 = sub_1D26CC7A4();
  v134 = *(_QWORD *)(v131 - 8);
  v27 = MEMORY[0x1E0C80A78](v131);
  v132 = (char *)&v128 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v135 = (char *)&v128 - v29;
  sub_1D2537078(a1, (uint64_t)&v143, (uint64_t *)&unk_1ED962EF8);
  if (v144)
  {
    v130 = a3;
    sub_1D2538F38(&v143, (uint64_t)v145);
    v30 = (id *)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
    swift_beginAccess();
    if ((char *)objc_msgSend(*v30, sel_renderingMode) - 1 > (char *)1)
    {
      sub_1D260C42C(v145, (uint64_t)v136, (uint64_t)v10);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v10, 1, v137) == 1)
      {
        sub_1D253703C((uint64_t)v10, &qword_1ED96D478);
        swift_retain_n();
        v38 = sub_1D26CC084();
        v39 = v4;
        v40 = sub_1D26CDCE0();
        if (os_log_type_enabled(v38, v40))
        {
          v41 = swift_slowAlloc();
          v42 = (_QWORD *)swift_slowAlloc();
          v43 = (void *)swift_slowAlloc();
          v141[0] = (uint64_t)v43;
          *(_DWORD *)v41 = 136446466;
          v44 = (uint64_t *)(*(_QWORD *)(v39 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
          v45 = *v44;
          v46 = v44[1];
          swift_bridgeObjectRetain();
          v142 = sub_1D2537880(v45, v46, v141);
          sub_1D26CDF50();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2114;
          v47 = (void **)(*(_QWORD *)(v39 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
          swift_beginAccess();
          v48 = *v47;
          v139[0] = v48;
          v49 = v48;
LABEL_15:
          sub_1D26CDF50();
          *v42 = v48;
          swift_release_n();
          _os_log_impl(&dword_1D2531000, v38, v40, "[%{public}s] SELECTING raw - NIL (%{public}@)", (uint8_t *)v41, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v42, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v43, -1, -1);
          MEMORY[0x1D823A5E0](v41, -1, -1);

LABEL_29:
          __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
          v121 = v130;
          v35 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
          v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
          v37 = v121;
          goto LABEL_30;
        }
LABEL_16:
        swift_release_n();

        goto LABEL_29;
      }
      sub_1D2539ADC((uint64_t)v10, v133, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      swift_retain_n();
      v50 = sub_1D26CC084();
      v51 = v4;
      v52 = sub_1D26CDCE0();
      if (os_log_type_enabled(v50, v52))
      {
        v53 = swift_slowAlloc();
        v54 = (_QWORD *)swift_slowAlloc();
        v55 = swift_slowAlloc();
        v141[0] = v55;
        *(_DWORD *)v53 = 136446466;
        v56 = (uint64_t *)(*(_QWORD *)(v51 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
        v57 = *v56;
        v58 = v56[1];
        swift_bridgeObjectRetain();
        v142 = sub_1D2537880(v57, v58, v141);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v53 + 12) = 2114;
        v59 = (id *)(*(_QWORD *)(v51 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
        swift_beginAccess();
        v139[0] = *v59;
        v60 = v139[0];
        v61 = v139[0];
        sub_1D26CDF50();
        *v54 = v60;
        swift_release_n();
        _os_log_impl(&dword_1D2531000, v50, v52, "[%{public}s] SELECTING raw (%{public}@)", (uint8_t *)v53, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v54, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v55, -1, -1);
        MEMORY[0x1D823A5E0](v53, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
      v68 = v130;
      v69 = v133;
    }
    else
    {
      v31 = (void **)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters);
      swift_beginAccess();
      v32 = *v31;
      if (v32)
      {
        swift_retain();
        v33 = v32;
        v34 = sub_1D2602CFC();
        swift_release();
        if (v34)
        {
          v133 = v34;
        }
        else
        {
          type metadata accessor for TintedWidgetViewModel();
          v133 = swift_allocObject();
          swift_beginAccess();
          v139[0] = v33;
          sub_1D2539514(0, (unint64_t *)&qword_1ED96C760);
          v70 = v33;
          sub_1D26CC1B0();
          swift_endAccess();
        }
        v71 = v33;
        v72 = v131;
        v73 = v136;
        v74 = *(void (**)(char *, id, uint64_t))(v134 + 16);
        v75 = (uint64_t)v135;
        v74(v135, v136, v131);
        v136 = v71;
        objc_msgSend(v71, sel_accentedAlternateBackground);
        sub_1D26CC744();
        v76 = v132;
        v74(v132, v73, v72);
        v77 = (uint64_t)v76;
        sub_1D26CD290();
        v78 = (id *)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
        swift_beginAccess();
        objc_msgSend(*v78, sel_backgroundViewPolicy);
        sub_1D26CD200();
        sub_1D26CC69C();
        sub_1D260C42C(v145, v75, (uint64_t)v17);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v17, 1, v137) == 1)
        {
          sub_1D253703C((uint64_t)v17, &qword_1ED96D478);
          swift_retain_n();
          v79 = sub_1D26CC084();
          v80 = sub_1D26CDCE0();
          if (os_log_type_enabled(v79, v80))
          {
            v81 = swift_slowAlloc();
            v82 = (_QWORD *)swift_slowAlloc();
            v83 = (void *)swift_slowAlloc();
            v140 = v83;
            *(_DWORD *)v81 = 136446466;
            v84 = (uint64_t *)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
            v85 = *v84;
            v86 = v84[1];
            swift_bridgeObjectRetain();
            v139[0] = (id)sub_1D2537880(v85, v86, (uint64_t *)&v140);
            sub_1D26CDF50();
            swift_release_n();
            swift_bridgeObjectRelease();
            *(_WORD *)(v81 + 12) = 2114;
            v87 = (id *)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
            swift_beginAccess();
            v138 = *v87;
            v88 = v138;
            v89 = v138;
            sub_1D26CDF50();
            *v82 = v88;
            swift_release_n();
            _os_log_impl(&dword_1D2531000, v79, v80, "[%{public}s] SELECTING tinted - NIL (%{public}@)", (uint8_t *)v81, 0x16u);
            __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v82, -1, -1);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v83, -1, -1);
            MEMORY[0x1D823A5E0](v81, -1, -1);
            swift_release();

            v90 = *(void (**)(char *, uint64_t))(v134 + 8);
            v91 = v131;
            v90(v132, v131);
            v90(v135, v91);
          }
          else
          {
            swift_release();

            swift_release_n();
            v120 = *(void (**)(uint64_t, uint64_t))(v134 + 8);
            v120(v77, v72);
            v120((uint64_t)v135, v72);
          }
          goto LABEL_29;
        }
        sub_1D2539ADC((uint64_t)v17, v128, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
        sub_1D260C42C(v145, v77, v129);
        swift_retain_n();
        v92 = sub_1D26CC084();
        v93 = v4;
        v94 = sub_1D26CDCE0();
        if (os_log_type_enabled(v92, v94))
        {
          v95 = swift_slowAlloc();
          v96 = (_QWORD *)swift_slowAlloc();
          v97 = (void *)swift_slowAlloc();
          v140 = v97;
          *(_DWORD *)v95 = 136446466;
          v98 = (uint64_t *)(*(_QWORD *)(v93 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
          v99 = *v98;
          v100 = v98[1];
          swift_bridgeObjectRetain();
          v139[0] = (id)sub_1D2537880(v99, v100, (uint64_t *)&v140);
          sub_1D26CDF50();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v95 + 12) = 2114;
          v101 = (id *)(*(_QWORD *)(v93 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
          swift_beginAccess();
          v138 = *v101;
          v102 = v138;
          v103 = v138;
          sub_1D26CDF50();
          *v96 = v102;
          swift_release_n();
          _os_log_impl(&dword_1D2531000, v92, v94, "[%{public}s] SELECTING tinted (%{public}@)", (uint8_t *)v95, 0x16u);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v96, -1, -1);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v97, -1, -1);
          MEMORY[0x1D823A5E0](v95, -1, -1);

          v104 = *(void (**)(char *, uint64_t))(v134 + 8);
          v105 = v131;
          v104(v132, v131);
          v106 = v135;
          v107 = v105;
        }
        else
        {

          swift_release_n();
          v104 = *(void (**)(char *, uint64_t))(v134 + 8);
          v104((char *)v77, v72);
          v106 = v135;
          v107 = v72;
        }
        v104(v106, v107);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
        v68 = v130;
        v123 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
        v124 = (uint64_t)v68 + *(int *)(v123 + 48);
        v125 = (uint64_t)v68 + *(int *)(v123 + 64);
        *v68 = v133;
        sub_1D2539ADC(v128, v124, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
        sub_1D25384CC(v129, v125, &qword_1ED96D478);
        v126 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
LABEL_36:
        swift_storeEnumTagMultiPayload();
        v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 56);
        v37 = v68;
        v122 = 0;
        v35 = v126;
        return v36(v37, v122, 1, v35);
      }
      sub_1D260C42C(v145, (uint64_t)v136, (uint64_t)v13);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v13, 1, v137) == 1)
      {
        sub_1D253703C((uint64_t)v13, &qword_1ED96D478);
        swift_retain_n();
        v38 = sub_1D26CC084();
        v62 = v4;
        v40 = sub_1D26CDCE0();
        if (os_log_type_enabled(v38, v40))
        {
          v41 = swift_slowAlloc();
          v42 = (_QWORD *)swift_slowAlloc();
          v43 = (void *)swift_slowAlloc();
          v139[0] = v43;
          *(_DWORD *)v41 = 136446466;
          v63 = (uint64_t *)(*(_QWORD *)(v62 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
          v64 = *v63;
          v65 = v63[1];
          swift_bridgeObjectRetain();
          v141[0] = sub_1D2537880(v64, v65, (uint64_t *)v139);
          sub_1D26CDF50();
          swift_release_n();
          swift_bridgeObjectRelease();
          *(_WORD *)(v41 + 12) = 2114;
          v66 = (void **)(*(_QWORD *)(v62 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
          swift_beginAccess();
          v48 = *v66;
          v140 = v48;
          v67 = v48;
          goto LABEL_15;
        }
        goto LABEL_16;
      }
      sub_1D2539ADC((uint64_t)v13, (uint64_t)v23, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
      swift_retain_n();
      v108 = sub_1D26CC084();
      v109 = v4;
      v110 = sub_1D26CDCE0();
      if (os_log_type_enabled(v108, v110))
      {
        v111 = swift_slowAlloc();
        v112 = (_QWORD *)swift_slowAlloc();
        v113 = (void *)swift_slowAlloc();
        v139[0] = v113;
        *(_DWORD *)v111 = 136446466;
        v114 = (uint64_t *)(*(_QWORD *)(v109 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
        v137 = (uint64_t)v23;
        v115 = *v114;
        v116 = v114[1];
        swift_bridgeObjectRetain();
        v141[0] = sub_1D2537880(v115, v116, (uint64_t *)v139);
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        *(_WORD *)(v111 + 12) = 2114;
        v117 = (id *)(*(_QWORD *)(v109 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
        swift_beginAccess();
        v140 = *v117;
        v118 = v140;
        v119 = v140;
        sub_1D26CDF50();
        *v112 = v118;
        v23 = (char *)v137;
        swift_release_n();
        _os_log_impl(&dword_1D2531000, v108, v110, "[%{public}s] SELECTING raw (%{public}@)", (uint8_t *)v111, 0x16u);
        __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v112, -1, -1);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v113, -1, -1);
        MEMORY[0x1D823A5E0](v111, -1, -1);
      }
      else
      {
        swift_release_n();
      }

      __swift_destroy_boxed_opaque_existential_1((uint64_t)v145);
      v68 = v130;
      v69 = (uint64_t)v23;
    }
    sub_1D2539ADC(v69, (uint64_t)v68, type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    v126 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
    goto LABEL_36;
  }
  sub_1D253703C((uint64_t)&v143, (uint64_t *)&unk_1ED962EF8);
  v35 = type metadata accessor for DefaultWidgetLiveViewEntry(0);
  v36 = *(uint64_t (**)(_QWORD *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v35 - 8) + 56);
  v37 = a3;
LABEL_30:
  v122 = 1;
  return v36(v37, v122, 1, v35);
}

uint64_t sub_1D260C42C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  char v61;
  uint64_t *v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t (*v65)(uint64_t, uint64_t, uint64_t);
  char *v66;
  void (*v67)(char *, char *, uint64_t);
  uint64_t v68;
  uint64_t v69;
  char *v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  uint64_t v74;
  os_unfair_lock_s *v75;
  uint64_t v76;
  int v77;
  uint64_t v78;
  void (*v79)(char *, char *, uint64_t);
  uint64_t v80;
  uint64_t v81;
  _QWORD *v82;
  uint64_t v83;
  uint64_t v84;
  os_unfair_lock_s *v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  unsigned int (*v93)(uint64_t, uint64_t, uint64_t);
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  uint64_t v98;
  uint64_t v99;
  char *v100;
  char *v101;
  uint64_t v102;
  char *v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  void (*v107)(char *, uint64_t);
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  uint64_t v111;
  uint64_t v112;
  char *v113;
  void (*v114)(uint64_t, uint64_t);
  uint64_t v115;
  uint64_t v116;
  int v117;
  char *v118;
  uint64_t v119;
  uint64_t v120;
  void **v121;
  void *v122;
  uint64_t v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  id v127;
  uint64_t v128;
  uint64_t v129;
  char *v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t (*v134)(uint64_t, uint64_t);
  void *v135;
  id *v136;
  id v137;
  uint64_t v138;
  uint64_t v139;
  uint64_t (*v140)(uint64_t, uint64_t);
  void *v141;
  id v142;
  uint64_t v143;
  uint64_t v144;
  int *v145;
  void (*v146)(uint64_t, uint64_t, uint64_t, uint64_t);
  char *v147;
  uint64_t v148;
  char *v149;
  char *v150;
  char *v151;
  char *v152;
  uint64_t v153;
  uint64_t v154;
  char *v155;
  char *v156;
  char *v157;
  uint64_t v158;
  void (*v159)(char *, char *, uint64_t);
  char *v160;
  char *v161;
  uint64_t v162;
  uint64_t v163;
  char *v164;
  char *v165;
  char *v166;
  uint64_t v167;
  uint64_t v168;
  id *v169;
  char *v170;
  uint64_t v171;
  uint64_t v172;
  char *v173;
  char *v174;
  char *v175;
  uint64_t v176;
  char *v177;
  uint64_t v178;
  uint64_t v179;
  _QWORD *v180;
  uint64_t v181;
  uint64_t v182;
  uint64_t v183;
  uint64_t v184;
  uint64_t v185;
  uint64_t v186;
  uint64_t v187;
  uint64_t v188;
  char v189[8];
  __int128 v190;
  __int128 v191;
  uint64_t v192;
  uint64_t v193;
  uint64_t v194;

  v4 = v3;
  v180 = a1;
  v179 = a3;
  v6 = type metadata accessor for WidgetEntryKey();
  MEMORY[0x1E0C80A78](v6);
  v169 = (id *)((char *)&v146 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D508);
  MEMORY[0x1E0C80A78](v8);
  v156 = (char *)&v146 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v154 = type metadata accessor for InlineTextView(0);
  v10 = MEMORY[0x1E0C80A78](v154);
  v153 = (uint64_t)&v146 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v155 = (char *)&v146 - v12;
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  v14 = MEMORY[0x1E0C80A78](v13);
  v152 = (char *)&v146 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v160 = (char *)&v146 - v16;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC90);
  MEMORY[0x1E0C80A78](v17);
  v161 = (char *)&v146 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v163 = sub_1D26CCB1C();
  v162 = *(_QWORD *)(v163 - 8);
  MEMORY[0x1E0C80A78](v163);
  v157 = (char *)&v146 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v168 = sub_1D26CD14C();
  v167 = *(_QWORD *)(v168 - 8);
  v20 = MEMORY[0x1E0C80A78](v168);
  v166 = (char *)&v146 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v20);
  v165 = (char *)&v146 - v22;
  v182 = sub_1D26CD56C();
  v181 = *(_QWORD *)(v182 - 8);
  v23 = MEMORY[0x1E0C80A78](v182);
  v177 = (char *)&v146 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  v25 = MEMORY[0x1E0C80A78](v23);
  v175 = (char *)&v146 - v26;
  MEMORY[0x1E0C80A78](v25);
  v170 = (char *)&v146 - v27;
  v28 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96BF50);
  v29 = MEMORY[0x1E0C80A78](v28);
  v173 = (char *)&v146 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = MEMORY[0x1E0C80A78](v29);
  v151 = (char *)&v146 - v32;
  v33 = MEMORY[0x1E0C80A78](v31);
  v172 = (uint64_t)&v146 - v34;
  MEMORY[0x1E0C80A78](v33);
  v185 = (uint64_t)&v146 - v35;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v37 = MEMORY[0x1E0C80A78](v36);
  v171 = (uint64_t)&v146 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v39 = MEMORY[0x1E0C80A78](v37);
  v158 = (uint64_t)&v146 - v40;
  v41 = MEMORY[0x1E0C80A78](v39);
  v43 = (char *)&v146 - v42;
  v44 = MEMORY[0x1E0C80A78](v41);
  v159 = (void (*)(char *, char *, uint64_t))((char *)&v146 - v45);
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)&v146 - v46;
  v48 = sub_1D26CB9DC();
  v49 = *(_QWORD *)(v48 - 8);
  v50 = MEMORY[0x1E0C80A78](v48);
  v150 = (char *)&v146 - ((v51 + 15) & 0xFFFFFFFFFFFFFFF0);
  v52 = MEMORY[0x1E0C80A78](v50);
  v54 = (char *)&v146 - v53;
  MEMORY[0x1E0C80A78](v52);
  v164 = (char *)&v146 - v55;
  v184 = sub_1D26CC7A4();
  v56 = *(_QWORD *)(v184 - 8);
  v57 = MEMORY[0x1E0C80A78](v184);
  v174 = (char *)&v146 - ((v58 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v57);
  v60 = (char *)&v146 - v59;
  v61 = sub_1D26CC51C();
  v62 = &OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange;
  v178 = v3;
  v176 = a2;
  v183 = v56;
  if ((v61 & 1) != 0)
  {
    v149 = v43;
    v63 = v184;
    (*(void (**)(char *, uint64_t, uint64_t))(v56 + 16))(v60, a2, v184);
    sub_1D26CC528();
    v64 = *(_QWORD *)(v3 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate;
    swift_beginAccess();
    sub_1D2537078(v64, (uint64_t)v47, &qword_1ED96B1E0);
    v65 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v49 + 48);
    if (v65((uint64_t)v47, 1, v48) == 1)
    {
      (*(void (**)(char *, uint64_t))(v56 + 8))(v60, v63);
      sub_1D253703C((uint64_t)v47, &qword_1ED96B1E0);
      v4 = v178;
      a2 = v176;
      v62 = &OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange;
    }
    else
    {
      v147 = v60;
      v66 = v164;
      v67 = *(void (**)(char *, char *, uint64_t))(v49 + 32);
      v67(v164, v47, v48);
      v69 = v180[3];
      v68 = v180[4];
      __swift_project_boxed_opaque_existential_0(v180, v69);
      v70 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v68 + 8))(v69, v68);
      v71 = (uint64_t)v149;
      v72 = v66;
      v73 = v48;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v149, v72, v48);
      v146 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v49 + 56);
      v146(v71, 0, 1, v48);
      v74 = *(_QWORD *)&v70[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
      v75 = *(os_unfair_lock_s **)(v74 + 16);
      swift_retain();
      os_unfair_lock_lock(v75);
      v76 = v158;
      sub_1D2537078(v71, v158, &qword_1ED96B1E0);
      v77 = v65(v76, 1, v48);
      v148 = v49;
      if (v77 == 1)
      {
        sub_1D253703C(v76, &qword_1ED96B1E0);
        v78 = (uint64_t)&v70[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_currentEntry];
        swift_beginAccess();
        sub_1D2537078(v78, (uint64_t)&v190, &qword_1ED96BF40);
        v4 = v178;
      }
      else
      {
        v67(v54, (char *)v76, v48);
        sub_1D26831B4((uint64_t)&v186);
        (*(void (**)(char *, uint64_t))(v49 + 8))(v54, v48);
        v4 = v178;
        if (v187 == 1)
        {
          sub_1D253703C((uint64_t)&v186, &qword_1ED96C7F0);
          v190 = 0u;
          v191 = 0u;
          v192 = 0;
        }
        else
        {
          sub_1D25384CC((uint64_t)&v186, (uint64_t)&v190, &qword_1ED96BF40);
          sub_1D253703C((uint64_t)v189, &qword_1ED96BF40);
        }
      }
      v79 = v159;
      v80 = v184;
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v74 + 16));

      swift_release();
      sub_1D253703C((uint64_t)v149, &qword_1ED96B1E0);
      v81 = (uint64_t)v147;
      if (*((_QWORD *)&v191 + 1))
      {
        __swift_project_boxed_opaque_existential_0(&v190, *((uint64_t *)&v191 + 1));
        sub_1D26CD3E0();
        v146((uint64_t)v79, 0, 1, v73);
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v190);
      }
      else
      {
        sub_1D253703C((uint64_t)&v190, &qword_1ED96BF40);
        v146((uint64_t)v79, 1, 1, v73);
      }
      v82 = v180;
      v83 = *(_QWORD *)(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__viewableEntryCache);
      v84 = *(_QWORD *)(v83 + 24);
      v85 = *(os_unfair_lock_s **)(v84 + 16);
      swift_retain();
      swift_retain();
      os_unfair_lock_lock(v85);
      sub_1D268CFAC(v79, (uint64_t)v82, v81, v83);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v84 + 16));
      swift_release();
      swift_release();
      sub_1D253703C((uint64_t)v79, &qword_1ED96B1E0);
      (*(void (**)(char *, uint64_t))(v148 + 8))(v164, v73);
      (*(void (**)(uint64_t, uint64_t))(v183 + 8))(v81, v80);
      a2 = v176;
      v62 = &OBJC_IVAR____TtC9ChronoKit11WidgetEntry_objectWillChange;
    }
  }
  v86 = *(_QWORD *)(v4 + 16) + v62[7];
  swift_beginAccess();
  v87 = v171;
  sub_1D2537078(v86, v171, &qword_1ED96B1E0);
  swift_retain();
  v88 = v185;
  sub_1D268DF2C(v180, a2, v87, v185);
  v89 = v88;
  swift_release();
  sub_1D253703C(v87, &qword_1ED96B1E0);
  v90 = v88;
  v91 = v172;
  sub_1D2537078(v90, v172, (uint64_t *)&unk_1ED96BF50);
  v92 = v181;
  v93 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v181 + 48);
  v94 = v182;
  if (v93(v91, 1, v182) == 1)
  {
    sub_1D253703C(v91, (uint64_t *)&unk_1ED96BF50);
    v95 = v183;
    v96 = (uint64_t)v173;
    goto LABEL_24;
  }
  v97 = v170;
  (*(void (**)(char *, uint64_t, uint64_t))(v92 + 32))(v170, v91, v94);
  sub_1D2538510(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v186);
  v98 = v187;
  v99 = v188;
  __swift_project_boxed_opaque_existential_0(&v186, v187);
  v100 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v99 + 8))(v98, v99);
  objc_msgSend(*(id *)&v100[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key], sel_family);
  v101 = v165;
  sub_1D26CD158();

  v102 = v167;
  v103 = v166;
  v104 = v168;
  (*(void (**)(char *, _QWORD, uint64_t))(v167 + 104))(v166, *MEMORY[0x1E0CEFB78], v168);
  sub_1D25369B0(&qword_1ED96D4E8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CEFB80], MEMORY[0x1E0CEFB90]);
  sub_1D26CDAC4();
  sub_1D26CDAC4();
  v105 = v193;
  v106 = v194;
  v107 = *(void (**)(char *, uint64_t))(v102 + 8);
  v107(v103, v104);
  v107(v101, v104);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
  if (v105 == v106)
  {
    v108 = (uint64_t)v160;
    sub_1D26CD524();
    v109 = sub_1D26CD254();
    v110 = *(_QWORD *)(v109 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v110 + 48))(v108, 1, v109) == 1)
    {
      sub_1D253703C(v108, &qword_1ED96D500);
      v111 = (uint64_t)v161;
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v162 + 56))(v161, 1, 1, v163);
      v4 = v178;
    }
    else
    {
      v112 = v108;
      v113 = v161;
      sub_1D26CD224();
      v114 = *(void (**)(uint64_t, uint64_t))(v110 + 8);
      v111 = (uint64_t)v113;
      v114(v112, v109);
      v115 = v162;
      v116 = v163;
      v117 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v162 + 48))(v113, 1, v163);
      v4 = v178;
      if (v117 != 1)
      {
        v118 = v157;
        (*(void (**)(char *, uint64_t, uint64_t))(v115 + 32))(v157, v111, v116);
        v119 = (uint64_t)v155;
        (*(void (**)(char *, char *, uint64_t))(v115 + 16))(v155, v118, v116);
        v120 = *(_QWORD *)(v4 + 16);
        v121 = (void **)(v120 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters);
        swift_beginAccess();
        v122 = *v121;
        v123 = v120 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
        v124 = v154;
        v125 = v119 + *(int *)(v154 + 24);
        v126 = sub_1D26CC09C();
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v126 - 8) + 16))(v125, v123, v126);
        *(_QWORD *)(v119 + *(int *)(v124 + 20)) = v122;
        v127 = v122;
        sub_1D26CD530();
        sub_1D2534120(v119, v153, type metadata accessor for InlineTextView);
        sub_1D25369B0(&qword_1ED96CE70, type metadata accessor for InlineTextView, (uint64_t)&unk_1D26D1C9C);
        v180 = (_QWORD *)sub_1D26CCFC0();
        sub_1D26CD560();
        sub_1D26CD524();
        v128 = (uint64_t)v151;
        sub_1D26CD53C();
        sub_1D25340E4(v119, type metadata accessor for InlineTextView);
        (*(void (**)(char *, uint64_t))(v162 + 8))(v157, v163);
        (*(void (**)(char *, uint64_t))(v92 + 8))(v170, v94);
        v89 = v185;
        sub_1D253703C(v185, (uint64_t *)&unk_1ED96BF50);
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v92 + 56))(v128, 0, 1, v94);
        sub_1D25384CC(v128, v89, (uint64_t *)&unk_1ED96BF50);
        goto LABEL_22;
      }
    }
    (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v94);
    sub_1D253703C(v111, &qword_1ED96CC90);
    v89 = v185;
LABEL_22:
    v95 = v183;
    v96 = (uint64_t)v173;
    goto LABEL_23;
  }
  (*(void (**)(char *, uint64_t))(v92 + 8))(v97, v94);
  v89 = v185;
  v95 = v183;
  v96 = (uint64_t)v173;
  v4 = v178;
LABEL_23:
  a2 = v176;
LABEL_24:
  sub_1D2537078(v89, v96, (uint64_t *)&unk_1ED96BF50);
  if (v93(v96, 1, v94) == 1)
  {
    sub_1D253703C(v89, (uint64_t *)&unk_1ED96BF50);
    sub_1D253703C(v96, (uint64_t *)&unk_1ED96BF50);
    v129 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v129 - 8) + 56))(v179, 1, 1, v129);
  }
  else
  {
    v180 = *(_QWORD **)(v92 + 32);
    v131 = v175;
    ((void (*)(char *, uint64_t, uint64_t))v180)(v175, v96, v94);
    (*(void (**)(char *, uint64_t, uint64_t))(v95 + 16))(v174, a2, v184);
    (*(void (**)(char *, char *, uint64_t))(v92 + 16))(v177, v131, v94);
    sub_1D2538510(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v186);
    v132 = v187;
    v133 = v188;
    __swift_project_boxed_opaque_existential_0(&v186, v187);
    v134 = *(uint64_t (**)(uint64_t, uint64_t))(v133 + 8);
    swift_retain();
    v135 = (void *)v134(v132, v133);
    v136 = v169;
    sub_1D2534120((uint64_t)v135 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v169, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

    v137 = *v136;
    sub_1D25340E4((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
    swift_release();
    sub_1D2538510(*(_QWORD *)(v4 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)&v186);
    v138 = v187;
    v139 = v188;
    __swift_project_boxed_opaque_existential_0(&v186, v187);
    v140 = *(uint64_t (**)(uint64_t, uint64_t))(v139 + 8);
    swift_retain();
    v141 = (void *)v140(v138, v139);
    sub_1D2534120((uint64_t)v141 + OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key, (uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);

    v142 = v136[1];
    sub_1D25340E4((uint64_t)v136, (uint64_t (*)(_QWORD))type metadata accessor for WidgetEntryKey);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v186);
    swift_release();
    v143 = v182;
    (*(void (**)(char *, uint64_t))(v181 + 8))(v175, v182);
    sub_1D253703C(v185, (uint64_t *)&unk_1ED96BF50);
    v144 = v179;
    (*(void (**)(uint64_t, char *, uint64_t))(v183 + 32))(v179, v174, v184);
    v145 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    ((void (*)(uint64_t, char *, uint64_t))v180)(v144 + v145[5], v177, v143);
    *(_QWORD *)(v144 + v145[6]) = v137;
    *(_QWORD *)(v144 + v145[7]) = v142;
    return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, int *))(*((_QWORD *)v145 - 1) + 56))(v144, 0, 1, v145);
  }
}

uint64_t sub_1D260D628()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D260D64C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *(_QWORD *)(*(_QWORD *)v1 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logger;
  v4 = sub_1D26CC09C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D260D698()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D260D6D8@<X0>(uint64_t a1@<X8>)
{
  swift_retain();
  sub_1D25FD884(a1);
  return swift_release();
}

uint64_t sub_1D260D710(uint64_t a1, uint64_t a2)
{
  return sub_1D260D74C(a1, a2, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment);
}

uint64_t sub_1D260D71C()
{
  return sub_1D260AF2C() & 1;
}

uint64_t sub_1D260D740(uint64_t a1, uint64_t a2)
{
  return sub_1D260D74C(a1, a2, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment);
}

uint64_t sub_1D260D74C(uint64_t a1, uint64_t a2, _QWORD *a3)
{
  uint64_t v3;
  unsigned __int8 *v4;

  v4 = (unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)v3 + 16) + *a3);
  swift_beginAccess();
  return *v4;
}

uint64_t sub_1D260D794@<X0>(uint64_t a1@<X8>)
{
  return sub_1D260AE58(a1);
}

uint64_t sub_1D260D7B4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v10;

  v1 = sub_1D26CBC4C();
  v2 = *(_QWORD *)(v1 - 8);
  MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = *(_QWORD *)(*(_QWORD *)v0 + 16);
  v6 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__dataProtectionMonitor + 24);
  v7 = *(_QWORD *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__dataProtectionMonitor + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__dataProtectionMonitor), v6);
  v8 = v5 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy;
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v2 + 16))(v4, v8, v1);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 24))(v4, v6, v7);
  return (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
}

uint64_t sub_1D260D8A8@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  _BYTE v7[40];

  v5 = *v2;
  BSDispatchQueueAssertMain();
  sub_1D2538510(*(_QWORD *)(v5 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v7);
  sub_1D260B18C((uint64_t)v7, a1, a2);
  return sub_1D253703C((uint64_t)v7, (uint64_t *)&unk_1ED962EF8);
}

uint64_t sub_1D260D918@<X0>(void *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  _BYTE v8[40];

  v5 = *v2;
  BSDispatchQueueAssertMain();
  v6 = *(_QWORD *)(v5 + 16) + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__placeholderSource;
  swift_beginAccess();
  sub_1D2537078(v6, (uint64_t)v8, (uint64_t *)&unk_1ED962EF8);
  sub_1D260B18C((uint64_t)v8, a1, a2);
  return sub_1D253703C((uint64_t)v8, (uint64_t *)&unk_1ED962EF8);
}

uint64_t sub_1D260D9B0()
{
  return sub_1D260B01C();
}

uint64_t ViewableTimelineEntry.containsPrivacyRedactions.getter()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CD524();
  v3 = sub_1D26CD254();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1D253703C((uint64_t)v2, &qword_1ED96D500);
    v5 = 0;
  }
  else
  {
    v5 = sub_1D26CD230();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t sub_1D260DA98@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CD548();
  *a1 = result;
  return result;
}

uint64_t sub_1D260DAC0()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D500);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CD524();
  v3 = sub_1D26CD254();
  v4 = *(_QWORD *)(v3 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    sub_1D253703C((uint64_t)v2, &qword_1ED96D500);
    v5 = 0;
  }
  else
  {
    v5 = sub_1D26CD230();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return v5 & 1;
}

uint64_t EnvironmentWrappedViewableTimelineEntry.environmentValues.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CC7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t EnvironmentWrappedViewableTimelineEntry.viewableTimelineEntry.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0) + 20);
  v4 = sub_1D26CD56C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D260DC08()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;
  void *v7;
  os_unfair_lock_s *v8;
  id v9;
  id v10;
  NSObject *v11;
  os_log_type_t v12;
  uint8_t *v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v18[3];
  uint64_t v19;
  uint64_t v20;

  v1 = v0;
  sub_1D2538510(v0 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__liveSource, (uint64_t)v18);
  v2 = v19;
  v3 = v20;
  __swift_project_boxed_opaque_existential_0(v18, v19);
  v4 = (char *)(*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(v2, v3);
  v5 = *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = *(void **)&v4[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
  v8 = *(os_unfair_lock_s **)(v5 + 16);
  v9 = v7;
  os_unfair_lock_unlock(v8);

  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v18);
  if (v7)
  {
    if (objc_msgSend(v9, sel_preferredBackgroundStyle) == (id)2)
    {

      return 1;
    }
    else
    {
      v10 = objc_msgSend(v9, sel_supportsVibrantContent);

    }
  }
  else
  {
    swift_retain_n();
    v11 = sub_1D26CC084();
    v12 = sub_1D26CDCEC();
    if (os_log_type_enabled(v11, v12))
    {
      v13 = (uint8_t *)swift_slowAlloc();
      v14 = swift_slowAlloc();
      v18[0] = v14;
      *(_DWORD *)v13 = 136446210;
      v15 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier);
      v16 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_logIdentifier + 8);
      swift_bridgeObjectRetain();
      sub_1D2537880(v15, v16, v18);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v11, v12, "[%{public}s] defaulting requiresCARendering to false due to nil descriptor.", v13, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v14, -1, -1);
      MEMORY[0x1D823A5E0](v13, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    return 0;
  }
  return (uint64_t)v10;
}

uint64_t type metadata accessor for _LiveWidgetEntryViewModelSecurityDataSource()
{
  return objc_opt_self();
}

uint64_t sub_1D260DE84(unint64_t *a1, unint64_t *a2, uint64_t a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v7;

  result = *a1;
  if (!result)
  {
    v7 = sub_1D2539514(255, a2);
    result = MEMORY[0x1D823A4E4](a4, v7);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D260DEC4()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D260DEE8()
{
  return sub_1D26056FC();
}

uint64_t sub_1D260DEF0()
{
  return sub_1D2605750();
}

uint64_t sub_1D260DEF8()
{
  uint64_t v0;

  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 24);
  return swift_deallocObject();
}

void sub_1D260DF24(uint64_t a1)
{
  uint64_t v1;

  sub_1D2605E1C(a1, *(_QWORD *)(v1 + 16), v1 + 24);
}

uint64_t sub_1D260DF30()
{
  return sub_1D260665C();
}

uint64_t sub_1D260DF38()
{
  return sub_1D26066BC();
}

uint64_t sub_1D260DF40()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D260DF6C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2607B00(a1, *(_QWORD *)(v1 + 16), *(void (**)(uint64_t))(v1 + 24));
}

unint64_t sub_1D260DF7C()
{
  unint64_t result;

  result = qword_1EFC83040;
  if (!qword_1EFC83040)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for WidgetEntrySourceType, &type metadata for WidgetEntrySourceType);
    atomic_store(result, (unint64_t *)&qword_1EFC83040);
  }
  return result;
}

unint64_t sub_1D260DFC4()
{
  unint64_t result;

  result = qword_1EFC83048;
  if (!qword_1EFC83048)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for LiveWidgetViewChangeReason, &type metadata for LiveWidgetViewChangeReason);
    atomic_store(result, (unint64_t *)&qword_1EFC83048);
  }
  return result;
}

uint64_t sub_1D260E008()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D260E018()
{
  return MEMORY[0x1E0CDFD08];
}

uint64_t sub_1D260E02C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets, &qword_1ED96B258);
}

uint64_t sub_1D260E050(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__allowsInternalTapTargets, &qword_1ED96B258);
}

uint64_t sub_1D260E084(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled, &qword_1ED96B258);
}

uint64_t sub_1D260E0A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isInteractionDisabled, &qword_1ED96B258);
}

uint64_t sub_1D260E0DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape, &qword_1ED96B258);
}

uint64_t sub_1D260E100(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__clipToShape, &qword_1ED96B258);
}

uint64_t sub_1D260E12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown, &qword_1ED96B258);
}

uint64_t sub_1D260E150(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__baseContentTouchedDown, &qword_1ED96B258);
}

uint64_t sub_1D260E17C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler, &qword_1ED96C900);
}

uint64_t sub_1D260E1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1EFC83030, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__launchRequestHandler, &qword_1ED96C900);
}

uint64_t sub_1D260E1D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__interactionHandler, &qword_1ED962E10);
}

uint64_t sub_1D260E1F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1EFC83050, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__interactionHandler, &qword_1ED962E10);
}

uint64_t sub_1D260E22C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate, &qword_1ED96B258);
}

uint64_t sub_1D260E250(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1ED962DF8, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__isPendingInteractionUpdate, &qword_1ED96B258);
}

uint64_t sub_1D260E27C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1D25FC7C4(a1, a2, a3, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder, &qword_1ED962E00);
}

uint64_t sub_1D260E2A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D25FC830(a1, a2, a3, a4, &qword_1EFC83038, (uint64_t)&OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel__backgroundViewBuilder, &qword_1ED962E00);
}

uint64_t sub_1D260E2CC@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_viewEntry, &qword_1ED96D438, a2);
}

uint64_t sub_1D260E2E4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentTransparent, a2);
}

uint64_t sub_1D260E2F4@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D254517C(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_colorScheme, (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8], a2);
}

uint64_t sub_1D260E31C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme, &qword_1ED96B268, a2);
}

uint64_t sub_1D260E330(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26005FC(a1, a2, a3, a4, &qword_1ED96B268, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_preferredColorScheme, (void (*)(_BYTE *))sub_1D25FE82C);
}

uint64_t sub_1D260E35C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused, a2);
}

uint64_t sub_1D260E368(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_140Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isContentPaused, (uint64_t (*)(uint64_t))sub_1D25FED5C);
}

uint64_t sub_1D260E37C@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment, a2);
}

uint64_t sub_1D260E388(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_140Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_canAppearInSecureEnvironment, (uint64_t (*)(uint64_t))sub_1D25FF024);
}

uint64_t sub_1D260E39C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D254517C(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_keybagLockPolicy, (uint64_t (*)(_QWORD))MEMORY[0x1E0D0F8A8], a2);
}

uint64_t sub_1D260E3C4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground, a2);
}

uint64_t sub_1D260E3D0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_140Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_isForeground, (uint64_t (*)(uint64_t))sub_1D25FFB54);
}

uint64_t sub_1D260E3E4@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance, a2);
}

uint64_t sub_1D260E3F0(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_140Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_supportsLowLuminance, (uint64_t (*)(uint64_t))sub_1D25FFE24);
}

uint64_t sub_1D260E404@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment, a2);
}

uint64_t sub_1D260E410(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_140Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_prefersUnredactedContentInLowLuminanceEnvironment, (uint64_t (*)(uint64_t))sub_1D2600188);
}

uint64_t sub_1D260E424@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDateDidChangePublisher);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1D260E47C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return keypath_get_10Tm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate, &qword_1ED96B1E0, a2);
}

uint64_t sub_1D260E490(uint64_t a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D26005FC(a1, a2, a3, a4, &qword_1ED96B1E0, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_overrideDate, (void (*)(_BYTE *))sub_1D2600724);
}

id sub_1D260E4BC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  void **v3;
  void *v4;

  v3 = (void **)(*a1 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_renderScheme);
  swift_beginAccess();
  v4 = *v3;
  *a2 = *v3;
  return v4;
}

id sub_1D260E510@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_157Tm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters, a2);
}

void sub_1D260E51C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1D2602088(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_tintParameters, sub_1D26015BC);
}

id sub_1D260E540@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_157Tm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters, a2);
}

void sub_1D260E54C(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1D2602088(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_inlineTextParameters, sub_1D26019B8);
}

uint64_t sub_1D260E570@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel, a2);
}

uint64_t sub_1D260E57C(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_140Tm(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_showsWidgetLabel, (uint64_t (*)(uint64_t))sub_1D2601D38);
}

uint64_t keypath_set_140Tm(char *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5, uint64_t (*a6)(uint64_t))
{
  char v7;
  _BYTE *v8;
  uint64_t v9;

  v7 = *a1;
  v8 = (_BYTE *)(*a2 + *a5);
  swift_beginAccess();
  v9 = *v8;
  *v8 = v7;
  return a6(v9);
}

id sub_1D260E5EC@<X0>(_QWORD *a1@<X0>, void **a2@<X8>)
{
  return keypath_get_157Tm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties, a2);
}

id keypath_get_157Tm@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X3>, void **a3@<X8>)
{
  void **v4;
  void *v5;

  v4 = (void **)(*a1 + *a2);
  swift_beginAccess();
  v5 = *v4;
  *a3 = *v4;
  return v5;
}

void sub_1D260E644(void **a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  sub_1D2602088(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_displayProperties, sub_1D2602104);
}

uint64_t sub_1D260E668@<X0>(_QWORD *a1@<X0>, _BYTE *a2@<X8>)
{
  return keypath_getTm(a1, &OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_ignoreComplicationUserRedactionPreference, a2);
}

uint64_t sub_1D260E674(char *a1, _QWORD *a2)
{
  char v2;
  _BYTE *v3;
  uint64_t result;

  v2 = *a1;
  v3 = (_BYTE *)(*a2 + OBJC_IVAR____TtC9ChronoKit24LiveWidgetEntryViewModel_ignoreComplicationUserRedactionPreference);
  result = swift_beginAccess();
  *v3 = v2;
  return result;
}

uint64_t dispatch thunk of WidgetEntryViewProvider.currentViewableEntry(for:overrideDate:environment:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 8))();
}

uint64_t storeEnumTagSinglePayload for WidgetEntrySourceType(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 2 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 2) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFE)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFD)
    return ((uint64_t (*)(void))((char *)&loc_1D260E714 + 4 * byte_1D26D683D[v4]))();
  *a1 = a2 + 2;
  return ((uint64_t (*)(void))((char *)sub_1D260E748 + 4 * byte_1D26D6838[v4]))();
}

uint64_t sub_1D260E748(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D260E750(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D260E758);
  return result;
}

uint64_t sub_1D260E764(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D260E76CLL);
  *(_BYTE *)result = a2 + 2;
  return result;
}

uint64_t sub_1D260E770(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D260E778(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for WidgetEntrySourceType()
{
  return &type metadata for WidgetEntrySourceType;
}

uint64_t dispatch thunk of WidgetEntrySource.entry.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of WidgetEntrySource.type.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetEntrySource.viewProvider.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t type metadata accessor for ConcreteWidgetEntrySource()
{
  return objc_opt_self();
}

uint64_t getEnumTagSinglePayload for LiveWidgetViewChangeReason(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xED)
    goto LABEL_17;
  if (a2 + 19 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 19) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 19;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 19;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 19;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 0x14;
  v8 = v6 - 20;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveWidgetViewChangeReason(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 19 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 19) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xED)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xEC)
    return ((uint64_t (*)(void))((char *)&loc_1D260E8A8 + 4 * byte_1D26D6847[v4]))();
  *a1 = a2 + 19;
  return ((uint64_t (*)(void))((char *)sub_1D260E8DC + 4 * byte_1D26D6842[v4]))();
}

uint64_t sub_1D260E8DC(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D260E8E4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D260E8ECLL);
  return result;
}

uint64_t sub_1D260E8F8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D260E900);
  *(_BYTE *)result = a2 + 19;
  return result;
}

uint64_t sub_1D260E904(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D260E90C(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for LiveWidgetViewChangeReason()
{
  return &type metadata for LiveWidgetViewChangeReason;
}

uint64_t sub_1D260E928()
{
  return type metadata accessor for LiveWidgetEntryViewModel(0);
}

uint64_t type metadata accessor for LiveWidgetEntryViewModel(uint64_t a1)
{
  return sub_1D2534164(a1, qword_1ED96D298);
}

void sub_1D260E944()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  unint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  unint64_t v11;

  sub_1D260F144();
  if (v0 <= 0x3F)
  {
    sub_1D260F198(319, &qword_1ED96C908, &qword_1ED96D578);
    if (v1 <= 0x3F)
    {
      sub_1D260F198(319, &qword_1ED962E18, &qword_1ED962FC0);
      if (v2 <= 0x3F)
      {
        sub_1D260F198(319, &qword_1ED962E08, &qword_1ED962EE0);
        if (v3 <= 0x3F)
        {
          sub_1D260F1E4(319);
          if (v4 <= 0x3F)
          {
            sub_1D26CC7A4();
            if (v5 <= 0x3F)
            {
              sub_1D26CC2C4();
              if (v6 <= 0x3F)
              {
                sub_1D2568174(319, &qword_1ED96C910, (void (*)(uint64_t))MEMORY[0x1E0CD86F8]);
                if (v7 <= 0x3F)
                {
                  sub_1D26CBC4C();
                  if (v8 <= 0x3F)
                  {
                    sub_1D2568174(319, (unint64_t *)&qword_1ED96F0B0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
                    if (v9 <= 0x3F)
                    {
                      sub_1D2568174(319, &qword_1ED96B1B0, (void (*)(uint64_t))MEMORY[0x1E0CAFFF8]);
                      if (v10 <= 0x3F)
                      {
                        sub_1D26CC09C();
                        if (v11 <= 0x3F)
                          swift_updateClassMetadata2();
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

uint64_t method lookup function for LiveWidgetEntryViewModel()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.allowsInternalTapTargets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 488))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.allowsInternalTapTargets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.allowsInternalTapTargets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 504))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$allowsInternalTapTargets.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 512))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$allowsInternalTapTargets.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 520))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$allowsInternalTapTargets.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 528))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isInteractionDisabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 536))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isInteractionDisabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isInteractionDisabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 552))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$isInteractionDisabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 560))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$isInteractionDisabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 568))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$isInteractionDisabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 576))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.clipToShape.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 584))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.clipToShape.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.clipToShape.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 600))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$clipToShape.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 608))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$clipToShape.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 616))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$clipToShape.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 624))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.baseContentTouchedDown.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 632))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.baseContentTouchedDown.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.baseContentTouchedDown.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 648))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$baseContentTouchedDown.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 656))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$baseContentTouchedDown.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 664))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$baseContentTouchedDown.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 672))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.launchRequestHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 680))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.launchRequestHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.launchRequestHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 696))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$launchRequestHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 704))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$launchRequestHandler.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 712))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$launchRequestHandler.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 720))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.interactionHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 728))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$interactionHandler.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 752))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isPendingInteractionUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isPendingInteractionUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 784))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isPendingInteractionUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 792))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$isPendingInteractionUpdate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 800))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$isPendingInteractionUpdate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 808))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$isPendingInteractionUpdate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.backgroundViewBuilder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.backgroundViewBuilder.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.backgroundViewBuilder.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$backgroundViewBuilder.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$backgroundViewBuilder.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.$backgroundViewBuilder.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.viewEntry.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 896))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.viewEntryDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 952))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.viewEntryContainsInteractiveControls.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 960))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.effectiveEnvironmentValues.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 992))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.widget.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1000))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.metrics.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1008))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.protectionLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1016))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.viewArchiveDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1024))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.viewArchive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.descriptorDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.descriptor.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.contentTransparencyDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isContentTransparent.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1088))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isContentTransparent.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1096))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isContentTransparent.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1104))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.requiresCARendering(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.colorScheme.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1120))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.preferredColorScheme.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1144))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.preferredColorScheme.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1152))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.preferredColorScheme.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1160))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isContentPaused.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1168))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isContentPaused.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1176))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isContentPaused.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1184))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.canAppearInSecureEnvironment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1192))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.canAppearInSecureEnvironment.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1200))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.canAppearInSecureEnvironment.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.keybagLockPolicy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1216))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.keybagLockPolicy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1224))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.keybagLockPolicy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1232))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isForeground.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1240))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isForeground.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1248))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.isForeground.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1256))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.supportsLowLuminance.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1288))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.supportsLowLuminance.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1296))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.supportsLowLuminance.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1304))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.prefersUnredactedContentInLowLuminanceEnvironment.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1312))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.prefersUnredactedContentInLowLuminanceEnvironment.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1320))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.prefersUnredactedContentInLowLuminanceEnvironment.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1328))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.overrideDateDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1360))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.overrideDateDidChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1368))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.overrideDateDidChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1376))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.overrideDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1384))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.overrideDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1392))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.overrideDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1400))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.renderScheme.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1408))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.renderScheme.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1416))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.renderScheme.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1424))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.tintParameters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1432))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.tintParameters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1440))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.tintParameters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1448))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.inlineTextParameters.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1456))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.inlineTextParameters.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1464))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.inlineTextParameters.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1472))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.showsWidgetLabel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1480))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.showsWidgetLabel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1488))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.showsWidgetLabel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1496))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.displayProperties.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1504))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.displayProperties.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1512))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.displayProperties.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1520))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.ignoreComplicationUserRedactionPreference.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1528))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.ignoreComplicationUserRedactionPreference.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1536))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.ignoreComplicationUserRedactionPreference.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1544))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.widgetURL.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1552))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.performBatchedUpdates(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1896))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.__allocating_init(liveSource:placeholderSource:logger:keybagStateProvider:dataProtectionMonitor:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1904))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.requestLaunch()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1912))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1920))();
}

uint64_t dispatch thunk of LiveWidgetEntryViewModel.setInteractionHandler(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1928))();
}

void sub_1D260F144()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED96B260)
  {
    v0 = sub_1D26CC1F8();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED96B260);
  }
}

void sub_1D260F198(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v4;
  uint64_t v5;

  if (!*a2)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(a3);
    v4 = sub_1D26CC1F8();
    if (!v5)
      atomic_store(v4, a2);
  }
}

void sub_1D260F1E4(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;

  if (!qword_1ED96D440)
  {
    v2 = type metadata accessor for DefaultWidgetLiveViewEntry(255);
    v3 = sub_1D25369B0(&qword_1ED96D368, type metadata accessor for DefaultWidgetLiveViewEntry, (uint64_t)&protocol conformance descriptor for DefaultWidgetLiveViewEntry);
    v5 = type metadata accessor for WidgetViewSecurityPolicyResult(a1, v2, v3, v4);
    if (!v6)
      atomic_store(v5, (unint64_t *)&qword_1ED96D440);
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for DefaultWidgetLiveViewEntry(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5;
  uint64_t v6;
  int *v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  uint64_t v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  int *v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  char *v29;
  void (*v30)(char *, char *, uint64_t);
  uint64_t v31;
  void *v32;
  uint64_t v33;
  void *v34;
  uint64_t v35;
  char *v36;
  char *v37;
  uint64_t v38;
  unsigned int (*v39)(char *, uint64_t, int *);
  id v40;
  id v41;
  uint64_t v42;
  uint64_t v43;
  void *v44;
  uint64_t v45;
  void *v46;
  void (*v47)(char *, _QWORD, uint64_t, int *);
  id v48;
  id v49;
  void (*v51)(char *, char *);
  uint64_t v52;

  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v6 = sub_1D26CC7A4();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
      v7 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
      v8 = v7[5];
      v9 = (char *)a1 + v8;
      v10 = (char *)a2 + v8;
      v11 = sub_1D26CD56C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
      v12 = v7[6];
      v13 = *(void **)((char *)a2 + v12);
      *(uint64_t *)((char *)a1 + v12) = (uint64_t)v13;
      v14 = v7[7];
      v15 = *(void **)((char *)a2 + v14);
      *(uint64_t *)((char *)a1 + v14) = (uint64_t)v15;
      v16 = v13;
      v17 = v15;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
      v20 = *(int *)(v19 + 48);
      v21 = (char *)a1 + v20;
      v22 = (char *)a2 + v20;
      v23 = sub_1D26CC7A4();
      v51 = *(void (**)(char *, char *))(*(_QWORD *)(v23 - 8) + 16);
      v52 = v23;
      v51(v21, v22);
      v24 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
      v25 = v24[5];
      v26 = &v21[v25];
      v27 = &v22[v25];
      v28 = sub_1D26CD56C();
      v29 = v26;
      v30 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16);
      v30(v29, v27, v28);
      v31 = v24[6];
      v32 = *(void **)&v22[v31];
      *(_QWORD *)&v21[v31] = v32;
      v33 = v24[7];
      v34 = *(void **)&v22[v33];
      *(_QWORD *)&v21[v33] = v34;
      v35 = *(int *)(v19 + 64);
      v36 = (char *)a1 + v35;
      v37 = (char *)a2 + v35;
      v38 = *((_QWORD *)v24 - 1);
      v39 = *(unsigned int (**)(char *, uint64_t, int *))(v38 + 48);
      v40 = v32;
      v41 = v34;
      if (v39(v37, 1, v24))
      {
        v42 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
        memcpy(v36, v37, *(_QWORD *)(*(_QWORD *)(v42 - 8) + 64));
      }
      else
      {
        ((void (*)(char *, char *, uint64_t))v51)(v36, v37, v52);
        v30(&v36[v24[5]], &v37[v24[5]], v28);
        v43 = v24[6];
        v44 = *(void **)&v37[v43];
        *(_QWORD *)&v36[v43] = v44;
        v45 = v24[7];
        v46 = *(void **)&v37[v45];
        *(_QWORD *)&v36[v45] = v46;
        v47 = *(void (**)(char *, _QWORD, uint64_t, int *))(v38 + 56);
        v48 = v44;
        v49 = v46;
        v47(v36, 0, 1, v24);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void destroy for DefaultWidgetLiveViewEntry(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  int *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  void (*v10)(uint64_t, uint64_t);
  int *v11;
  uint64_t v12;
  uint64_t v13;
  void (*v14)(uint64_t, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v2 = sub_1D26CC7A4();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
    v3 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    v4 = a1 + *(int *)(v3 + 20);
    v5 = sub_1D26CD56C();
    (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);

    v6 = (int *)(v3 + 28);
  }
  else
  {
    swift_release();
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v8 = a1 + *(int *)(v7 + 48);
    v9 = sub_1D26CC7A4();
    v10 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 8);
    v10(v8, v9);
    v11 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    v12 = v8 + v11[5];
    v13 = sub_1D26CD56C();
    v14 = *(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8);
    v14(v12, v13);

    v6 = v11 + 7;
    a1 += *(int *)(v7 + 64);
    if ((*(unsigned int (**)(uint64_t, uint64_t, int *))(*((_QWORD *)v11 - 1) + 48))(a1, 1, v11))
      return;
    v10(a1, v9);
    v14(a1 + v11[5], v13);

  }
}

_QWORD *initializeWithCopy for DefaultWidgetLiveViewEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, int *);
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, _QWORD, uint64_t, int *);
  id v45;
  id v46;
  void (*v48)(char *, char *, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1D26CC7A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
    v5 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    v6 = v5[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1D26CD56C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
    v10 = v5[6];
    v11 = *(void **)((char *)a2 + v10);
    *(_QWORD *)((char *)a1 + v10) = v11;
    v12 = v5[7];
    v13 = *(void **)((char *)a2 + v12);
    *(_QWORD *)((char *)a1 + v12) = v13;
    v14 = v11;
    v15 = v13;
  }
  else
  {
    *a1 = *a2;
    swift_retain();
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v17 = *(int *)(v16 + 48);
    v18 = (char *)a1 + v17;
    v19 = (char *)a2 + v17;
    v20 = sub_1D26CC7A4();
    v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
    v48(v18, v19, v20);
    v21 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    v22 = v21[5];
    v23 = &v18[v22];
    v24 = &v19[v22];
    v25 = sub_1D26CD56C();
    v26 = v23;
    v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
    v27(v26, v24, v25);
    v28 = v21[6];
    v29 = *(void **)&v19[v28];
    *(_QWORD *)&v18[v28] = v29;
    v30 = v21[7];
    v31 = *(void **)&v19[v30];
    *(_QWORD *)&v18[v30] = v31;
    v32 = *(int *)(v16 + 64);
    v33 = (char *)a1 + v32;
    v34 = (char *)a2 + v32;
    v35 = *((_QWORD *)v21 - 1);
    v36 = *(unsigned int (**)(char *, uint64_t, int *))(v35 + 48);
    v37 = v29;
    v38 = v31;
    if (v36(v34, 1, v21))
    {
      v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
      memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
    }
    else
    {
      v48(v33, v34, v20);
      v27(&v33[v21[5]], &v34[v21[5]], v25);
      v40 = v21[6];
      v41 = *(void **)&v34[v40];
      *(_QWORD *)&v33[v40] = v41;
      v42 = v21[7];
      v43 = *(void **)&v34[v42];
      *(_QWORD *)&v33[v42] = v43;
      v44 = *(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56);
      v45 = v41;
      v46 = v43;
      v44(v33, 0, 1, v21);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithCopy for DefaultWidgetLiveViewEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  void *v11;
  uint64_t v12;
  void *v13;
  id v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  int *v21;
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  char *v26;
  void (*v27)(char *, char *, uint64_t);
  uint64_t v28;
  void *v29;
  uint64_t v30;
  void *v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unsigned int (*v36)(char *, uint64_t, int *);
  id v37;
  id v38;
  uint64_t v39;
  uint64_t v40;
  void *v41;
  uint64_t v42;
  void *v43;
  void (*v44)(char *, _QWORD, uint64_t, int *);
  id v45;
  id v46;
  void (*v48)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for DefaultWidgetLiveViewEntry);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1D26CC7A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, a2, v4);
      v5 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
      v6 = v5[5];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1D26CD56C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 16))(v7, v8, v9);
      v10 = v5[6];
      v11 = *(void **)((char *)a2 + v10);
      *(_QWORD *)((char *)a1 + v10) = v11;
      v12 = v5[7];
      v13 = *(void **)((char *)a2 + v12);
      *(_QWORD *)((char *)a1 + v12) = v13;
      v14 = v11;
      v15 = v13;
    }
    else
    {
      *a1 = *a2;
      swift_retain();
      v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
      v17 = *(int *)(v16 + 48);
      v18 = (char *)a1 + v17;
      v19 = (char *)a2 + v17;
      v20 = sub_1D26CC7A4();
      v48 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 16);
      v48(v18, v19, v20);
      v21 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
      v22 = v21[5];
      v23 = &v18[v22];
      v24 = &v19[v22];
      v25 = sub_1D26CD56C();
      v26 = v23;
      v27 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v25 - 8) + 16);
      v27(v26, v24, v25);
      v28 = v21[6];
      v29 = *(void **)&v19[v28];
      *(_QWORD *)&v18[v28] = v29;
      v30 = v21[7];
      v31 = *(void **)&v19[v30];
      *(_QWORD *)&v18[v30] = v31;
      v32 = *(int *)(v16 + 64);
      v33 = (char *)a1 + v32;
      v34 = (char *)a2 + v32;
      v35 = *((_QWORD *)v21 - 1);
      v36 = *(unsigned int (**)(char *, uint64_t, int *))(v35 + 48);
      v37 = v29;
      v38 = v31;
      if (v36(v34, 1, v21))
      {
        v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
        memcpy(v33, v34, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
      }
      else
      {
        v48(v33, v34, v20);
        v27(&v33[v21[5]], &v34[v21[5]], v25);
        v40 = v21[6];
        v41 = *(void **)&v34[v40];
        *(_QWORD *)&v33[v40] = v41;
        v42 = v21[7];
        v43 = *(void **)&v34[v42];
        *(_QWORD *)&v33[v42] = v43;
        v44 = *(void (**)(char *, _QWORD, uint64_t, int *))(v35 + 56);
        v45 = v41;
        v46 = v43;
        v44(v33, 0, 1, v21);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_QWORD *initializeWithTake for DefaultWidgetLiveViewEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);

  if (swift_getEnumCaseMultiPayload() == 1)
  {
    v4 = sub_1D26CC7A4();
    (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
    v5 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    v6 = v5[5];
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = sub_1D26CD56C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
    *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
    *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
  }
  else
  {
    *a1 = *a2;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
    v11 = *(int *)(v10 + 48);
    v12 = (char *)a1 + v11;
    v13 = (char *)a2 + v11;
    v14 = sub_1D26CC7A4();
    v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
    v28(v12, v13, v14);
    v15 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
    v16 = v15[5];
    v17 = &v12[v16];
    v18 = &v13[v16];
    v19 = sub_1D26CD56C();
    v20 = v17;
    v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
    v21(v20, v18, v19);
    *(_QWORD *)&v12[v15[6]] = *(_QWORD *)&v13[v15[6]];
    *(_QWORD *)&v12[v15[7]] = *(_QWORD *)&v13[v15[7]];
    v22 = *(int *)(v10 + 64);
    v23 = (char *)a1 + v22;
    v24 = (char *)a2 + v22;
    v25 = *((_QWORD *)v15 - 1);
    if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v24, 1, v15))
    {
      v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
    }
    else
    {
      v28(v23, v24, v14);
      v21(&v23[v15[5]], &v24[v15[5]], v19);
      *(_QWORD *)&v23[v15[6]] = *(_QWORD *)&v24[v15[6]];
      *(_QWORD *)&v23[v15[7]] = *(_QWORD *)&v24[v15[7]];
      (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v23, 0, 1, v15);
    }
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_QWORD *assignWithTake for DefaultWidgetLiveViewEntry(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;
  int *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  int *v15;
  uint64_t v16;
  char *v17;
  char *v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, char *, uint64_t);
  uint64_t v22;
  char *v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  void (*v28)(char *, char *, uint64_t);

  if (a1 != a2)
  {
    sub_1D25340E4((uint64_t)a1, type metadata accessor for DefaultWidgetLiveViewEntry);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      v4 = sub_1D26CC7A4();
      (*(void (**)(_QWORD *, _QWORD *, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a1, a2, v4);
      v5 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
      v6 = v5[5];
      v7 = (char *)a1 + v6;
      v8 = (char *)a2 + v6;
      v9 = sub_1D26CD56C();
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v9 - 8) + 32))(v7, v8, v9);
      *(_QWORD *)((char *)a1 + v5[6]) = *(_QWORD *)((char *)a2 + v5[6]);
      *(_QWORD *)((char *)a1 + v5[7]) = *(_QWORD *)((char *)a2 + v5[7]);
    }
    else
    {
      *a1 = *a2;
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D180);
      v11 = *(int *)(v10 + 48);
      v12 = (char *)a1 + v11;
      v13 = (char *)a2 + v11;
      v14 = sub_1D26CC7A4();
      v28 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v14 - 8) + 32);
      v28(v12, v13, v14);
      v15 = (int *)type metadata accessor for EnvironmentWrappedViewableTimelineEntry(0);
      v16 = v15[5];
      v17 = &v12[v16];
      v18 = &v13[v16];
      v19 = sub_1D26CD56C();
      v20 = v17;
      v21 = *(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v19 - 8) + 32);
      v21(v20, v18, v19);
      *(_QWORD *)&v12[v15[6]] = *(_QWORD *)&v13[v15[6]];
      *(_QWORD *)&v12[v15[7]] = *(_QWORD *)&v13[v15[7]];
      v22 = *(int *)(v10 + 64);
      v23 = (char *)a1 + v22;
      v24 = (char *)a2 + v22;
      v25 = *((_QWORD *)v15 - 1);
      if ((*(unsigned int (**)(char *, uint64_t, int *))(v25 + 48))(v24, 1, v15))
      {
        v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96D478);
        memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v26 - 8) + 64));
      }
      else
      {
        v28(v23, v24, v14);
        v21(&v23[v15[5]], &v24[v15[5]], v19);
        *(_QWORD *)&v23[v15[6]] = *(_QWORD *)&v24[v15[6]];
        *(_QWORD *)&v23[v15[7]] = *(_QWORD *)&v24[v15[7]];
        (*(void (**)(char *, _QWORD, uint64_t, int *))(v25 + 56))(v23, 0, 1, v15);
      }
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_1D260FFE8()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  _QWORD v6[6];

  v0 = type metadata accessor for EnvironmentWrappedViewableTimelineEntry(319);
  if (v1 <= 0x3F)
  {
    sub_1D2568174(319, &qword_1ED96D480, (void (*)(uint64_t))type metadata accessor for EnvironmentWrappedViewableTimelineEntry);
    if (v3 > 0x3F)
    {
      return v2;
    }
    else
    {
      v4 = *(_QWORD *)(v0 - 8) + 64;
      swift_getTupleTypeLayout3();
      v6[4] = v6;
      v6[5] = v4;
      swift_initEnumMetadataMultiPayload();
      return 0;
    }
  }
  return v0;
}

uint64_t *initializeBufferWithCopyOfBuffer for EnvironmentWrappedViewableTimelineEntry(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  void *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v18 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v18 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CC7A4();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = (char *)a1 + v8;
    v10 = (char *)a2 + v8;
    v11 = sub_1D26CD56C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v11 - 8) + 16))(v9, v10, v11);
    v12 = a3[6];
    v13 = a3[7];
    v14 = *(void **)((char *)a2 + v12);
    *(uint64_t *)((char *)a1 + v12) = (uint64_t)v14;
    v15 = *(void **)((char *)a2 + v13);
    *(uint64_t *)((char *)a1 + v13) = (uint64_t)v15;
    v16 = v14;
    v17 = v15;
  }
  return a1;
}

void destroy for EnvironmentWrappedViewableTimelineEntry(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(a1, v4);
  v5 = a1 + a2[5];
  v6 = sub_1D26CD56C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 8))(v5, v6);

}

uint64_t initializeWithCopy for EnvironmentWrappedViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  void *v13;
  void *v14;
  id v15;
  id v16;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 16))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD56C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  v11 = a3[6];
  v12 = a3[7];
  v13 = *(void **)(a2 + v11);
  *(_QWORD *)(a1 + v11) = v13;
  v14 = *(void **)(a2 + v12);
  *(_QWORD *)(a1 + v12) = v14;
  v15 = v13;
  v16 = v14;
  return a1;
}

uint64_t assignWithCopy for EnvironmentWrappedViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD56C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 24))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)(a2 + v11);
  v13 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = v12;
  v14 = v12;

  v15 = a3[7];
  v16 = *(void **)(a2 + v15);
  v17 = *(void **)(a1 + v15);
  *(_QWORD *)(a1 + v15) = v16;
  v18 = v16;

  return a1;
}

uint64_t initializeWithTake for EnvironmentWrappedViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD56C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 32))(v8, v9, v10);
  v11 = a3[7];
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for EnvironmentWrappedViewableTimelineEntry(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void *v12;
  uint64_t v13;
  void *v14;

  v6 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CD56C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 40))(v8, v9, v10);
  v11 = a3[6];
  v12 = *(void **)(a1 + v11);
  *(_QWORD *)(a1 + v11) = *(_QWORD *)(a2 + v11);

  v13 = a3[7];
  v14 = *(void **)(a1 + v13);
  *(_QWORD *)(a1 + v13) = *(_QWORD *)(a2 + v13);

  return a1;
}

uint64_t getEnumTagSinglePayload for EnvironmentWrappedViewableTimelineEntry()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2610498(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;

  v6 = sub_1D26CC7A4();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = sub_1D26CD56C();
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 20);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 24));
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  return (v14 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentWrappedViewableTimelineEntry()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D261054C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = sub_1D26CC7A4();
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = sub_1D26CD56C();
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 20);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 24)) = (a2 - 1);
  return result;
}

uint64_t sub_1D26105F0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CC7A4();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CD56C();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_1D2610688()
{
  return sub_1D25369B0(&qword_1ED96D368, type metadata accessor for DefaultWidgetLiveViewEntry, (uint64_t)&protocol conformance descriptor for DefaultWidgetLiveViewEntry);
}

uint64_t sub_1D26106B4(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5;

  v5 = __swift_instantiateConcreteTypeFromMangledName(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 - 8) + 24))(a2, a1, v5);
  return a2;
}

_QWORD *destroy for LiveActivityLaunchHandlingModifier(_QWORD *result)
{
  if (*result)
    return (_QWORD *)swift_release();
  return result;
}

_QWORD *_s9ChronoKit34LiveActivityLaunchHandlingModifierVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  if (*a2)
  {
    v3 = a2[1];
    *a1 = *a2;
    a1[1] = v3;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  return a1;
}

_QWORD *assignWithCopy for LiveActivityLaunchHandlingModifier(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      swift_retain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_retain();
  swift_release();
  return a1;
}

_QWORD *assignWithTake for LiveActivityLaunchHandlingModifier(_QWORD *a1, uint64_t *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v4 = *a2;
  if (!*a1)
  {
    if (v4)
    {
      v6 = a2[1];
      *a1 = v4;
      a1[1] = v6;
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (!v4)
  {
    swift_release();
    goto LABEL_7;
  }
  v5 = a2[1];
  *a1 = v4;
  a1[1] = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for LiveActivityLaunchHandlingModifier(uint64_t *a1, unsigned int a2)
{
  uint64_t v3;
  int v4;

  if (!a2)
    return 0;
  if (a2 >= 0x7FFFFFFF && *((_BYTE *)a1 + 16))
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 - 1;
  if (v4 < 0)
    v4 = -1;
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for LiveActivityLaunchHandlingModifier(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_QWORD *)result = a2 - 0x7FFFFFFF;
    *(_QWORD *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFF)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)result = a2;
  }
  return result;
}

ValueMetadata *type metadata accessor for LiveActivityLaunchHandlingModifier()
{
  return &type metadata for LiveActivityLaunchHandlingModifier;
}

uint64_t sub_1D2610948()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2610958(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD v4[2];

  v4[0] = a1;
  v4[1] = a2;
  return MEMORY[0x1D823860C](v4, a3, &type metadata for LiveActivityLaunchHandlingModifier);
}

void sub_1D261098C(void (*a1)(uint64_t))
{
  uint64_t v2;
  uint64_t v3;
  os_log_type_t v4;
  uint8_t *v5;
  NSObject *oslog;

  if (a1)
  {
    v2 = swift_retain();
    a1(v2);
    sub_1D25495F4((uint64_t)a1);
  }
  else
  {
    if (qword_1ED9633F0 != -1)
      swift_once();
    v3 = sub_1D26CC09C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED977DE8);
    oslog = sub_1D26CC084();
    v4 = sub_1D26CDD04();
    if (os_log_type_enabled(oslog, v4))
    {
      v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v5 = 0;
      _os_log_impl(&dword_1D2531000, oslog, v4, "Tap Gesture on Live Activity ignored because launch request handler was not set", v5, 2u);
      MEMORY[0x1D823A5E0](v5, -1, -1);
    }

  }
}

uint64_t sub_1D2610A88()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v2 = *v0;
  v1 = v0[1];
  v3 = swift_allocObject();
  *(_QWORD *)(v3 + 16) = v2;
  *(_QWORD *)(v3 + 24) = v1;
  sub_1D2549DF0(v2);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83078);
  sub_1D2610B54();
  sub_1D26CCD98();
  return swift_release();
}

uint64_t sub_1D2610B20()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1D2610B4C()
{
  uint64_t v0;

  sub_1D261098C(*(void (**)(uint64_t))(v0 + 16));
}

unint64_t sub_1D2610B54()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC83080;
  if (!qword_1EFC83080)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC83078);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDBF10], v1);
    atomic_store(result, (unint64_t *)&qword_1EFC83080);
  }
  return result;
}

uint64_t sub_1D2610BA0()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1EFC83078);
  sub_1D2610B54();
  return swift_getOpaqueTypeConformance2();
}

char *sub_1D2610BEC(char *a1, char **a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  unsigned int (*v9)(char **, uint64_t, uint64_t);
  uint64_t v10;
  char *v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  char *v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void **v23;
  void **v24;
  uint64_t v25;
  void *v26;
  void *v27;
  uint64_t v28;
  char *v29;
  char *v30;
  id v31;
  id v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  char *v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char *v44;
  _QWORD *v45;
  uint64_t v46;
  char *v47;
  _QWORD *v48;
  uint64_t v49;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v11 = *a2;
    *(_QWORD *)a1 = *a2;
    a1 = &v11[(v5 + 16) & ~(unint64_t)v5];
    swift_retain();
  }
  else
  {
    v7 = type metadata accessor for WidgetEntryKey();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(unsigned int (**)(char **, uint64_t, uint64_t))(v8 + 48);
    if (v9(a2, 1, v7))
    {
      v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
      memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v10 - 8) + 64));
    }
    else
    {
      v12 = *a2;
      v13 = a2[1];
      *(_QWORD *)a1 = *a2;
      *((_QWORD *)a1 + 1) = v13;
      v14 = *(int *)(v7 + 24);
      v15 = &a1[v14];
      v16 = (char *)a2 + v14;
      v17 = v12;
      v18 = v13;
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v20 = *(_QWORD *)(v19 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v16, 1, v19))
      {
        v21 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v15, v16, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v15, v16, v19);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v20 + 56))(v15, 0, 1, v19);
      }
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    v22 = a3[5];
    v23 = (void **)&a1[v22];
    v24 = (void **)((char *)a2 + v22);
    if (v9((char **)((char *)a2 + v22), 1, v7))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
      memcpy(v23, v24, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      v26 = *v24;
      v27 = v24[1];
      *v23 = *v24;
      v23[1] = v27;
      v28 = *(int *)(v7 + 24);
      v29 = (char *)v23 + v28;
      v30 = (char *)v24 + v28;
      v31 = v26;
      v32 = v27;
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v34 = *(_QWORD *)(v33 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v34 + 48))(v30, 1, v33))
      {
        v35 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
        memcpy(v29, v30, *(_QWORD *)(*(_QWORD *)(v35 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v29, v30, v33);
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v34 + 56))(v29, 0, 1, v33);
      }
      (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v8 + 56))(v23, 0, 1, v7);
    }
    v36 = a3[6];
    v37 = &a1[v36];
    v38 = (char *)a2 + v36;
    v39 = sub_1D26CB9DC();
    v40 = *(_QWORD *)(v39 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v40 + 48))(v38, 1, v39))
    {
      v41 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
      memcpy(v37, v38, *(_QWORD *)(*(_QWORD *)(v41 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v40 + 16))(v37, v38, v39);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v40 + 56))(v37, 0, 1, v39);
    }
    v42 = a3[7];
    v43 = a3[8];
    v44 = &a1[v42];
    v45 = (char **)((char *)a2 + v42);
    v46 = v45[1];
    *(_QWORD *)v44 = *v45;
    *((_QWORD *)v44 + 1) = v46;
    v47 = &a1[v43];
    v48 = (char **)((char *)a2 + v43);
    v49 = v48[1];
    *(_QWORD *)v47 = *v48;
    *((_QWORD *)v47 + 1) = v49;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1D2610F04(id *a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int (*v5)(id *, uint64_t, uint64_t);
  char *v6;
  uint64_t v7;
  uint64_t v8;
  id *v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;

  v4 = type metadata accessor for WidgetEntryKey();
  v5 = *(unsigned int (**)(id *, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48);
  if (!v5(a1, 1, v4))
  {

    v6 = (char *)a1 + *(int *)(v4 + 24);
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v8 = *(_QWORD *)(v7 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
      (*(void (**)(char *, uint64_t))(v8 + 8))(v6, v7);
  }
  v9 = (id *)((char *)a1 + *(int *)(a2 + 20));
  if (!v5(v9, 1, v4))
  {

    v10 = (char *)v9 + *(int *)(v4 + 24);
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v12 = *(_QWORD *)(v11 - 8);
    if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11))
      (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  }
  v13 = (char *)a1 + *(int *)(a2 + 24);
  v14 = sub_1D26CB9DC();
  v15 = *(_QWORD *)(v14 - 8);
  if (!(*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
    (*(void (**)(char *, uint64_t))(v15 + 8))(v13, v14);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void **sub_1D2611084(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(void **, uint64_t, uint64_t);
  uint64_t v9;
  void *v10;
  void *v11;
  uint64_t v12;
  char *v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  void **v21;
  void **v22;
  uint64_t v23;
  void *v24;
  void *v25;
  uint64_t v26;
  char *v27;
  char *v28;
  id v29;
  id v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  _QWORD *v43;
  uint64_t v44;
  _QWORD *v45;
  _QWORD *v46;
  uint64_t v47;

  v6 = type metadata accessor for WidgetEntryKey();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(void **, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    v10 = *a2;
    v11 = a2[1];
    *a1 = *a2;
    a1[1] = v11;
    v12 = *(int *)(v6 + 24);
    v13 = (char *)a1 + v12;
    v14 = (char *)a2 + v12;
    v15 = v10;
    v16 = v11;
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v18 = *(_QWORD *)(v17 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v14, 1, v17))
    {
      v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v13, v14, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v18 + 16))(v13, v14, v17);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v18 + 56))(v13, 0, 1, v17);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v20 = a3[5];
  v21 = (void **)((char *)a1 + v20);
  v22 = (void **)((char *)a2 + v20);
  if (v8((void **)((char *)a2 + v20), 1, v6))
  {
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
    memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v23 - 8) + 64));
  }
  else
  {
    v24 = *v22;
    v25 = v22[1];
    *v21 = *v22;
    v21[1] = v25;
    v26 = *(int *)(v6 + 24);
    v27 = (char *)v21 + v26;
    v28 = (char *)v22 + v26;
    v29 = v24;
    v30 = v25;
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v32 = *(_QWORD *)(v31 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v28, 1, v31))
    {
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v33 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v32 + 16))(v27, v28, v31);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v32 + 56))(v27, 0, 1, v31);
    }
    (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(v21, 0, 1, v6);
  }
  v34 = a3[6];
  v35 = (char *)a1 + v34;
  v36 = (char *)a2 + v34;
  v37 = sub_1D26CB9DC();
  v38 = *(_QWORD *)(v37 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v38 + 48))(v36, 1, v37))
  {
    v39 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v35, v36, *(_QWORD *)(*(_QWORD *)(v39 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v38 + 16))(v35, v36, v37);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v38 + 56))(v35, 0, 1, v37);
  }
  v40 = a3[7];
  v41 = a3[8];
  v42 = (void **)((char *)a1 + v40);
  v43 = (void **)((char *)a2 + v40);
  v44 = v43[1];
  *v42 = *v43;
  v42[1] = v44;
  v45 = (void **)((char *)a1 + v41);
  v46 = (void **)((char *)a2 + v41);
  v47 = v46[1];
  *v45 = *v46;
  v45[1] = v47;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void **sub_1D2611370(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  void *v11;
  void *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  id v16;
  id v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  size_t v21;
  void **v22;
  void **v23;
  void *v24;
  void *v25;
  id v26;
  void *v27;
  void *v28;
  id v29;
  uint64_t v30;
  void **v31;
  void **v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t (*v35)(void **, uint64_t, uint64_t);
  int v36;
  uint64_t v37;
  void **v38;
  void **v39;
  int v40;
  int v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  id v47;
  id v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  size_t v52;
  void **v53;
  void **v54;
  void *v55;
  void *v56;
  id v57;
  void *v58;
  void *v59;
  id v60;
  uint64_t v61;
  char *v62;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t (*v66)(char *, uint64_t, uint64_t);
  int v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t (*v73)(char *, uint64_t, uint64_t);
  int v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  _QWORD *v79;
  uint64_t v80;
  _QWORD *v81;
  _QWORD *v82;
  void **v84;
  void **v85;
  uint64_t v86;

  v6 = type metadata accessor for WidgetEntryKey();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v86 = v7;
      v24 = *a2;
      v25 = *a1;
      *a1 = *a2;
      v26 = v24;

      v27 = a2[1];
      v28 = a1[1];
      a1[1] = v27;
      v29 = v27;

      v30 = *(int *)(v6 + 24);
      v31 = (void **)((char *)a1 + v30);
      v32 = (void **)((char *)a2 + v30);
      v33 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v34 = *(_QWORD *)(v33 - 8);
      v35 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v34 + 48);
      v85 = v31;
      LODWORD(v31) = v35(v31, 1, v33);
      v84 = v32;
      v36 = v35(v32, 1, v33);
      if ((_DWORD)v31)
      {
        v7 = v86;
        if (!v36)
        {
          (*(void (**)(void **, void **, uint64_t))(v34 + 16))(v85, v84, v33);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v34 + 56))(v85, 0, 1, v33);
          goto LABEL_14;
        }
        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58) - 8) + 64);
        v23 = v84;
        v22 = v85;
      }
      else
      {
        v7 = v86;
        if (!v36)
        {
          (*(void (**)(void **, void **, uint64_t))(v34 + 24))(v85, v84, v33);
          goto LABEL_14;
        }
        (*(void (**)(void **, uint64_t))(v34 + 8))(v85, v33);
        v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58) - 8) + 64);
        v22 = v85;
        v23 = v84;
      }
LABEL_8:
      memcpy(v22, v23, v21);
      goto LABEL_14;
    }
    sub_1D25A1D94((uint64_t)a1);
LABEL_7:
    v21 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98) - 8) + 64);
    v22 = a1;
    v23 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  v11 = *a2;
  *a1 = *a2;
  v12 = a2[1];
  a1[1] = v12;
  v13 = *(int *)(v6 + 24);
  v14 = (char *)a1 + v13;
  v15 = (char *)a2 + v13;
  v16 = v11;
  v17 = v12;
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v19 = *(_QWORD *)(v18 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(v15, 1, v18))
  {
    v20 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v14, v15, v18);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v19 + 56))(v14, 0, 1, v18);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v37 = a3[5];
  v38 = (void **)((char *)a1 + v37);
  v39 = (void **)((char *)a2 + v37);
  v40 = v8((void **)((char *)a1 + v37), 1, v6);
  v41 = v8(v39, 1, v6);
  if (!v40)
  {
    if (!v41)
    {
      v55 = *v39;
      v56 = *v38;
      *v38 = *v39;
      v57 = v55;

      v58 = v39[1];
      v59 = v38[1];
      v38[1] = v58;
      v60 = v58;

      v61 = *(int *)(v6 + 24);
      v62 = (char *)v38 + v61;
      v63 = (char *)v39 + v61;
      v64 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v65 = *(_QWORD *)(v64 - 8);
      v66 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v65 + 48);
      LODWORD(v59) = v66(v62, 1, v64);
      v67 = v66(v63, 1, v64);
      if ((_DWORD)v59)
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v62, v63, v64);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v65 + 56))(v62, 0, 1, v64);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v67)
        {
          (*(void (**)(char *, char *, uint64_t))(v65 + 24))(v62, v63, v64);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v65 + 8))(v62, v64);
      }
      v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58) - 8) + 64);
      v53 = (void **)v62;
      v54 = (void **)v63;
LABEL_21:
      memcpy(v53, v54, v52);
      goto LABEL_27;
    }
    sub_1D25A1D94((uint64_t)v38);
LABEL_20:
    v52 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98) - 8) + 64);
    v53 = v38;
    v54 = v39;
    goto LABEL_21;
  }
  if (v41)
    goto LABEL_20;
  v42 = *v39;
  *v38 = *v39;
  v43 = v39[1];
  v38[1] = v43;
  v44 = *(int *)(v6 + 24);
  v45 = (char *)v38 + v44;
  v46 = (char *)v39 + v44;
  v47 = v42;
  v48 = v43;
  v49 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v50 = *(_QWORD *)(v49 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v50 + 48))(v46, 1, v49))
  {
    v51 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v45, v46, *(_QWORD *)(*(_QWORD *)(v51 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v45, v46, v49);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v50 + 56))(v45, 0, 1, v49);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(v38, 0, 1, v6);
LABEL_27:
  v68 = a3[6];
  v69 = (char *)a1 + v68;
  v70 = (char *)a2 + v68;
  v71 = sub_1D26CB9DC();
  v72 = *(_QWORD *)(v71 - 8);
  v73 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v72 + 48);
  v74 = v73(v69, 1, v71);
  v75 = v73(v70, 1, v71);
  if (!v74)
  {
    if (!v75)
    {
      (*(void (**)(char *, char *, uint64_t))(v72 + 24))(v69, v70, v71);
      goto LABEL_33;
    }
    (*(void (**)(char *, uint64_t))(v72 + 8))(v69, v71);
    goto LABEL_32;
  }
  if (v75)
  {
LABEL_32:
    v76 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v69, v70, *(_QWORD *)(*(_QWORD *)(v76 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 16))(v69, v70, v71);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v72 + 56))(v69, 0, 1, v71);
LABEL_33:
  v77 = a3[7];
  v78 = (void **)((char *)a1 + v77);
  v79 = (void **)((char *)a2 + v77);
  *v78 = *v79;
  v78[1] = v79[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = a3[8];
  v81 = (void **)((char *)a1 + v80);
  v82 = (void **)((char *)a2 + v80);
  *v81 = *v82;
  v81[1] = v82[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *sub_1D2611938(_OWORD *a1, _OWORD *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  unsigned int (*v8)(_OWORD *, uint64_t, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _OWORD *v17;
  _OWORD *v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  char *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  char *v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;

  v6 = type metadata accessor for WidgetEntryKey();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(unsigned int (**)(_OWORD *, uint64_t, uint64_t))(v7 + 48);
  if (v8(a2, 1, v6))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    *a1 = *a2;
    v10 = *(int *)(v6 + 24);
    v11 = (char *)a1 + v10;
    v12 = (char *)a2 + v10;
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v14 = *(_QWORD *)(v13 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13))
    {
      v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v11, v12, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v14 + 32))(v11, v12, v13);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v14 + 56))(v11, 0, 1, v13);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  v16 = a3[5];
  v17 = (_OWORD *)((char *)a1 + v16);
  v18 = (_OWORD *)((char *)a2 + v16);
  if (v8((_OWORD *)((char *)a2 + v16), 1, v6))
  {
    v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v19 - 8) + 64));
  }
  else
  {
    *v17 = *v18;
    v20 = *(int *)(v6 + 24);
    v21 = (char *)v17 + v20;
    v22 = (char *)v18 + v20;
    v23 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v24 = *(_QWORD *)(v23 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v24 + 48))(v22, 1, v23))
    {
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v21, v22, *(_QWORD *)(*(_QWORD *)(v25 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v24 + 32))(v21, v22, v23);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v24 + 56))(v21, 0, 1, v23);
    }
    (*(void (**)(_OWORD *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
  }
  v26 = a3[6];
  v27 = (char *)a1 + v26;
  v28 = (char *)a2 + v26;
  v29 = sub_1D26CB9DC();
  v30 = *(_QWORD *)(v29 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v30 + 48))(v28, 1, v29))
  {
    v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v27, v28, *(_QWORD *)(*(_QWORD *)(v31 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v30 + 32))(v27, v28, v29);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v30 + 56))(v27, 0, 1, v29);
  }
  v32 = a3[8];
  *(_OWORD *)((char *)a1 + a3[7]) = *(_OWORD *)((char *)a2 + a3[7]);
  *(_OWORD *)((char *)a1 + v32) = *(_OWORD *)((char *)a2 + v32);
  return a1;
}

void **sub_1D2611BF8(void **a1, void **a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void **, uint64_t, uint64_t);
  int v9;
  int v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  size_t v17;
  void **v18;
  const void *v19;
  void *v20;
  void *v21;
  uint64_t v22;
  void **v23;
  char *v24;
  uint64_t v25;
  uint64_t (*v26)(void **, uint64_t, uint64_t);
  int v27;
  uint64_t v28;
  void **v29;
  void **v30;
  int v31;
  int v32;
  uint64_t v33;
  char *v34;
  char *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  size_t v39;
  void **v40;
  const void *v41;
  void *v42;
  void *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t (*v49)(char *, uint64_t, uint64_t);
  int v50;
  int v51;
  uint64_t v52;
  char *v53;
  char *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t (*v57)(char *, uint64_t, uint64_t);
  int v58;
  int v59;
  uint64_t v60;
  uint64_t v61;
  _QWORD *v62;
  uint64_t *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  _QWORD *v67;
  uint64_t *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v72;
  void **v73;

  v6 = type metadata accessor for WidgetEntryKey();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      v20 = *a1;
      *a1 = *a2;

      v21 = a1[1];
      a1[1] = a2[1];

      v22 = *(int *)(v6 + 24);
      v23 = (void **)((char *)a1 + v22);
      v24 = (char *)a2 + v22;
      v25 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v72 = *(_QWORD *)(v25 - 8);
      v26 = *(uint64_t (**)(void **, uint64_t, uint64_t))(v72 + 48);
      v73 = v23;
      LODWORD(v23) = v26(v23, 1, v25);
      v27 = v26((void **)v24, 1, v25);
      if ((_DWORD)v23)
      {
        if (!v27)
        {
          (*(void (**)(void **, char *, uint64_t))(v72 + 32))(v73, v24, v25);
          (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v72 + 56))(v73, 0, 1, v25);
          goto LABEL_14;
        }
        v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58) - 8) + 64);
        v19 = v24;
        v18 = v73;
      }
      else
      {
        if (!v27)
        {
          (*(void (**)(void **, char *, uint64_t))(v72 + 40))(v73, v24, v25);
          goto LABEL_14;
        }
        (*(void (**)(void **, uint64_t))(v72 + 8))(v73, v25);
        v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58) - 8) + 64);
        v18 = v73;
        v19 = v24;
      }
LABEL_8:
      memcpy(v18, v19, v17);
      goto LABEL_14;
    }
    sub_1D25A1D94((uint64_t)a1);
LABEL_7:
    v17 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98) - 8) + 64);
    v18 = a1;
    v19 = a2;
    goto LABEL_8;
  }
  if (v10)
    goto LABEL_7;
  *(_OWORD *)a1 = *(_OWORD *)a2;
  v11 = *(int *)(v6 + 24);
  v12 = (char *)a1 + v11;
  v13 = (char *)a2 + v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v15 = *(_QWORD *)(v14 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14))
  {
    v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v12, v13, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v12, v13, v14);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v15 + 56))(v12, 0, 1, v14);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_14:
  v28 = a3[5];
  v29 = (void **)((char *)a1 + v28);
  v30 = (void **)((char *)a2 + v28);
  v31 = v8((void **)((char *)a1 + v28), 1, v6);
  v32 = v8(v30, 1, v6);
  if (!v31)
  {
    if (!v32)
    {
      v42 = *v29;
      *v29 = *v30;

      v43 = v29[1];
      v29[1] = v30[1];

      v44 = *(int *)(v6 + 24);
      v45 = (char *)v29 + v44;
      v46 = (char *)v30 + v44;
      v47 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
      v48 = *(_QWORD *)(v47 - 8);
      v49 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v48 + 48);
      v50 = v49(v45, 1, v47);
      v51 = v49(v46, 1, v47);
      if (v50)
      {
        if (!v51)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v45, v46, v47);
          (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v48 + 56))(v45, 0, 1, v47);
          goto LABEL_27;
        }
      }
      else
      {
        if (!v51)
        {
          (*(void (**)(char *, char *, uint64_t))(v48 + 40))(v45, v46, v47);
          goto LABEL_27;
        }
        (*(void (**)(char *, uint64_t))(v48 + 8))(v45, v47);
      }
      v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58) - 8) + 64);
      v40 = (void **)v45;
      v41 = v46;
LABEL_21:
      memcpy(v40, v41, v39);
      goto LABEL_27;
    }
    sub_1D25A1D94((uint64_t)v29);
LABEL_20:
    v39 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98) - 8) + 64);
    v40 = v29;
    v41 = v30;
    goto LABEL_21;
  }
  if (v32)
    goto LABEL_20;
  *(_OWORD *)v29 = *(_OWORD *)v30;
  v33 = *(int *)(v6 + 24);
  v34 = (char *)v29 + v33;
  v35 = (char *)v30 + v33;
  v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v37 = *(_QWORD *)(v36 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v37 + 48))(v35, 1, v36))
  {
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v37 + 32))(v34, v35, v36);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  }
  (*(void (**)(void **, _QWORD, uint64_t, uint64_t))(v7 + 56))(v29, 0, 1, v6);
LABEL_27:
  v52 = a3[6];
  v53 = (char *)a1 + v52;
  v54 = (char *)a2 + v52;
  v55 = sub_1D26CB9DC();
  v56 = *(_QWORD *)(v55 - 8);
  v57 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v56 + 48);
  v58 = v57(v53, 1, v55);
  v59 = v57(v54, 1, v55);
  if (!v58)
  {
    if (!v59)
    {
      (*(void (**)(char *, char *, uint64_t))(v56 + 40))(v53, v54, v55);
      goto LABEL_33;
    }
    (*(void (**)(char *, uint64_t))(v56 + 8))(v53, v55);
    goto LABEL_32;
  }
  if (v59)
  {
LABEL_32:
    v60 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v53, v54, *(_QWORD *)(*(_QWORD *)(v60 - 8) + 64));
    goto LABEL_33;
  }
  (*(void (**)(char *, char *, uint64_t))(v56 + 32))(v53, v54, v55);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v56 + 56))(v53, 0, 1, v55);
LABEL_33:
  v61 = a3[7];
  v62 = (void **)((char *)a1 + v61);
  v63 = (uint64_t *)((char *)a2 + v61);
  v65 = *v63;
  v64 = v63[1];
  *v62 = v65;
  v62[1] = v64;
  swift_bridgeObjectRelease();
  v66 = a3[8];
  v67 = (void **)((char *)a1 + v66);
  v68 = (uint64_t *)((char *)a2 + v66);
  v70 = *v68;
  v69 = v68[1];
  *v67 = v70;
  v67[1] = v69;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D2612174()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2612180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v14;
  int v15;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v12 = *(_QWORD *)(v11 - 8);
  if (*(_DWORD *)(v12 + 84) == (_DWORD)a2)
  {
    v8 = v11;
    v10 = a1 + *(int *)(a3 + 24);
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v12 + 48);
    return v9(v10, a2, v8);
  }
  v14 = *(_QWORD *)(a1 + *(int *)(a3 + 28) + 8);
  if (v14 >= 0xFFFFFFFF)
    LODWORD(v14) = -1;
  v15 = v14 - 1;
  if (v15 < 0)
    v15 = -1;
  return (v15 + 1);
}

uint64_t sub_1D2612240()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D261224C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t result;
  uint64_t v14;

  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
  v9 = *(_QWORD *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = v8;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
    return v11(v12, a2, a2, v10);
  }
  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v14 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v14 + 84) == a3)
  {
    v10 = result;
    v12 = a1 + *(int *)(a4 + 24);
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
    return v11(v12, a2, a2, v10);
  }
  *(_QWORD *)(a1 + *(int *)(a4 + 28) + 8) = a2;
  return result;
}

uint64_t type metadata accessor for DebugInfo()
{
  uint64_t result;

  result = qword_1ED962F88;
  if (!qword_1ED962F88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D2612338()
{
  unint64_t v0;
  unint64_t v1;

  sub_1D2568174(319, &qword_1ED962EF0, (void (*)(uint64_t))type metadata accessor for WidgetEntryKey);
  if (v0 <= 0x3F)
  {
    sub_1D2568174(319, (unint64_t *)&qword_1ED96F0B0, (void (*)(uint64_t))MEMORY[0x1E0CB0870]);
    if (v1 <= 0x3F)
      swift_initStructMetadata();
  }
}

__n128 sub_1D26123E8@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char v16;
  char v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  uint64_t v21;
  uint64_t KeyPath;
  char v23;
  __n128 result;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;

  v4 = sub_1D26CCBC4();
  v31 = *(_QWORD *)(v4 - 8);
  v32 = v4;
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC804();
  MEMORY[0x1E0C80A78](v7);
  sub_1D26CC7F8();
  sub_1D26CC7EC();
  v33 = a1 % 1000;
  sub_1D26CC7D4();
  sub_1D26CC7EC();
  sub_1D26CC81C();
  v8 = sub_1D26CCD08();
  v10 = v9;
  v12 = v11 & 1;
  v33 = sub_1D26CCEB8();
  v13 = sub_1D26CCC90();
  v15 = v14;
  v17 = v16;
  v30 = v18;
  sub_1D25725E0(v8, v10, v12);
  swift_release();
  swift_bridgeObjectRelease();
  v19 = sub_1D26CCE7C();
  v20 = sub_1D26CCB7C();
  sub_1D26CCC48();
  sub_1D26CCBB8();
  v21 = sub_1D26CCBD0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v31 + 8))(v6, v32);
  KeyPath = swift_getKeyPath();
  v23 = sub_1D26CCB7C();
  *(_QWORD *)a2 = v13;
  *(_QWORD *)(a2 + 8) = v15;
  *(_BYTE *)(a2 + 16) = v17 & 1;
  *(_QWORD *)(a2 + 24) = v30;
  *(_QWORD *)(a2 + 32) = v19;
  *(_BYTE *)(a2 + 40) = v20;
  *(_QWORD *)(a2 + 48) = KeyPath;
  *(_QWORD *)(a2 + 56) = v21;
  *(_BYTE *)(a2 + 64) = v23;
  __asm { FMOV            V0.2D, #2.0 }
  *(__n128 *)(a2 + 72) = result;
  *(__n128 *)(a2 + 88) = result;
  *(_BYTE *)(a2 + 104) = 0;
  return result;
}

uint64_t sub_1D2612644@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t (*v21)(char *, uint64_t, uint64_t);
  int v22;
  uint64_t v23;
  int v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  char v33;
  uint64_t v34;
  uint64_t v35;
  int *v36;
  uint64_t v37;
  uint64_t v38;
  int v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  char v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  char v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  char *v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  int v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  char v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unsigned __int8 v97;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v4);
  v84 = (uint64_t)&v74 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1D26CB9DC();
  v85 = *(_QWORD *)(v83 - 8);
  MEMORY[0x1E0C80A78](v83);
  v77 = (char *)&v74 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CC804();
  MEMORY[0x1E0C80A78](v7);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CE98);
  v9 = MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v74 - v12;
  v14 = type metadata accessor for WidgetEntryKey();
  v15 = *(_QWORD *)(v14 - 8);
  v16 = MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v74 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v74 - v19;
  sub_1D2537078(a1, (uint64_t)v13, &qword_1ED96CE98);
  v21 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v15 + 48);
  v22 = v21(v13, 1, v14);
  v80 = a1;
  if (v22 == 1)
  {
    sub_1D253703C((uint64_t)v13, &qword_1ED96CE98);
    v23 = type metadata accessor for DebugInfo();
    sub_1D2537078(a1 + *(int *)(v23 + 20), (uint64_t)v11, &qword_1ED96CE98);
    v24 = v21(v11, 1, v14);
    v25 = v83;
    if (v24 == 1)
    {
      sub_1D253703C((uint64_t)v11, &qword_1ED96CE98);
      v26 = 0;
      v27 = 0;
      v28 = 0;
      v87 = 0;
      v86 = 255;
    }
    else
    {
      sub_1D2612F70((uint64_t)v11, (uint64_t)v18);
      sub_1D26CC7F8();
      sub_1D26CC7EC();
      WidgetEntryKey.description.getter();
      sub_1D26CC7E0();
      swift_bridgeObjectRelease();
      sub_1D26CC7EC();
      sub_1D26CC81C();
      v88 = sub_1D26CCD08();
      v89 = v32;
      v90 = v33 & 1;
      v91 = v34;
      v92 = 1;
      sub_1D26CC90C();
      v26 = v93;
      v27 = v94;
      v28 = v95;
      v87 = v96;
      v86 = v97;
      sub_1D25A1D94((uint64_t)v18);
    }
  }
  else
  {
    sub_1D2612F70((uint64_t)v13, (uint64_t)v20);
    sub_1D26CC7F8();
    sub_1D26CC7EC();
    WidgetEntryKey.description.getter();
    sub_1D26CC7E0();
    swift_bridgeObjectRelease();
    sub_1D26CC7EC();
    sub_1D26CC81C();
    v88 = sub_1D26CCD08();
    v89 = v29;
    v90 = v30 & 1;
    v91 = v31;
    v92 = 0;
    sub_1D26CC90C();
    v26 = v93;
    v27 = v94;
    v28 = v95;
    v87 = v96;
    v86 = v97;
    sub_1D25A1D94((uint64_t)v20);
    v25 = v83;
  }
  v35 = v85;
  v36 = (int *)type metadata accessor for DebugInfo();
  v37 = v80;
  v38 = v84;
  sub_1D2537078(v80 + v36[6], v84, &qword_1ED96B1E0);
  v39 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v35 + 48))(v38, 1, v25);
  v83 = v28;
  if (v39 == 1)
  {
    sub_1D253703C(v38, &qword_1ED96B1E0);
    v84 = 0;
    v85 = 0;
    v81 = 0;
    v82 = 0;
  }
  else
  {
    v40 = v38;
    v41 = v77;
    (*(void (**)(char *, uint64_t, uint64_t))(v35 + 32))(v77, v40, v25);
    sub_1D26CC7F8();
    sub_1D26CC7EC();
    sub_1D2612F28();
    sub_1D26CC7C8();
    sub_1D26CC7EC();
    sub_1D26CC81C();
    v42 = sub_1D26CCD08();
    v84 = v43;
    v85 = v42;
    v81 = v44 & 1;
    v82 = v45;
    (*(void (**)(char *, uint64_t))(v35 + 8))(v41, v25);
  }
  if (*(_QWORD *)(v37 + v36[7] + 8))
  {
    sub_1D26CC7F8();
    sub_1D26CC7EC();
    sub_1D26CC7E0();
    sub_1D26CC7EC();
    sub_1D26CC81C();
    v77 = (char *)sub_1D26CCD08();
    v76 = v46;
    v75 = v47;
    v49 = v48 & 1;
  }
  else
  {
    v77 = 0;
    v76 = 0;
    v49 = 0;
    v75 = 0;
  }
  v50 = *(_QWORD *)(v37 + v36[8] + 8);
  if (v50)
  {
    sub_1D26CC7F8();
    sub_1D26CC7EC();
    sub_1D26CC7E0();
    sub_1D26CC7EC();
    sub_1D26CC81C();
    v51 = sub_1D26CCD08();
    v50 = v52;
    v54 = v53;
    v56 = v55 & 1;
  }
  else
  {
    v51 = 0;
    v56 = 0;
    v54 = 0;
  }
  v57 = v26;
  *(_QWORD *)a2 = v26;
  *(_QWORD *)(a2 + 8) = v27;
  v78 = v27;
  v79 = v26;
  v58 = v27;
  v59 = v83;
  v60 = v84;
  *(_QWORD *)(a2 + 16) = v83;
  v61 = v59;
  v62 = v87;
  *(_QWORD *)(a2 + 24) = v87;
  v63 = v62;
  v87 = v62;
  LODWORD(v62) = v86;
  *(_BYTE *)(a2 + 32) = v86;
  v86 = v62;
  v64 = v85;
  *(_QWORD *)(a2 + 40) = v85;
  *(_QWORD *)(a2 + 48) = v60;
  v84 = v60;
  v85 = v64;
  v65 = v82;
  *(_QWORD *)(a2 + 56) = v81;
  *(_QWORD *)(a2 + 64) = v65;
  v66 = (uint64_t)v77;
  v67 = v76;
  *(_QWORD *)(a2 + 72) = v77;
  *(_QWORD *)(a2 + 80) = v67;
  v68 = v75;
  *(_QWORD *)(a2 + 88) = v49;
  *(_QWORD *)(a2 + 96) = v68;
  *(_QWORD *)(a2 + 104) = v51;
  *(_QWORD *)(a2 + 112) = v50;
  *(_QWORD *)(a2 + 120) = v56;
  *(_QWORD *)(a2 + 128) = v54;
  v69 = v54;
  sub_1D2612E48(v57, v58, v61, v63, v62);
  v70 = v64;
  v71 = v60;
  LOBYTE(v64) = v81;
  v72 = v82;
  sub_1D2612E88(v70, v71, v81, v82);
  sub_1D2612E88(v66, v67, v49, v68);
  sub_1D2612E88(v51, v50, v56, v69);
  sub_1D2612EB8(v51, v50, v56, v69);
  sub_1D2612EB8(v66, v67, v49, v68);
  sub_1D2612EB8(v85, v84, v64, v72);
  return sub_1D2612EE8(v79, v78, v83, v87, v86);
}

uint64_t sub_1D2612E48(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    return sub_1D2612E60(a1, a2, a3);
  return a1;
}

uint64_t sub_1D2612E60(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D25725F0(a1, a2, a3 & 1);
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D2612E88(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D25725F0(result, a2, a3 & 1);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D2612EB8(uint64_t result, uint64_t a2, char a3, uint64_t a4)
{
  if (a4)
  {
    sub_1D25725E0(result, a2, a3 & 1);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2612EE8(uint64_t a1, uint64_t a2, char a3, uint64_t a4, unsigned __int8 a5)
{
  if (a5 != 255)
    return sub_1D2612F00(a1, a2, a3);
  return a1;
}

uint64_t sub_1D2612F00(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D25725E0(a1, a2, a3 & 1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_1D2612F28()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96C8C8;
  if (!qword_1ED96C8C8)
  {
    v1 = sub_1D26CB9DC();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB0858], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96C8C8);
  }
  return result;
}

uint64_t sub_1D2612F70(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for WidgetEntryKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t InteractiveWidgetSetupViewModifier.init<A>(logger:viewModel:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v5 = a4;
  *(_QWORD *)a5 = (*(uint64_t (**)(uint64_t, uint64_t))(a4 + 8))(a3, a4);
  *(_QWORD *)(a5 + 8) = v10;
  LOBYTE(v5) = (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 16))(a3, v5);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 8))(a2, a3);
  *(_BYTE *)(a5 + 16) = v5 & 1;
  v11 = a5 + *(int *)(type metadata accessor for InteractiveWidgetSetupViewModifier() + 24);
  v12 = sub_1D26CC09C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v11, a1, v12);
}

uint64_t type metadata accessor for InteractiveWidgetSetupViewModifier()
{
  uint64_t result;

  result = qword_1ED96D458;
  if (!qword_1ED96D458)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t InteractiveWidgetSetupViewModifier.body(content:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v3 = v2;
  v21 = a1;
  v26 = a2;
  v4 = sub_1D26CC438();
  v25 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = type metadata accessor for InteractiveWidgetSetupViewModifier();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_QWORD *)(v8 + 64);
  MEMORY[0x1E0C80A78](v7);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CD10);
  v24 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v21 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED96C620);
  v22 = *(_QWORD *)(v13 - 8);
  v23 = v13;
  MEMORY[0x1E0C80A78](v13);
  v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2613550(v2, (uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  v16 = (*(unsigned __int8 *)(v8 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v17 = swift_allocObject();
  sub_1D2613628((uint64_t)&v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v17 + v16);
  v18 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96CC28);
  v19 = sub_1D2536488(&qword_1ED96CC20, &qword_1ED96CC28, MEMORY[0x1E0CDBF10]);
  sub_1D26CCDC8();
  swift_release();
  if (*(_BYTE *)(v3 + 16) == 1)
  {
    sub_1D26CC414();
  }
  else
  {
    v27 = MEMORY[0x1E0DEE9D8];
    sub_1D256283C();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C5E8);
    sub_1D2536488(&qword_1ED96C5F0, &qword_1ED96C5E8, MEMORY[0x1E0DEAF38]);
    sub_1D26CDFE0();
  }
  v27 = v18;
  v28 = v19;
  swift_getOpaqueTypeConformance2();
  sub_1D26CCE58();
  (*(void (**)(char *, uint64_t))(v25 + 8))(v6, v4);
  (*(void (**)(char *, uint64_t))(v24 + 8))(v12, v10);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v22 + 32))(v26, v15, v23);
}

uint64_t sub_1D261334C(uint64_t a1, char *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  char *v10;
  void (*v11)(uint64_t);
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  uint64_t v21;

  v4 = sub_1D26CC09C();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v10 = (char *)&v21 - v9;
  v11 = *(void (**)(uint64_t))a2;
  if (*(_QWORD *)a2)
  {
    v12 = type metadata accessor for InteractiveWidgetSetupViewModifier();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v8, &a2[*(int *)(v12 + 24)], v4);
    swift_retain();
    v13 = sub_1D26CC084();
    v14 = sub_1D26CDCE0();
    if (os_log_type_enabled(v13, v14))
    {
      v15 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v15 = 0;
      _os_log_impl(&dword_1D2531000, v13, v14, "Asking WidgetKit to execute an LNAction.", v15, 2u);
      MEMORY[0x1D823A5E0](v15, -1, -1);
    }

    (*(void (**)(char *, uint64_t))(v5 + 8))(v8, v4);
    v11(a1);
    return sub_1D25495F4((uint64_t)v11);
  }
  else
  {
    v17 = type metadata accessor for InteractiveWidgetSetupViewModifier();
    (*(void (**)(char *, char *, uint64_t))(v5 + 16))(v10, &a2[*(int *)(v17 + 24)], v4);
    v18 = sub_1D26CC084();
    v19 = sub_1D26CDCEC();
    if (os_log_type_enabled(v18, v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, v18, v19, "Missing interaction handler.", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
}

uint64_t sub_1D2613550(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractiveWidgetSetupViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2613594()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  _QWORD *v3;
  char *v4;
  uint64_t v5;

  v1 = type metadata accessor for InteractiveWidgetSetupViewModifier();
  v2 = *(unsigned __int8 *)(*(_QWORD *)(v1 - 8) + 80);
  v3 = (_QWORD *)(v0 + ((v2 + 16) & ~v2));
  if (*v3)
    swift_release();
  v4 = (char *)v3 + *(int *)(v1 + 24);
  v5 = sub_1D26CC09C();
  (*(void (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
  return swift_deallocObject();
}

uint64_t sub_1D2613628(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for InteractiveWidgetSetupViewModifier();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D261366C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = *(unsigned __int8 *)(*(_QWORD *)(type metadata accessor for InteractiveWidgetSetupViewModifier() - 8) + 80);
  return sub_1D261334C(a1, (char *)(v1 + ((v3 + 16) & ~v3)));
}

uint64_t sub_1D26136A8()
{
  return swift_getOpaqueTypeConformance2();
}

_OWORD *initializeBufferWithCopyOfBuffer for InteractiveWidgetSetupViewModifier(_OWORD *a1, uint64_t *a2, uint64_t a3)
{
  _OWORD *v4;
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;

  v4 = a1;
  v5 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v8 = *a2;
    *(_QWORD *)v4 = *a2;
    v4 = (_OWORD *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    if (*a2)
    {
      v7 = a2[1];
      *(_QWORD *)v4 = *a2;
      *((_QWORD *)v4 + 1) = v7;
      swift_retain();
    }
    else
    {
      *a1 = *(_OWORD *)a2;
    }
    *((_BYTE *)v4 + 16) = *((_BYTE *)a2 + 16);
    v9 = *(int *)(a3 + 24);
    v10 = (char *)v4 + v9;
    v11 = (uint64_t)a2 + v9;
    v12 = sub_1D26CC09C();
    (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 16))(v10, v11, v12);
  }
  return v4;
}

uint64_t destroy for InteractiveWidgetSetupViewModifier(_QWORD *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;

  if (*a1)
    swift_release();
  v4 = (char *)a1 + *(int *)(a2 + 24);
  v5 = sub_1D26CC09C();
  return (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(v5 - 8) + 8))(v4, v5);
}

uint64_t initializeWithCopy for InteractiveWidgetSetupViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;

  if (*(_QWORD *)a2)
  {
    v6 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v7 = *(int *)(a3 + 24);
  v8 = a1 + v7;
  v9 = a2 + v7;
  v10 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v10 - 8) + 16))(v8, v9, v10);
  return a1;
}

uint64_t assignWithCopy for InteractiveWidgetSetupViewModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v6)
    {
      v8 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v8;
      swift_retain();
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[1];
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_retain();
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t initializeWithTake for InteractiveWidgetSetupViewModifier(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  if (*(_QWORD *)a2)
  {
    v4 = *(_QWORD *)(a2 + 8);
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v4;
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  *(_BYTE *)(a1 + 16) = *(_BYTE *)(a2 + 16);
  v5 = *(int *)(a3 + 24);
  v6 = a1 + v5;
  v7 = a2 + v5;
  v8 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 32))(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for InteractiveWidgetSetupViewModifier(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v6 = *a2;
  if (!*(_QWORD *)a1)
  {
    if (v6)
    {
      v8 = a2[1];
      *(_QWORD *)a1 = v6;
      *(_QWORD *)(a1 + 8) = v8;
      goto LABEL_8;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (!v6)
  {
    swift_release();
    goto LABEL_7;
  }
  v7 = a2[1];
  *(_QWORD *)a1 = v6;
  *(_QWORD *)(a1 + 8) = v7;
  swift_release();
LABEL_8:
  *(_BYTE *)(a1 + 16) = *((_BYTE *)a2 + 16);
  v9 = *(int *)(a3 + 24);
  v10 = a1 + v9;
  v11 = (uint64_t)a2 + v9;
  v12 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t getEnumTagSinglePayload for InteractiveWidgetSetupViewModifier()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2613A20(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  int v5;
  uint64_t v9;

  if ((_DWORD)a2 == 2147483646)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    v5 = v4 - 1;
    if (v5 < 0)
      v5 = -1;
    return (v5 + 1);
  }
  else
  {
    v9 = sub_1D26CC09C();
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 48))(&a1[*(int *)(a3 + 24)], a2, v9);
  }
}

uint64_t storeEnumTagSinglePayload for InteractiveWidgetSetupViewModifier()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D2613AB4(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 2147483646)
  {
    *(_QWORD *)result = a2;
  }
  else
  {
    v7 = sub_1D26CC09C();
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 24)], a2, a2, v7);
  }
  return result;
}

uint64_t sub_1D2613B28()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC09C();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1D2613BA4()
{
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CD10);
  __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96CC28);
  sub_1D2536488(&qword_1ED96CC20, &qword_1ED96CC28, MEMORY[0x1E0CDBF10]);
  swift_getOpaqueTypeConformance2();
  return swift_getOpaqueTypeConformance2();
}

void StatefulStore.init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  sub_1D262A394(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1D2613C70(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

uint64_t sub_1D2613CB8()
{
  _QWORD *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v4;

  v1 = *(_QWORD *)((char *)v0 + qword_1ED961BF8);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1D2623394(v0, (uint64_t)&v4);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v4;
}

uint64_t sub_1D2613D24(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  uint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(char *, uint64_t);
  os_log_type_t v27;
  uint64_t v28;
  unint64_t v29;
  unint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  NSObject *v39;
  os_log_type_t v40;
  uint8_t *v41;
  _QWORD v42[2];
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46[3];

  v43 = a2;
  v4 = *v2;
  v5 = type metadata accessor for ReloadConfiguration(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v44 = (uint64_t)v42 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(_QWORD *)(v4 + 80);
  v9 = *(_QWORD *)(v8 - 8);
  v10 = MEMORY[0x1E0C80A78](v6);
  v12 = (char *)v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v42 - v13;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v2 + qword_1ED961BF8) + 16));
  v15 = (uint64_t *)((char *)v2 + qword_1ED961C08);
  swift_beginAccess();
  v16 = *v15;
  v17 = *(_QWORD *)(v4 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](v46, a1, v16, v8, &type metadata for ReloadState, v17);
  swift_bridgeObjectRelease();
  if (LOBYTE(v46[0]) != 5)
  {
    v18 = (uint64_t *)((char *)v2 + qword_1ED961C08);
    swift_beginAccess();
    v19 = *v18;
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](v46, a1, v19, v8, &type metadata for ReloadState, v17);
    swift_bridgeObjectRelease();
    if (LOBYTE(v46[0]) == 4)
    {
      v20 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
      v20(v14, a1, v8);
      v21 = v44;
      sub_1D2534120(v43, v44, type metadata accessor for ReloadConfiguration);
      v22 = sub_1D26CC084();
      v23 = sub_1D26CDD04();
      if (os_log_type_enabled(v22, v23))
      {
        v24 = swift_slowAlloc();
        v43 = swift_slowAlloc();
        v46[0] = v43;
        *(_DWORD *)v24 = 136446466;
        v42[1] = v24 + 4;
        v20(v12, (uint64_t)v14, v8);
        v25 = v21;
        v26 = *(void (**)(char *, uint64_t))(v9 + 8);
        v26(v14, v8);
        v27 = v23;
        v28 = sub_1D26CE370();
        v30 = v29;
        v26(v12, v8);
        v45 = sub_1D2537880(v28, v30, v46);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        *(_WORD *)(v24 + 12) = 2082;
        v31 = ReloadConfiguration.description.getter();
        v45 = sub_1D2537880(v31, v32, v46);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        sub_1D25340E4(v25, type metadata accessor for ReloadConfiguration);
        _os_log_impl(&dword_1D2531000, v22, v27, "%{public}s Skipping reload with configuration: %{public}s because entry is paused", (uint8_t *)v24, 0x16u);
        v33 = v43;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v33, -1, -1);
        MEMORY[0x1D823A5E0](v24, -1, -1);

      }
      else
      {
        (*(void (**)(char *, uint64_t))(v9 + 8))(v14, v8);

        sub_1D25340E4(v21, type metadata accessor for ReloadConfiguration);
      }
    }
    else
    {
      v34 = (uint64_t *)((char *)v2 + qword_1ED977D88);
      swift_beginAccess();
      v35 = *v34;
      v36 = sub_1D26CD89C();
      swift_bridgeObjectRetain();
      MEMORY[0x1D8239074](v46, a1, v35, v8, v36, v17);
      swift_bridgeObjectRelease();
      v37 = v46[0];
      swift_bridgeObjectRelease();
      if (v37)
      {
        swift_beginAccess();
        if ((v2[21] & 1) != 0)
          return 1;
        v39 = sub_1D26CC084();
        v40 = sub_1D26CDD04();
        if (os_log_type_enabled(v39, v40))
        {
          v41 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v41 = 0;
          _os_log_impl(&dword_1D2531000, v39, v40, "StatefulStore is disabled", v41, 2u);
          MEMORY[0x1D823A5E0](v41, -1, -1);
        }

      }
    }
  }
  return 0;
}

uint64_t StatefulStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(v0 + 128);
  v1 = v0 + qword_1ED977D38;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  v3 = v0 + qword_1ED961C00;
  v4 = sub_1D26CC09C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v3, v4);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + qword_1ED9634D0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1D261439C()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (v0[3])
  {
    v1 = v0[3];
  }
  else
  {
    v2 = v0;
    type metadata accessor for StatefulStoreReloadEvent(255, *(_QWORD *)(*v0 + 80), *(_QWORD *)(*v0 + 104), *(_QWORD *)(*v0 + 112));
    v3 = sub_1D26CC15C();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0C95F48], v3);
    v1 = sub_1D26CC204();
    v2[3] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1D2614458(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 24) = a1;
  return swift_release();
}

uint64_t sub_1D2614468()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD *v2;
  uint64_t v3;

  if (v0[5])
  {
    v1 = v0[5];
  }
  else
  {
    v2 = v0;
    type metadata accessor for StatefulStoreReloadEvent(255, *(_QWORD *)(*v0 + 88), *(_QWORD *)(*v0 + 120), *(_QWORD *)(*v0 + 128));
    v3 = sub_1D26CC15C();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0C95F48], v3);
    v1 = sub_1D26CC204();
    v2[5] = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1D2614524(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 40) = a1;
  return swift_release();
}

uint64_t sub_1D2614534()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 56))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    v2 = v0;
    v3 = sub_1D26CC15C();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0C95F48], v3);
    v1 = sub_1D26CC204();
    *(_QWORD *)(v2 + 56) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1D26145DC(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 56) = a1;
  return swift_release();
}

uint64_t sub_1D26145EC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 72))
  {
    v1 = *(_QWORD *)(v0 + 72);
  }
  else
  {
    v2 = v0;
    v3 = sub_1D26CC15C();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0C95F48], v3);
    v1 = sub_1D26CC204();
    *(_QWORD *)(v2 + 72) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1D2614694(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 72) = a1;
  return swift_release();
}

uint64_t sub_1D26146A4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  if (*(_QWORD *)(v0 + 88))
  {
    v1 = *(_QWORD *)(v0 + 88);
  }
  else
  {
    v2 = v0;
    v3 = sub_1D26CC15C();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0C95F48], v3);
    v1 = sub_1D26CC204();
    *(_QWORD *)(v2 + 88) = v1;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v1;
}

uint64_t sub_1D261474C(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 88) = a1;
  return swift_release();
}

uint64_t sub_1D261475C()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 104))
    type metadata accessor for VariantIdentifier();
  v1 = *(_QWORD *)(v0 + 104);
  swift_retain();
  return v1;
}

uint64_t sub_1D2614828(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 104) = a1;
  return swift_release();
}

uint64_t sub_1D2614838()
{
  uint64_t v0;
  uint64_t v1;

  if (!*(_QWORD *)(v0 + 120))
    type metadata accessor for VariantIdentifier();
  v1 = *(_QWORD *)(v0 + 120);
  swift_retain();
  return v1;
}

uint64_t sub_1D2614904(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 120) = a1;
  return swift_release();
}

uint64_t sub_1D2614914()
{
  uint64_t *v0;
  uint64_t v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;

  v1 = *v0;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v0 + qword_1ED961BF8) + 16));
  v2 = (uint64_t *)((char *)v0 + qword_1ED977D88);
  swift_beginAccess();
  v3 = *v2;
  v4 = *(_QWORD *)(v1 + 80);
  v5 = sub_1D26CD89C();
  CGSizeMake(v3, v4, v5, *(_QWORD *)(v1 + 112));
  v6 = sub_1D26CD83C();
  swift_bridgeObjectRetain();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DE9ED0], v6);
  return sub_1D26CDBB4();
}

uint64_t sub_1D26149F4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = type metadata accessor for UnfairLock();
  sub_1D26CDBA8();
  v2 = sub_1D26CD89C();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B050, v0, v1, v2, (uint64_t)&off_1E93D0D60);
  swift_release();
  return v4;
}

uint64_t sub_1D2614AAC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v3;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + qword_1ED961BF8) + 16));
  swift_beginAccess();
  sub_1D26CDBA8();
  swift_bridgeObjectRetain();
  sub_1D26CD7C4();
  sub_1D26CD89C();
  v1 = sub_1D26CD89C();
  sub_1D26CD89C();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0D0], v1);
  sub_1D26CDA94();
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_1D2614BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1D2538510(v1 + 128, a1);
}

uint64_t sub_1D2614C40(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 128;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(a1, v3);
  return swift_endAccess();
}

uint64_t sub_1D2614C98()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t ExtendedExistentialTypeMetadata;

  v1 = type metadata accessor for UnfairLock();
  swift_retain();
  ExtendedExistentialTypeMetadata = swift_getExtendedExistentialTypeMetadata();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B07C, v0, v1, ExtendedExistentialTypeMetadata, (uint64_t)&off_1E93D0D60);
  return swift_release();
}

uint64_t sub_1D2614D4C(uint64_t a1)
{
  sub_1D262B0D4(a1);
  return __swift_destroy_boxed_opaque_existential_1(a1);
}

void (*sub_1D2614D74(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;

  v3 = malloc(0x58uLL);
  *a1 = v3;
  v3[10] = v1;
  sub_1D2614C98();
  return sub_1D2614DC0;
}

void sub_1D2614DC0(uint64_t *a1, char a2)
{
  void *v2;

  v2 = (void *)*a1;
  if ((a2 & 1) != 0)
  {
    sub_1D2538510(*a1, (uint64_t)v2 + 40);
    sub_1D262B0D4((uint64_t)v2 + 40);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v2 + 40);
  }
  else
  {
    sub_1D262B0D4(*a1);
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  free(v2);
}

uint64_t sub_1D2614E28()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 168);
}

uint64_t sub_1D2614E58(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 168) = a1;
  return result;
}

uint64_t (*sub_1D2614E94())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D2614ED0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + qword_1ED977D38;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2614F34(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + qword_1ED977D38;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess();
  sub_1D26230BC();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t (*sub_1D2614FC8(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D2615010;
}

uint64_t sub_1D2615010(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
    return sub_1D26230BC();
  return result;
}

uint64_t sub_1D2615040()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + qword_1ED961BE0);
}

void sub_1D2615050(_BYTE *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_BYTE *)(v1 + qword_1ED9634D8);
}

_BYTE *sub_1D2615064(_BYTE *result)
{
  uint64_t v1;

  *(_BYTE *)(v1 + qword_1ED9634D8) = *result;
  return result;
}

uint64_t sub_1D2615078()
{
  sub_1D262AF38();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D261508C(uint64_t a1)
{
  return sub_1D26150FC(a1, &qword_1ED977D88);
}

uint64_t (*sub_1D2615098())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t sub_1D26150DC()
{
  sub_1D262B144();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D26150F0(uint64_t a1)
{
  return sub_1D26150FC(a1, &qword_1ED977F60);
}

uint64_t sub_1D26150FC(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D2615148())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D261518C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v1 = type metadata accessor for UnfairLock();
  sub_1D26CD89C();
  v2 = sub_1D26CD89C();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B188, v0, v1, v2, (uint64_t)&off_1E93D0D60);
  swift_release();
  return v4;
}

void sub_1D261524C()
{
  type metadata accessor for UnfairLock();
  swift_retain();
  type metadata accessor for ReloadTaskPair();
}

uint64_t sub_1D26152B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;

  v2 = sub_1D26CD89C();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B1A4, v0, v1, v2, (uint64_t)&off_1E93D0D60);
  swift_release();
  return v4;
}

uint64_t StatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  char *v20;
  void (*v21)(char *, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t (*v26)(char *, char *, _QWORD, char *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  _QWORD v36[5];

  v33 = a5;
  v32 = a6;
  v30 = a2;
  v9 = sub_1D26CC09C();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v13 = (char *)&v29 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = *(_QWORD *)(a4 - 8);
  v15 = MEMORY[0x1E0C80A78](v11);
  v17 = (char *)&v29 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  v18 = *(_QWORD *)(a3 - 8);
  MEMORY[0x1E0C80A78](v15);
  v20 = (char *)&v29 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v21 = *(void (**)(char *, uint64_t, uint64_t))(v18 + 16);
  v35 = a1;
  v22 = a1;
  v23 = v30;
  v21(v20, v22, a3);
  v31 = v14;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v17, v23, a4);
  if (qword_1ED96C188 != -1)
    swift_once();
  v24 = __swift_project_value_buffer(v9, (uint64_t)qword_1ED977F68);
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v13, v24, v9);
  if (qword_1ED963650 != -1)
    swift_once();
  v25 = qword_1ED963640;
  v36[3] = type metadata accessor for _SystemDataMigrator();
  v36[4] = &protocol witness table for _SystemDataMigrator;
  v36[0] = v25;
  v26 = *(uint64_t (**)(char *, char *, _QWORD, char *, _QWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(v34 + 1152);
  swift_retain();
  v27 = v26(v20, v17, MEMORY[0x1E0DEE9D8], v13, v36, 1, 1, a3, a4, v33, v32);
  (*(void (**)(uint64_t, uint64_t))(v31 + 8))(v23, a4);
  (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v35, a3);
  return v27;
}

void sub_1D2615544()
{
  type metadata accessor for UnfairLock();
  swift_retain();
  type metadata accessor for VariantReloadResult();
}

uint64_t sub_1D26155AC()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t result;
  uint64_t v5;

  v3 = sub_1D26CC0F0();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B21C, (uint64_t)&v5, v1, v3, (uint64_t)&off_1E93D0D60);
  result = swift_release();
  if (!v0)
    return *(_QWORD *)(v2 - 40);
  return result;
}

uint64_t sub_1D2615628(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _OWORD v9[2];
  uint64_t v10;
  uint64_t v11;
  __int128 v12;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *v3;
  v17 = *(uint64_t *)((char *)v3 + qword_1ED961BF8);
  v9[1] = *(_OWORD *)(v5 + 80);
  v10 = *(_QWORD *)(v5 + 96);
  v11 = a3;
  v6 = *(_OWORD *)(v5 + 120);
  v12 = *(_OWORD *)(v5 + 104);
  v13 = v6;
  v14 = *(_QWORD *)(v5 + 136);
  v15 = a1;
  v16 = a2;
  v7 = type metadata accessor for UnfairLock();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262C240, (uint64_t)v9, v7, a3, (uint64_t)&off_1E93D0D60);
  return swift_release();
}

uint64_t sub_1D26156E8(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(uint64_t *)((char *)v1 + qword_1ED961BF8);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2624AB4(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t sub_1D2615760(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v11;
  os_unfair_lock_s *v12;

  v11 = *(uint64_t *)((char *)v5 + qword_1ED961BF8);
  v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  sub_1D2624B54(v5, a1, a2, a3, a4, a5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  return swift_release();
}

uint64_t sub_1D26157F8(uint64_t a1)
{
  return sub_1D2618944(a1, (uint64_t)sub_1D262B234);
}

uint64_t sub_1D2615804(uint64_t a1, uint64_t a2)
{
  _QWORD v3[6];

  v3[3] = a1;
  v3[4] = a2;
  return sub_1D2615628((uint64_t)sub_1D262B24C, (uint64_t)v3, MEMORY[0x1E0DEE9C0] + 8);
}

uint64_t sub_1D261584C(uint64_t a1, uint64_t a2)
{
  _QWORD v3[6];

  v3[3] = a1;
  v3[4] = a2;
  return sub_1D2615628((uint64_t)sub_1D262B27C, (uint64_t)v3, MEMORY[0x1E0DEE9C0] + 8);
}

void sub_1D2615888(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD))
{
  char *v3;
  char *v4;
  _QWORD *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  NSObject *v36;
  NSObject *v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  Class v56;
  int v57;
  char *v58;
  uint64_t v59;
  void (*v60)(NSObject *, uint64_t);
  char *v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  void (*v65)(uint64_t, uint64_t);
  int v66;
  void (*v67)(char *, uint64_t, uint64_t);
  char *v68;
  uint64_t v69;
  uint64_t v70;
  char *v71;
  NSObject *v72;
  os_log_type_t v73;
  int v74;
  _BOOL4 v75;
  uint64_t v76;
  char *v77;
  char *v78;
  void (*v79)(char *, uint64_t);
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  char *v83;
  void (*v84)(char *, uint64_t, uint64_t);
  void (*v85)(char *, uint64_t);
  uint64_t v86;
  unint64_t v87;
  unint64_t v88;
  void (*v89)(_QWORD, _QWORD, _QWORD);
  uint64_t v90;
  unint64_t v91;
  os_log_t v92;
  char *v93;
  uint64_t v94;
  char *v95;
  void (*v96)(char *, uint64_t, uint64_t);
  uint64_t v97;
  uint64_t v98;
  NSObject *v99;
  os_log_type_t v100;
  char *v101;
  uint64_t v102;
  char *v103;
  char *v104;
  void (*v105)(char *, uint64_t);
  uint64_t v106;
  unint64_t v107;
  unint64_t v108;
  char *v109;
  char *v110;
  void (*v111)(char *, uint64_t);
  uint64_t v112;
  unint64_t v113;
  unint64_t v114;
  os_log_t v115;
  char *v116;
  char *v117;
  void (*v118)(char *, uint64_t, uint64_t);
  uint64_t v119;
  uint64_t v120;
  void (*v121)(char *, uint64_t, uint64_t);
  char *v122;
  NSObject *v123;
  os_log_type_t v124;
  int v125;
  char *v126;
  uint64_t v127;
  uint64_t v128;
  char *v129;
  void (*v130)(char *, uint64_t);
  uint64_t v131;
  unint64_t v132;
  unint64_t v133;
  char *v134;
  char *v135;
  void (*v136)(char *, uint64_t);
  uint64_t v137;
  unint64_t v138;
  unint64_t v139;
  void (*v140)(_QWORD, _QWORD, _QWORD);
  char *v141;
  os_log_t v142;
  char *v143;
  void (*v144)(char *, uint64_t, uint64_t);
  BOOL v145;
  char *v146;
  uint64_t v147;
  char *v148;
  char *v149;
  unint64_t v150;
  uint64_t v151;
  uint64_t v152;
  uint64_t v153;
  unint64_t v154;
  uint64_t v155;
  _QWORD *v156;
  uint64_t v157;
  uint64_t v158;
  void *v159;
  char *v160;
  char *v161;
  uint64_t v162;
  os_log_t v163;
  uint64_t v164;
  uint64_t v165;
  uint64_t v166;
  uint64_t v167;
  uint64_t v168;
  uint64_t v169;
  uint64_t v170;
  uint64_t v171;
  char *v172;
  uint64_t v173;
  uint64_t v174;
  char *v175;
  uint64_t v176;
  uint64_t v177;
  char *v178;
  uint64_t v179;
  void (*v180)(char *, uint64_t, uint64_t);
  uint64_t v181;
  char *v182;
  char *v183;
  char *v184;
  char *v185;
  _QWORD *v186;
  char *v187;
  uint64_t v188;
  Class isa;
  os_log_t v190;
  char *v191;
  void (*v192)(_QWORD, _QWORD, _QWORD);
  char *v193;
  char *v194;
  uint64_t v195;
  char *v196;
  uint64_t v197;
  uint64_t v198;
  uint64_t aBlock[6];
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;

  v4 = v3;
  v192 = a3;
  v7 = *(_QWORD **)v4;
  v177 = sub_1D26CD074();
  v176 = *(_QWORD *)(v177 - 8);
  MEMORY[0x1E0C80A78](v177);
  v175 = (char *)&v163 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v174 = sub_1D26CD0C8();
  v173 = *(_QWORD *)(v174 - 8);
  v9 = MEMORY[0x1E0C80A78](v174);
  v172 = (char *)&v163 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v198 = v7[11];
  v11 = *(_QWORD *)(v198 - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v196 = (char *)&v163 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v187 = (char *)&v163 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v185 = (char *)&v163 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v194 = (char *)&v163 - v19;
  v171 = v20;
  v21 = MEMORY[0x1E0C80A78](v18);
  v183 = (char *)&v163 - v22;
  v197 = v7[10];
  v23 = *(char **)(v197 - 8);
  v24 = MEMORY[0x1E0C80A78](v21);
  v26 = (char *)&v163 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v24);
  v191 = (char *)&v163 - v28;
  v29 = MEMORY[0x1E0C80A78](v27);
  v193 = (char *)&v163 - v30;
  v170 = v31;
  MEMORY[0x1E0C80A78](v29);
  v182 = (char *)&v163 - v32;
  v181 = sub_1D26CD488();
  v180 = *(void (**)(char *, uint64_t, uint64_t))(v181 - 8);
  v33 = MEMORY[0x1E0C80A78](v181);
  v179 = (uint64_t)&v163 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v33);
  v178 = (char *)&v163 - v35;
  v36 = v7[12];
  v37 = sub_1D26CDF38();
  isa = v37[-1].isa;
  v190 = v37;
  v38 = MEMORY[0x1E0C80A78](v37);
  v184 = (char *)&v163 - ((v39 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v38);
  v41 = (char *)&v163 - v40;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)&v4[qword_1ED961BF8] + 16));
  v42 = a1;
  if (((*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)v4 + 1472))(a1, a2) & 1) != 0)
  {
    v188 = a2;
    v195 = v11;
    v196 = v23;
    v43 = &v4[qword_1ED977D88];
    swift_beginAccess();
    v44 = *(_QWORD *)v43;
    v45 = v7[16];
    v46 = v198;
    v47 = sub_1D26CD89C();
    v186 = v7;
    v48 = v7[14];
    swift_bridgeObjectRetain();
    v169 = v42;
    v49 = v42;
    v50 = v197;
    v165 = v47;
    v168 = v48;
    MEMORY[0x1D8239074](&v201, v49, v44, v197, v47, v48);
    v51 = v45;
    swift_bridgeObjectRelease();
    v52 = v201;
    v53 = v46;
    v54 = v50;
    v166 = v201;
    if (!v201)
    {
      swift_getTupleTypeMetadata2();
      sub_1D26CDB3C();
      v52 = sub_1D26CD824();
      v201 = v52;
    }
    v55 = v188;
    v167 = v51;
    MEMORY[0x1D8239074](v188, v52, v46, v36, v51);
    v56 = v36[-1].isa;
    v57 = (*((uint64_t (**)(char *, uint64_t, NSObject *))v56 + 6))(v41, 1, v36);
    (*((void (**)(char *, os_log_t))isa + 1))(v41, v190);
    v58 = v191;
    if (v57 != 1)
    {
      v117 = v196;
      v118 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v196 + 2);
      v118(v191, v169, v54);
      v119 = v54;
      v120 = v195;
      v121 = *(void (**)(char *, uint64_t, uint64_t))(v195 + 16);
      v122 = v187;
      v121(v187, v55, v53);
      v123 = sub_1D26CC084();
      v124 = sub_1D26CDD04();
      v125 = v124;
      if (os_log_type_enabled(v123, v124))
      {
        v126 = v58;
        v127 = v53;
        v128 = swift_slowAlloc();
        v192 = (void (*)(_QWORD, _QWORD, _QWORD))swift_slowAlloc();
        aBlock[0] = (uint64_t)v192;
        *(_DWORD *)v128 = 136446466;
        isa = (Class)(v128 + 4);
        LODWORD(v190) = v125;
        v129 = v193;
        v118(v193, (uint64_t)v126, v119);
        v130 = (void (*)(char *, uint64_t))*((_QWORD *)v117 + 1);
        v130(v126, v119);
        v131 = sub_1D26CE370();
        v133 = v132;
        v130(v129, v119);
        v200 = sub_1D2537880(v131, v133, aBlock);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        *(_WORD *)(v128 + 12) = 2082;
        v134 = v194;
        v135 = v187;
        v121(v194, (uint64_t)v187, v127);
        v136 = *(void (**)(char *, uint64_t))(v195 + 8);
        v136(v135, v127);
        v137 = sub_1D26CE370();
        v139 = v138;
        v136(v134, v127);
        v200 = sub_1D2537880(v137, v139, aBlock);
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v123, (os_log_type_t)v190, "%{public}s:%{public}s Already exists in store.", (uint8_t *)v128, 0x16u);
        v140 = v192;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v140, -1, -1);
        MEMORY[0x1D823A5E0](v128, -1, -1);
      }
      else
      {
        (*(void (**)(char *, uint64_t))(v120 + 8))(v122, v53);
        (*((void (**)(char *, uint64_t))v117 + 1))(v58, v119);
      }

      goto LABEL_28;
    }
    v187 = (char *)v56;
    v59 = v186[17];
    v60 = *(void (**)(NSObject *, uint64_t))(v59 + 88);
    v61 = v178;
    v190 = v36;
    v60(v36, v59);
    v62 = v179;
    sub_1D2614ED0(v179);
    sub_1D25369B0(&qword_1ED96BF48, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0448]);
    v63 = v181;
    v64 = sub_1D26CD8F0();
    v65 = (void (*)(uint64_t, uint64_t))*((_QWORD *)v180 + 1);
    v65(v62, v63);
    v65((uint64_t)v61, v63);
    LODWORD(v179) = v64;
    if ((v64 & 1) != 0)
      v66 = 3;
    else
      v66 = 0;
    LODWORD(v181) = v66;
    v191 = v4;
    v67 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v196 + 2);
    v68 = v182;
    v69 = v169;
    v67(v182, v169, v54);
    v70 = v195;
    v71 = v183;
    isa = *(Class *)(v195 + 16);
    ((void (*)(char *, uint64_t, uint64_t))isa)(v183, v55, v53);
    v72 = sub_1D26CC084();
    v73 = sub_1D26CDD04();
    v74 = v73;
    v75 = os_log_type_enabled(v72, v73);
    v164 = v59;
    v180 = v67;
    if (v75)
    {
      v76 = swift_slowAlloc();
      v178 = (char *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v178;
      *(_DWORD *)v76 = 136446722;
      v163 = v72;
      v77 = v193;
      v67(v193, (uint64_t)v68, v54);
      v78 = v71;
      v79 = (void (*)(char *, uint64_t))*((_QWORD *)v196 + 1);
      v79(v68, v54);
      LODWORD(v182) = v74;
      v80 = sub_1D26CE370();
      v82 = v81;
      v79(v77, v197);
      v200 = sub_1D2537880(v80, v82, aBlock);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 12) = 2082;
      v83 = v194;
      v84 = (void (*)(char *, uint64_t, uint64_t))isa;
      ((void (*)(char *, char *, uint64_t))isa)(v194, v78, v198);
      v85 = *(void (**)(char *, uint64_t))(v195 + 8);
      v85(v78, v198);
      v86 = sub_1D26CE370();
      v88 = v87;
      v85(v83, v198);
      v89 = v192;
      v200 = sub_1D2537880(v86, v88, aBlock);
      sub_1D26CDF50();
      v69 = v169;
      swift_bridgeObjectRelease();
      *(_WORD *)(v76 + 22) = 2082;
      if ((v179 & 1) != 0)
        v90 = 0x64656B636F6C62;
      else
        v90 = 0x64616F6C6572;
      if ((v179 & 1) != 0)
        v91 = 0xE700000000000000;
      else
        v91 = 0xE600000000000000;
      v200 = sub_1D2537880(v90, v91, aBlock);
      v70 = v195;
      v54 = v197;
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v92 = v163;
      _os_log_impl(&dword_1D2531000, v163, (os_log_type_t)v182, "%{public}s:%{public}s Add to store.  Marked as state: %{public}s", (uint8_t *)v76, 0x20u);
      v93 = v178;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v93, -1, -1);
      v94 = v76;
      v53 = v198;
      MEMORY[0x1D823A5E0](v94, -1, -1);

      v95 = v184;
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v70 + 8))(v71, v53);
      (*((void (**)(char *, uint64_t))v196 + 1))(v68, v54);

      v95 = v184;
      v84 = (void (*)(char *, uint64_t, uint64_t))isa;
      v89 = v192;
    }
    LOBYTE(aBlock[0]) = v181;
    sub_1D261E0F4((uint64_t)aBlock, v69);
    v84(v185, v188, v53);
    v141 = v187;
    v142 = v190;
    (*((void (**)(char *, _QWORD, os_log_t))v187 + 2))(v95, v89, v190);
    (*((void (**)(char *, _QWORD, uint64_t, os_log_t))v141 + 7))(v95, 0, 1, v142);
    if (v201)
    {
      sub_1D26CD8C0();
      v143 = v193;
      v144 = v180;
      v180(v193, v69, v54);
      v200 = v201;
      swift_beginAccess();
      sub_1D26CD89C();
      swift_bridgeObjectRetain();
      sub_1D26CD8C0();
      swift_endAccess();
      if (qword_1ED9623D0 != -1)
        swift_once();
      v145 = v166 == 0;
      v197 = qword_1ED961BC8;
      v144(v143, v69, v54);
      v146 = v194;
      v147 = v198;
      ((void (*)(char *, uint64_t, uint64_t))isa)(v194, v188, v198);
      v148 = v196;
      v149 = v143;
      v150 = (v196[80] + 96) & ~(unint64_t)v196[80];
      v151 = *(unsigned __int8 *)(v70 + 80);
      v152 = v70;
      v153 = v54;
      v154 = (v170 + v151 + v150) & ~v151;
      v155 = swift_allocObject();
      *(_QWORD *)(v155 + 16) = v153;
      *(_QWORD *)(v155 + 24) = v147;
      *(_QWORD *)(v155 + 32) = v190;
      v156 = v186;
      v157 = v168;
      *(_QWORD *)(v155 + 40) = v186[13];
      *(_QWORD *)(v155 + 48) = v157;
      v158 = v167;
      *(_QWORD *)(v155 + 56) = v156[15];
      *(_QWORD *)(v155 + 64) = v158;
      *(_QWORD *)(v155 + 72) = v164;
      *(_BYTE *)(v155 + 80) = v145;
      *(_QWORD *)(v155 + 88) = v191;
      (*((void (**)(unint64_t, char *, uint64_t))v148 + 4))(v155 + v150, v149, v153);
      (*(void (**)(unint64_t, char *, uint64_t))(v152 + 32))(v155 + v154, v146, v147);
      aBlock[4] = (uint64_t)sub_1D262BF70;
      aBlock[5] = v155;
      aBlock[0] = MEMORY[0x1E0C809B0];
      aBlock[1] = 1107296256;
      aBlock[2] = (uint64_t)sub_1D25351AC;
      aBlock[3] = (uint64_t)&block_descriptor_87;
      v159 = _Block_copy(aBlock);
      swift_retain();
      v160 = v172;
      _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
      v200 = MEMORY[0x1E0DEE9D8];
      sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
      sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
      v161 = v175;
      v162 = v177;
      sub_1D26CDFE0();
      MEMORY[0x1D823956C](0, v160, v161, v159);
      _Block_release(v159);
      (*(void (**)(char *, uint64_t))(v176 + 8))(v161, v162);
      (*(void (**)(char *, uint64_t))(v173 + 8))(v160, v174);
      swift_release();
LABEL_28:
      swift_bridgeObjectRelease();
      return;
    }
    __break(1u);
  }
  else
  {
    v96 = (void (*)(char *, uint64_t, uint64_t))*((_QWORD *)v23 + 2);
    v97 = v197;
    v96(v26, a1, v197);
    v98 = v198;
    v192 = *(void (**)(_QWORD, _QWORD, _QWORD))(v11 + 16);
    v192(v196, a2, v198);
    v99 = sub_1D26CC084();
    v100 = sub_1D26CDCEC();
    v101 = v23;
    if (os_log_type_enabled(v99, v100))
    {
      v102 = swift_slowAlloc();
      v191 = (char *)swift_slowAlloc();
      aBlock[0] = (uint64_t)v191;
      *(_DWORD *)v102 = 136446466;
      v195 = v11;
      v190 = v99;
      v103 = v101;
      v104 = v193;
      v96(v193, (uint64_t)v26, v97);
      v105 = (void (*)(char *, uint64_t))*((_QWORD *)v103 + 1);
      v105(v26, v97);
      v106 = sub_1D26CE370();
      v108 = v107;
      v105(v104, v97);
      v202 = sub_1D2537880(v106, v108, aBlock);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v102 + 12) = 2082;
      v109 = v194;
      v110 = v196;
      v192(v194, v196, v98);
      v111 = *(void (**)(char *, uint64_t))(v195 + 8);
      v111(v110, v98);
      LOBYTE(v110) = v100;
      v112 = sub_1D26CE370();
      v114 = v113;
      v111(v109, v98);
      v202 = sub_1D2537880(v112, v114, aBlock);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v115 = v190;
      _os_log_impl(&dword_1D2531000, v190, (os_log_type_t)v110, "%{public}s:%{public}s Entry cannot be added to the store", (uint8_t *)v102, 0x16u);
      v116 = v191;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v116, -1, -1);
      MEMORY[0x1D823A5E0](v102, -1, -1);

    }
    else
    {
      (*(void (**)(char *, uint64_t))(v11 + 8))(v196, v98);
      (*((void (**)(char *, uint64_t))v23 + 1))(v26, v97);

    }
  }
}

void sub_1D2616980(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t TupleTypeMetadata2;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  unint64_t v19;
  unint64_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  _QWORD *v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  unint64_t v31;
  uint64_t v32;
  unint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  int64_t v37;
  unint64_t v38;
  char *v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  uint64_t v46;
  int64_t v47;
  unint64_t v48;
  _QWORD *v49;
  unint64_t v50;
  unint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  unint64_t v59;
  unint64_t v60;
  uint64_t v61;
  _QWORD v62[11];

  v2 = *(_QWORD **)v1;
  v3 = *(_QWORD *)(*(_QWORD *)v1 + 80);
  v56 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](a1);
  v58 = (char *)&v43 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = v2[12];
  v6 = v2[16];
  v51 = v2[11];
  v48 = v5;
  v50 = v6;
  v61 = sub_1D26CD89C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v55 = sub_1D26CDF38();
  v54 = *(_QWORD *)(v55 - 8);
  v8 = MEMORY[0x1E0C80A78](v55);
  v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v12 = (char *)&v43 - v11;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + qword_1ED961BF8) + 16));
  swift_beginAccess();
  v49 = v2;
  v13 = v2[14];
  v59 = v3;
  v57 = v13;
  sub_1D26CD89C();
  sub_1D26CD890();
  swift_endAccess();
  v53 = v1;
  v14 = (uint64_t *)(v1 + qword_1ED977D88);
  swift_beginAccess();
  v15 = *v14;
  v16 = *(_QWORD *)(*v14 + 64);
  v46 = *v14 + 64;
  v17 = 1 << *(_BYTE *)(v15 + 32);
  v18 = -1;
  if (v17 < 64)
    v18 = ~(-1 << v17);
  v19 = v18 & v16;
  v20 = (unint64_t)(v17 + 63) >> 6;
  v43 = v20 - 1;
  v21 = swift_bridgeObjectRetain();
  v22 = 0;
  v47 = v20;
  v45 = v20 - 4;
  v52 = v21;
  v44 = v21 + 96;
  v23 = v59;
  if (!v19)
    goto LABEL_8;
LABEL_6:
  v30 = __clz(__rbit64(v19));
  v19 &= v19 - 1;
  v60 = v22;
  v31 = v30 | (v22 << 6);
  v32 = v57;
  v33 = v59;
  v34 = v56;
LABEL_7:
  v35 = v52;
  (*(void (**)(char *, unint64_t, unint64_t))(v34 + 16))(v10, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v34 + 72) * v31, v33);
  *(_QWORD *)&v10[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v35 + 56) + 8 * v31);
  v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v36 + 56))(v10, 0, 1, TupleTypeMetadata2);
  swift_bridgeObjectRetain();
  while (1)
  {
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v12, v10, v55);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v36 + 48))(v12, 1, TupleTypeMetadata2) == 1)
    {
      swift_release();
      swift_beginAccess();
      __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B150);
      sub_1D26CD89C();
      sub_1D26CD890();
      swift_endAccess();
      swift_beginAccess();
      sub_1D26CD89C();
      sub_1D26CD890();
      swift_endAccess();
      sub_1D269F0D8();
      sub_1D2619CEC();
    }
    swift_bridgeObjectRelease();
    v39 = v58;
    (*(void (**)(char *, char *, unint64_t))(v34 + 32))(v58, v12, v23);
    v40 = (uint64_t *)(v53 + qword_1ED977D88);
    swift_beginAccess();
    v41 = *v40;
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](v62, v39, v41, v23, v61, v32);
    v42 = swift_bridgeObjectRelease();
    if (v62[0])
    {
      v62[8] = v62[0];
      MEMORY[0x1E0C80A78](v42);
      v24 = v51;
      *(&v43 - 8) = v23;
      *(&v43 - 7) = v24;
      v25 = v49;
      v26 = v49[13];
      *(&v43 - 6) = v48;
      *(&v43 - 5) = v26;
      v27 = v25[15];
      *(&v43 - 4) = v28;
      *(&v43 - 3) = v27;
      v29 = v25[17];
      *(&v43 - 2) = v50;
      *(&v43 - 1) = v29;
      MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0D0], v61);
      sub_1D26CDAB8();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, unint64_t))(v34 + 8))(v58, v23);
      v22 = v60;
      if (v19)
        goto LABEL_6;
    }
    else
    {
      (*(void (**)(char *, unint64_t))(v34 + 8))(v39, v23);
      swift_bridgeObjectRelease();
      v22 = v60;
      if (v19)
        goto LABEL_6;
    }
LABEL_8:
    v37 = v22 + 1;
    v32 = v57;
    v34 = v56;
    if (__OFADD__(v22, 1))
      break;
    if (v37 >= v47)
    {
      v60 = v22;
    }
    else
    {
      v38 = *(_QWORD *)(v46 + 8 * v37);
      if (v38)
        goto LABEL_11;
      if ((uint64_t)(v22 + 2) >= v47)
      {
        v60 = v22 + 1;
      }
      else
      {
        v38 = *(_QWORD *)(v46 + 8 * (v22 + 2));
        if (v38)
        {
          v37 = v22 + 2;
LABEL_11:
          v19 = (v38 - 1) & v38;
          v31 = __clz(__rbit64(v38)) + (v37 << 6);
          v60 = v37;
          v33 = v59;
          goto LABEL_7;
        }
        v37 = v22 + 3;
        if ((uint64_t)(v22 + 3) >= v47)
        {
          v60 = v22 + 2;
        }
        else
        {
          v38 = *(_QWORD *)(v46 + 8 * v37);
          if (v38)
            goto LABEL_11;
          while (v45 != v22)
          {
            v38 = *(_QWORD *)(v44 + 8 * v22++);
            if (v38)
            {
              v37 = v22 + 3;
              goto LABEL_11;
            }
          }
          v60 = v43;
        }
      }
    }
    v36 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v36 + 56))(v10, 1, 1, TupleTypeMetadata2);
    v19 = 0;
  }
  __break(1u);
}

void sub_1D261716C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v14[12];
  uint64_t v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v23 = a2;
  v24 = a1;
  v3 = (_QWORD *)*v2;
  v18 = sub_1D26CD074();
  v17 = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v16 = (char *)v14 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = sub_1D26CD0C8();
  v14[11] = *(_QWORD *)(v15 - 8);
  v5 = MEMORY[0x1E0C80A78](v15);
  v14[10] = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = v3[10];
  v19 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v5);
  v14[6] = v8;
  v21 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v3[11];
  v10 = v3[13];
  v11 = v3[14];
  v12 = v3[15];
  v13 = v3[16];
  v25 = v7;
  v26 = v9;
  v20 = v10;
  v27 = v10;
  v28 = v11;
  v22 = v12;
  v29 = v12;
  v30 = v13;
  type metadata accessor for VariantIdentifier();
}

uint64_t sub_1D26172A4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  uint64_t v30;
  uint64_t v31;
  int v32;
  uint64_t v33;
  void (*v34)(uint64_t, uint64_t, uint64_t);
  uint64_t v35;
  uint64_t v36;
  void (*v37)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v38;
  void (*v39)(uint64_t, uint64_t, uint64_t);
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  _BYTE v44[96];

  *(_QWORD *)(v7 - 280) = a1;
  *(_QWORD *)(v7 - 336) = *(_QWORD *)(a1 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  *(_QWORD *)(v7 - 424) = &v44[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = MEMORY[0x1E0C80A78](v8);
  *(_QWORD *)(v7 - 344) = &v44[-v11];
  v12 = MEMORY[0x1E0C80A78](v10);
  *(_QWORD *)(v7 - 288) = &v44[-v13];
  *(_QWORD *)(v7 - 248) = *(_QWORD *)(v5 - 8);
  v14 = MEMORY[0x1E0C80A78](v12);
  *(_QWORD *)(v7 - 328) = &v44[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  *(_QWORD *)(v7 - 416) = v15;
  MEMORY[0x1E0C80A78](v14);
  *(_QWORD *)(v7 - 312) = &v44[-v16];
  *(_QWORD *)(v7 - 408) = v1;
  v17 = *(_QWORD *)(v1 + 96);
  v18 = sub_1D26CDF38();
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  *(_QWORD *)(v7 - 352) = &v44[-((v21 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v20);
  v23 = &v44[-v22];
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v2 + qword_1ED961BF8) + 16));
  v24 = qword_1ED977D88;
  *(_QWORD *)(v7 - 232) = v2;
  v25 = (uint64_t *)(v2 + v24);
  swift_beginAccess();
  v26 = *v25;
  v27 = sub_1D26CD89C();
  swift_bridgeObjectRetain();
  v28 = *(_QWORD *)(v7 - 216);
  *(_QWORD *)(v7 - 272) = v3;
  *(_QWORD *)(v7 - 320) = v27;
  *(_QWORD *)(v7 - 264) = v6;
  MEMORY[0x1D8239074](v28, v26, v3, v27, v6);
  result = swift_bridgeObjectRelease();
  v30 = *(_QWORD *)(v7 - 184);
  if (v30)
  {
    *(_QWORD *)(v7 - 192) = v30;
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](*(_QWORD *)(v7 - 224), v30, v5, v17, v4);
    swift_bridgeObjectRelease();
    v31 = *(_QWORD *)(v17 - 8);
    v32 = (*(uint64_t (**)(_BYTE *, uint64_t, uint64_t))(v31 + 48))(v23, 1, v17);
    (*(void (**)(_BYTE *, uint64_t))(v19 + 8))(v23, v18);
    if (v32 != 1)
    {
      v33 = v5;
      v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 248) + 16);
      v35 = *(_QWORD *)(v7 - 312);
      v36 = *(_QWORD *)(v7 - 224);
      v34(v35, v36, v33);
      v37 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56);
      v38 = *(_QWORD *)(v7 - 352);
      *(_QWORD *)(v7 - 448) = v17;
      v37(v38, 1, 1, v17);
      sub_1D26CD8C0();
      v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 304) + 16);
      v40 = *(_QWORD *)(v7 - 256);
      v41 = *(_QWORD *)(v7 - 216);
      v42 = *(_QWORD *)(v7 - 272);
      *(_QWORD *)(v7 - 456) = v39;
      v39(v40, v41, v42);
      v34(v35, v36, v33);
      v43 = *(_QWORD *)(v7 - 288);
      *(_QWORD *)(v7 - 440) = v4;
      VariantIdentifier.init(storedKey:variantKey:)(v40, v42, v43);
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1D2617E2C(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t result;
  void (*v22)(char *, uint64_t, uint64_t);
  uint64_t v23;
  _QWORD *v24;
  uint64_t *v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void (*v34)(char *, uint64_t, uint64_t);
  uint64_t v35;
  _QWORD v36[11];
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  char *v40;
  void (*v41)(char *, uint64_t, uint64_t);
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  _QWORD *v46;
  uint64_t v47;
  _QWORD aBlock[10];
  uint64_t v49;

  v3 = (_QWORD *)*v1;
  v37 = sub_1D26CD074();
  v38 = *(_QWORD *)(v37 - 8);
  MEMORY[0x1E0C80A78](v37);
  v36[10] = (char *)v36 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = sub_1D26CD0C8();
  v36[9] = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v36[8] = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v36[6] = (char *)v36 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v3[10];
  v45 = *(_QWORD *)(v10 - 8);
  v11 = *(_QWORD *)(v45 + 64);
  v12 = MEMORY[0x1E0C80A78](v8);
  v36[7] = (char *)v36 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v12);
  v14 = (char *)v36 - v13;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v1 + qword_1ED961BF8) + 16));
  v46 = v1;
  v15 = (_QWORD *)((char *)v1 + qword_1ED977D88);
  swift_beginAccess();
  v16 = *v15;
  v17 = v3[12];
  v18 = v3[16];
  v42 = v3[11];
  v44 = v17;
  v43 = v18;
  v19 = sub_1D26CD89C();
  v20 = v3[14];
  swift_bridgeObjectRetain();
  v47 = a1;
  MEMORY[0x1D8239074](aBlock, a1, v16, v10, v19, v20);
  result = swift_bridgeObjectRelease();
  if (aBlock[0])
  {
    v36[2] = aBlock[0];
    v36[4] = v11;
    v36[5] = v5;
    v22 = *(void (**)(char *, uint64_t, uint64_t))(v45 + 16);
    v23 = v47;
    v22(v14, v47, v10);
    LOBYTE(v49) = 5;
    v24 = v46;
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    sub_1D269F170(v23);
    v41 = v22;
    v22(v14, v23, v10);
    v49 = 0;
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96B150);
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    v25 = (_QWORD *)((char *)v24 + qword_1ED977D88);
    swift_beginAccess();
    v26 = *v25;
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](aBlock, v23, v26, v10, v19, v20);
    v27 = swift_bridgeObjectRelease();
    v40 = v14;
    v28 = v44;
    if (aBlock[0])
    {
      v49 = aBlock[0];
      MEMORY[0x1E0C80A78](v27);
      v29 = v42;
      v36[-8] = v10;
      v36[-7] = v29;
      v30 = v3[13];
      v36[-6] = v28;
      v36[-5] = v30;
      v31 = v3[15];
      v36[-4] = v20;
      v36[-3] = v31;
      v32 = v3[17];
      v36[-2] = v43;
      v36[-1] = v32;
      MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0D0], v19);
      sub_1D26CDAB8();
      v14 = v40;
      swift_bridgeObjectRelease();
    }
    v33 = v47;
    v34 = v41;
    v41(v14, v47, v10);
    v49 = 0;
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    v34(v14, v33, v10);
    aBlock[8] = 0;
    swift_beginAccess();
    v35 = v3[13];
    v39 = v3[15];
    aBlock[0] = v10;
    aBlock[1] = v42;
    aBlock[2] = v35;
    aBlock[3] = v20;
    aBlock[4] = v39;
    aBlock[5] = v43;
    type metadata accessor for VariantReloadResult();
  }
  return result;
}

uint64_t sub_1D2618938(uint64_t a1)
{
  return sub_1D2618944(a1, (uint64_t)sub_1D262B298);
}

uint64_t sub_1D2618944(uint64_t a1, uint64_t a2)
{
  _QWORD v3[6];

  v3[3] = a1;
  return sub_1D2615628(a2, (uint64_t)v3, MEMORY[0x1E0DEE9C0] + 8);
}

uint64_t sub_1D2618988(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _BYTE *v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  _BYTE *v34;
  uint64_t v35;
  _BYTE *v36;
  char *v37;
  void (*v38)(_BYTE *, uint64_t, uint64_t);
  uint64_t v39;
  NSObject *v40;
  os_log_type_t v41;
  int v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  void (*v46)(_BYTE *, uint64_t);
  NSObject *v47;
  uint64_t v48;
  unint64_t v49;
  unint64_t v50;
  _QWORD *v51;
  uint64_t v52;
  unint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char v58;
  uint64_t v59;
  _BYTE *v60;
  unint64_t v61;
  _BYTE *v62;
  uint64_t v63;
  _BYTE *v64;
  void (*v65)(_BYTE *, _BYTE *, uint64_t);
  NSObject *v66;
  os_log_type_t v67;
  uint8_t *v68;
  uint64_t v69;
  _BYTE *v70;
  void (*v71)(_BYTE *, uint64_t);
  uint64_t v72;
  unint64_t v73;
  unint64_t v74;
  uint64_t v75;
  _OWORD *v76;
  uint64_t v77;
  __int128 v78;
  uint64_t *v79;
  uint64_t v80;
  uint64_t v81;
  unint64_t v82;
  _BYTE v84[12];
  int v85;
  uint64_t v86;
  _BYTE *v87;
  _BYTE *v88;
  _BYTE *v89;
  _BYTE *v90;
  _BYTE *v91;
  _BYTE *v92;
  _BYTE *v93;
  _BYTE *v94;
  _QWORD *v95;
  _BYTE *v96;
  _BYTE *v97;
  _BYTE *v98;
  uint64_t v99;
  void (*v100)(_BYTE *, uint64_t);
  char *v101;
  void (*v102)(_BYTE *, _BYTE *, uint64_t);
  uint64_t v103;
  uint64_t v104;
  _BYTE *v105;
  uint64_t v106;
  uint64_t v107;
  __int128 v108;
  unint64_t v109;
  __int128 v110;
  uint64_t v111;
  __int128 v112;
  __int128 v113;
  unint64_t v114;
  uint64_t v115;
  uint64_t v116;

  v3 = v2;
  *(_QWORD *)&v108 = a1;
  v5 = *v2;
  v6 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v7 = MEMORY[0x1E0C80A78](v6);
  v90 = &v84[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v7);
  v91 = &v84[-v9];
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v10);
  v98 = &v84[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v103 = sub_1D26CB9DC();
  v104 = *(_QWORD *)(v103 - 8);
  v12 = MEMORY[0x1E0C80A78](v103);
  v93 = &v84[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v12);
  v96 = &v84[-v14];
  v107 = type metadata accessor for ReloadConfiguration(0);
  v15 = MEMORY[0x1E0C80A78](v107);
  v88 = &v84[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v17 = MEMORY[0x1E0C80A78](v15);
  v89 = &v84[-v18];
  v19 = MEMORY[0x1E0C80A78](v17);
  v105 = &v84[-v20];
  v21 = MEMORY[0x1E0C80A78](v19);
  v23 = &v84[-v22];
  v106 = v5;
  v24 = *(_QWORD *)(v5 + 80);
  v25 = *(_QWORD *)(v24 - 8);
  v26 = MEMORY[0x1E0C80A78](v21);
  v97 = &v84[-((v27 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v28 = MEMORY[0x1E0C80A78](v26);
  v92 = &v84[-v29];
  v30 = MEMORY[0x1E0C80A78](v28);
  v87 = &v84[-v31];
  v32 = MEMORY[0x1E0C80A78](v30);
  v34 = &v84[-v33];
  MEMORY[0x1E0C80A78](v32);
  v36 = &v84[-v35];
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v3 + qword_1ED961BF8) + 16));
  v37 = (char *)v3 + qword_1ED961C00;
  v38 = *(void (**)(_BYTE *, uint64_t, uint64_t))(v25 + 16);
  v39 = a2;
  v38(v36, a2, v24);
  sub_1D2534120(v108, (uint64_t)v23, type metadata accessor for ReloadConfiguration);
  v101 = v37;
  v40 = sub_1D26CC084();
  v41 = sub_1D26CDD04();
  v42 = v41;
  v43 = os_log_type_enabled(v40, v41);
  v94 = v34;
  v102 = (void (*)(_BYTE *, _BYTE *, uint64_t))v38;
  if (v43)
  {
    v44 = swift_slowAlloc();
    v85 = v42;
    v45 = v44;
    v86 = swift_slowAlloc();
    v109 = v86;
    *(_DWORD *)v45 = 136446466;
    v95 = v3;
    v99 = v39;
    v38(v34, (uint64_t)v36, v24);
    v46 = *(void (**)(_BYTE *, uint64_t))(v25 + 8);
    v46(v36, v24);
    v47 = v40;
    v48 = sub_1D26CE370();
    v50 = v49;
    v100 = v46;
    v46(v34, v24);
    v116 = sub_1D2537880(v48, v50, (uint64_t *)&v109);
    v39 = v99;
    v51 = v95;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v45 + 12) = 2082;
    v52 = ReloadConfiguration.description.getter();
    v116 = sub_1D2537880(v52, v53, (uint64_t *)&v109);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D25340E4((uint64_t)v23, type metadata accessor for ReloadConfiguration);
    _os_log_impl(&dword_1D2531000, v47, (os_log_type_t)v85, "%{public}s Reload with configuration %{public}s", (uint8_t *)v45, 0x16u);
    v54 = v86;
    swift_arrayDestroy();
    v55 = (uint64_t)v105;
    MEMORY[0x1D823A5E0](v54, -1, -1);
    v56 = v45;
    v57 = v103;
    MEMORY[0x1D823A5E0](v56, -1, -1);

  }
  else
  {
    v100 = *(void (**)(_BYTE *, uint64_t))(v25 + 8);
    v100(v36, v24);

    sub_1D25340E4((uint64_t)v23, type metadata accessor for ReloadConfiguration);
    v55 = (uint64_t)v105;
    v51 = v3;
    v57 = v103;
  }
  sub_1D2534120(v108, v55, type metadata accessor for ReloadConfiguration);
  v58 = (*(uint64_t (**)(uint64_t, uint64_t))(*v51 + 1464))(v39, v55);
  v59 = v104;
  if ((v58 & 1) != 0)
  {
    v60 = *(_BYTE **)((char *)v51 + qword_1ED962458);
    v61 = *(_QWORD *)(v55 + *(int *)(v107 + 24));
    v109 = v61;
    sub_1D2534610(v61);
    v62 = v98;
    sub_1D269ED20(v39, &v109, (uint64_t)v98);
    sub_1D2534224(v61);
    if ((*(unsigned int (**)(_BYTE *, uint64_t, uint64_t))(v59 + 48))(v62, 1, v57) != 1)
    {
      v97 = v60;
      (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v59 + 32))(v96, v62, v57);
      swift_beginAccess();
      v76 = (_OWORD *)v106;
      v77 = *(_QWORD *)(v106 + 104);
      swift_bridgeObjectRetain();
      v109 = v24;
      v110 = *(_OWORD *)((char *)v76 + 88);
      v111 = v77;
      v78 = v76[8];
      v108 = v76[7];
      v112 = v108;
      v113 = v78;
      type metadata accessor for ReloadTaskPair();
    }
    sub_1D253703C((uint64_t)v62, &qword_1ED96B1E0);
    v63 = v106;
    v79 = (_QWORD *)((char *)v51 + qword_1ED961C08);
    swift_beginAccess();
    v80 = *v79;
    v81 = *(_QWORD *)(v63 + 112);
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](&v115, v39, v80, v24, &type metadata for ReloadState, v81);
    swift_bridgeObjectRelease();
    if (v115 != 3)
    {
      LOBYTE(v115) = 0;
      sub_1D261E0F4((uint64_t)&v115, v39);
    }
    swift_beginAccess();
    v82 = *(_QWORD *)(v55 + *(int *)(v107 + 24));
    v114 = v82;
    sub_1D2534610(v82);
    sub_1D269E450(v39, &v114);
    sub_1D2534224(v82);
    sub_1D261DF90(v39, v55);
  }
  else
  {
    v64 = v97;
    v65 = v102;
    v102(v97, (_BYTE *)v39, v24);
    v66 = sub_1D26CC084();
    v67 = sub_1D26CDD04();
    if (os_log_type_enabled(v66, v67))
    {
      v68 = (uint8_t *)swift_slowAlloc();
      *(_QWORD *)&v108 = swift_slowAlloc();
      v109 = v108;
      v69 = v24;
      *(_DWORD *)v68 = 136446210;
      v107 = (uint64_t)(v68 + 4);
      v70 = v94;
      v65(v94, v64, v24);
      v71 = v100;
      v100(v64, v24);
      v72 = sub_1D26CE370();
      v74 = v73;
      v71(v70, v69);
      v116 = sub_1D2537880(v72, v74, (uint64_t *)&v109);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v66, v67, "%{public}s Reload not permitted.", v68, 0xCu);
      v75 = v108;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v75, -1, -1);
      MEMORY[0x1D823A5E0](v68, -1, -1);
    }
    else
    {
      v100(v64, v24);
    }

  }
  return sub_1D25340E4(v55, type metadata accessor for ReloadConfiguration);
}

uint64_t sub_1D2619A74(uint64_t a1)
{
  uint64_t *v1;
  uint64_t *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint8_t *v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint8_t *v15;
  uint64_t v16;
  os_unfair_lock_s *v17;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;

  v2 = v1;
  v3 = a1;
  v4 = *(_QWORD *)(*v1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v3, v4);
  v8 = sub_1D26CC084();
  v9 = sub_1D26CDD04();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v21 = v3;
    v11 = (uint8_t *)v10;
    v20 = swift_slowAlloc();
    v23 = v20;
    *(_DWORD *)v11 = 136446210;
    v19 = v11 + 4;
    v12 = sub_1D26CE370();
    v22 = sub_1D2537880(v12, v13, &v23);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    _os_log_impl(&dword_1D2531000, v8, v9, "Pausing reloads for: %{public}s", v11, 0xCu);
    v14 = v20;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v14, -1, -1);
    v15 = v11;
    v3 = v21;
    MEMORY[0x1D823A5E0](v15, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  v16 = *(uint64_t *)((char *)v1 + qword_1ED961BF8);
  v17 = *(os_unfair_lock_s **)(v16 + 16);
  swift_retain();
  os_unfair_lock_lock(v17);
  sub_1D2625C8C(v2, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v16 + 16));
  return swift_release();
}

uint64_t sub_1D2619C84(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)((char *)v1 + qword_1ED961BF8);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2625E80(v1, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

void sub_1D2619CEC()
{
  type metadata accessor for ReloadTaskPair();
}

uint64_t sub_1D261A0F8(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[8];

  v5[6] = *(_QWORD *)(v1 + qword_1ED961BF8);
  v5[3] = a1;
  v2 = type metadata accessor for UnfairLock();
  sub_1D26CD89C();
  v3 = sub_1D26CDF38();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B2B0, (uint64_t)v5, v2, v3, (uint64_t)&off_1E93D0D60);
  swift_release();
  return v5[7];
}

uint64_t sub_1D261A1A4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  _QWORD v6[8];

  v6[7] = *(_QWORD *)(v2 + qword_1ED961BF8);
  v6[3] = a1;
  v6[4] = a2;
  v3 = type metadata accessor for UnfairLock();
  v4 = sub_1D26CDF38();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B2C8, (uint64_t)v6, v3, v4, (uint64_t)&off_1E93D0D60);
  return swift_release();
}

uint64_t sub_1D261A24C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  _QWORD v5[6];

  v5[5] = *(_QWORD *)(v1 + qword_1ED961BF8);
  v5[3] = a1;
  v2 = type metadata accessor for UnfairLock();
  v3 = sub_1D26CDF38();
  swift_retain();
  sub_1D2536C74((void (*)(uint64_t))sub_1D262B2E4, (uint64_t)v5, v2, v3, (uint64_t)&off_1E93D0D60);
  return swift_release();
}

uint64_t sub_1D261A2F0(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  _QWORD *v16;
  uint64_t *v17;
  uint64_t v18;
  uint64_t v19;
  unint64_t v20;
  __int128 v21;
  unint64_t v22;
  unint64_t v23;
  int64_t v24;
  unint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD v41[2];
  __int128 v42;
  _QWORD *v43;
  uint64_t v44;
  char *v45;
  char *v46;
  uint64_t v47;
  uint64_t v48;
  int64_t v49;
  char *v50;
  char *v51;
  uint64_t v52;
  char *v53;
  _QWORD *v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD *v57;
  _QWORD v58[13];

  v54 = (_QWORD *)*v1;
  v2 = v54[10];
  v3 = *(_QWORD *)(v2 - 8);
  v4 = MEMORY[0x1E0C80A78](a1);
  v46 = (char *)v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = MEMORY[0x1E0C80A78](v4);
  v8 = (char *)v41 - v7;
  v9 = MEMORY[0x1E0C80A78](v6);
  v11 = (char *)v41 - v10;
  MEMORY[0x1E0C80A78](v9);
  v51 = (char *)v41 - v12;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v1 + qword_1ED961BF8) + 16));
  v57 = v1;
  v45 = (char *)v1 + qword_1ED961C00;
  v13 = sub_1D26CC084();
  v14 = sub_1D26CDD04();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    _os_log_impl(&dword_1D2531000, v13, v14, "System migration completed", v15, 2u);
    MEMORY[0x1D823A5E0](v15, -1, -1);
  }

  v16 = v57;
  v17 = (_QWORD *)((char *)v57 + qword_1ED961C08);
  swift_beginAccess();
  v18 = *v17;
  v19 = v54[14];
  CGSizeMake(v18, v2, &type metadata for ReloadState, v19);
  swift_bridgeObjectRetain();
  v56 = v19;
  sub_1D26CE19C();
  v52 = v58[8];
  v48 = v58[9];
  v55 = v58[11];
  v20 = v58[12];
  v47 = (uint64_t)v16 + qword_1ED961C08;
  v44 = (uint64_t)v16 + qword_1ED962468;
  v49 = (unint64_t)(v58[10] + 64) >> 6;
  v43 = v58;
  *(_QWORD *)&v21 = 136446210;
  v42 = v21;
  v41[1] = MEMORY[0x1E0DEE9B8] + 8;
  v50 = v8;
  v53 = v11;
  while (v20)
  {
    v22 = __clz(__rbit64(v20));
    v20 &= v20 - 1;
    v23 = v22 | (v55 << 6);
LABEL_23:
    v28 = v51;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v51, *(_QWORD *)(v52 + 48) + *(_QWORD *)(v3 + 72) * v23, v2);
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v11, v28, v2);
    v29 = (_QWORD *)((char *)v57 + qword_1ED977D88);
    swift_beginAccess();
    v30 = v3;
    v31 = *v29;
    v32 = v54[11];
    v33 = v54[12];
    v34 = v54[16];
    v35 = sub_1D26CD89C();
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](v58, v11, v31, v2, v35, v56);
    swift_bridgeObjectRelease();
    if (v58[0])
    {
      if ((MEMORY[0x1D8239020](v58[0], v32, v33, v34) & 1) == 0)
      {
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v37 = v54[13];
        v38 = v54[15];
        v39 = v54[17];
        v58[0] = v2;
        v58[1] = v32;
        v58[2] = v33;
        v58[3] = v37;
        v58[4] = v56;
        v58[5] = v38;
        v58[6] = v34;
        v58[7] = v39;
        type metadata accessor for ReloadTaskPair();
      }
      v3 = v30;
      v36 = v53;
      (*(void (**)(char *, uint64_t))(v30 + 8))(v53, v2);
      v11 = v36;
      swift_bridgeObjectRelease();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v30 + 8))(v11, v2);
      v3 = v30;
    }
  }
  v24 = v55 + 1;
  if (__OFADD__(v55, 1))
  {
    __break(1u);
    JUMPOUT(0x1D261AC24);
  }
  if (v24 >= v49)
    return swift_release();
  v25 = *(_QWORD *)(v48 + 8 * v24);
  v26 = v55 + 1;
  if (v25)
    goto LABEL_22;
  v26 = v55 + 2;
  if (v55 + 2 >= v49)
    return swift_release();
  v25 = *(_QWORD *)(v48 + 8 * v26);
  if (v25)
    goto LABEL_22;
  v26 = v55 + 3;
  if (v55 + 3 >= v49)
    return swift_release();
  v25 = *(_QWORD *)(v48 + 8 * v26);
  if (v25)
    goto LABEL_22;
  v26 = v55 + 4;
  if (v55 + 4 >= v49)
    return swift_release();
  v25 = *(_QWORD *)(v48 + 8 * v26);
  if (v25)
    goto LABEL_22;
  v26 = v55 + 5;
  if (v55 + 5 >= v49)
    return swift_release();
  v25 = *(_QWORD *)(v48 + 8 * v26);
  if (v25)
  {
LABEL_22:
    v20 = (v25 - 1) & v25;
    v23 = __clz(__rbit64(v25)) + (v26 << 6);
    v55 = v26;
    goto LABEL_23;
  }
  v27 = v55 + 6;
  while (v49 != v27)
  {
    v25 = *(_QWORD *)(v48 + 8 * v27++);
    if (v25)
    {
      v26 = v27 - 1;
      goto LABEL_22;
    }
  }
  return swift_release();
}

uint64_t sub_1D261AC28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t result;
  __int128 v55;
  uint64_t v56;
  uint64_t v57;
  unint64_t v58;
  uint64_t v59;
  unint64_t v60;
  int64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  uint64_t v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  int v71;
  char *v72;
  char *v73;
  char *v74;
  uint64_t v75;
  char *v76;
  uint64_t v77;
  void (*v78)(char *, uint64_t, uint64_t);
  char *v79;
  uint64_t v80;
  void (*v81)(char *, char *, uint64_t);
  char *v82;
  char *v83;
  char *v84;
  NSObject *v85;
  os_log_type_t v86;
  uint64_t v87;
  char *v88;
  void (*v89)(char *, uint64_t);
  char *v90;
  uint64_t v91;
  unint64_t v92;
  unint64_t v93;
  char *v94;
  void (*v95)(char *, uint64_t);
  uint64_t v96;
  unint64_t v97;
  unint64_t v98;
  os_log_t v99;
  uint64_t v100;
  uint64_t v101;
  uint64_t v102;
  NSObject *v103;
  void (*v104)(char *, uint64_t);
  uint64_t v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  _QWORD v111[6];
  uint64_t v112;
  uint64_t v113;
  char *v114;
  char *v115;
  char *v116;
  uint64_t v117;
  uint64_t v118;
  char *v119;
  char *v120;
  char *v121;
  uint64_t v122;
  __int128 v123;
  char *v124;
  _QWORD *v125;
  char *v126;
  os_log_t v127;
  uint64_t v128;
  char *v129;
  unint64_t v130;
  char *v131;
  char *v132;
  char *v133;
  char *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;
  uint64_t v139;
  int v140;
  uint64_t v141;
  uint64_t v142;
  int64_t v143;
  uint64_t v144;
  char *v145;
  char *v146;
  uint64_t v147;
  uint64_t v148;
  uint64_t v149;
  uint64_t v150;
  char *v151;
  uint64_t v152;
  uint64_t v153;
  uint64_t AssociatedTypeWitness;
  uint64_t v155;
  uint64_t v156;
  uint64_t v157;
  uint64_t v158;
  uint64_t v159;
  void (*v160)(char *, uint64_t, uint64_t);
  uint64_t v161;
  uint64_t v162;
  uint64_t v163[13];

  v118 = a3;
  v141 = a1;
  v5 = (_QWORD *)*v3;
  v139 = sub_1D26CB9DC();
  v136 = *(_QWORD *)(v139 - 8);
  MEMORY[0x1E0C80A78](v139);
  v111[2] = (char *)v111 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v138 = sub_1D26CC09C();
  v113 = *(_QWORD *)(v138 - 8);
  MEMORY[0x1E0C80A78](v138);
  v120 = (char *)v111 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v114 = (char *)v111 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v115 = (char *)v111 - v11;
  v117 = type metadata accessor for ReloadConfiguration(0);
  v12 = MEMORY[0x1E0C80A78](v117);
  v116 = (char *)v111 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v119 = (char *)v111 - v15;
  v16 = v5[10];
  v137 = *(_QWORD *)(v16 - 8);
  v17 = MEMORY[0x1E0C80A78](v14);
  v111[1] = (char *)v111 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v19 = MEMORY[0x1E0C80A78](v17);
  v111[0] = (char *)v111 - v20;
  v21 = MEMORY[0x1E0C80A78](v19);
  v111[3] = (char *)v111 - v22;
  v23 = MEMORY[0x1E0C80A78](v21);
  v126 = (char *)v111 - v24;
  MEMORY[0x1E0C80A78](v23);
  v133 = (char *)v111 - v25;
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v27 = MEMORY[0x1E0C80A78](v26);
  v111[4] = (char *)v111 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v134 = (char *)v111 - v29;
  v30 = v5[12];
  v157 = v5[17];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v153 = sub_1D26CDF38();
  v152 = *(_QWORD *)(v153 - 8);
  v31 = MEMORY[0x1E0C80A78](v153);
  v132 = (char *)v111 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v151 = (char *)v111 - v33;
  v150 = sub_1D26CDF38();
  v149 = *(_QWORD *)(v150 - 8);
  v34 = MEMORY[0x1E0C80A78](v150);
  v36 = (char *)v111 - v35;
  v156 = *(_QWORD *)(v30 - 8);
  v37 = MEMORY[0x1E0C80A78](v34);
  v39 = (char *)v111 - ((v38 + 15) & 0xFFFFFFFFFFFFFFF0);
  v40 = v5[11];
  v41 = *(_QWORD *)(v40 - 8);
  v42 = MEMORY[0x1E0C80A78](v37);
  v124 = (char *)v111 - ((v43 + 15) & 0xFFFFFFFFFFFFFFF0);
  v44 = MEMORY[0x1E0C80A78](v42);
  v131 = (char *)v111 - v45;
  MEMORY[0x1E0C80A78](v44);
  v47 = (char *)v111 - v46;
  v48 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v48);
  v50 = (char *)v111 - v49;
  v125 = v5;
  v51 = v5[16];
  v159 = a2;
  v52 = a2;
  v53 = v51;
  v112 = CGSizeMake(v52, v40, v30, v51);
  if ((v112 & 0xC000000000000001) != 0)
  {
    v160 = (void (*)(char *, uint64_t, uint64_t))(sub_1D26CE1A8() | 0x8000000000000000);
    result = swift_bridgeObjectRetain();
    v56 = (uint64_t)v160;
    v144 = 0;
    v57 = 0;
    v158 = 0;
    v58 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE19C();
    v56 = v163[8];
    v144 = v163[9];
    v57 = v163[10];
    v158 = v163[11];
    v58 = v163[12];
  }
  v142 = v56 & 0x7FFFFFFFFFFFFFFFLL;
  v111[5] = v57;
  v143 = (unint64_t)(v57 + 64) >> 6;
  v130 = 0x80000001D26E2A90;
  *(_QWORD *)&v55 = 136446466;
  v123 = v55;
  v122 = MEMORY[0x1E0DEE9B8] + 8;
  v155 = v16;
  v59 = v156;
  v160 = (void (*)(char *, uint64_t, uint64_t))v56;
  v135 = v30;
  v147 = v53;
  v146 = v36;
  v129 = v39;
  v145 = v50;
  v148 = v40;
  v121 = v47;
  while (v56 < 0)
  {
    v161 = v58;
    if (!sub_1D26CE1C0())
    {
      v106 = v118;
      v107 = v137;
LABEL_40:
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v41 + 56))(v50, 1, 1, v40);
      sub_1D2592A28();
      v160 = *(void (**)(char *, uint64_t, uint64_t))(v107 + 16);
      v160(v126, v141, v16);
      LOBYTE(v162) = 3;
      swift_beginAccess();
      v161 = v125[14];
      sub_1D26CD89C();
      sub_1D26CD8C0();
      swift_endAccess();
      v108 = v53;
      if (v106)
      {
        v158 = sub_1D2686830();
        swift_retain();
        sub_1D2686738(0x64656B636F6C62, 0xE700000000000000);
      }
      else
      {
        v158 = 0;
      }
      v109 = v125[13];
      v110 = v125[15];
      v163[0] = v16;
      v163[1] = v40;
      v163[2] = v135;
      v163[3] = v109;
      v163[4] = v161;
      v163[5] = v110;
      v163[6] = v108;
      v163[7] = v157;
      type metadata accessor for ReloadTaskPair();
    }
    sub_1D26CE3AC();
    swift_unknownObjectRelease();
    v59 = v156;
LABEL_29:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v41 + 56))(v50, 0, 1, v40);
    (*(void (**)(char *, char *, uint64_t))(v41 + 32))(v47, v50, v40);
    MEMORY[0x1D8239074](v47, v159, v40, v30, v53);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v59 + 48))(v36, 1, v30) == 1)
    {
      (*(void (**)(char *, uint64_t))(v41 + 8))(v47, v40);
      result = (*(uint64_t (**)(char *, uint64_t))(v149 + 8))(v36, v150);
    }
    else
    {
      v65 = v47;
      v66 = v16;
      (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v39, v36, v30);
      v67 = v151;
      v68 = v59;
      (*(void (**)(uint64_t))(v157 + 16))(v30);
      v69 = AssociatedTypeWitness;
      v70 = *(_QWORD *)(AssociatedTypeWitness - 8);
      v71 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v70 + 48))(v67, 1, AssociatedTypeWitness);
      (*(void (**)(char *, uint64_t))(v152 + 8))(v67, v153);
      if (v71 == 1)
      {
        (*(void (**)(char *, uint64_t))(v68 + 8))(v39, v30);
        v72 = v65;
        v73 = v65;
        v40 = v148;
        result = (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v73, v148);
        v53 = v147;
        v16 = v66;
        v47 = v72;
        v36 = v146;
        v59 = v68;
      }
      else
      {
        v74 = v132;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v70 + 56))(v132, 1, 1, v69);
        v75 = v157;
        (*(void (**)(char *, uint64_t, uint64_t))(v157 + 24))(v74, v30, v157);
        v76 = v134;
        sub_1D26CB9B8();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v136 + 56))(v76, 0, 1, v139);
        (*(void (**)(char *, uint64_t, uint64_t))(v75 + 48))(v76, v30, v75);
        (*(void (**)(unint64_t, unint64_t, uint64_t, uint64_t))(v75 + 72))(0xD000000000000025, v130, v30, v75);
        v16 = v66;
        if (qword_1EFC821F0 != -1)
          swift_once();
        __swift_project_value_buffer(v138, (uint64_t)qword_1EFC8AB10);
        v77 = v137;
        v78 = *(void (**)(char *, uint64_t, uint64_t))(v137 + 16);
        v79 = v133;
        v78(v133, v141, v16);
        v80 = v77;
        v81 = *(void (**)(char *, char *, uint64_t))(v41 + 16);
        v82 = v131;
        v83 = v65;
        v84 = v65;
        v40 = v148;
        v81(v131, v84, v148);
        v85 = sub_1D26CC084();
        v86 = sub_1D26CDD04();
        v140 = v86;
        if (os_log_type_enabled(v85, v86))
        {
          v87 = swift_slowAlloc();
          v128 = swift_slowAlloc();
          v163[0] = v128;
          *(_DWORD *)v87 = v123;
          v127 = v85;
          v88 = v126;
          v78(v126, (uint64_t)v79, v16);
          v89 = *(void (**)(char *, uint64_t))(v80 + 8);
          v89(v79, v155);
          v90 = v82;
          v91 = sub_1D26CE370();
          v93 = v92;
          v89(v88, v155);
          v16 = v155;
          *(_QWORD *)(v87 + 4) = sub_1D2537880(v91, v93, v163);
          swift_bridgeObjectRelease();
          *(_WORD *)(v87 + 12) = 2082;
          v94 = v124;
          v81(v124, v90, v40);
          v95 = *(void (**)(char *, uint64_t))(v41 + 8);
          v95(v90, v40);
          v96 = sub_1D26CE370();
          v98 = v97;
          v95(v94, v40);
          *(_QWORD *)(v87 + 14) = sub_1D2537880(v96, v98, v163);
          swift_bridgeObjectRelease();
          v99 = v127;
          _os_log_impl(&dword_1D2531000, v127, (os_log_type_t)v140, "%{public}s:%{public}s Content discarded.", (uint8_t *)v87, 0x16u);
          v100 = v128;
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v100, -1, -1);
          MEMORY[0x1D823A5E0](v87, -1, -1);

          v101 = v156;
          v39 = v129;
          v102 = v135;
          (*(void (**)(char *, uint64_t))(v156 + 8))(v129, v135);
          v47 = v121;
          result = ((uint64_t (*)(char *, uint64_t))v95)(v121, v40);
          v30 = v102;
          v59 = v101;
          v53 = v147;
          v36 = v146;
        }
        else
        {
          v103 = v85;
          v104 = *(void (**)(char *, uint64_t))(v41 + 8);
          v104(v82, v40);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v79, v16);

          v105 = v156;
          v39 = v129;
          v30 = v135;
          (*(void (**)(char *, uint64_t))(v156 + 8))(v129, v135);
          result = ((uint64_t (*)(char *, uint64_t))v104)(v83, v40);
          v59 = v105;
          v53 = v147;
          v36 = v146;
          v47 = v83;
        }
      }
      v50 = v145;
    }
    v56 = (uint64_t)v160;
    v58 = v161;
  }
  if (v58)
  {
    v161 = (v58 - 1) & v58;
    v60 = __clz(__rbit64(v58)) | (v158 << 6);
LABEL_28:
    (*(void (**)(char *, unint64_t, uint64_t))(v41 + 16))(v50, *(_QWORD *)(v56 + 48) + *(_QWORD *)(v41 + 72) * v60, v40);
    goto LABEL_29;
  }
  v61 = v158 + 1;
  if (!__OFADD__(v158, 1))
  {
    if (v61 >= v143)
      goto LABEL_38;
    v62 = *(_QWORD *)(v144 + 8 * v61);
    v63 = v158 + 1;
    if (!v62)
    {
      v63 = v158 + 2;
      if (v158 + 2 >= v143)
        goto LABEL_38;
      v62 = *(_QWORD *)(v144 + 8 * v63);
      if (!v62)
      {
        v63 = v158 + 3;
        if (v158 + 3 >= v143)
          goto LABEL_38;
        v62 = *(_QWORD *)(v144 + 8 * v63);
        if (!v62)
        {
          v63 = v158 + 4;
          if (v158 + 4 >= v143)
            goto LABEL_38;
          v62 = *(_QWORD *)(v144 + 8 * v63);
          if (!v62)
          {
            v63 = v158 + 5;
            if (v158 + 5 >= v143)
            {
LABEL_38:
              v106 = v118;
              v107 = v137;
              goto LABEL_40;
            }
            v62 = *(_QWORD *)(v144 + 8 * v63);
            if (!v62)
            {
              v64 = v158 + 6;
              do
              {
                if (v143 == v64)
                  goto LABEL_38;
                v62 = *(_QWORD *)(v144 + 8 * v64++);
              }
              while (!v62);
              v63 = v64 - 1;
            }
          }
        }
      }
    }
    v161 = (v62 - 1) & v62;
    v60 = __clz(__rbit64(v62)) + (v63 << 6);
    v158 = v63;
    goto LABEL_28;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D261C864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  NSObject *v14;
  os_log_type_t v15;
  uint8_t *v16;
  uint64_t v17;
  unint64_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  uint8_t *v23;
  uint8_t *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  void (*v28)(char *);
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v27 = a2;
  v5 = *v3;
  v6 = *(_QWORD *)(*v3 + 80);
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v8);
  v28 = *(void (**)(char *))(v7 + 16);
  v29 = v12;
  v28((char *)&v23 - v11);
  LOBYTE(v31) = 0;
  swift_beginAccess();
  v13 = *(_QWORD *)(v5 + 112);
  sub_1D26CD89C();
  sub_1D26CD8C0();
  swift_endAccess();
  if (!a3 || !sub_1D2686830())
  {
    ((void (*)(char *, uint64_t, uint64_t))v28)(v10, v29, v6);
    v14 = sub_1D26CC084();
    v15 = sub_1D26CDCEC();
    if (os_log_type_enabled(v14, v15))
    {
      v16 = (uint8_t *)swift_slowAlloc();
      v25 = swift_slowAlloc();
      v30 = v25;
      v26 = v13;
      *(_DWORD *)v16 = 136446210;
      v23 = v16 + 4;
      v24 = v16;
      v17 = sub_1D26CE370();
      v31 = sub_1D2537880(v17, v18, &v30);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
      v19 = v24;
      _os_log_impl(&dword_1D2531000, v14, v15, "Unexpectedly found no reload tasks for key %{public}s", v24, 0xCu);
      v20 = v25;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v20, -1, -1);
      MEMORY[0x1D823A5E0](v19, -1, -1);

    }
    else
    {

      (*(void (**)(char *, uint64_t))(v7 + 8))(v10, v6);
    }
    sub_1D261DBD0(v29, v27);
  }
  swift_retain();
  v21 = swift_retain();
  sub_1D261F4DC(v21);
  return swift_release_n();
}

uint64_t sub_1D261CBD4(uint64_t a1)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t TupleTypeMetadata2;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t, uint64_t);
  NSObject *v33;
  os_log_type_t v34;
  _BOOL4 v35;
  _QWORD *v36;
  uint64_t v37;
  uint8_t *v38;
  uint64_t v39;
  uint64_t v40;
  unint64_t v41;
  uint64_t v42;
  uint8_t *v43;
  uint64_t *v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  unint64_t v49;
  uint64_t result;
  unint64_t v51;
  int64_t v52;
  __int128 v53;
  char *v54;
  uint64_t v55;
  char *v56;
  char *v57;
  char *v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  int64_t v62;
  unint64_t v63;
  int64_t v64;
  uint64_t v65;
  uint64_t *v66;
  uint64_t v67;
  _QWORD *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  uint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  int64_t v82;
  __int128 v83;
  uint64_t v84;
  __int128 v85;
  char *v86;
  char *v87;
  uint64_t *v88;
  char *v89;
  char *v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  uint64_t v97;
  void (*v98)(char *, uint64_t);
  char *v99;
  uint64_t v100;
  uint64_t v101;
  char *v102;
  int64_t v103;
  uint64_t v104;
  char *v105;
  uint64_t v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  uint64_t v110;
  char *v111;
  char *v112;
  int v113;
  char *v114;
  _QWORD *v115;
  uint64_t v116;
  int64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120[15];

  v3 = *(_QWORD **)v1;
  v4 = *(_QWORD *)(*(_QWORD *)v1 + 96);
  v95 = sub_1D26CDF38();
  v94 = *(_QWORD *)(v95 - 8);
  v5 = MEMORY[0x1E0C80A78](v95);
  v102 = (char *)&v81 - v6;
  v119 = v4;
  v107 = *(_QWORD *)(v4 - 8);
  v7 = MEMORY[0x1E0C80A78](v5);
  v90 = (char *)&v81 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = MEMORY[0x1E0C80A78](v7);
  v105 = (char *)&v81 - v10;
  v115 = v3;
  v11 = *(_QWORD *)(v3[10] - 8);
  v12 = MEMORY[0x1E0C80A78](v9);
  v87 = (char *)&v81 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v12);
  v89 = (char *)&v81 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v86 = (char *)&v81 - v17;
  MEMORY[0x1E0C80A78](v16);
  v114 = (char *)&v81 - v18;
  v97 = v19;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v110 = sub_1D26CDF38();
  v109 = *(_QWORD *)(v110 - 8);
  v21 = MEMORY[0x1E0C80A78](v110);
  v111 = (char *)&v81 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v21);
  v24 = (char *)&v81 - v23;
  v25 = sub_1D26CD488();
  v26 = *(_QWORD *)(v25 - 8);
  v27 = MEMORY[0x1E0C80A78](v25);
  v99 = (char *)&v81 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v27);
  v30 = (char *)&v81 - v29;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v1 + qword_1ED961BF8) + 16));
  v116 = v1;
  v31 = v1 + qword_1ED961C00;
  v32 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
  v96 = a1;
  v32(v30, a1, v25);
  v91 = v31;
  v33 = sub_1D26CC084();
  v34 = sub_1D26CDD04();
  v35 = os_log_type_enabled(v33, v34);
  v36 = &unk_1D26D0000;
  v37 = MEMORY[0x1E0DEE9B8];
  v112 = v24;
  v108 = TupleTypeMetadata2;
  if (v35)
  {
    v38 = (uint8_t *)swift_slowAlloc();
    v39 = swift_slowAlloc();
    v120[0] = v39;
    *(_DWORD *)v38 = 136446210;
    v118 = (uint64_t)(v38 + 4);
    sub_1D25369B0(&qword_1ED962050, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0468]);
    v40 = sub_1D26CE370();
    v120[14] = sub_1D2537880(v40, v41, v120);
    TupleTypeMetadata2 = v108;
    sub_1D26CDF50();
    v37 = MEMORY[0x1E0DEE9B8];
    swift_bridgeObjectRelease();
    v98 = *(void (**)(char *, uint64_t))(v26 + 8);
    v98(v30, v25);
    _os_log_impl(&dword_1D2531000, v33, v34, "Data protection level changed to %{public}s available", v38, 0xCu);
    swift_arrayDestroy();
    v42 = v39;
    v36 = (_QWORD *)&unk_1D26D0000;
    MEMORY[0x1D823A5E0](v42, -1, -1);
    v43 = v38;
    v24 = v112;
    MEMORY[0x1D823A5E0](v43, -1, -1);

  }
  else
  {

    v98 = *(void (**)(char *, uint64_t))(v26 + 8);
    v98(v30, v25);
  }
  v44 = (uint64_t *)(v116 + qword_1ED961C08);
  swift_beginAccess();
  v45 = *v44;
  v46 = *(_QWORD *)(*v44 + 64);
  v92 = *v44 + 64;
  v47 = 1 << *(_BYTE *)(v45 + 32);
  v48 = -1;
  if (v47 < 64)
    v48 = ~(-1 << v47);
  v49 = v48 & v46;
  v88 = v120;
  v103 = (unint64_t)(v47 + 63) >> 6;
  v82 = v103 - 1;
  v106 = v45;
  result = swift_bridgeObjectRetain();
  v51 = v49;
  v52 = 0;
  *(_QWORD *)&v53 = v36[154];
  v85 = v53;
  v84 = v37 + 8;
  *(_QWORD *)&v53 = 136446466;
  v83 = v53;
  v54 = v102;
  v55 = v97;
  v56 = v114;
  v57 = v111;
  v93 = v11;
  v100 = v25;
  while (1)
  {
    if (v51)
    {
      v58 = v54;
      v117 = v52;
      v118 = (v51 - 1) & v51;
      v59 = __clz(__rbit64(v51)) | (v52 << 6);
      goto LABEL_11;
    }
    v62 = v52 + 1;
    if (__OFADD__(v52, 1))
    {
      __break(1u);
      goto LABEL_37;
    }
    if (v62 >= v103)
      goto LABEL_23;
    v63 = *(_QWORD *)(v92 + 8 * v62);
    if (v63)
      goto LABEL_15;
    v52 += 2;
    if (v62 + 1 < v103)
      break;
    v117 = v62;
    v118 = 0;
LABEL_24:
    v61 = 1;
LABEL_25:
    v65 = *(_QWORD *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v65 + 56))(v57, v61, 1, TupleTypeMetadata2);
    (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v24, v57, v110);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v65 + 48))(v24, 1, TupleTypeMetadata2) == 1)
      return swift_release();
    v113 = v24[*(int *)(TupleTypeMetadata2 + 48)];
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v56, v24, v55);
    v66 = (uint64_t *)(v116 + qword_1ED977D88);
    swift_beginAccess();
    v67 = *v66;
    v68 = v115;
    v69 = v115[11];
    v70 = v115[16];
    v71 = sub_1D26CD89C();
    v72 = v68[14];
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](v120, v56, v67, v55, v71, v72);
    swift_bridgeObjectRelease();
    v73 = v120[0];
    if (v120[0])
    {
      v74 = v119;
      v75 = sub_1D26CD848();
      MEMORY[0x1D823A4E4](MEMORY[0x1E0DE9FA0], v75);
      v76 = v107;
      sub_1D26CDC80();
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v76 + 48))(v54, 1, v74) != 1)
      {
        v104 = v73;
        v77 = v119;
        (*(void (**)(void))(v76 + 32))();
        swift_beginAccess();
        swift_bridgeObjectRetain();
        v78 = v115[13];
        v79 = v115[15];
        v80 = v115[17];
        v120[0] = v55;
        v120[1] = v69;
        v120[2] = v77;
        v120[3] = v78;
        v101 = v78;
        v120[4] = v72;
        v120[5] = v79;
        v120[6] = v70;
        v120[7] = v80;
        type metadata accessor for ReloadTaskPair();
      }
      v56 = v114;
      (*(void (**)(char *, uint64_t))(v11 + 8))(v114, v55);
      swift_bridgeObjectRelease();
      result = (*(uint64_t (**)(char *, uint64_t))(v94 + 8))(v54, v95);
    }
    else
    {
      result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v56, v55);
    }
    TupleTypeMetadata2 = v108;
    v57 = v111;
    v24 = v112;
    v52 = v117;
    v51 = v118;
  }
  v63 = *(_QWORD *)(v92 + 8 * v52);
  if (v63)
  {
    ++v62;
    goto LABEL_15;
  }
  v64 = v62 + 2;
  if (v62 + 2 >= v103)
  {
LABEL_23:
    v117 = v52;
    v118 = 0;
    goto LABEL_24;
  }
  v63 = *(_QWORD *)(v92 + 8 * v64);
  if (v63)
  {
    v62 += 2;
LABEL_15:
    v58 = v54;
    v117 = v62;
    v118 = (v63 - 1) & v63;
    v59 = __clz(__rbit64(v63)) + (v62 << 6);
LABEL_11:
    v60 = v106;
    (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v57, *(_QWORD *)(v106 + 48) + *(_QWORD *)(v11 + 72) * v59, v55);
    v61 = 0;
    v57[*(int *)(TupleTypeMetadata2 + 48)] = *(_BYTE *)(*(_QWORD *)(v60 + 56) + v59);
    v54 = v58;
    goto LABEL_25;
  }
  while (1)
  {
    v62 = v64 + 1;
    if (__OFADD__(v64, 1))
      break;
    if (v62 >= v103)
    {
      v118 = 0;
      v61 = 1;
      v117 = v82;
      goto LABEL_25;
    }
    v63 = *(_QWORD *)(v92 + 8 * v62);
    ++v64;
    if (v63)
      goto LABEL_15;
  }
LABEL_37:
  __break(1u);
  return result;
}

void sub_1D261DBD0(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _BYTE *v12;
  uint64_t v13;
  _BYTE *v14;
  int *v15;
  uint64_t v16;
  uint64_t v17;
  _BYTE *v18;
  uint64_t v19;
  _BYTE *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE v25[24];
  uint64_t v26;
  _BYTE *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  _BYTE *v32;
  uint64_t v33;
  uint64_t v34;
  _BYTE *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;

  v34 = a1;
  v4 = (_QWORD *)*v2;
  v5 = sub_1D26CC09C();
  v36 = *(_QWORD *)(v5 - 8);
  v37 = v5;
  v6 = MEMORY[0x1E0C80A78](v5);
  v35 = &v25[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v38 = v4[10];
  v33 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v6);
  v32 = &v25[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = &v25[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v10);
  v14 = &v25[-v13];
  v15 = (int *)type metadata accessor for ReloadConfiguration(0);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = &v25[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v16);
  v20 = &v25[-v19];
  v27 = &v25[-v19];
  v21 = v4[11];
  v26 = v4[12];
  v28 = v4[16];
  CGSizeMake(a2, v21, v26, v28);
  v22 = sub_1D26CB9DC();
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56))(v14, 1, 1, v22);
  sub_1D2534120((uint64_t)v14, (uint64_t)v12, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D2534120((uint64_t)v12, (uint64_t)v18, type metadata accessor for ReloadConfiguration.ReloadType);
  v18[v15[5]] = 1;
  *(_QWORD *)&v18[v15[7]] = 1;
  *(_QWORD *)&v18[v15[6]] = 0xA000000000000030;
  v18[v15[8]] = 1;
  swift_bridgeObjectRetain();
  sub_1D25340E4((uint64_t)v12, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D25341AC((uint64_t)v18, (uint64_t)v20);
  sub_1D25340E4((uint64_t)v14, type metadata accessor for ReloadConfiguration.ReloadType);
  v23 = v4[14];
  v24 = v4[15];
  v29 = v4[13];
  v30 = v24;
  v31 = v4[17];
  v39 = v38;
  v40 = v21;
  v41 = v26;
  v42 = v29;
  v43 = v23;
  v44 = v24;
  v45 = v28;
  v46 = v31;
  type metadata accessor for ReloadTask();
}

void sub_1D261DE28(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  *(_QWORD *)(v8 - 272) = a1;
  v9 = *(_QWORD *)(v8 - 200);
  *(_QWORD *)(v8 - 280) = sub_1D261EAB4();
  v10 = *(_QWORD *)(v8 - 216);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v8 - 208) + 16))(v10, *(_QWORD *)(v8 - 192), v1);
  *(_QWORD *)(v8 - 152) = v4;
  v11 = sub_1D26CD83C();
  swift_bridgeObjectRetain();
  MEMORY[0x1D823A4E4](MEMORY[0x1E0DE9ED0], v11);
  v12 = sub_1D26CDC38();
  sub_1D2534120(*(_QWORD *)(v8 - 256), v7, type metadata accessor for ReloadConfiguration);
  v13 = v9 + qword_1ED961C00;
  v14 = *(_QWORD *)(v8 - 184);
  (*(void (**)(uint64_t, uint64_t, _QWORD))(*(_QWORD *)(v8 - 176) + 16))(v14, v13, *(_QWORD *)(v8 - 168));
  ReloadTask.__allocating_init(identifier:key:variantKeys:configuration:logger:)(*(_QWORD *)(v8 - 280), v10, v12, v7, v14);
  *(_QWORD *)(v8 - 152) = *(_QWORD *)(v8 - 160);
  *(_QWORD *)(v8 - 144) = v6;
  v15 = *(_QWORD *)(v8 - 240);
  *(_QWORD *)(v8 - 136) = v2;
  *(_QWORD *)(v8 - 128) = v15;
  v16 = *(_QWORD *)(v8 - 232);
  *(_QWORD *)(v8 - 120) = v5;
  *(_QWORD *)(v8 - 112) = v16;
  v17 = *(_QWORD *)(v8 - 224);
  *(_QWORD *)(v8 - 104) = v3;
  *(_QWORD *)(v8 - 96) = v17;
  type metadata accessor for ReloadTaskPair();
}

uint64_t sub_1D261DF34()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = ReloadTaskPair.__allocating_init()();
  v2 = swift_retain();
  sub_1D25A9A34(v2);
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D25340E4(v0, type metadata accessor for ReloadConfiguration);
  return v1;
}

uint64_t sub_1D261DF90(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  _QWORD v16[3];

  v5 = *v2;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v2 + qword_1ED961BF8) + 16));
  v6 = (uint64_t *)((char *)v2 + qword_1ED961C08);
  swift_beginAccess();
  v7 = *v6;
  v8 = *(_QWORD *)(v5 + 80);
  v9 = *(_QWORD *)(v5 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](v16, a1, v7, v8, &type metadata for ReloadState, v9);
  swift_bridgeObjectRelease();
  if (LOBYTE(v16[0]) == 5)
    v10 = 2;
  else
    v10 = LOBYTE(v16[0]);
  v11 = (uint64_t *)((char *)v2 + qword_1ED977D88);
  swift_beginAccess();
  v12 = *v11;
  v13 = sub_1D26CD89C();
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v15, a1, v12, v8, v13, v9);
  swift_bridgeObjectRelease();
  result = v15;
  if (v15)
  {
    swift_bridgeObjectRelease();
    result = (*(uint64_t (**)(uint64_t, uint64_t))(*v2 + 1464))(a1, a2);
    if ((result & 1) != 0 && (v10 == 3 || !v10))
      sub_1D261EAF4(a1, a2);
  }
  return result;
}

uint64_t sub_1D261E0F4(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  unsigned __int8 *v13;
  uint64_t v14;
  char *v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t);
  void (*v21)(char *, char *, uint64_t);
  NSObject *v22;
  int v23;
  uint64_t v24;
  void (*v25)(char *, uint64_t);
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  void (*v29)(char *, char *, uint64_t);
  NSObject *v30;
  uint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  _QWORD v38[2];
  uint64_t v39;
  uint64_t v40;
  int v41;
  uint64_t v42;
  void (*v43)(char *, uint64_t, uint64_t);
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47[3];

  v4 = *v2;
  v5 = *(_QWORD *)(*v2 + 80);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v9 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v7);
  v12 = (char *)v38 - v11;
  v13 = (unsigned __int8 *)MEMORY[0x1E0C80A78](v10);
  v15 = (char *)v38 - v14;
  v45 = *v13;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v2 + qword_1ED961BF8) + 16));
  v16 = (uint64_t *)((char *)v2 + qword_1ED961C08);
  swift_beginAccess();
  v17 = *v16;
  v18 = *(_QWORD *)(v4 + 112);
  swift_bridgeObjectRetain();
  v44 = v18;
  MEMORY[0x1D8239074](v47, a2, v17, v5, &type metadata for ReloadState, v18);
  swift_bridgeObjectRelease();
  v19 = LOBYTE(v47[0]);
  v20 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v43 = v20;
  if (LOBYTE(v47[0]) == 5)
  {
    v21 = (void (*)(char *, char *, uint64_t))v20;
    v20(v9, a2, v5);
    v22 = sub_1D26CC084();
    v23 = sub_1D26CDCD4();
    if (os_log_type_enabled(v22, (os_log_type_t)v23))
    {
      v41 = v23;
      v42 = a2;
      v24 = swift_slowAlloc();
      v40 = swift_slowAlloc();
      v47[0] = v40;
      *(_DWORD *)v24 = 136446466;
      v39 = v24 + 4;
      v21(v12, v9, v5);
      v25 = *(void (**)(char *, uint64_t))(v6 + 8);
      v25(v9, v5);
      v26 = sub_1D26CE370();
      v28 = v27;
      v25(v12, v5);
      v46 = sub_1D2537880(v26, v28, v47);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v24 + 12) = 2082;
      __asm { BR              X9 }
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v9, v5);

  }
  else
  {
    v29 = (void (*)(char *, char *, uint64_t))v20;
    v20(v15, a2, v5);
    v30 = sub_1D26CC084();
    v41 = sub_1D26CDCD4();
    if (os_log_type_enabled(v30, (os_log_type_t)v41))
    {
      v40 = (uint64_t)v30;
      v42 = a2;
      v31 = swift_slowAlloc();
      v39 = swift_slowAlloc();
      v47[0] = v39;
      *(_DWORD *)v31 = 136446722;
      v38[1] = v31 + 4;
      v29(v12, v15, v5);
      v32 = *(void (**)(char *, uint64_t))(v6 + 8);
      v32(v15, v5);
      v33 = sub_1D26CE370();
      v35 = v34;
      v32(v12, v5);
      v46 = sub_1D2537880(v33, v35, v47);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v31 + 12) = 2082;
      __asm { BR              X9 }
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v15, v5);

  }
  v36 = v45;
  v43(v12, a2, v5);
  LOBYTE(v46) = v36;
  swift_beginAccess();
  sub_1D26CD89C();
  sub_1D26CD8C0();
  return swift_endAccess();
}

uint64_t sub_1D261E790(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  int *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t result;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  _QWORD v37[6];

  v33 = a2;
  v36 = a1;
  v4 = *(_QWORD *)(*(_QWORD *)v2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v32 = v6;
  v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v9 = MEMORY[0x1E0C80A78](v8);
  v35 = (uint64_t)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v31 - v11;
  v13 = (int *)type metadata accessor for ReloadConfiguration(0);
  v14 = MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v31 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v31 - v17;
  v19 = sub_1D26CB9DC();
  v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 56);
  v34 = v12;
  v20(v12, 1, 1, v19);
  v21 = swift_allocObject();
  *(_QWORD *)(v21 + 16) = v36;
  *(_QWORD *)(v21 + 24) = a2;
  v22 = v21 | 0x2000000000000000;
  v23 = (uint64_t)v12;
  v24 = v35;
  sub_1D2534120(v23, v35, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D2534120(v24, (uint64_t)v16, type metadata accessor for ReloadConfiguration.ReloadType);
  v16[v13[5]] = 1;
  *(_QWORD *)&v16[v13[7]] = 1;
  *(_QWORD *)&v16[v13[6]] = v22;
  v16[v13[8]] = 1;
  swift_bridgeObjectRetain();
  sub_1D25340E4(v24, type metadata accessor for ReloadConfiguration.ReloadType);
  sub_1D25341AC((uint64_t)v16, (uint64_t)v18);
  sub_1D25340E4((uint64_t)v34, type metadata accessor for ReloadConfiguration.ReloadType);
  v25 = sub_1D2536B8C();
  if (!MEMORY[0x1D8239350](v25, v4))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return sub_1D25340E4((uint64_t)v18, type metadata accessor for ReloadConfiguration);
  }
  v26 = 0;
  v27 = MEMORY[0x1E0DEE9C0] + 8;
  while (1)
  {
    v28 = sub_1D26CDB48();
    sub_1D26CDB24();
    if ((v28 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, v25+ ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80))+ *(_QWORD *)(v5 + 72) * v26, v4);
      v29 = v26 + 1;
      if (__OFADD__(v26, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1D26CE0C4();
    if (v32 != 8)
      break;
    v37[0] = result;
    (*(void (**)(char *, _QWORD *, uint64_t))(v5 + 16))(v7, v37, v4);
    swift_unknownObjectRelease();
    v29 = v26 + 1;
    if (__OFADD__(v26, 1))
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_5:
    v37[2] = v2;
    v37[3] = v18;
    v37[4] = v7;
    sub_1D2615628((uint64_t)sub_1D262B24C, (uint64_t)v37, v27);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    ++v26;
    if (v29 == MEMORY[0x1D8239350](v25, v4))
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D261EAB4()
{
  uint64_t v0;
  uint64_t result;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + qword_1ED961BF8) + 16));
  result = *(_QWORD *)(v0 + qword_1ED961BE0);
  if (result == -1)
    __break(1u);
  else
    *(_QWORD *)(v0 + qword_1ED961BE0) = result + 1;
  return result;
}

void sub_1D261EAF4(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v2 + qword_1ED961BF8) + 16));
  sub_1D261EB5C(a1, a2);
}

uint64_t sub_1D261EB2C(uint64_t result)
{
  if (result)
  {
    sub_1D261F4DC(result);
    return swift_release();
  }
  return result;
}

void sub_1D261EB5C(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  _QWORD v17[15];
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD *v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;

  v17[9] = a2;
  v3 = (_QWORD *)*v2;
  v18 = sub_1D26CC09C();
  v17[13] = *(_QWORD *)(v18 - 8);
  MEMORY[0x1E0C80A78](v18);
  v17[14] = (char *)v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5 = type metadata accessor for ReloadConfiguration(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v17[11] = (char *)v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v3[10];
  v19 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v6);
  v17[10] = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v2 + qword_1ED961BF8) + 16));
  v21 = v2;
  swift_beginAccess();
  v10 = v3[11];
  v11 = v3[12];
  v13 = v3[13];
  v12 = v3[14];
  v14 = v3[15];
  v15 = v3[16];
  v16 = v3[17];
  swift_bridgeObjectRetain();
  v24 = v8;
  v25 = v10;
  v23 = v10;
  v22 = v11;
  v26 = v11;
  v27 = v13;
  v20 = v13;
  v28 = v12;
  v29 = v14;
  v17[8] = v14;
  v30 = v15;
  v31 = v16;
  v17[7] = v16;
  type metadata accessor for ReloadTaskPair();
}

void sub_1D261ECF0(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t *v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t *v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v7 = v1;
  MEMORY[0x1D8239074](v1, v2, v4, a1, v3);
  swift_bridgeObjectRelease();
  v8 = *(_QWORD *)(v6 - 248);
  if (v8)
    *(_QWORD *)(v6 - 336) = v8;
  else
    *(_QWORD *)(v6 - 336) = ReloadTaskPair.__allocating_init()();
  v9 = *(_QWORD *)(v6 - 280);
  *(_QWORD *)(v6 - 296) = sub_1D261EAB4();
  v10 = (uint64_t *)(v9 + qword_1ED961C08);
  swift_beginAccess();
  v11 = *v10;
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](v7, v11, v4, &type metadata for ReloadState, v3);
  swift_bridgeObjectRelease();
  *(_DWORD *)(v6 - 380) = *(unsigned __int8 *)(v6 - 248);
  v12 = (uint64_t *)(v9 + qword_1ED977D88);
  swift_beginAccess();
  v13 = *v12;
  v14 = sub_1D26CD89C();
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](v7, v13, v4, v14, v3);
  swift_bridgeObjectRelease();
  v15 = *(_QWORD *)(v6 - 248);
  *(_QWORD *)(v6 - 392) = v15;
  if (v15)
  {
    v16 = (uint64_t *)(v9 + qword_1ED977D88);
    swift_beginAccess();
    v17 = *v16;
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](v7, v17, v4, v14, v3);
    swift_bridgeObjectRelease();
    v18 = *(_QWORD *)(v6 - 248);
    if (v18)
    {
      *(_QWORD *)(v6 - 400) = v3;
      v19 = CGSizeMake(v18, *(_QWORD *)(v6 - 264), *(_QWORD *)(v6 - 272), v5);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(_QWORD *)(v6 - 256) = v19;
      v20 = sub_1D26CD83C();
      MEMORY[0x1D823A4E4](MEMORY[0x1E0DE9ED0], v20);
      *(_QWORD *)(v6 - 408) = v5;
      sub_1D26CDC38();
      v21 = v9 + qword_1ED961C00;
      v22 = *(_QWORD *)(v6 - 304);
      v23 = *(_QWORD *)(v6 - 352);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v22 + 16))(v23, v7, v4);
      *(_QWORD *)(v6 - 416) = v21;
      v24 = sub_1D26CC084();
      v25 = sub_1D26CDD04();
      if (os_log_type_enabled(v24, v25))
      {
        v26 = swift_slowAlloc();
        v27 = swift_slowAlloc();
        *(_QWORD *)(v6 - 424) = v27;
        *(_DWORD *)v26 = 134349314;
        *(_QWORD *)(v6 - 256) = *(_QWORD *)(v6 - 296);
        *(_QWORD *)(v6 - 248) = v27;
        sub_1D26CDF50();
        *(_WORD *)(v26 + 12) = 2082;
        v28 = sub_1D26CE370();
        *(_QWORD *)(v6 - 256) = sub_1D2537880(v28, v29, (uint64_t *)(v6 - 248));
        sub_1D26CDF50();
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v6 - 304) + 8))(v23, v4);
        _os_log_impl(&dword_1D2531000, v24, v25, "Task [%{public}llu] %{public}s Preparing reload", (uint8_t *)v26, 0x16u);
        v30 = *(_QWORD *)(v6 - 424);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v30, -1, -1);
        MEMORY[0x1D823A5E0](v26, -1, -1);

      }
      else
      {

        (*(void (**)(uint64_t, uint64_t))(v22 + 8))(v23, v4);
      }
      v31 = *(_QWORD *)(v6 - 368);
      v32 = *(_QWORD *)(v6 - 376);
      sub_1D264ABA8();
      swift_bridgeObjectRelease();
      v33 = *(_QWORD *)(v6 - 264);
      *(_QWORD *)(v6 - 248) = v4;
      *(_QWORD *)(v6 - 240) = v33;
      v34 = *(_QWORD *)(v6 - 288);
      *(_QWORD *)(v6 - 232) = *(_QWORD *)(v6 - 272);
      *(_QWORD *)(v6 - 224) = v34;
      *(_QWORD *)(v6 - 216) = *(_QWORD *)(v6 - 400);
      *(_QWORD *)(v6 - 208) = v31;
      *(_QWORD *)(v6 - 200) = *(_QWORD *)(v6 - 408);
      *(_QWORD *)(v6 - 192) = v32;
      type metadata accessor for ReloadTaskPairResolver();
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
}

void sub_1D261F258(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  __int128 v19;
  uint64_t v20;
  uint64_t v21;
  __int128 v22;
  uint64_t v23;
  __int128 v24;
  uint64_t v25;
  __int128 v26;
  __int128 v27;
  uint64_t v28;

  v5 = a1;
  v6 = *v3;
  v7 = *(_QWORD *)(*v3 + 80);
  *(_QWORD *)&v22 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v3 + qword_1ED961BF8) + 16));
  v10 = sub_1D2686830();
  if (v10 && (v11 = v10, (v12 = sub_1D2686830()) != 0))
  {
    v21 = v5;
    v13 = *(_QWORD *)(v11 + *(_QWORD *)(*(_QWORD *)v11 + 160));
    if (v13 == *(_QWORD *)(v12 + *(_QWORD *)(*(_QWORD *)v12 + 160)))
    {
      v14 = sub_1D2686838();
      if (v14)
      {
        v15 = v14;
        v16 = sub_1D2686838();
        if (v16)
        {
          v17 = *(_QWORD *)(v15 + *(_QWORD *)(*(_QWORD *)v15 + 160));
          if (v17 != *(_QWORD *)(v16 + *(_QWORD *)(*(_QWORD *)v16 + 160)))
          {
            swift_retain();
            swift_retain();
            swift_retain();
            swift_retain();
            sub_1D25CDCC4(v17);
            swift_release();
            swift_release();
            swift_release();
            swift_release();
          }
        }
      }
    }
    else
    {
      swift_retain();
      swift_retain();
      sub_1D25CDCC4(v13);
      if (sub_1D2686838())
      {
        swift_retain();
        sub_1D25CDCC4(v13);
        swift_release();
      }
      swift_release();
    }
    v5 = v21;
  }
  else if (sub_1D2686830())
  {
    swift_retain();
  }
  (*(void (**)(char *, uint64_t, uint64_t))(v22 + 16))(v9, v5, v7);
  v28 = a3;
  swift_beginAccess();
  v18 = *(_QWORD *)(v6 + 104);
  swift_retain();
  v23 = v7;
  v24 = *(_OWORD *)(v6 + 88);
  v25 = v18;
  v19 = *(_OWORD *)(v6 + 128);
  v22 = *(_OWORD *)(v6 + 112);
  v26 = v22;
  v27 = v19;
  type metadata accessor for ReloadTaskPair();
}

uint64_t sub_1D261F488()
{
  uint64_t v0;

  sub_1D26CD89C();
  sub_1D26CD8C0();
  swift_endAccess();
  return v0;
}

void sub_1D261F4DC(uint64_t a1)
{
  _QWORD *v1;
  _QWORD *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  uint64_t v10;
  _BYTE *v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  NSObject *v17;
  os_log_type_t v18;
  uint8_t *v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  const char *v23;
  int v24;
  uint64_t v25;
  unint64_t v26;
  NSObject *v27;
  os_log_type_t v28;
  int v29;
  uint64_t v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  uint64_t v36;
  void *v37;
  _BYTE v38[12];
  int v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t aBlock[6];

  v2 = v1;
  v4 = *v1;
  v5 = sub_1D26CD074();
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v38[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v9 = sub_1D26CD0C8();
  v42 = *(_QWORD *)(v9 - 8);
  v43 = v9;
  MEMORY[0x1E0C80A78](v9);
  v11 = &v38[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v1 + qword_1ED961BF8) + 16));
  v12 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 144);
  v13 = (_QWORD *)((char *)v2 + qword_1ED961C08);
  swift_beginAccess();
  v14 = *v13;
  v15 = *(_QWORD *)(v4 + 80);
  v16 = *(_QWORD *)(v4 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](aBlock, v12, v14, v15, &type metadata for ReloadState, v16);
  swift_bridgeObjectRelease();
  if (LOBYTE(aBlock[0]) == 3)
  {
    swift_retain_n();
    v17 = sub_1D26CC084();
    v18 = sub_1D26CDD04();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136446210;
      v21 = sub_1D25CCE74();
      v44 = sub_1D2537880(v21, v22, aBlock);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      v23 = "%{public}s Reload cannot be scheduled as store is blocked";
LABEL_7:
      _os_log_impl(&dword_1D2531000, v17, v18, v23, v19, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v20, -1, -1);
      MEMORY[0x1D823A5E0](v19, -1, -1);

      return;
    }
LABEL_10:
    swift_release_n();

    return;
  }
  v24 = *((unsigned __int8 *)v2 + qword_1ED9634D8);
  swift_retain_n();
  if (v24 == 1)
  {
    v17 = sub_1D26CC084();
    v18 = sub_1D26CDD04();
    if (os_log_type_enabled(v17, v18))
    {
      v19 = (uint8_t *)swift_slowAlloc();
      v20 = swift_slowAlloc();
      aBlock[0] = v20;
      *(_DWORD *)v19 = 136446210;
      v25 = sub_1D25CCE74();
      v44 = sub_1D2537880(v25, v26, aBlock);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      v23 = "%{public}s Reload cannot be scheduled as system is migrating";
      goto LABEL_7;
    }
    goto LABEL_10;
  }
  swift_retain_n();
  v27 = sub_1D26CC084();
  v28 = sub_1D26CDD04();
  v29 = v28;
  if (os_log_type_enabled(v27, v28))
  {
    v30 = swift_slowAlloc();
    v40 = swift_slowAlloc();
    aBlock[0] = v40;
    *(_DWORD *)v30 = 136446466;
    v39 = v29;
    v31 = sub_1D25CCE74();
    v44 = sub_1D2537880(v31, v32, aBlock);
    v41 = v6;
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v30 + 12) = 2082;
    swift_release();
    v33 = ReloadConfiguration.description.getter();
    v44 = sub_1D2537880(v33, v34, aBlock);
    v6 = v41;
    sub_1D26CDF50();
    swift_release();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v27, (os_log_type_t)v39, "%{public}s Scheduling reload with configuration: %{public}s", (uint8_t *)v30, 0x16u);
    v35 = v40;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v35, -1, -1);
    MEMORY[0x1D823A5E0](v30, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  if (qword_1ED9623C8 != -1)
    swift_once();
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = a1;
  *(_QWORD *)(v36 + 24) = v2;
  aBlock[4] = (uint64_t)sub_1D262BD5C;
  aBlock[5] = v36;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1D25351AC;
  aBlock[3] = (uint64_t)&block_descriptor_63;
  v37 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v44 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v11, v8, v37);
  _Block_release(v37);
  (*(void (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
  (*(void (**)(_BYTE *, uint64_t))(v42 + 8))(v11, v43);
  swift_release();
}

uint64_t sub_1D261FB20(uint64_t a1, void *a2, char a3)
{
  _QWORD *v3;
  _QWORD *v4;
  BOOL v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  _BYTE *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  os_unfair_lock_s *v19;
  os_unfair_lock_s *v20;
  void *v21;
  uint64_t v22;
  uint64_t v23;
  char v24;
  uint64_t v25;
  void *v26;
  _BYTE *v27;
  _BYTE *v28;
  uint64_t v29;
  _BYTE v31[12];
  int v32;
  _BYTE *v33;
  _BYTE *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  _QWORD aBlock[7];

  v4 = v3;
  v32 = a3 & 1;
  v7 = v32 == 0;
  v8 = sub_1D26CD074();
  v37 = *(_QWORD *)(v8 - 8);
  v38 = v8;
  MEMORY[0x1E0C80A78](v8);
  v34 = &v31[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v10 = sub_1D26CD0C8();
  v35 = *(_QWORD *)(v10 - 8);
  v36 = v10;
  MEMORY[0x1E0C80A78](v10);
  v33 = &v31[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  MEMORY[0x1E0C80A78](v12);
  v14 = &v31[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v15 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(_BYTE *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 56))(v14, 1, 1, v15);
  v16 = swift_allocObject();
  v17 = swift_allocObject();
  *(_BYTE *)(v17 + 16) = 0;
  *(_BYTE *)(v16 + 16) = v7;
  v18 = *(_QWORD *)((char *)v4 + qword_1ED961BF8);
  v19 = *(os_unfair_lock_s **)(v18 + 16);
  swift_retain();
  v20 = v19;
  v21 = a2;
  os_unfair_lock_lock(v20);
  v22 = a1;
  v23 = a1;
  v24 = v32;
  sub_1D2626BB8(v4, v23, (_BYTE *)(v17 + 16), (_BYTE *)(v16 + 16), (uint64_t)v14, (uint64_t)v21, v32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v18 + 16));
  swift_release();
  if (qword_1ED9623D0 != -1)
    swift_once();
  v25 = swift_allocObject();
  *(_QWORD *)(v25 + 16) = v16;
  *(_QWORD *)(v25 + 24) = v22;
  *(_QWORD *)(v25 + 32) = v4;
  *(_QWORD *)(v25 + 40) = v17;
  *(_QWORD *)(v25 + 48) = v21;
  *(_BYTE *)(v25 + 56) = v24 != 0;
  aBlock[4] = sub_1D262BC7C;
  aBlock[5] = v25;
  aBlock[0] = MEMORY[0x1E0C809B0];
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1D25351AC;
  aBlock[3] = &block_descriptor_9;
  v26 = _Block_copy(aBlock);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1D262BC0C(v21, v24 != 0);
  v27 = v33;
  _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
  v39 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
  sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
  v28 = v34;
  v29 = v38;
  sub_1D26CDFE0();
  MEMORY[0x1D823956C](0, v27, v28, v26);
  _Block_release(v26);
  (*(void (**)(_BYTE *, uint64_t))(v37 + 8))(v28, v29);
  (*(void (**)(_BYTE *, uint64_t))(v35 + 8))(v27, v36);
  swift_release();
  swift_release();
  swift_release();
  return sub_1D253703C((uint64_t)v14, qword_1ED961CE8);
}

uint64_t sub_1D261FEB4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  _QWORD *v4;
  _QWORD *v5;
  _QWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t TupleTypeMetadata2;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  void (*v55)(uint64_t, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  uint64_t *v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  void *v64;
  uint64_t v65;
  char *v66;
  uint64_t v67;
  uint64_t v68;
  unint64_t v69;
  uint64_t v70;
  unint64_t v71;
  uint64_t v72;
  NSObject *v73;
  os_log_type_t v74;
  BOOL v75;
  _QWORD *v76;
  uint8_t *v77;
  uint64_t v78;
  uint64_t v79;
  unint64_t v80;
  void *v81;
  uint64_t v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t *v85;
  void *v86;
  uint64_t v87;
  char v88;
  unsigned int (*v89)(_QWORD, _QWORD, _QWORD);
  void *v90;
  id v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  char *v97;
  char *v98;
  uint64_t v99;
  uint64_t v100;
  unint64_t v101;
  char *v102;
  char *v103;
  int64_t v104;
  unint64_t v105;
  uint64_t v106;
  uint64_t v107;
  unint64_t v108;
  uint64_t v109;
  uint64_t v110;
  void (*v111)(char *, char *, uint64_t);
  char *v112;
  char *v113;
  char *v114;
  char *v115;
  uint64_t v116;
  void (*v117)(uint64_t *, _QWORD);
  uint64_t v118;
  uint64_t v119;
  char *v120;
  void (*v121)(char *, char *, uint64_t);
  uint64_t v122;
  char *v123;
  char *v124;
  void (*v125)(uint64_t *, _QWORD);
  uint64_t v126;
  int v127;
  char *v128;
  char *v129;
  void (*v130)(uint64_t *, _QWORD);
  uint64_t v131;
  uint64_t v132;
  uint64_t v133;
  uint64_t v134;
  char v135;
  char *v136;
  uint64_t v137;
  char v138;
  id v139;
  uint64_t v140;
  void *v141;
  void (*v142)(char *, uint64_t);
  id v143;
  uint64_t v144;
  NSObject *v145;
  os_log_type_t v146;
  uint8_t *v147;
  uint64_t v148;
  uint64_t v149;
  unint64_t v150;
  uint8_t *v151;
  uint64_t v152;
  char *v153;
  char *v154;
  char *v155;
  uint64_t v156;
  char *v157;
  uint64_t v158;
  char *v159;
  uint64_t v160;
  uint64_t v161;
  uint64_t v162;
  void (*v163)(char *, uint64_t);
  char *v164;
  uint64_t v165;
  char v166;
  void (*v167)(char *, uint64_t, uint64_t);
  uint64_t v168;
  NSObject *v169;
  os_log_type_t v170;
  uint8_t *v171;
  uint64_t v172;
  uint64_t v173;
  unint64_t v174;
  uint64_t v175;
  uint64_t v176;
  uint64_t v177;
  uint64_t v178;
  NSObject *v179;
  os_log_type_t v180;
  uint64_t v181;
  uint64_t v182;
  unint64_t v183;
  uint64_t v185;
  char *v186;
  uint64_t v187;
  uint64_t v188;
  char *v189;
  char *v190;
  uint64_t v191;
  uint64_t v192;
  char *v193;
  char *v194;
  uint64_t v195;
  uint64_t v196;
  uint64_t v197;
  uint64_t v198;
  _QWORD *v199;
  uint64_t v200;
  uint64_t v201;
  uint64_t v202;
  uint64_t v203;
  uint64_t v204;
  uint64_t v205;
  uint64_t v206;
  char *v207;
  uint64_t v208;
  uint64_t v209;
  int64_t v210;
  uint64_t v211;
  unint64_t v212;
  char *v213;
  char *v214;
  uint64_t v215;
  unint64_t v216;
  char *v217;
  uint64_t v218;
  char *v219;
  char *v220;
  char *v221;
  char *v222;
  char *v223;
  char *v224;
  uint64_t v225;
  char *v226;
  void *v227;
  uint64_t v228;
  uint64_t v229;
  uint64_t v230;
  char *v231;
  char *v232;
  uint64_t v233;
  uint64_t v234;
  uint64_t v235;
  uint64_t AssociatedTypeWitness;
  uint64_t *v237;
  void (*v238)(char *, uint64_t *, uint64_t);
  uint64_t v239;
  uint64_t v240;
  uint64_t v241;
  char v242;
  uint64_t v243[5];

  v5 = v4;
  v10 = (_QWORD *)*v4;
  v233 = sub_1D26CB55C();
  v228 = *(_QWORD *)(v233 - 8);
  MEMORY[0x1E0C80A78](v233);
  v232 = (char *)&v185 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  v13 = MEMORY[0x1E0C80A78](v12);
  v237 = (uint64_t *)((char *)&v185 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  v15 = MEMORY[0x1E0C80A78](v13);
  v197 = (uint64_t)&v185 - v16;
  MEMORY[0x1E0C80A78](v15);
  v202 = (uint64_t)&v185 - v17;
  v192 = sub_1D26CD488();
  v191 = *(_QWORD *)(v192 - 8);
  v18 = MEMORY[0x1E0C80A78](v192);
  v190 = (char *)&v185 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v18);
  v189 = (char *)&v185 - v20;
  v21 = v10[11];
  v22 = v10[12];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v188 = sub_1D26CDF38();
  v187 = *(_QWORD *)(v188 - 8);
  v24 = MEMORY[0x1E0C80A78](v188);
  v194 = (char *)&v185 - v25;
  v195 = TupleTypeMetadata2;
  v196 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  v26 = MEMORY[0x1E0C80A78](v24);
  v193 = (char *)&v185 - v27;
  v28 = v10[10];
  v200 = *(_QWORD *)(v28 - 8);
  MEMORY[0x1E0C80A78](v26);
  v207 = (char *)&v185 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v31 = MEMORY[0x1E0C80A78](v30);
  v186 = (char *)&v185 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v31);
  v34 = (char *)&v185 - v33;
  v230 = v10[17];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v235 = sub_1D26CDF38();
  v234 = *(_QWORD *)(v235 - 8);
  v35 = MEMORY[0x1E0C80A78](v235);
  v223 = (char *)&v185 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  v37 = MEMORY[0x1E0C80A78](v35);
  v231 = (char *)&v185 - v38;
  v225 = *(_QWORD *)(v21 - 8);
  v39 = MEMORY[0x1E0C80A78](v37);
  v214 = (char *)&v185 - ((v40 + 15) & 0xFFFFFFFFFFFFFFF0);
  v41 = MEMORY[0x1E0C80A78](v39);
  v213 = (char *)&v185 - v42;
  v43 = MEMORY[0x1E0C80A78](v41);
  v220 = (char *)&v185 - v44;
  v45 = MEMORY[0x1E0C80A78](v43);
  v219 = (char *)&v185 - v46;
  v47 = MEMORY[0x1E0C80A78](v45);
  v222 = (char *)&v185 - v48;
  v49 = MEMORY[0x1E0C80A78](v47);
  v221 = (char *)&v185 - v50;
  MEMORY[0x1E0C80A78](v49);
  v226 = (char *)&v185 - v51;
  v52 = sub_1D26CDF38();
  MEMORY[0x1E0C80A78](v52);
  v224 = (char *)&v185 - v53;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v5 + qword_1ED961BF8) + 16));
  v54 = type metadata accessor for ReloadConfiguration(0);
  v201 = *(_QWORD *)(v54 - 8);
  v55 = *(void (**)(uint64_t, uint64_t, uint64_t))(v201 + 56);
  v203 = a4;
  v204 = v54;
  v55(a4, 1, 1);
  v242 = 5;
  v205 = a1;
  v208 = v28;
  v227 = a2;
  if ((a3 & 1) != 0)
  {
    AssociatedTypeWitness = (uint64_t)v10;
    v72 = (uint64_t)v5 + qword_1ED961C00;
    swift_retain_n();
    sub_1D262BC0C(a2, 1);
    v73 = sub_1D26CC084();
    v74 = sub_1D26CDD04();
    v75 = os_log_type_enabled(v73, v74);
    v76 = v5;
    v235 = v72;
    if (v75)
    {
      v77 = (uint8_t *)swift_slowAlloc();
      v78 = swift_slowAlloc();
      v243[0] = v78;
      *(_DWORD *)v77 = 136446210;
      v79 = sub_1D25CCE74();
      v239 = sub_1D2537880(v79, v80, v243);
      v81 = v227;
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v73, v74, "%{public}s Reload failure", v77, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v78, -1, -1);
      MEMORY[0x1D823A5E0](v77, -1, -1);
    }
    else
    {
      v81 = a2;
      swift_release_n();
    }

    v82 = a1;
    v83 = v203;
    v84 = v201;
    v85 = (uint64_t *)(a1 + *(_QWORD *)(*(_QWORD *)a1 + 144));
    v238 = *(void (**)(char *, uint64_t *, uint64_t))(v200 + 16);
    v238(v207, v85, v208);
    LOBYTE(v239) = 2;
    swift_beginAccess();
    v206 = *(_QWORD *)(AssociatedTypeWitness + 112);
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    v86 = (void *)sub_1D26CB760();
    v87 = v202;
    sub_1D2621A24(v202, v243, v82, v86);

    sub_1D253703C(v83, qword_1ED961CE8);
    v88 = v243[0];
    sub_1D262BBC4(v87, v83);
    v242 = v88;
    v89 = (unsigned int (*)(_QWORD, _QWORD, _QWORD))v237;
    sub_1D262BB7C(v83, (uint64_t)v237);
    if ((*(unsigned int (**)(_QWORD, uint64_t, uint64_t))(v84 + 48))(v89, 1, v204) != 1)
    {
      sub_1D262BC18(v81, 1);
      sub_1D253703C((uint64_t)v89, qword_1ED961CE8);
      goto LABEL_68;
    }
    sub_1D253703C((uint64_t)v89, qword_1ED961CE8);
    v90 = (void *)sub_1D26CB760();
    v91 = objc_msgSend(v90, sel_domain);
    v92 = sub_1D26CD938();
    v94 = v93;

    if (v92 == sub_1D26CB4FC() && v94 == v95)
    {
      swift_bridgeObjectRelease_n();
      v96 = v233;
      v97 = v232;
    }
    else
    {
      v138 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v96 = v233;
      v97 = v232;
      if ((v138 & 1) == 0)
      {
        sub_1D262BC18(v81, 1);

LABEL_67:
        v82 = v205;
LABEL_68:
        v166 = v242;
        v167 = (void (*)(char *, uint64_t, uint64_t))v238;
        if (v242 != 5)
          goto LABEL_69;
LABEL_73:
        __break(1u);
LABEL_74:
        __break(1u);
LABEL_75:
        __break(1u);
LABEL_76:
        __break(1u);
        JUMPOUT(0x1D2621988);
      }
    }
    v237 = v85;
    v139 = objc_msgSend(v90, sel_code);
    sub_1D26CB508();
    v140 = sub_1D26CB550();
    v141 = v90;
    v142 = *(void (**)(char *, uint64_t))(v228 + 8);
    v142(v97, v96);
    if (v139 == (id)v140
      || (v143 = objc_msgSend(v141, sel_code), sub_1D26CB514(), v144 = sub_1D26CB550(), v142(v97, v96), v143 == (id)v144))
    {
      v82 = v205;
      swift_retain();
      v145 = sub_1D26CC084();
      v146 = sub_1D26CDD04();
      if (os_log_type_enabled(v145, v146))
      {
        v147 = (uint8_t *)swift_slowAlloc();
        v148 = swift_slowAlloc();
        v243[0] = v148;
        v199 = v76;
        *(_DWORD *)v147 = 136446210;
        v149 = sub_1D26CE370();
        v239 = sub_1D2537880(v149, v150, v243);
        sub_1D26CDF50();
        swift_release();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v145, v146, "%{public}s Blocked because of keybag", v147, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v148, -1, -1);
        v151 = v147;
        v82 = v205;
        MEMORY[0x1D823A5E0](v151, -1, -1);
        sub_1D262BC18(v81, 1);
      }
      else
      {
        sub_1D262BC18(v81, 1);
        swift_release();
      }

      v166 = 3;
      v242 = 3;
      v167 = (void (*)(char *, uint64_t, uint64_t))v238;
      goto LABEL_69;
    }
    sub_1D262BC18(v81, 1);

    goto LABEL_67;
  }
  v56 = v34;
  v57 = a1 + *(_QWORD *)(*(_QWORD *)a1 + 144);
  v199 = v5;
  v58 = (_QWORD *)((char *)v5 + qword_1ED977D88);
  swift_beginAccess();
  v59 = *v58;
  v60 = v10[16];
  v61 = sub_1D26CD89C();
  v62 = v10[14];
  swift_bridgeObjectRetain();
  v198 = v57;
  v218 = v61;
  v206 = v62;
  MEMORY[0x1D8239074](v243, v57, v59, v28, v61, v62);
  swift_bridgeObjectRelease();
  if (!v243[0])
    goto LABEL_76;
  v241 = v243[0];
  v63 = CGSizeMake(v243[0], v21, v22, v60);
  v64 = v227;
  v65 = v21;
  v66 = v231;
  v67 = v22;
  v68 = v225;
  v229 = v67;
  if ((v63 & 0xC000000000000001) != 0)
  {
    v69 = sub_1D26CE1A8() | 0x8000000000000000;
    swift_bridgeObjectRetain();
    v211 = 0;
    v70 = 0;
    v215 = 0;
    v71 = 0;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE19C();
    v69 = v243[0];
    v211 = v243[1];
    v70 = v243[2];
    v215 = v243[3];
    v71 = v243[4];
  }
  v98 = v226;
  v99 = v60;
  v209 = v69 & 0x7FFFFFFFFFFFFFFFLL;
  v185 = v70;
  v210 = (unint64_t)(v70 + 64) >> 6;
  v212 = 0x80000001D26E2A30;
  v217 = v56;
  v100 = v218;
  v228 = v99;
  v216 = v69;
  while (1)
  {
    if ((v69 & 0x8000000000000000) == 0)
    {
      if (v71)
      {
        v233 = (v71 - 1) & v71;
        v101 = __clz(__rbit64(v71)) | (v215 << 6);
LABEL_38:
        v108 = *(_QWORD *)(v69 + 48) + *(_QWORD *)(v68 + 72) * v101;
        v102 = v224;
        (*(void (**)(char *, unint64_t, uint64_t))(v68 + 16))(v224, v108, v65);
        v103 = v221;
        goto LABEL_39;
      }
      v104 = v215 + 1;
      if (!__OFADD__(v215, 1))
      {
        if (v104 >= v210)
          goto LABEL_47;
        v105 = *(_QWORD *)(v211 + 8 * v104);
        v106 = v215 + 1;
        if (!v105)
        {
          v106 = v215 + 2;
          if (v215 + 2 >= v210)
            goto LABEL_47;
          v105 = *(_QWORD *)(v211 + 8 * v106);
          if (!v105)
          {
            v106 = v215 + 3;
            if (v215 + 3 >= v210)
              goto LABEL_47;
            v105 = *(_QWORD *)(v211 + 8 * v106);
            if (!v105)
            {
              v106 = v215 + 4;
              if (v215 + 4 >= v210)
                goto LABEL_47;
              v105 = *(_QWORD *)(v211 + 8 * v106);
              if (!v105)
              {
                v106 = v215 + 5;
                if (v215 + 5 >= v210)
                  goto LABEL_47;
                v105 = *(_QWORD *)(v211 + 8 * v106);
                if (!v105)
                {
                  v107 = v215 + 6;
                  do
                  {
                    if (v210 == v107)
                      goto LABEL_47;
                    v105 = *(_QWORD *)(v211 + 8 * v107++);
                  }
                  while (!v105);
                  v106 = v107 - 1;
                }
              }
            }
          }
        }
        v233 = (v105 - 1) & v105;
        v101 = __clz(__rbit64(v105)) + (v106 << 6);
        v215 = v106;
        goto LABEL_38;
      }
      __break(1u);
      goto LABEL_73;
    }
    v233 = v71;
    if (!sub_1D26CE1C0())
      goto LABEL_47;
    v102 = v224;
    sub_1D26CE3AC();
    swift_unknownObjectRelease();
    v66 = v231;
    v103 = v221;
    v99 = v228;
LABEL_39:
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v68 + 56))(v102, 0, 1, v65);
    (*(void (**)(char *, char *, uint64_t))(v68 + 32))(v98, v102, v65);
    v109 = v229;
    if (v64)
      MEMORY[0x1D8239074](v98, v64, v65, AssociatedTypeWitness, v99);
    else
      (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 56))(v66, 1, 1);
    v110 = v68;
    v111 = *(void (**)(char *, char *, uint64_t))(v68 + 16);
    v111(v103, v98, v65);
    v112 = v223;
    (*(void (**)(char *, char *, uint64_t))(v234 + 16))(v223, v66, v235);
    v113 = v222;
    v232 = (char *)v111;
    v111(v222, v103, v65);
    v238 = (void (*)(char *, uint64_t *, uint64_t))sub_1D26CD86C();
    v114 = v98;
    v115 = v103;
    v116 = v65;
    v117 = (void (*)(uint64_t *, _QWORD))sub_1D26CD878();
    v237 = *(uint64_t **)(*(_QWORD *)(v109 - 8) + 48);
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v237)(v118, 1, v109) == 1)
      goto LABEL_74;
    v119 = v230;
    (*(void (**)(char *, uint64_t, uint64_t))(v230 + 24))(v112, v109, v230);
    v117(&v239, 0);
    v68 = *(_QWORD *)(v110 + 8);
    ((void (*)(char *, uint64_t))v68)(v113, v116);
    ((void (*)(char *, uint64_t))v68)(v115, v116);
    v120 = v219;
    v121 = (void (*)(char *, char *, uint64_t))v232;
    ((void (*)(char *, char *, uint64_t))v232)(v219, v114, v116);
    v122 = sub_1D26CB9DC();
    v123 = v217;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v122 - 8) + 56))(v217, 1, 1, v122);
    v124 = v220;
    v121(v220, v120, v116);
    v125 = (void (*)(uint64_t *, _QWORD))sub_1D26CD878();
    if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v237)(v126, 1, v109) == 1)
      goto LABEL_75;
    (*(void (**)(char *, uint64_t, uint64_t))(v119 + 48))(v123, v109, v119);
    v125(&v239, 0);
    ((void (*)(char *, uint64_t))v68)(v124, v116);
    ((void (*)(char *, uint64_t))v68)(v120, v116);
    v66 = v231;
    v127 = (*(uint64_t (**)(char *, uint64_t))(*(_QWORD *)(AssociatedTypeWitness - 8) + 48))(v231, 1);
    v65 = v116;
    v100 = v218;
    v98 = v226;
    if (v127 == 1)
      break;
LABEL_16:
    ((void (*)(char *, uint64_t))v68)(v98, v65);
    (*(void (**)(char *, uint64_t))(v234 + 8))(v66, v235);
    v64 = v227;
    v68 = v225;
    v99 = v228;
    v69 = v216;
    v71 = v233;
  }
  v128 = v213;
  v121(v213, v226, v65);
  v129 = v214;
  v121(v214, v128, v65);
  v130 = (void (*)(uint64_t *, _QWORD))sub_1D26CD878();
  v131 = v229;
  if (((unsigned int (*)(uint64_t, uint64_t, uint64_t))v237)(v132, 1, v229) != 1)
  {
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v230 + 72))(0xD000000000000013, v212, v131);
    v130(&v239, 0);
    ((void (*)(char *, uint64_t))v68)(v129, v65);
    ((void (*)(char *, uint64_t))v68)(v128, v65);
    v66 = v231;
    goto LABEL_16;
  }
  __break(1u);
LABEL_47:
  v133 = v68;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v68 + 56))(v224, 1, 1, v65);
  sub_1D2592A28();
  v238 = *(void (**)(char *, uint64_t *, uint64_t))(v200 + 16);
  v238(v207, (uint64_t *)v198, v208);
  v240 = v241;
  swift_beginAccess();
  sub_1D26CD89C();
  swift_bridgeObjectRetain();
  sub_1D26CD8C0();
  swift_endAccess();
  v134 = v205 + *(_QWORD *)(*(_QWORD *)v205 + 168);
  v239 = *(_QWORD *)(v134 + *(int *)(v204 + 24));
  v240 = 0xA000000000000030;
  static ReloadConfiguration.ReloadReason.== infix(_:_:)((uint64_t)&v239);
  if ((v135 & 1) == 0)
  {
    v239 = v241;
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0E0], v100);
    v136 = v194;
    sub_1D26CDC80();
    v137 = v195;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v196 + 48))(v136, 1, v195) == 1)
    {
      (*(void (**)(char *, uint64_t))(v187 + 8))(v136, v188);
    }
    else
    {
      v152 = *(int *)(v137 + 48);
      v153 = v193;
      v154 = &v193[v152];
      v155 = &v136[v152];
      (*(void (**)(char *, char *, uint64_t))(v133 + 32))(v193, v136, v65);
      v156 = v229;
      (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v229 - 8) + 32))(v154, v155, v229);
      v157 = v189;
      (*(void (**)(uint64_t))(v230 + 88))(v156);
      v158 = v191;
      v159 = v190;
      v160 = v192;
      (*(void (**)(char *, _QWORD, uint64_t))(v191 + 104))(v190, *MEMORY[0x1E0CF0408], v192);
      sub_1D25369B0(&qword_1ED963850, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0430], MEMORY[0x1E0CF0458]);
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      v161 = v239;
      v162 = v240;
      v163 = *(void (**)(char *, uint64_t))(v158 + 8);
      v163(v159, v160);
      v163(v157, v160);
      if (v161 == v162)
      {
        v238(v207, (uint64_t *)v198, v208);
        v164 = v186;
        sub_1D26CB9B8();
        v165 = sub_1D26CB9DC();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v165 - 8) + 56))(v164, 0, 1, v165);
        swift_beginAccess();
        sub_1D26CD89C();
        sub_1D26CD8C0();
        swift_endAccess();
      }
      (*(void (**)(char *, uint64_t))(v196 + 8))(v153, v137);
    }
  }
  v168 = v205;
  swift_retain_n();
  v169 = sub_1D26CC084();
  v170 = sub_1D26CDD04();
  if (os_log_type_enabled(v169, v170))
  {
    v171 = (uint8_t *)swift_slowAlloc();
    v172 = swift_slowAlloc();
    v239 = v172;
    *(_DWORD *)v171 = 136446210;
    v173 = sub_1D25CCE74();
    v240 = sub_1D2537880(v173, v174, &v239);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v169, v170, "%{public}s Reload success", v171, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v172, -1, -1);
    MEMORY[0x1D823A5E0](v171, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v82 = v168;
  v175 = v203;
  v176 = v198;
  v167 = (void (*)(char *, uint64_t, uint64_t))v238;
  v238(v207, (uint64_t *)v198, v208);
  LOBYTE(v240) = 1;
  swift_beginAccess();
  sub_1D26CD89C();
  sub_1D26CD8C0();
  swift_endAccess();
  v177 = v202;
  sub_1D26219A4(v176, v241, v134);
  swift_bridgeObjectRelease();
  sub_1D253703C(v175, qword_1ED961CE8);
  sub_1D262BBC4(v177, v175);
  v178 = v197;
  sub_1D262BB7C(v175, v197);
  v166 = (*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v201 + 48))(v178, 1, v204) == 1;
  sub_1D253703C(v178, qword_1ED961CE8);
  v242 = v166;
LABEL_69:
  swift_retain_n();
  v179 = sub_1D26CC084();
  v180 = sub_1D26CDD04();
  if (os_log_type_enabled(v179, v180))
  {
    v181 = swift_slowAlloc();
    v239 = swift_slowAlloc();
    *(_DWORD *)v181 = 136446466;
    v182 = sub_1D25CCE74();
    v241 = sub_1D2537880(v182, v183, &v239);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    *(_WORD *)(v181 + 12) = 2082;
    swift_beginAccess();
    __asm { BR              X9 }
  }
  swift_release_n();

  v167(v207, v82 + *(_QWORD *)(*(_QWORD *)v82 + 144), v208);
  LOBYTE(v240) = v166;
  swift_beginAccess();
  sub_1D26CD89C();
  sub_1D26CD8C0();
  return swift_endAccess();
}

uint64_t sub_1D26219A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v3 + qword_1ED961BF8) + 16));
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)v3 + 1480))(a1, a3);
  return sub_1D264ABD0();
}

uint64_t sub_1D2621A24(uint64_t a1, _BYTE *a2, uint64_t a3, void *a4)
{
  uint64_t *v4;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  char *v20;
  uint64_t v21;
  char *v22;
  uint64_t v23;
  unint64_t v24;
  unint64_t v25;
  uint64_t v26;
  unint64_t v27;
  id v28;
  id v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  char *v33;
  char *v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  id v40;
  uint64_t v41;
  char *v42;
  uint64_t v43;
  unint64_t v44;
  unint64_t v45;
  id v46;
  void *v47;
  id v48;
  uint64_t v49;
  unint64_t v50;
  id v51;
  char v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t result;
  char *v58;
  char *v59;
  char *v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  id v64;
  char *v65;
  uint64_t v66;
  uint64_t v67;
  int v68;
  uint64_t v69;
  _BYTE *v70;
  uint64_t v71;
  uint64_t v72;
  unint64_t v73;

  v69 = a1;
  v70 = a2;
  v62 = *v4;
  v63 = sub_1D26CB9DC();
  v61 = *(_QWORD *)(v63 - 8);
  MEMORY[0x1E0C80A78](v63);
  v60 = (char *)&v58 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v58 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = type metadata accessor for ReloadConfiguration(0);
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  v16 = MEMORY[0x1E0C80A78](v15);
  v18 = (char *)&v58 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v20 = (char *)&v58 - v19;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(uint64_t *)((char *)v4 + qword_1ED961BF8) + 16));
  v21 = *(_QWORD *)(*(_QWORD *)a3 + 144);
  v66 = a3 + *(_QWORD *)(*(_QWORD *)a3 + 168);
  v67 = a3 + v21;
  v64 = a4;
  sub_1D264ABF8();
  v68 = v72;
  v65 = v20;
  sub_1D262BB7C((uint64_t)v20, (uint64_t)v18);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v18, 1, v11) == 1)
  {
    sub_1D253703C((uint64_t)v18, qword_1ED961CE8);
    v22 = (char *)v4 + qword_1ED961C00;
    v72 = 0;
    v73 = 0xE000000000000000;
    sub_1D26CE0A0();
    v23 = sub_1D25CCE74();
    v25 = v24;
    swift_bridgeObjectRelease();
    v72 = v23;
    v73 = v25;
    sub_1D26CDA04();
    v26 = v72;
    v27 = v73;
    v28 = v64;
    v29 = v64;
    sub_1D267C00C(v26, v27, v22, v29);
    swift_bridgeObjectRelease();

    v30 = a3;
  }
  else
  {
    v30 = a3;
    v28 = v64;
    sub_1D25341AC((uint64_t)v18, (uint64_t)v14);
    sub_1D2534120((uint64_t)v14, (uint64_t)v10, type metadata accessor for ReloadConfiguration.ReloadType);
    v31 = v61;
    v32 = v63;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v61 + 48))(v10, 1, v63) == 1)
    {
      v33 = v14;
      v34 = (char *)v4 + qword_1ED961C00;
      v72 = 0;
      v73 = 0xE000000000000000;
      sub_1D26CE0A0();
      v35 = sub_1D25CCE74();
      v37 = v36;
      swift_bridgeObjectRelease();
      v72 = v35;
      v73 = v37;
      sub_1D26CDA04();
      v71 = *(_QWORD *)&v14[*(int *)(v11 + 28)];
      sub_1D26CE370();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v38 = v72;
      v39 = v73;
      v40 = v28;
      sub_1D267C00C(v38, v39, v34, v40);
      swift_bridgeObjectRelease();

      v41 = (uint64_t)v33;
    }
    else
    {
      v59 = v14;
      v42 = v60;
      (*(void (**)(char *, char *, uint64_t))(v31 + 32))(v60, v10, v32);
      v58 = (char *)v4 + qword_1ED961C00;
      v72 = 0;
      v73 = 0xE000000000000000;
      sub_1D26CE0A0();
      v43 = sub_1D25CCE74();
      v45 = v44;
      swift_bridgeObjectRelease();
      v72 = v43;
      v73 = v45;
      sub_1D26CDA04();
      if (qword_1ED96C7C0 != -1)
        swift_once();
      v46 = (id)qword_1ED96C848;
      v47 = (void *)sub_1D26CB940();
      v48 = objc_msgSend(v46, sel_stringFromDate_, v47);

      sub_1D26CD938();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      v49 = v72;
      v50 = v73;
      v51 = v28;
      sub_1D267C00C(v49, v50, v58, v51);
      swift_bridgeObjectRelease();

      (*(void (**)(char *, uint64_t))(v31 + 8))(v42, v63);
      v41 = (uint64_t)v59;
    }
    sub_1D25340E4(v41, type metadata accessor for ReloadConfiguration);
  }
  v52 = v68;
  LOBYTE(v72) = v68;
  v53 = v67;
  v54 = (uint64_t)v65;
  if ((sub_1D2622A74(v67, v66, (uint64_t)v65, (char *)&v72, (uint64_t)v28) & 1) != 0)
  {
    v72 = *(_QWORD *)(v30 + *(_QWORD *)(*(_QWORD *)v30 + 152));
    v55 = sub_1D26CDC2C();
    swift_bridgeObjectRetain();
    MEMORY[0x1D823A4E4](MEMORY[0x1E0DEB3D0], v55);
    v56 = sub_1D26CDBB4();
    sub_1D2622028(v53, v56, 0xD000000000000017, 0x80000001D26E29A0);
    swift_bridgeObjectRelease();
  }
  result = sub_1D262BBC4(v54, v69);
  *v70 = v52;
  return result;
}

uint64_t sub_1D2622028(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  _QWORD *v4;
  _QWORD *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t result;
  uint64_t v38;
  __int128 v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  char v45;
  uint64_t (*v46)(char *, unint64_t, uint64_t);
  uint64_t v47;
  uint64_t v48;
  char *v49;
  char *v50;
  char *v51;
  uint64_t v52;
  int v53;
  uint64_t v54;
  void (*v55)(char *, uint64_t, uint64_t);
  char *v56;
  uint64_t v57;
  char *v58;
  NSObject *v59;
  os_log_type_t v60;
  int v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  void (*v66)(char *, uint64_t);
  uint64_t v67;
  unint64_t v68;
  unint64_t v69;
  char *v70;
  uint64_t v71;
  void (*v72)(char *, uint64_t);
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  os_log_t v76;
  uint64_t v77;
  char *v78;
  uint64_t v79;
  char *v80;
  uint64_t v81;
  char *v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  char *v86;
  uint64_t v87;
  __int128 v88;
  uint64_t *v89;
  char *v90;
  char *v91;
  os_log_t v92;
  int v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  char *v98;
  char *v99;
  char *v100;
  uint64_t v101;
  char *v102;
  _QWORD *v103;
  uint64_t v104;
  uint64_t v105;
  void (*v106)(char *, char *, uint64_t);
  uint64_t v107;
  uint64_t v108;
  char *v109;
  uint64_t v110;
  uint64_t v111;
  char *v112;
  char *v113;
  uint64_t AssociatedTypeWitness;
  uint64_t v115;
  unint64_t v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  char *v123;
  uint64_t v124;
  char *v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  unint64_t v129;

  v116 = a4;
  v105 = a3;
  v126 = a2;
  v6 = (_QWORD *)*v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v8 = MEMORY[0x1E0C80A78](v7);
  v102 = (char *)&v84 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = v6[10];
  v101 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](v8);
  v91 = (char *)&v84 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v84 - v13;
  v15 = v6[12];
  v115 = v6[17];
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v111 = sub_1D26CDF38();
  v110 = *(_QWORD *)(v111 - 8);
  v16 = MEMORY[0x1E0C80A78](v111);
  v100 = (char *)&v84 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v16);
  v109 = (char *)&v84 - v18;
  v108 = sub_1D26CDF38();
  v107 = *(_QWORD *)(v108 - 8);
  v19 = MEMORY[0x1E0C80A78](v108);
  v112 = (char *)&v84 - v20;
  v122 = *(_QWORD *)(v15 - 8);
  v21 = MEMORY[0x1E0C80A78](v19);
  v113 = (char *)&v84 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v6[11];
  v118 = *(_QWORD *)(v23 - 8);
  v24 = MEMORY[0x1E0C80A78](v21);
  v90 = (char *)&v84 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  v26 = MEMORY[0x1E0C80A78](v24);
  v99 = (char *)&v84 - v27;
  v28 = MEMORY[0x1E0C80A78](v26);
  v30 = (char *)&v84 - v29;
  v85 = v31;
  MEMORY[0x1E0C80A78](v28);
  v125 = (char *)&v84 - v32;
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)((char *)v4 + qword_1ED961BF8) + 16));
  v33 = (_QWORD *)((char *)v4 + qword_1ED977D88);
  swift_beginAccess();
  v34 = *v33;
  v119 = v6[16];
  v35 = sub_1D26CD89C();
  v103 = v6;
  v36 = v6[14];
  swift_bridgeObjectRetain();
  v104 = a1;
  MEMORY[0x1D8239074](&v128, a1, v34, v10, v35, v36);
  result = swift_bridgeObjectRelease();
  v120 = v128;
  if (!v128)
    return result;
  v38 = swift_bridgeObjectRetain();
  v117 = v23;
  if (!MEMORY[0x1D8239350](v38, v23))
  {
LABEL_19:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v40 = 0;
  v98 = (char *)v4 + qword_1ED961C00;
  v89 = &v128;
  *(_QWORD *)&v39 = 136446722;
  v88 = v39;
  v87 = MEMORY[0x1E0DEE9B8] + 8;
  v97 = 0x80000001D26E2980;
  v41 = v112;
  v42 = v117;
  v43 = v118;
  v123 = v30;
  v121 = v15;
  v96 = v10;
  v86 = v14;
  while (1)
  {
    v45 = sub_1D26CDB48();
    sub_1D26CDB24();
    if ((v45 & 1) != 0)
    {
      v46 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 16);
      result = v46(v125, v126+ ((*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80))+ *(_QWORD *)(v43 + 72) * v40, v42);
    }
    else
    {
      result = sub_1D26CE0C4();
      if (v85 != 8)
        goto LABEL_22;
      v128 = result;
      v46 = *(uint64_t (**)(char *, unint64_t, uint64_t))(v43 + 16);
      v46(v125, (unint64_t)&v128, v42);
      result = swift_unknownObjectRelease();
    }
    v47 = v121;
    v48 = v122;
    if (__OFADD__(v40, 1))
      break;
    v124 = v40 + 1;
    v49 = v123;
    (*(void (**)(char *, char *, uint64_t))(v43 + 32))(v123, v125, v42);
    MEMORY[0x1D8239074](v49, v120, v42, v47, v119);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v48 + 48))(v41, 1, v47) == 1)
    {
      (*(void (**)(char *, uint64_t))(v43 + 8))(v49, v42);
      (*(void (**)(char *, uint64_t))(v107 + 8))(v41, v108);
    }
    else
    {
      v50 = v113;
      (*(void (**)(char *, char *, uint64_t))(v48 + 32))(v113, v41, v47);
      v51 = v109;
      (*(void (**)(uint64_t))(v115 + 16))(v47);
      v52 = *(_QWORD *)(AssociatedTypeWitness - 8);
      v53 = (*(uint64_t (**)(char *, uint64_t))(v52 + 48))(v51, 1);
      (*(void (**)(char *, uint64_t))(v110 + 8))(v51, v111);
      if (v53 != 1)
      {
        v54 = v101;
        v55 = *(void (**)(char *, uint64_t, uint64_t))(v101 + 16);
        v56 = v14;
        v57 = v96;
        v55(v14, v104, v96);
        v58 = v99;
        v106 = (void (*)(char *, char *, uint64_t))v46;
        v46(v99, (unint64_t)v123, v117);
        swift_bridgeObjectRetain_n();
        v59 = sub_1D26CC084();
        v60 = sub_1D26CDD04();
        v61 = v60;
        if (os_log_type_enabled(v59, v60))
        {
          v62 = swift_slowAlloc();
          v93 = v61;
          v63 = v57;
          v64 = v62;
          v94 = swift_slowAlloc();
          v128 = v94;
          *(_DWORD *)v64 = v88;
          v95 = v64 + 4;
          v65 = v91;
          v55(v91, (uint64_t)v56, v63);
          v66 = *(void (**)(char *, uint64_t))(v54 + 8);
          v66(v56, v63);
          v92 = v59;
          v67 = sub_1D26CE370();
          v69 = v68;
          v66(v65, v63);
          v127 = sub_1D2537880(v67, v69, &v128);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          v95 = v52;
          *(_WORD *)(v64 + 12) = 2082;
          v70 = v90;
          v71 = v117;
          v106(v90, v58, v117);
          v72 = *(void (**)(char *, uint64_t))(v118 + 8);
          v72(v58, v71);
          v73 = sub_1D26CE370();
          v75 = v74;
          v106 = (void (*)(char *, char *, uint64_t))v72;
          v72(v70, v71);
          v127 = sub_1D2537880(v73, v75, &v128);
          sub_1D26CDF50();
          swift_bridgeObjectRelease();
          *(_WORD *)(v64 + 22) = 2082;
          v52 = v95;
          swift_bridgeObjectRetain();
          v127 = sub_1D2537880(v105, v116, &v128);
          sub_1D26CDF50();
          swift_bridgeObjectRelease_n();
          v76 = v92;
          _os_log_impl(&dword_1D2531000, v92, (os_log_type_t)v93, "%{public}s:%{public}s Purged content: %{public}s", (uint8_t *)v64, 0x20u);
          v77 = v94;
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v77, -1, -1);
          MEMORY[0x1D823A5E0](v64, -1, -1);

          v14 = v86;
        }
        else
        {
          v71 = v117;
          v106 = *(void (**)(char *, char *, uint64_t))(v118 + 8);
          ((void (*)(char *, uint64_t))v106)(v58, v117);
          (*(void (**)(char *, uint64_t))(v54 + 8))(v56, v57);
          swift_bridgeObjectRelease_n();

          v14 = v56;
        }
        v41 = v112;
        v78 = v100;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v52 + 56))(v100, 1, 1, AssociatedTypeWitness);
        v79 = v115;
        v80 = v113;
        v81 = v121;
        (*(void (**)(char *, uint64_t, uint64_t))(v115 + 24))(v78, v121, v115);
        v82 = v102;
        sub_1D26CB9B8();
        v83 = sub_1D26CB9DC();
        (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v83 - 8) + 56))(v82, 0, 1, v83);
        (*(void (**)(char *, uint64_t, uint64_t))(v79 + 48))(v82, v81, v79);
        v128 = 0;
        v129 = 0xE000000000000000;
        sub_1D26CE0A0();
        swift_bridgeObjectRelease();
        v128 = 0xD000000000000010;
        v129 = v97;
        sub_1D26CDA04();
        (*(void (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v79 + 72))(v128, v129, v81, v79);
        (*(void (**)(char *, uint64_t))(v122 + 8))(v80, v81);
        ((void (*)(char *, uint64_t))v106)(v123, v71);
        v43 = v118;
        v44 = v124;
        v42 = v71;
        goto LABEL_6;
      }
      (*(void (**)(char *, uint64_t))(v48 + 8))(v50, v47);
      v42 = v117;
      v43 = v118;
      (*(void (**)(char *, uint64_t))(v118 + 8))(v123, v117);
      v41 = v112;
    }
    v44 = v124;
LABEL_6:
    ++v40;
    if (v44 == MEMORY[0x1D8239350](v126, v42))
      goto LABEL_19;
  }
  __break(1u);
LABEL_22:
  __break(1u);
  return result;
}

uint64_t sub_1D2622A74(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t *v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char v20;
  uint64_t v21;
  _QWORD v22[3];
  uint64_t v23;
  uint64_t v24;

  v8 = *v5;
  v9 = *a4;
  swift_beginAccess();
  sub_1D2538510((uint64_t)(v5 + 16), (uint64_t)v22);
  v10 = v23;
  v11 = v24;
  __swift_project_boxed_opaque_existential_0(v22, v23);
  v12 = (uint64_t *)((char *)v5 + qword_1ED977D88);
  swift_beginAccess();
  v13 = *v12;
  v14 = *(_QWORD *)(v8 + 80);
  v15 = sub_1D26CD89C();
  v16 = *(_QWORD *)(v8 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v21, a1, v13, v14, v15, v16);
  swift_bridgeObjectRelease();
  v20 = v9;
  LOBYTE(v13) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, char *, uint64_t, uint64_t, uint64_t))(v11 + 72))(a1, v21, a2, a3, &v20, a5, v10, v11);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v22);
  return v13 & 1;
}

uint64_t sub_1D2622BB4(uint64_t a1)
{
  return sub_1D2622BFC(a1, 0xD000000000000019, 0x80000001D26E2A50, &qword_1ED961BC8);
}

uint64_t sub_1D2622BD8(uint64_t a1)
{
  return sub_1D2622BFC(a1, 0xD000000000000018, 0x80000001D26E2A70, &qword_1ED961BB8);
}

uint64_t sub_1D2622BFC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t);
  uint64_t v10;
  uint64_t result;
  _QWORD v12[2];
  uint64_t *v13;
  uint64_t v14;

  v12[1] = a3;
  v13 = a4;
  v12[0] = a2;
  v4 = sub_1D26CDD88();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CDD40();
  v9 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v8);
  v10 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v10);
  sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  sub_1D26CD098();
  v14 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v9, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D2536488((unint64_t *)&qword_1ED96EE28, &qword_1ED96EE20, MEMORY[0x1E0DEAF38]);
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v5 + 104))(v7, *MEMORY[0x1E0DEF8D0], v4);
  result = sub_1D26CDDB8();
  *v13 = result;
  return result;
}

uint64_t sub_1D2622DC4(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  uint64_t v14;
  uint64_t TupleTypeMetadata2;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _BYTE v29[16];
  uint64_t v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;

  v27 = a8;
  v25 = a6;
  v26 = a7;
  v28 = a1;
  v14 = sub_1D26CD89C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v16 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v18 = (char *)&v24 - v17;
  v19 = *(int *)(v16 + 48);
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 16))((char *)&v24 - v17, a2, a3);
  v20 = *(_QWORD *)(a2 + v19);
  *(_QWORD *)&v18[v19] = v20;
  v38 = v20;
  v30 = a3;
  v31 = a4;
  v32 = a5;
  v33 = v25;
  v34 = v26;
  v35 = v27;
  v36 = a9;
  v37 = a10;
  v21 = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEA0E0], v14);
  v38 = sub_1D25B585C((void (*)(char *, char *))sub_1D262BE2C, (uint64_t)v29, v14, a4, MEMORY[0x1E0DEDCE8], v21, MEMORY[0x1E0DEDD18], v22);
  sub_1D26CDBA8();
  sub_1D26CD89C();
  return sub_1D26CD8C0();
}

uint64_t sub_1D2622F44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  uint64_t TupleTypeMetadata2;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;

  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v9 = MEMORY[0x1E0C80A78](TupleTypeMetadata2);
  v11 = (char *)&v18 - v10;
  v12 = *(int *)(v9 + 48);
  v13 = &v11[v12];
  v14 = a1 + v12;
  v15 = *(_QWORD *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v11, a1, a2);
  v16 = *(_QWORD *)(a3 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v16 + 16))(v13, v14, a3);
  (*(void (**)(uint64_t, char *, uint64_t))(v15 + 32))(a4, v11, a2);
  return (*(uint64_t (**)(char *, uint64_t))(v16 + 8))(v13, a3);
}

uint64_t sub_1D262303C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  uint64_t v7;

  v2 = sub_1D26CD488();
  MEMORY[0x1E0C80A78](v2);
  v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v5 + 16))(v4, a1);
  return sub_1D2614F34((uint64_t)v4);
}

uint64_t sub_1D26230BC()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + qword_1ED961BF8);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1D262311C();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t sub_1D262311C()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  uint64_t v5;

  v0 = sub_1D26CD488();
  v1 = *(_QWORD *)(v0 - 8);
  MEMORY[0x1E0C80A78](v0);
  v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D2614ED0((uint64_t)v3);
  sub_1D261CBD4((uint64_t)v3);
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

void StatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  swift_allocObject();
  sub_1D262A394(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11);
}

uint64_t sub_1D262322C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 8))(v2, v4);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 8))(v3, v1);
  return a1;
}

uint64_t sub_1D262327C()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D261E790(0x725464616F6C6572, 0xED00007265676769);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26232F0(unsigned __int8 *a1)
{
  int v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = result;
    v4 = *(_QWORD *)(result + qword_1ED961BF8);
    v5 = *(os_unfair_lock_s **)(v4 + 16);
    swift_retain();
    os_unfair_lock_lock(v5);
    *(_BYTE *)(v3 + qword_1ED9634D8) = v1;
    if (v1 == 2)
      sub_1D261A2F0(v6);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

void sub_1D2623394(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  int64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  uint64_t v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  int64_t v31;
  unint64_t v32;
  int64_t v33;
  int64_t v34;
  char *v35;
  int v36;
  char *v37;
  char *v38;
  int64_t v39;
  uint64_t *v40;
  uint64_t v41;
  uint64_t *v42;
  int64_t v43;
  _QWORD *v44;
  int64_t v45;
  int64_t v46;
  int64_t v47;
  int64_t v48;
  int64_t v49;
  int64_t v50;
  int64_t v51;
  int64_t v52;
  char *v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  int64_t v58;
  uint64_t v59;
  unint64_t v60;
  unint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  _QWORD *v65;
  char *v66;
  uint64_t TupleTypeMetadata2;
  int64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  int64_t v73;
  unint64_t v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  int64_t v79;
  char *v80;
  int64_t *v81;
  uint64_t v82;
  _QWORD v83[8];

  v56 = a2;
  v3 = (_QWORD *)*a1;
  v55 = sub_1D26CD488();
  v54 = *(_QWORD *)(v55 - 8);
  v4 = MEMORY[0x1E0C80A78](v55);
  v53 = (char *)&v51 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = v3[11];
  v77 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78](v4);
  v80 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = v3[12];
  swift_getTupleTypeMetadata2();
  v76 = sub_1D26CDF38();
  v75 = *(_QWORD *)(v76 - 8);
  v9 = MEMORY[0x1E0C80A78](v76);
  v10 = MEMORY[0x1E0C80A78](v9);
  v81 = (int64_t *)((char *)&v51 - v11);
  v12 = v3[10];
  v71 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78](v10);
  v72 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v78 = v3;
  v14 = v3[16];
  v79 = v8;
  v52 = v14;
  sub_1D26CD89C();
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v64 = sub_1D26CDF38();
  v63 = *(_QWORD *)(v64 - 8);
  v15 = MEMORY[0x1E0C80A78](v64);
  v66 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v15);
  v62 = (char *)&v51 - v17;
  v65 = a1;
  v18 = (char *)a1 + qword_1ED977D88;
  swift_beginAccess();
  v19 = *(_QWORD *)v18;
  v20 = *(_QWORD *)(*(_QWORD *)v18 + 64);
  v57 = *(_QWORD *)v18 + 64;
  v21 = 1 << *(_BYTE *)(v19 + 32);
  if (v21 < 64)
    v22 = ~(-1 << v21);
  else
    v22 = -1;
  v23 = v22 & v20;
  v58 = (unint64_t)(v21 + 63) >> 6;
  v51 = v58 - 1;
  v59 = v19;
  swift_bridgeObjectRetain();
  v68 = 0;
  v24 = MEMORY[0x1E0DEE9D8];
  v61 = 0x80000001D26E2D30;
  v60 = 0x80000001D26E2D50;
  v74 = 0x80000001D26DE880;
  v73 = v12;
  if (v23)
  {
    v69 = (v23 - 1) & v23;
    v25 = __clz(__rbit64(v23)) | (v68 << 6);
LABEL_6:
    v26 = v59;
    v27 = v66;
    (*(void (**)(char *, unint64_t, int64_t))(v71 + 16))(v66, *(_QWORD *)(v59 + 48) + *(_QWORD *)(v71 + 72) * v25, v73);
    v28 = TupleTypeMetadata2;
    *(_QWORD *)&v27[*(int *)(TupleTypeMetadata2 + 48)] = *(_QWORD *)(*(_QWORD *)(v26 + 56) + 8 * v25);
    v29 = *(_QWORD *)(v28 - 8);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v27, 0, 1, v28);
    v30 = v28;
    swift_bridgeObjectRetain();
    goto LABEL_23;
  }
  v31 = v68 + 1;
  if (__OFADD__(v68, 1))
  {
    __break(1u);
LABEL_27:
    __break(1u);
    JUMPOUT(0x1D262445CLL);
  }
  v30 = TupleTypeMetadata2;
  v27 = v66;
  if (v31 < v58)
  {
    v32 = *(_QWORD *)(v57 + 8 * v31);
    if (v32)
    {
LABEL_10:
      v69 = (v32 - 1) & v32;
      v25 = __clz(__rbit64(v32)) + (v31 << 6);
      v68 = v31;
      goto LABEL_6;
    }
    v33 = v68 + 2;
    ++v68;
    if (v31 + 1 < v58)
    {
      v32 = *(_QWORD *)(v57 + 8 * v33);
      if (v32)
      {
        ++v31;
        goto LABEL_10;
      }
      v34 = v31 + 2;
      v68 = v31 + 1;
      if (v31 + 2 < v58)
      {
        v32 = *(_QWORD *)(v57 + 8 * v34);
        if (v32)
        {
          v31 += 2;
          goto LABEL_10;
        }
        while (1)
        {
          v31 = v34 + 1;
          if (__OFADD__(v34, 1))
            goto LABEL_27;
          if (v31 >= v58)
            break;
          v32 = *(_QWORD *)(v57 + 8 * v31);
          ++v34;
          if (v32)
            goto LABEL_10;
        }
        v68 = v51;
      }
    }
  }
  v29 = *(_QWORD *)(TupleTypeMetadata2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56))(v66, 1, 1, TupleTypeMetadata2);
  v69 = 0;
LABEL_23:
  v35 = v62;
  (*(void (**)(char *, char *, uint64_t))(v63 + 32))(v62, v27, v64);
  v36 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48))(v35, 1, v30);
  v70 = v24;
  if (v36 != 1)
  {
    v37 = v72;
    v38 = v35;
    v39 = v73;
    (*(void (**)(char *, char *, int64_t))(v71 + 32))(v72, v38, v73);
    v40 = (_QWORD *)((char *)v65 + qword_1ED961C08);
    swift_beginAccess();
    v41 = *v40;
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](v83, v37, v41, v39, &type metadata for ReloadState, v78[14]);
    swift_bridgeObjectRelease();
    __asm { BR              X9 }
  }
  swift_release();
  v42 = (_QWORD *)((char *)v65 + qword_1ED962468);
  swift_beginAccess();
  v81 = &v51;
  v82 = *v42;
  MEMORY[0x1E0C80A78](v82);
  v43 = v73;
  *(&v51 - 8) = v73;
  *(&v51 - 7) = v6;
  v44 = v78;
  v46 = v78[13];
  v45 = v78[14];
  v47 = v79;
  *(&v51 - 6) = v79;
  *(&v51 - 5) = v46;
  v48 = v44[15];
  *(&v51 - 4) = v45;
  *(&v51 - 3) = v48;
  v49 = v44[17];
  v50 = v52;
  *(&v51 - 2) = v52;
  *(&v51 - 1) = v49;
  swift_bridgeObjectRetain();
  v83[0] = v43;
  v83[1] = v6;
  v83[2] = v47;
  v83[3] = v46;
  v83[4] = v45;
  v83[5] = v48;
  v83[6] = v50;
  v83[7] = v49;
  type metadata accessor for ReloadTaskPair();
}

void sub_1D2624474()
{
  sub_1D26CDA04();
  sub_1D26CE3A0();
  sub_1D26CDA04();
  type metadata accessor for ReloadTaskPair();
}

uint64_t sub_1D2624518(uint64_t a1)
{
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  uint64_t v5;

  swift_getTupleTypeMetadata2();
  MEMORY[0x1D823A4E4](&protocol conformance descriptor for ReloadTaskPair<A, B, C>, a1);
  result = sub_1D26CE3A0();
  *v3 = v4;
  v3[1] = v5;
  return result;
}

uint64_t sub_1D2624598@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  _QWORD v22[11];
  uint64_t v23;
  char *v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD v27[6];

  v22[6] = a3;
  v5 = *(_QWORD **)a1;
  v6 = *(_QWORD *)(*(_QWORD *)a1 + 80);
  v22[4] = *(_QWORD *)(v6 - 8);
  v7 = MEMORY[0x1E0C80A78](a1);
  v22[5] = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v5[11];
  v22[2] = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v7);
  v22[3] = (char *)v22 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CDF38();
  v22[8] = *(_QWORD *)(v11 - 8);
  v22[9] = v11;
  MEMORY[0x1E0C80A78](v11);
  v25 = sub_1D26CD3BC();
  v23 = *(_QWORD *)(v25 - 8);
  MEMORY[0x1E0C80A78](v25);
  v24 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22[10] = a1;
  v13 = (uint64_t *)(a1 + qword_1ED977D88);
  swift_beginAccess();
  v14 = *v13;
  v15 = v5[16];
  v16 = v9;
  v17 = sub_1D26CD89C();
  v18 = v5[14];
  swift_bridgeObjectRetain();
  v26 = a2;
  MEMORY[0x1D8239074](v27, a2, v14, v6, v17, v18);
  swift_bridgeObjectRelease();
  if (v27[0])
  {
    v19 = v5[13];
    v20 = v5[15];
    v27[0] = v6;
    v27[1] = v16;
    v22[1] = v19;
    v27[2] = v19;
    v27[3] = v18;
    v27[4] = v20;
    v27[5] = v15;
    type metadata accessor for VariantIdentifier();
  }
  sub_1D2539514(0, (unint64_t *)&qword_1ED962310);
  (*(void (**)(char *, _QWORD, uint64_t))(v23 + 104))(v24, *MEMORY[0x1E0CF00B0], v25);
  sub_1D26CDEA8();
  return swift_willThrow();
}

uint64_t sub_1D2624AB4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;

  v3 = *a1;
  v4 = (uint64_t *)((char *)a1 + qword_1ED961C08);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v3 + 80);
  v7 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](a2, v5, v6, &type metadata for ReloadState, v7);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2624B54(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v21 = a5;
  v22 = a3;
  v9 = *a1;
  v10 = *(_QWORD *)(*a1 + 80);
  v23 = *(_QWORD *)(v10 - 8);
  v11 = MEMORY[0x1E0C80A78](a1);
  v13 = (char *)&v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = (uint64_t *)(v11 + qword_1ED977F60);
  swift_beginAccess();
  v15 = *v14;
  swift_bridgeObjectRetain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B150);
  v17 = *(_QWORD *)(v9 + 112);
  v24 = a2;
  MEMORY[0x1D8239074](&v27, a2, v15, v10, v16, v17);
  swift_bridgeObjectRelease();
  if (!v27)
    v27 = MEMORY[0x1E0DEE9E0];
  v18 = swift_allocObject();
  *(_QWORD *)(v18 + 16) = v21;
  *(_QWORD *)(v18 + 24) = a6;
  swift_bridgeObjectRetain();
  swift_retain();
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v25 = v27;
  v27 = 0x8000000000000000;
  sub_1D266F15C((uint64_t)sub_1D262C204, v18, v22, a4, isUniquelyReferenced_nonNull_native);
  v27 = v25;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v23 + 16))(v13, v24, v10);
  v26 = v27;
  swift_beginAccess();
  sub_1D26CD89C();
  swift_bridgeObjectRetain();
  sub_1D26CD8C0();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2624D6C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  int64_t v16;
  unint64_t v17;
  unint64_t v18;
  int64_t v19;
  unint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD v23[7];
  uint64_t v24;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v6 + qword_1ED977D88);
  swift_beginAccess();
  v10 = *v9;
  v11 = sub_1D26CD89C();
  CGSizeMake(v10, v4, v11, *(_QWORD *)(v3 + 112));
  swift_bridgeObjectRetain();
  result = sub_1D26CE19C();
  v13 = v23[2];
  v24 = v23[3];
  v14 = v23[5];
  v15 = v23[6];
  v16 = (unint64_t)(v23[4] + 64) >> 6;
  while (1)
  {
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_3;
    }
    v19 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v19 >= v16)
      return swift_release();
    v20 = *(_QWORD *)(v24 + 8 * v19);
    v21 = v14 + 1;
    if (!v20)
    {
      v21 = v14 + 2;
      if (v14 + 2 >= v16)
        return swift_release();
      v20 = *(_QWORD *)(v24 + 8 * v21);
      if (!v20)
      {
        v21 = v14 + 3;
        if (v14 + 3 >= v16)
          return swift_release();
        v20 = *(_QWORD *)(v24 + 8 * v21);
        if (!v20)
        {
          v21 = v14 + 4;
          if (v14 + 4 >= v16)
            return swift_release();
          v20 = *(_QWORD *)(v24 + 8 * v21);
          if (!v20)
          {
            v21 = v14 + 5;
            if (v14 + 5 >= v16)
              return swift_release();
            v20 = *(_QWORD *)(v24 + 8 * v21);
            if (!v20)
            {
              v22 = v14 + 6;
              while (v16 != v22)
              {
                v20 = *(_QWORD *)(v24 + 8 * v22++);
                if (v20)
                {
                  v21 = v22 - 1;
                  goto LABEL_20;
                }
              }
              return swift_release();
            }
          }
        }
      }
    }
LABEL_20:
    v15 = (v20 - 1) & v20;
    v18 = __clz(__rbit64(v20)) + (v21 << 6);
    v14 = v21;
LABEL_3:
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v8, *(_QWORD *)(v13 + 48) + *(_QWORD *)(v5 + 72) * v18, v4);
    sub_1D2618988(a2, (uint64_t)v8);
    result = (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v8, v4);
  }
  __break(1u);
  return result;
}

void sub_1D2624F8C()
{
  type metadata accessor for StatefulStoreMutator();
}

uint64_t sub_1D2624FD4(uint64_t a1)
{
  void (*v1)(_QWORD *);
  uint64_t v2;
  uint64_t v4;
  _QWORD v6[16];

  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = v2;
  v6[3] = a1;
  v6[4] = MEMORY[0x1D823A4E4](&protocol conformance descriptor for StatefulStoreMutator<A, B, C>, a1);
  v6[0] = v4;
  swift_retain();
  swift_retain();
  v1(v6);
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
}

uint64_t sub_1D2625054(uint64_t a1)
{
  uint64_t result;

  result = swift_allocObject();
  *(_QWORD *)(result + 16) = a1;
  return result;
}

void sub_1D2625084(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for VariantIdentifier();
}

void sub_1D262513C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;

  *(_QWORD *)(v15 - 168) = a1;
  MEMORY[0x1E0C80A78](a1);
  v17 = (char *)&a9 - v16;
  if ((v9 & 1) != 0)
  {
    swift_retain();
    sub_1D26CC138();
    swift_release();
  }
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v11 + 16))(v14, *(_QWORD *)(v15 - 144), v13);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v15 - 160) + 16))(v12, *(_QWORD *)(v15 - 152), v10);
  VariantIdentifier.init(storedKey:variantKey:)(v14, v13, (uint64_t)v17);
}

uint64_t sub_1D26251D8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_retain();
  sub_1D26CC138();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD))(v1 + 8))(v0, *(_QWORD *)(v2 - 168));
}

void sub_1D2625228(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for VariantIdentifier();
}

void sub_1D26252D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;

  *(_QWORD *)(v14 - 176) = *(_QWORD *)(a1 - 8);
  *(_QWORD *)(v14 - 168) = a1;
  MEMORY[0x1E0C80A78](a1);
  v16 = (char *)&a9 - v15;
  (*(void (**)(uint64_t, _QWORD, uint64_t))(v12 + 16))(v13, *(_QWORD *)(v14 - 152), v11);
  (*(void (**)(uint64_t, _QWORD, uint64_t))(*(_QWORD *)(v14 - 160) + 16))(v10, *(_QWORD *)(v14 - 144), v9);
  VariantIdentifier.init(storedKey:variantKey:)(v13, v11, (uint64_t)v16);
}

uint64_t sub_1D2625354()
{
  uint64_t v0;
  uint64_t v1;

  swift_retain();
  sub_1D26CC138();
  swift_release();
  return (*(uint64_t (**)(uint64_t, _QWORD))(*(_QWORD *)(v1 - 176) + 8))(v0, *(_QWORD *)(v1 - 168));
}

void sub_1D26253A4(uint64_t a1)
{
  uint64_t v1;

  v1 = MEMORY[0x1E0C80A78](a1);
  MEMORY[0x1E0C80A78](v1);
  type metadata accessor for VariantIdentifier();
}

void sub_1D26257A0(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  void (*v17)(char *, uint64_t, uint64_t);
  NSObject *v18;
  os_log_type_t v19;
  _BOOL4 v20;
  uint8_t *v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  uint64_t v25;
  __int128 v26;
  _QWORD v27[2];
  uint64_t v28;
  char *v29;
  char *v30;
  char *v31;
  char *v32;
  _QWORD *v33;
  __int128 v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  __int128 v38;
  uint64_t v39;
  __int128 v40;
  __int128 v41;
  uint64_t v42;

  v4 = *a1;
  v5 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v31 = (char *)v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v32 = (char *)v27 - v8;
  v35 = type metadata accessor for ReloadConfiguration(0);
  v9 = MEMORY[0x1E0C80A78](v35);
  v29 = (char *)v27 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v9);
  v30 = (char *)v27 - v12;
  v13 = *(_QWORD *)(v4 + 80);
  v14 = *(_QWORD *)(v13 - 8);
  MEMORY[0x1E0C80A78](v11);
  v16 = (char *)v27 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = *(void (**)(char *, uint64_t, uint64_t))(v14 + 16);
  v36 = a2;
  v17(v16, a2, v13);
  v18 = sub_1D26CC084();
  v19 = sub_1D26CDD04();
  v20 = os_log_type_enabled(v18, v19);
  v33 = a1;
  if (v20)
  {
    v21 = (uint8_t *)swift_slowAlloc();
    v28 = swift_slowAlloc();
    v37 = v28;
    *(_DWORD *)v21 = 136446210;
    v27[1] = v21 + 4;
    v22 = sub_1D26CE370();
    v42 = sub_1D2537880(v22, v23, &v37);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
    _os_log_impl(&dword_1D2531000, v18, v19, "%{public}s Clearing environment mismatch loop/history.", v21, 0xCu);
    v24 = v28;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v24, -1, -1);
    MEMORY[0x1D823A5E0](v21, -1, -1);

  }
  else
  {

    (*(void (**)(char *, uint64_t))(v14 + 8))(v16, v13);
  }
  sub_1D269EB3C(v36);
  swift_beginAccess();
  v25 = *(_QWORD *)(v4 + 104);
  swift_bridgeObjectRetain();
  v37 = v13;
  v38 = *(_OWORD *)(v4 + 88);
  v39 = v25;
  v26 = *(_OWORD *)(v4 + 128);
  v34 = *(_OWORD *)(v4 + 112);
  v40 = v34;
  v41 = v26;
  type metadata accessor for ReloadTaskPair();
}

uint64_t sub_1D2625A8C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t result;
  int *v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  MEMORY[0x1D8239074](v3, v2, v1, a1, *(_QWORD *)(v4 - 208));
  result = swift_bridgeObjectRelease();
  v6 = *(int **)(v4 - 192);
  if (*(_QWORD *)(v4 - 72))
  {
    v7 = sub_1D2686830();
    swift_retain();
    result = swift_release();
    if (v7)
    {
      v8 = *(_QWORD *)(v7 + *(_QWORD *)(*(_QWORD *)v7 + 168) + v6[6]);
      *(_QWORD *)(v4 - 176) = v8;
      v9 = swift_allocObject();
      *(_QWORD *)(v9 + 16) = 0xA000000000000000;
      *(_QWORD *)(v4 - 72) = v9 | 0x6000000000000000;
      sub_1D2534610(v8);
      static ReloadConfiguration.ReloadReason.== infix(_:_:)(v4 - 176);
      v11 = v10;
      swift_release();
      sub_1D2534224(v8);
      if ((v11 & 1) != 0)
      {
        sub_1D25CDCF8(0xD00000000000001CLL, 0x80000001D26E2AC0);
        v12 = sub_1D26CB9DC();
        v13 = *(_QWORD *)(v4 - 224);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(v13, 1, 1, v12);
        v14 = swift_allocObject();
        *(_QWORD *)(v14 + 16) = 0xD00000000000001CLL;
        *(_QWORD *)(v14 + 24) = 0x80000001D26E2AC0;
        v15 = v14 | 0x2000000000000000;
        v16 = *(_QWORD *)(v4 - 232);
        sub_1D2534120(v13, v16, type metadata accessor for ReloadConfiguration.ReloadType);
        v17 = *(_QWORD *)(v4 - 248);
        sub_1D2534120(v16, v17, type metadata accessor for ReloadConfiguration.ReloadType);
        *(_BYTE *)(v17 + v6[5]) = 1;
        *(_QWORD *)(v17 + v6[7]) = 1;
        *(_QWORD *)(v17 + v6[6]) = v15;
        *(_BYTE *)(v17 + v6[8]) = 1;
        sub_1D25340E4(v16, type metadata accessor for ReloadConfiguration.ReloadType);
        v18 = *(_QWORD *)(v4 - 240);
        sub_1D25341AC(v17, v18);
        sub_1D25340E4(v13, type metadata accessor for ReloadConfiguration.ReloadType);
        sub_1D2618988(v18, v3);
        swift_release();
        return sub_1D25340E4(v18, type metadata accessor for ReloadConfiguration);
      }
      else
      {
        return swift_release();
      }
    }
  }
  return result;
}

uint64_t sub_1D2625C8C(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  __int128 v17;
  uint64_t v18;
  uint64_t v19;
  __int128 v20;
  uint64_t v21;
  char v22;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  v6 = MEMORY[0x1E0C80A78](a1);
  v8 = (char *)&v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = (uint64_t *)(v6 + qword_1ED961C08);
  swift_beginAccess();
  v10 = *v9;
  v11 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v16, a2, v10, v4, &type metadata for ReloadState, v11);
  result = swift_bridgeObjectRelease();
  if (v16 != 4)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v8, a2, v4);
    v22 = 4;
    swift_beginAccess();
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    swift_beginAccess();
    v13 = *(_QWORD *)(v3 + 104);
    v14 = *(_QWORD *)(v3 + 136);
    swift_bridgeObjectRetain();
    v16 = v4;
    v17 = *(_OWORD *)(v3 + 88);
    v18 = v13;
    v19 = v11;
    v20 = *(_OWORD *)(v3 + 120);
    v21 = v14;
    type metadata accessor for ReloadTaskPair();
  }
  return result;
}

uint64_t sub_1D2625E80(_QWORD *a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  int *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t result;
  char *v30;
  void (*v31)(char *, uint64_t, uint64_t);
  NSObject *v32;
  os_log_type_t v33;
  _BOOL4 v34;
  uint8_t *v35;
  void (*v36)(char *, char *, uint64_t);
  char *v37;
  void (*v38)(char *, uint64_t);
  uint64_t v39;
  unint64_t v40;
  unint64_t v41;
  os_log_t v42;
  uint8_t *v43;
  uint64_t v44;
  char *v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  _QWORD v51[3];
  uint8_t *v52;
  uint64_t v53;
  os_log_t v54;
  int v55;
  void (*v56)(char *, uint64_t);
  char *v57;
  void (*v58)(char *, uint64_t, uint64_t);
  char *v59;
  char *v60;
  uint64_t v61;
  char *v62;
  uint64_t v63;
  uint64_t v64;
  char *v65;
  _QWORD *v66;
  uint64_t v67[3];
  uint64_t v68;

  v4 = *a1;
  v5 = type metadata accessor for ReloadConfiguration.ReloadType(0);
  v6 = MEMORY[0x1E0C80A78](v5);
  v8 = (char *)v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v6);
  v62 = (char *)v51 - v9;
  v10 = (int *)type metadata accessor for ReloadConfiguration(0);
  v11 = MEMORY[0x1E0C80A78](v10);
  v60 = (char *)v51 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v15 = (char *)v51 - v14;
  v16 = MEMORY[0x1E0C80A78](v13);
  v63 = (uint64_t)v51 - v17;
  v18 = *(_QWORD *)(v4 + 80);
  v19 = *(_QWORD *)(v18 - 8);
  v20 = MEMORY[0x1E0C80A78](v16);
  v59 = (char *)v51 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = MEMORY[0x1E0C80A78](v20);
  v65 = (char *)v51 - v23;
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v51 - v24;
  v66 = a1;
  v26 = (_QWORD *)((char *)a1 + qword_1ED961C08);
  swift_beginAccess();
  v27 = *v26;
  v61 = v4;
  v28 = *(_QWORD *)(v4 + 112);
  swift_bridgeObjectRetain();
  v64 = a2;
  MEMORY[0x1D8239074](v67, a2, v27, v18, &type metadata for ReloadState, v28);
  result = swift_bridgeObjectRelease();
  if (LOBYTE(v67[0]) == 4)
  {
    v30 = (char *)v66 + qword_1ED961C00;
    v31 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
    v31(v25, v64, v18);
    v57 = v30;
    v32 = sub_1D26CC084();
    v33 = sub_1D26CDD04();
    v55 = v33;
    v34 = os_log_type_enabled(v32, v33);
    v58 = v31;
    if (v34)
    {
      v54 = v32;
      v35 = (uint8_t *)swift_slowAlloc();
      v53 = swift_slowAlloc();
      v67[0] = v53;
      v52 = v35;
      *(_DWORD *)v35 = 136446210;
      v51[2] = v35 + 12;
      v51[1] = v35 + 4;
      v36 = (void (*)(char *, char *, uint64_t))v31;
      v37 = v65;
      v36(v65, v25, v18);
      v38 = *(void (**)(char *, uint64_t))(v19 + 8);
      v38(v25, v18);
      v39 = sub_1D26CE370();
      v41 = v40;
      v56 = v38;
      v38(v37, v18);
      v68 = sub_1D2537880(v39, v41, v67);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v42 = v54;
      v43 = v52;
      _os_log_impl(&dword_1D2531000, v54, (os_log_type_t)v55, "Resuming reloads for: %{public}s", v52, 0xCu);
      v44 = v53;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v44, -1, -1);
      MEMORY[0x1D823A5E0](v43, -1, -1);

    }
    else
    {
      v56 = *(void (**)(char *, uint64_t))(v19 + 8);
      v56(v25, v18);

      v37 = v65;
    }
    v45 = v37;
    v46 = v64;
    v58(v45, v64, v18);
    LOBYTE(v68) = 1;
    swift_beginAccess();
    v47 = v46;
    sub_1D26CD89C();
    sub_1D26CD8C0();
    swift_endAccess();
    v48 = sub_1D26CB9DC();
    v49 = (uint64_t)v62;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v48 - 8) + 56))(v62, 1, 1, v48);
    sub_1D2534120(v49, (uint64_t)v8, type metadata accessor for ReloadConfiguration.ReloadType);
    sub_1D2534120((uint64_t)v8, (uint64_t)v15, type metadata accessor for ReloadConfiguration.ReloadType);
    v15[v10[5]] = 1;
    *(_QWORD *)&v15[v10[7]] = 1;
    *(_QWORD *)&v15[v10[6]] = 0xA000000000000080;
    v15[v10[8]] = 1;
    sub_1D25340E4((uint64_t)v8, type metadata accessor for ReloadConfiguration.ReloadType);
    v50 = v63;
    sub_1D25341AC((uint64_t)v15, v63);
    sub_1D25340E4(v49, type metadata accessor for ReloadConfiguration.ReloadType);
    sub_1D261EB5C(v47, v50);
  }
  return result;
}

uint64_t sub_1D2626594(uint64_t *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v3 = *a1;
  v4 = (uint64_t *)((char *)a1 + qword_1ED977D88);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v3 + 80);
  v7 = sub_1D26CD89C();
  v8 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](a2, v5, v6, v7, v8);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2626644@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = (_QWORD *)*a1;
  v8 = (_QWORD *)((char *)a1 + qword_1ED977D88);
  swift_beginAccess();
  v9 = *v8;
  v11 = v7[10];
  v10 = v7[11];
  v12 = v7[12];
  v13 = v7[16];
  v14 = sub_1D26CD89C();
  v15 = v7[14];
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v17, a2, v9, v11, v14, v15);
  swift_bridgeObjectRelease();
  if (!v17)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a4, 1, 1, v12);
  MEMORY[0x1D8239074](a3, v17, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2626760@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v5;
  uint64_t *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v13;

  v5 = (_QWORD *)*a1;
  v6 = (_QWORD *)((char *)a1 + qword_1ED977D88);
  swift_beginAccess();
  v7 = *v6;
  v8 = v5[10];
  v9 = v5[12];
  v10 = sub_1D26CD89C();
  v11 = v5[14];
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v13, a2, v7, v8, v10, v11);
  swift_bridgeObjectRelease();
  if (v13)
    type metadata accessor for VariantIdentifier();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v9 - 8) + 56))(a3, 1, 1, v9);
}

uint64_t sub_1D262689C(objc_class *a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  NSObject *v5;

  v3 = *(_QWORD *)(a2 + qword_1ED962460);
  v4 = swift_allocObject();
  swift_weakInit();
  v5 = swift_allocObject();
  v5[2].isa = (Class)v4;
  v5[3].isa = a1;
  swift_retain();
  swift_retain();
  sub_1D25CD6DC(v3, (void (*)(_QWORD, _QWORD))sub_1D262BD68, v5);
  swift_release();
  return swift_release();
}

uint64_t sub_1D2626940(void *a1, char a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t result;
  uint64_t v16;
  uint64_t v17;
  char v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  _QWORD aBlock[6];

  v7 = sub_1D26CD074();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CD0C8();
  v12 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v16 = result;
    v21 = v8;
    if (qword_1ED9623C8 != -1)
      swift_once();
    v20 = qword_1ED961BB8;
    v17 = swift_allocObject();
    *(_QWORD *)(v17 + 16) = v16;
    *(_QWORD *)(v17 + 24) = a4;
    *(_QWORD *)(v17 + 32) = a1;
    v18 = a2 & 1;
    *(_BYTE *)(v17 + 40) = a2 & 1;
    aBlock[4] = sub_1D262BDAC;
    aBlock[5] = v17;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_75;
    v19 = _Block_copy(aBlock);
    swift_retain();
    swift_retain();
    sub_1D262BC0C(a1, v18);
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1D25369B0((unint64_t *)&qword_1ED96EA60, (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF4F8], MEMORY[0x1E0DEF510]);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D2536488((unint64_t *)&qword_1ED96EE10, (uint64_t *)&unk_1ED96EE00, MEMORY[0x1E0DEAF38]);
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v14, v10, v19);
    _Block_release(v19);
    swift_release();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v10, v7);
    (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    return swift_release();
  }
  return result;
}

void sub_1D2626BB8(_QWORD *a1, uint64_t a2, _BYTE *a3, _BYTE *a4, uint64_t a5, uint64_t a6, int a7)
{
  _QWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint8_t *v30;
  NSObject *v31;
  os_log_type_t v32;
  _BOOL4 v33;
  uint64_t v34;
  uint8_t *v35;
  uint64_t v36;
  uint64_t v37;
  unint64_t v38;
  uint64_t v39;
  uint8_t *v40;
  uint64_t v41;
  uint64_t *v42;
  uint64_t v43;
  uint64_t v44;
  NSObject *v45;
  os_log_type_t v46;
  uint8_t *v47;
  uint64_t v48;
  uint64_t v49;
  unint64_t v50;
  uint64_t *v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  _BYTE *v71;
  _QWORD v72[10];
  uint64_t v73;
  char *v74;
  int v75;
  uint64_t v76;
  uint64_t v77;
  _QWORD *v78;
  char *v79;
  uint64_t v80;
  uint64_t v81;
  _BYTE *v82;
  _QWORD *v83;
  uint64_t v84;
  _BYTE *v85;
  uint8_t *v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  uint64_t v94;
  uint64_t v95;
  uint64_t v96;

  v75 = a7;
  v76 = a6;
  v77 = a5;
  v85 = a4;
  v82 = a3;
  v9 = (_QWORD *)*a1;
  v73 = type metadata accessor for ReloadConfiguration(0);
  v72[9] = *(_QWORD *)(v73 - 8);
  v10 = MEMORY[0x1E0C80A78](v73);
  v72[7] = (char *)v72 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v10);
  v72[1] = (char *)v72 - v13;
  v14 = MEMORY[0x1E0C80A78](v12);
  v72[2] = (char *)v72 - v15;
  v16 = MEMORY[0x1E0C80A78](v14);
  v72[5] = (char *)v72 - v17;
  v18 = MEMORY[0x1E0C80A78](v16);
  v72[4] = (char *)v72 - v19;
  v20 = MEMORY[0x1E0C80A78](v18);
  v72[3] = (char *)v72 - v21;
  v22 = v9[10];
  v80 = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v20);
  v79 = (char *)v72 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  v25 = MEMORY[0x1E0C80A78](v24);
  v72[6] = (char *)v72 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  v27 = MEMORY[0x1E0C80A78](v25);
  v72[8] = (char *)v72 - v28;
  MEMORY[0x1E0C80A78](v27);
  v74 = (char *)v72 - v29;
  v30 = (uint8_t *)a1 + qword_1ED961C00;
  swift_retain_n();
  v86 = v30;
  v31 = sub_1D26CC084();
  v32 = sub_1D26CDD04();
  v33 = os_log_type_enabled(v31, v32);
  v87 = v22;
  if (v33)
  {
    v34 = swift_slowAlloc();
    v83 = v9;
    v35 = (uint8_t *)v34;
    v36 = swift_slowAlloc();
    v88 = v36;
    *(_DWORD *)v35 = 136446210;
    v37 = sub_1D25CCE74();
    v96 = sub_1D2537880(v37, v38, &v88);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v31, v32, "%{public}s Completed", v35, 0xCu);
    swift_arrayDestroy();
    v39 = v36;
    v22 = v87;
    MEMORY[0x1D823A5E0](v39, -1, -1);
    v40 = v35;
    v9 = v83;
    MEMORY[0x1D823A5E0](v40, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v41 = a2 + *(_QWORD *)(*(_QWORD *)a2 + 144);
  v42 = (_QWORD *)((char *)a1 + qword_1ED961C08);
  swift_beginAccess();
  v43 = *v42;
  v44 = v9[14];
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v88, v41, v43, v22, &type metadata for ReloadState, v44);
  swift_bridgeObjectRelease();
  if (v88 != 3)
  {
    v81 = a2;
    v51 = (_QWORD *)((char *)a1 + qword_1ED977D88);
    swift_beginAccess();
    v52 = *v51;
    v53 = v9[11];
    v54 = v9[12];
    v55 = v9[16];
    v56 = sub_1D26CD89C();
    swift_bridgeObjectRetain();
    MEMORY[0x1D8239074](&v88, v41, v52, v22, v56, v44);
    swift_bridgeObjectRelease();
    v57 = v88;
    swift_bridgeObjectRelease();
    v78 = a1;
    v84 = v41;
    if (v57)
    {
      swift_beginAccess();
      v58 = v9[13];
      v59 = v9[15];
      v60 = v9[17];
      swift_bridgeObjectRetain();
      v88 = v22;
      v89 = v53;
      v90 = v54;
      v91 = v58;
      v92 = v44;
      v93 = v59;
      v94 = v55;
      v95 = v60;
      type metadata accessor for ReloadTaskPair();
    }
    v76 = v53;
    v77 = v44;
    v83 = v9;
    swift_retain_n();
    v61 = sub_1D26CC084();
    v62 = sub_1D26CDCEC();
    if (os_log_type_enabled(v61, v62))
    {
      v63 = (uint8_t *)swift_slowAlloc();
      v64 = swift_slowAlloc();
      v88 = v64;
      *(_DWORD *)v63 = 136446210;
      v86 = v63 + 4;
      v65 = sub_1D25CCE74();
      v96 = sub_1D2537880(v65, v66, &v88);
      sub_1D26CDF50();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v61, v62, "%{public}s Encountered missing entry", v63, 0xCu);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v64, -1, -1);
      MEMORY[0x1D823A5E0](v63, -1, -1);
    }
    else
    {
      swift_release_n();
    }

    v67 = v76;
    swift_beginAccess();
    v68 = v83[13];
    v69 = v83[15];
    v70 = v83[17];
    swift_bridgeObjectRetain();
    v88 = v87;
    v89 = v67;
    v90 = v54;
    v91 = v68;
    v92 = v77;
    v93 = v69;
    v94 = v55;
    v95 = v70;
    type metadata accessor for ReloadTaskPair();
  }
  swift_retain_n();
  v45 = sub_1D26CC084();
  v46 = sub_1D26CDD04();
  if (os_log_type_enabled(v45, v46))
  {
    v47 = (uint8_t *)swift_slowAlloc();
    v48 = swift_slowAlloc();
    v88 = v48;
    *(_DWORD *)v47 = 136446210;
    v49 = sub_1D25CCE74();
    v96 = sub_1D2537880(v49, v50, &v88);
    sub_1D26CDF50();
    swift_release_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v45, v46, "%{public}s Abandoning completed reload for blocked entry", v47, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v48, -1, -1);
    MEMORY[0x1D823A5E0](v47, -1, -1);
  }
  else
  {
    swift_release_n();
  }

  v71 = v85;
  *v82 = *v85;
  *v71 = 0;
}

void sub_1D2628310()
{
  uint64_t v0;

  sub_1D25340E4(v0, type metadata accessor for ReloadConfiguration);
  JUMPOUT(0x1D2627B98);
}

uint64_t sub_1D26283A8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  sub_1D25340E4(v0, type metadata accessor for ReloadConfiguration);
  v2 = sub_1D25340E4(*(_QWORD *)(v1 - 448), type metadata accessor for ReloadConfiguration);
  return sub_1D26283CC(v2);
}

void sub_1D26283CC()
{
  uint64_t v0;

  sub_1D25CDCC4(*(_QWORD *)(v0 + qword_1ED961BE0));
  swift_release();
  JUMPOUT(0x1D2627F28);
}

void sub_1D26283F4()
{
  type metadata accessor for VariantReloadResult();
}

uint64_t sub_1D2629490(_QWORD *a1, uint64_t *a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD v16[8];

  v3 = *a2;
  v4 = *(_QWORD *)(*a2 + 80);
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = v8 + *(_QWORD *)(*(_QWORD *)v8 + 144);
  v11 = (uint64_t *)(v10 + qword_1ED977F60);
  swift_beginAccess();
  v12 = *v11;
  swift_bridgeObjectRetain();
  v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B150);
  MEMORY[0x1D8239074](v16, v9, v12, v4, v13, *(_QWORD *)(v3 + 112));
  swift_bridgeObjectRelease();
  *a1 = v16[0];
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v9, v4);
  v16[7] = 0;
  swift_beginAccess();
  sub_1D26CD89C();
  sub_1D26CD8C0();
  return swift_endAccess();
}

uint64_t sub_1D26295FC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  int64_t v10;
  uint64_t v11;
  unint64_t v12;
  unint64_t v13;
  int64_t v14;
  unint64_t v15;
  int64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t *v19;
  uint64_t v20;
  unint64_t v21;
  NSObject *v22;
  os_log_type_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  unint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  int64_t v32;
  void (*v33)(uint64_t);
  int64_t v34;
  uint64_t v35;

  result = swift_beginAccess();
  v6 = *(_QWORD *)(a1 + 16);
  if (!v6)
    return result;
  v31 = v6 + 64;
  v7 = 1 << *(_BYTE *)(v6 + 32);
  v8 = -1;
  if (v7 < 64)
    v8 = ~(-1 << v7);
  v9 = v8 & *(_QWORD *)(v6 + 64);
  v32 = (unint64_t)(v7 + 63) >> 6;
  result = swift_bridgeObjectRetain();
  v10 = 0;
  v30 = v6;
  while (1)
  {
    if (v9)
    {
      v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      v34 = v10;
      v13 = v12 | (v10 << 6);
      goto LABEL_23;
    }
    v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v14 >= v32)
      return swift_release();
    v15 = *(_QWORD *)(v31 + 8 * v14);
    v16 = v10 + 1;
    if (!v15)
    {
      v16 = v10 + 2;
      if (v10 + 2 >= v32)
        return swift_release();
      v15 = *(_QWORD *)(v31 + 8 * v16);
      if (!v15)
      {
        v16 = v10 + 3;
        if (v10 + 3 >= v32)
          return swift_release();
        v15 = *(_QWORD *)(v31 + 8 * v16);
        if (!v15)
          break;
      }
    }
LABEL_22:
    v9 = (v15 - 1) & v15;
    v34 = v16;
    v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_23:
    v18 = 16 * v13;
    v19 = (uint64_t *)(*(_QWORD *)(v6 + 48) + v18);
    v20 = *v19;
    v21 = v19[1];
    v33 = *(void (**)(uint64_t))(*(_QWORD *)(v6 + 56) + v18);
    swift_bridgeObjectRetain_n();
    swift_retain_n();
    swift_retain();
    v22 = sub_1D26CC084();
    v23 = sub_1D26CDD04();
    if (os_log_type_enabled(v22, v23))
    {
      v24 = swift_slowAlloc();
      v25 = a3;
      v26 = swift_slowAlloc();
      v35 = v26;
      *(_DWORD *)v24 = 136446466;
      swift_bridgeObjectRetain();
      *(_QWORD *)(v24 + 4) = sub_1D2537880(v20, v21, &v35);
      swift_bridgeObjectRelease_n();
      *(_WORD *)(v24 + 12) = 2080;
      swift_release();
      v27 = sub_1D26CE370();
      *(_QWORD *)(v24 + 14) = sub_1D2537880(v27, v28, &v35);
      swift_release();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v22, v23, "Executing event: %{public}s for successful reload of %s", (uint8_t *)v24, 0x16u);
      swift_arrayDestroy();
      v29 = v26;
      a3 = v25;
      v6 = v30;
      MEMORY[0x1D823A5E0](v29, -1, -1);
      MEMORY[0x1D823A5E0](v24, -1, -1);

    }
    else
    {
      swift_bridgeObjectRelease_n();

      v11 = swift_release_n();
    }
    v10 = v34;
    v33(v11);
    result = swift_release();
  }
  v17 = v10 + 4;
  if (v10 + 4 >= v32)
    return swift_release();
  v15 = *(_QWORD *)(v31 + 8 * v17);
  if (v15)
  {
    v16 = v10 + 4;
    goto LABEL_22;
  }
  while (1)
  {
    v16 = v17 + 1;
    if (__OFADD__(v17, 1))
      break;
    if (v16 >= v32)
      return swift_release();
    v15 = *(_QWORD *)(v31 + 8 * v16);
    ++v17;
    if (v15)
      goto LABEL_22;
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_1D2629970()
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  type metadata accessor for VariantReloadResult();
}

uint64_t sub_1D2629A08()
{
  uint64_t v0;
  _QWORD *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t result;

  v8 = sub_1D26CC15C();
  v9 = sub_1D26CD89C();
  MEMORY[0x1D8239074](v4, v5, v6, v9);
  result = swift_bridgeObjectRelease();
  if (*(_QWORD *)(v7 - 72))
  {
    MEMORY[0x1D8239074](v0, *(_QWORD *)(v7 - 72), v2, v8, v3);
    return swift_bridgeObjectRelease();
  }
  else
  {
    *v1 = 0;
  }
  return result;
}

uint64_t StatefulStore.__deallocating_deinit()
{
  StatefulStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2629AE0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = (*(uint64_t (**)(void))(v1 + 1144))();
  *a1 = result;
  return result;
}

uint64_t sub_1D2629B08()
{
  return sub_1D261439C();
}

uint64_t sub_1D2629B28()
{
  return sub_1D2614468();
}

uint64_t sub_1D2629B48()
{
  return sub_1D26145EC();
}

uint64_t sub_1D2629B68()
{
  return sub_1D26146A4();
}

uint64_t sub_1D2629B88()
{
  return sub_1D261475C();
}

uint64_t sub_1D2629BA8()
{
  return sub_1D2614838();
}

void sub_1D2629BC8()
{
  sub_1D2615544();
}

uint64_t sub_1D2629BE8()
{
  return sub_1D2536B8C();
}

uint64_t sub_1D2629C08()
{
  return sub_1D26149F4();
}

uint64_t sub_1D2629C28(uint64_t a1)
{
  return sub_1D261A0F8(a1);
}

uint64_t sub_1D2629C48(uint64_t a1, uint64_t a2)
{
  return sub_1D261A1A4(a1, a2);
}

uint64_t sub_1D2629C68(uint64_t a1)
{
  return sub_1D261A24C(a1);
}

uint64_t sub_1D2629C88(uint64_t a1)
{
  return sub_1D26156E8(a1);
}

uint64_t sub_1D2629CA8(uint64_t a1, uint64_t a2)
{
  return sub_1D2615804(a1, a2);
}

uint64_t sub_1D2629CC8(uint64_t a1)
{
  return sub_1D26157F8(a1);
}

uint64_t sub_1D2629CE8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 1160))();
}

uint64_t sub_1D2629D10(uint64_t a1, uint64_t a2)
{
  return sub_1D261584C(a1, a2);
}

uint64_t sub_1D2629D30()
{
  return sub_1D2614914();
}

uint64_t sub_1D2629D50@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  _QWORD *v3;
  _QWORD *v7;
  uint64_t *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;

  v7 = (_QWORD *)*v3;
  v8 = (uint64_t *)(v3[2] + qword_1ED977D88);
  swift_beginAccess();
  v9 = *v8;
  v11 = v7[10];
  v10 = v7[11];
  v12 = v7[12];
  v13 = v7[16];
  v14 = sub_1D26CD89C();
  v15 = v7[14];
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v17, a1, v9, v11, v14, v15);
  swift_bridgeObjectRelease();
  if (!v17)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v12 - 8) + 56))(a3, 1, 1, v12);
  MEMORY[0x1D8239074](a2, v17, v10, v12, v13);
  return swift_bridgeObjectRelease();
}

void sub_1D2629E68(uint64_t a1)
{
  sub_1D2616980(a1);
}

uint64_t sub_1D2629E88(uint64_t a1)
{
  return sub_1D2617E2C(a1);
}

void sub_1D2629EA8(uint64_t a1, uint64_t a2)
{
  sub_1D261716C(a1, a2);
}

void sub_1D2629EC8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD))
{
  sub_1D2615888(a1, a2, a3);
}

uint64_t sub_1D2629EE8(uint64_t a1, uint64_t a2)
{
  return sub_1D2618988(a1, a2);
}

BOOL sub_1D2629F08(uint64_t a1)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v11;

  v3 = *v1;
  v4 = (uint64_t *)(v1[2] + qword_1ED977D88);
  swift_beginAccess();
  v5 = *v4;
  v6 = *(_QWORD *)(v3 + 80);
  v7 = sub_1D26CD89C();
  v8 = *(_QWORD *)(v3 + 112);
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v11, a1, v5, v6, v7, v8);
  swift_bridgeObjectRelease();
  v9 = v11;
  if (v11)
    swift_bridgeObjectRelease();
  return v9 != 0;
}

uint64_t StatefulStoreMutator.deinit()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t StatefulStoreMutator.__deallocating_deinit()
{
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D262A008()
{
  return sub_1D2629D30();
}

uint64_t sub_1D262A028@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_1D2629D50(a1, a2, a3);
}

void sub_1D262A048(uint64_t a1)
{
  sub_1D2629E68(a1);
}

uint64_t sub_1D262A068(uint64_t a1)
{
  return sub_1D2629E88(a1);
}

void sub_1D262A088(uint64_t a1, uint64_t a2)
{
  sub_1D2629EA8(a1, a2);
}

void sub_1D262A0A8(uint64_t a1, uint64_t a2, void (*a3)(_QWORD, _QWORD, _QWORD))
{
  sub_1D2629EC8(a1, a2, a3);
}

uint64_t sub_1D262A0C8(uint64_t a1, uint64_t a2)
{
  return sub_1D2629EE8(a1, a2);
}

uint64_t sub_1D262A0E8(uint64_t result, _BYTE **a2)
{
  _BYTE *v2;

  v2 = *a2;
  *v2 = result;
  *a2 = v2 + 1;
  return result;
}

uint64_t sub_1D262A0F8(uint64_t (**a1)(uint64_t, uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*a1)(a2, a3, a4);
}

uint64_t sub_1D262A12C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  void (*v5)(void);
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = *(_QWORD *)(a3 - 8);
  v5 = (void (*)(void))MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v5();
  v8 = sub_1D26CE370();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v7, a3);
  return v8;
}

_BYTE **sub_1D262A1C8(_BYTE **result, uint64_t a2, uint64_t a3, char a4)
{
  _BYTE *v4;

  v4 = *result;
  *v4 = a4;
  *result = v4 + 1;
  return result;
}

uint64_t sub_1D262A1D8(uint64_t *a1, uint64_t a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t result;

  v6 = a4();
  sub_1D2537880(v6, v7, a3);
  v8 = *a1 + 8;
  sub_1D26CDF50();
  result = swift_bridgeObjectRelease();
  *a1 = v8;
  return result;
}

uint64_t sub_1D262A248(char a1, int64_t a2, char a3, char *a4)
{
  unint64_t v6;
  int64_t v7;
  int64_t v8;
  int64_t v9;
  char *v10;
  size_t v11;
  char *v12;
  char *v13;
  uint64_t result;

  if ((a3 & 1) != 0)
  {
    v6 = *((_QWORD *)a4 + 3);
    v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2)
        v7 = a2;
    }
  }
  else
  {
    v7 = a2;
  }
  v8 = *((_QWORD *)a4 + 2);
  if (v7 <= v8)
    v9 = *((_QWORD *)a4 + 2);
  else
    v9 = v7;
  if (v9)
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE58);
    v10 = (char *)swift_allocObject();
    v11 = _swift_stdlib_malloc_size(v10);
    *((_QWORD *)v10 + 2) = v8;
    *((_QWORD *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    v10 = (char *)MEMORY[0x1E0DEE9D8];
  }
  v12 = v10 + 32;
  v13 = a4 + 32;
  if ((a1 & 1) != 0)
  {
    if (v10 != a4 || v12 >= &v13[v8])
      memmove(v12, v13, v8);
    *((_QWORD *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

void sub_1D262A394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, int a6, int a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11)
{
  _QWORD *v11;
  _QWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  _QWORD v28[8];
  int v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  char *v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  char *v41;
  uint64_t v42;
  _QWORD *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;

  v48 = a8;
  v35 = a7;
  v29 = a6;
  v33 = a5;
  v32 = a4;
  v34 = a3;
  v28[7] = a2;
  v42 = a1;
  v46 = a10;
  v47 = a11;
  v45 = a9;
  v13 = (_QWORD *)*v11;
  v14 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BFC8);
  MEMORY[0x1E0C80A78](v14);
  v41 = (char *)v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = sub_1D26CDD7C();
  v39 = *(_QWORD *)(v16 - 8);
  v40 = v16;
  MEMORY[0x1E0C80A78](v16);
  v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B30);
  v37 = *(_QWORD *)(v38 - 8);
  MEMORY[0x1E0C80A78](v38);
  v36 = (char *)v28 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  v31 = sub_1D26CC09C();
  v30 = *(_QWORD *)(v31 - 8);
  v18 = MEMORY[0x1E0C80A78](v31);
  v28[6] = (char *)v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[5] = *(_QWORD *)(a9 - 8);
  v20 = MEMORY[0x1E0C80A78](v18);
  v28[4] = (char *)v28 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  v28[3] = *(_QWORD *)(a8 - 8);
  MEMORY[0x1E0C80A78](v20);
  v28[2] = (char *)v28 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23 = v13[10];
  v24 = v13[14];
  v44 = v13[13];
  type metadata accessor for StatefulStoreReloadEvent(255, v23, v44, v24);
  sub_1D26CC15C();
  v11[2] = sub_1D26CC144();
  v11[3] = 0;
  v43 = v13;
  v26 = v13[15];
  v25 = v13[16];
  v27 = v13[11];
  v49 = v26;
  type metadata accessor for StatefulStoreReloadEvent(255, v27, v26, v25);
  sub_1D26CC15C();
  v11[4] = sub_1D26CC144();
  v11[5] = 0;
  sub_1D26CC15C();
  v11[6] = sub_1D26CC144();
  v11[7] = 0;
  v11[8] = sub_1D26CC144();
  v11[9] = 0;
  v11[10] = sub_1D26CC144();
  v11[11] = 0;
  v50 = v23;
  v51 = v27;
  v52 = v44;
  v53 = v24;
  v54 = v26;
  v55 = v25;
  type metadata accessor for VariantIdentifier();
}

uint64_t sub_1D262AF38()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED977D88;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1D262AF7C()
{
  uint64_t v0;
  uint64_t v1;
  NSObject *v2;
  os_log_type_t v3;
  uint8_t *v4;

  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(*(_QWORD *)(v0 + qword_1ED961BF8) + 16));
  swift_beginAccess();
  v1 = *(unsigned __int8 *)(v0 + 168);
  if ((v1 & 1) == 0)
  {
    v2 = sub_1D26CC084();
    v3 = sub_1D26CDD04();
    if (os_log_type_enabled(v2, v3))
    {
      v4 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v4 = 0;
      _os_log_impl(&dword_1D2531000, v2, v3, "StatefulStore is disabled", v4, 2u);
      MEMORY[0x1D823A5E0](v4, -1, -1);
    }

  }
  return v1;
}

uint64_t sub_1D262B050@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2614AAC();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B07C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1D2538510(v1 + 128, a1);
}

uint64_t sub_1D262B0D4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  __int128 v6[2];

  v3 = *(_QWORD *)(v1 + qword_1ED961BF8);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2538510(a1, (uint64_t)v6);
  sub_1D2614C40(v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t sub_1D262B144()
{
  uint64_t v0;
  uint64_t v1;

  v1 = v0 + qword_1ED977F60;
  swift_beginAccess();
  return *(_QWORD *)v1;
}

uint64_t sub_1D262B188@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D262B1C0(&qword_1ED977D88, a1);
}

uint64_t sub_1D262B1A4@<X0>(_QWORD *a1@<X8>)
{
  return sub_1D262B1C0(&qword_1ED962468, a1);
}

uint64_t sub_1D262B1C0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a1);
  swift_beginAccess();
  *a2 = *v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D262B21C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2624598(*(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1D262B234()
{
  uint64_t v0;

  return sub_1D2624D6C(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D262B24C()
{
  uint64_t v0;

  return sub_1D2618988(*(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32));
}

void sub_1D262B27C()
{
  sub_1D2624F8C();
}

void sub_1D262B298()
{
  uint64_t v0;

  sub_1D26257A0(*(_QWORD **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D262B2B0()
{
  uint64_t v0;

  return sub_1D2626594(*(uint64_t **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D262B2C8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2626644(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), a1);
}

uint64_t sub_1D262B2E4@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2626760(*(_QWORD **)(v1 + 16), *(_QWORD *)(v1 + 24), a1);
}

uint64_t sub_1D262B2FC@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D261439C();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B324(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D2614458);
}

uint64_t sub_1D262B330()
{
  return 64;
}

__n128 sub_1D262B33C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B350@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2614468();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B378(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D2614524);
}

uint64_t sub_1D262B384()
{
  return 64;
}

__n128 sub_1D262B390(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B3A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2614534();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B3CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D26145DC);
}

uint64_t sub_1D262B3D8()
{
  return 64;
}

__n128 sub_1D262B3E4(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B3F8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26145EC();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B420(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D2614694);
}

uint64_t sub_1D262B42C()
{
  return 64;
}

__n128 sub_1D262B438(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B44C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26146A4();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B474(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D261474C);
}

uint64_t sub_1D262B480()
{
  return 64;
}

__n128 sub_1D262B48C(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B4A0@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D261475C();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B4C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D2614828);
}

uint64_t sub_1D262B4D4()
{
  return 64;
}

__n128 sub_1D262B4E0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B4F4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2614838();
  *a1 = result;
  return result;
}

uint64_t sub_1D262B51C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_setTm(a1, a2, a3, a4, sub_1D2614904);
}

uint64_t keypath_setTm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_retain();
  return a5(v6);
}

uint64_t sub_1D262B554()
{
  return 64;
}

__n128 sub_1D262B560(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B574()
{
  return sub_1D2614C98();
}

uint64_t sub_1D262B594(uint64_t a1)
{
  return sub_1D262B0D4(a1);
}

uint64_t sub_1D262B5B4()
{
  return 64;
}

__n128 sub_1D262B5C0(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B5D4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2614E28();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D262B600(char *a1)
{
  return sub_1D2614E58(*a1);
}

uint64_t sub_1D262B624()
{
  return 64;
}

__n128 sub_1D262B630(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B644@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2614ED0(a1);
}

uint64_t sub_1D262B668()
{
  return 64;
}

__n128 sub_1D262B674(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B688@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_37Tm(sub_1D262AF38, a1);
}

uint64_t sub_1D262B694(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, sub_1D261508C);
}

uint64_t sub_1D262B6A0()
{
  return 64;
}

__n128 sub_1D262B6AC(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B6C0@<X0>(_QWORD *a1@<X8>)
{
  return keypath_get_37Tm(sub_1D262B144, a1);
}

uint64_t keypath_get_37Tm@<X0>(uint64_t (*a1)(void)@<X3>, _QWORD *a2@<X8>)
{
  *a2 = a1();
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D262B6F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return keypath_set_38Tm(a1, a2, a3, a4, sub_1D26150F0);
}

uint64_t keypath_set_38Tm(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6;

  v6 = swift_bridgeObjectRetain();
  return a5(v6);
}

uint64_t sub_1D262B72C()
{
  return 64;
}

__n128 sub_1D262B738(uint64_t a1, uint64_t a2)
{
  __n128 result;
  __int128 v3;
  __int128 v4;

  result = *(__n128 *)a1;
  v3 = *(_OWORD *)(a1 + 16);
  v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  *(_OWORD *)(a2 + 48) = v4;
  *(__n128 *)a2 = result;
  *(_OWORD *)(a2 + 16) = v3;
  return result;
}

uint64_t sub_1D262B74C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = sub_1D26CD488();
  if (v1 <= 0x3F)
  {
    result = sub_1D26CC09C();
    if (v2 <= 0x3F)
      return swift_initClassMetadata2();
  }
  return result;
}

void type metadata accessor for StatefulStore()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for StatefulStore()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatefulStore.reloadPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 448))();
}

uint64_t dispatch thunk of StatefulStore.ignoredReloadPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 496))();
}

uint64_t dispatch thunk of StatefulStore.reloadCompletedPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 544))();
}

uint64_t dispatch thunk of StatefulStore.addedPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 592))();
}

uint64_t dispatch thunk of StatefulStore.removedPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 640))();
}

uint64_t dispatch thunk of StatefulStore.addedVariantPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 688))();
}

uint64_t dispatch thunk of StatefulStore.removedVariantPublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 736))();
}

uint64_t dispatch thunk of StatefulStore.variantKeys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 776))();
}

uint64_t dispatch thunk of StatefulStore.reloadFailurePolicy.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 816))();
}

uint64_t dispatch thunk of StatefulStore.reloadFailurePolicy.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 824))();
}

uint64_t dispatch thunk of StatefulStore.reloadFailurePolicy.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 832))();
}

uint64_t dispatch thunk of StatefulStore.enabled.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 840))();
}

uint64_t dispatch thunk of StatefulStore.enabled.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 848))();
}

uint64_t dispatch thunk of StatefulStore.enabled.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 856))();
}

uint64_t dispatch thunk of StatefulStore.currentProtectionLevel.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 864))();
}

uint64_t dispatch thunk of StatefulStore.currentProtectionLevel.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 872))();
}

uint64_t dispatch thunk of StatefulStore.currentProtectionLevel.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 880))();
}

uint64_t dispatch thunk of StatefulStore._locked_entries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1032))();
}

uint64_t dispatch thunk of StatefulStore._locked_entries.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1040))();
}

uint64_t dispatch thunk of StatefulStore._locked_entries.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1048))();
}

uint64_t dispatch thunk of StatefulStore._locked_onNextSuccessfulReload.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1056))();
}

uint64_t dispatch thunk of StatefulStore._locked_onNextSuccessfulReload.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1064))();
}

uint64_t dispatch thunk of StatefulStore._locked_onNextSuccessfulReload.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1072))();
}

uint64_t dispatch thunk of StatefulStore.entries.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1080))();
}

uint64_t dispatch thunk of StatefulStore.reloadTasks.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1112))();
}

uint64_t dispatch thunk of StatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1144))();
}

uint64_t dispatch thunk of StatefulStore.__allocating_init<A, B>(reloadStrategy:reloadConfigurationPolicy:reloadTriggers:logger:dataMigrator:allowDebounce:enabled:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 1152))();
}

uint64_t dispatch thunk of StatefulStore.captureState()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1160))();
}

uint64_t dispatch thunk of StatefulStore.variantReloadPublisher(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1168))();
}

uint64_t dispatch thunk of StatefulStore.state(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1184))();
}

uint64_t dispatch thunk of StatefulStore.onNextSuccessfulReload(for:eventName:action:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1192))();
}

uint64_t dispatch thunk of StatefulStore.reloadAll(configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1200))();
}

uint64_t dispatch thunk of StatefulStore.reload(configuration:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1208))();
}

uint64_t dispatch thunk of StatefulStore.mutate(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1216))();
}

uint64_t dispatch thunk of StatefulStore.clearEnvironmentMismatchLoopIfNecessary(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1256))();
}

uint64_t dispatch thunk of StatefulStore.pauseReload(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1272))();
}

uint64_t dispatch thunk of StatefulStore.resumeReload(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1280))();
}

uint64_t dispatch thunk of StatefulStore.subscript.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1296))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1304))();
}

{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1312))();
}

uint64_t dispatch thunk of StatefulStore._locked_permitReload(key:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1464))();
}

uint64_t dispatch thunk of StatefulStore._locked_permitAdd(key:variantKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1472))();
}

uint64_t dispatch thunk of StatefulStore._locked_reloadSucceeded(for:configuration:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1480))();
}

uint64_t dispatch thunk of StatefulStore._locked_reloadFailed(for:originalConfiguration:nextConfiguration:nextState:error:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 1488))();
}

uint64_t sub_1D262BAC0()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for StatefulStoreMutator()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for StatefulStoreMutator()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of StatefulStoreMutator.keys.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of StatefulStoreMutator.entry(key:variantKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of StatefulStoreMutator.removeAll()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of StatefulStoreMutator.remove(key:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of StatefulStoreMutator.remove(key:variantKey:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t dispatch thunk of StatefulStoreMutator.add(key:variantKey:entry:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of StatefulStoreMutator.reload(configuration:for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of StatefulStoreMutator.hasKey(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_1D262BB7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D262BBC4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

id sub_1D262BC0C(id a1, char a2)
{
  if ((a2 & 1) != 0)
    return a1;
  else
    return (id)swift_bridgeObjectRetain();
}

void sub_1D262BC18(id a1, char a2)
{
  if ((a2 & 1) != 0)

  else
    swift_bridgeObjectRelease();
}

uint64_t sub_1D262BC24()
{
  return swift_deallocObject();
}

uint64_t sub_1D262BC34()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  sub_1D262BC18(*(id *)(v0 + 48), *(_BYTE *)(v0 + 56));
  return swift_deallocObject();
}

void sub_1D262BC7C()
{
  sub_1D26283F4();
}

void sub_1D262BC90()
{
  sub_1D2629970();
}

uint64_t sub_1D262BCAC()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D262BCD0()
{
  swift_release();
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D262BD04()
{
  uint64_t *v0;

  return sub_1D26295FC(v0[2], v0[3], v0[4]);
}

uint64_t sub_1D262BD10(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(qword_1ED961CE8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D262BD5C()
{
  uint64_t v0;

  return sub_1D262689C(*(objc_class **)(v0 + 16), *(_QWORD *)(v0 + 24));
}

uint64_t sub_1D262BD68(void *a1, char a2)
{
  uint64_t v2;

  return sub_1D2626940(a1, a2 & 1, *(_QWORD *)(v2 + 16), *(_QWORD *)(v2 + 24));
}

uint64_t sub_1D262BD74()
{
  uint64_t v0;

  swift_release();
  swift_release();
  sub_1D262BC18(*(id *)(v0 + 32), *(_BYTE *)(v0 + 40));
  return swift_deallocObject();
}

uint64_t sub_1D262BDAC()
{
  uint64_t v0;

  return sub_1D261FB20(*(_QWORD *)(v0 + 24), *(void **)(v0 + 32), *(_BYTE *)(v0 + 40));
}

uint64_t sub_1D262BDD8()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D262BDFC(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D2622DC4(a1, a2, *(_QWORD *)(v2 + 16), *(char **)(v2 + 24), *(_QWORD *)(v2 + 32), *(_QWORD *)(v2 + 40), *(_QWORD *)(v2 + 48), *(_QWORD *)(v2 + 56), *(_QWORD *)(v2 + 64), *(_QWORD *)(v2 + 72));
}

uint64_t sub_1D262BE2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D2622F44(a1, *(_QWORD *)(v2 + 24), *(_QWORD *)(v2 + 32), a2);
}

uint64_t sub_1D262BE60()
{
  uint64_t v0;

  sub_1D2534224(*(_QWORD *)(v0 + 16));
  return swift_deallocObject();
}

uint64_t sub_1D262BE84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D262BEC8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v0 + 24);
  v3 = *(_QWORD *)(v1 - 8);
  v4 = (*(unsigned __int8 *)(v3 + 80) + 96) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v5 = *(_QWORD *)(v2 - 8);
  v6 = (v4 + *(_QWORD *)(v3 + 64) + *(unsigned __int8 *)(v5 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v0 + v4, v1);
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v6, v2);
  return swift_deallocObject();
}

void sub_1D262BF70()
{
  uint64_t v0;

  sub_1D2625084(*(unsigned __int8 *)(v0 + 80));
}

uint64_t sub_1D262BFB0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(_QWORD *)(*(_QWORD *)(v0 + 16) - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  v4 = *(_QWORD *)(v1 - 8);
  v5 = (v3 + *(_QWORD *)(v2 + 64) + *(unsigned __int8 *)(v4 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  (*(void (**)(unint64_t))(v2 + 8))(v0 + v3);
  (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v5, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1D262C058()
{
  uint64_t v0;

  sub_1D2625228(v0+ ((*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(v0 + 16) - 8) + 80)));
}

uint64_t sub_1D262C0A4()
{
  return sub_1D262C174();
}

uint64_t sub_1D262C0B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 88) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  swift_release();
  return swift_deallocObject();
}

void sub_1D262C140()
{
  uint64_t v0;

  sub_1D26253A4(*(_QWORD *)(v0 + 80));
}

uint64_t sub_1D262C174()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = *(_QWORD *)(v0 + 32);
  v2 = *(_QWORD *)(v0 + 72);
  swift_getTupleTypeMetadata2();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v2 + 96))(v1, v2);
}

uint64_t sub_1D262C1E0()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D262C204()
{
  uint64_t v0;

  return sub_1D25627E8(*(uint64_t (**)(void))(v0 + 16));
}

void sub_1D262C20C()
{
  sub_1D2624474();
}

uint64_t sub_1D262C240()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 88))();
}

uint64_t sub_1D262C260()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D262C284()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D262C2A8()
{
  return sub_1D262327C();
}

uint64_t sub_1D262C2DC(unsigned __int8 *a1)
{
  return sub_1D26232F0(a1);
}

uint64_t RemoteActivitySubscription.ActivityOwnership.rescopingToRemote(with:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;

  v4 = sub_1D26CBA24();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(a2, a1, v4);
  return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v5 + 56))(a2, 0, 1, v4);
}

uint64_t RemoteActivitySubscription.ActivityOwnership.rescopingToLocal()@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2;

  v2 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 56))(a1, 1, 1, v2);
}

uint64_t sub_1D262C400()
{
  _BYTE *v0;

  if (*v0)
    return 0x65746F6D6572;
  else
    return 0x6C61636F6CLL;
}

uint64_t sub_1D262C434@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D26318D0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1D262C458()
{
  sub_1D262EF98();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262C480()
{
  sub_1D262EF98();
  return sub_1D26CE4FC();
}

uint64_t sub_1D262C4A8()
{
  sub_1D262F020();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262C4D0()
{
  sub_1D262F020();
  return sub_1D26CE4FC();
}

uint64_t sub_1D262C4F8()
{
  return 12383;
}

uint64_t sub_1D262C504@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  char v5;
  uint64_t result;
  char v7;

  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    result = swift_bridgeObjectRelease();
    v7 = 0;
  }
  else
  {
    v5 = sub_1D26CE3D0();
    result = swift_bridgeObjectRelease();
    v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1D262C580()
{
  sub_1D262EFDC();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262C5A8()
{
  sub_1D262EFDC();
  return sub_1D26CE4FC();
}

uint64_t RemoteActivitySubscription.ActivityOwnership.encode(to:)(_QWORD *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  char *v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  char v32;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83088);
  v27 = *(_QWORD *)(v2 - 8);
  v28 = v2;
  MEMORY[0x1E0C80A78](v2);
  v26 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = sub_1D26CBA24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v25 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83090);
  v23 = *(_QWORD *)(v7 - 8);
  v24 = v7;
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83098);
  v13 = *(_QWORD *)(v30 - 8);
  MEMORY[0x1E0C80A78](v30);
  v15 = (char *)&v22 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D262EF98();
  sub_1D26CE4E4();
  sub_1D2534120(v29, (uint64_t)v12, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v12, 1, v4) == 1)
  {
    v31 = 0;
    sub_1D262F020();
    v16 = v30;
    sub_1D26CE2F8();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v9, v24);
    return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v16);
  }
  else
  {
    v29 = v13;
    v18 = v25;
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v25, v12, v4);
    v32 = 1;
    sub_1D262EFDC();
    v19 = v26;
    v20 = v30;
    sub_1D26CE2F8();
    sub_1D25369B0(&qword_1ED963280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
    v21 = v28;
    sub_1D26CE358();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v19, v21);
    (*(void (**)(char *, uint64_t))(v5 + 8))(v18, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v29 + 8))(v15, v20);
  }
}

uint64_t RemoteActivitySubscription.ActivityOwnership.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t *v24;
  uint64_t *v25;
  uint64_t v27;
  char *v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  char *v38;
  char *v39;
  uint64_t v40;
  uint64_t v41;
  _QWORD *v42;
  char v43;
  char v44;

  v42 = a1;
  v40 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830B8);
  v4 = *(_QWORD *)(v3 - 8);
  v36 = v3;
  v37 = v4;
  MEMORY[0x1E0C80A78](v3);
  v39 = (char *)&v33 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830C0);
  v34 = *(_QWORD *)(v6 - 8);
  v35 = v6;
  MEMORY[0x1E0C80A78](v6);
  v38 = (char *)&v33 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830C8);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v33 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
  v13 = MEMORY[0x1E0C80A78](v12);
  v15 = (char *)&v33 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v33 - v16;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D262EF98();
  v18 = v41;
  sub_1D26CE4D8();
  if (!v18)
  {
    v33 = v12;
    v19 = v38;
    v20 = v39;
    v41 = v9;
    v21 = v40;
    v22 = sub_1D26CE2E0();
    if (*(_QWORD *)(v22 + 16) == 1)
    {
      if ((*(_BYTE *)(v22 + 32) & 1) != 0)
      {
        v38 = (char *)v22;
        v44 = 1;
        sub_1D262EFDC();
        sub_1D26CE25C();
        v27 = sub_1D26CBA24();
        sub_1D25369B0(&qword_1EFC82600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
        v28 = v15;
        v29 = v27;
        v35 = (uint64_t)v28;
        v30 = v36;
        sub_1D26CE2C8();
        (*(void (**)(char *, uint64_t))(v37 + 8))(v20, v30);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v31 = v35;
        (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v29 - 8) + 56))(v35, 0, 1, v29);
        sub_1D262F064(v31, (uint64_t)v17);
      }
      else
      {
        v43 = 0;
        sub_1D262F020();
        sub_1D26CE25C();
        (*(void (**)(char *, uint64_t))(v34 + 8))(v19, v35);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
        v32 = sub_1D26CBA24();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 56))(v17, 1, 1, v32);
      }
      sub_1D262F064((uint64_t)v17, v21);
    }
    else
    {
      v23 = sub_1D26CE0F4();
      swift_allocError();
      v25 = v24;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825C8);
      *v25 = v33;
      sub_1D26CE268();
      sub_1D26CE0E8();
      (*(void (**)(uint64_t *, _QWORD, uint64_t))(*(_QWORD *)(v23 - 8) + 104))(v25, *MEMORY[0x1E0DEC450], v23);
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v11, v8);
    }
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v42);
}

uint64_t sub_1D262CD1C@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteActivitySubscription.ActivityOwnership.init(from:)(a1, a2);
}

uint64_t sub_1D262CD30(_QWORD *a1)
{
  return RemoteActivitySubscription.ActivityOwnership.encode(to:)(a1);
}

uint64_t RemoteActivitySubscription.ActivitySubscriptionType.hash(into:)()
{
  return sub_1D26CE46C();
}

BOOL static RemoteActivitySubscription.ActivitySubscriptionType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_1D262CD84()
{
  sub_1D262F130();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262CDAC()
{
  sub_1D262F130();
  return sub_1D26CE4FC();
}

uint64_t sub_1D262CDD4()
{
  unsigned __int8 *v0;

  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D262CDFC + 4 * byte_1D26D72E0[*v0]))(1701736302, 0xE400000000000000);
}

uint64_t sub_1D262CDFC()
{
  return 0x6168436574617473;
}

uint64_t sub_1D262CE1C()
{
  return 0x737472656C61;
}

uint64_t sub_1D262CE30()
{
  return 1819047270;
}

uint64_t sub_1D262CE3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D26319B0(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D262CE60(_BYTE *a1@<X8>)
{
  *a1 = 4;
}

uint64_t sub_1D262CE6C()
{
  sub_1D262F0A8();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262CE94()
{
  sub_1D262F0A8();
  return sub_1D26CE4FC();
}

uint64_t sub_1D262CEBC()
{
  sub_1D262F0EC();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262CEE4()
{
  sub_1D262F0EC();
  return sub_1D26CE4FC();
}

uint64_t sub_1D262CF0C()
{
  sub_1D262F1B8();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262CF34()
{
  sub_1D262F1B8();
  return sub_1D26CE4FC();
}

uint64_t sub_1D262CF5C()
{
  sub_1D262F174();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262CF84()
{
  sub_1D262F174();
  return sub_1D26CE4FC();
}

void RemoteActivitySubscription.ActivitySubscriptionType.encode(to:)(_QWORD *a1)
{
  unsigned __int8 *v1;
  unsigned __int8 *v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830D0);
  v19 = *(_QWORD *)(v4 - 8);
  v20 = v4;
  MEMORY[0x1E0C80A78](v4);
  v18 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830D8);
  v16 = *(_QWORD *)(v6 - 8);
  v17 = v6;
  MEMORY[0x1E0C80A78](v6);
  v15 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830E0);
  v13 = *(_QWORD *)(v8 - 8);
  v14 = v8;
  MEMORY[0x1E0C80A78](v8);
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830E8);
  MEMORY[0x1E0C80A78](v12);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC830F0);
  v21 = *(_QWORD *)(v9 - 8);
  MEMORY[0x1E0C80A78](v9);
  v10 = *v2;
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D262F0A8();
  sub_1D26CE4E4();
  __asm { BR              X9 }
}

uint64_t sub_1D262D164()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;

  *(_BYTE *)(v4 - 68) = 0;
  sub_1D262F1B8();
  sub_1D26CE2F8();
  (*(void (**)(uint64_t, _QWORD))(v3 + 8))(v2, *(_QWORD *)(v4 - 168));
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(v4 - 96) + 8))(v1, v0);
}

uint64_t RemoteActivitySubscription.ActivitySubscriptionType.hashValue.getter()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t RemoteActivitySubscription.ActivitySubscriptionType.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  _QWORD *v18;
  _QWORD *v19;
  _QWORD v21[7];
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  char *v26;
  _QWORD *v27;
  uint64_t v28;

  v23 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83120);
  v21[5] = *(_QWORD *)(v3 - 8);
  v21[6] = v3;
  MEMORY[0x1E0C80A78](v3);
  v26 = (char *)v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v22 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83128);
  v21[4] = *(_QWORD *)(v22 - 8);
  MEMORY[0x1E0C80A78](v22);
  v25 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83130);
  v21[2] = *(_QWORD *)(v6 - 8);
  v21[3] = v6;
  MEMORY[0x1E0C80A78](v6);
  v24 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83138);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83140);
  v11 = *(_QWORD *)(v10 - 8);
  MEMORY[0x1E0C80A78](v10);
  v13 = (char *)v21 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = a1[3];
  v27 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v14);
  sub_1D262F0A8();
  v15 = v28;
  sub_1D26CE4D8();
  if (!v15)
  {
    v21[0] = v9;
    v21[1] = v8;
    v28 = v11;
    v16 = sub_1D26CE2E0();
    if (*(_QWORD *)(v16 + 16) == 1)
      __asm { BR              X9 }
    v17 = sub_1D26CE0F4();
    swift_allocError();
    v19 = v18;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC825C8);
    *v19 = &type metadata for RemoteActivitySubscription.ActivitySubscriptionType;
    sub_1D26CE268();
    sub_1D26CE0E8();
    (*(void (**)(_QWORD *, _QWORD, uint64_t))(*(_QWORD *)(v17 - 8) + 104))(v19, *MEMORY[0x1E0DEC450], v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v28 + 8))(v13, v10);
  }
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v27);
}

uint64_t sub_1D262D760@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteActivitySubscription.ActivitySubscriptionType.init(from:)(a1, a2);
}

void sub_1D262D774(_QWORD *a1)
{
  RemoteActivitySubscription.ActivitySubscriptionType.encode(to:)(a1);
}

uint64_t RemoteActivitySubscription.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t RemoteActivitySubscription.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*RemoteActivitySubscription.id.modify())()
{
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.activityID.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t RemoteActivitySubscription.activityID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*RemoteActivitySubscription.activityID.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.hostIdentity.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RemoteActivitySubscription.hostIdentity.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 24);
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RemoteActivitySubscription.hostIdentity.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.activityOwner.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = type metadata accessor for RemoteActivitySubscription(0);
  return sub_1D2534120(v1 + *(int *)(v3 + 28), a1, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
}

uint64_t RemoteActivitySubscription.activityOwner.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 28);
  return sub_1D262F210(a1, v3);
}

uint64_t (*RemoteActivitySubscription.activityOwner.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.metrics.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 32);
  v4 = sub_1D26CD65C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RemoteActivitySubscription.metrics.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 32);
  v4 = sub_1D26CD65C();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RemoteActivitySubscription.metrics.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.family.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 36);
  v4 = sub_1D26CD3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t RemoteActivitySubscription.family.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 36);
  v4 = sub_1D26CD3F8();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
}

uint64_t (*RemoteActivitySubscription.family.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.subscriptionType.getter@<X0>(_BYTE *a1@<X8>)
{
  uint64_t v1;
  uint64_t result;

  result = type metadata accessor for RemoteActivitySubscription(0);
  *a1 = *(_BYTE *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t RemoteActivitySubscription.subscriptionType.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t result;

  v2 = *a1;
  result = type metadata accessor for RemoteActivitySubscription(0);
  *(_BYTE *)(v1 + *(int *)(result + 40)) = v2;
  return result;
}

uint64_t (*RemoteActivitySubscription.subscriptionType.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.creationDate.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 44);
  return sub_1D25D4E30(v3, a1);
}

uint64_t RemoteActivitySubscription.creationDate.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for RemoteActivitySubscription(0) + 44);
  return sub_1D25D4E78(a1, v3);
}

uint64_t (*RemoteActivitySubscription.creationDate.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for RemoteActivitySubscription(0);
  return CGSizeMake;
}

uint64_t RemoteActivitySubscription.description.getter()
{
  sub_1D26CE0A0();
  sub_1D26CDA04();
  sub_1D26CBA24();
  sub_1D25369B0(&qword_1EFC825D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09F0]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  type metadata accessor for RemoteActivitySubscription(0);
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  sub_1D2536488(&qword_1EFC83148, &qword_1ED96FD28, MEMORY[0x1E0D0FB70]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CD65C();
  sub_1D25369B0(&qword_1EFC83150, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0950]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CD3F8();
  sub_1D25369B0(&qword_1EFC83158, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0218]);
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t RemoteActivitySubscription.init(id:activityID:hostIdentity:activityOwner:metrics:family:subscriptionType:creationDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, char *a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  char v17;
  int *v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  _QWORD *v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;

  v17 = *a8;
  v18 = (int *)type metadata accessor for RemoteActivitySubscription(0);
  v19 = a9 + v18[11];
  v20 = sub_1D26CB9DC();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56))(v19, 1, 1, v20);
  v21 = sub_1D26CBA24();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v21 - 8) + 32))(a9, a1, v21);
  v22 = (_QWORD *)(a9 + v18[5]);
  *v22 = a2;
  v22[1] = a3;
  v23 = a9 + v18[6];
  v24 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v23, a4, v24);
  sub_1D262F064(a5, a9 + v18[7]);
  v25 = a9 + v18[8];
  v26 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 32))(v25, a6, v26);
  v27 = a9 + v18[9];
  v28 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 32))(v27, a7, v28);
  *(_BYTE *)(a9 + v18[10]) = v17;
  return sub_1D25D4E78(a10, v19);
}

uint64_t sub_1D262E05C(unsigned __int8 a1)
{
  return ((uint64_t (*)(uint64_t, unint64_t))((char *)sub_1D262E084 + 4 * byte_1D26D72EC[a1]))(25705, 0xE200000000000000);
}

uint64_t sub_1D262E084()
{
  return 0x7974697669746361;
}

uint64_t sub_1D262E0D4()
{
  return 0x7363697274656DLL;
}

uint64_t sub_1D262E0EC()
{
  return 0x796C696D6166;
}

unint64_t sub_1D262E100()
{
  return 0xD000000000000010;
}

uint64_t sub_1D262E11C()
{
  return 0x6E6F697461657263;
}

uint64_t sub_1D262E144()
{
  unsigned __int8 *v0;

  return sub_1D262E05C(*v0);
}

uint64_t sub_1D262E14C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _BYTE *a3@<X8>)
{
  uint64_t result;

  result = sub_1D2631B58(a1, a2);
  *a3 = result;
  return result;
}

void sub_1D262E170(_BYTE *a1@<X8>)
{
  *a1 = 8;
}

uint64_t sub_1D262E17C()
{
  sub_1D262F704();
  return sub_1D26CE4F0();
}

uint64_t sub_1D262E1A4()
{
  sub_1D262F704();
  return sub_1D26CE4FC();
}

uint64_t RemoteActivitySubscription.init(from:)@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  void (**v13)(char *, uint64_t);
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  void (*v23)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t v27;
  char *v28;
  uint64_t v30;
  uint64_t v31;
  int *v32;
  uint64_t *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  char *v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  char *v46;
  char *v47;
  uint64_t v48;
  uint64_t v49;
  char *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char *v54;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  uint64_t v59;
  char *v60;
  uint64_t v61;
  _QWORD *v62;
  int *v63;
  uint64_t v64;
  char *v65;
  char v66;
  char v67;
  char v68;
  char v69;
  char v70;
  char v71;
  char v72;
  char v73;
  char v74;

  v45 = a2;
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v3);
  v46 = (char *)&v44 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v48 = sub_1D26CD3F8();
  v51 = *(_QWORD *)(v48 - 8);
  MEMORY[0x1E0C80A78](v48);
  v47 = (char *)&v44 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v49 = sub_1D26CD65C();
  v52 = *(_QWORD *)(v49 - 8);
  MEMORY[0x1E0C80A78](v49);
  v50 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
  MEMORY[0x1E0C80A78](v53);
  v54 = (char *)&v44 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v57 = *(_QWORD *)(v8 - 8);
  v58 = v8;
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v44 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CBA24();
  v59 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v55 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83160);
  v13 = *(void (***)(char *, uint64_t))(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v15 = (char *)&v44 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v16 = type metadata accessor for RemoteActivitySubscription(0);
  v17 = MEMORY[0x1E0C80A78](v16);
  v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  v63 = (int *)v17;
  v20 = *(int *)(v17 + 44);
  v65 = v19;
  v21 = (uint64_t)&v19[v20];
  v22 = sub_1D26CB9DC();
  v23 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 56);
  v61 = v21;
  v23(v21, 1, 1, v22);
  v24 = a1[3];
  v62 = a1;
  __swift_project_boxed_opaque_existential_0(a1, v24);
  sub_1D262F704();
  v60 = v15;
  v25 = v64;
  sub_1D26CE4D8();
  if (v25)
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v62);
    return sub_1D253703C(v61, &qword_1ED96B1E0);
  }
  else
  {
    v26 = v10;
    v27 = (uint64_t)v54;
    v64 = v22;
    v74 = 0;
    sub_1D25369B0(&qword_1EFC82600, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09E0]);
    v28 = v55;
    sub_1D26CE2C8();
    v30 = (uint64_t)v65;
    (*(void (**)(char *, char *, uint64_t))(v59 + 32))(v65, v28, v11);
    v73 = 1;
    v31 = sub_1D26CE28C();
    v55 = (char *)v13;
    v32 = v63;
    v33 = (uint64_t *)(v30 + v63[5]);
    *v33 = v31;
    v33[1] = v34;
    v72 = 2;
    sub_1D2536488(&qword_1EFC82B50, &qword_1ED96FD28, MEMORY[0x1E0D0FB68]);
    v35 = v58;
    sub_1D26CE2C8();
    (*(void (**)(uint64_t, char *, uint64_t))(v57 + 32))(v30 + v32[6], v26, v35);
    v71 = 3;
    sub_1D25369B0(&qword_1EFC83170, type metadata accessor for RemoteActivitySubscription.ActivityOwnership, (uint64_t)&protocol conformance descriptor for RemoteActivitySubscription.ActivityOwnership);
    sub_1D26CE2C8();
    v36 = (uint64_t)v62;
    v53 = v11;
    sub_1D262F064(v27, v30 + v32[7]);
    v70 = 4;
    sub_1D25369B0(&qword_1EFC83178, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0948]);
    v38 = v49;
    v37 = v50;
    sub_1D26CE2C8();
    (*(void (**)(uint64_t, char *, uint64_t))(v52 + 32))(v30 + v32[8], v37, v38);
    v69 = 5;
    sub_1D25369B0(&qword_1EFC83180, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0210]);
    v39 = v47;
    v40 = v48;
    sub_1D26CE2C8();
    (*(void (**)(char *, char *, uint64_t))(v51 + 32))(&v65[v32[9]], v39, v40);
    v67 = 6;
    sub_1D262F748();
    sub_1D26CE280();
    v41 = v68;
    if (v68 == 4)
      v41 = 3;
    v65[v32[10]] = v41;
    v66 = 7;
    sub_1D25369B0(&qword_1ED961B08, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08C0]);
    v42 = (uint64_t)v46;
    sub_1D26CE280();
    v13[1](v60, v56);
    sub_1D25D4E78(v42, v61);
    v43 = (uint64_t)v65;
    sub_1D2534120((uint64_t)v65, v45, type metadata accessor for RemoteActivitySubscription);
    __swift_destroy_boxed_opaque_existential_1(v36);
    return sub_1D25340E4(v43, type metadata accessor for RemoteActivitySubscription);
  }
}

uint64_t RemoteActivitySubscription.encode(to:)(_QWORD *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  _BYTE *v8;
  uint64_t v9;
  _BYTE v11[32];

  v3 = v1;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83190);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = &v11[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __swift_project_boxed_opaque_existential_0(a1, a1[3]);
  sub_1D262F704();
  sub_1D26CE4E4();
  v11[31] = 0;
  sub_1D26CBA24();
  sub_1D25369B0(&qword_1ED963280, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0998], MEMORY[0x1E0CB09B8]);
  sub_1D26CE358();
  if (!v2)
  {
    v9 = type metadata accessor for RemoteActivitySubscription(0);
    v11[30] = 1;
    sub_1D26CE31C();
    v11[29] = 2;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    sub_1D2536488(&qword_1EFC82B60, &qword_1ED96FD28, MEMORY[0x1E0D0FB48]);
    sub_1D26CE358();
    v11[28] = 3;
    type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
    sub_1D25369B0(&qword_1EFC83198, type metadata accessor for RemoteActivitySubscription.ActivityOwnership, (uint64_t)&protocol conformance descriptor for RemoteActivitySubscription.ActivityOwnership);
    sub_1D26CE358();
    v11[27] = 4;
    sub_1D26CD65C();
    sub_1D25369B0(&qword_1EFC831A0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF0920], MEMORY[0x1E0CF0930]);
    sub_1D26CE358();
    v11[26] = 5;
    sub_1D26CD3F8();
    sub_1D25369B0(&qword_1EFC831A8, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF01F0]);
    sub_1D26CE358();
    v11[25] = *(_BYTE *)(v3 + *(int *)(v9 + 40));
    v11[24] = 6;
    sub_1D262F78C();
    sub_1D26CE358();
    v11[15] = 7;
    sub_1D26CB9DC();
    sub_1D25369B0(&qword_1ED961B00, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB0890]);
    sub_1D26CE310();
  }
  return (*(uint64_t (**)(_BYTE *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_1D262ED50@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  return RemoteActivitySubscription.init(from:)(a1, a2);
}

uint64_t sub_1D262ED64(_QWORD *a1)
{
  return RemoteActivitySubscription.encode(to:)(a1);
}

uint64_t _s9ChronoKit26RemoteActivitySubscriptionV0D9OwnershipO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  unsigned int (*v16)(uint64_t, uint64_t, uint64_t);
  char v17;
  void (*v18)(char *, uint64_t);
  uint64_t v20;

  v4 = sub_1D26CBA24();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83270);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = (uint64_t)&v14[*(int *)(v12 + 48)];
  sub_1D2534120(a1, (uint64_t)v14, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
  sub_1D2534120(a2, v15, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
  v16 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v16((uint64_t)v14, 1, v4) != 1)
  {
    sub_1D2534120((uint64_t)v14, (uint64_t)v10, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
    if (v16(v15, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v15, v4);
      v17 = sub_1D26CBA00();
      v18 = *(void (**)(char *, uint64_t))(v5 + 8);
      v18(v7, v4);
      v18(v10, v4);
      sub_1D25340E4((uint64_t)v14, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
      return v17 & 1;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
    goto LABEL_6;
  }
  if (v16(v15, 1, v4) != 1)
  {
LABEL_6:
    sub_1D253703C((uint64_t)v14, &qword_1EFC83270);
    v17 = 0;
    return v17 & 1;
  }
  sub_1D25340E4((uint64_t)v14, type metadata accessor for RemoteActivitySubscription.ActivityOwnership);
  v17 = 1;
  return v17 & 1;
}

uint64_t type metadata accessor for RemoteActivitySubscription.ActivityOwnership(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9631B0);
}

unint64_t sub_1D262EF98()
{
  unint64_t result;

  result = qword_1EFC830A0;
  if (!qword_1EFC830A0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7D94, &type metadata for RemoteActivitySubscription.ActivityOwnership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC830A0);
  }
  return result;
}

unint64_t sub_1D262EFDC()
{
  unint64_t result;

  result = qword_1EFC830A8;
  if (!qword_1EFC830A8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7D44, &type metadata for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC830A8);
  }
  return result;
}

unint64_t sub_1D262F020()
{
  unint64_t result;

  result = qword_1EFC830B0;
  if (!qword_1EFC830B0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7CF4, &type metadata for RemoteActivitySubscription.ActivityOwnership.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC830B0);
  }
  return result;
}

uint64_t sub_1D262F064(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D262F0A8()
{
  unint64_t result;

  result = qword_1EFC830F8;
  if (!qword_1EFC830F8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7CA4, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC830F8);
  }
  return result;
}

unint64_t sub_1D262F0EC()
{
  unint64_t result;

  result = qword_1EFC83100;
  if (!qword_1EFC83100)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7C54, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83100);
  }
  return result;
}

unint64_t sub_1D262F130()
{
  unint64_t result;

  result = qword_1EFC83108;
  if (!qword_1EFC83108)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7C04, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.AlertsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83108);
  }
  return result;
}

unint64_t sub_1D262F174()
{
  unint64_t result;

  result = qword_1EFC83110;
  if (!qword_1EFC83110)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7BB4, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.StateChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83110);
  }
  return result;
}

unint64_t sub_1D262F1B8()
{
  unint64_t result;

  result = qword_1EFC83118;
  if (!qword_1EFC83118)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7B64, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83118);
  }
  return result;
}

uint64_t type metadata accessor for RemoteActivitySubscription(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED9631C0);
}

uint64_t sub_1D262F210(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

BOOL _s9ChronoKit26RemoteActivitySubscriptionV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  int *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  _QWORD *v24;
  BOOL v25;
  char v26;
  _BOOL8 result;
  char v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  unsigned int (*v32)(uint64_t, uint64_t, uint64_t);
  uint64_t v33;
  uint64_t v34;
  char *v35;
  char v36;
  void (*v37)(char *, uint64_t);
  uint64_t v38;
  char *v39;
  char *v40;
  uint64_t v41;
  uint64_t v42;
  char *v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;

  v4 = sub_1D26CB9DC();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v38 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v38 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v12 = MEMORY[0x1E0C80A78](v11);
  v14 = (char *)&v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v38 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v38 - v18;
  if ((sub_1D26CBA00() & 1) == 0)
    return 0;
  v40 = v7;
  v41 = v4;
  v42 = v5;
  v43 = v10;
  v20 = (int *)type metadata accessor for RemoteActivitySubscription(0);
  v21 = v20[5];
  v22 = *(_QWORD *)(a1 + v21);
  v23 = *(_QWORD *)(a1 + v21 + 8);
  v24 = (_QWORD *)(a2 + v21);
  v25 = v22 == *v24 && v23 == v24[1];
  if (v25 || (v26 = sub_1D26CE3D0(), result = 0, (v26 & 1) != 0))
  {
    v39 = v14;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    sub_1D2536488(&qword_1ED962FF8, &qword_1ED96FD28, MEMORY[0x1E0D0FB60]);
    sub_1D26CDAC4();
    sub_1D26CDAC4();
    if (v46 == v44 && v47 == v45)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      v28 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      result = 0;
      if ((v28 & 1) == 0)
        return result;
    }
    if ((_s9ChronoKit26RemoteActivitySubscriptionV0D9OwnershipO2eeoiySbAE_AEtFZ_0(a1 + v20[7], a2 + v20[7]) & 1) != 0
      && (MEMORY[0x1D8238E04](a1 + v20[8], a2 + v20[8]) & 1) != 0)
    {
      sub_1D26CD3F8();
      sub_1D25369B0(&qword_1ED963210, (uint64_t (*)(uint64_t))MEMORY[0x1E0CF01E0], MEMORY[0x1E0CF0208]);
      sub_1D26CDAC4();
      sub_1D26CDAC4();
      if (v46 == v44 && *(unsigned __int8 *)(a1 + v20[10]) == *(unsigned __int8 *)(a2 + v20[10]))
      {
        sub_1D25D4E30(a1 + v20[11], (uint64_t)v19);
        sub_1D25D4E30(a2 + v20[11], (uint64_t)v17);
        v29 = (uint64_t)v43;
        v30 = (uint64_t)&v43[*(int *)(v8 + 48)];
        sub_1D25D4E30((uint64_t)v19, (uint64_t)v43);
        sub_1D25D4E30((uint64_t)v17, v30);
        v31 = v41;
        v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v42 + 48);
        if (v32(v29, 1, v41) == 1)
        {
          sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
          sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
          if (v32(v30, 1, v31) == 1)
          {
            sub_1D253703C((uint64_t)v43, &qword_1ED96B1E0);
            return 1;
          }
        }
        else
        {
          v33 = (uint64_t)v39;
          sub_1D25D4E30(v29, (uint64_t)v39);
          if (v32(v30, 1, v31) != 1)
          {
            v34 = v42;
            v35 = v40;
            (*(void (**)(char *, uint64_t, uint64_t))(v42 + 32))(v40, v30, v31);
            sub_1D25369B0((unint64_t *)&qword_1ED96B1D0, (uint64_t (*)(uint64_t))MEMORY[0x1E0CB0870], MEMORY[0x1E0CB08B8]);
            v36 = sub_1D26CD908();
            v37 = *(void (**)(char *, uint64_t))(v34 + 8);
            v37(v35, v31);
            sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
            sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
            v37((char *)v33, v31);
            sub_1D253703C(v29, &qword_1ED96B1E0);
            return (v36 & 1) != 0;
          }
          sub_1D253703C((uint64_t)v17, &qword_1ED96B1E0);
          sub_1D253703C((uint64_t)v19, &qword_1ED96B1E0);
          (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v33, v31);
        }
        sub_1D253703C((uint64_t)v43, &qword_1ED96B1E8);
      }
    }
    return 0;
  }
  return result;
}

unint64_t sub_1D262F704()
{
  unint64_t result;

  result = qword_1EFC83168;
  if (!qword_1EFC83168)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7B14, &type metadata for RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83168);
  }
  return result;
}

unint64_t sub_1D262F748()
{
  unint64_t result;

  result = qword_1EFC83188;
  if (!qword_1EFC83188)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivitySubscription.ActivitySubscriptionType, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EFC83188);
  }
  return result;
}

unint64_t sub_1D262F78C()
{
  unint64_t result;

  result = qword_1EFC831B0;
  if (!qword_1EFC831B0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivitySubscription.ActivitySubscriptionType, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EFC831B0);
  }
  return result;
}

unint64_t sub_1D262F7D4()
{
  unint64_t result;

  result = qword_1EFC831B8;
  if (!qword_1EFC831B8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for RemoteActivitySubscription.ActivitySubscriptionType, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType);
    atomic_store(result, (unint64_t *)&qword_1EFC831B8);
  }
  return result;
}

char *initializeBufferWithCopyOfBuffer for RemoteActivitySubscription(char *a1, char *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  void (*v9)(char *, char *, uint64_t);
  uint64_t v10;
  uint64_t v11;
  char *v12;
  char *v13;
  uint64_t v14;
  char *v15;
  char *v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  char *v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char *v25;
  uint64_t v26;
  uint64_t v27;
  char *v28;
  char *v29;
  uint64_t v30;
  uint64_t v31;
  char *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v22 = *(_QWORD *)a2;
    *(_QWORD *)a1 = *(_QWORD *)a2;
    a1 = (char *)(v22 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CBA24();
    v8 = *(_QWORD *)(v7 - 8);
    v9 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
    v9(a1, a2, v7);
    v10 = a3[5];
    v11 = a3[6];
    v12 = &a1[v10];
    v13 = &a2[v10];
    v14 = *((_QWORD *)v13 + 1);
    *(_QWORD *)v12 = *(_QWORD *)v13;
    *((_QWORD *)v12 + 1) = v14;
    v15 = &a1[v11];
    v16 = &a2[v11];
    swift_bridgeObjectRetain();
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v17 - 8) + 16))(v15, v16, v17);
    v18 = a3[7];
    v19 = &a1[v18];
    v20 = &a2[v18];
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(&a2[v18], 1, v7))
    {
      v21 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
      memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v21 - 8) + 64));
    }
    else
    {
      v9(v19, v20, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v19, 0, 1, v7);
    }
    v23 = a3[8];
    v24 = &a1[v23];
    v25 = &a2[v23];
    v26 = sub_1D26CD65C();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v26 - 8) + 16))(v24, v25, v26);
    v27 = a3[9];
    v28 = &a1[v27];
    v29 = &a2[v27];
    v30 = sub_1D26CD3F8();
    (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v30 - 8) + 16))(v28, v29, v30);
    v31 = a3[11];
    a1[a3[10]] = a2[a3[10]];
    v32 = &a1[v31];
    v33 = &a2[v31];
    v34 = sub_1D26CB9DC();
    v35 = *(_QWORD *)(v34 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v35 + 48))(v33, 1, v34))
    {
      v36 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
      memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v36 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v35 + 16))(v32, v33, v34);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
    }
  }
  return a1;
}

uint64_t destroy for RemoteActivitySubscription(uint64_t a1, int *a2)
{
  uint64_t v4;
  uint64_t v5;
  void (*v6)(uint64_t, uint64_t);
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t result;

  v4 = sub_1D26CBA24();
  v5 = *(_QWORD *)(v4 - 8);
  v6 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v6(a1, v4);
  swift_bridgeObjectRelease();
  v7 = a1 + a2[6];
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 8))(v7, v8);
  v9 = a1 + a2[7];
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v9, 1, v4))
    v6(v9, v4);
  v10 = a1 + a2[8];
  v11 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 8))(v10, v11);
  v12 = a1 + a2[9];
  v13 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v13 - 8) + 8))(v12, v13);
  v14 = a1 + a2[11];
  v15 = sub_1D26CB9DC();
  v16 = *(_QWORD *)(v15 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v16 + 48))(v14, 1, v15);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v16 + 8))(v14, v15);
  return result;
}

char *initializeWithCopy for RemoteActivitySubscription(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 16);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = a3[6];
  v11 = &a1[v9];
  v12 = &a2[v9];
  v13 = *((_QWORD *)v12 + 1);
  *(_QWORD *)v11 = *(_QWORD *)v12;
  *((_QWORD *)v11 + 1) = v13;
  v14 = &a1[v10];
  v15 = &a2[v10];
  swift_bridgeObjectRetain();
  v16 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v16 - 8) + 16))(v14, v15, v16);
  v17 = a3[7];
  v18 = &a1[v17];
  v19 = &a2[v17];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v17], 1, v6))
  {
    v20 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
    memcpy(v18, v19, *(_QWORD *)(*(_QWORD *)(v20 - 8) + 64));
  }
  else
  {
    v8(v18, v19, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v18, 0, 1, v6);
  }
  v21 = a3[8];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_1D26CD65C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 16))(v22, v23, v24);
  v25 = a3[9];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_1D26CD3F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v28 - 8) + 16))(v26, v27, v28);
  v29 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v30 = &a1[v29];
  v31 = &a2[v29];
  v32 = sub_1D26CB9DC();
  v33 = *(_QWORD *)(v32 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v33 + 48))(v31, 1, v32))
  {
    v34 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v30, v31, *(_QWORD *)(*(_QWORD *)(v34 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v33 + 16))(v30, v31, v32);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v33 + 56))(v30, 0, 1, v32);
  }
  return a1;
}

uint64_t assignWithCopy for RemoteActivitySubscription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  void *v17;
  const void *v18;
  uint64_t (*v19)(uint64_t, uint64_t, uint64_t);
  int v20;
  int v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  void *v32;
  void *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t (*v36)(void *, uint64_t, uint64_t);
  int v37;
  uint64_t v38;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 24);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (_QWORD *)(a2 + v9);
  *v10 = *v11;
  v10[1] = v11[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v12 = a3[6];
  v13 = a1 + v12;
  v14 = a2 + v12;
  v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v15 - 8) + 24))(v13, v14, v15);
  v16 = a3[7];
  v17 = (void *)(a1 + v16);
  v18 = (const void *)(a2 + v16);
  v19 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v20 = v19(a1 + v16, 1, v6);
  v21 = v19((uint64_t)v18, 1, v6);
  if (v20)
  {
    if (!v21)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(v17, v18, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v17, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v21)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v17, v6);
LABEL_6:
    v22 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
    memcpy(v17, v18, *(_QWORD *)(*(_QWORD *)(v22 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v17, (uint64_t)v18, v6);
LABEL_7:
  v23 = a3[8];
  v24 = a1 + v23;
  v25 = a2 + v23;
  v26 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v26 - 8) + 24))(v24, v25, v26);
  v27 = a3[9];
  v28 = a1 + v27;
  v29 = a2 + v27;
  v30 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v30 - 8) + 24))(v28, v29, v30);
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v31 = a3[11];
  v32 = (void *)(a1 + v31);
  v33 = (void *)(a2 + v31);
  v34 = sub_1D26CB9DC();
  v35 = *(_QWORD *)(v34 - 8);
  v36 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v35 + 48);
  LODWORD(v29) = v36(v32, 1, v34);
  v37 = v36(v33, 1, v34);
  if (!(_DWORD)v29)
  {
    if (!v37)
    {
      (*(void (**)(void *, void *, uint64_t))(v35 + 24))(v32, v33, v34);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v35 + 8))(v32, v34);
    goto LABEL_12;
  }
  if (v37)
  {
LABEL_12:
    v38 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v32, v33, *(_QWORD *)(*(_QWORD *)(v38 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v35 + 16))(v32, v33, v34);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v35 + 56))(v32, 0, 1, v34);
  return a1;
}

char *initializeWithTake for RemoteActivitySubscription(char *a1, char *a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(void *, const void *, uint64_t);
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  uint64_t v17;
  char *v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  char *v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  char *v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(void *, const void *, uint64_t))(v7 + 32);
  v8(a1, a2, v6);
  v9 = a3[6];
  *(_OWORD *)&a1[a3[5]] = *(_OWORD *)&a2[a3[5]];
  v10 = &a1[v9];
  v11 = &a2[v9];
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v12 - 8) + 32))(v10, v11, v12);
  v13 = a3[7];
  v14 = &a1[v13];
  v15 = &a2[v13];
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(&a2[v13], 1, v6))
  {
    v16 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
    memcpy(v14, v15, *(_QWORD *)(*(_QWORD *)(v16 - 8) + 64));
  }
  else
  {
    v8(v14, v15, v6);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v14, 0, 1, v6);
  }
  v17 = a3[8];
  v18 = &a1[v17];
  v19 = &a2[v17];
  v20 = sub_1D26CD65C();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v20 - 8) + 32))(v18, v19, v20);
  v21 = a3[9];
  v22 = &a1[v21];
  v23 = &a2[v21];
  v24 = sub_1D26CD3F8();
  (*(void (**)(char *, char *, uint64_t))(*(_QWORD *)(v24 - 8) + 32))(v22, v23, v24);
  v25 = a3[11];
  a1[a3[10]] = a2[a3[10]];
  v26 = &a1[v25];
  v27 = &a2[v25];
  v28 = sub_1D26CB9DC();
  v29 = *(_QWORD *)(v28 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v29 + 48))(v27, 1, v28))
  {
    v30 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v26, v27, *(_QWORD *)(*(_QWORD *)(v30 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v29 + 32))(v26, v27, v28);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v29 + 56))(v26, 0, 1, v28);
  }
  return a1;
}

uint64_t assignWithTake for RemoteActivitySubscription(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  void (*v8)(uint64_t, uint64_t, uint64_t);
  uint64_t v9;
  _QWORD *v10;
  uint64_t *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  const void *v20;
  uint64_t (*v21)(uint64_t, uint64_t, uint64_t);
  int v22;
  int v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  void *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t (*v38)(void *, uint64_t, uint64_t);
  int v39;
  uint64_t v40;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 40);
  v8(a1, a2, v6);
  v9 = a3[5];
  v10 = (_QWORD *)(a1 + v9);
  v11 = (uint64_t *)(a2 + v9);
  v13 = *v11;
  v12 = v11[1];
  *v10 = v13;
  v10[1] = v12;
  swift_bridgeObjectRelease();
  v14 = a3[6];
  v15 = a1 + v14;
  v16 = a2 + v14;
  v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 40))(v15, v16, v17);
  v18 = a3[7];
  v19 = (void *)(a1 + v18);
  v20 = (const void *)(a2 + v18);
  v21 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  v22 = v21(a1 + v18, 1, v6);
  v23 = v21((uint64_t)v20, 1, v6);
  if (v22)
  {
    if (!v23)
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(v19, v20, v6);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(v19, 0, 1, v6);
      goto LABEL_7;
    }
    goto LABEL_6;
  }
  if (v23)
  {
    (*(void (**)(void *, uint64_t))(v7 + 8))(v19, v6);
LABEL_6:
    v24 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
    memcpy(v19, v20, *(_QWORD *)(*(_QWORD *)(v24 - 8) + 64));
    goto LABEL_7;
  }
  v8((uint64_t)v19, (uint64_t)v20, v6);
LABEL_7:
  v25 = a3[8];
  v26 = a1 + v25;
  v27 = a2 + v25;
  v28 = sub_1D26CD65C();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v28 - 8) + 40))(v26, v27, v28);
  v29 = a3[9];
  v30 = a1 + v29;
  v31 = a2 + v29;
  v32 = sub_1D26CD3F8();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v32 - 8) + 40))(v30, v31, v32);
  v33 = a3[11];
  *(_BYTE *)(a1 + a3[10]) = *(_BYTE *)(a2 + a3[10]);
  v34 = (void *)(a1 + v33);
  v35 = (void *)(a2 + v33);
  v36 = sub_1D26CB9DC();
  v37 = *(_QWORD *)(v36 - 8);
  v38 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v37 + 48);
  LODWORD(v31) = v38(v34, 1, v36);
  v39 = v38(v35, 1, v36);
  if (!(_DWORD)v31)
  {
    if (!v39)
    {
      (*(void (**)(void *, void *, uint64_t))(v37 + 40))(v34, v35, v36);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v37 + 8))(v34, v36);
    goto LABEL_12;
  }
  if (v39)
  {
LABEL_12:
    v40 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
    memcpy(v34, v35, *(_QWORD *)(*(_QWORD *)(v40 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v37 + 32))(v34, v35, v36);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v37 + 56))(v34, 0, 1, v36);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteActivitySubscription()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26304AC(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t (*v9)(uint64_t, uint64_t, uint64_t);
  uint64_t v10;
  unint64_t v11;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
  {
    v8 = v6;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    v10 = a1;
    return v9(v10, a2, v8);
  }
  if ((_DWORD)a2 != 0x7FFFFFFF)
  {
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
    {
      v8 = v13;
      v15 = a3[6];
    }
    else
    {
      v16 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
      {
        v8 = v16;
        v15 = a3[7];
      }
      else
      {
        v17 = sub_1D26CD65C();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
        {
          v8 = v17;
          v15 = a3[8];
        }
        else
        {
          v18 = sub_1D26CD3F8();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == (_DWORD)a2)
          {
            v8 = v18;
            v15 = a3[9];
          }
          else
          {
            v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
            v14 = *(_QWORD *)(v8 - 8);
            v15 = a3[11];
          }
        }
      }
    }
    v10 = a1 + v15;
    v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v14 + 48);
    return v9(v10, a2, v8);
  }
  v11 = *(_QWORD *)(a1 + a3[5] + 8);
  if (v11 >= 0xFFFFFFFF)
    LODWORD(v11) = -1;
  return (v11 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteActivitySubscription()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D26305FC(uint64_t a1, uint64_t a2, int a3, int *a4)
{
  uint64_t result;
  uint64_t v9;
  uint64_t v10;
  uint64_t (*v11)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  result = sub_1D26CBA24();
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    v10 = result;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    v12 = a1;
  }
  else
  {
    if (a3 == 0x7FFFFFFF)
    {
      *(_QWORD *)(a1 + a4[5] + 8) = (a2 - 1);
      return result;
    }
    v13 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v14 = *(_QWORD *)(v13 - 8);
    if (*(_DWORD *)(v14 + 84) == a3)
    {
      v10 = v13;
      v15 = a4[6];
    }
    else
    {
      v16 = type metadata accessor for RemoteActivitySubscription.ActivityOwnership(0);
      v14 = *(_QWORD *)(v16 - 8);
      if (*(_DWORD *)(v14 + 84) == a3)
      {
        v10 = v16;
        v15 = a4[7];
      }
      else
      {
        v17 = sub_1D26CD65C();
        v14 = *(_QWORD *)(v17 - 8);
        if (*(_DWORD *)(v14 + 84) == a3)
        {
          v10 = v17;
          v15 = a4[8];
        }
        else
        {
          v18 = sub_1D26CD3F8();
          v14 = *(_QWORD *)(v18 - 8);
          if (*(_DWORD *)(v14 + 84) == a3)
          {
            v10 = v18;
            v15 = a4[9];
          }
          else
          {
            v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
            v14 = *(_QWORD *)(v10 - 8);
            v15 = a4[11];
          }
        }
      }
    }
    v12 = a1 + v15;
    v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v14 + 56);
  }
  return v11(v12, a2, a2, v10);
}

void sub_1D263073C()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;

  sub_1D26CBA24();
  if (v0 <= 0x3F)
  {
    sub_1D2540B68();
    if (v1 <= 0x3F)
    {
      type metadata accessor for RemoteActivitySubscription.ActivityOwnership(319);
      if (v2 <= 0x3F)
      {
        sub_1D26CD65C();
        if (v3 <= 0x3F)
        {
          sub_1D26CD3F8();
          if (v4 <= 0x3F)
          {
            sub_1D25D53E4();
            if (v5 <= 0x3F)
              swift_initStructMetadata();
          }
        }
      }
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for RemoteActivitySubscription.ActivityOwnership(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  int v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v5 = *(_QWORD *)(a3 - 8);
  v6 = *(_DWORD *)(v5 + 80);
  if ((v6 & 0x20000) != 0)
  {
    v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    v7 = sub_1D26CBA24();
    v8 = *(_QWORD *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      memcpy(a1, a2, *(_QWORD *)(v5 + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, _QWORD, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
  }
  return a1;
}

uint64_t destroy for RemoteActivitySubscription.ActivityOwnership(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t result;

  v2 = sub_1D26CBA24();
  v3 = *(_QWORD *)(v2 - 8);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  return result;
}

void *initializeWithCopy for RemoteActivitySubscription.ActivityOwnership(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithCopy for RemoteActivitySubscription.ActivityOwnership(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 24))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

void *initializeWithTake for RemoteActivitySubscription.ActivityOwnership(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  return a1;
}

void *assignWithTake for RemoteActivitySubscription.ActivityOwnership(void *a1, void *a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t (*v8)(void *, uint64_t, uint64_t);
  int v9;
  int v10;

  v6 = sub_1D26CBA24();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v7 + 48);
  v9 = v8(a1, 1, v6);
  v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(void *, void *, uint64_t))(v7 + 40))(a1, a2, v6);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    memcpy(a1, a2, *(_QWORD *)(*(_QWORD *)(a3 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for RemoteActivitySubscription.ActivityOwnership()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2630CA4(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  unsigned int v5;

  v4 = sub_1D26CBA24();
  v5 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 48))(a1, a2, v4);
  if (v5 >= 2)
    return v5 - 1;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for RemoteActivitySubscription.ActivityOwnership()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D2630CFC(uint64_t a1, int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;

  if (a2)
    v5 = (a2 + 1);
  else
    v5 = 0;
  v6 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 56))(a1, v5, a3, v6);
}

uint64_t sub_1D2630D4C(uint64_t a1)
{
  uint64_t v2;

  v2 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 48))(a1, 1, v2);
}

uint64_t sub_1D2630D84(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = sub_1D26CBA24();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 56))(a1, a2, 1, v4);
}

uint64_t sub_1D2630DC4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CBA24();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivitySubscriptionType()
{
  return &type metadata for RemoteActivitySubscription.ActivitySubscriptionType;
}

uint64_t getEnumTagSinglePayload for RemoteActivitySubscription.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xF9)
    goto LABEL_17;
  if (a2 + 7 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 7) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 7;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 7;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 7;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 8;
  v8 = v6 - 8;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for RemoteActivitySubscription.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 7 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 7) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xF9)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xF8)
    return ((uint64_t (*)(void))((char *)&loc_1D2630F0C + 4 * byte_1D26D72F9[v4]))();
  *a1 = a2 + 7;
  return ((uint64_t (*)(void))((char *)sub_1D2630F40 + 4 * byte_1D26D72F4[v4]))();
}

uint64_t sub_1D2630F40(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2630F48(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D2630F50);
  return result;
}

uint64_t sub_1D2630F5C(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D2630F64);
  *(_BYTE *)result = a2 + 7;
  return result;
}

uint64_t sub_1D2630F68(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D2630F70(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.CodingKeys()
{
  return &type metadata for RemoteActivitySubscription.CodingKeys;
}

uint64_t getEnumTagSinglePayload for StateReplicatorEnumValues.RelationshipState(unsigned __int8 *a1, unsigned int a2)
{
  int v2;
  int v3;
  int v4;
  unsigned int v6;
  BOOL v7;
  int v8;

  if (!a2)
    return 0;
  if (a2 < 0xFD)
    goto LABEL_17;
  if (a2 + 3 >= 0xFFFF00)
    v2 = 4;
  else
    v2 = 2;
  if ((a2 + 3) >> 8 < 0xFF)
    v3 = 1;
  else
    v3 = v2;
  if (v3 == 4)
  {
    v4 = *(_DWORD *)(a1 + 1);
    if (v4)
      return (*a1 | (v4 << 8)) - 3;
  }
  else
  {
    if (v3 == 2)
    {
      v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1))
        goto LABEL_17;
      return (*a1 | (v4 << 8)) - 3;
    }
    v4 = a1[1];
    if (a1[1])
      return (*a1 | (v4 << 8)) - 3;
  }
LABEL_17:
  v6 = *a1;
  v7 = v6 >= 4;
  v8 = v6 - 4;
  if (!v7)
    v8 = -1;
  return (v8 + 1);
}

uint64_t _s9ChronoKit26RemoteActivitySubscriptionV24ActivitySubscriptionTypeOwst_0(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 3 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 3) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFD)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFC)
    return ((uint64_t (*)(void))((char *)&loc_1D2631068 + 4 * byte_1D26D7303[v4]))();
  *a1 = a2 + 3;
  return ((uint64_t (*)(void))((char *)sub_1D263109C + 4 * byte_1D26D72FE[v4]))();
}

uint64_t sub_1D263109C(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26310A4(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D26310ACLL);
  return result;
}

uint64_t sub_1D26310B8(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D26310C0);
  *(_BYTE *)result = a2 + 3;
  return result;
}

uint64_t sub_1D26310C4(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26310CC(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivitySubscriptionType.CodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivitySubscriptionType.NoneCodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.NoneCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivitySubscriptionType.StateChangesCodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.StateChangesCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivitySubscriptionType.AlertsCodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.AlertsCodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivitySubscriptionType.FullCodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.FullCodingKeys;
}

uint64_t storeEnumTagSinglePayload for RemoteActivitySubscription.ActivityOwnership.CodingKeys(_BYTE *a1, unsigned int a2, unsigned int a3)
{
  int v3;
  uint64_t v4;

  if (a3 + 1 >= 0xFFFF00)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) >> 8 < 0xFF)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3 >= 0xFF)
    v4 = v4;
  else
    v4 = 0;
  if (a2 <= 0xFE)
    return ((uint64_t (*)(void))((char *)&loc_1D2631174 + 4 * byte_1D26D730D[v4]))();
  *a1 = a2 + 1;
  return ((uint64_t (*)(void))((char *)sub_1D26311A8 + 4 * byte_1D26D7308[v4]))();
}

uint64_t sub_1D26311A8(uint64_t result)
{
  char v1;

  *(_BYTE *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26311B0(uint64_t result, int a2)
{
  *(_WORD *)(result + 1) = 0;
  if (a2)
    JUMPOUT(0x1D26311B8);
  return result;
}

uint64_t sub_1D26311C4(uint64_t result, int a2)
{
  *(_DWORD *)(result + 1) = 0;
  if (!a2)
    JUMPOUT(0x1D26311CCLL);
  *(_BYTE *)result = a2 + 1;
  return result;
}

uint64_t sub_1D26311D0(uint64_t result)
{
  int v1;

  *(_DWORD *)(result + 1) = v1;
  return result;
}

uint64_t sub_1D26311D8(uint64_t result)
{
  __int16 v1;

  *(_WORD *)(result + 1) = v1;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivityOwnership.CodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivityOwnership.CodingKeys;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivityOwnership.LocalCodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivityOwnership.LocalCodingKeys;
}

uint64_t storeEnumTagSinglePayload for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D2631244 + 4 * byte_1D26D7312[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D2631264 + 4 * byte_1D26D7317[v4]))();
}

_BYTE *sub_1D2631244(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D2631264(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D263126C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2631274(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D263127C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2631284(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys()
{
  return &type metadata for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys;
}

unint64_t sub_1D26312A4()
{
  unint64_t result;

  result = qword_1EFC831C0;
  if (!qword_1EFC831C0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7734, &type metadata for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831C0);
  }
  return result;
}

unint64_t sub_1D26312EC()
{
  unint64_t result;

  result = qword_1EFC831C8;
  if (!qword_1EFC831C8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D783C, &type metadata for RemoteActivitySubscription.ActivityOwnership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831C8);
  }
  return result;
}

unint64_t sub_1D2631334()
{
  unint64_t result;

  result = qword_1EFC831D0;
  if (!qword_1EFC831D0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7A34, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831D0);
  }
  return result;
}

unint64_t sub_1D263137C()
{
  unint64_t result;

  result = qword_1EFC831D8;
  if (!qword_1EFC831D8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7AEC, &type metadata for RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831D8);
  }
  return result;
}

unint64_t sub_1D26313C4()
{
  unint64_t result;

  result = qword_1EFC831E0;
  if (!qword_1EFC831E0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7A5C, &type metadata for RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831E0);
  }
  return result;
}

unint64_t sub_1D263140C()
{
  unint64_t result;

  result = qword_1EFC831E8;
  if (!qword_1EFC831E8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7A84, &type metadata for RemoteActivitySubscription.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831E8);
  }
  return result;
}

unint64_t sub_1D2631454()
{
  unint64_t result;

  result = qword_1EFC831F0;
  if (!qword_1EFC831F0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7954, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831F0);
  }
  return result;
}

unint64_t sub_1D263149C()
{
  unint64_t result;

  result = qword_1EFC831F8;
  if (!qword_1EFC831F8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D797C, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.NoneCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC831F8);
  }
  return result;
}

unint64_t sub_1D26314E4()
{
  unint64_t result;

  result = qword_1EFC83200;
  if (!qword_1EFC83200)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7904, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.StateChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83200);
  }
  return result;
}

unint64_t sub_1D263152C()
{
  unint64_t result;

  result = qword_1EFC83208;
  if (!qword_1EFC83208)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D792C, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.StateChangesCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83208);
  }
  return result;
}

unint64_t sub_1D2631574()
{
  unint64_t result;

  result = qword_1EFC83210;
  if (!qword_1EFC83210)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D78B4, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.AlertsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83210);
  }
  return result;
}

unint64_t sub_1D26315BC()
{
  unint64_t result;

  result = qword_1EFC83218;
  if (!qword_1EFC83218)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D78DC, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.AlertsCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83218);
  }
  return result;
}

unint64_t sub_1D2631604()
{
  unint64_t result;

  result = qword_1EFC83220;
  if (!qword_1EFC83220)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7864, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83220);
  }
  return result;
}

unint64_t sub_1D263164C()
{
  unint64_t result;

  result = qword_1EFC83228;
  if (!qword_1EFC83228)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D788C, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.FullCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83228);
  }
  return result;
}

unint64_t sub_1D2631694()
{
  unint64_t result;

  result = qword_1EFC83230;
  if (!qword_1EFC83230)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D79A4, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83230);
  }
  return result;
}

unint64_t sub_1D26316DC()
{
  unint64_t result;

  result = qword_1EFC83238;
  if (!qword_1EFC83238)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D79CC, &type metadata for RemoteActivitySubscription.ActivitySubscriptionType.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83238);
  }
  return result;
}

unint64_t sub_1D2631724()
{
  unint64_t result;

  result = qword_1EFC83240;
  if (!qword_1EFC83240)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D775C, &type metadata for RemoteActivitySubscription.ActivityOwnership.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83240);
  }
  return result;
}

unint64_t sub_1D263176C()
{
  unint64_t result;

  result = qword_1EFC83248;
  if (!qword_1EFC83248)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D7784, &type metadata for RemoteActivitySubscription.ActivityOwnership.LocalCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83248);
  }
  return result;
}

unint64_t sub_1D26317B4()
{
  unint64_t result;

  result = qword_1EFC83250;
  if (!qword_1EFC83250)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D76A4, &type metadata for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83250);
  }
  return result;
}

unint64_t sub_1D26317FC()
{
  unint64_t result;

  result = qword_1EFC83258;
  if (!qword_1EFC83258)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D76CC, &type metadata for RemoteActivitySubscription.ActivityOwnership.RemoteCodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83258);
  }
  return result;
}

unint64_t sub_1D2631844()
{
  unint64_t result;

  result = qword_1EFC83260;
  if (!qword_1EFC83260)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D77AC, &type metadata for RemoteActivitySubscription.ActivityOwnership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83260);
  }
  return result;
}

unint64_t sub_1D263188C()
{
  unint64_t result;

  result = qword_1EFC83268;
  if (!qword_1EFC83268)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D77D4, &type metadata for RemoteActivitySubscription.ActivityOwnership.CodingKeys);
    atomic_store(result, (unint64_t *)&qword_1EFC83268);
  }
  return result;
}

uint64_t sub_1D26318D0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 0x6C61636F6CLL && a2 == 0xE500000000000000;
  if (v2 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65746F6D6572 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    v6 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 1;
    else
      return 2;
  }
}

uint64_t sub_1D26319B0(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 1701736302 && a2 == 0xE400000000000000;
  if (v2 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6168436574617473 && a2 == 0xEC0000007365676ELL || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x737472656C61 && a2 == 0xE600000000000000 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 1819047270 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    v6 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 3;
    else
      return 4;
  }
}

uint64_t sub_1D2631B58(uint64_t a1, uint64_t a2)
{
  BOOL v2;
  char v6;

  v2 = a1 == 25705 && a2 == 0xE200000000000000;
  if (v2 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xEA00000000004449 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E65644974736F68 && a2 == 0xEC00000079746974 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x7974697669746361 && a2 == 0xED000072656E774FLL || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x7363697274656DLL && a2 == 0xE700000000000000 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x796C696D6166 && a2 == 0xE600000000000000 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000001D26E2D90 || (sub_1D26CE3D0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x6E6F697461657263 && a2 == 0xEC00000065746144)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else
  {
    v6 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    if ((v6 & 1) != 0)
      return 7;
    else
      return 8;
  }
}

uint64_t dispatch thunk of InteractableViewModel.interactionHandler.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of InteractableViewModel.isPendingInteractionUpdate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t ExtensionMetadata.id.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t ExtensionMetadata.id.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 40))(v1, a1, v3);
}

uint64_t (*ExtensionMetadata.id.modify())()
{
  return CGSizeMake;
}

uint64_t ExtensionMetadata.version.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ExtensionMetadata() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtensionMetadata.version.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ExtensionMetadata() + 20));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ExtensionMetadata.version.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ExtensionMetadata();
  return CGSizeMake;
}

uint64_t ExtensionMetadata.widgetDescriptors.getter()
{
  type metadata accessor for ExtensionMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t ExtensionMetadata.widgetDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ExtensionMetadata() + 24);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ExtensionMetadata.widgetDescriptors.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ExtensionMetadata();
  return CGSizeMake;
}

uint64_t ExtensionMetadata.controlDescriptors.getter()
{
  type metadata accessor for ExtensionMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t ExtensionMetadata.controlDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ExtensionMetadata() + 28);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ExtensionMetadata.controlDescriptors.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ExtensionMetadata();
  return CGSizeMake;
}

uint64_t ExtensionMetadata.originOSVersion.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + *(int *)(type metadata accessor for ExtensionMetadata() + 32));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ExtensionMetadata.originOSVersion.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  _QWORD *v5;
  uint64_t result;

  v5 = (_QWORD *)(v2 + *(int *)(type metadata accessor for ExtensionMetadata() + 32));
  result = swift_bridgeObjectRelease();
  *v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ExtensionMetadata.originOSVersion.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ExtensionMetadata();
  return CGSizeMake;
}

unint64_t ExtensionMetadata.allDescriptors.getter()
{
  uint64_t v0;
  uint64_t v1;
  int *v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v1 = v0;
  v2 = (int *)type metadata accessor for ExtensionMetadata();
  v3 = *(_QWORD *)(v0 + v2[6]);
  if (v3 >> 62)
  {
    sub_1D25CCBDC();
    swift_bridgeObjectRetain();
    v7 = sub_1D26CE1E4();
    swift_bridgeObjectRelease();
    v3 = v7;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE3E8();
    sub_1D25CCBDC();
  }
  v4 = *(_QWORD *)(v1 + v2[7]);
  if (v4 >> 62)
  {
    sub_1D25CCBDC();
    swift_bridgeObjectRetain();
    v8 = sub_1D26CE1E4();
    swift_bridgeObjectRelease();
    v4 = v8;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE3E8();
    sub_1D25CCBDC();
  }
  sub_1D25F6BB0(v4);
  v5 = *(_QWORD *)(v1 + v2[9]);
  if (v5 >> 62)
  {
    sub_1D25CCBDC();
    swift_bridgeObjectRetain();
    v9 = sub_1D26CE1E4();
    swift_bridgeObjectRelease();
    v5 = v9;
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1D26CE3E8();
    sub_1D25CCBDC();
  }
  sub_1D25F6BB0(v5);
  return v3;
}

uint64_t ExtensionMetadata.activityDescriptors.getter()
{
  type metadata accessor for ExtensionMetadata();
  return swift_bridgeObjectRetain();
}

uint64_t ExtensionMetadata.activityDescriptors.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t result;

  v3 = *(int *)(type metadata accessor for ExtensionMetadata() + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + v3) = a1;
  return result;
}

uint64_t (*ExtensionMetadata.activityDescriptors.modify())(_QWORD, _QWORD, _QWORD, _QWORD)
{
  type metadata accessor for ExtensionMetadata();
  return CGSizeMake;
}

uint64_t ExtensionMetadata.init(id:version:originOSVersion:widgetDescriptors:controlDescriptors:activityDescriptors:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  int *v17;
  _QWORD *v18;
  uint64_t v19;
  uint64_t result;
  _QWORD *v21;

  v17 = (int *)type metadata accessor for ExtensionMetadata();
  v18 = (_QWORD *)(a9 + v17[8]);
  v19 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v19 - 8) + 32))(a9, a1, v19);
  v21 = (_QWORD *)(a9 + v17[5]);
  *v21 = a2;
  v21[1] = a3;
  *v18 = a4;
  v18[1] = a5;
  *(_QWORD *)(a9 + v17[6]) = a6;
  *(_QWORD *)(a9 + v17[9]) = a8;
  *(_QWORD *)(a9 + v17[7]) = a7;
  return result;
}

uint64_t sub_1D26324BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v3 - 8) + 16))(a1, v1, v3);
}

uint64_t sub_1D26324F8()
{
  return sub_1D2536488((unint64_t *)&unk_1ED963370, &qword_1ED9633A0, MEMORY[0x1E0D0FB50]);
}

uint64_t *initializeBufferWithCopyOfBuffer for ExtensionMetadata(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _QWORD *v10;
  _QWORD *v11;
  uint64_t v12;
  uint64_t v13;
  _QWORD *v14;
  _QWORD *v15;
  uint64_t v16;
  uint64_t v17;

  v5 = *(_DWORD *)(*((_QWORD *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(_QWORD *)(v7 - 8) + 16))(a1, a2, v7);
    v8 = a3[5];
    v9 = a3[6];
    v10 = (uint64_t *)((char *)a1 + v8);
    v11 = (uint64_t *)((char *)a2 + v8);
    v12 = v11[1];
    *v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    v13 = a3[8];
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    v14 = (uint64_t *)((char *)a1 + v13);
    v15 = (uint64_t *)((char *)a2 + v13);
    v16 = v15[1];
    *v14 = *v15;
    v14[1] = v16;
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t assignWithCopy for ExtensionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  _QWORD *v9;
  uint64_t v10;
  _QWORD *v11;
  _QWORD *v12;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 24))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (_QWORD *)(a2 + v7);
  *v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v10 = a3[8];
  v11 = (_QWORD *)(a1 + v10);
  v12 = (_QWORD *)(a2 + v10);
  *v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for ExtensionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 32))(a1, a2, v6);
  v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(_QWORD *)(a1 + v7) = *(_QWORD *)(a2 + v7);
  v8 = a3[8];
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  *(_OWORD *)(a1 + v8) = *(_OWORD *)(a2 + v8);
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  return a1;
}

uint64_t assignWithTake for ExtensionMetadata(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6;
  uint64_t v7;
  _QWORD *v8;
  uint64_t *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD *v13;
  uint64_t *v14;
  uint64_t v15;
  uint64_t v16;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v6 - 8) + 40))(a1, a2, v6);
  v7 = a3[5];
  v8 = (_QWORD *)(a1 + v7);
  v9 = (uint64_t *)(a2 + v7);
  v11 = *v9;
  v10 = v9[1];
  *v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[6]) = *(_QWORD *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[7]) = *(_QWORD *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  v12 = a3[8];
  v13 = (_QWORD *)(a1 + v12);
  v14 = (uint64_t *)(a2 + v12);
  v16 = *v14;
  v15 = v14[1];
  *v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  *(_QWORD *)(a1 + a3[9]) = *(_QWORD *)(a2 + a3[9]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1D2632864(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  unint64_t v9;

  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v7 = *(_QWORD *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == (_DWORD)a2)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, a2, v6);
  v9 = *(_QWORD *)(a1 + *(int *)(a3 + 20) + 8);
  if (v9 >= 0xFFFFFFFF)
    LODWORD(v9) = -1;
  return (v9 + 1);
}

uint64_t sub_1D26328E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result;
  uint64_t v9;

  result = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v9 = *(_QWORD *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56))(a1, a2, a2, result);
  *(_QWORD *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  return result;
}

void sub_1D2632968()
{
  unint64_t v0;

  sub_1D26329F4();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

void sub_1D26329F4()
{
  unint64_t v0;
  uint64_t v1;

  if (!qword_1ED9633A8)
  {
    __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED96FE70);
    sub_1D2536488(&qword_1ED963308, &qword_1ED96FE70, MEMORY[0x1E0D0F968]);
    sub_1D2536488(&qword_1ED963330, &qword_1ED96FE70, MEMORY[0x1E0D0F990]);
    sub_1D2536488(&qword_1ED963310, &qword_1ED96FE70, MEMORY[0x1E0D0F970]);
    sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
    v0 = sub_1D26CBD60();
    if (!v1)
      atomic_store(v0, (unint64_t *)&qword_1ED9633A8);
  }
}

uint64_t sub_1D2632AE4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  _DWORD *v15;
  uint64_t v16;
  void *v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  void (*v21)(char *, uint64_t, uint64_t, uint64_t);
  unint64_t v22;
  unint64_t v23;
  uint64_t v24;
  char *v25;
  void (*v26)(char *, uint64_t);
  char *v27;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  id v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t Strong;
  uint64_t v39;
  uint64_t KeyPath;
  uint64_t v41;
  id v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  id v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  id v58;
  uint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  uint64_t v64;
  uint64_t v65;
  id v66;
  uint64_t v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  char *v72;
  uint64_t v73;
  id v74;
  uint64_t v75;
  uint64_t v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  uint64_t v80;
  uint64_t v81;
  id v82;
  uint64_t v83;
  uint64_t v84;
  uint64_t v85;
  uint64_t v86;
  uint64_t v87;
  uint64_t v88;
  uint64_t v89;
  uint64_t v90;
  char *v91;
  uint64_t v92;
  uint64_t v93;
  void *v94;
  void *v95;
  id v96;
  void *v97;
  id v98;
  void *v99;
  id v100;
  uint64_t v101;
  id v102;
  uint64_t v104;
  char *v105;
  char *v106;
  uint64_t v107;
  uint64_t v108;
  uint64_t v109;
  void (*v110)(char *, uint64_t);
  uint64_t v111;
  void (*v112)(char *, uint64_t);
  void (*v113)(char *, uint64_t);
  unint64_t v114;
  unint64_t v115;
  void (*v116)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v117;
  id v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  uint64_t v122;
  id aBlock[6];

  v1 = v0;
  v108 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963400);
  v107 = *(_QWORD *)(v108 - 8);
  MEMORY[0x1E0C80A78](v108);
  v106 = (char *)&v104 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BFC8);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v104 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v121 = sub_1D26CDD7C();
  v119 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v7 = (char *)&v104 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = sub_1D26CDE60();
  v112 = *(void (**)(char *, uint64_t))(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v104 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B40);
  v120 = *(_QWORD *)(v11 - 8);
  MEMORY[0x1E0C80A78](v11);
  v13 = (char *)&v104 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit28IOSSystemEnvironmentProvider_subscriptions) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit28IOSSystemEnvironmentProvider_colorSchemeObserver) = 0;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)(v0 + 16) = sub_1D26CC150();
  type metadata accessor for UnfairLock();
  v14 = swift_allocObject();
  v15 = (_DWORD *)swift_slowAlloc();
  *v15 = 0;
  *(_QWORD *)(v14 + 16) = v15;
  *(_QWORD *)(v1 + 24) = v14;
  sub_1D26CC798();
  v16 = swift_allocObject();
  v104 = v16 + 16;
  swift_weakInit();
  v17 = (void *)objc_opt_self();
  swift_retain_n();
  swift_retain();
  v118 = v17;
  v18 = objc_msgSend(v17, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  v19 = sub_1D2539514(0, (unint64_t *)&qword_1ED96EE50);
  aBlock[0] = (id)sub_1D26CDD94();
  v20 = sub_1D26CDD58();
  v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v20 - 8) + 56);
  v117 = v20;
  v116 = v21;
  ((void (*)(char *, uint64_t, uint64_t))v21)(v5, 1, 1);
  v22 = sub_1D2636B60();
  v23 = sub_1D25744A4();
  v122 = v19;
  v115 = v22;
  v114 = v23;
  sub_1D26CC264();
  v105 = v5;
  v24 = (uint64_t)v5;
  v25 = v13;
  sub_1D253703C(v24, &qword_1ED96BFC8);

  v113 = *(void (**)(char *, uint64_t))(v119 + 8);
  v113(v7, v121);
  v26 = (void (*)(char *, uint64_t))*((_QWORD *)v112 + 1);
  v27 = v10;
  v119 = v8;
  v112 = v26;
  v26(v10, v8);
  v28 = swift_allocObject();
  *(_QWORD *)(v28 + 16) = sub_1D2636B2C;
  *(_QWORD *)(v28 + 24) = v16;
  v29 = sub_1D2536488(&qword_1ED961B38, &qword_1ED961B40, MEMORY[0x1E0C95BB0]);
  swift_retain();
  v111 = v29;
  sub_1D26CC288();
  swift_release();
  v30 = *(void (**)(char *, uint64_t))(v120 + 8);
  v120 = v11;
  v110 = v30;
  v30(v25, v11);
  v31 = v1 + OBJC_IVAR____TtC9ChronoKit28IOSSystemEnvironmentProvider_subscriptions;
  swift_beginAccess();
  v109 = v31;
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  if (swift_weakLoadStrong())
  {
    swift_getKeyPath();
    sub_1D2635C78();
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v32 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v33 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v34 = (uint64_t)v105;
  v116(v105, 1, 1, v117);
  v35 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v35);
  v36 = swift_allocObject();
  *(_QWORD *)(v36 + 16) = sub_1D2636BF8;
  *(_QWORD *)(v36 + 24) = v32;
  swift_retain();
  v37 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v37);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v39 = Strong;
    KeyPath = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityDifferentiateWithoutColor", 39, 2, KeyPath, v39, MEMORY[0x1E0DC45C8], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v41 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v42 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v116((char *)v34, 1, 1, v117);
  v43 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v43);
  v44 = swift_allocObject();
  *(_QWORD *)(v44 + 16) = sub_1D2636C50;
  *(_QWORD *)(v44 + 24) = v41;
  swift_retain();
  v45 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v45);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v46 = swift_weakLoadStrong();
  if (v46)
  {
    v47 = v46;
    v48 = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityInvertColors", 26, 2, v48, v47, MEMORY[0x1E0DC4540], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v49 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v50 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v116((char *)v34, 1, 1, v117);
  v51 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v51);
  v52 = swift_allocObject();
  *(_QWORD *)(v52 + 16) = sub_1D2636CCC;
  *(_QWORD *)(v52 + 24) = v49;
  swift_retain();
  v53 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v53);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v54 = swift_weakLoadStrong();
  if (v54)
  {
    v55 = v54;
    v56 = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityReduceMotion", 26, 2, v56, v55, MEMORY[0x1E0DC4548], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v57 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v58 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v116((char *)v34, 1, 1, v117);
  v59 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v59);
  v60 = swift_allocObject();
  *(_QWORD *)(v60 + 16) = sub_1D2636D24;
  *(_QWORD *)(v60 + 24) = v57;
  swift_retain();
  v61 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v61);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v62 = swift_weakLoadStrong();
  if (v62)
  {
    v63 = v62;
    v64 = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityReduceTransparency", 32, 2, v64, v63, MEMORY[0x1E0DC4550], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v65 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v66 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v116((char *)v34, 1, 1, v117);
  v67 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v67);
  v68 = swift_allocObject();
  *(_QWORD *)(v68 + 16) = sub_1D2636D7C;
  *(_QWORD *)(v68 + 24) = v65;
  swift_retain();
  v69 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v69);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v70 = swift_weakLoadStrong();
  if (v70)
  {
    v71 = v70;
    v72 = (char *)swift_getKeyPath();
    sub_1D2635F5C((uint64_t)"_colorSchemeContrast", 20, 2, v72, v71);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v73 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v74 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v116((char *)v34, 1, 1, v117);
  v75 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v75);
  v76 = swift_allocObject();
  *(_QWORD *)(v76 + 16) = sub_1D2636DF4;
  *(_QWORD *)(v76 + 24) = v73;
  swift_retain();
  v77 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v77);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v78 = swift_weakLoadStrong();
  if (v78)
  {
    v79 = v78;
    v80 = swift_getKeyPath();
    sub_1D2636270((uint64_t)"legibilityWeight", 16, 2, v80, v79);
    swift_release();
    swift_release();
  }
  swift_release();
  swift_release_n();
  v81 = swift_allocObject();
  swift_weakInit();
  swift_retain_n();
  v82 = objc_msgSend(v118, sel_defaultCenter);
  sub_1D26CDE6C();

  sub_1D26CDD70();
  aBlock[0] = (id)sub_1D26CDD94();
  v116((char *)v34, 1, 1, v117);
  v83 = v119;
  sub_1D26CC264();
  sub_1D253703C(v34, &qword_1ED96BFC8);

  v113(v7, v121);
  v112(v27, v83);
  v84 = swift_allocObject();
  *(_QWORD *)(v84 + 16) = sub_1D2636E4C;
  *(_QWORD *)(v84 + 24) = v81;
  swift_retain();
  v85 = v120;
  sub_1D26CC288();
  swift_release();
  v110(v25, v85);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_beginAccess();
  v86 = swift_weakLoadStrong();
  if (v86)
  {
    v87 = v86;
    v88 = swift_getKeyPath();
    sub_1D263658C((uint64_t)"sizeCategory", 12, 2, v88, v87);
    swift_release_n();
  }
  swift_release();
  swift_release();
  swift_release();
  v89 = swift_allocObject();
  swift_weakInit();
  v90 = qword_1ED9625F0;
  swift_retain();
  if (v90 != -1)
    swift_once();
  aBlock[0] = (id)qword_1ED9636E8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963470);
  sub_1D2536488(&qword_1ED963468, &qword_1ED963470, MEMORY[0x1E0C95F48]);
  aBlock[0] = (id)sub_1D26CC204();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963450);
  sub_1D2536488(&qword_1ED963448, &qword_1ED963450, MEMORY[0x1E0C95D90]);
  v91 = v106;
  sub_1D26CC24C();
  swift_release();
  v92 = swift_allocObject();
  *(_QWORD *)(v92 + 16) = sub_1D2636EC4;
  *(_QWORD *)(v92 + 24) = v89;
  sub_1D2536488(&qword_1ED9633F8, &qword_1ED963400, MEMORY[0x1E0C95AD0]);
  swift_retain();
  v93 = v108;
  sub_1D26CC288();
  swift_release();
  (*(void (**)(char *, uint64_t))(v107 + 8))(v91, v93);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  sub_1D2634FE8();
  swift_release();
  v94 = (void *)sub_1D26CDD94();
  v95 = (void *)swift_allocObject();
  swift_weakInit();
  v96 = objc_allocWithZone(MEMORY[0x1E0DC5BA0]);
  aBlock[4] = sub_1D2636ECC;
  aBlock[5] = v95;
  aBlock[0] = (id)MEMORY[0x1E0C809B0];
  aBlock[1] = (id)1107296256;
  aBlock[2] = sub_1D255A5C8;
  aBlock[3] = &block_descriptor_10;
  v97 = _Block_copy(aBlock);
  swift_retain();
  swift_release();
  v98 = objc_msgSend(v96, sel_initWithChangesDeliveredOnQueue_toBlock_, v94, v97);

  _Block_release(v97);
  swift_release();
  v99 = *(void **)(v1 + OBJC_IVAR____TtC9ChronoKit28IOSSystemEnvironmentProvider_colorSchemeObserver);
  *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit28IOSSystemEnvironmentProvider_colorSchemeObserver) = v98;
  v100 = v98;

  v101 = swift_getKeyPath();
  v102 = v100;
  sub_1D26372B4((uint64_t)"colorScheme", 11, 2, v101, v1, v102, (void (*)(_BYTE *))sub_1D2637294);
  swift_release();

  if (qword_1ED96F1C8 != -1)
    swift_once();
  aBlock[0] = *(id *)(*((_QWORD *)off_1ED96F1C0 + 2) + 72);
  swift_retain();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCF0);
  sub_1D2536488(&qword_1ED96FCE8, &qword_1ED96FCF0, MEMORY[0x1E0C95D90]);
  sub_1D26CC288();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  sub_1D2635500();
  swift_release();
  aBlock[0] = *(id *)(*((_QWORD *)off_1ED96F1C0 + 3) + 72);
  swift_retain();
  swift_retain();
  sub_1D26CC288();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  swift_getKeyPath();
  sub_1D26357A0();
  swift_release();

  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D26345FC()
{
  uint64_t result;
  uint64_t v1;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    KeyPath = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityDifferentiateWithoutColor", 39, 2, KeyPath, v1, MEMORY[0x1E0DC45C8], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2634690()
{
  uint64_t result;
  uint64_t v1;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    KeyPath = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityInvertColors", 26, 2, KeyPath, v1, MEMORY[0x1E0DC4540], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2634724()
{
  uint64_t result;
  uint64_t v1;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    KeyPath = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityReduceMotion", 26, 2, KeyPath, v1, MEMORY[0x1E0DC4548], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26347B8()
{
  uint64_t result;
  uint64_t v1;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v1 = result;
    KeyPath = swift_getKeyPath();
    sub_1D26352C8((uint64_t)"_accessibilityReduceTransparency", 32, 2, KeyPath, v1, MEMORY[0x1E0DC4550], (void (*)(_BYTE *))sub_1D2637290);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D263484C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B90);
  MEMORY[0x1E0C80A78](v2);
  sub_1D26376BC(a1, (uint64_t)&v5 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  return sub_1D26CC4EC();
}

uint64_t sub_1D26348C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t result;
  uint64_t v9;
  uint64_t KeyPath;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v9 = result;
    KeyPath = swift_getKeyPath();
    a5(a3, a4, 2, KeyPath, v9);
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2634960@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned int *v20;
  uint64_t v21;
  uint64_t v22;
  char v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  char v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  char v44;
  uint64_t v45;
  uint64_t v46;
  uint64_t v47;
  uint64_t v48;
  char v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  char v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  uint64_t v58;
  char v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  char v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  id v69;
  char v70;
  id v71;

  v4 = sub_1D26CD938();
  v6 = v5;
  if (v4 == sub_1D26CD938() && v6 == v7)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_15;
  }
  v9 = sub_1D26CE3D0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v9 & 1) != 0)
  {
LABEL_15:

    v20 = (unsigned int *)MEMORY[0x1E0CDB330];
    goto LABEL_16;
  }
  v10 = sub_1D26CD938();
  v12 = v11;
  if (v10 == sub_1D26CD938() && v12 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    v15 = sub_1D26CE3D0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v15 & 1) == 0)
    {
      v16 = sub_1D26CD938();
      v18 = v17;
      if (v16 == sub_1D26CD938() && v18 == v19)
      {
        swift_bridgeObjectRelease_n();
LABEL_20:

        v20 = (unsigned int *)MEMORY[0x1E0CDB370];
        goto LABEL_16;
      }
      v24 = sub_1D26CE3D0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v24 & 1) != 0)
        goto LABEL_20;
      v25 = sub_1D26CD938();
      v27 = v26;
      if (v25 == sub_1D26CD938() && v27 == v28)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        v29 = sub_1D26CE3D0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v29 & 1) == 0)
        {
          v30 = sub_1D26CD938();
          v32 = v31;
          if (v30 == sub_1D26CD938() && v32 == v33)
          {
            swift_bridgeObjectRelease_n();
          }
          else
          {
            v34 = sub_1D26CE3D0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if ((v34 & 1) == 0)
            {
              v35 = sub_1D26CD938();
              v37 = v36;
              if (v35 == sub_1D26CD938() && v37 == v38)
              {
                swift_bridgeObjectRelease_n();
              }
              else
              {
                v39 = sub_1D26CE3D0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if ((v39 & 1) == 0)
                {
                  v40 = sub_1D26CD938();
                  v42 = v41;
                  if (v40 == sub_1D26CD938() && v42 == v43)
                  {
                    swift_bridgeObjectRelease_n();
                  }
                  else
                  {
                    v44 = sub_1D26CE3D0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v44 & 1) == 0)
                    {
                      v45 = sub_1D26CD938();
                      v47 = v46;
                      if (v45 == sub_1D26CD938() && v47 == v48)
                      {
                        swift_bridgeObjectRelease_n();
                      }
                      else
                      {
                        v49 = sub_1D26CE3D0();
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        if ((v49 & 1) == 0)
                        {
                          v50 = sub_1D26CD938();
                          v52 = v51;
                          if (v50 == sub_1D26CD938() && v52 == v53)
                          {
                            swift_bridgeObjectRelease_n();
                          }
                          else
                          {
                            v54 = sub_1D26CE3D0();
                            swift_bridgeObjectRelease();
                            swift_bridgeObjectRelease();
                            if ((v54 & 1) == 0)
                            {
                              v55 = sub_1D26CD938();
                              v57 = v56;
                              if (v55 == sub_1D26CD938() && v57 == v58)
                              {
                                swift_bridgeObjectRelease_n();
                              }
                              else
                              {
                                v59 = sub_1D26CE3D0();
                                swift_bridgeObjectRelease();
                                swift_bridgeObjectRelease();
                                if ((v59 & 1) == 0)
                                {
                                  v60 = sub_1D26CD938();
                                  v62 = v61;
                                  if (v60 == sub_1D26CD938() && v62 == v63)
                                  {
                                    swift_bridgeObjectRelease_n();
                                  }
                                  else
                                  {
                                    v64 = sub_1D26CE3D0();
                                    swift_bridgeObjectRelease();
                                    swift_bridgeObjectRelease();
                                    if ((v64 & 1) == 0)
                                    {
                                      v65 = sub_1D26CD938();
                                      v67 = v66;
                                      if (v65 == sub_1D26CD938() && v67 == v68)
                                      {
                                        v69 = a1;

                                        swift_bridgeObjectRelease_n();
                                      }
                                      else
                                      {
                                        v70 = sub_1D26CE3D0();
                                        v71 = a1;

                                        swift_bridgeObjectRelease();
                                        swift_bridgeObjectRelease();
                                        if ((v70 & 1) == 0)
                                          goto LABEL_26;
                                      }
                                      v20 = (unsigned int *)MEMORY[0x1E0CDB320];
                                      goto LABEL_16;
                                    }
                                  }

                                  v20 = (unsigned int *)MEMORY[0x1E0CDB318];
                                  goto LABEL_16;
                                }
                              }

                              v20 = (unsigned int *)MEMORY[0x1E0CDB350];
                              goto LABEL_16;
                            }
                          }

                          v20 = (unsigned int *)MEMORY[0x1E0CDB340];
                          goto LABEL_16;
                        }
                      }

                      v20 = (unsigned int *)MEMORY[0x1E0CDB348];
                      goto LABEL_16;
                    }
                  }

                  v20 = (unsigned int *)MEMORY[0x1E0CDB300];
                  goto LABEL_16;
                }
              }

              v20 = (unsigned int *)MEMORY[0x1E0CDB338];
              goto LABEL_16;
            }
          }

          v20 = (unsigned int *)MEMORY[0x1E0CDB328];
          goto LABEL_16;
        }
      }

LABEL_26:
      v20 = (unsigned int *)MEMORY[0x1E0CDB358];
      goto LABEL_16;
    }
  }

  v20 = (unsigned int *)MEMORY[0x1E0CDB368];
LABEL_16:
  v21 = *v20;
  v22 = sub_1D26CC870();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v22 - 8) + 104))(a2, v21, v22);
}

uint64_t sub_1D2634FE8()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t Strong;
  uint64_t v9;
  uint64_t KeyPath;
  id v12[4];

  v12[3] = *(id *)MEMORY[0x1E0C80C00];
  v0 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D50]), sel_init);
  v12[0] = v0;
  v1 = objc_msgSend((id)objc_opt_self(), sel_archivedPreferencesWithHash_, v12);
  v2 = v12[0];

  v3 = sub_1D26CD7F4();
  v4 = v2;
  v5 = sub_1D26CB8E0();
  v7 = v6;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v9 = Strong;
    KeyPath = swift_getKeyPath();
    sub_1D253FE08(v5, v7);
    swift_bridgeObjectRetain();
    sub_1D2636EDC((uint64_t)"localizationToken", 17, 2, KeyPath, v9, v5, v7, v3);
    sub_1D253EE04(v5, v7);
    swift_bridgeObjectRelease();
    sub_1D253EE04(v5, v7);
    swift_release();
    swift_release();
  }
  else
  {
    sub_1D253EE04(v5, v7);
  }
  return swift_bridgeObjectRelease();
}

BOOL sub_1D26351A4(_QWORD *a1)
{
  return *a1 == 0;
}

void sub_1D26351B4(void *a1)
{
  uint64_t Strong;
  uint64_t v3;
  uint64_t KeyPath;
  id v5;

  swift_beginAccess();
  Strong = swift_weakLoadStrong();
  if (Strong)
  {
    v3 = Strong;
    KeyPath = swift_getKeyPath();
    v5 = a1;
    sub_1D26372B4((uint64_t)"colorScheme", 11, 2, KeyPath, v3, v5, (void (*)(_BYTE *))sub_1D26377C4);
    swift_release();
    swift_release();

  }
}

uint64_t sub_1D263525C(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void (*a6)(_BYTE *))
{
  char v10;
  uint64_t KeyPath;

  v10 = *a1;
  KeyPath = swift_getKeyPath();
  sub_1D2635A40(a4, a5, 2, KeyPath, a2, v10, a6);
  return swift_release();
}

uint64_t sub_1D26352C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t (*a6)(void), void (*a7)(_BYTE *))
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;

  v20 = a6();
  if (qword_1ED9621C8 != -1)
    swift_once();
  v8 = sub_1D26CC09C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED977D08);
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDD04();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = sub_1D26CE0B8();
    sub_1D2537880(v13, v14, &v19);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    v15 = sub_1D26CD98C();
    sub_1D2537880(v15, v16, &v19);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v9, v10, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v12, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);
  }

  MEMORY[0x1E0C80A78](v17);
  return sub_1D2646170(a7);
}

uint64_t sub_1D2635500()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  if (qword_1ED96F1C8 != -1)
    swift_once();
  v0 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 2) + 88);
  v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1);
  LOBYTE(v1) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  swift_release();
  swift_release();
  v14 = v1 & 1;
  if (qword_1ED9621C8 != -1)
    swift_once();
  v2 = sub_1D26CC09C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED977D08);
  v3 = sub_1D26CC084();
  v4 = sub_1D26CDD04();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1D26CE0B8();
    sub_1D2537880(v7, v8, &v13);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    v9 = sub_1D26CD98C();
    sub_1D2537880(v9, v10, &v13);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v3, v4, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v6, -1, -1);
    MEMORY[0x1D823A5E0](v5, -1, -1);
  }

  MEMORY[0x1E0C80A78](v11);
  return sub_1D2646170((void (*)(_BYTE *))sub_1D2637290);
}

uint64_t sub_1D26357A0()
{
  uint64_t v0;
  os_unfair_lock_s *v1;
  uint64_t v2;
  NSObject *v3;
  os_log_type_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  unint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v13;
  char v14;

  if (qword_1ED96F1C8 != -1)
    swift_once();
  v0 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 3) + 88);
  v1 = *(os_unfair_lock_s **)(v0 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v1);
  LOBYTE(v1) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v0 + 16));
  swift_release();
  swift_release();
  v14 = v1 & 1;
  if (qword_1ED9621C8 != -1)
    swift_once();
  v2 = sub_1D26CC09C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED977D08);
  v3 = sub_1D26CC084();
  v4 = sub_1D26CDD04();
  if (os_log_type_enabled(v3, v4))
  {
    v5 = swift_slowAlloc();
    v6 = swift_slowAlloc();
    v13 = v6;
    *(_DWORD *)v5 = 136446466;
    v7 = sub_1D26CE0B8();
    sub_1D2537880(v7, v8, &v13);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v5 + 12) = 2082;
    v9 = sub_1D26CD98C();
    sub_1D2537880(v9, v10, &v13);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v3, v4, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v6, -1, -1);
    MEMORY[0x1D823A5E0](v5, -1, -1);
  }

  MEMORY[0x1E0C80A78](v11);
  return sub_1D2646170((void (*)(_BYTE *))sub_1D2637290);
}

uint64_t sub_1D2635A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, void (*a7)(_BYTE *))
{
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  uint64_t v19;
  char v20;

  v20 = a6;
  if (qword_1ED9621C8 != -1)
    swift_once();
  v8 = sub_1D26CC09C();
  __swift_project_value_buffer(v8, (uint64_t)qword_1ED977D08);
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDD04();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v12 = swift_slowAlloc();
    v19 = v12;
    *(_DWORD *)v11 = 136446466;
    v13 = sub_1D26CE0B8();
    sub_1D2537880(v13, v14, &v19);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2082;
    v15 = sub_1D26CD98C();
    sub_1D2537880(v15, v16, &v19);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v9, v10, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v12, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);
  }

  MEMORY[0x1E0C80A78](v17);
  return sub_1D2646170(a7);
}

void sub_1D2635C78()
{
  id v0;
  id v1;
  id v2;
  uint64_t v3;
  id v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  id v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  id v16;

  v0 = objc_msgSend((id)objc_opt_self(), sel_mainScreen);
  v1 = objc_msgSend(v0, sel_displayConfiguration);

  if (v1)
  {
    v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0D10188]), sel_initWithDisplayConfiguration_, v1);

    v16 = v2;
    if (qword_1ED9621C8 != -1)
      swift_once();
    v3 = sub_1D26CC09C();
    __swift_project_value_buffer(v3, (uint64_t)qword_1ED977D08);
    v4 = v2;
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDD04();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v8 = swift_slowAlloc();
      v15 = v8;
      *(_DWORD *)v7 = 136446466;
      v9 = sub_1D26CE0B8();
      sub_1D2537880(v9, v10, &v15);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2082;
      sub_1D2539514(0, (unint64_t *)&qword_1ED96FEC8);
      v11 = v4;
      v12 = sub_1D26CD98C();
      sub_1D2537880(v12, v13, &v15);
      sub_1D26CDF50();

      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v5, v6, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v8, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

    }
    MEMORY[0x1E0C80A78](v14);
    sub_1D2646170((void (*)(_BYTE *))sub_1D2637758);

  }
  else
  {
    __break(1u);
  }
}

uint64_t sub_1D2635F5C(uint64_t a1, uint64_t a2, int a3, char *a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  char *v16;
  _BOOL4 v17;
  unsigned int *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  NSObject *v21;
  os_log_type_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  unint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  void (*v30)(char *, uint64_t);
  uint64_t v31;
  uint64_t v32;
  char *v34;
  uint64_t v35;
  char *v36;
  int v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;

  LODWORD(v39) = a3;
  v38 = a2;
  v7 = sub_1D26CC864();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = MEMORY[0x1E0C80A78](v7);
  v11 = (char *)&v34 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12 = MEMORY[0x1E0C80A78](v9);
  v14 = (char *)&v34 - v13;
  MEMORY[0x1E0C80A78](v12);
  v16 = (char *)&v34 - v15;
  v17 = UIAccessibilityDarkerSystemColorsEnabled();
  v18 = (unsigned int *)MEMORY[0x1E0CDB2D8];
  if (!v17)
    v18 = (unsigned int *)MEMORY[0x1E0CDB2D0];
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v16, *v18, v7);
  if (qword_1ED9621C8 != -1)
    swift_once();
  v19 = sub_1D26CC09C();
  __swift_project_value_buffer(v19, (uint64_t)qword_1ED977D08);
  v20 = *(void (**)(char *, char *, uint64_t))(v8 + 16);
  v20(v14, v16, v7);
  v21 = sub_1D26CC084();
  v22 = sub_1D26CDD04();
  v37 = v22;
  if (os_log_type_enabled(v21, v22))
  {
    v23 = swift_slowAlloc();
    v34 = v11;
    v24 = v23;
    v35 = swift_slowAlloc();
    v41 = v35;
    *(_DWORD *)v24 = 136446466;
    v36 = a4;
    v25 = sub_1D26CE0B8();
    v27 = sub_1D2537880(v25, v26, &v41);
    v39 = a5;
    v40 = v27;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v24 + 12) = 2082;
    v20(v34, v14, v7);
    v28 = sub_1D26CD98C();
    v40 = sub_1D2537880(v28, v29, &v41);
    a4 = v36;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v30 = *(void (**)(char *, uint64_t))(v8 + 8);
    v30(v14, v7);
    _os_log_impl(&dword_1D2531000, v21, (os_log_type_t)v37, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v24, 0x16u);
    v31 = v35;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v31, -1, -1);
    MEMORY[0x1D823A5E0](v24, -1, -1);
  }
  else
  {
    v30 = *(void (**)(char *, uint64_t))(v8 + 8);
    v30(v14, v7);
  }

  MEMORY[0x1E0C80A78](v32);
  *(&v34 - 2) = a4;
  *(&v34 - 1) = v16;
  sub_1D2646170((void (*)(_BYTE *))sub_1D263770C);
  return ((uint64_t (*)(char *, uint64_t))v30)(v16, v7);
}

uint64_t sub_1D2636270(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  char *v15;
  id v16;
  uint64_t v17;
  NSObject *v18;
  os_log_type_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  unint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  LODWORD(v34) = a3;
  v33 = a2;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B90);
  v8 = MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = MEMORY[0x1E0C80A78](v8);
  v13 = (char *)&v31 - v12;
  MEMORY[0x1E0C80A78](v11);
  v15 = (char *)&v31 - v14;
  v16 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  objc_msgSend(v16, sel_legibilityWeight);

  sub_1D26CC3FC();
  if (qword_1ED9621C8 != -1)
    swift_once();
  v17 = sub_1D26CC09C();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED977D08);
  sub_1D26376BC((uint64_t)v15, (uint64_t)v13);
  v18 = sub_1D26CC084();
  v19 = sub_1D26CDD04();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = swift_slowAlloc();
    v21 = swift_slowAlloc();
    v32 = a4;
    v22 = v21;
    v36 = v21;
    *(_DWORD *)v20 = 136446466;
    v31 = v7;
    v23 = sub_1D26CE0B8();
    v25 = sub_1D2537880(v23, v24, &v36);
    v34 = a5;
    v35 = v25;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v20 + 12) = 2082;
    sub_1D26376BC((uint64_t)v13, (uint64_t)v10);
    v26 = sub_1D26CD98C();
    v35 = sub_1D2537880(v26, v27, &v36);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D253703C((uint64_t)v13, &qword_1ED961B90);
    _os_log_impl(&dword_1D2531000, v18, v19, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v20, 0x16u);
    swift_arrayDestroy();
    v28 = v22;
    a4 = v32;
    MEMORY[0x1D823A5E0](v28, -1, -1);
    MEMORY[0x1D823A5E0](v20, -1, -1);
  }
  else
  {
    sub_1D253703C((uint64_t)v13, &qword_1ED961B90);
  }

  MEMORY[0x1E0C80A78](v29);
  *(&v31 - 2) = a4;
  *(&v31 - 1) = (uint64_t)v15;
  sub_1D2646170((void (*)(_BYTE *))sub_1D2637704);
  return sub_1D253703C((uint64_t)v15, &qword_1ED961B90);
}

uint64_t sub_1D263658C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  id v15;
  id v16;
  uint64_t v17;
  void (*v18)(char *, char *, uint64_t);
  NSObject *v19;
  os_log_type_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  uint64_t v24;
  unint64_t v25;
  void (*v26)(char *, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD v30[3];
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;

  v33 = a4;
  LODWORD(v31) = a3;
  v30[2] = a2;
  v6 = sub_1D26CC870();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v32 = (char *)v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = MEMORY[0x1E0C80A78](v8);
  v12 = (char *)v30 - v11;
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)v30 - v13;
  v15 = objc_msgSend((id)objc_opt_self(), sel_currentTraitCollection);
  v16 = objc_msgSend(v15, sel_preferredContentSizeCategory);

  sub_1D2634960(v16, (uint64_t)v14);
  if (qword_1ED9621C8 != -1)
    swift_once();
  v17 = sub_1D26CC09C();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED977D08);
  v18 = *(void (**)(char *, char *, uint64_t))(v7 + 16);
  v18(v12, v14, v6);
  v19 = sub_1D26CC084();
  v20 = sub_1D26CDD04();
  if (os_log_type_enabled(v19, v20))
  {
    v21 = swift_slowAlloc();
    v30[0] = swift_slowAlloc();
    v35 = v30[0];
    *(_DWORD *)v21 = 136446466;
    v30[1] = a5;
    v22 = sub_1D26CE0B8();
    v34 = sub_1D2537880(v22, v23, &v35);
    v31 = v7;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v21 + 12) = 2082;
    v18(v32, v12, v6);
    v24 = sub_1D26CD98C();
    v34 = sub_1D2537880(v24, v25, &v35);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v26 = *(void (**)(char *, uint64_t))(v31 + 8);
    v26(v12, v6);
    _os_log_impl(&dword_1D2531000, v19, v20, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v21, 0x16u);
    v27 = v30[0];
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v27, -1, -1);
    MEMORY[0x1D823A5E0](v21, -1, -1);
  }
  else
  {
    v26 = *(void (**)(char *, uint64_t))(v7 + 8);
    v26(v12, v6);
  }

  MEMORY[0x1E0C80A78](v28);
  v30[-2] = v33;
  v30[-1] = v14;
  sub_1D2646170((void (*)(_BYTE *))sub_1D263769C);
  return ((uint64_t (*)(char *, uint64_t))v26)(v14, v6);
}

uint64_t sub_1D26368C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v7;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B90);
  MEMORY[0x1E0C80A78](v4);
  sub_1D26376BC(a3, (uint64_t)&v7 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1D2636948(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(_QWORD))
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v9;

  v5 = a4(0);
  MEMORY[0x1E0C80A78](v5);
  (*(void (**)(char *, uint64_t))(v6 + 16))((char *)&v9 - v7, a3);
  return swift_setAtWritableKeyPath();
}

void sub_1D26369CC()
{
  uint64_t v0;

  swift_bridgeObjectRelease();

}

uint64_t sub_1D26369F8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  v2 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_1D2636A78()
{
  return type metadata accessor for IOSSystemEnvironmentProvider();
}

uint64_t type metadata accessor for IOSSystemEnvironmentProvider()
{
  uint64_t result;

  result = qword_1ED962020;
  if (!qword_1ED962020)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2636ABC()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1D2636B08()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2636B2C()
{
  uint64_t v0;

  return sub_1D26348C4(v0, (uint64_t)&unk_1D26D7F58, (uint64_t)"_widgetDisplayProperties", 24, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D2635C78);
}

unint64_t sub_1D2636B60()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1ED96C050;
  if (!qword_1ED96C050)
  {
    v1 = sub_1D26CDE60();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CB1F20], v1);
    atomic_store(result, (unint64_t *)&qword_1ED96C050);
  }
  return result;
}

uint64_t sub_1D2636BA8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC6F0();
  *a1 = result;
  return result;
}

uint64_t sub_1D2636BD0(id *a1)
{
  id v1;

  v1 = *a1;
  return sub_1D26CC6FC();
}

uint64_t sub_1D2636BF8()
{
  return sub_1D26345FC();
}

uint64_t sub_1D2636C00@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC5A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2636C2C()
{
  return sub_1D26CC5AC();
}

uint64_t sub_1D2636C50()
{
  return sub_1D2634690();
}

uint64_t sub_1D2636C58()
{
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2636C7C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC540();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2636CA8()
{
  return sub_1D26CC54C();
}

uint64_t sub_1D2636CCC()
{
  return sub_1D2634724();
}

uint64_t sub_1D2636CD4@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC558();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2636D00()
{
  return sub_1D26CC564();
}

uint64_t sub_1D2636D24()
{
  return sub_1D26347B8();
}

uint64_t sub_1D2636D2C@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC570();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D2636D58()
{
  return sub_1D26CC57C();
}

uint64_t sub_1D2636D7C()
{
  uint64_t v0;

  return sub_1D26348C4(v0, (uint64_t)&unk_1D26D8048, (uint64_t)"_colorSchemeContrast", 20, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D2635F5C);
}

uint64_t sub_1D2636DB0()
{
  return sub_1D26CC534();
}

uint64_t sub_1D2636DD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2572540(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDB2E0], MEMORY[0x1E0CDA7A0]);
}

uint64_t sub_1D2636DF4()
{
  uint64_t v0;

  return sub_1D26348C4(v0, (uint64_t)&unk_1D26D8078, (uint64_t)"legibilityWeight", 16, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D2636270);
}

uint64_t sub_1D2636E28()
{
  return sub_1D26CC4E0();
}

uint64_t sub_1D2636E4C()
{
  uint64_t v0;

  return sub_1D26348C4(v0, (uint64_t)&unk_1D26D80A8, (uint64_t)"sizeCategory", 12, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1D263658C);
}

uint64_t sub_1D2636E80()
{
  return sub_1D26CC4B0();
}

uint64_t sub_1D2636EA0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2572540(a1, a2, a3, a4, (void (*)(_QWORD))MEMORY[0x1E0CDB388], MEMORY[0x1E0CDA5C0]);
}

uint64_t sub_1D2636EC4()
{
  return sub_1D2634FE8();
}

void sub_1D2636ECC(void *a1)
{
  sub_1D26351B4(a1);
}

uint64_t sub_1D2636EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7, uint64_t a8)
{
  unint64_t v8;
  uint64_t v9;
  uint64_t v10;
  NSObject *v11;
  os_log_type_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  uint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;

  if (a8)
  {
    v8 = a7;
    v9 = a6;
    sub_1D253FE08(a6, a7);
  }
  else
  {
    v9 = 0;
    v8 = 0xC000000000000000;
  }
  v22 = v9;
  v23 = v8;
  if (qword_1ED9621C8 != -1)
    swift_once();
  v10 = sub_1D26CC09C();
  __swift_project_value_buffer(v10, (uint64_t)qword_1ED977D08);
  sub_1D253FE08(v9, v8);
  sub_1D253FE08(v9, v8);
  v11 = sub_1D26CC084();
  v12 = sub_1D26CDD04();
  if (os_log_type_enabled(v11, v12))
  {
    v13 = swift_slowAlloc();
    v14 = swift_slowAlloc();
    v21 = v14;
    *(_DWORD *)v13 = 136446466;
    v15 = sub_1D26CE0B8();
    sub_1D2537880(v15, v16, &v21);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v13 + 12) = 2082;
    sub_1D253FE08(v9, v8);
    v17 = sub_1D26CD98C();
    sub_1D2537880(v17, v18, &v21);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    sub_1D253EE04(v9, v8);
    sub_1D253EE04(v9, v8);
    _os_log_impl(&dword_1D2531000, v11, v12, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v13, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v14, -1, -1);
    MEMORY[0x1D823A5E0](v13, -1, -1);
  }
  else
  {
    sub_1D253EE04(v9, v8);
    sub_1D253EE04(v9, v8);
  }

  MEMORY[0x1E0C80A78](v19);
  sub_1D2646170((void (*)(_BYTE *))sub_1D2637650);
  return sub_1D253EE04(v22, v23);
}

uint64_t sub_1D2637188(char *a1)
{
  uint64_t v1;

  return sub_1D263525C(a1, v1, (uint64_t)&unk_1D26D8108, (uint64_t)"userWantsWidgetDataWhenPasscodeLocked", 37, (void (*)(_BYTE *))sub_1D2637290);
}

uint64_t sub_1D26371BC@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC60C();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D26371E8()
{
  return sub_1D26CC618();
}

uint64_t sub_1D263720C(char *a1)
{
  uint64_t v1;

  return sub_1D263525C(a1, v1, (uint64_t)&unk_1D26D8138, (uint64_t)"userWantsLiveActivityDataWhenPasscodeLocked", 43, (void (*)(_BYTE *))sub_1D2637290);
}

uint64_t sub_1D2637240@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;

  result = sub_1D26CC750();
  *a1 = result & 1;
  return result;
}

uint64_t sub_1D263726C()
{
  return sub_1D26CC75C();
}

uint64_t sub_1D2637294(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2636948(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))MEMORY[0x1E0CD86F8]);
}

uint64_t sub_1D26372B4(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t a5, void *a6, void (*a7)(_BYTE *))
{
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  id v20;
  unsigned int *v21;
  uint64_t v22;
  void (*v23)(char *, char *, uint64_t);
  NSObject *v24;
  os_log_type_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  unint64_t v29;
  uint64_t v30;
  unint64_t v31;
  void (*v32)(char *, uint64_t);
  uint64_t v33;
  uint64_t v34;
  uint64_t v36;
  char *v37;
  os_log_t v38;
  uint64_t v39;
  int v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;

  v43 = a4;
  LODWORD(v42) = a3;
  v41 = a2;
  v10 = sub_1D26CC2C4();
  v11 = *(_QWORD *)(v10 - 8);
  v12 = MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v36 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = MEMORY[0x1E0C80A78](v12);
  v17 = (char *)&v36 - v16;
  MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v36 - v18;
  v20 = objc_msgSend(a6, sel_userInterfaceStyle);
  v21 = (unsigned int *)MEMORY[0x1E0CD86D0];
  if (v20 != (id)2)
    v21 = (unsigned int *)MEMORY[0x1E0CD86E0];
  (*(void (**)(char *, _QWORD, uint64_t))(v11 + 104))(v19, *v21, v10);
  if (qword_1ED9621C8 != -1)
    swift_once();
  v22 = sub_1D26CC09C();
  __swift_project_value_buffer(v22, (uint64_t)qword_1ED977D08);
  v23 = *(void (**)(char *, char *, uint64_t))(v11 + 16);
  v23(v17, v19, v10);
  v24 = sub_1D26CC084();
  v25 = sub_1D26CDD04();
  v40 = v25;
  if (os_log_type_enabled(v24, v25))
  {
    v26 = swift_slowAlloc();
    v37 = v14;
    v27 = v26;
    v39 = swift_slowAlloc();
    v45 = v39;
    *(_DWORD *)v27 = 136446466;
    v38 = v24;
    v28 = sub_1D26CE0B8();
    v44 = sub_1D2537880(v28, v29, &v45);
    v42 = a5;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    *(_WORD *)(v27 + 12) = 2082;
    v23(v37, v17, v10);
    v30 = sub_1D26CD98C();
    v44 = sub_1D2537880(v30, v31, &v45);
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    v32(v17, v10);
    v24 = v38;
    _os_log_impl(&dword_1D2531000, v38, (os_log_type_t)v40, "Environment value changed [%{public}s]: %{public}s", (uint8_t *)v27, 0x16u);
    v33 = v39;
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v33, -1, -1);
    MEMORY[0x1D823A5E0](v27, -1, -1);
  }
  else
  {
    v32 = *(void (**)(char *, uint64_t))(v11 + 8);
    v32(v17, v10);
  }

  MEMORY[0x1E0C80A78](v34);
  *(&v36 - 2) = v43;
  *(&v36 - 1) = (uint64_t)v19;
  sub_1D2646170(a7);
  return ((uint64_t (*)(char *, uint64_t))v32)(v19, v10);
}

uint64_t sub_1D26375E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D26CC684();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D2637610(uint64_t a1)
{
  sub_1D253FE08(*(_QWORD *)a1, *(_QWORD *)(a1 + 8));
  return sub_1D26CC690();
}

uint64_t sub_1D2637650()
{
  uint64_t v0;

  sub_1D253FE08(**(_QWORD **)(v0 + 24), *(_QWORD *)(*(_QWORD *)(v0 + 24) + 8));
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1D263769C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2636948(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB388]);
}

uint64_t sub_1D26376BC(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B90);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2637704(uint64_t a1)
{
  uint64_t v1;

  return sub_1D26368C4(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24));
}

uint64_t sub_1D263770C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2636948(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), (uint64_t (*)(_QWORD))MEMORY[0x1E0CDB2E0]);
}

uint64_t sub_1D263772C()
{
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1D2637758()
{
  uint64_t v0;
  id v1;

  v1 = **(id **)(v0 + 24);
  return swift_setAtWritableKeyPath();
}

uint64_t sub_1D26377C8()
{
  unsigned __int8 v1;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_1D2637838()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  char *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  os_unfair_lock_s *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  char v21;
  uint64_t v22;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962DF8);
  v19 = *(_QWORD *)(v1 - 8);
  v20 = v1;
  v2 = MEMORY[0x1E0C80A78](v1);
  v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v2);
  v6 = (char *)&v17 - v5;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = OBJC_IVAR____TtC9ChronoKitP33_51468F6A8FEA01A6828210744DB7754E20DebugOverlayObserver__enabled;
  if (qword_1ED96F1C8 != -1)
    swift_once();
  v18 = v0;
  v12 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 30) + 88);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v13);
  LOBYTE(v13) = sub_1D2534A90();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  swift_release();
  v21 = v13 & 1;
  sub_1D26CC1B0();
  (*(void (**)(uint64_t, char *, uint64_t))(v8 + 32))(v0 + v11, v10, v7);
  v22 = *(_QWORD *)(*((_QWORD *)off_1ED96F1C0 + 30) + 72);
  swift_beginAccess();
  swift_retain();
  sub_1D26CC1BC();
  swift_endAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FCF0);
  sub_1D2536488(&qword_1ED96FCE8, &qword_1ED96FCF0, MEMORY[0x1E0C95D90]);
  sub_1D26CC294();
  swift_release();
  v15 = v19;
  v14 = v20;
  (*(void (**)(char *, char *, uint64_t))(v19 + 16))(v4, v6, v20);
  swift_beginAccess();
  sub_1D26CC1C8();
  swift_endAccess();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v6, v14);
  return v18;
}

uint64_t sub_1D2637AA4()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKitP33_51468F6A8FEA01A6828210744DB7754E20DebugOverlayObserver__enabled;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B258);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  return swift_deallocClassInstance();
}

uint64_t sub_1D2637AF8()
{
  return type metadata accessor for DebugOverlayObserver();
}

uint64_t type metadata accessor for DebugOverlayObserver()
{
  uint64_t result;

  result = qword_1ED962D88;
  if (!qword_1ED962D88)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D2637B3C()
{
  unint64_t v0;

  sub_1D260F144();
  if (v0 <= 0x3F)
    swift_updateClassMetadata2();
}

uint64_t destroy for DebugMarginsViewModifier(id *a1)
{

  return swift_release();
}

uint64_t initializeWithCopy for DebugMarginsViewModifier(uint64_t a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v4 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v4;
  v5 = v3;
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for DebugMarginsViewModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = *(_QWORD *)(a2 + 24);
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DebugMarginsViewModifier(uint64_t a1, uint64_t a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;

  *(_BYTE *)(a1 + 8) = *(_BYTE *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 24);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  *(_QWORD *)(a1 + 24) = v5;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DebugMarginsViewModifier(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 32))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DebugMarginsViewModifier(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)(result + 24) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 32) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 32) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for DebugMarginsViewModifier()
{
  return &type metadata for DebugMarginsViewModifier;
}

uint64_t sub_1D2637D60()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1D2637D70@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  type metadata accessor for DebugOverlayObserver();
  result = sub_1D26CC12C();
  *a1 = result;
  return result;
}

uint64_t sub_1D2637DAC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, int a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t *v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  void *v28;
  uint64_t *v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t KeyPath;
  char *v34;
  void *v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  void (*v40)(char *, uint64_t, uint64_t);
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  __int128 v46;
  uint64_t v47;
  char *v48;
  uint64_t v49;
  void *v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  uint64_t v56;
  _QWORD v57[2];
  char v58;
  __int128 v59;
  uint64_t v60;
  char v61;
  uint64_t v62;
  char v63;
  char v64;

  v50 = a2;
  v51 = a4;
  LODWORD(v49) = a3;
  v52 = a1;
  v55 = a5;
  v56 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962D50);
  v5 = *(_QWORD *)(v56 - 8);
  MEMORY[0x1E0C80A78](v56);
  v7 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962CC8);
  MEMORY[0x1E0C80A78](v53);
  v9 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962BF0);
  MEMORY[0x1E0C80A78](v10);
  v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  v54 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962C30);
  v13 = MEMORY[0x1E0C80A78](v54);
  v15 = (char *)&v42 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v13);
  v17 = (char *)&v42 - v16;
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  sub_1D26CC1E0();
  swift_release();
  swift_release();
  swift_release();
  if (LOBYTE(v57[0]) == 1)
  {
    v18 = sub_1D26CD008();
    v20 = v19;
    v21 = *(int *)(v10 + 36);
    v48 = v17;
    v22 = (uint64_t *)&v12[v21];
    *v22 = sub_1D26CD008();
    v22[1] = v23;
    v24 = (uint64_t)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83278) + 44);
    v25 = v49;
    v26 = v49 & 1;
    v49 = (uint64_t)v9;
    v27 = v5;
    v28 = v50;
    sub_1D2638244(v50, v25 & 1, v24);
    v29 = (uint64_t *)((char *)v22 + *(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED962EA0) + 36));
    *v29 = v18;
    v29[1] = v20;
    (*(void (**)(char *, uint64_t, uint64_t))(v27 + 16))(v12, v52, v56);
    v30 = sub_1D26CCFFC();
    v52 = v31;
    v47 = sub_1D26CC894();
    sub_1D2638670(v28, v26, (uint64_t)v57);
    v50 = (void *)v57[1];
    v51 = v57[0];
    LOBYTE(v28) = v58;
    v46 = v59;
    v45 = v60;
    LOBYTE(v22) = v61;
    v44 = v62;
    v43 = sub_1D26CCEB8();
    v42 = sub_1D26CCE7C();
    LOBYTE(v18) = sub_1D26CCB7C();
    v32 = sub_1D26CCC48();
    KeyPath = swift_getKeyPath();
    LOBYTE(v57[0]) = 1;
    v64 = (char)v28;
    v63 = (char)v22;
    sub_1D2537078((uint64_t)v12, (uint64_t)v15, &qword_1ED962BF0);
    v34 = &v15[*(int *)(v54 + 36)];
    *(_QWORD *)v34 = v47;
    *((_QWORD *)v34 + 1) = 0;
    v34[16] = 1;
    v35 = v50;
    *((_QWORD *)v34 + 3) = v51;
    *((_QWORD *)v34 + 4) = v35;
    v34[40] = (char)v28;
    *((_OWORD *)v34 + 3) = v46;
    *((_QWORD *)v34 + 8) = v45;
    v34[72] = (char)v22;
    v36 = v43;
    *((_QWORD *)v34 + 10) = v44;
    *((_QWORD *)v34 + 11) = v36;
    *((_QWORD *)v34 + 12) = v42;
    v34[104] = v18;
    *((_QWORD *)v34 + 14) = KeyPath;
    *((_QWORD *)v34 + 15) = v32;
    v37 = v52;
    *((_QWORD *)v34 + 16) = v30;
    *((_QWORD *)v34 + 17) = v37;
    sub_1D253703C((uint64_t)v12, &qword_1ED962BF0);
    v38 = (uint64_t)v48;
    sub_1D25384CC((uint64_t)v15, (uint64_t)v48, &qword_1ED962C30);
    sub_1D2537078(v38, v49, &qword_1ED962C30);
    swift_storeEnumTagMultiPayload();
    sub_1D26389E4();
    sub_1D2536488(&qword_1ED962D48, &qword_1ED962D50, MEMORY[0x1E0CDBF10]);
    sub_1D26CC90C();
    return sub_1D253703C(v38, &qword_1ED962C30);
  }
  else
  {
    v40 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
    v41 = v56;
    v40(v7, v52, v56);
    v40(v9, (uint64_t)v7, v41);
    swift_storeEnumTagMultiPayload();
    sub_1D26389E4();
    sub_1D2536488(&qword_1ED962D48, &qword_1ED962D50, MEMORY[0x1E0CDBF10]);
    sub_1D26CC90C();
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v41);
  }
}

uint64_t sub_1D2638244@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  double *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  char *v12;
  uint64_t v13;
  char *v14;
  double v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  double v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  double v27;
  double v28;
  double v29;
  double v30;
  char *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  char *v35;
  __int128 v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t *v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  __int128 v47;
  __int128 v48;
  __int128 v49;
  __int128 v50;
  __int128 v51;
  __int128 v52;
  uint64_t v53;
  char *v55;
  uint64_t v56;
  uint64_t v57;
  unsigned int v58;
  unsigned int v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  uint64_t v63;
  int v64;
  double v65;
  unsigned int v66;
  unsigned int v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  __int128 v71;
  __int128 v72;
  uint64_t v73;
  char v74;
  _BYTE v75[7];
  int v76;
  __int16 v77;
  __int128 v78;
  __int128 v79;
  __int128 v80;
  __int128 v81;
  __int128 v82;
  __int128 v83;
  __int128 v84;
  __int128 v85;
  char v86;
  _QWORD v87[3];
  int v88;
  int v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  __int16 v94;
  int v95;
  __int16 v96;
  uint64_t v97;
  uint64_t v98;
  char v99;
  _BYTE v100[7];
  double v101;
  uint64_t v102;
  uint64_t v103;
  uint64_t v104;
  char v105;

  v6 = sub_1D26CC444();
  MEMORY[0x1E0C80A78](v6);
  v8 = (double *)((char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83280);
  v10 = MEMORY[0x1E0C80A78](v9);
  v12 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v14 = (char *)&v55 - v13;
  v62 = sub_1D26CCEAC();
  v63 = sub_1D26CCE88();
  sub_1D26CC2DC();
  v15 = v65;
  v58 = v67;
  v59 = v66;
  v57 = v68;
  v16 = v69;
  v56 = v69;
  v17 = v70;
  v18 = sub_1D26CD008();
  v60 = v19;
  v61 = v18;
  v20 = sub_1D2638B50(a1, a2);
  v22 = v21;
  v24 = v23;
  v26 = v25;
  v64 = sub_1D26CCB7C();
  v74 = 0;
  objc_msgSend(a1, sel_cornerRadius);
  v28 = v27;
  objc_msgSend(a1, sel_scaleFactor);
  v30 = v28 * v29;
  v31 = (char *)v8 + *(int *)(v6 + 20);
  v32 = *MEMORY[0x1E0CDB0C0];
  v33 = sub_1D26CC828();
  (*(void (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v33 - 8) + 104))(v31, v32, v33);
  *v8 = v30;
  v8[1] = v30;
  v34 = sub_1D26CCE7C();
  sub_1D26CC2DC();
  sub_1D25E5610((uint64_t)v8, (uint64_t)v12);
  v35 = &v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83288) + 36)];
  v36 = v72;
  *(_OWORD *)v35 = v71;
  *((_OWORD *)v35 + 1) = v36;
  *((_QWORD *)v35 + 4) = v73;
  v37 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83290);
  *(_QWORD *)&v12[*(int *)(v37 + 52)] = v34;
  *(_WORD *)&v12[*(int *)(v37 + 56)] = 256;
  v38 = sub_1D26CD008();
  v40 = v39;
  v41 = (uint64_t *)&v12[*(int *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1EFC83298) + 36)];
  *v41 = v38;
  v41[1] = v40;
  sub_1D25E5654((uint64_t)v8);
  v55 = v14;
  sub_1D25384CC((uint64_t)v12, (uint64_t)v14, &qword_1EFC83280);
  LOBYTE(v38) = v74;
  sub_1D2537078((uint64_t)v14, (uint64_t)v12, &qword_1EFC83280);
  v42 = v62;
  *(_QWORD *)&v78 = v62;
  *((double *)&v78 + 1) = v15 * 0.5;
  *(double *)&v79 = v15;
  LODWORD(v40) = v58;
  LODWORD(v14) = v59;
  *((_QWORD *)&v79 + 1) = __PAIR64__(v58, v59);
  v43 = v57;
  *(_QWORD *)&v80 = v57;
  *((_QWORD *)&v80 + 1) = v16;
  *(_QWORD *)&v81 = v17;
  v44 = v63;
  *((_QWORD *)&v81 + 1) = v63;
  LOWORD(v82) = 256;
  *(_DWORD *)((char *)&v82 + 2) = v76;
  WORD3(v82) = v77;
  v45 = v60;
  v46 = v61;
  *((_QWORD *)&v82 + 1) = v61;
  *(_QWORD *)&v83 = v60;
  BYTE8(v83) = v64;
  HIDWORD(v83) = *(_DWORD *)&v75[3];
  *(_DWORD *)((char *)&v83 + 9) = *(_DWORD *)v75;
  *(double *)&v84 = v20;
  *((_QWORD *)&v84 + 1) = v22;
  *(_QWORD *)&v85 = v24;
  *((_QWORD *)&v85 + 1) = v26;
  v86 = v38;
  v47 = v84;
  v48 = v85;
  *(_BYTE *)(a3 + 128) = v38;
  *(_OWORD *)(a3 + 96) = v47;
  *(_OWORD *)(a3 + 112) = v48;
  v49 = v78;
  v50 = v79;
  v51 = v83;
  *(_OWORD *)(a3 + 64) = v82;
  *(_OWORD *)(a3 + 80) = v51;
  v52 = v81;
  *(_OWORD *)(a3 + 32) = v80;
  *(_OWORD *)(a3 + 48) = v52;
  *(_OWORD *)a3 = v49;
  *(_OWORD *)(a3 + 16) = v50;
  v53 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC832A0);
  sub_1D2537078((uint64_t)v12, a3 + *(int *)(v53 + 48), &qword_1EFC83280);
  sub_1D2638D10((uint64_t)&v78);
  sub_1D253703C((uint64_t)v55, &qword_1EFC83280);
  sub_1D253703C((uint64_t)v12, &qword_1EFC83280);
  v87[0] = v42;
  *(double *)&v87[1] = v15 * 0.5;
  *(double *)&v87[2] = v15;
  v88 = (int)v14;
  v89 = v40;
  v90 = v43;
  v91 = v56;
  v92 = v17;
  v93 = v44;
  v94 = 256;
  v95 = v76;
  v96 = v77;
  v97 = v46;
  v98 = v45;
  v99 = v64;
  *(_DWORD *)&v100[3] = *(_DWORD *)&v75[3];
  *(_DWORD *)v100 = *(_DWORD *)v75;
  v101 = v20;
  v102 = v22;
  v103 = v24;
  v104 = v26;
  v105 = v38;
  return sub_1D2638D58((uint64_t)v87);
}

uint64_t sub_1D2638670@<X0>(void *a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char v15;
  char v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  char v21;
  uint64_t v22;

  v6 = sub_1D26CC804();
  MEMORY[0x1E0C80A78](v6);
  sub_1D26CC7F8();
  sub_1D26CC7EC();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9621A8);
  v7 = swift_allocObject();
  *(_OWORD *)(v7 + 16) = xmmword_1D26D1280;
  objc_msgSend(a1, sel_scaleFactor);
  v9 = v8;
  *(_QWORD *)(v7 + 56) = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v7 + 64) = sub_1D2638B0C();
  *(_QWORD *)(v7 + 32) = v9;
  sub_1D26CD95C();
  sub_1D26CC7E0();
  swift_bridgeObjectRelease();
  sub_1D26CC7EC();
  sub_1D26CC81C();
  v10 = sub_1D26CCD08();
  v12 = v11;
  v14 = v13;
  v16 = v15 & 1;
  sub_1D26CC7F8();
  sub_1D26CC7EC();
  sub_1D2638C24(a1, a2);
  sub_1D26CC7E0();
  swift_bridgeObjectRelease();
  sub_1D26CC7EC();
  sub_1D26CC81C();
  v17 = sub_1D26CCD08();
  v19 = v18;
  v21 = v20 & 1;
  *(_QWORD *)a3 = v10;
  *(_QWORD *)(a3 + 8) = v12;
  *(_BYTE *)(a3 + 16) = v16;
  *(_QWORD *)(a3 + 24) = v14;
  *(_QWORD *)(a3 + 32) = v17;
  *(_QWORD *)(a3 + 40) = v18;
  *(_BYTE *)(a3 + 48) = v20 & 1;
  *(_QWORD *)(a3 + 56) = v22;
  sub_1D25725F0(v10, v12, v16);
  swift_bridgeObjectRetain();
  sub_1D25725F0(v17, v19, v21);
  swift_bridgeObjectRetain();
  sub_1D25725E0(v17, v19, v21);
  swift_bridgeObjectRelease();
  sub_1D25725E0(v10, v12, v16);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26388E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D2637DAC(a1, *(void **)v2, *(unsigned __int8 *)(v2 + 8), *(_QWORD *)(v2 + 16), a2);
}

uint64_t sub_1D26388F0@<X0>(_BYTE *a1@<X8>)
{
  uint64_t result;
  char v3;

  swift_getKeyPath();
  swift_getKeyPath();
  sub_1D26CC1E0();
  swift_release();
  result = swift_release();
  *a1 = v3;
  return result;
}

uint64_t sub_1D2638970()
{
  swift_getKeyPath();
  swift_getKeyPath();
  swift_retain();
  return sub_1D26CC1EC();
}

unint64_t sub_1D26389E4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962C28;
  if (!qword_1ED962C28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962C30);
    v2[0] = sub_1D2638A68();
    v2[1] = sub_1D2536488(&qword_1ED962E88, &qword_1ED962E90, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962C28);
  }
  return result;
}

unint64_t sub_1D2638A68()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962BE8;
  if (!qword_1ED962BE8)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962BF0);
    v2[0] = sub_1D2536488(&qword_1ED962D48, &qword_1ED962D50, MEMORY[0x1E0CDBF10]);
    v2[1] = sub_1D2536488(&qword_1ED962E98, &qword_1ED962EA0, MEMORY[0x1E0CDA280]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CD9C20], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962BE8);
  }
  return result;
}

unint64_t sub_1D2638B0C()
{
  unint64_t result;

  result = qword_1ED961B20;
  if (!qword_1ED961B20)
  {
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEF098], MEMORY[0x1E0DEF040]);
    atomic_store(result, (unint64_t *)&qword_1ED961B20);
  }
  return result;
}

double sub_1D2638B50(void *a1, char a2)
{
  id v4;
  void *v5;
  char **v6;
  double v7;
  double v8;
  double v9;
  double v10;

  v4 = objc_msgSend(a1, sel_margins);
  v5 = v4;
  v6 = &selRef_contentMargins;
  if ((a2 & 1) == 0)
    v6 = &selRef_backgroundRemovedContentMargins;
  objc_msgSend(v4, *v6);
  v8 = v7;

  objc_msgSend(a1, sel_scaleFactor);
  v10 = v8 * v9;
  objc_msgSend(a1, sel_scaleFactor);
  objc_msgSend(a1, sel_scaleFactor);
  objc_msgSend(a1, sel_scaleFactor);
  return v10;
}

uint64_t sub_1D2638C24(void *a1, char a2)
{
  id v3;
  void *v4;
  char **v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;

  v3 = objc_msgSend(a1, sel_margins);
  v4 = v3;
  v5 = &selRef_contentMargins;
  if ((a2 & 1) == 0)
    v5 = &selRef_backgroundRemovedContentMargins;
  objc_msgSend(v3, *v5);
  v7 = v6;
  v9 = v8;
  v11 = v10;
  v13 = v12;

  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9621A8);
  v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1D26D81A0;
  v15 = MEMORY[0x1E0DEF040];
  *(_QWORD *)(v14 + 56) = MEMORY[0x1E0DEF040];
  v16 = sub_1D2638B0C();
  *(_QWORD *)(v14 + 64) = v16;
  *(_QWORD *)(v14 + 32) = v7;
  *(_QWORD *)(v14 + 96) = v15;
  *(_QWORD *)(v14 + 104) = v16;
  *(_QWORD *)(v14 + 72) = v9;
  *(_QWORD *)(v14 + 136) = v15;
  *(_QWORD *)(v14 + 144) = v16;
  *(_QWORD *)(v14 + 112) = v11;
  *(_QWORD *)(v14 + 176) = v15;
  *(_QWORD *)(v14 + 184) = v16;
  *(_QWORD *)(v14 + 152) = v13;
  return sub_1D26CD95C();
}

uint64_t sub_1D2638D10(uint64_t a1)
{
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_1D2638D58(uint64_t a1)
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  return a1;
}

unint64_t sub_1D2638DA4()
{
  unint64_t result;
  uint64_t v1;
  _QWORD v2[2];

  result = qword_1ED962D28;
  if (!qword_1ED962D28)
  {
    v1 = __swift_instantiateConcreteTypeFromMangledNameAbstract(&qword_1ED962D30);
    v2[0] = sub_1D26389E4();
    v2[1] = sub_1D2536488(&qword_1ED962D48, &qword_1ED962D50, MEMORY[0x1E0CDBF10]);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CDB8A0], v1, v2);
    atomic_store(result, (unint64_t *)&qword_1ED962D28);
  }
  return result;
}

uint64_t sub_1D2638E28@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  swift_beginAccess();
  v4 = sub_1D26CC7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1D2638E90(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 24))(v8, v7, v4);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_1D2638FC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  swift_beginAccess();
  v4 = sub_1D26CC7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D263902C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  swift_beginAccess();
  v4 = sub_1D26CC7A4();
  v5 = *(_QWORD *)(v4 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v3, a1, v4);
  swift_endAccess();
  swift_beginAccess();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  swift_release();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v5 + 8))(a1, v4);
}

uint64_t (*sub_1D2639120(uint64_t a1))(uint64_t a1, char a2)
{
  uint64_t v1;

  *(_QWORD *)(a1 + 24) = v1;
  swift_beginAccess();
  return sub_1D2639168;
}

uint64_t sub_1D2639168(uint64_t a1, char a2)
{
  uint64_t result;

  result = swift_endAccess();
  if ((a2 & 1) == 0)
  {
    swift_beginAccess();
    swift_retain();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
    sub_1D26CC1A4();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2639200()
{
  return sub_1D26392CC();
}

uint64_t sub_1D263920C(uint64_t a1)
{
  return sub_1D263931C(a1, &OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock__environmentDidChangePublisher);
}

uint64_t (*sub_1D2639218())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t sub_1D263925C(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4, _QWORD *a5)
{
  uint64_t v5;
  _QWORD *v6;

  v5 = *a1;
  v6 = (_QWORD *)(*a2 + *a5);
  swift_beginAccess();
  *v6 = v5;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D26392C0()
{
  return sub_1D26392CC();
}

uint64_t sub_1D26392CC()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1D2639310(uint64_t a1)
{
  return sub_1D263931C(a1, &OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentDidChange);
}

uint64_t sub_1D263931C(uint64_t a1, _QWORD *a2)
{
  uint64_t v2;
  _QWORD *v4;

  v4 = (_QWORD *)(v2 + *a2);
  swift_beginAccess();
  *v4 = a1;
  return swift_release();
}

uint64_t (*sub_1D2639368())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t EnvironmentProviderMock.__allocating_init()()
{
  uint64_t v0;
  uint64_t v1;

  v0 = swift_allocObject();
  sub_1D26CC798();
  v1 = OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock__environmentDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)(v0 + v1) = sub_1D26CC150();
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC70, MEMORY[0x1E0C95F48]);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentDidChange) = sub_1D26CC204();
  return v0;
}

uint64_t EnvironmentProviderMock.init()()
{
  uint64_t v0;
  uint64_t v1;

  sub_1D26CC798();
  v1 = OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock__environmentDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)(v0 + v1) = sub_1D26CC150();
  sub_1D2538EF4((unint64_t *)&unk_1ED96FC70, MEMORY[0x1E0C95F48]);
  *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentDidChange) = sub_1D26CC204();
  return v0;
}

uint64_t EnvironmentProviderMock.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  v2 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return v0;
}

uint64_t EnvironmentProviderMock.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  v1 = v0 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  v2 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  swift_release();
  swift_release();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26395D8@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentValues;
  swift_beginAccess();
  v4 = sub_1D26CC7A4();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D2639640()
{
  swift_beginAccess();
  return swift_retain();
}

uint64_t sub_1D263968C(uint64_t a1, _QWORD *a2)
{
  uint64_t v3;
  __int128 v5[2];

  sub_1D2538510(a1, (uint64_t)v5);
  v3 = *a2 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(v5, v3);
  return swift_endAccess();
}

uint64_t sub_1D26396F0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  swift_beginAccess();
  return sub_1D2538510(v1 + 16, a1);
}

uint64_t sub_1D2639738(__int128 *a1)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + 16;
  swift_beginAccess();
  __swift_destroy_boxed_opaque_existential_1(v3);
  sub_1D2538F38(a1, v3);
  return swift_endAccess();
}

uint64_t (*sub_1D2639790())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t EnvironmentProvidingFactoryMock.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t EnvironmentProvidingFactoryMock.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D263980C@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;

  v3 = *v1 + 16;
  swift_beginAccess();
  return sub_1D2538510(v3, a1);
}

uint64_t sub_1D2639860@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock__environmentDidChangePublisher);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1D26398B4(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D263925C(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock__environmentDidChangePublisher);
}

uint64_t sub_1D26398D0@<X0>(_QWORD *a1@<X0>, _QWORD *a2@<X8>)
{
  _QWORD *v3;

  v3 = (_QWORD *)(*a1 + OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentDidChange);
  swift_beginAccess();
  *a2 = *v3;
  return swift_retain();
}

uint64_t sub_1D2639924(uint64_t *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D263925C(a1, a2, a3, a4, &OBJC_IVAR____TtC9ChronoKit23EnvironmentProviderMock_environmentDidChange);
}

uint64_t sub_1D2639940@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1D2538510(v3, a2);
}

uint64_t sub_1D2639990()
{
  return type metadata accessor for EnvironmentProviderMock();
}

uint64_t type metadata accessor for EnvironmentProviderMock()
{
  uint64_t result;

  result = qword_1EFC832A8;
  if (!qword_1EFC832A8)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D26399D4()
{
  uint64_t result;
  unint64_t v1;

  result = sub_1D26CC7A4();
  if (v1 <= 0x3F)
  {
    result = swift_updateClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t method lookup function for EnvironmentProviderMock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EnvironmentProviderMock.environmentValues.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of EnvironmentProviderMock.environmentValues.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of EnvironmentProviderMock.environmentValues.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of EnvironmentProviderMock._environmentDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of EnvironmentProviderMock._environmentDidChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of EnvironmentProviderMock._environmentDidChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 144))();
}

uint64_t dispatch thunk of EnvironmentProviderMock.environmentDidChange.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of EnvironmentProviderMock.environmentDidChange.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of EnvironmentProviderMock.environmentDidChange.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of EnvironmentProviderMock.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t type metadata accessor for EnvironmentProvidingFactoryMock()
{
  return objc_opt_self();
}

uint64_t method lookup function for EnvironmentProvidingFactoryMock()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EnvironmentProvidingFactoryMock.system.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 88))();
}

uint64_t dispatch thunk of EnvironmentProvidingFactoryMock.system.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of EnvironmentProvidingFactoryMock.system.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of EnvironmentProvidingFactoryMock.makeProvider(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t sub_1D2639B2C@<X0>(uint64_t a1@<X8>)
{
  return sub_1D263A380(&OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_dateOfLastDeveloperError, a1);
}

uint64_t sub_1D2639B38(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  uint64_t v10;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v3);
  v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  sub_1D25D4E30(a1, (uint64_t)v5);
  v8 = v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_dateOfLastDeveloperError;
  swift_beginAccess();
  sub_1D25D4E78((uint64_t)v5, v8);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  return sub_1D253703C(a1, &qword_1ED96B1E0);
}

void (*sub_1D2639C1C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_dateOfLastDeveloperError;
  swift_beginAccess();
  sub_1D25D4E30(v8, (uint64_t)v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  return sub_1D2639CEC;
}

void sub_1D2639CEC(uint64_t a1, char a2)
{
  sub_1D263A5F8(a1, a2, (void (*)(void *))sub_1D2639B38);
}

uint64_t sub_1D2639CF8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  v1 = OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher;
  if (*(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher))
  {
    v2 = *(_QWORD *)(v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher);
  }
  else
  {
    v3 = v0;
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2538EF4((unint64_t *)&unk_1ED96FC70, MEMORY[0x1E0C95F48]);
    v2 = sub_1D26CC204();
    *(_QWORD *)(v3 + v1) = v2;
    swift_retain();
    swift_release();
  }
  swift_retain();
  return v2;
}

uint64_t sub_1D2639DA4(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher) = a1;
  return swift_release();
}

uint64_t (*sub_1D2639DBC(uint64_t *a1))(_QWORD *a1)
{
  uint64_t v1;

  a1[1] = v1;
  *a1 = sub_1D2639CF8();
  return sub_1D2639DF0;
}

uint64_t sub_1D2639DF0(_QWORD *a1)
{
  *(_QWORD *)(a1[1] + OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher) = *a1;
  return swift_release();
}

uint64_t sub_1D2639E08@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t result;

  v3 = *a1;
  v4 = *(_QWORD *)(*a1 + 16);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 40);
  v7 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_unlock(v7);
  result = swift_release();
  *a2 = v6;
  return result;
}

uint64_t sub_1D2639E6C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = *(_QWORD *)(v0 + 40);
  v4 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_unlock(v4);
  swift_release();
  return v3;
}

uint64_t sub_1D2639EC8(uint64_t a1)
{
  sub_1D263B858(a1);
  return swift_release();
}

void sub_1D2639EEC(_QWORD *a1, uint64_t a2, _BYTE *a3)
{
  uint64_t v6;
  char v7;
  uint64_t v8;
  NSObject *v9;
  os_log_type_t v10;
  uint8_t *v11;

  if (a1[5])
  {
    if (a2)
    {
      swift_retain();
      v6 = swift_retain();
      v7 = _s9ChronoKit19ControlEntryContentC2eeoiySbAC_ACtFZ_0(v6, a2);
      swift_release();
      swift_release();
      if ((v7 & 1) != 0)
        return;
    }
  }
  else if (!a2)
  {
    return;
  }
  *a3 = 1;
  a1[5] = a2;
  swift_retain_n();
  swift_release();
  os_unfair_lock_assert_owner(*(const os_unfair_lock **)(a1[2] + 16));
  if (a1[5])
  {
    a1[3] = 0;
    a1[4] = 0;
    swift_release();
    swift_bridgeObjectRelease();
    if (!a2)
      return;
  }
  else
  {
    swift_release();
    if (!a2)
      return;
  }
  swift_beginAccess();
  if (*(_BYTE *)(a2 + 56) == 1)
  {
    if (qword_1EFC821D8 != -1)
      swift_once();
    v8 = sub_1D26CC09C();
    __swift_project_value_buffer(v8, (uint64_t)qword_1EFC8AAE0);
    v9 = sub_1D26CC084();
    v10 = sub_1D26CDD04();
    if (os_log_type_enabled(v9, v10))
    {
      v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v11 = 0;
      _os_log_impl(&dword_1D2531000, v9, v10, "Content has developer error state set.", v11, 2u);
      MEMORY[0x1D823A5E0](v11, -1, -1);
    }

  }
}

uint64_t (*sub_1D263A0A4(_QWORD *a1))(uint64_t *a1, char a2)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *(_QWORD *)(v1 + 16);
  a1[1] = v1;
  a1[2] = v3;
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  v5 = *(_QWORD *)(v1 + 40);
  v6 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_unlock(v6);
  swift_release();
  *a1 = v5;
  return sub_1D263A114;
}

uint64_t sub_1D263A114(uint64_t *a1, char a2)
{
  _QWORD *v2;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  os_unfair_lock_s *v6;
  char v8;
  _BYTE v9[9];

  v2 = (_QWORD *)a1[1];
  v3 = a1[2];
  v4 = *a1;
  if ((a2 & 1) != 0)
  {
    v8 = 0;
    v5 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    swift_retain();
    os_unfair_lock_lock(v5);
    sub_1D2639EEC(v2, v4, &v8);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    if (v8 == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
      sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
      sub_1D26CC1A4();
    }
    swift_release();
  }
  else
  {
    v9[0] = 0;
    v6 = *(os_unfair_lock_s **)(v3 + 16);
    swift_retain();
    os_unfair_lock_lock(v6);
    sub_1D2639EEC(v2, v4, v9);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
    swift_release();
    if (v9[0] == 1)
    {
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
      sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
      sub_1D26CC1A4();
    }
  }
  return swift_release();
}

uint64_t sub_1D263A268@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  v5 = *a1;
  v6 = *(_QWORD *)(*a1 + 16);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = v5 + *a2;
  swift_beginAccess();
  sub_1D25D4E30(v8, a3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  return swift_release();
}

uint64_t sub_1D263A2F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(char *))
{
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D25D4E30(a1, (uint64_t)v9);
  return a5(v9);
}

uint64_t sub_1D263A374@<X0>(uint64_t a1@<X8>)
{
  return sub_1D263A380(&OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate, a1);
}

uint64_t sub_1D263A380@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;
  uint64_t v7;

  v5 = *(_QWORD *)(v2 + 16);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v7 = v2 + *a1;
  swift_beginAccess();
  sub_1D25D4E30(v7, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t sub_1D263A408(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  os_unfair_lock_s *v10;
  uint64_t v11;
  uint64_t v13;

  v3 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  v4 = MEMORY[0x1E0C80A78](v3);
  v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v4);
  v8 = (char *)&v13 - v7;
  v9 = *(_QWORD *)(v1 + 16);
  v10 = *(os_unfair_lock_s **)(v9 + 16);
  swift_retain();
  os_unfair_lock_lock(v10);
  sub_1D25D4E30(a1, (uint64_t)v8);
  sub_1D263B90C((uint64_t)v8, (uint64_t)v6);
  v11 = v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D25D4E78((uint64_t)v6, v11);
  swift_endAccess();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v9 + 16));
  swift_release();
  return sub_1D253703C(a1, &qword_1ED96B1E0);
}

void (*sub_1D263A51C(_QWORD *a1))(uint64_t a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  size_t v4;
  void *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[3] = v1;
  v4 = *(_QWORD *)(*(_QWORD *)(__swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0) - 8) + 64);
  v3[4] = malloc(v4);
  v5 = malloc(v4);
  v3[5] = v5;
  v6 = *(_QWORD *)(v1 + 16);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D25D4E30(v8, (uint64_t)v5);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  return sub_1D263A5EC;
}

void sub_1D263A5EC(uint64_t a1, char a2)
{
  sub_1D263A5F8(a1, a2, (void (*)(void *))sub_1D263A408);
}

void sub_1D263A5F8(uint64_t a1, char a2, void (*a3)(void *))
{
  void *v4;
  void *v5;
  void *v6;

  v4 = *(void **)a1;
  v5 = *(void **)(*(_QWORD *)a1 + 32);
  v6 = *(void **)(*(_QWORD *)a1 + 40);
  if ((a2 & 1) != 0)
  {
    sub_1D25D4E30((uint64_t)v6, (uint64_t)v5);
    a3(v5);
    sub_1D253703C((uint64_t)v6, &qword_1ED96B1E0);
  }
  else
  {
    a3(v6);
  }
  free(v6);
  free(v5);
  free(v4);
}

uint64_t sub_1D263A674()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[4];

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = *(_QWORD *)(v0 + 40);
  if (v3)
  {
    v4 = v3 + 16;
    swift_beginAccess();
    sub_1D2538510(v4, (uint64_t)v7);
    __swift_project_boxed_opaque_existential_0(v7, v7[3]);
    v5 = sub_1D26CD410();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  }
  else
  {
    v5 = 0;
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v5;
}

uint64_t sub_1D263A728(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;

  v1 = *a1;
  v2 = a1[1];
  swift_bridgeObjectRetain();
  sub_1D263B954(v1, v2);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D263A768()
{
  _QWORD *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = v0[2];
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  if (v0[5])
  {
    v3 = 0;
  }
  else
  {
    v3 = v0[3];
    swift_bridgeObjectRetain();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t sub_1D263A7D8(uint64_t a1, uint64_t a2)
{
  sub_1D263B954(a1, a2);
  return swift_bridgeObjectRelease();
}

uint64_t (*sub_1D263A7FC(_QWORD *a1))(uint64_t *a1, char a2)
{
  _QWORD *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v5;
  uint64_t v6;

  v3 = v1[2];
  a1[2] = v1;
  a1[3] = v3;
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  if (v1[5])
  {
    v5 = 0;
    v6 = 0;
  }
  else
  {
    v5 = v1[3];
    v6 = v1[4];
    swift_bridgeObjectRetain();
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  *a1 = v5;
  a1[1] = v6;
  return sub_1D263A884;
}

uint64_t sub_1D263A884(uint64_t *a1, char a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = *(os_unfair_lock_s **)(v4 + 16);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v6);
    *(_QWORD *)(v5 + 24) = v3;
    *(_QWORD *)(v5 + 32) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(v6);
    *(_QWORD *)(v5 + 24) = v3;
    *(_QWORD *)(v5 + 32) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
    swift_release();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D263A944@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, v3, v4);
}

uint64_t sub_1D263A9AC(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v10;

  v4 = sub_1D26CD488();
  v5 = *(_QWORD *)(v4 - 8);
  MEMORY[0x1E0C80A78](v4);
  v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, a1, v4);
  v8 = *a2 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType;
  swift_beginAccess();
  (*(void (**)(uint64_t, char *, uint64_t))(v5 + 40))(v8, v7, v4);
  return swift_endAccess();
}

uint64_t sub_1D263AA70@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D263AAD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;

  v3 = v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 40))(v3, a1, v4);
  return swift_endAccess();
}

uint64_t (*sub_1D263AB40())()
{
  swift_beginAccess();
  return j__swift_endAccess;
}

uint64_t ControlEntry.key.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D263B9C0(v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_key, a1);
}

uint64_t ControlEntry.environmentProvider.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_environmentProvider, a1);
}

uint64_t ControlEntry.__allocating_init(key:environmentProvider:protectionType:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ControlEntry.init(key:environmentProvider:protectionType:)(a1, a2, a3);
  return v6;
}

char *ControlEntry.init(key:environmentProvider:protectionType:)(uint64_t a1, __int128 *a2, uint64_t a3)
{
  char *v3;
  char *v4;
  uint64_t v8;
  _DWORD *v9;
  char *v10;
  uint64_t v11;
  void (*v12)(char *, uint64_t, uint64_t, uint64_t);
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;

  v4 = v3;
  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *v9 = 0;
  *(_QWORD *)(v8 + 16) = v9;
  *((_QWORD *)v4 + 2) = v8;
  *((_QWORD *)v4 + 3) = 0;
  *((_QWORD *)v4 + 4) = 0;
  *((_QWORD *)v4 + 5) = 0;
  v10 = &v4[OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_dateOfLastDeveloperError];
  v11 = sub_1D26CB9DC();
  v12 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 - 8) + 56);
  v12(v10, 1, 1, v11);
  v13 = OBJC_IVAR____TtC9ChronoKit12ControlEntry__contentDidChangePublisher;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  *(_QWORD *)&v4[v13] = sub_1D26CC150();
  *(_QWORD *)&v4[OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher] = 0;
  v12(&v4[OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate], 1, 1, v11);
  v14 = &v4[OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType];
  v15 = *MEMORY[0x1E0CF0418];
  v16 = sub_1D26CD488();
  v17 = *(_QWORD *)(v16 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 104))(v14, v15, v16);
  swift_beginAccess();
  (*(void (**)(char *, uint64_t, uint64_t))(v17 + 40))(v14, a3, v16);
  swift_endAccess();
  sub_1D2538F38(a2, (uint64_t)&v4[OBJC_IVAR____TtC9ChronoKit12ControlEntry_environmentProvider]);
  sub_1D263BA04(a1, (uint64_t)&v4[OBJC_IVAR____TtC9ChronoKit12ControlEntry_key]);
  return v4;
}

uint64_t ControlEntry.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_dateOfLastDeveloperError, &qword_1ED96B1E0);
  swift_release();
  swift_release();
  sub_1D253703C(v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate, &qword_1ED96B1E0);
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType;
  v2 = sub_1D26CD488();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  sub_1D25AC838(v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_key);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_environmentProvider);
  return v0;
}

uint64_t ControlEntry.__deallocating_deinit()
{
  ControlEntry.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D263AE9C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t result;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 40);
  v7 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_unlock(v7);
  result = swift_release();
  *a1 = v6;
  return result;
}

uint64_t sub_1D263AF00(uint64_t *a1)
{
  sub_1D263B858(*a1);
  return swift_release();
}

void (*sub_1D263AF2C(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D263A0A4(v2);
  return sub_1D2591674;
}

uint64_t sub_1D263AF74@<X0>(uint64_t a1@<X8>)
{
  uint64_t *v1;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;

  v3 = *v1;
  v4 = *(_QWORD *)(*v1 + 16);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = v3 + OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate;
  swift_beginAccess();
  sub_1D25D4E30(v6, a1);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  return swift_release();
}

uint64_t sub_1D263AFF8(uint64_t a1)
{
  return sub_1D263A408(a1);
}

void (*sub_1D263B018(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D263A51C(v2);
  return sub_1D2591674;
}

uint64_t sub_1D263B060()
{
  return sub_1D263A768();
}

uint64_t sub_1D263B080(uint64_t a1, uint64_t a2)
{
  sub_1D263B954(a1, a2);
  return swift_bridgeObjectRelease();
}

void (*sub_1D263B0A8(_QWORD *a1))(_QWORD *)
{
  _QWORD *v2;

  v2 = malloc(0x28uLL);
  *a1 = v2;
  v2[4] = sub_1D263A7FC(v2);
  return sub_1D2591674;
}

uint64_t sub_1D263B0F0@<X0>(uint64_t a1@<X8>)
{
  _QWORD *v1;
  uint64_t v3;
  uint64_t v4;

  v3 = *v1 + OBJC_IVAR____TtC9ChronoKit12ControlEntry_protectionType;
  swift_beginAccess();
  v4 = sub_1D26CD488();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a1, v3, v4);
}

uint64_t sub_1D263B158()
{
  uint64_t v0;

  swift_beginAccess();
  return *(unsigned __int8 *)(v0 + 56);
}

uint64_t sub_1D263B188(char a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_beginAccess();
  *(_BYTE *)(v1 + 56) = a1;
  return result;
}

uint64_t (*sub_1D263B1C4())()
{
  swift_beginAccess();
  return j_j__swift_endAccess;
}

uint64_t ControlEntryContent.__allocating_init(archive:hasDeveloperError:)(__int128 *a1, char a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  sub_1D2538F38(a1, v4 + 16);
  *(_BYTE *)(v4 + 56) = a2;
  return v4;
}

uint64_t ControlEntryContent.init(archive:hasDeveloperError:)(__int128 *a1, char a2)
{
  uint64_t v2;

  sub_1D2538F38(a1, v2 + 16);
  *(_BYTE *)(v2 + 56) = a2;
  return v2;
}

void ControlEntryContent.__allocating_init(from:)()
{
  sub_1D26CE1D8();
  __break(1u);
}

void ControlEntryContent.init(from:)()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D263B334()
{
  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D263B390()
{
  uint64_t v0;
  _QWORD v2[4];

  swift_beginAccess();
  sub_1D2538510(v0 + 16, (uint64_t)v2);
  __swift_project_boxed_opaque_existential_0(v2, v2[3]);
  sub_1D26CD8D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  swift_beginAccess();
  return sub_1D26CE478();
}

uint64_t sub_1D263B43C()
{
  uint64_t v0;
  char v1;
  uint64_t v2;
  __int128 v4;
  _QWORD v5[4];

  swift_beginAccess();
  sub_1D2538510(v0 + 16, (uint64_t)v5);
  __swift_project_boxed_opaque_existential_0(v5, v5[3]);
  sub_1D26CD404();
  swift_beginAccess();
  v1 = *(_BYTE *)(v0 + 56);
  type metadata accessor for ControlEntryContent();
  v2 = swift_allocObject();
  sub_1D2538F38(&v4, v2 + 16);
  *(_BYTE *)(v2 + 56) = v1;
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v5);
  return v2;
}

uint64_t ControlEntryContent.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return v0;
}

uint64_t ControlEntryContent.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  return swift_deallocClassInstance();
}

uint64_t sub_1D263B538()
{
  uint64_t v0;
  _QWORD v2[4];

  sub_1D26CE460();
  swift_beginAccess();
  sub_1D2538510(v0 + 16, (uint64_t)v2);
  __swift_project_boxed_opaque_existential_0(v2, v2[3]);
  sub_1D26CD8D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v2);
  swift_beginAccess();
  sub_1D26CE478();
  return sub_1D26CE49C();
}

uint64_t sub_1D263B5E8()
{
  return sub_1D263B538();
}

uint64_t sub_1D263B608()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[4];

  v1 = *v0 + 16;
  swift_beginAccess();
  sub_1D2538510(v1, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_0(v3, v3[3]);
  sub_1D26CD8D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_beginAccess();
  return sub_1D26CE478();
}

uint64_t sub_1D263B6B0()
{
  _QWORD *v0;
  uint64_t v1;
  _QWORD v3[4];

  sub_1D26CE460();
  v1 = *v0 + 16;
  swift_beginAccess();
  sub_1D2538510(v1, (uint64_t)v3);
  __swift_project_boxed_opaque_existential_0(v3, v3[3]);
  sub_1D26CD8D8();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v3);
  swift_beginAccess();
  sub_1D26CE478();
  return sub_1D26CE49C();
}

uint64_t sub_1D263B75C(uint64_t *a1, uint64_t *a2)
{
  return _s9ChronoKit19ControlEntryContentC2eeoiySbAC_ACtFZ_0(*a1, *a2);
}

uint64_t _s9ChronoKit19ControlEntryContentC2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  char v5;
  char v6;
  _BYTE v8[40];
  _BYTE v9[40];

  v4 = a1 + 16;
  swift_beginAccess();
  sub_1D2538510(v4, (uint64_t)v9);
  swift_beginAccess();
  sub_1D2538510(a2 + 16, (uint64_t)v8);
  LOBYTE(v4) = sub_1D26CD6B0();
  sub_1D253703C((uint64_t)v8, qword_1ED96E120);
  sub_1D253703C((uint64_t)v9, qword_1ED96E120);
  if ((v4 & 1) != 0)
  {
    swift_beginAccess();
    v5 = *(_BYTE *)(a1 + 56);
    swift_beginAccess();
    v6 = v5 ^ *(_BYTE *)(a2 + 56) ^ 1;
  }
  else
  {
    v6 = 0;
  }
  return v6 & 1;
}

uint64_t sub_1D263B858(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t result;
  char v6;

  v6 = 0;
  v3 = v1[2];
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2639EEC(v1, a1, &v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  result = swift_release();
  if (v6 == 1)
  {
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
    sub_1D2538EF4((unint64_t *)&unk_1ED96FC60, MEMORY[0x1E0C95F40]);
    return sub_1D26CC1A4();
  }
  return result;
}

uint64_t sub_1D263B90C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D263B954(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = v2[2];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  v2[3] = a1;
  v2[4] = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t sub_1D263B9C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlEntryKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D263BA04(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ControlEntryKey();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for ControlEntryContent()
{
  return objc_opt_self();
}

unint64_t sub_1D263BA6C()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC832B8;
  if (!qword_1EFC832B8)
  {
    v1 = type metadata accessor for ControlEntryContent();
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for ControlEntryContent, v1);
    atomic_store(result, (unint64_t *)&qword_1EFC832B8);
  }
  return result;
}

uint64_t sub_1D263BAB0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D263A268(a1, &OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_dateOfLastDeveloperError, a2);
}

uint64_t sub_1D263BACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D263A2F4(a1, a2, a3, a4, (uint64_t (*)(char *))sub_1D2639B38);
}

uint64_t sub_1D263BAE8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;

  result = sub_1D2639CF8();
  *a1 = result;
  return result;
}

uint64_t sub_1D263BB10(_QWORD *a1, _QWORD *a2)
{
  *(_QWORD *)(*a2 + OBJC_IVAR____TtC9ChronoKit12ControlEntry____lazy_storage___contentDidChangePublisher) = *a1;
  swift_retain();
  return swift_release();
}

uint64_t sub_1D263BB4C()
{
  uint64_t v0;

  v0 = swift_retain();
  sub_1D263B858(v0);
  return swift_release();
}

uint64_t sub_1D263BB7C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D263A268(a1, &OBJC_IVAR____TtC9ChronoKit12ControlEntry__lock_contentLoadErrorDate, a2);
}

uint64_t sub_1D263BB98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1D263A2F4(a1, a2, a3, a4, (uint64_t (*)(char *))sub_1D263A408);
}

uint64_t sub_1D263BBB4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result;
  uint64_t v3;

  result = sub_1D263A768();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1D263BBE8@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3;

  v3 = *a1 + 16;
  swift_beginAccess();
  return sub_1D2538510(v3, a2);
}

uint64_t sub_1D263BC38@<X0>(uint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  uint64_t v3;
  uint64_t result;

  v3 = *a1;
  result = swift_beginAccess();
  *a2 = *(_BYTE *)(v3 + 56);
  return result;
}

uint64_t sub_1D263BC7C(char *a1, uint64_t *a2)
{
  char v2;
  uint64_t v3;
  uint64_t result;

  v2 = *a1;
  v3 = *a2;
  result = swift_beginAccess();
  *(_BYTE *)(v3 + 56) = v2;
  return result;
}

uint64_t sub_1D263BCBC()
{
  return type metadata accessor for ControlEntry();
}

uint64_t type metadata accessor for ControlEntry()
{
  uint64_t result;

  result = qword_1ED96FA90;
  if (!qword_1ED96FA90)
    return swift_getSingletonMetadata();
  return result;
}

void sub_1D263BD00()
{
  unint64_t v0;
  unint64_t v1;
  unint64_t v2;

  sub_1D25D53E4();
  if (v0 <= 0x3F)
  {
    sub_1D26CD488();
    if (v1 <= 0x3F)
    {
      type metadata accessor for ControlEntryKey();
      if (v2 <= 0x3F)
        swift_updateClassMetadata2();
    }
  }
}

uint64_t method lookup function for ControlEntry()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlEntry.dateOfLastDeveloperError.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of ControlEntry.dateOfLastDeveloperError.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of ControlEntry.dateOfLastDeveloperError.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ControlEntry.contentDidChangePublisher.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of ControlEntry.contentDidChangePublisher.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t dispatch thunk of ControlEntry.contentDidChangePublisher.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 272))();
}

uint64_t dispatch thunk of ControlEntry.content.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 280))();
}

uint64_t dispatch thunk of ControlEntry.content.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 288))();
}

uint64_t dispatch thunk of ControlEntry.content.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 296))();
}

uint64_t dispatch thunk of ControlEntry.contentLoadErrorDate.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 328))();
}

uint64_t dispatch thunk of ControlEntry.contentLoadErrorDate.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 336))();
}

uint64_t dispatch thunk of ControlEntry.contentLoadErrorDate.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 344))();
}

uint64_t dispatch thunk of ControlEntry.state.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 352))();
}

uint64_t dispatch thunk of ControlEntry.contentLoadError.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 360))();
}

uint64_t dispatch thunk of ControlEntry.contentLoadError.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 368))();
}

uint64_t dispatch thunk of ControlEntry.contentLoadError.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 376))();
}

uint64_t dispatch thunk of ControlEntry.protectionType.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 384))();
}

uint64_t dispatch thunk of ControlEntry.protectionType.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 392))();
}

uint64_t dispatch thunk of ControlEntry.protectionType.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 400))();
}

uint64_t dispatch thunk of ControlEntry.__allocating_init(key:environmentProvider:protectionType:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 408))();
}

uint64_t method lookup function for ControlEntryContent()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ControlEntryContent.archive.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ControlEntryContent.archive.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of ControlEntryContent.archive.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ControlEntryContent.hasDeveloperError.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ControlEntryContent.hasDeveloperError.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ControlEntryContent.hasDeveloperError.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of ControlEntryContent.__allocating_init(archive:hasDeveloperError:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of ControlEntryContent.__allocating_init(from:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 152))();
}

uint64_t dispatch thunk of ControlEntryContent.encode(to:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ControlEntryContent.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 168))();
}

uint64_t dispatch thunk of ControlEntryContent.copyAsStateOnly()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of ControlEntryContent.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of DataProtectionMonitoring.maxUnlockedProtectionLevelPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DataProtectionMonitoring.unlockedProtectionLevel(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t CGSize.hash(into:)()
{
  sub_1D26CE484();
  return sub_1D26CE484();
}

uint64_t EnvironmentModifiersAssertion.environmentModifiers.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  char v5;
  uint64_t v6;
  uint64_t v7;
  char v8;
  char v9;
  uint64_t v10;
  os_unfair_lock_s *v11;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  v5 = *(_BYTE *)(v1 + 48);
  v7 = *(_QWORD *)(v1 + 56);
  v6 = *(_QWORD *)(v1 + 64);
  v8 = *(_BYTE *)(v1 + 72);
  v9 = *(_BYTE *)(v1 + 73);
  v10 = *(_QWORD *)(v1 + 80);
  *(_BYTE *)a1 = v5;
  *(_QWORD *)(a1 + 8) = v7;
  *(_QWORD *)(a1 + 16) = v6;
  *(_BYTE *)(a1 + 24) = v8;
  *(_BYTE *)(a1 + 25) = v9;
  *(_QWORD *)(a1 + 32) = v10;
  v11 = *(os_unfair_lock_s **)(v3 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v11);
  return swift_release();
}

void sub_1D263C05C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  char v3;
  char v4;
  uint64_t v5;
  char v6[8];
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;

  v2 = *(_QWORD *)(a1 + 8);
  v1 = *(_QWORD *)(a1 + 16);
  v3 = *(_BYTE *)(a1 + 24);
  v4 = *(_BYTE *)(a1 + 25);
  v5 = *(_QWORD *)(a1 + 32);
  v6[0] = *(_BYTE *)a1;
  v7 = v2;
  v8 = v1;
  v9 = v3;
  v10 = v4;
  v11 = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  EnvironmentModifiersAssertion.environmentModifiers.setter(v6);
}

void EnvironmentModifiersAssertion.environmentModifiers.setter(char *a1)
{
  uint64_t v1;
  char v2;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;

  v2 = *a1;
  v4 = *((_QWORD *)a1 + 1);
  v3 = *((_QWORD *)a1 + 2);
  v5 = a1[24];
  v6 = a1[25];
  v7 = *((_QWORD *)a1 + 4);
  v8 = *(_QWORD *)(v1 + 16);
  v9 = *(os_unfair_lock_s **)(v8 + 16);
  swift_retain();
  os_unfair_lock_lock(v9);
  if ((*(_BYTE *)(v1 + 40) & 1) != 0)
  {
    __break(1u);
  }
  else
  {
    *(_BYTE *)(v1 + 48) = v2;
    *(_QWORD *)(v1 + 56) = v4;
    *(_QWORD *)(v1 + 64) = v3;
    *(_BYTE *)(v1 + 72) = v5;
    *(_BYTE *)(v1 + 73) = v6;
    *(_QWORD *)(v1 + 80) = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
}

void (*EnvironmentModifiersAssertion.environmentModifiers.modify(_QWORD *a1))(char **a1, char a2)
{
  uint64_t v1;
  _QWORD *v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  char v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  char v10;
  uint64_t v11;
  os_unfair_lock_s *v12;

  v3 = malloc(0x30uLL);
  *a1 = v3;
  v3[5] = v1;
  v4 = *(_QWORD *)(v1 + 16);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_BYTE *)(v1 + 48);
  v8 = *(_QWORD *)(v1 + 56);
  v7 = *(_QWORD *)(v1 + 64);
  v9 = *(_BYTE *)(v1 + 72);
  v10 = *(_BYTE *)(v1 + 73);
  v11 = *(_QWORD *)(v1 + 80);
  *(_BYTE *)v3 = v6;
  v3[1] = v8;
  v3[2] = v7;
  *((_BYTE *)v3 + 24) = v9;
  *((_BYTE *)v3 + 25) = v10;
  v3[4] = v11;
  v12 = *(os_unfair_lock_s **)(v4 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  os_unfair_lock_unlock(v12);
  swift_release();
  return sub_1D263C22C;
}

void sub_1D263C22C(char **a1, char a2)
{
  char *v2;
  char v3;
  uint64_t v4;
  uint64_t v5;
  char v6;
  char v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  os_unfair_lock_s *v11;
  uint64_t v12;
  uint64_t v13;

  v2 = *a1;
  v3 = **a1;
  v5 = *((_QWORD *)*a1 + 1);
  v4 = *((_QWORD *)*a1 + 2);
  v6 = (*a1)[24];
  v7 = (*a1)[25];
  v8 = *((_QWORD *)*a1 + 4);
  v9 = *((_QWORD *)*a1 + 5);
  v10 = *(_QWORD *)(v9 + 16);
  v11 = *(os_unfair_lock_s **)(v10 + 16);
  if ((a2 & 1) != 0)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    os_unfair_lock_lock(v11);
    if ((*(_BYTE *)(v9 + 40) & 1) == 0)
    {
      v12 = *((_QWORD *)v2 + 5);
      *(_BYTE *)(v12 + 48) = v3;
      *(_QWORD *)(v12 + 56) = v5;
      *(_QWORD *)(v12 + 64) = v4;
      *(_BYTE *)(v12 + 72) = v6;
      *(_BYTE *)(v12 + 73) = v7;
      *(_QWORD *)(v12 + 80) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_6:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      free(v2);
      return;
    }
    __break(1u);
  }
  else
  {
    swift_retain();
    os_unfair_lock_lock(v11);
    if ((*(_BYTE *)(v9 + 40) & 1) == 0)
    {
      v13 = *((_QWORD *)v2 + 5);
      *(_BYTE *)(v13 + 48) = v3;
      *(_QWORD *)(v13 + 56) = v5;
      *(_QWORD *)(v13 + 64) = v4;
      *(_BYTE *)(v13 + 72) = v6;
      *(_BYTE *)(v13 + 73) = v7;
      *(_QWORD *)(v13 + 80) = v8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v10 + 16));
      swift_release();
      goto LABEL_6;
    }
  }
  __break(1u);
}

uint64_t EnvironmentModifiersAssertion.deinit()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    swift_release();
    sub_1D25495F4(*(_QWORD *)(v0 + 24));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t EnvironmentModifiersAssertion.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 40) == 1)
  {
    swift_release();
    sub_1D25495F4(*(_QWORD *)(v0 + 24));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

Swift::Void __swiftcall EnvironmentModifiersAssertion.invalidate()()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  void (*v3)(uint64_t);
  uint64_t v4;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  *(_BYTE *)(v0 + 40) = 1;
  v3 = *(void (**)(uint64_t))(v0 + 24);
  *(_QWORD *)(v0 + 24) = 0;
  *(_QWORD *)(v0 + 32) = 0;
  sub_1D2549DF0((uint64_t)v3);
  sub_1D25495F4((uint64_t)v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  if (v3)
  {
    v4 = swift_retain();
    v3(v4);
    sub_1D25495F4((uint64_t)v3);
    sub_1D25495F4((uint64_t)v3);
  }
}

void sub_1D263C4F0()
{
  EnvironmentModifiersAssertion.invalidate()();
}

uint64_t sub_1D263C510(uint64_t a1)
{
  uint64_t v1;

  *(_QWORD *)(v1 + 32) = a1;
  return swift_bridgeObjectRelease();
}

uint64_t EnvironmentModificationContext.__allocating_init()()
{
  uint64_t v0;

  v0 = swift_allocObject();
  EnvironmentModificationContext.init()();
  return v0;
}

_QWORD *EnvironmentModificationContext.init()()
{
  _QWORD *v0;
  uint64_t v1;
  _DWORD *v2;

  type metadata accessor for UnfairLock();
  v1 = swift_allocObject();
  v2 = (_DWORD *)swift_slowAlloc();
  *v2 = 0;
  *(_QWORD *)(v1 + 16) = v2;
  v0[2] = v1;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963C80);
  v0[3] = sub_1D26CD7C4();
  v0[4] = sub_1D26CD7C4();
  return v0;
}

uint64_t sub_1D263C5EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = v2[2];
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D263C65C(v2, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

uint64_t sub_1D263C65C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t result;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  _QWORD *v20;
  uint64_t Strong;
  uint64_t v22;
  uint64_t v23;
  os_unfair_lock_s *v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  int v28;
  uint64_t v29;
  os_unfair_lock_s *v30;
  unint64_t v31;
  unint64_t v32;
  _QWORD *v33;
  uint64_t *v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  uint64_t v42;
  uint64_t v43;
  uint64_t v44;
  uint64_t v46;
  unint64_t v47;
  unint64_t v48;
  uint64_t v49[5];
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  uint64_t v54;
  int v55;
  int v56;

  v5 = *a1;
  swift_beginAccess();
  v6 = a1[3];
  v7 = *(_QWORD *)(v5 + 80);
  swift_bridgeObjectRetain();
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963C80);
  v9 = *(_QWORD *)(v5 + 88);
  MEMORY[0x1D8239074](&v50, a2, v6, v7, v8, v9);
  swift_bridgeObjectRelease();
  v10 = v50;
  v11 = a1[4];
  swift_bridgeObjectRetain();
  MEMORY[0x1D8239074](&v50, a2, v11, v7, &type metadata for EnvironmentModifiers, v9);
  result = swift_bridgeObjectRelease();
  v14 = v50;
  v13 = v51;
  v15 = v52;
  v16 = v53;
  v17 = v54;
  if (!v10)
  {
    if (!v52)
    {
      *a3 = v50;
      a3[1] = v13;
      a3[2] = 0;
      a3[3] = v16;
      a3[4] = v17;
      return result;
    }
    v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    v34 = a3;
    goto LABEL_23;
  }
  v40 = v52;
  v41 = v50;
  v42 = v51;
  v43 = v53;
  v44 = v54;
  if (v10 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE1F0();
    v18 = result;
    if (result)
      goto LABEL_4;
  }
  else
  {
    v18 = *(_QWORD *)((v10 & 0xFFFFFFFFFFFFFF8) + 0x10);
    result = swift_bridgeObjectRetain();
    if (v18)
    {
LABEL_4:
      if (v18 < 1)
      {
        __break(1u);
        return result;
      }
      v19 = 0;
      v48 = v10 & 0xC000000000000001;
      v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
      v46 = v18;
      v47 = v10;
      do
      {
        if (v48)
          MEMORY[0x1D8239890](v19, v10);
        else
          swift_retain();
        Strong = swift_weakLoadStrong();
        if (Strong)
        {
          v22 = Strong;
          v23 = *(_QWORD *)(Strong + 16);
          v24 = *(os_unfair_lock_s **)(v23 + 16);
          swift_retain();
          os_unfair_lock_lock(v24);
          v25 = *(_BYTE *)(v22 + 48);
          v26 = *(_QWORD *)(v22 + 56);
          v27 = *(_QWORD *)(v22 + 64);
          v28 = *(unsigned __int8 *)(v22 + 72);
          v55 = *(unsigned __int8 *)(v22 + 73);
          v56 = v28;
          v29 = *(_QWORD *)(v22 + 80);
          v30 = *(os_unfair_lock_s **)(v23 + 16);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          os_unfair_lock_unlock(v30);
          swift_release();
          swift_release();
          swift_release();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            v20 = sub_1D2561F8C(0, v20[2] + 1, 1, v20);
          v32 = v20[2];
          v31 = v20[3];
          if (v32 >= v31 >> 1)
            v20 = sub_1D2561F8C((_QWORD *)(v31 > 1), v32 + 1, 1, v20);
          v20[2] = v32 + 1;
          v33 = &v20[5 * v32];
          *((_BYTE *)v33 + 32) = v25;
          v33[5] = v26;
          v33[6] = v27;
          *((_BYTE *)v33 + 56) = v56;
          *((_BYTE *)v33 + 57) = v55;
          v33[8] = v29;
          v18 = v46;
          v10 = v47;
        }
        else
        {
          swift_release();
        }
        ++v19;
      }
      while (v18 != v19);
      goto LABEL_22;
    }
  }
  v20 = (_QWORD *)MEMORY[0x1E0DEE9D8];
LABEL_22:
  swift_bridgeObjectRelease_n();
  v34 = a3;
  v16 = v43;
  v17 = v44;
  v14 = v41;
  v13 = v42;
  v15 = v40;
LABEL_23:
  v49[0] = v14;
  v49[1] = v13;
  v49[2] = v15;
  v49[3] = v16;
  v49[4] = v17;
  result = sub_1D25EEEC8(v49, v20, (uint64_t)&v50);
  v35 = v51;
  v36 = v52;
  v37 = v54;
  v38 = 256;
  if (!BYTE1(v53))
    v38 = 0;
  v39 = v38 | v53;
  *v34 = v50;
  v34[1] = v35;
  v34[2] = v36;
  v34[3] = v39;
  v34[4] = v37;
  return result;
}

uint64_t sub_1D263C994(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + 16);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  *(_QWORD *)(v1 + 32) = a1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

uint64_t sub_1D263C9F4(uint64_t a1)
{
  _QWORD *v1;
  uint64_t v3;
  os_unfair_lock_s *v4;
  uint64_t v6;

  v3 = v1[2];
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D263CA60(v1, a1, &v6);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  swift_release();
  return v6;
}

uint64_t sub_1D263CA60@<X0>(_QWORD *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _DWORD *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  void (*v20)(char *, char *, uint64_t);
  uint64_t v21;
  os_unfair_lock_s *v22;
  uint64_t v23;
  _QWORD *v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  void (*v30)(char *, uint64_t, uint64_t);
  uint64_t *v31;
  _QWORD *v32;
  char *v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;

  v31 = a3;
  v33 = (char *)*a1;
  v5 = *((_QWORD *)v33 + 10);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  MEMORY[0x1E0C80A78](a1);
  type metadata accessor for EnvironmentModifiersAssertion();
  v8 = swift_allocObject();
  type metadata accessor for UnfairLock();
  v9 = swift_allocObject();
  v10 = (_DWORD *)swift_slowAlloc();
  *v10 = 0;
  *(_QWORD *)(v9 + 16) = v10;
  *(_QWORD *)(v8 + 24) = 0;
  *(_QWORD *)(v8 + 32) = 0;
  *(_QWORD *)(v8 + 16) = v9;
  *(_BYTE *)(v8 + 40) = 0;
  v11 = MEMORY[0x1E0DEE9E8];
  v12 = MEMORY[0x1E0DEE9E8];
  if ((MEMORY[0x1E0DEE9D8] & 0xC000000000000000) != 0)
  {
    if (sub_1D26CE1F0())
      sub_1D25F5124(MEMORY[0x1E0DEE9D8]);
    else
      v12 = MEMORY[0x1E0DEE9E8];
  }
  *(_BYTE *)(v8 + 48) = 0;
  *(_QWORD *)(v8 + 56) = 0;
  *(_QWORD *)(v8 + 64) = v11;
  *(_WORD *)(v8 + 72) = 0;
  *(_QWORD *)(v8 + 80) = v12;
  v13 = swift_allocObject();
  swift_weakInit();
  v32 = a1;
  v14 = swift_allocObject();
  swift_weakInit();
  v30 = *(void (**)(char *, uint64_t, uint64_t))(v6 + 16);
  v30((char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v5);
  v15 = *(unsigned __int8 *)(v6 + 80);
  v34 = a2;
  v16 = (char *)&v29 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v17 = (v15 + 48) & ~v15;
  v18 = (char *)swift_allocObject();
  *((_QWORD *)v18 + 2) = v5;
  v19 = *((_QWORD *)v33 + 11);
  *((_QWORD *)v18 + 3) = v19;
  *((_QWORD *)v18 + 4) = v13;
  *((_QWORD *)v18 + 5) = v14;
  v20 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
  v33 = v16;
  v20(&v18[v17], v16, v5);
  v21 = *(_QWORD *)(v8 + 16);
  v22 = *(os_unfair_lock_s **)(v21 + 16);
  swift_retain();
  swift_retain();
  swift_retain();
  os_unfair_lock_lock(v22);
  v23 = *(_QWORD *)(v8 + 24);
  *(_QWORD *)(v8 + 24) = sub_1D263D424;
  *(_QWORD *)(v8 + 32) = v18;
  swift_retain();
  sub_1D25495F4(v23);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v21 + 16));
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  v24 = v32;
  swift_beginAccess();
  v25 = v24[3];
  swift_bridgeObjectRetain();
  v26 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963C80);
  MEMORY[0x1D8239074](&v36, v34, v25, v5, v26, v19);
  swift_bridgeObjectRelease();
  if (!v36)
    v36 = MEMORY[0x1E0DEE9D8];
  type metadata accessor for _WeakEnvironmentModifiersAssertion();
  swift_allocObject();
  swift_weakInit();
  result = swift_weakAssign();
  if (v36)
  {
    v28 = swift_retain();
    MEMORY[0x1D8239290](v28);
    if (*(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(_QWORD *)((v36 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      sub_1D26CDB30();
    sub_1D26CDB54();
    sub_1D26CDB0C();
    v30(v33, v34, v5);
    v35 = v36;
    swift_beginAccess();
    sub_1D26CD89C();
    swift_bridgeObjectRetain();
    sub_1D26CD8C0();
    swift_endAccess();
    swift_release();
    *v31 = v8;
    return swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1D263CE34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result;
  _QWORD *v5;
  uint64_t Strong;
  uint64_t v7;
  uint64_t v8;
  os_unfair_lock_s *v9;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v5 = (_QWORD *)result;
    swift_beginAccess();
    Strong = swift_weakLoadStrong();
    if (Strong)
    {
      v7 = Strong;
      v8 = v5[2];
      v9 = *(os_unfair_lock_s **)(v8 + 16);
      swift_retain();
      os_unfair_lock_lock(v9);
      sub_1D263CF08(v5, a3, v7);
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v8 + 16));
      swift_release();
      swift_release();
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_1D263CF08(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  int64_t v21;
  unint64_t v22;

  v6 = *a1;
  v7 = *(_QWORD *)(*a1 + 80);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](a1);
  v10 = (char *)&v19 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  v11 = a1[3];
  swift_bridgeObjectRetain();
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963C80);
  v13 = *(_QWORD *)(v6 + 88);
  v20 = a2;
  MEMORY[0x1D8239074](&v22, a2, v11, v7, v12, v13);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v14 = 0;
    goto LABEL_9;
  }
  swift_retain();
  v14 = sub_1D263D444(&v22, a3);
  swift_release();
  if (!(v22 >> 62))
  {
    v15 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFF8) + 0x10);
    if (v15 >= v14)
      goto LABEL_4;
LABEL_13:
    __break(1u);
LABEL_14:
    swift_bridgeObjectRetain();
    v18 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    v16 = v20;
    if (!v18)
      goto LABEL_7;
LABEL_10:
    (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v16, v7);
    v21 = v14;
    swift_beginAccess();
    sub_1D26CD89C();
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  v15 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  if (v15 < v14)
    goto LABEL_13;
LABEL_4:
  sub_1D263D814(v14, v15);
  v14 = v22;
  if (!v22)
  {
LABEL_9:
    v16 = v20;
    goto LABEL_10;
  }
  if (v22 >> 62)
    goto LABEL_14;
  v16 = v20;
  if (*(_QWORD *)((v22 & 0xFFFFFFFFFFFFFF8) + 0x10))
    goto LABEL_10;
LABEL_7:
  (*(void (**)(char *, uint64_t, uint64_t))(v8 + 16))(v10, v16, v7);
  v21 = 0;
  swift_beginAccess();
  sub_1D26CD89C();
LABEL_11:
  sub_1D26CD8C0();
  swift_endAccess();
  return swift_bridgeObjectRelease();
}

uint64_t EnvironmentModificationContext.deinit()
{
  uint64_t v0;

  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t EnvironmentModificationContext.__deallocating_deinit()
{
  EnvironmentModificationContext.deinit();
  return swift_deallocClassInstance();
}

void sub_1D263D1E4(unint64_t a1)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    sub_1D26CE1F0();
    swift_bridgeObjectRelease();
  }
  JUMPOUT(0x1D823989CLL);
}

uint64_t sub_1D263D24C@<X0>(uint64_t a1@<X8>)
{
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  char v5;
  char v6;
  uint64_t v7;
  _BYTE v8[8];
  uint64_t v9;
  uint64_t v10;
  char v11;
  char v12;
  uint64_t v13;

  result = EnvironmentModifiersAssertion.environmentModifiers.getter((uint64_t)v8);
  v3 = v9;
  v4 = v10;
  v5 = v11;
  v6 = v12;
  v7 = v13;
  *(_BYTE *)a1 = v8[0];
  *(_QWORD *)(a1 + 8) = v3;
  *(_QWORD *)(a1 + 16) = v4;
  *(_BYTE *)(a1 + 24) = v5;
  *(_BYTE *)(a1 + 25) = v6;
  *(_QWORD *)(a1 + 32) = v7;
  return result;
}

uint64_t type metadata accessor for EnvironmentModifiersAssertion()
{
  return objc_opt_self();
}

uint64_t method lookup function for EnvironmentModifiersAssertion()
{
  return swift_lookUpClassMethod();
}

uint64_t type metadata accessor for _WeakEnvironmentModifiersAssertion()
{
  return objc_opt_self();
}

uint64_t sub_1D263D2F4()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for EnvironmentModificationContext(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for EnvironmentModificationContext);
}

uint64_t method lookup function for EnvironmentModificationContext()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of EnvironmentModificationContext.__allocating_init()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 192))();
}

uint64_t dispatch thunk of EnvironmentModificationContext.environmentModifiers(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 200))();
}

uint64_t dispatch thunk of EnvironmentModificationContext.setConfigurationBasedEnvironmentModifiers(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 208))();
}

uint64_t dispatch thunk of EnvironmentModificationContext.newEnvironmentModifiersAssertion(for:reason:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 216))();
}

uint64_t sub_1D263D38C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D263D3B0()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = *(_QWORD *)(v0 + 16);
  v2 = *(_QWORD *)(v1 - 8);
  v3 = (*(unsigned __int8 *)(v2 + 80) + 48) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);
  return swift_deallocObject();
}

uint64_t sub_1D263D424()
{
  _QWORD *v0;
  uint64_t v1;

  v1 = *(unsigned __int8 *)(*(_QWORD *)(v0[2] - 8) + 80);
  return sub_1D263CE34(v0[4], v0[5], (uint64_t)v0 + ((v1 + 48) & ~v1));
}

uint64_t sub_1D263D444(unint64_t *a1, uint64_t a2)
{
  unint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t Strong;
  unint64_t v8;
  unint64_t v9;
  unint64_t v11;
  unint64_t i;
  uint64_t v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  int isUniquelyReferenced_nonNull_bridgeObject;
  unint64_t v18;
  int v19;
  unint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;

  v4 = *a1;
  if (*a1 >> 62)
    goto LABEL_64;
  v5 = *(_QWORD *)((v4 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
LABEL_3:
    v6 = 0;
    while (1)
    {
      if ((v4 & 0xC000000000000001) != 0)
        MEMORY[0x1D8239890](v6, v4);
      else
        swift_retain();
      Strong = swift_weakLoadStrong();
      swift_release();
      if (Strong)
      {
        swift_release();
        if (Strong == a2)
          break;
      }
      v8 = v6 + 1;
      if (__OFADD__(v6, 1))
      {
        __break(1u);
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
LABEL_58:
        __break(1u);
LABEL_59:
        __break(1u);
LABEL_60:
        __break(1u);
LABEL_61:
        __break(1u);
LABEL_62:
        __break(1u);
LABEL_63:
        __break(1u);
LABEL_64:
        swift_bridgeObjectRetain();
        v5 = sub_1D26CE1F0();
        if (!v5)
          goto LABEL_11;
        goto LABEL_3;
      }
      ++v6;
      if (v8 == v5)
        goto LABEL_11;
    }
    swift_bridgeObjectRelease();
    v11 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
    }
    else if (!(*a1 >> 62))
    {
      if (v11 != *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
      {
LABEL_17:
        for (i = v6 + 5; ; ++i)
        {
          v4 = i - 4;
          if ((*a1 & 0xC000000000000001) != 0)
          {
            MEMORY[0x1D8239890](i - 4);
          }
          else
          {
            if ((v4 & 0x8000000000000000) != 0)
              goto LABEL_54;
            if (v4 >= *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_55;
            swift_retain();
          }
          v13 = swift_weakLoadStrong();
          swift_release();
          if (v13)
          {
            swift_release();
            if (v13 == a2)
              goto LABEL_44;
          }
          if (v4 != v6)
            break;
LABEL_43:
          if (__OFADD__(v6++, 1))
            goto LABEL_57;
LABEL_44:
          v21 = i - 3;
          if (__OFADD__(v4, 1))
            goto LABEL_56;
          if (*a1 >> 62)
          {
            swift_bridgeObjectRetain();
            v22 = sub_1D26CE1F0();
            swift_bridgeObjectRelease();
          }
          else
          {
            v22 = *(_QWORD *)((*a1 & 0xFFFFFFFFFFFFF8) + 0x10);
          }
          if (v21 == v22)
            return v6;
        }
        v14 = *a1;
        if ((*a1 & 0xC000000000000001) != 0)
        {
          v15 = MEMORY[0x1D8239890](v6, *a1);
          v14 = *a1;
          if ((*a1 & 0xC000000000000001) == 0)
          {
LABEL_29:
            if ((v4 & 0x8000000000000000) != 0)
              goto LABEL_60;
            if (v4 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
              goto LABEL_61;
            v16 = *(_QWORD *)(v14 + 8 * i);
            swift_retain();
            goto LABEL_32;
          }
        }
        else
        {
          if ((v6 & 0x8000000000000000) != 0)
            goto LABEL_58;
          if (v6 >= *(_QWORD *)((v14 & 0xFFFFFFFFFFFFF8) + 0x10))
            goto LABEL_59;
          v15 = *(_QWORD *)(v14 + 8 * v6 + 32);
          swift_retain();
          if ((v14 & 0xC000000000000001) == 0)
            goto LABEL_29;
        }
        v16 = MEMORY[0x1D8239890](i - 4, v14);
        v14 = *a1;
LABEL_32:
        isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v14;
        if (!isUniquelyReferenced_nonNull_bridgeObject
          || (v14 & 0x8000000000000000) != 0
          || (v14 & 0x4000000000000000) != 0)
        {
          sub_1D263D1E4(v14);
        }
        *(_QWORD *)((v14 & 0xFFFFFFFFFFFFFF8) + 8 * v6 + 0x20) = v16;
        swift_release();
        sub_1D26CDB0C();
        v18 = *a1;
        v19 = swift_isUniquelyReferenced_nonNull_bridgeObject();
        *a1 = v18;
        if (!v19 || (v18 & 0x8000000000000000) != 0 || (v18 & 0x4000000000000000) != 0)
          sub_1D263D1E4(v18);
        if ((v4 & 0x8000000000000000) != 0)
          goto LABEL_62;
        if (v4 >= *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 0x10))
          goto LABEL_63;
        *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFF8) + 8 * i) = v15;
        swift_release();
        sub_1D26CDB0C();
        goto LABEL_43;
      }
      return v6;
    }
    swift_bridgeObjectRetain();
    v24 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    if (v11 != v24)
      goto LABEL_17;
    return v6;
  }
LABEL_11:
  swift_bridgeObjectRelease();
  v9 = *a1;
  if (!(v9 >> 62))
    return *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  v23 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_1D263D814(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  unint64_t *v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int isUniquelyReferenced_nonNull_bridgeObject;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  const void *v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t result;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    v2 = a2;
    v4 = a1;
    v5 = *v3;
    if (!(*v3 >> 62))
    {
      if (*(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10) >= a2)
        goto LABEL_4;
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
  }
  swift_bridgeObjectRetain();
  v19 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  if (v19 < v2)
    goto LABEL_31;
LABEL_4:
  v7 = v2 - v4;
  if (__OFSUB__(v2, v4))
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  v6 = v4 - v2;
  if (__OFSUB__(0, v7))
  {
LABEL_33:
    __break(1u);
LABEL_34:
    swift_bridgeObjectRetain();
    v8 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    v9 = v8 + v6;
    if (!__OFADD__(v8, v6))
      goto LABEL_8;
LABEL_36:
    __break(1u);
LABEL_37:
    swift_bridgeObjectRetain();
    v12 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
  v5 = *v3;
  if (*v3 >> 62)
    goto LABEL_34;
  v8 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
  v9 = v8 - v7;
  if (__OFADD__(v8, v6))
    goto LABEL_36;
LABEL_8:
  v5 = *v3;
  isUniquelyReferenced_nonNull_bridgeObject = swift_isUniquelyReferenced_nonNull_bridgeObject();
  *v3 = v5;
  v8 = 0;
  if (isUniquelyReferenced_nonNull_bridgeObject && (v5 & 0x8000000000000000) == 0 && (v5 & 0x4000000000000000) == 0)
  {
    v11 = v5 & 0xFFFFFFFFFFFFFF8;
    if (v9 <= *(_QWORD *)((v5 & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1)
      goto LABEL_18;
    v8 = 1;
  }
  if (v5 >> 62)
    goto LABEL_37;
  v12 = *(_QWORD *)((v5 & 0xFFFFFFFFFFFFF8) + 0x10);
LABEL_15:
  if (v12 <= v9)
    v12 = v9;
  swift_bridgeObjectRetain();
  v5 = MEMORY[0x1D823989C](v8, v12, 1, v5);
  swift_bridgeObjectRelease();
  *v3 = v5;
  v11 = v5 & 0xFFFFFFFFFFFFFF8;
LABEL_18:
  type metadata accessor for _WeakEnvironmentModifiersAssertion();
  swift_arrayDestroy();
  if (!v6)
    return sub_1D26CDB0C();
  if (!(v5 >> 62))
  {
    v13 = *(_QWORD *)(v11 + 16);
    v14 = v13 - v2;
    if (!__OFSUB__(v13, v2))
      goto LABEL_21;
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  swift_bridgeObjectRetain();
  v20 = sub_1D26CE1F0();
  swift_bridgeObjectRelease();
  v14 = v20 - v2;
  if (__OFSUB__(v20, v2))
    goto LABEL_40;
LABEL_21:
  if ((v14 & 0x8000000000000000) == 0)
  {
    v15 = (const void *)(v11 + 32 + 8 * v2);
    if (v4 != v2 || v11 + 32 + 8 * v4 >= (unint64_t)v15 + 8 * v14)
      memmove((void *)(v11 + 32 + 8 * v4), v15, 8 * v14);
    if (!(v5 >> 62))
    {
      v16 = *(_QWORD *)(v11 + 16);
      v17 = v16 + v6;
      if (!__OFADD__(v16, v6))
      {
LABEL_27:
        *(_QWORD *)(v11 + 16) = v17;
        return sub_1D26CDB0C();
      }
      goto LABEL_43;
    }
LABEL_41:
    swift_bridgeObjectRetain();
    v21 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
    v17 = v21 + v6;
    if (!__OFADD__(v21, v6))
      goto LABEL_27;
LABEL_43:
    __break(1u);
  }
  result = sub_1D26CE220();
  __break(1u);
  return result;
}

uint64_t sub_1D263DAE4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 24))();
}

uint64_t sub_1D263DAEC()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D263DB30()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 96))();
}

uint64_t sub_1D263DB58()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 104))();
}

uint64_t sub_1D263DB80()
{
  uint64_t v0;

  swift_release();
  return v0;
}

uint64_t type metadata accessor for AnyLayerSnapshotter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for AnyLayerSnapshotter);
}

uint64_t sub_1D263DBA8()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D263DBDC()
{
  return sub_1D263DB30();
}

uint64_t sub_1D263DBFC()
{
  return sub_1D263DB58();
}

void sub_1D263DC1C()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D263DC64()
{
  sub_1D26CE1D8();
  __break(1u);
}

uint64_t type metadata accessor for _AnyLayerSnapshotterBase(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AnyLayerSnapshotterBase);
}

uint64_t sub_1D263DCB8()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D263DD28()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 96))();
}

uint64_t sub_1D263DD50()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 104))();
}

uint64_t sub_1D263DD78()
{
  uint64_t v0;

  return (*(uint64_t (**)(_QWORD))(*(_QWORD *)(*(_QWORD *)v0 + 120) + 16))(*(_QWORD *)(*(_QWORD *)v0 + 112));
}

uint64_t sub_1D263DDA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v5;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, _QWORD))(*(_QWORD *)(*(_QWORD *)v5 + 120)
                                                                                        + 24))(a1, a2, a3, a4, a5, *(_QWORD *)(*(_QWORD *)v5 + 112));
}

uint64_t sub_1D263DDD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
}

uint64_t sub_1D263DDF4()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 112) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 128));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _AnyLayerSnapshottingBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AnyLayerSnapshottingBox);
}

uint64_t dispatch thunk of WidgetAssertionProviding.acquireWidgetLifetimeAssertion(for:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t dispatch thunk of ControlAssertionProviding.acquireLifetimeAssertion(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D263DE4C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;

  return sub_1D2538510(v1 + 16, a1);
}

uint64_t sub_1D263DE68(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, unsigned __int8 *a5, uint64_t a6, double a7)
{
  uint64_t *v7;
  char v13;
  uint64_t v14;
  os_unfair_lock_s *v15;
  int v16;

  v13 = *a4;
  v14 = v7[8];
  v15 = *(os_unfair_lock_s **)(v14 + 16);
  v16 = *a5;
  swift_retain();
  os_unfair_lock_lock(v15);
  sub_1D263DF18(a1, a2, a3, v13, v16, a6, v7, a7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v14 + 16));
  return swift_release();
}

uint64_t sub_1D263DF18(uint64_t a1, uint64_t a2, uint64_t a3, char a4, int a5, uint64_t a6, uint64_t *a7, double a8)
{
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  id v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t updated;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t result;
  _QWORD v29[4];
  int v30;
  uint64_t v31;
  char *v32;
  uint64_t v33;
  uint64_t v34;
  int v35;
  uint64_t v36;
  unint64_t v37;
  uint64_t v38;
  char *v39;
  uint64_t v40;
  unint64_t v41;
  char *v42;

  v36 = a6;
  v35 = a5;
  v33 = a2;
  v34 = a3;
  v12 = *a7;
  v13 = *(_QWORD *)(*a7 + 88);
  v38 = *(_QWORD *)(v13 - 8);
  v14 = MEMORY[0x1E0C80A78](a1);
  v32 = (char *)v29 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  v29[0] = v15;
  MEMORY[0x1E0C80A78](v14);
  v39 = (char *)v29 - v16;
  v40 = 0;
  v41 = 0xE000000000000000;
  sub_1D26CB904();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  v17 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3A28]), sel_init);
  v18 = objc_msgSend(v17, sel_UUIDString);

  sub_1D26CD938();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v31 = v40;
  v37 = v41;
  v19 = swift_bridgeObjectRetain();
  if (!MEMORY[0x1D8239350](v19, v13))
  {
LABEL_11:
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  v30 = a4 & 1;
  updated = type metadata accessor for PowerlogUpdateEntry(0, v13, *(_QWORD *)(v12 + 104), v20);
  v22 = 0;
  v29[2] = a7 + 7;
  v29[3] = updated;
  v23 = v37;
  v24 = v34;
  while (1)
  {
    v25 = sub_1D26CDB48();
    sub_1D26CDB24();
    if ((v25 & 1) != 0)
    {
      (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v39, a1+ ((*(unsigned __int8 *)(v38 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v38 + 80))+ *(_QWORD *)(v38 + 72) * v22, v13);
      v26 = v22 + 1;
      if (__OFADD__(v22, 1))
        goto LABEL_10;
      goto LABEL_5;
    }
    result = sub_1D26CE0C4();
    if (v29[0] != 8)
      break;
    v40 = result;
    (*(void (**)(char *, uint64_t *, uint64_t))(v38 + 16))(v39, &v40, v13);
    swift_unknownObjectRelease();
    v26 = v22 + 1;
    if (__OFADD__(v22, 1))
    {
LABEL_10:
      __break(1u);
      goto LABEL_11;
    }
LABEL_5:
    v27 = (uint64_t)v32;
    (*(void (**)(char *, char *, uint64_t))(v38 + 32))(v32, v39, v13);
    LOBYTE(v40) = v30;
    LOBYTE(v42) = v35;
    v42 = sub_1D25E82E8(v31, v23, v27, v33, v24, &v40, &v42, v36, a8);
    swift_beginAccess();
    sub_1D26CDBA8();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1D26CDB6C();
    swift_endAccess();
    swift_release();
    ++v22;
    if (v26 == MEMORY[0x1D8239350](a1, v13))
      goto LABEL_11;
  }
  __break(1u);
  return result;
}

uint64_t sub_1D263E25C()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _QWORD v7[3];
  uint64_t v8;
  uint64_t v9;

  v1 = *(_QWORD *)(v0 + 64);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  swift_beginAccess();
  v3 = *(_QWORD *)(v0 + 56);
  *(_QWORD *)(v0 + 56) = MEMORY[0x1E0DEE9D8];
  sub_1D2538510(v0 + 16, (uint64_t)v7);
  v4 = v8;
  v5 = v9;
  __swift_project_boxed_opaque_existential_0(v7, v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 56))(v3, v4, v5);
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t sub_1D263E31C()
{
  uint64_t *v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = v0[8];
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  sub_1D263E374(v0);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t sub_1D263E374(uint64_t *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  _QWORD v8[3];
  uint64_t v9;
  uint64_t v10;

  v2 = *a1;
  swift_beginAccess();
  v3 = a1[7];
  swift_beginAccess();
  type metadata accessor for PowerlogUpdateEntry(255, *(_QWORD *)(v2 + 88), *(_QWORD *)(v2 + 104), v4);
  sub_1D26CDBA8();
  swift_bridgeObjectRetain();
  sub_1D26CDB9C();
  swift_endAccess();
  sub_1D2538510((uint64_t)(a1 + 2), (uint64_t)v8);
  v5 = v9;
  v6 = v10;
  __swift_project_boxed_opaque_existential_0(v8, v9);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 56))(v3, v5, v6);
  swift_bridgeObjectRelease();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v8);
}

void sub_1D263E464(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v6;
  id v7;
  void *v8;
  id v9;
  void *v10;
  void *v11;
  id v12;
  void *v13;
  uint64_t v14;
  void *v15;
  _QWORD v16[6];

  v6 = v3;
  BSDispatchQueueAssertMain();
  objc_msgSend(*(id *)(v3 + 72), sel_invalidate);
  v7 = objc_allocWithZone(MEMORY[0x1E0D01720]);
  v8 = (void *)sub_1D26CD914();
  v9 = objc_msgSend(v7, sel_initWithIdentifier_, v8);

  v10 = *(void **)(v6 + 72);
  *(_QWORD *)(v6 + 72) = v9;

  v11 = *(void **)(v6 + 72);
  if (v11)
  {
    sub_1D2544658();
    v12 = v11;
    v13 = (void *)sub_1D26CDD94();
    v14 = swift_allocObject();
    swift_weakInit();
    v16[4] = a2;
    v16[5] = v14;
    v16[0] = MEMORY[0x1E0C809B0];
    v16[1] = 1107296256;
    v16[2] = sub_1D255A5C8;
    v16[3] = a3;
    v15 = _Block_copy(v16);
    swift_release();
    objc_msgSend(v12, sel_scheduleRepeatingWithFireInterval_repeatInterval_leewayInterval_queue_handler_, v13, v15, 900.0, 900.0, 300.0);
    _Block_release(v15);

  }
}

uint64_t sub_1D263E5D4()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;
  uint64_t result;

  if (qword_1ED96E790 != -1)
    swift_once();
  v0 = sub_1D26CC09C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9780C0);
  v1 = sub_1D26CC084();
  v2 = sub_1D26CDD04();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D2531000, v1, v2, "Performing scheduled flush of powerlog update entries", v3, 2u);
    MEMORY[0x1D823A5E0](v3, -1, -1);
  }

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D263E25C();
    return swift_release();
  }
  return result;
}

uint64_t BasePowerlogUpdateService.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t BasePowerlogUpdateService.__deallocating_deinit()
{
  BasePowerlogUpdateService.deinit();
  return swift_deallocClassInstance();
}

uint64_t sub_1D263E730(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, unsigned __int8 *a5, uint64_t a6, double a7)
{
  return sub_1D263DE68(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_1D263E750()
{
  return sub_1D263E31C();
}

uint64_t PowerlogWidgetUpdateService.__allocating_init(owner:)(_BYTE *a1)
{
  swift_allocObject();
  return PowerlogWidgetUpdateService.init(owner:)(a1);
}

uint64_t PowerlogWidgetUpdateService.init(owner:)(_BYTE *a1)
{
  return sub_1D263E840(a1, (void (*)(_QWORD))type metadata accessor for WidgetPowerlogProvider, 0xD00000000000001FLL, 0x80000001D26DE6C0, (uint64_t (*)(uint64_t, _QWORD))sub_1D263EA88);
}

uint64_t PowerlogControlsUpdateService.__allocating_init(owner:)(_BYTE *a1)
{
  swift_allocObject();
  return PowerlogControlsUpdateService.init(owner:)(a1);
}

uint64_t PowerlogControlsUpdateService.init(owner:)(_BYTE *a1)
{
  return sub_1D263E840(a1, (void (*)(_QWORD))type metadata accessor for ControlsPowerlogProvider, 0xD000000000000027, 0x80000001D26E0290, (uint64_t (*)(uint64_t, _QWORD))sub_1D263EB50);
}

uint64_t sub_1D263E840(_BYTE *a1, void (*a2)(_QWORD), uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t, _QWORD))
{
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  uint64_t (*v12)(uint64_t);
  uint64_t v13;
  uint64_t v14;
  _QWORD v16[4];
  uint64_t (*v17)(uint64_t, _QWORD);
  uint64_t v18;

  v17 = a5;
  v16[1] = a3;
  v16[2] = a4;
  v7 = sub_1D26CDD88();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D26CDD40();
  v12 = (uint64_t (*)(uint64_t))MEMORY[0x1E0DEF810];
  MEMORY[0x1E0C80A78](v11);
  v13 = sub_1D26CD0C8();
  MEMORY[0x1E0C80A78](v13);
  LOBYTE(a1) = *a1;
  a2(0);
  v14 = swift_allocObject();
  *(_BYTE *)(v14 + 16) = (_BYTE)a1;
  sub_1D2544658();
  sub_1D26CD0B0();
  v18 = MEMORY[0x1E0DEE9D8];
  sub_1D25369B0((unint64_t *)&qword_1ED96EE40, v12, MEMORY[0x1E0DEF828]);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96EE20);
  sub_1D255496C();
  sub_1D26CDFE0();
  (*(void (**)(char *, _QWORD, uint64_t))(v8 + 104))(v10, *MEMORY[0x1E0DEF8D8], v7);
  *(_QWORD *)(v14 + 24) = sub_1D26CDDB8();
  return v17(v14, v16[3]);
}

uint64_t _s9ChronoKit27PowerlogWidgetUpdateServiceCfd_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();

  return v0;
}

uint64_t _s9ChronoKit27PowerlogWidgetUpdateServiceCfD_0()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();

  return swift_deallocClassInstance();
}

_QWORD *sub_1D263EA88(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _DWORD *v5;
  _QWORD v7[5];

  v7[3] = type metadata accessor for WidgetPowerlogProvider();
  v7[4] = sub_1D25369B0(&qword_1ED96EA20, (uint64_t (*)(uint64_t))type metadata accessor for WidgetPowerlogProvider, (uint64_t)&unk_1D26D8DC8);
  v7[0] = a1;
  a2[7] = MEMORY[0x1E0DEE9D8];
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  a2[8] = v4;
  a2[9] = 0;
  sub_1D2538510((uint64_t)v7, (uint64_t)(a2 + 2));
  sub_1D263E464((uint64_t)&unk_1E93DAC98, (uint64_t)sub_1D263ED50, (uint64_t)&block_descriptor_6_0);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return a2;
}

_QWORD *sub_1D263EB50(uint64_t a1, _QWORD *a2)
{
  uint64_t v4;
  _DWORD *v5;
  _QWORD v7[5];

  v7[3] = type metadata accessor for ControlsPowerlogProvider();
  v7[4] = sub_1D25369B0(&qword_1ED96B118, (uint64_t (*)(uint64_t))type metadata accessor for ControlsPowerlogProvider, (uint64_t)&unk_1D26D60CC);
  v7[0] = a1;
  a2[7] = MEMORY[0x1E0DEE9D8];
  type metadata accessor for UnfairLock();
  v4 = swift_allocObject();
  v5 = (_DWORD *)swift_slowAlloc();
  *v5 = 0;
  *(_QWORD *)(v4 + 16) = v5;
  a2[8] = v4;
  a2[9] = 0;
  sub_1D2538510((uint64_t)v7, (uint64_t)(a2 + 2));
  sub_1D263E464((uint64_t)&unk_1E93DAC70, (uint64_t)sub_1D263ED50, (uint64_t)&block_descriptor_11);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v7);
  return a2;
}

uint64_t sub_1D263EC18()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for BasePowerlogUpdateService()
{
  JUMPOUT(0x1D823A430);
}

uint64_t method lookup function for BasePowerlogUpdateService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of BasePowerlogUpdateService.timelineUpdated(for:hostIdentity:cost:reason:remainingBudget:executionTime:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 256))();
}

uint64_t dispatch thunk of BasePowerlogUpdateService.flush()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 264))();
}

uint64_t type metadata accessor for PowerlogWidgetUpdateService(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED963BD8);
}

uint64_t method lookup function for PowerlogWidgetUpdateService()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of PowerlogWidgetUpdateService.__allocating_init(owner:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 280))();
}

uint64_t type metadata accessor for PowerlogControlsUpdateService(uint64_t a1)
{
  return sub_1D2534164(a1, (uint64_t *)&unk_1ED96B130);
}

uint64_t sub_1D263ECEC()
{
  return swift_initClassMetadata2();
}

uint64_t method lookup function for PowerlogControlsUpdateService()
{
  return swift_lookUpClassMethod();
}

uint64_t sub_1D263ED2C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D263ED50()
{
  return sub_1D263E5D4();
}

id ControlEntryKey.control.getter()
{
  id *v0;

  return *v0;
}

uint64_t ControlEntryKey.host.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v3;

  v3 = v1 + *(int *)(type metadata accessor for ControlEntryKey() + 20);
  return sub_1D25A0AA4(v3, a1);
}

uint64_t type metadata accessor for ControlEntryKey()
{
  uint64_t result;

  result = qword_1ED96FA70;
  if (!qword_1ED96FA70)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t ControlEntryKey.init(control:host:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v4;

  *a3 = a1;
  v4 = (uint64_t)a3 + *(int *)(type metadata accessor for ControlEntryKey() + 20);
  return sub_1D25A0BB8(a2, v4);
}

id ControlEntryKey.extensionIdentity.getter()
{
  id *v0;

  return objc_msgSend(*v0, sel_extensionIdentity);
}

uint64_t ControlEntryKey.description.getter()
{
  id *v0;
  uint64_t v1;
  uint64_t v2;
  char *v3;
  id v4;
  uint64_t v5;
  unint64_t v6;
  unint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v12;
  unint64_t v13;

  v1 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v1);
  v3 = (char *)&v12 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  v4 = objc_msgSend(*v0, sel_description);
  v5 = sub_1D26CD938();
  v7 = v6;

  v12 = 544108320;
  v13 = 0xE400000000000000;
  v8 = type metadata accessor for ControlEntryKey();
  sub_1D25A0AA4((uint64_t)v0 + *(int *)(v8 + 20), (uint64_t)v3);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v3, 1, v9) == 1)
  {
    sub_1D253703C((uint64_t)v3, &qword_1ED96FD58);
  }
  else
  {
    sub_1D26CBD0C();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v3, v9);
  }
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v12 = v5;
  v13 = v7;
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t ControlEntryKey.hash(into:)()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = *v0;
  sub_1D26CDED8();

  v10 = type metadata accessor for ControlEntryKey();
  sub_1D25A0AA4((uint64_t)v1 + *(int *)(v10 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
    return sub_1D26CE478();
  (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
  sub_1D26CE478();
  sub_1D25A27E4(&qword_1ED963340, MEMORY[0x1E0D0FB50]);
  sub_1D26CD8D8();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t ControlEntryKey.hashValue.getter()
{
  id *v0;
  id *v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  id v9;
  uint64_t v10;
  uint64_t v12;

  v1 = v0;
  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v6);
  v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CE460();
  v9 = *v0;
  sub_1D26CDED8();

  v10 = type metadata accessor for ControlEntryKey();
  sub_1D25A0AA4((uint64_t)v1 + *(int *)(v10 + 20), (uint64_t)v8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1D26CE478();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
    sub_1D26CE478();
    sub_1D25A27E4(&qword_1ED963340, MEMORY[0x1E0D0FB50]);
    sub_1D26CD8D8();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  }
  return sub_1D26CE49C();
}

uint64_t sub_1D263F2B8(uint64_t a1, uint64_t a2)
{
  id *v2;
  id *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  id v12;
  uint64_t v14;

  v4 = v2;
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v6 = *(_QWORD *)(v5 - 8);
  MEMORY[0x1E0C80A78](v5);
  v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1D26CE460();
  v12 = *v2;
  sub_1D26CDED8();

  sub_1D25A0AA4((uint64_t)v4 + *(int *)(a2 + 20), (uint64_t)v11);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v11, 1, v5) == 1)
  {
    sub_1D26CE478();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v11, v5);
    sub_1D26CE478();
    sub_1D25A27E4(&qword_1ED963340, MEMORY[0x1E0D0FB50]);
    sub_1D26CD8D8();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  }
  return sub_1D26CE49C();
}

BOOL _s9ChronoKit15ControlEntryKeyV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  uint64_t v17;
  char *v18;
  uint64_t v19;
  uint64_t v20;
  unsigned int (*v21)(uint64_t, uint64_t, uint64_t);
  uint64_t v22;
  uint64_t v23;
  char *v24;
  char v25;
  void (*v26)(char *, uint64_t);
  uint64_t v28;
  char *v29;
  char *v30;
  uint64_t v31;

  v31 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v4 = *(_QWORD *)(v31 - 8);
  MEMORY[0x1E0C80A78](v31);
  v6 = (char *)&v28 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE80);
  MEMORY[0x1E0C80A78](v7);
  v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
  v11 = MEMORY[0x1E0C80A78](v10);
  v13 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v14 = MEMORY[0x1E0C80A78](v11);
  v16 = (char *)&v28 - v15;
  MEMORY[0x1E0C80A78](v14);
  v18 = (char *)&v28 - v17;
  sub_1D257C290();
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  v29 = v6;
  v30 = v13;
  v19 = type metadata accessor for ControlEntryKey();
  sub_1D25A0AA4(a1 + *(int *)(v19 + 20), (uint64_t)v18);
  sub_1D25A0AA4(a2 + *(int *)(v19 + 20), (uint64_t)v16);
  v20 = (uint64_t)&v9[*(int *)(v7 + 48)];
  sub_1D25A0AA4((uint64_t)v18, (uint64_t)v9);
  sub_1D25A0AA4((uint64_t)v16, v20);
  v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48);
  v22 = v31;
  if (v21((uint64_t)v9, 1, v31) == 1)
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED96FD58);
    sub_1D253703C((uint64_t)v18, &qword_1ED96FD58);
    if (v21(v20, 1, v22) == 1)
    {
      sub_1D253703C((uint64_t)v9, &qword_1ED96FD58);
      return 1;
    }
    goto LABEL_7;
  }
  v23 = (uint64_t)v30;
  sub_1D25A0AA4((uint64_t)v9, (uint64_t)v30);
  if (v21(v20, 1, v22) == 1)
  {
    sub_1D253703C((uint64_t)v16, &qword_1ED96FD58);
    sub_1D253703C((uint64_t)v18, &qword_1ED96FD58);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v23, v22);
LABEL_7:
    sub_1D253703C((uint64_t)v9, &qword_1ED96FE80);
    return 0;
  }
  v24 = v29;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 32))(v29, v20, v22);
  sub_1D25A27E4(&qword_1ED963348, MEMORY[0x1E0D0FB58]);
  v25 = sub_1D26CD908();
  v26 = *(void (**)(char *, uint64_t))(v4 + 8);
  v26(v24, v22);
  sub_1D253703C((uint64_t)v16, &qword_1ED96FD58);
  sub_1D253703C((uint64_t)v18, &qword_1ED96FD58);
  v26((char *)v23, v22);
  sub_1D253703C((uint64_t)v9, &qword_1ED96FD58);
  return (v25 & 1) != 0;
}

uint64_t sub_1D263F748(uint64_t a1)
{
  uint64_t result;

  result = sub_1D263F7A0(&qword_1ED96FA68, (uint64_t)&protocol conformance descriptor for ControlEntryKey);
  *(_QWORD *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1D263F77C()
{
  return sub_1D263F7A0(&qword_1ED96FA60, (uint64_t)&protocol conformance descriptor for ControlEntryKey);
}

uint64_t sub_1D263F7A0(unint64_t *a1, uint64_t a2)
{
  uint64_t result;
  uint64_t v5;

  result = *a1;
  if (!result)
  {
    v5 = type metadata accessor for ControlEntryKey();
    result = MEMORY[0x1D823A4E4](a2, v5);
    atomic_store(result, a1);
  }
  return result;
}

void **initializeBufferWithCopyOfBuffer for ControlEntryKey(void **a1, void **a2, uint64_t a3)
{
  int v4;
  char *v5;
  uint64_t v6;
  char *v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;

  v4 = *(_DWORD *)(*(_QWORD *)(a3 - 8) + 80);
  v5 = (char *)*a2;
  *a1 = *a2;
  if ((v4 & 0x20000) != 0)
  {
    a1 = (void **)&v5[(v4 + 16) & ~(unint64_t)v4];
    swift_retain();
  }
  else
  {
    v6 = *(int *)(a3 + 20);
    v7 = (char *)a1 + v6;
    v8 = (char *)a2 + v6;
    v9 = v5;
    v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
    v11 = *(_QWORD *)(v10 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v8, 1, v10))
    {
      v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
      memcpy(v7, v8, *(_QWORD *)(*(_QWORD *)(v12 - 8) + 64));
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v7, v8, v10);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v7, 0, 1, v10);
    }
  }
  return a1;
}

uint64_t destroy for ControlEntryKey(id *a1, uint64_t a2)
{
  char *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t result;

  v4 = (char *)a1 + *(int *)(a2 + 20);
  v5 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v6 = *(_QWORD *)(v5 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  if (!(_DWORD)result)
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v4, v5);
  return result;
}

void **initializeWithCopy for ControlEntryKey(void **a1, void **a2, uint64_t a3)
{
  void *v4;
  uint64_t v5;
  char *v6;
  char *v7;
  id v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v4 = *a2;
  *a1 = *a2;
  v5 = *(int *)(a3 + 20);
  v6 = (char *)a1 + v5;
  v7 = (char *)a2 + v5;
  v8 = v4;
  v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v10 = *(_QWORD *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9))
  {
    v11 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v6, v7, *(_QWORD *)(*(_QWORD *)(v11 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v6, v7, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v6, 0, 1, v9);
  }
  return a1;
}

void **assignWithCopy for ControlEntryKey(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  void *v7;
  id v8;
  uint64_t v9;
  char *v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t (*v14)(char *, uint64_t, uint64_t);
  int v15;
  int v16;
  uint64_t v17;

  v6 = *a2;
  v7 = *a1;
  *a1 = *a2;
  v8 = v6;

  v9 = *(int *)(a3 + 20);
  v10 = (char *)a1 + v9;
  v11 = (char *)a2 + v9;
  v12 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v13 = *(_QWORD *)(v12 - 8);
  v14 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  v15 = v14(v10, 1, v12);
  v16 = v14(v11, 1, v12);
  if (!v15)
  {
    if (!v16)
    {
      (*(void (**)(char *, char *, uint64_t))(v13 + 24))(v10, v11, v12);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v13 + 8))(v10, v12);
    goto LABEL_6;
  }
  if (v16)
  {
LABEL_6:
    v17 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v10, v11, *(_QWORD *)(*(_QWORD *)(v17 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 16))(v10, v11, v12);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v13 + 56))(v10, 0, 1, v12);
  return a1;
}

_QWORD *initializeWithTake for ControlEntryKey(_QWORD *a1, _QWORD *a2, uint64_t a3)
{
  uint64_t v4;
  char *v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  *a1 = *a2;
  v4 = *(int *)(a3 + 20);
  v5 = (char *)a1 + v4;
  v6 = (char *)a2 + v4;
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v8 = *(_QWORD *)(v7 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7))
  {
    v9 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v5, v6, *(_QWORD *)(*(_QWORD *)(v9 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v5, v6, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v5, 0, 1, v7);
  }
  return a1;
}

void **assignWithTake for ControlEntryKey(void **a1, void **a2, uint64_t a3)
{
  void *v6;
  uint64_t v7;
  char *v8;
  char *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t (*v12)(char *, uint64_t, uint64_t);
  int v13;
  int v14;
  uint64_t v15;

  v6 = *a1;
  *a1 = *a2;

  v7 = *(int *)(a3 + 20);
  v8 = (char *)a1 + v7;
  v9 = (char *)a2 + v7;
  v10 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD28);
  v11 = *(_QWORD *)(v10 - 8);
  v12 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  v13 = v12(v8, 1, v10);
  v14 = v12(v9, 1, v10);
  if (!v13)
  {
    if (!v14)
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 40))(v8, v9, v10);
      return a1;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v8, v10);
    goto LABEL_6;
  }
  if (v14)
  {
LABEL_6:
    v15 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    memcpy(v8, v9, *(_QWORD *)(*(_QWORD *)(v15 - 8) + 64));
    return a1;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v8, v9, v10);
  (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v11 + 56))(v8, 0, 1, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for ControlEntryKey()
{
  return swift_getEnumTagSinglePayloadGeneric();
}

uint64_t sub_1D263FD14(char *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4;
  uint64_t v8;

  if ((_DWORD)a2 == 0x7FFFFFFF)
  {
    v4 = *(_QWORD *)a1;
    if (*(_QWORD *)a1 >= 0xFFFFFFFFuLL)
      LODWORD(v4) = -1;
    return (v4 + 1);
  }
  else
  {
    v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    return (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(_QWORD *)(v8 - 8) + 48))(&a1[*(int *)(a3 + 20)], a2, v8);
  }
}

uint64_t storeEnumTagSinglePayload for ControlEntryKey()
{
  return swift_storeEnumTagSinglePayloadGeneric();
}

char *sub_1D263FDA0(char *result, uint64_t a2, int a3, uint64_t a4)
{
  char *v5;
  uint64_t v7;

  v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(_QWORD *)result = (a2 - 1);
  }
  else
  {
    v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FD58);
    return (char *)(*(uint64_t (**)(char *, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 - 8) + 56))(&v5[*(int *)(a4 + 20)], a2, a2, v7);
  }
  return result;
}

void sub_1D263FE18()
{
  unint64_t v0;

  sub_1D25A25A0();
  if (v0 <= 0x3F)
    swift_initStructMetadata();
}

uint64_t sub_1D263FE90()
{
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return 118;
}

BOOL sub_1D263FF44(unsigned __int16 *a1, unsigned __int16 *a2)
{
  unsigned int v2;
  unsigned int v3;
  BOOL v4;
  _BOOL4 v5;

  v2 = *a1;
  v3 = *a2;
  v4 = v2 == v3;
  v5 = v2 < v3;
  if (v4)
    return a1[1] < a2[1];
  else
    return v5;
}

uint64_t sub_1D263FF6C()
{
  return sub_1D263FE90();
}

void static BugCapture.reportBug(type:subType:name:value:completion:)(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, unint64_t a8, void (*a9)(void), uint64_t a10)
{
  uint64_t v17;
  char *v18;
  id v19;
  void *v20;
  uint64_t v21;
  unint64_t v22;
  void *v23;
  void *v24;
  id v25;
  id v26;
  uint64_t inited;
  uint64_t v28;
  double v29;
  double v30;
  id v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  uint64_t v35;
  unint64_t v36;
  unint64_t v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  NSObject *v41;
  os_log_type_t v42;
  _BOOL4 v43;
  uint64_t v44;
  uint64_t v45;
  uint64_t v46;
  id v47;
  void *v48;
  void *v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  void *v53;
  void (*v54)(void);
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  unint64_t v58;
  unint64_t v59;
  uint64_t v60;
  uint64_t v61;
  uint64_t v62;
  id v63;
  uint64_t v64;
  uint64_t v65;
  unint64_t v66;
  id v67;
  uint64_t v68;
  uint64_t aBlock[6];

  v66 = a6;
  v65 = sub_1D26CB9DC();
  v64 = *(_QWORD *)(v65 - 8);
  MEMORY[0x1E0C80A78](v65);
  v18 = (char *)&v54 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if ((sub_1D25C6338() & 1) != 0)
  {
    if (a9)
      a9();
  }
  else
  {
    v61 = a5;
    v62 = a7;
    v59 = a8;
    v60 = a10;
    v19 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB3898]), sel_init);
    v67 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0DAFF28]), sel_init);
    v20 = (void *)sub_1D26CD914();
    v56 = a1;
    v57 = a2;
    v21 = sub_1D26CD914();
    v22 = a4;
    v23 = (void *)v21;
    v55 = a3;
    v58 = v22;
    v24 = (void *)sub_1D26CD914();
    v63 = v19;
    v25 = objc_msgSend(v19, sel_processName);
    if (!v25)
    {
      sub_1D26CD938();
      v25 = (id)sub_1D26CD914();
      swift_bridgeObjectRelease();
    }
    v26 = objc_msgSend(v67, sel_signatureWithDomain_type_subType_detectedProcess_triggerThresholdValues_, v20, v23, v24, v25, 0);

    if (v26)
    {
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED962190);
      inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1D26D5640;
      *(_QWORD *)(inited + 32) = sub_1D26CD938();
      *(_QWORD *)(inited + 40) = v28;
      sub_1D26CB9D0();
      sub_1D26CB994();
      v30 = v29;
      (*(void (**)(char *, uint64_t))(v64 + 8))(v18, v65);
      v31 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0CB37E8]), sel_initWithDouble_, v30);
      *(_QWORD *)(inited + 72) = sub_1D2640D78();
      *(_QWORD *)(inited + 48) = v31;
      *(_QWORD *)(inited + 80) = sub_1D26CD938();
      *(_QWORD *)(inited + 88) = v32;
      v33 = MEMORY[0x1E0DEA968];
      *(_QWORD *)(inited + 120) = MEMORY[0x1E0DEA968];
      v34 = v66;
      *(_QWORD *)(inited + 96) = v61;
      *(_QWORD *)(inited + 104) = v34;
      *(_QWORD *)(inited + 128) = sub_1D26CD938();
      *(_QWORD *)(inited + 136) = v35;
      *(_QWORD *)(inited + 168) = v33;
      v36 = v59;
      *(_QWORD *)(inited + 144) = v62;
      *(_QWORD *)(inited + 152) = v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v37 = sub_1D253DFC0(inited);
      if (qword_1ED962320 != -1)
        swift_once();
      v38 = sub_1D26CC09C();
      __swift_project_value_buffer(v38, (uint64_t)qword_1ED977D58);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      v39 = v57;
      swift_bridgeObjectRetain_n();
      v40 = v58;
      swift_bridgeObjectRetain_n();
      v41 = sub_1D26CC084();
      v42 = sub_1D26CDD04();
      LODWORD(v65) = v42;
      v43 = os_log_type_enabled(v41, v42);
      v44 = v56;
      v54 = a9;
      if (v43)
      {
        v45 = swift_slowAlloc();
        v64 = swift_slowAlloc();
        aBlock[0] = v64;
        *(_DWORD *)v45 = 136315906;
        swift_bridgeObjectRetain();
        v68 = sub_1D2537880(v44, v39, aBlock);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 12) = 2080;
        swift_bridgeObjectRetain();
        v68 = sub_1D2537880(v55, v40, aBlock);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 22) = 2080;
        swift_bridgeObjectRetain();
        v68 = sub_1D2537880(v61, v34, aBlock);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        *(_WORD *)(v45 + 32) = 2080;
        swift_bridgeObjectRetain();
        v68 = sub_1D2537880(v62, v36, aBlock);
        sub_1D26CDF50();
        swift_bridgeObjectRelease_n();
        _os_log_impl(&dword_1D2531000, v41, (os_log_type_t)v65, "Capturing bug report with type %s; subtype: %s; name: %s; value: %s",
          (uint8_t *)v45,
          0x2Au);
        v46 = v64;
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v46, -1, -1);
        MEMORY[0x1D823A5E0](v45, -1, -1);

      }
      else
      {

        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
      }
      aBlock[0] = 0;
      v47 = v26;
      sub_1D26CD7E8();
      if (aBlock[0])
      {

        v48 = (void *)sub_1D26CD7DC();
        swift_bridgeObjectRelease();
        sub_1D25D5944(v37);
        swift_bridgeObjectRelease();
        v49 = (void *)sub_1D26CD7DC();
        swift_bridgeObjectRelease();
        v50 = swift_allocObject();
        v51 = (uint64_t)v54;
        v52 = v60;
        *(_QWORD *)(v50 + 16) = v54;
        *(_QWORD *)(v50 + 24) = v52;
        aBlock[4] = (uint64_t)sub_1D2640DE0;
        aBlock[5] = v50;
        aBlock[0] = MEMORY[0x1E0C809B0];
        aBlock[1] = 1107296256;
        aBlock[2] = (uint64_t)sub_1D2640CE8;
        aBlock[3] = (uint64_t)&block_descriptor_12;
        v53 = _Block_copy(aBlock);
        sub_1D2549DF0(v51);
        swift_release();
        objc_msgSend(v67, sel_snapshotWithSignature_duration_event_payload_reply_, v48, v49, 0, v53, 120.0);

        _Block_release(v53);
      }
      else
      {
        __break(1u);
      }
    }
    else
    {
      if (a9)
        a9();

    }
  }
}

void sub_1D2640768(uint64_t a1, void (*a2)(void))
{
  unint64_t v4;
  char v5;
  void *v6;
  uint64_t v7;
  NSObject *v8;
  os_log_type_t v9;
  uint8_t *v10;
  const char *v11;
  uint64_t v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  const char *v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  char v20;
  uint64_t v21;
  os_log_type_t v22;
  uint8_t *v23;
  uint64_t v24;
  uint8_t *v25;
  uint64_t v26;
  id v27;
  id v28;
  unint64_t v29;
  uint64_t v30[5];
  __int128 v31;
  __int128 v32;

  if (!a1)
  {
    if (qword_1ED962320 != -1)
      swift_once();
    v12 = sub_1D26CC09C();
    __swift_project_value_buffer(v12, (uint64_t)qword_1ED977D58);
    v13 = sub_1D26CC084();
    v14 = sub_1D26CDCEC();
    if (!os_log_type_enabled(v13, v14))
      goto LABEL_23;
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = "Failed to receive response";
    goto LABEL_22;
  }
  v27 = (id)sub_1D26CD938();
  sub_1D26CE064();
  if (*(_QWORD *)(a1 + 16) && (v4 = sub_1D25894D4((uint64_t)v30), (v5 & 1) != 0))
  {
    sub_1D2537950(*(_QWORD *)(a1 + 56) + 32 * v4, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  sub_1D258AEF0((uint64_t)v30);
  if (*((_QWORD *)&v32 + 1))
  {
    sub_1D2640D78();
    if ((swift_dynamicCast() & 1) != 0)
    {
      v6 = v27;
      if (objc_msgSend(v27, sel_BOOLValue))
      {
        if (qword_1ED962320 != -1)
          swift_once();
        v7 = sub_1D26CC09C();
        __swift_project_value_buffer(v7, (uint64_t)qword_1ED977D58);
        v8 = sub_1D26CC084();
        v9 = sub_1D26CDCD4();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v10 = 0;
          v11 = "Captured bug report successfully";
LABEL_40:
          _os_log_impl(&dword_1D2531000, v8, v9, v11, v10, 2u);
          v25 = v10;
LABEL_41:
          MEMORY[0x1D823A5E0](v25, -1, -1);
        }
      }
      else
      {
        v28 = (id)sub_1D26CD938();
        v29 = v18;
        sub_1D26CE064();
        if (*(_QWORD *)(a1 + 16) && (v19 = sub_1D25894D4((uint64_t)v30), (v20 & 1) != 0))
        {
          sub_1D2537950(*(_QWORD *)(a1 + 56) + 32 * v19, (uint64_t)&v31);
        }
        else
        {
          v31 = 0u;
          v32 = 0u;
        }
        sub_1D258AEF0((uint64_t)v30);
        if (*((_QWORD *)&v32 + 1))
        {
          if ((swift_dynamicCast() & 1) != 0)
          {
            if (qword_1ED962320 != -1)
              swift_once();
            v21 = sub_1D26CC09C();
            __swift_project_value_buffer(v21, (uint64_t)qword_1ED977D58);
            swift_bridgeObjectRetain();
            v8 = sub_1D26CC084();
            v22 = sub_1D26CDCD4();
            if (!os_log_type_enabled(v8, v22))
            {

              swift_bridgeObjectRelease_n();
              if (!a2)
                goto LABEL_44;
              goto LABEL_43;
            }
            v23 = (uint8_t *)swift_slowAlloc();
            v24 = swift_slowAlloc();
            v30[0] = v24;
            *(_DWORD *)v23 = 136315138;
            swift_bridgeObjectRetain();
            *(_QWORD *)&v31 = sub_1D2537880((uint64_t)v28, v29, v30);
            sub_1D26CDF50();
            swift_bridgeObjectRelease_n();
            _os_log_impl(&dword_1D2531000, v8, v22, "Failed to capture bug for reason: %s", v23, 0xCu);
            swift_arrayDestroy();
            MEMORY[0x1D823A5E0](v24, -1, -1);
            v25 = v23;
            goto LABEL_41;
          }
        }
        else
        {
          sub_1D2536700((uint64_t)&v31);
        }
        if (qword_1ED962320 != -1)
          swift_once();
        v26 = sub_1D26CC09C();
        __swift_project_value_buffer(v26, (uint64_t)qword_1ED977D58);
        v8 = sub_1D26CC084();
        v9 = sub_1D26CDCD4();
        if (os_log_type_enabled(v8, v9))
        {
          v10 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)v10 = 0;
          v11 = "Failed to capture bug for unknown reason";
          goto LABEL_40;
        }
      }

      if (!a2)
      {
LABEL_44:

        return;
      }
LABEL_43:
      a2();
      goto LABEL_44;
    }
  }
  else
  {
    sub_1D2536700((uint64_t)&v31);
  }
  if (qword_1ED962320 != -1)
    swift_once();
  v17 = sub_1D26CC09C();
  __swift_project_value_buffer(v17, (uint64_t)qword_1ED977D58);
  v13 = sub_1D26CC084();
  v14 = sub_1D26CDCEC();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v15 = 0;
    v16 = "Received malformed response";
LABEL_22:
    _os_log_impl(&dword_1D2531000, v13, v14, v16, v15, 2u);
    MEMORY[0x1D823A5E0](v15, -1, -1);
  }
LABEL_23:

  if (a2)
    a2();
}

uint64_t sub_1D2640CE8(uint64_t a1, uint64_t a2)
{
  void (*v2)(uint64_t);
  uint64_t v3;

  v2 = *(void (**)(uint64_t))(a1 + 32);
  if (a2)
    v3 = sub_1D26CD7F4();
  else
    v3 = 0;
  swift_retain();
  v2(v3);
  swift_release();
  return swift_bridgeObjectRelease();
}

uint64_t BugCapture.deinit()
{
  uint64_t v0;

  return v0;
}

uint64_t BugCapture.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_1D2640D78()
{
  unint64_t result;

  result = qword_1ED96C070;
  if (!qword_1ED96C070)
  {
    objc_opt_self();
    result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_1ED96C070);
  }
  return result;
}

uint64_t sub_1D2640DB4()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 16))
    swift_release();
  return swift_deallocObject();
}

void sub_1D2640DE0(uint64_t a1)
{
  uint64_t v1;

  sub_1D2640768(a1, *(void (**)(void))(v1 + 16));
}

uint64_t type metadata accessor for BugCapture()
{
  return objc_opt_self();
}

uint64_t method lookup function for BugCapture()
{
  return swift_lookUpClassMethod();
}

id PowerlogSuggestionEntry.widget.getter()
{
  id *v0;

  return *v0;
}

uint64_t PowerlogSuggestionEntry.suggestionIdentifier.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PowerlogSuggestionEntry.init(widget:suggestionIdentifier:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, _QWORD *a4@<X8>)
{
  *a4 = result;
  a4[1] = a2;
  a4[2] = a3;
  return result;
}

uint64_t PowerlogSuggestionEntry.description.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE0A0();
  sub_1D26CDA04();
  v2 = objc_msgSend(v1, sel_description);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  return 0;
}

uint64_t PowerlogSuggestionEntry.hash(into:)()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t static PowerlogSuggestionEntry.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1D257C290();
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_1D26CE3D0();
}

uint64_t PowerlogSuggestionEntry.hashValue.getter()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE460();
  v2 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D26410D0()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE460();
  v2 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

uint64_t sub_1D2641148()
{
  id *v0;
  id v1;

  v1 = *v0;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26411A4()
{
  void **v0;
  void *v1;
  id v2;

  v1 = *v0;
  sub_1D26CE460();
  v2 = v1;
  sub_1D26CDED8();

  swift_bridgeObjectRetain();
  sub_1D26CD9D4();
  swift_bridgeObjectRelease();
  return sub_1D26CE49C();
}

unint64_t sub_1D264121C()
{
  unint64_t result;

  result = qword_1EFC832C0;
  if (!qword_1EFC832C0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogSuggestionEntry, &type metadata for PowerlogSuggestionEntry);
    atomic_store(result, (unint64_t *)&qword_1EFC832C0);
  }
  return result;
}

uint64_t sub_1D2641260(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;

  v2 = *(_QWORD *)(a1 + 8);
  v3 = *(_QWORD *)(a1 + 16);
  v4 = *(_QWORD *)(a2 + 8);
  v5 = *(_QWORD *)(a2 + 16);
  sub_1D257C290();
  if ((sub_1D26CDECC() & 1) == 0)
    return 0;
  if (v2 == v4 && v3 == v5)
    return 1;
  else
    return sub_1D26CE3D0();
}

_QWORD *sub_1D2641300(_QWORD *a1, uint64_t a2)
{
  void *v3;
  uint64_t v4;
  id v5;

  v3 = *(void **)a2;
  v4 = *(_QWORD *)(a2 + 8);
  *a1 = *(_QWORD *)a2;
  a1[1] = v4;
  a1[2] = *(_QWORD *)(a2 + 16);
  v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PowerlogSuggestionEntry(uint64_t a1, uint64_t a2)
{
  void *v4;
  void *v5;
  id v6;

  v4 = *(void **)a2;
  v5 = *(void **)a1;
  *(_QWORD *)a1 = *(_QWORD *)a2;
  v6 = v4;

  *(_QWORD *)(a1 + 8) = *(_QWORD *)(a2 + 8);
  *(_QWORD *)(a1 + 16) = *(_QWORD *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for PowerlogSuggestionEntry(uint64_t a1, _QWORD *a2)
{
  void *v4;
  uint64_t v5;

  v4 = *(void **)a1;
  *(_QWORD *)a1 = *a2;

  v5 = a2[2];
  *(_QWORD *)(a1 + 8) = a2[1];
  *(_QWORD *)(a1 + 16) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PowerlogSuggestionEntry(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PowerlogSuggestionEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for PowerlogSuggestionEntry()
{
  return &type metadata for PowerlogSuggestionEntry;
}

uint64_t dispatch thunk of PowerlogSuggestionServicing.noteWidgetSuggestionRequested(entry:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t sub_1D2641480(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v3;
  char isUniquelyReferenced_nonNull_native;
  uint64_t v9;

  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2541E98(a1, a2, a3);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v9 = *(_QWORD *)(v3 + 16);
  *(_QWORD *)(v3 + 16) = 0x8000000000000000;
  sub_1D266DF90(a1, a2, a3, 0x676E69646E696240, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  *(_QWORD *)(v3 + 16) = v9;
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2641594@<X0>(uint64_t a1@<X0>, _QWORD *a2@<X8>)
{
  unint64_t v4;
  uint64_t result;

  v4 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  result = MEMORY[0x1D8239188](a1);
  *a2 = 0;
  a2[1] = 0xE000000000000000;
  a2[2] = v4;
  return result;
}

uint64_t sub_1D26415F4()
{
  return sub_1D26CDA04();
}

uint64_t *sub_1D2641600@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;

  v2 = *result;
  v3 = result[1];
  *a2 = result[2];
  a2[1] = v2;
  a2[2] = v3;
  return result;
}

unint64_t sub_1D2641618@<X0>(unint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t result;

  v3 = *a1;
  v4 = a1[1];
  result = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  *a2 = result;
  a2[1] = v3;
  a2[2] = v4;
  return result;
}

uint64_t sub_1D2641654(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  char *v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  char v12;
  char v13;
  uint64_t v15;

  MEMORY[0x1E0C80A78](a1);
  v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v7);
  v9 = sub_1D25C77E4((uint64_t)v7, a3, a4);
  v11 = v10;
  v13 = v12;
  sub_1D2641480(v9, v10, v12);
  return sub_1D253FBE8(v9, v11, v13);
}

uint64_t destroy for SQLStatement()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9ChronoKit12SQLStatementVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SQLStatement(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_QWORD *assignWithTake for SQLStatement(_QWORD *a1, _QWORD *a2)
{
  uint64_t v4;

  *a1 = *a2;
  swift_bridgeObjectRelease();
  v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for SQLStatement()
{
  return &type metadata for SQLStatement;
}

uint64_t sub_1D264181C()
{
  return MEMORY[0x1E0DEA9F8];
}

unint64_t sub_1D264182C()
{
  unint64_t result;

  result = qword_1EFC832C8;
  if (!qword_1EFC832C8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D8AF8, &type metadata for SQLStatement);
    atomic_store(result, (unint64_t *)&qword_1EFC832C8);
  }
  return result;
}

uint64_t sub_1D2641870()
{
  return MEMORY[0x1E0DEAA00];
}

unint64_t sub_1D2641880()
{
  unint64_t result;

  result = qword_1EFC832D0;
  if (!qword_1EFC832D0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D8B30, &type metadata for SQLStatement);
    atomic_store(result, (unint64_t *)&qword_1EFC832D0);
  }
  return result;
}

uint64_t sub_1D26418C4()
{
  return MEMORY[0x1E0DEA9F0];
}

unint64_t sub_1D26418D4()
{
  unint64_t result;

  result = qword_1EFC832D8;
  if (!qword_1EFC832D8)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D8B70, &type metadata for SQLStatement);
    atomic_store(result, (unint64_t *)&qword_1EFC832D8);
  }
  return result;
}

unint64_t sub_1D264191C()
{
  unint64_t result;

  result = qword_1EFC832E0;
  if (!qword_1EFC832E0)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D8BF0, &type metadata for SQLStatement.StringInterpolation);
    atomic_store(result, (unint64_t *)&qword_1EFC832E0);
  }
  return result;
}

uint64_t destroy for SQLStatement.StringInterpolation()
{
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

_QWORD *_s9ChronoKit12SQLStatementV19StringInterpolationVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *assignWithCopy for SQLStatement.StringInterpolation(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for SQLStatement.StringInterpolation(uint64_t a1, uint64_t a2)
{
  *(_QWORD *)a1 = *(_QWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for SQLStatement.StringInterpolation(uint64_t a1, int a2)
{
  unint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *(_BYTE *)(a1 + 24))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *(_QWORD *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SQLStatement.StringInterpolation(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)(result + 8) = 0;
    *(_QWORD *)(result + 16) = 0;
    *(_QWORD *)result = a2 ^ 0x80000000;
    if (a3 < 0)
      *(_BYTE *)(result + 24) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)(result + 8) = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 24) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLStatement.StringInterpolation()
{
  return &type metadata for SQLStatement.StringInterpolation;
}

uint64_t sub_1D2641B08()
{
  uint64_t v0;

  v0 = sub_1D26CC09C();
  __swift_allocate_value_buffer(v0, qword_1ED9780D8);
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED9780D8);
  return sub_1D26CC090();
}

uint64_t _WidgetEntryDescriptorChangeObserver.__allocating_init(label:descriptorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  _WidgetEntryDescriptorChangeObserver.init(label:descriptorProvider:)(a1, a2, a3);
  return v6;
}

_QWORD *_WidgetEntryDescriptorChangeObserver.init(label:descriptorProvider:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  _QWORD *v4;
  uint64_t v8;
  _DWORD *v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  _QWORD v14[3];
  uint64_t v15;
  uint64_t v16;

  v4 = v3;
  v4[9] = 0;
  type metadata accessor for UnfairLock();
  v8 = swift_allocObject();
  v9 = (_DWORD *)swift_slowAlloc();
  *v9 = 0;
  *(_QWORD *)(v8 + 16) = v9;
  v4[10] = v8;
  sub_1D2538510(a3, (uint64_t)(v4 + 4));
  v4[11] = objc_msgSend((id)objc_opt_self(), sel_weakObjectsHashTable);
  v4[2] = a1;
  v4[3] = a2;
  sub_1D2538510((uint64_t)(v4 + 4), (uint64_t)v14);
  v10 = v15;
  v11 = v16;
  __swift_project_boxed_opaque_existential_0(v14, v15);
  (*(void (**)(uint64_t, uint64_t))(v11 + 16))(v10, v11);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C858);
  sub_1D2536488(&qword_1ED96C850, &qword_1ED96C858, MEMORY[0x1E0C95D90]);
  v12 = sub_1D26CC288();
  swift_release();
  swift_release();
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v14);
  v4[9] = v12;
  swift_release();
  __swift_destroy_boxed_opaque_existential_1(a3);
  return v4;
}

uint64_t sub_1D2641D5C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t _WidgetEntryDescriptorChangeObserver.deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 72))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  *(_QWORD *)(v0 + 72) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return v0;
}

uint64_t _WidgetEntryDescriptorChangeObserver.__deallocating_deinit()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 72))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  *(_QWORD *)(v0 + 72) = 0;
  swift_release();
  swift_bridgeObjectRelease();
  __swift_destroy_boxed_opaque_existential_1(v0 + 32);
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1D2641E78()
{
  uint64_t v0;

  if (*(_QWORD *)(v0 + 72))
  {
    swift_retain();
    sub_1D26CC108();
    swift_release();
  }
  *(_QWORD *)(v0 + 72) = 0;
  return swift_release();
}

void sub_1D2641EC0(char *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  os_unfair_lock_s *v5;
  void *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  id v11;
  void *v12;
  _QWORD v13[3];
  uint64_t v14;
  uint64_t v15;

  v2 = v1;
  v4 = *(_QWORD *)(v1 + 80);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  sub_1D2642050(v2, a1, (SEL *)&selRef_addObject_, "[%{public}s] Registering for descriptor changes for widget: %s");
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  v6 = *(void **)&a1[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key];
  sub_1D2538510(v2 + 32, (uint64_t)v13);
  v7 = v14;
  v8 = v15;
  __swift_project_boxed_opaque_existential_0(v13, v14);
  v9 = (*(uint64_t (**)(uint64_t, uint64_t))(v8 + 24))(v7, v8);
  if (v9)
  {
    v10 = *(_QWORD *)(v9 + 16);
    v11 = v6;
    v12 = (void *)WidgetDescriptorPredicate.evaluate(with:)(v10);

    swift_release();
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
    if (v12)
    {
      sub_1D2642D70(v12, a1);

    }
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v13);
  }
}

uint64_t sub_1D2641FE0(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  os_unfair_lock_s *v4;

  v3 = *(_QWORD *)(v1 + 80);
  v4 = *(os_unfair_lock_s **)(v3 + 16);
  swift_retain();
  os_unfair_lock_lock(v4);
  sub_1D2642050(v1, a1, (SEL *)&selRef_removeObject_, "[%{public}s] Unregistering for descriptor changes for widget: %s");
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v3 + 16));
  return swift_release();
}

void sub_1D2642050(uint64_t a1, void *a2, SEL *a3, char *a4)
{
  uint64_t v7;
  char *v8;
  NSObject *v9;
  os_log_type_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  id v14;
  uint64_t v15;
  unint64_t v16;
  unint64_t v17;
  char *format;
  uint64_t v19;
  uint64_t v20;

  objc_msgSend(*(id *)(a1 + 88), *a3, a2);
  if (qword_1ED96E7E0 != -1)
    swift_once();
  v7 = sub_1D26CC09C();
  __swift_project_value_buffer(v7, (uint64_t)qword_1ED9780D8);
  v8 = a2;
  swift_retain();
  v9 = sub_1D26CC084();
  v10 = sub_1D26CDCE0();
  if (os_log_type_enabled(v9, v10))
  {
    v11 = swift_slowAlloc();
    v19 = swift_slowAlloc();
    v20 = v19;
    *(_DWORD *)v11 = 136446466;
    format = a4;
    v12 = *(_QWORD *)(a1 + 16);
    v13 = *(_QWORD *)(a1 + 24);
    swift_bridgeObjectRetain();
    sub_1D2537880(v12, v13, &v20);
    sub_1D26CDF50();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v11 + 12) = 2080;
    v14 = objc_msgSend(*(id *)&v8[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key], sel__loggingIdentifierWithoutMetrics);
    v15 = sub_1D26CD938();
    v17 = v16;

    sub_1D2537880(v15, v17, &v20);
    sub_1D26CDF50();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v9, v10, format, (uint8_t *)v11, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v19, -1, -1);
    MEMORY[0x1D823A5E0](v11, -1, -1);

  }
  else
  {

    swift_release();
  }
}

uint64_t sub_1D26422AC(void *a1)
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  id v7;
  uint64_t v8;
  _QWORD v10[3];
  uint64_t v11;
  uint64_t v12;

  sub_1D2538510(v1 + 32, (uint64_t)v10);
  v3 = v11;
  v4 = v12;
  __swift_project_boxed_opaque_existential_0(v10, v11);
  v5 = (*(uint64_t (**)(uint64_t, uint64_t))(v4 + 24))(v3, v4);
  if (v5)
  {
    v6 = *(_QWORD *)(v5 + 16);
    v7 = a1;
    v8 = WidgetDescriptorPredicate.evaluate(with:)(v6);

    swift_release();
  }
  else
  {
    v8 = 0;
  }
  __swift_destroy_boxed_opaque_existential_1((uint64_t)v10);
  return v8;
}

uint64_t sub_1D2642358(unint64_t *a1)
{
  unint64_t v1;
  uint64_t result;
  _QWORD *v3;
  uint64_t v4;
  NSObject *v5;
  os_log_type_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  os_unfair_lock_s *v14;
  uint64_t v15;
  uint64_t v16;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = (_QWORD *)result;
    if (qword_1ED96E7E0 != -1)
      swift_once();
    v4 = sub_1D26CC09C();
    __swift_project_value_buffer(v4, (uint64_t)qword_1ED9780D8);
    swift_retain_n();
    swift_bridgeObjectRetain_n();
    swift_retain();
    v5 = sub_1D26CC084();
    v6 = sub_1D26CDCE0();
    if (os_log_type_enabled(v5, v6))
    {
      v7 = swift_slowAlloc();
      v15 = swift_slowAlloc();
      v16 = v15;
      *(_DWORD *)v7 = 136446466;
      v8 = v3[2];
      v9 = v3[3];
      swift_bridgeObjectRetain();
      sub_1D2537880(v8, v9, &v16);
      sub_1D26CDF50();
      swift_release();
      v10 = swift_bridgeObjectRelease();
      *(_WORD *)(v7 + 12) = 2048;
      MEMORY[0x1E0C80A78](v10);
      sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
      swift_getKeyPath();
      swift_retain();
      v11 = swift_bridgeObjectRetain();
      v12 = sub_1D25917A4(v11);
      swift_bridgeObjectRelease();
      swift_release_n();
      if (v12 >> 62)
      {
        swift_bridgeObjectRetain();
        sub_1D26CE1F0();
        swift_bridgeObjectRelease();
        swift_release();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_release();
      }
      swift_bridgeObjectRelease();
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      swift_release();
      _os_log_impl(&dword_1D2531000, v5, v6, "[%{public}s] Descriptors did change: %ld", (uint8_t *)v7, 0x16u);
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v15, -1, -1);
      MEMORY[0x1D823A5E0](v7, -1, -1);

    }
    else
    {

      swift_release();
      swift_bridgeObjectRelease_n();
      swift_release_n();
    }
    v13 = v3[10];
    v14 = *(os_unfair_lock_s **)(v13 + 16);
    swift_retain();
    os_unfair_lock_lock(v14);
    sub_1D26426B8((uint64_t)v3, v1);
    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v13 + 16));
    swift_release();
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26426B0(unint64_t *a1)
{
  return sub_1D2642358(a1);
}

uint64_t sub_1D26426B8(uint64_t a1, unint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char *v12;
  char *v13;
  id v15;
  void *v16;
  unint64_t v17;
  char v18;
  uint64_t v19;
  uint64_t v20;
  id v21;
  void *v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  char *v32;
  uint64_t v33;
  os_unfair_lock_s *v34;
  uint64_t v35;
  void *v36;
  char *v37;
  id v38;
  char v39;
  void *v40;
  char *v41;
  char *v42;
  uint64_t v43;
  uint64_t v44;
  os_unfair_lock_s *v45;
  char *v46;
  uint64_t v47;
  void *v48;
  char *v49;
  id v50;
  char v51;
  uint64_t v52;
  uint64_t v53;
  os_unfair_lock_s *v54;
  uint64_t v55;
  uint64_t v56;
  uint64_t v57;
  char *v58;
  uint64_t v59;
  char *v60;
  void (*v61)(char *, uint64_t);
  uint64_t v62;
  id v63;
  uint64_t v65;
  char *v66;
  char *v67;
  uint64_t v68;
  uint64_t v69;
  uint64_t v70;
  unint64_t v71;
  unint64_t v72;
  uint64_t v73;
  unint64_t v74;
  unint64_t v75;
  unint64_t v76;
  char *v77;
  unint64_t v78;
  unint64_t v79;
  char *v80;

  v4 = sub_1D26CC7A4();
  v68 = *(_QWORD *)(v4 - 8);
  v69 = v4;
  v5 = MEMORY[0x1E0C80A78](v4);
  v67 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v5);
  v66 = (char *)&v65 - v7;
  v8 = objc_msgSend(*(id *)(a1 + 88), sel_allObjects);
  type metadata accessor for WidgetEntry(0);
  v9 = sub_1D26CDAF4();

  if (v9 >> 62)
    goto LABEL_45;
  v10 = *(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 0x10);
  while (v10)
  {
    v11 = 0;
    a2 = *(_QWORD *)(a2 + 16);
    v72 = v9 + 32;
    v73 = v9 & 0xFFFFFFFFFFFFFF8;
    v70 = v10;
    v71 = v9;
    v75 = v9 & 0xC000000000000001;
    v76 = a2;
    while (1)
    {
      if (v75)
      {
        v12 = (char *)MEMORY[0x1D8239890](v11, v9);
      }
      else
      {
        if (v11 >= *(_QWORD *)(v73 + 16))
          goto LABEL_44;
        v12 = (char *)*(id *)(v72 + 8 * v11);
      }
      v13 = v12;
      if (__OFADD__(v11++, 1))
        break;
      v80 = (char *)*(id *)&v12[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key];
      v15 = objc_msgSend(v80, sel_extensionIdentity);
      v16 = v15;
      if (*(_QWORD *)(a2 + 16) && (v77 = v13, v17 = sub_1D25393D8((uint64_t)v15), a2 = v76, v13 = v77, (v18 & 1) != 0))
      {
        a2 = *(_QWORD *)(*(_QWORD *)(v76 + 56) + 8 * v17);
        swift_bridgeObjectRetain();

        v79 = a2;
        v74 = v11;
        if (a2 >> 62)
        {
          swift_bridgeObjectRetain();
          v19 = sub_1D26CE1F0();
          if (v19)
          {
LABEL_15:
            v78 = v79 & 0xC000000000000001;
            v20 = 4;
            while (1)
            {
              v21 = v78 ? (id)MEMORY[0x1D8239890](v20 - 4, v79) : *(id *)(v79 + 8 * v20);
              v22 = v21;
              v9 = v20 - 3;
              if (__OFADD__(v20 - 4, 1))
                break;
              v23 = objc_msgSend(v21, sel_kind);
              v24 = sub_1D26CD938();
              v26 = v25;

              v27 = objc_msgSend(v80, sel_kind);
              v28 = sub_1D26CD938();
              v30 = v29;

              if (v24 == v28 && v26 == v30)
              {
                swift_bridgeObjectRelease_n();
LABEL_28:
                swift_bridgeObjectRelease_n();

                v32 = v77;
                v33 = *(_QWORD *)&v77[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock];
                v34 = *(os_unfair_lock_s **)(v33 + 16);
                v13 = v22;
                swift_retain();
                os_unfair_lock_lock(v34);
                v35 = OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor;
                v36 = *(void **)&v32[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__lock_descriptor];
                if (v36)
                {
                  sub_1D2539514(0, (unint64_t *)&unk_1ED96E0F8);
                  v37 = v13;
                  v38 = v36;
                  v39 = sub_1D26CDECC();

                  if ((v39 & 1) != 0)
                  {
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));

                    swift_release();
                    goto LABEL_39;
                  }
                  v41 = v77;
                  v40 = *(void **)&v77[v35];
                }
                else
                {
                  v40 = 0;
                  v41 = v77;
                }
                *(_QWORD *)&v41[v35] = v22;
                v42 = v13;

                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v33 + 16));
                swift_release();
                v43 = *(_QWORD *)&v41[OBJC_IVAR____TtC9ChronoKit11WidgetEntry__environmentProvider];
                v44 = *(_QWORD *)(v43 + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock);
                v45 = *(os_unfair_lock_s **)(v44 + 16);
                v46 = v42;
                swift_retain();
                os_unfair_lock_lock(v45);
                v47 = OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor;
                v48 = *(void **)(v43
                               + OBJC_IVAR____TtC9ChronoKit41DescriptorMixedEnvironmentProviderAdapter__lock_descriptor);
                if (v48)
                {
                  sub_1D2539514(0, (unint64_t *)&qword_1ED96D9A0);
                  v49 = v46;
                  v50 = v48;
                  v51 = sub_1D26CDECC();

                  if ((v51 & 1) != 0)
                  {
                    os_unfair_lock_unlock(*(os_unfair_lock_t *)(v44 + 16));

                    swift_release();
                    v52 = MEMORY[0x1E0C95F40];
LABEL_38:
                    v63 = v77;
                    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
                    sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, v52);
                    sub_1D26CC1A4();

                    goto LABEL_39;
                  }
                  v48 = *(void **)(v43 + v47);
                }
                *(_QWORD *)(v43 + v47) = v22;
                v80 = v46;

                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v44 + 16));
                swift_release();
                v53 = *(_QWORD *)(v43 + 24);
                v54 = *(os_unfair_lock_s **)(v53 + 16);
                swift_retain();
                os_unfair_lock_lock(v54);
                v55 = v43 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
                swift_beginAccess();
                v57 = v68;
                v56 = v69;
                v58 = v46;
                v59 = (uint64_t)v66;
                (*(void (**)(char *, uint64_t, uint64_t))(v68 + 16))(v66, v55, v69);
                v60 = v67;
                sub_1D25CC94C(v59, v43);
                swift_beginAccess();
                (*(void (**)(uint64_t, char *, uint64_t))(v57 + 24))(v55, v60, v56);
                swift_endAccess();
                v61 = *(void (**)(char *, uint64_t))(v57 + 8);
                v61(v60, v56);
                v62 = v59;
                v46 = v58;
                v61((char *)v62, v56);
                os_unfair_lock_unlock(*(os_unfair_lock_t *)(v53 + 16));
                swift_release();
                swift_retain();
                __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
                v52 = MEMORY[0x1E0C95F40];
                sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
                sub_1D26CC1A4();

                swift_release();
                goto LABEL_38;
              }
              a2 = sub_1D26CE3D0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((a2 & 1) != 0)
                goto LABEL_28;

              ++v20;
              if (v9 == v19)
                goto LABEL_26;
            }
            __break(1u);
            break;
          }
        }
        else
        {
          v19 = *(_QWORD *)((v79 & 0xFFFFFFFFFFFFF8) + 0x10);
          swift_bridgeObjectRetain();
          if (v19)
            goto LABEL_15;
        }
LABEL_26:
        swift_bridgeObjectRelease_n();

        v13 = v80;
LABEL_39:
        v10 = v70;
        v9 = v71;
        v11 = v74;
        a2 = v76;
      }
      else
      {

      }
      if (v11 == v10)
        return swift_bridgeObjectRelease();
    }
    __break(1u);
LABEL_44:
    __break(1u);
LABEL_45:
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE1F0();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2642D70(void *a1, void *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  char *v7;
  NSObject *v8;
  os_log_type_t v9;
  uint64_t v10;
  uint64_t v11;
  unint64_t v12;
  id v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t v18;
  uint64_t v19;

  v3 = v2;
  if (qword_1ED96E7E0 != -1)
    swift_once();
  v6 = sub_1D26CC09C();
  __swift_project_value_buffer(v6, (uint64_t)qword_1ED9780D8);
  v7 = a2;
  swift_retain();
  v8 = sub_1D26CC084();
  v9 = sub_1D26CDCE0();
  if (os_log_type_enabled(v8, v9))
  {
    v10 = swift_slowAlloc();
    v18 = swift_slowAlloc();
    v19 = v18;
    *(_DWORD *)v10 = 136446466;
    v11 = *(_QWORD *)(v3 + 16);
    v12 = *(_QWORD *)(v3 + 24);
    swift_bridgeObjectRetain();
    sub_1D2537880(v11, v12, &v19);
    sub_1D26CDF50();
    swift_release();
    swift_bridgeObjectRelease();
    *(_WORD *)(v10 + 12) = 2080;
    v13 = objc_msgSend(*(id *)&v7[OBJC_IVAR____TtC9ChronoKit11WidgetEntry_key], sel__loggingIdentifierWithoutMetrics);
    v14 = sub_1D26CD938();
    v16 = v15;

    sub_1D2537880(v14, v16, &v19);
    sub_1D26CDF50();

    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v8, v9, "[%{public}s] Updating descriptor: %s", (uint8_t *)v10, 0x16u);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v18, -1, -1);
    MEMORY[0x1D823A5E0](v10, -1, -1);

  }
  else
  {

    swift_release();
  }
  return sub_1D2682908(a1);
}

uint64_t sub_1D2642FB8(void *a1)
{
  return sub_1D26422AC(a1);
}

void sub_1D2642FD8(char *a1)
{
  sub_1D2641EC0(a1);
}

uint64_t sub_1D2642FF8(void *a1)
{
  return sub_1D2641FE0(a1);
}

uint64_t dispatch thunk of WidgetEntryDescriptorChangeObserver.descriptor(matching:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 8))();
}

uint64_t dispatch thunk of WidgetEntryDescriptorChangeObserver.registerWidgetEntry(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of WidgetEntryDescriptorChangeObserver.unregisterWidgetEntry(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t type metadata accessor for _WidgetEntryDescriptorChangeObserver()
{
  return objc_opt_self();
}

uint64_t method lookup function for _WidgetEntryDescriptorChangeObserver()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.__allocating_init(label:descriptorProvider:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 216))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 224))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.registerWidgetEntry(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 232))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.unregisterWidgetEntry(_:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 240))();
}

uint64_t dispatch thunk of _WidgetEntryDescriptorChangeObserver.descriptor(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 248))();
}

uint64_t dispatch thunk of ArchiveVersionProviding.archiveVersion(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t sub_1D264309C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t sub_1D26430A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t sub_1D26430AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 64))();
}

uint64_t sub_1D26430B4()
{
  sub_1D26CE0A0();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  return 0;
}

uint64_t sub_1D26432D0()
{
  sub_1D26CE0A0();
  sub_1D26CDA04();
  swift_bridgeObjectRetain();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE190();
  sub_1D26CDA04();
  sub_1D26CE370();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CDBE4();
  sub_1D26CDA04();
  return 0;
}

void sub_1D26434FC(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21[2];
  _QWORD aBlock[6];

  v3 = sub_1D26CD074();
  v4 = *(void **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2645D14(a1);
  if (v11)
  {
    v12 = (void *)v11;
    v21[0] = v4;
    v13 = *(void **)(v1 + 24);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v12;
    v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1D2646114;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_16;
    v15 = _Block_copy(aBlock);
    v16 = v13;
    v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v21[1] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D25EA110();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25483C0();
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v10, v6, v15);
    _Block_release(v15);

    (*((void (**)(char *, uint64_t))v21[0] + 1))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  else
  {
    if (qword_1ED96E790 != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED9780C0);
    v21[0] = (id)sub_1D26CC084();
    v19 = sub_1D26CDD04();
    if (os_log_type_enabled((os_log_t)v21[0], v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, (os_log_t)v21[0], v19, "No powerlog update entries to flush.", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

  }
}

void sub_1D26437B8(unint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21[2];
  _QWORD aBlock[6];

  v3 = sub_1D26CD074();
  v4 = *(void **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2645178(a1);
  if (v11)
  {
    v12 = (void *)v11;
    v21[0] = v4;
    v13 = *(void **)(v1 + 24);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v12;
    v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1D26457E4;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_9_0;
    v15 = _Block_copy(aBlock);
    v16 = v13;
    v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v21[1] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D25EA110();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25483C0();
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v10, v6, v15);
    _Block_release(v15);

    (*((void (**)(char *, uint64_t))v21[0] + 1))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  else
  {
    if (qword_1ED96E790 != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED9780C0);
    v21[0] = (id)sub_1D26CC084();
    v19 = sub_1D26CDD04();
    if (os_log_type_enabled((os_log_t)v21[0], v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, (os_log_t)v21[0], v19, "No powerlog view entries to flush.", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

  }
}

void sub_1D2643A74(void *a1, uint64_t a2, unint64_t a3, const char *a4, uint64_t a5, uint64_t a6, const char *a7)
{
  uint64_t v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  uint8_t *v15;
  id v16;
  void *v17;
  NSObject *v18;
  os_log_type_t v19;
  uint8_t *v20;
  _QWORD *v21;

  if (qword_1ED96E790 != -1)
    swift_once();
  v11 = sub_1D26CC09C();
  __swift_project_value_buffer(v11, (uint64_t)qword_1ED9780C0);
  v12 = a1;
  v13 = sub_1D26CC084();
  v14 = sub_1D26CDCE0();
  if (os_log_type_enabled(v13, v14))
  {
    v15 = (uint8_t *)swift_slowAlloc();
    v21 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v15 = 138543362;
    v16 = v12;
    sub_1D26CDF50();
    *v21 = v12;

    _os_log_impl(&dword_1D2531000, v13, v14, a4, v15, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v21, -1, -1);
    MEMORY[0x1D823A5E0](v15, -1, -1);

  }
  else
  {

  }
  v17 = (void *)sub_1D26CD914();
  PLLogRegisteredEvent();

  swift_bridgeObjectRetain_n();
  v18 = sub_1D26CC084();
  v19 = sub_1D26CDD04();
  if (os_log_type_enabled(v18, v19))
  {
    v20 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v20 = 134349056;
    if (a3 >> 62)
    {
      swift_bridgeObjectRetain();
      sub_1D26CE1F0();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v18, v19, a7, v20, 0xCu);
    MEMORY[0x1D823A5E0](v20, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
}

void sub_1D2643D74(uint64_t a1)
{
  uint64_t v1;
  uint64_t v3;
  void *v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  void *v12;
  void *v13;
  _QWORD *v14;
  void *v15;
  id v16;
  id v17;
  uint64_t v18;
  os_log_type_t v19;
  uint8_t *v20;
  id v21[2];
  _QWORD aBlock[6];

  v3 = sub_1D26CD074();
  v4 = *(void **)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = (char *)v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CD0C8();
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)v21 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = sub_1D2644774(a1);
  if (v11)
  {
    v12 = (void *)v11;
    v21[0] = v4;
    v13 = *(void **)(v1 + 24);
    v14 = (_QWORD *)swift_allocObject();
    v14[2] = v12;
    v14[3] = v1;
    v14[4] = a1;
    aBlock[4] = sub_1D2644BE4;
    aBlock[5] = v14;
    aBlock[0] = MEMORY[0x1E0C809B0];
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1D25351AC;
    aBlock[3] = &block_descriptor_13;
    v15 = _Block_copy(aBlock);
    v16 = v13;
    v17 = v12;
    swift_retain();
    swift_bridgeObjectRetain();
    _s9ChronoKit16LayerSnapshotterC8snapshot7request16qualityOfService17completionHandleryAA15SnapshotRequestVyAC09SupportedC0OG_8Dispatch0O3QoSVyAC6ResultOctFfA0__0();
    v21[1] = (id)MEMORY[0x1E0DEE9D8];
    sub_1D25EA110();
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96EE00);
    sub_1D25483C0();
    sub_1D26CDFE0();
    MEMORY[0x1D823956C](0, v10, v6, v15);
    _Block_release(v15);

    (*((void (**)(char *, uint64_t))v21[0] + 1))(v6, v3);
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    swift_release();
  }
  else
  {
    if (qword_1ED96E790 != -1)
      swift_once();
    v18 = sub_1D26CC09C();
    __swift_project_value_buffer(v18, (uint64_t)qword_1ED9780C0);
    v21[0] = (id)sub_1D26CC084();
    v19 = sub_1D26CDD04();
    if (os_log_type_enabled((os_log_t)v21[0], v19))
    {
      v20 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)v20 = 0;
      _os_log_impl(&dword_1D2531000, (os_log_t)v21[0], v19, "No powerlog suggestion entries to flush.", v20, 2u);
      MEMORY[0x1D823A5E0](v20, -1, -1);
    }

  }
}

void sub_1D2644030(void *a1)
{
  uint64_t v2;
  id v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  void *v9;
  NSObject *v10;
  os_log_type_t v11;
  uint8_t *v12;

  if (qword_1ED96E790 != -1)
    swift_once();
  v2 = sub_1D26CC09C();
  __swift_project_value_buffer(v2, (uint64_t)qword_1ED9780C0);
  v3 = a1;
  v4 = sub_1D26CC084();
  v5 = sub_1D26CDCE0();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v8 = v3;
    sub_1D26CDF50();
    *v7 = v3;

    _os_log_impl(&dword_1D2531000, v4, v5, "Flushing suggestions to powerlog: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v7, -1, -1);
    MEMORY[0x1D823A5E0](v6, -1, -1);

  }
  else
  {

  }
  v9 = (void *)sub_1D26CD914();
  PLLogRegisteredEvent();

  swift_bridgeObjectRetain();
  v10 = sub_1D26CC084();
  v11 = sub_1D26CDD04();
  if (os_log_type_enabled(v10, v11))
  {
    v12 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)v12 = 134349056;
    sub_1D26CDF50();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_1D2531000, v10, v11, "Flushed %{public}ld powerlog suggestion entries.", v12, 0xCu);
    MEMORY[0x1D823A5E0](v12, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for WidgetPowerlogProvider()
{
  return objc_opt_self();
}

unint64_t sub_1D26442F8()
{
  unint64_t result;

  result = qword_1EFC832E8;
  if (!qword_1EFC832E8)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogUpdateIdentity, &type metadata for PowerlogUpdateIdentity);
    atomic_store(result, (unint64_t *)&qword_1EFC832E8);
  }
  return result;
}

unint64_t sub_1D2644340()
{
  unint64_t result;

  result = qword_1EFC832F0;
  if (!qword_1EFC832F0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for PowerlogWidgetViewIdentity, &type metadata for PowerlogWidgetViewIdentity);
    atomic_store(result, (unint64_t *)&qword_1EFC832F0);
  }
  return result;
}

void sub_1D2644384(unint64_t a1)
{
  sub_1D26437B8(a1);
}

void sub_1D26443A4(unint64_t a1)
{
  sub_1D26434FC(a1);
}

void sub_1D26443C4(uint64_t a1)
{
  sub_1D2643D74(a1);
}

unint64_t sub_1D26443E4(unint64_t result, uint64_t a2, unint64_t a3)
{
  uint64_t v3;
  char v4;

  if ((result & 0x8000000000000000) != 0)
  {
    __break(1u);
  }
  else
  {
    if ((a3 & 0x2000000000000000) != 0)
      v3 = HIBYTE(a3) & 0xF;
    else
      v3 = a2 & 0xFFFFFFFFFFFFLL;
    result = sub_1D26CD9F8();
    if ((v4 & 1) != 0)
      result = 15;
    if (4 * v3 >= result >> 14)
      return sub_1D26CDA40();
  }
  __break(1u);
  return result;
}

uint64_t sub_1D264448C(uint64_t a1)
{
  if ((unint64_t)(a1 - 1) > 0xC)
    return 0;
  else
    return byte_1D26D8DE6[a1 - 1];
}

uint64_t sub_1D26444B0(uint64_t a1)
{
  id v1;
  uint64_t v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char isUniquelyReferenced_nonNull_native;
  id v8;
  uint64_t v9;
  unint64_t v10;
  unint64_t v11;
  _QWORD *v12;
  unint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  char v20;
  unsigned __int8 v21;
  char v22;
  char v23;
  uint64_t v24;
  uint64_t v26;
  _OWORD v27[2];
  __int128 v28;
  uint64_t v29;

  v1 = *(id *)a1;
  v26 = *(_QWORD *)(a1 + 8);
  v2 = *(_QWORD *)(a1 + 16);
  v3 = objc_msgSend(*(id *)a1, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v4 = sub_1D26CBC88();
  v5 = MEMORY[0x1E0DEA968];
  v29 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v28 = v4;
  *((_QWORD *)&v28 + 1) = v6;
  swift_endAccess();

  sub_1D2538448(&v28, v27);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v27, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v8 = objc_msgSend(v1, sel_kind);
  v9 = sub_1D26CD938();
  v11 = v10;

  v29 = MEMORY[0x1E0DEBAF0];
  v12 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v28 = v12;
  v13 = sub_1D26443E4(6uLL, v9, v11);
  v15 = v14;
  v17 = v16;
  v19 = v18;
  swift_bridgeObjectRelease();
  v12[2] = v13;
  v12[3] = v15;
  v12[4] = v17;
  v12[5] = v19;
  sub_1D2538448(&v28, v27);
  v20 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v27, 1684957547, 0xE400000000000000, v20);
  swift_bridgeObjectRelease();
  v21 = sub_1D264448C((uint64_t)objc_msgSend(v1, sel_family));
  v29 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v28 = v21;
  sub_1D2538448(&v28, v27);
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v27, 1702521203, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  v29 = v5;
  *(_QWORD *)&v28 = v26;
  *((_QWORD *)&v28 + 1) = v2;
  sub_1D2538448(&v28, v27);
  swift_bridgeObjectRetain();
  v23 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v27, 0xD000000000000014, 0x80000001D26E3620, v23);
  swift_bridgeObjectRelease();
  v24 = sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_1D2644774(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t *v4;
  __objc2_ivar *v5;
  unint64_t v6;
  uint64_t v7;
  id v8;
  void *v9;
  uint64_t v10;
  id v11;
  id v12;
  NSObject *v13;
  os_log_type_t v14;
  id v15;
  uint64_t v16;
  uint64_t v17;
  id v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  id v27;
  unint64_t v28;
  uint64_t v29;

  v2 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  v3 = *(_QWORD *)(a1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    v23 = a1;
    v4 = (uint64_t *)(a1 + 48);
    v5 = &stru_1E93E6000;
    do
    {
      v6 = *(v4 - 1);
      v7 = *v4;
      v27 = (id)*(v4 - 2);
      v28 = v6;
      v29 = v7;
      v8 = v27;
      swift_bridgeObjectRetain();
      v9 = (void *)sub_1D26444B0((uint64_t)&v27);
      objc_msgSend(v2, *(SEL *)&v5[120].align, v9);

      if (qword_1ED96E790 != -1)
        swift_once();
      v10 = sub_1D26CC09C();
      __swift_project_value_buffer(v10, (uint64_t)qword_1ED9780C0);
      v11 = v8;
      swift_bridgeObjectRetain_n();
      v12 = v11;
      v13 = sub_1D26CC084();
      v14 = sub_1D26CDCE0();
      if (os_log_type_enabled(v13, v14))
      {
        v24 = swift_slowAlloc();
        v25 = swift_slowAlloc();
        v26 = v25;
        v27 = 0;
        *(_DWORD *)v24 = 136446210;
        v28 = 0xE000000000000000;
        sub_1D26CE0A0();
        sub_1D26CDA04();
        v15 = objc_msgSend(v12, sel_description);
        sub_1D26CD938();

        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        swift_bridgeObjectRetain();
        sub_1D26CDA04();
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        *(_QWORD *)(v24 + 4) = sub_1D2537880((uint64_t)v27, v28, &v26);
        swift_bridgeObjectRelease_n();

        v5 = &stru_1E93E6000;
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v13, v14, "Flushing powerlog suggestion entry: %{public}s", (uint8_t *)v24, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v25, -1, -1);
        MEMORY[0x1D823A5E0](v24, -1, -1);
        swift_bridgeObjectRelease();

      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      v4 += 3;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  if (objc_msgSend(v2, sel_count, v23))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C100);
    v16 = swift_allocObject();
    *(_OWORD *)(v16 + 16) = xmmword_1D26D5A90;
    v17 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v16 + 32) = 0x7374617473;
    *(_QWORD *)(v16 + 40) = 0xE500000000000000;
    objc_msgSend(v2, sel_copyWithZone_, 0);
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    *(_QWORD *)(v16 + 120) = v17;
    *(_QWORD *)(v16 + 96) = 0x6D617473656D6974;
    *(_QWORD *)(v16 + 104) = 0xE900000000000070;
    v18 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), sel_init);
    objc_msgSend(v18, sel_timeIntervalSince1970);
    v20 = v19;

    *(_QWORD *)(v16 + 152) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v16 + 128) = v20;
    sub_1D25EA158();
    v21 = sub_1D26CDCB0();

  }
  else
  {

    return 0;
  }
  return v21;
}

void sub_1D2644BE4()
{
  uint64_t v0;

  sub_1D2644030(*(void **)(v0 + 16));
}

uint64_t sub_1D2644BF0()
{
  swift_bridgeObjectRelease();
  return swift_deallocObject();
}

uint64_t sub_1D2644C14(uint64_t a1)
{
  id v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  char isUniquelyReferenced_nonNull_native;
  id v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  _QWORD *v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char v19;
  unsigned __int8 v20;
  uint64_t v21;
  char v22;
  char v23;
  char v24;
  uint64_t v25;
  char v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  uint64_t v35;
  uint64_t v36;
  char v37;
  uint64_t v38;
  char v39;
  uint64_t v40;
  char v41;
  uint64_t v42;
  _OWORD v44[2];
  __int128 v45;
  uint64_t v46;

  v2 = objc_msgSend(*(id *)(a1 + 16), sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v3 = sub_1D26CBC88();
  v4 = MEMORY[0x1E0DEA968];
  v46 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v45 = v3;
  *((_QWORD *)&v45 + 1) = v5;
  swift_endAccess();

  sub_1D2538448(&v45, v44);
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  swift_bridgeObjectRelease();
  v7 = objc_msgSend(*(id *)(a1 + 16), sel_kind);
  v8 = sub_1D26CD938();
  v10 = v9;

  v46 = MEMORY[0x1E0DEBAF0];
  v11 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v45 = v11;
  v12 = sub_1D26443E4(6uLL, v8, v10);
  v14 = v13;
  v16 = v15;
  v18 = v17;
  swift_bridgeObjectRelease();
  v11[2] = v12;
  v11[3] = v14;
  v11[4] = v16;
  v11[5] = v18;
  sub_1D2538448(&v45, v44);
  v19 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 1684957547, 0xE400000000000000, v19);
  swift_bridgeObjectRelease();
  v20 = sub_1D264448C((uint64_t)objc_msgSend(*(id *)(a1 + 16), sel_family));
  v21 = MEMORY[0x1E0DEB418];
  v46 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v45 = v20;
  sub_1D2538448(&v45, v44);
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 1702521203, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  v23 = *(_BYTE *)(a1 + 56);
  v46 = MEMORY[0x1E0DEAFA0];
  LOBYTE(v45) = v23;
  sub_1D2538448(&v45, v44);
  v24 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0x636174536E497369, 0xE90000000000006BLL, v24);
  swift_bridgeObjectRelease();
  if (*(_BYTE *)(a1 + 72) == 1)
    v25 = qword_1D26D8DF8[*(_QWORD *)(a1 + 64)];
  else
    v25 = 3;
  v46 = v21;
  *(_QWORD *)&v45 = v25;
  sub_1D2538448(&v45, v44);
  v26 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0x6E6F697461636F6CLL, 0xE800000000000000, v26);
  swift_bridgeObjectRelease();
  if ((*(_BYTE *)(a1 + 72) & 1) != 0)
    v27 = -1;
  else
    v27 = *(_QWORD *)(a1 + 64);
  v46 = v21;
  *(_QWORD *)&v45 = v27;
  sub_1D2538448(&v45, v44);
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 1701273968, 0xE400000000000000, v28);
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a1 + 48);
  if (v29)
  {
    v30 = *(_QWORD *)(a1 + 40);
    v46 = v4;
    *(_QWORD *)&v45 = v30;
    *((_QWORD *)&v45 + 1) = v29;
    sub_1D2538448(&v45, v44);
    swift_bridgeObjectRetain();
    v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D266E394(v44, 0xD000000000000014, 0x80000001D26E3620, v31);
    swift_bridgeObjectRelease();
  }
  v32 = *(_QWORD *)(a1 + 24);
  v33 = *(_QWORD *)(a1 + 32);
  v46 = v4;
  *(_QWORD *)&v45 = v32;
  *((_QWORD *)&v45 + 1) = v33;
  sub_1D2538448(&v45, v44);
  swift_bridgeObjectRetain();
  v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0x696669746E656469, 0xEA00000000007265, v34);
  swift_bridgeObjectRelease();
  v35 = *(_QWORD *)(a1 + 112);
  v36 = MEMORY[0x1E0DEB070];
  v46 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v45 = v35;
  sub_1D2538448(&v45, v44);
  v37 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0xD000000000000016, 0x80000001D26E1D00, v37);
  swift_bridgeObjectRelease();
  v38 = *(_QWORD *)(a1 + 88);
  v46 = v36;
  *(_QWORD *)&v45 = v38;
  sub_1D2538448(&v45, v44);
  v39 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0xD000000000000013, 0x80000001D26E3640, v39);
  swift_bridgeObjectRelease();
  v40 = *(_QWORD *)(a1 + 96);
  v46 = v21;
  *(_QWORD *)&v45 = v40;
  sub_1D2538448(&v45, v44);
  v41 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v44, 0xD000000000000013, 0x80000001D26E3660, v41);
  swift_bridgeObjectRelease();
  v42 = sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  return v42;
}

uint64_t sub_1D2645178(unint64_t a1)
{
  __objc2_ivar *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  void **p_cache;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  char v17;
  uint64_t v18;
  char v19;
  __int128 v20;
  __int128 v21;
  uint64_t v22;
  NSObject *v23;
  os_log_type_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  char v30;
  uint64_t v31;
  unint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  id v37;
  uint64_t v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  id v42;
  unint64_t v43;
  uint64_t v44;
  unint64_t v45;
  __int128 v46;
  uint64_t v47;
  __int128 v48;
  uint64_t v49;
  __int128 v50;
  char v51;
  uint64_t v52;
  char v53;
  __int128 v54;
  __int128 v55;
  uint64_t v56;

  v2 = &stru_1E93E6000;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE1F0();
    v4 = result;
    if (result)
      goto LABEL_3;
LABEL_23:
    swift_bridgeObjectRelease();
    goto LABEL_24;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_23;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  v7 = a1 & 0xC000000000000001;
  p_cache = (void **)(&OBJC_METACLASS____TtC9ChronoKit27StorefrontChangeCoordinator + 16);
  v41 = MEMORY[0x1E0DEE9B8] + 8;
  v44 = v4;
  v45 = a1;
  v42 = v3;
  v43 = a1 & 0xC000000000000001;
  do
  {
    if (v7)
    {
      v9 = MEMORY[0x1D8239890](v6, a1);
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 8 * v6 + 32);
      swift_retain();
    }
    if (*(double *)(v9 + 112) <= 0.0)
    {
      if (p_cache[242] != (void *)-1)
        swift_once();
      v22 = sub_1D26CC09C();
      __swift_project_value_buffer(v22, (uint64_t)qword_1ED9780C0);
      swift_retain_n();
      v23 = sub_1D26CC084();
      v24 = sub_1D26CDCE0();
      if (os_log_type_enabled(v23, v24))
      {
        v25 = swift_slowAlloc();
        v26 = swift_slowAlloc();
        *(_QWORD *)&v46 = v26;
        *(_DWORD *)v25 = 136446210;
        v27 = *(_QWORD *)(v9 + 32);
        v28 = *(_BYTE *)(v9 + 56);
        v29 = *(_QWORD *)(v9 + 64);
        v30 = *(_BYTE *)(v9 + 72);
        v48 = *(_OWORD *)(v9 + 16);
        v49 = v27;
        v50 = *(_OWORD *)(v9 + 40);
        v51 = v28;
        v52 = v29;
        v53 = v30;
        v31 = PowerlogWidgetViewIdentity.description.getter();
        *(_QWORD *)(v25 + 4) = sub_1D2537880(v31, v32, (uint64_t *)&v46);
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v23, v24, "Dropped view entry for identity: [%{public}s] because it was incomplete.", (uint8_t *)v25, 0xCu);
        swift_arrayDestroy();
        v33 = v26;
        a1 = v45;
        MEMORY[0x1D823A5E0](v33, -1, -1);
        v34 = v25;
        v4 = v44;
        MEMORY[0x1D823A5E0](v34, -1, -1);
        swift_release();

      }
      else
      {

        swift_release_n();
      }
    }
    else
    {
      v10 = (void *)sub_1D2644C14(v9);
      objc_msgSend(v3, sel_addObject_, v10);

      if (p_cache[242] != (void *)-1)
        swift_once();
      v11 = sub_1D26CC09C();
      __swift_project_value_buffer(v11, (uint64_t)qword_1ED9780C0);
      swift_retain_n();
      v12 = sub_1D26CC084();
      v13 = sub_1D26CDCE0();
      if (os_log_type_enabled(v12, v13))
      {
        v14 = (uint8_t *)swift_slowAlloc();
        v15 = swift_slowAlloc();
        v47 = v15;
        *(_QWORD *)&v48 = 0;
        *(_DWORD *)v14 = 136446210;
        *((_QWORD *)&v48 + 1) = 0xE000000000000000;
        swift_retain();
        sub_1D26CE0A0();
        v46 = v48;
        sub_1D26CDA04();
        v16 = *(_QWORD *)(v9 + 32);
        v17 = *(_BYTE *)(v9 + 56);
        v18 = *(_QWORD *)(v9 + 64);
        v19 = *(_BYTE *)(v9 + 72);
        v20 = *(_OWORD *)(v9 + 40);
        v48 = *(_OWORD *)(v9 + 16);
        v49 = v16;
        v50 = v20;
        v51 = v17;
        v52 = v18;
        v53 = v19;
        sub_1D26CE190();
        sub_1D26CDA04();
        v21 = *(_OWORD *)(v9 + 96);
        v54 = *(_OWORD *)(v9 + 80);
        v55 = v21;
        v56 = *(_QWORD *)(v9 + 112);
        sub_1D259E888();
        sub_1D26CDA04();
        a1 = v45;
        swift_bridgeObjectRelease();
        sub_1D26CDA04();
        swift_release();
        *(_QWORD *)&v48 = sub_1D2537880(v46, *((unint64_t *)&v46 + 1), &v47);
        v4 = v44;
        v3 = v42;
        sub_1D26CDF50();
        swift_release_n();
        swift_bridgeObjectRelease();
        _os_log_impl(&dword_1D2531000, v12, v13, "Flushing powerlog view entry: %{public}s", v14, 0xCu);
        swift_arrayDestroy();
        MEMORY[0x1D823A5E0](v15, -1, -1);
        MEMORY[0x1D823A5E0](v14, -1, -1);
        swift_release();

      }
      else
      {

        swift_release_n();
      }
      v7 = v43;
      p_cache = &OBJC_METACLASS____TtC9ChronoKit27StorefrontChangeCoordinator.cache;
    }
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  v2 = &stru_1E93E6000;
LABEL_24:
  if (objc_msgSend(v3, sel_count, v41))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C100);
    v35 = swift_allocObject();
    *(_OWORD *)(v35 + 16) = xmmword_1D26D5A90;
    v36 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v35 + 32) = 0x7374617473;
    *(_QWORD *)(v35 + 40) = 0xE500000000000000;
    objc_msgSend(v3, sel_copyWithZone_, 0);
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    *(_QWORD *)(v35 + 120) = v36;
    *(_QWORD *)(v35 + 96) = 0x6D617473656D6974;
    *(_QWORD *)(v35 + 104) = 0xE900000000000070;
    v37 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), v2[79].type);
    objc_msgSend(v37, sel_timeIntervalSince1970);
    v39 = v38;

    *(_QWORD *)(v35 + 152) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v35 + 128) = v39;
    sub_1D25EA158();
    v40 = sub_1D26CDCB0();

  }
  else
  {

    return 0;
  }
  return v40;
}

void sub_1D26457E4()
{
  uint64_t v0;

  sub_1D2643A74(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), "Flushing views to powerlog: %{public}@", 0x7453746567646957, 0xEB00000000737461, "Flushed %{public}ld powerlog view entries.");
}

uint64_t sub_1D264582C(uint64_t a1)
{
  void *v2;
  id v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char isUniquelyReferenced_nonNull_native;
  id v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _QWORD *v13;
  unint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  char v25;
  uint64_t v26;
  uint64_t v27;
  char v28;
  uint64_t v29;
  uint64_t v30;
  char v31;
  uint64_t v32;
  uint64_t v33;
  char v34;
  _BOOL8 v35;
  char v36;
  uint64_t v37;
  char v38;
  uint64_t v39;
  char v40;
  uint64_t v41;
  _OWORD v43[2];
  __int128 v44;
  uint64_t v45;
  uint64_t v46;

  v2 = *(void **)(a1 + 32);
  v3 = objc_msgSend(v2, sel_extensionIdentity);
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  v4 = sub_1D26CBC88();
  v5 = MEMORY[0x1E0DEA968];
  v45 = MEMORY[0x1E0DEA968];
  *(_QWORD *)&v44 = v4;
  *((_QWORD *)&v44 + 1) = v6;
  swift_endAccess();

  sub_1D2538448(&v44, v43);
  v7 = MEMORY[0x1E0DEE9E0];
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 0x4449656C646E7562, 0xE800000000000000, isUniquelyReferenced_nonNull_native);
  v46 = v7;
  swift_bridgeObjectRelease();
  v9 = objc_msgSend(v2, sel_kind);
  v10 = sub_1D26CD938();
  v12 = v11;

  v45 = MEMORY[0x1E0DEBAF0];
  v13 = (_QWORD *)swift_allocObject();
  *(_QWORD *)&v44 = v13;
  v14 = sub_1D26443E4(6uLL, v10, v12);
  v16 = v15;
  v18 = v17;
  v20 = v19;
  swift_bridgeObjectRelease();
  v13[2] = v14;
  v13[3] = v16;
  v13[4] = v18;
  v13[5] = v20;
  sub_1D2538448(&v44, v43);
  v21 = v46;
  v22 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 1684957547, 0xE400000000000000, v22);
  swift_bridgeObjectRelease();
  v23 = *(_QWORD *)(a1 + 40);
  v24 = *(_QWORD *)(a1 + 48);
  v45 = v5;
  *(_QWORD *)&v44 = v23;
  *((_QWORD *)&v44 + 1) = v24;
  sub_1D2538448(&v44, v43);
  swift_bridgeObjectRetain();
  v25 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 0x696669746E656469, 0xEA00000000007265, v25);
  v46 = v21;
  swift_bridgeObjectRelease();
  v26 = *(_QWORD *)(a1 + 96);
  if (!v26)
  {
    sub_1D266AD54(1953722216, 0xE400000000000000, &v44);
    sub_1D2536700((uint64_t)&v44);
    v29 = *(_QWORD *)(a1 + 64);
    if (!v29)
      goto LABEL_5;
    goto LABEL_3;
  }
  v27 = *(_QWORD *)(a1 + 88);
  v45 = v5;
  *(_QWORD *)&v44 = v27;
  *((_QWORD *)&v44 + 1) = v26;
  sub_1D2538448(&v44, v43);
  swift_bridgeObjectRetain();
  v28 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 1953722216, 0xE400000000000000, v28);
  v46 = v21;
  swift_bridgeObjectRelease();
  v29 = *(_QWORD *)(a1 + 64);
  if (v29)
  {
LABEL_3:
    v30 = *(_QWORD *)(a1 + 56);
    v45 = v5;
    *(_QWORD *)&v44 = v30;
    *((_QWORD *)&v44 + 1) = v29;
    sub_1D2538448(&v44, v43);
    swift_bridgeObjectRetain();
    v31 = swift_isUniquelyReferenced_nonNull_native();
    sub_1D266E394(v43, 0xD000000000000014, 0x80000001D26E3620, v31);
    swift_bridgeObjectRelease();
  }
LABEL_5:
  v32 = *(_QWORD *)(a1 + 112);
  v33 = MEMORY[0x1E0DEB418];
  v45 = MEMORY[0x1E0DEB418];
  *(_QWORD *)&v44 = v32;
  sub_1D2538448(&v44, v43);
  v34 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 0x6E696E69616D6572, 0xEF74656764754267, v34);
  swift_bridgeObjectRelease();
  v35 = (*(_BYTE *)(a1 + 104) & 1) == 0;
  v45 = v33;
  *(_QWORD *)&v44 = v35;
  sub_1D2538448(&v44, v43);
  v36 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 1953722211, 0xE400000000000000, v36);
  swift_bridgeObjectRelease();
  v37 = qword_1D26D8E38[*(char *)(a1 + 105)];
  v45 = v33;
  *(_QWORD *)&v44 = v37;
  sub_1D2538448(&v44, v43);
  v38 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 0x6E6F73616572, 0xE600000000000000, v38);
  swift_bridgeObjectRelease();
  v39 = *(_QWORD *)(a1 + 120);
  v45 = MEMORY[0x1E0DEB070];
  *(_QWORD *)&v44 = v39;
  sub_1D2538448(&v44, v43);
  v40 = swift_isUniquelyReferenced_nonNull_native();
  sub_1D266E394(v43, 0x6F69747563657865, 0xED0000656D69546ELL, v40);
  swift_bridgeObjectRelease();
  v41 = sub_1D26CD7DC();
  swift_bridgeObjectRelease();
  return v41;
}

uint64_t sub_1D2645D14(unint64_t a1)
{
  __objc2_ivar *v2;
  id v3;
  uint64_t v4;
  uint64_t result;
  uint64_t v6;
  unint64_t v7;
  __objc2_ivar *v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  NSObject *v12;
  os_log_type_t v13;
  uint8_t *v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  uint64_t v19;
  uint8_t *v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  uint64_t v28;
  unint64_t v29;
  id v30;
  uint64_t v31;

  v2 = &stru_1E93E6000;
  v3 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99DE8]), sel_init);
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    result = sub_1D26CE1F0();
    v4 = result;
    if (result)
      goto LABEL_3;
LABEL_16:
    swift_bridgeObjectRelease();
    goto LABEL_17;
  }
  v4 = *(_QWORD *)((a1 & 0xFFFFFFFFFFFFF8) + 0x10);
  result = swift_bridgeObjectRetain();
  if (!v4)
    goto LABEL_16;
LABEL_3:
  if (v4 < 1)
  {
    __break(1u);
    return result;
  }
  v6 = 0;
  v7 = a1 & 0xC000000000000001;
  v8 = &stru_1E93E6000;
  v29 = a1;
  v30 = v3;
  v27 = a1 & 0xC000000000000001;
  v28 = v4;
  do
  {
    if (v7)
    {
      v9 = MEMORY[0x1D8239890](v6, a1);
    }
    else
    {
      v9 = *(_QWORD *)(a1 + 8 * v6 + 32);
      swift_retain();
    }
    v10 = (void *)sub_1D264582C(v9);
    objc_msgSend(v3, *(SEL *)&v8[120].align, v10);

    if (qword_1ED96E790 != -1)
      swift_once();
    v11 = sub_1D26CC09C();
    __swift_project_value_buffer(v11, (uint64_t)qword_1ED9780C0);
    swift_retain_n();
    v12 = sub_1D26CC084();
    v13 = sub_1D26CDCE0();
    if (os_log_type_enabled(v12, v13))
    {
      v14 = (uint8_t *)swift_slowAlloc();
      v15 = swift_slowAlloc();
      v31 = v15;
      *(_DWORD *)v14 = 136446210;
      swift_retain();
      v16 = sub_1D26432D0();
      v18 = v17;
      swift_release();
      sub_1D2537880(v16, v18, &v31);
      v4 = v28;
      v3 = v30;
      sub_1D26CDF50();
      swift_release_n();
      v7 = v27;
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_1D2531000, v12, v13, "Flushing powerlog update entry: %{public}s", v14, 0xCu);
      swift_arrayDestroy();
      v19 = v15;
      v8 = &stru_1E93E6000;
      MEMORY[0x1D823A5E0](v19, -1, -1);
      v20 = v14;
      a1 = v29;
      MEMORY[0x1D823A5E0](v20, -1, -1);
      swift_release();

    }
    else
    {

      swift_release_n();
    }
    ++v6;
  }
  while (v4 != v6);
  swift_bridgeObjectRelease();
  v2 = &stru_1E93E6000;
LABEL_17:
  if (objc_msgSend(v3, sel_count))
  {
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C100);
    v21 = swift_allocObject();
    *(_OWORD *)(v21 + 16) = xmmword_1D26D5A90;
    v22 = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 56) = MEMORY[0x1E0DEA968];
    *(_QWORD *)(v21 + 32) = 0x7374617473;
    *(_QWORD *)(v21 + 40) = 0xE500000000000000;
    objc_msgSend(v3, sel_copyWithZone_, 0);
    sub_1D26CDFA4();
    swift_unknownObjectRelease();
    *(_QWORD *)(v21 + 120) = v22;
    *(_QWORD *)(v21 + 96) = 0x6D617473656D6974;
    *(_QWORD *)(v21 + 104) = 0xE900000000000070;
    v23 = objc_msgSend(objc_allocWithZone(MEMORY[0x1E0C99D68]), v2[79].type);
    objc_msgSend(v23, sel_timeIntervalSince1970);
    v25 = v24;

    *(_QWORD *)(v21 + 152) = MEMORY[0x1E0DEB070];
    *(_QWORD *)(v21 + 128) = v25;
    sub_1D25EA158();
    v26 = sub_1D26CDCB0();

  }
  else
  {

    return 0;
  }
  return v26;
}

void sub_1D2646114()
{
  uint64_t v0;

  sub_1D2643A74(*(void **)(v0 + 16), *(_QWORD *)(v0 + 24), *(_QWORD *)(v0 + 32), "Flushing updates to powerlog: %{public}@", 0x7055746567646957, 0xED00007365746164, "Flushed %{public}ld powerlog update entries.");
}

uint64_t sub_1D2646170(void (*a1)(_BYTE *))
{
  uint64_t v1;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  _BYTE *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;
  uint64_t v9;
  _BYTE v11[24];

  v3 = sub_1D26CC7A4();
  v4 = *(_QWORD *)(v3 - 8);
  MEMORY[0x1E0C80A78](v3);
  v6 = &v11[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  v7 = *(_QWORD *)(v1 + 24);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  v9 = v1 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  swift_beginAccess();
  (*(void (**)(_BYTE *, uint64_t, uint64_t))(v4 + 16))(v6, v9, v3);
  a1(v6);
  swift_beginAccess();
  (*(void (**)(uint64_t, _BYTE *, uint64_t))(v4 + 24))(v9, v6, v3);
  swift_endAccess();
  (*(void (**)(_BYTE *, uint64_t))(v4 + 8))(v6, v3);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  swift_release();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  sub_1D2536488((unint64_t *)&unk_1ED96FC60, &qword_1ED96FC80, MEMORY[0x1E0C95F40]);
  sub_1D26CC1A4();
  return swift_release();
}

uint64_t sub_1D26462EC(void *a1, _QWORD *a2, _QWORD *a3)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  _DWORD *v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t (*v16)(uint64_t, uint64_t);
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  id v21;
  uint64_t v22;

  v4 = v3;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963400);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78](v8);
  v11 = (char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__subscriptions) = MEMORY[0x1E0DEE9E8];
  *(_QWORD *)(v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity) = a1;
  sub_1D2538510((uint64_t)a2, v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  sub_1D2538510((uint64_t)a3, v4 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FC80);
  swift_allocObject();
  v21 = a1;
  *(_QWORD *)(v4 + 16) = sub_1D26CC150();
  type metadata accessor for UnfairLock();
  v12 = swift_allocObject();
  v13 = (_DWORD *)swift_slowAlloc();
  *v13 = 0;
  *(_QWORD *)(v12 + 16) = v13;
  *(_QWORD *)(v4 + 24) = v12;
  sub_1D26CC798();
  v14 = a2[3];
  v15 = a2[4];
  __swift_project_boxed_opaque_existential_0(a2, v14);
  v16 = *(uint64_t (**)(uint64_t, uint64_t))(v15 + 16);
  swift_retain();
  v22 = v16(v14, v15);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B230);
  sub_1D2536488((unint64_t *)&qword_1ED96B228, &qword_1ED96B230, MEMORY[0x1E0C95D90]);
  sub_1D26CC288();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  if (qword_1ED9625F0 != -1)
    swift_once();
  v22 = qword_1ED9636E8;
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963470);
  sub_1D2536488(&qword_1ED963468, &qword_1ED963470, MEMORY[0x1E0C95F48]);
  v22 = sub_1D26CC204();
  swift_retain();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963450);
  v17 = MEMORY[0x1E0C95D90];
  sub_1D2536488(&qword_1ED963448, &qword_1ED963450, MEMORY[0x1E0C95D90]);
  sub_1D26CC24C();
  swift_release();
  swift_release();
  sub_1D2536488(&qword_1ED9633F8, &qword_1ED963400, MEMORY[0x1E0C95AD0]);
  swift_retain();
  sub_1D26CC288();
  swift_release();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  v18 = a3[3];
  v19 = a3[4];
  __swift_project_boxed_opaque_existential_0(a3, v18);
  v22 = (*(uint64_t (**)(uint64_t, uint64_t))(v19 + 64))(v18, v19);
  swift_allocObject();
  swift_weakInit();
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED961B58);
  sub_1D2536488((unint64_t *)&qword_1ED961B50, (uint64_t *)&unk_1ED961B58, v17);
  sub_1D26CC288();
  swift_release();
  swift_release();
  swift_beginAccess();
  sub_1D26CC0FC();
  swift_endAccess();
  swift_release();
  sub_1D2646B48(1);
  swift_release();

  __swift_destroy_boxed_opaque_existential_1((uint64_t)a3);
  __swift_destroy_boxed_opaque_existential_1((uint64_t)a2);
  return v4;
}

uint64_t sub_1D2646780()
{
  uint64_t result;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    sub_1D2646B48(0);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D26467D8(unint64_t *a1, uint64_t a2)
{
  unint64_t v2;
  void *v3;
  id v4;
  char v5;

  v2 = *a1;
  if (!*a1)
    return 0;
  v3 = *(void **)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
  swift_bridgeObjectRetain();
  v4 = v3;
  v5 = sub_1D2686B14((uint64_t)v4, v2);
  swift_bridgeObjectRelease();

  return v5 & 1;
}

uint64_t sub_1D2646840(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  NSObject *v4;
  os_log_type_t v5;
  uint8_t *v6;
  _QWORD *v7;
  id v8;
  void *v10;

  if (qword_1ED9621C8 != -1)
    swift_once();
  v3 = sub_1D26CC09C();
  __swift_project_value_buffer(v3, (uint64_t)qword_1ED977D08);
  swift_retain_n();
  v4 = sub_1D26CC084();
  v5 = sub_1D26CDD04();
  if (os_log_type_enabled(v4, v5))
  {
    v6 = (uint8_t *)swift_slowAlloc();
    v7 = (_QWORD *)swift_slowAlloc();
    *(_DWORD *)v6 = 138543362;
    v10 = *(void **)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
    v8 = v10;
    sub_1D26CDF50();
    *v7 = v10;
    swift_release_n();
    _os_log_impl(&dword_1D2531000, v4, v5, "Per app language override changed for extension: %{public}@", v6, 0xCu);
    __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v7, -1, -1);
    MEMORY[0x1D823A5E0](v6, -1, -1);

  }
  else
  {

    swift_release_n();
  }
  return sub_1D2646B48(0);
}

uint64_t sub_1D26469EC(uint64_t *a1)
{
  uint64_t v1;
  uint64_t result;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  void *v7;
  char v8;
  __int128 v9;
  uint64_t v10;
  uint64_t v11;
  _OWORD v12[2];
  uint64_t v13;

  v1 = *a1;
  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v3 = *(_QWORD *)(v1 + 16);
    if (v3)
    {
      v4 = v1 + 32;
      sub_1D257C290();
      swift_bridgeObjectRetain();
      while (1)
      {
        sub_1D2538510(v4, (uint64_t)&v9);
        v5 = v10;
        v6 = v11;
        __swift_project_boxed_opaque_existential_0(&v9, v10);
        v7 = (void *)(*(uint64_t (**)(uint64_t, uint64_t))(v6 + 40))(v5, v6);
        v8 = sub_1D26CDECC();

        if ((v8 & 1) != 0)
          break;
        __swift_destroy_boxed_opaque_existential_1((uint64_t)&v9);
        v4 += 40;
        if (!--v3)
        {
          swift_bridgeObjectRelease();
          goto LABEL_7;
        }
      }
      swift_bridgeObjectRelease();
      sub_1D2538F38(&v9, (uint64_t)v12);
      sub_1D253703C((uint64_t)v12, &qword_1ED962040);
      sub_1D2646B48(0);
      return swift_release();
    }
    else
    {
LABEL_7:
      v13 = 0;
      memset(v12, 0, sizeof(v12));
      swift_release();
      return sub_1D253703C((uint64_t)v12, &qword_1ED962040);
    }
  }
  return result;
}

uint64_t sub_1D2646B48(char a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  unint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  char v16;
  uint64_t *v17;
  unint64_t v18;
  uint64_t v19;
  uint64_t v20;
  unint64_t v21;
  char v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  _QWORD v29[2];
  _BYTE v30[40];
  __int128 v31;
  __int128 v32;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v29[-1] - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9632F8);
  v8 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v10 = (char *)&v29[-1] - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v11 = *(_QWORD *)(v2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity)
      + *MEMORY[0x1E0D0FE18];
  swift_beginAccess();
  sub_1D2647B54(v11, (uint64_t)v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) == 1)
  {
    sub_1D253703C((uint64_t)v6, &qword_1ED963300);
    goto LABEL_10;
  }
  (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
  __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED963998);
  v12 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  v13 = swift_allocObject();
  *(_OWORD *)(v13 + 16) = xmmword_1D26D1280;
  (*(void (**)(unint64_t, char *, uint64_t))(v8 + 16))(v13 + v12, v10, v7);
  v14 = _sSo8NSLocaleC9ChronoKitE18currentLocaleToken3forSDy0B8Services15TypedIdentifierVyAF0J4TypeO6BundleO9ContainerOGAC0eF10DescriptorVGSayAOG_tFZ_0(v13);
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  if (!*(_QWORD *)(v14 + 16))
    goto LABEL_8;
  v15 = sub_1D258989C((uint64_t)v10);
  if ((v16 & 1) == 0)
    goto LABEL_8;
  v17 = (uint64_t *)(*(_QWORD *)(v14 + 56) + 24 * v15);
  v19 = *v17;
  v18 = v17[1];
  v20 = v17[2];
  sub_1D253FE08(*v17, v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  strcpy((char *)v29, "AppleLanguages");
  HIBYTE(v29[1]) = -18;
  sub_1D26CE064();
  if (*(_QWORD *)(v20 + 16) && (v21 = sub_1D25894D4((uint64_t)v30), (v22 & 1) != 0))
  {
    sub_1D2537950(*(_QWORD *)(v20 + 56) + 32 * v21, (uint64_t)&v31);
  }
  else
  {
    v31 = 0u;
    v32 = 0u;
  }
  sub_1D258AEF0((uint64_t)v30);
  if (!*((_QWORD *)&v32 + 1))
  {
    sub_1D253EE04(v19, v18);
    swift_bridgeObjectRelease();
    sub_1D253703C((uint64_t)&v31, &qword_1ED96FCE0);
    goto LABEL_9;
  }
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96BF70);
  if ((swift_dynamicCast() & 1) == 0)
  {
    sub_1D253EE04(v19, v18);
LABEL_8:
    swift_bridgeObjectRelease();
LABEL_9:
    (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    goto LABEL_10;
  }
  v26 = *(_QWORD *)(v29[0] + 16);
  v27 = swift_bridgeObjectRelease();
  if (v26)
  {
    MEMORY[0x1E0C80A78](v27);
    *(&v28 - 6) = v2;
    *(&v28 - 5) = v19;
    *(&v28 - 4) = v18;
    *(&v28 - 3) = v20;
    *((_BYTE *)&v28 - 16) = a1 & 1;
    sub_1D253FE08(v19, v18);
    swift_bridgeObjectRetain();
    sub_1D2646170((void (*)(_BYTE *))sub_1D2647B9C);
    sub_1D253EE04(v19, v18);
    swift_bridgeObjectRelease();
    sub_1D253EE04(v19, v18);
    swift_bridgeObjectRelease();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1D253EE04(v19, v18);
  swift_bridgeObjectRelease();
LABEL_10:
  v23 = swift_retain();
  return sub_1D26A55D0(v23, v2, 0, 0, 0, a1 & 1, v24);
}

uint64_t sub_1D2646F44(NSObject *a1, uint64_t a2, uint64_t a3, unint64_t a4, uint64_t a5, int a6)
{
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  char *v16;
  _QWORD *v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  unint64_t v24;
  char v25;
  char v26;
  uint64_t v27;
  void (*v28)(NSObject *, uint64_t);
  NSObject *v29;
  unint64_t v30;
  NSObject *v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  NSObject *v35;
  os_log_type_t v36;
  int v37;
  NSObject *v38;
  _QWORD *v39;
  uint64_t v40;
  uint64_t v41;
  unint64_t v42;
  void *v43;
  id v44;
  uint8_t *v45;
  os_log_t v46;
  _QWORD *v47;
  uint64_t v48;
  NSObject *v49;
  uint64_t v50;
  uint64_t v51;
  unint64_t v52;
  unint64_t v53;
  uint64_t v54;
  unint64_t v55;
  unint64_t v56;
  char v57;
  char v58;
  uint64_t v59;
  uint64_t v60;
  NSObject *v61;
  os_log_type_t v62;
  uint8_t *v63;
  void *v64;
  id v65;
  os_log_t v66;
  NSObject *v67;
  uint64_t v69;
  _QWORD *v70;
  int v71;
  os_log_t v72;
  uint64_t v73;
  NSObject *v74;
  char *v75;
  uint64_t v76;
  uint64_t v77;
  NSObject *v78;
  uint64_t v79;
  uint64_t v80[3];

  LODWORD(v76) = a6;
  v11 = sub_1D26CC7A4();
  v12 = *(_QWORD *)(v11 - 8);
  v13 = MEMORY[0x1E0C80A78](v11);
  v74 = ((char *)&v69 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  MEMORY[0x1E0C80A78](v13);
  v16 = (char *)&v69 - v15;
  v77 = a2;
  v17 = (_QWORD *)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  v18 = *(_QWORD *)(a2 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider + 24);
  v19 = v17[4];
  __swift_project_boxed_opaque_existential_0(v17, v18);
  (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v19);
  v78 = a1;
  v20 = a5;
  v21 = sub_1D26CC684();
  v23 = v21;
  v24 = v22;
  if (!a5)
  {
    v73 = a3;
    v30 = a4;
    sub_1D2541EBC(v21, v22);
    sub_1D2541EBC(0, 0xF000000000000000);
    v31 = v74;
    (*(void (**)(NSObject *, char *, uint64_t))(v12 + 16))(v74, v16, v11);
    v27 = v12;
    if ((v76 & 1) != 0)
    {
      v28 = *(void (**)(NSObject *, uint64_t))(v12 + 8);
      v28(v31, v11);
    }
    else
    {
      v75 = v16;
      v49 = v31;
      v50 = sub_1D26CC684();
      v76 = v27;
      v51 = v50;
      v53 = v52;
      v54 = sub_1D26CC684();
      v56 = v55;
      sub_1D259E340(v51, v53);
      v58 = v57;
      sub_1D253EE04(v54, v56);
      v59 = v51;
      v27 = v76;
      sub_1D253EE04(v59, v53);
      v28 = *(void (**)(NSObject *, uint64_t))(v27 + 8);
      v28(v49, v11);
      if ((v58 & 1) == 0)
      {
        if (qword_1ED9621C8 != -1)
          swift_once();
        v60 = sub_1D26CC09C();
        __swift_project_value_buffer(v60, (uint64_t)qword_1ED977D08);
        swift_retain_n();
        v61 = sub_1D26CC084();
        v62 = sub_1D26CDD04();
        v74 = v61;
        if (os_log_type_enabled(v61, v62))
        {
          v63 = (uint8_t *)swift_slowAlloc();
          v72 = (os_log_t)swift_slowAlloc();
          *(_DWORD *)v63 = 138543362;
          v64 = *(void **)(v77 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
          v80[0] = (uint64_t)v64;
          v65 = v64;
          sub_1D26CDF50();
          v66 = v72;
          v72->isa = (Class)v64;
          v29 = v78;
          v28(v78, v11);
          swift_release_n();
          v67 = v74;
          _os_log_impl(&dword_1D2531000, v74, v62, "No language override found for %{public}@", v63, 0xCu);
          __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
          swift_arrayDestroy();
          MEMORY[0x1D823A5E0](v66, -1, -1);
          MEMORY[0x1D823A5E0](v63, -1, -1);

        }
        else
        {
          swift_release_n();

          v29 = v78;
          v28(v78, v11);
        }
        v16 = v75;
        v27 = v76;
        a4 = v30;
        goto LABEL_21;
      }
      v16 = v75;
      a4 = v30;
    }
    v29 = v78;
    v28(v78, v11);
LABEL_21:
    a3 = v73;
    goto LABEL_22;
  }
  v75 = v16;
  v76 = v12;
  sub_1D253FE08(a3, a4);
  sub_1D259E340(v23, v24);
  v26 = v25;
  sub_1D253EE04(a3, a4);
  sub_1D253EE04(v23, v24);
  if ((v26 & 1) != 0)
  {
    v27 = v76;
    v28 = *(void (**)(NSObject *, uint64_t))(v76 + 8);
    v29 = v78;
    v28(v78, v11);
    v16 = v75;
  }
  else
  {
    sub_1D253FE08(a3, a4);
    v32 = qword_1ED9621C8;
    swift_bridgeObjectRetain();
    v33 = v77;
    if (v32 != -1)
      swift_once();
    v34 = sub_1D26CC09C();
    __swift_project_value_buffer(v34, (uint64_t)qword_1ED977D08);
    sub_1D2647BAC(a3, a4, a5);
    swift_retain();
    sub_1D2647BAC(a3, a4, a5);
    swift_retain();
    v35 = sub_1D26CC084();
    v36 = sub_1D26CDD04();
    v37 = v36;
    if (os_log_type_enabled(v35, v36))
    {
      v38 = swift_slowAlloc();
      v39 = (_QWORD *)swift_slowAlloc();
      v70 = v39;
      v40 = swift_slowAlloc();
      v73 = v40;
      v74 = v38;
      LODWORD(v38->isa) = 138543618;
      v72 = v35;
      v41 = a3;
      v42 = a4;
      v43 = *(void **)(v33 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity);
      v71 = v37;
      v79 = v40;
      v80[0] = (uint64_t)v43;
      v44 = v43;
      sub_1D26CDF50();
      *v39 = v43;
      a4 = v42;
      a3 = v41;
      swift_release_n();
      v45 = (uint8_t *)v74;
      WORD2(v74[1].isa) = 2082;
      v80[0] = 0;
      v80[1] = 0xE000000000000000;
      sub_1D253FE08(v41, a4);
      swift_bridgeObjectRetain();
      sub_1D26CE0A0();
      swift_bridgeObjectRelease();
      strcpy((char *)v80, "<LocaleToken: ");
      HIBYTE(v80[1]) = -18;
      sub_1D26CB8D4();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      v69 = MEMORY[0x1E0DEE9B8] + 8;
      sub_1D26CD800();
      sub_1D26CDA04();
      swift_bridgeObjectRelease();
      sub_1D26CDA04();
      sub_1D25E7E14(v41, a4, v20);
      v80[0] = sub_1D2537880(v80[0], v80[1], &v79);
      sub_1D26CDF50();
      swift_bridgeObjectRelease();
      v27 = v76;
      v28 = *(void (**)(NSObject *, uint64_t))(v76 + 8);
      v29 = v78;
      v28(v78, v11);
      sub_1D25E7E14(v41, a4, v20);
      sub_1D25E7E14(v41, a4, v20);
      v46 = v72;
      _os_log_impl(&dword_1D2531000, v72, (os_log_type_t)v71, "Language override detected for %{public}@: %{public}s", v45, 0x16u);
      __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96C780);
      v47 = v70;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v47, -1, -1);
      v48 = v73;
      swift_arrayDestroy();
      MEMORY[0x1D823A5E0](v48, -1, -1);
      MEMORY[0x1D823A5E0](v74, -1, -1);

      sub_1D25E7E14(a3, a4, v20);
    }
    else
    {

      sub_1D25E7E14(a3, a4, a5);
      sub_1D25E7E14(a3, a4, a5);
      swift_release_n();
      sub_1D25E7E14(a3, a4, a5);
      v27 = v76;
      v28 = *(void (**)(NSObject *, uint64_t))(v76 + 8);
      v29 = v78;
      v28(v78, v11);
    }
    v16 = v75;
  }
LABEL_22:
  (*(void (**)(NSObject *, char *, uint64_t))(v27 + 16))(v29, v16, v11);
  v80[0] = a3;
  v80[1] = a4;
  v80[2] = v20;
  sub_1D2647720(v80);
  return ((uint64_t (*)(char *, uint64_t))v28)(v16, v11);
}

uint64_t sub_1D2647720(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  _QWORD v20[3];
  uint64_t v21;
  uint64_t v22;
  __int128 v23;
  uint64_t v24;
  uint64_t v25;
  _QWORD v26[3];
  uint64_t v27;
  uint64_t v28;

  v2 = *a1;
  v3 = a1[1];
  v4 = a1[2];
  v5 = v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager;
  v6 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager + 24);
  v7 = *(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager + 32);
  __swift_project_boxed_opaque_existential_0((_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager), v6);
  ExtensionManaging.extension(for:)(*(_QWORD *)(v1 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionIdentity), v6, v7);
  if (!v24)
    return sub_1D253703C((uint64_t)&v23, &qword_1ED962040);
  sub_1D2538F38(&v23, (uint64_t)v26);
  if (v4)
  {
    sub_1D253FE08(v2, v3);
    sub_1D26CC690();
  }
  swift_beginAccess();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  sub_1D26CBC88();
  swift_endAccess();
  v8 = v27;
  v9 = v28;
  __swift_project_boxed_opaque_existential_0(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v9 + 216))(v8, v9);
  v10 = v27;
  v11 = v28;
  __swift_project_boxed_opaque_existential_0(v26, v27);
  (*(void (**)(uint64_t, uint64_t))(v11 + 224))(v10, v11);
  sub_1D26CD26C();
  swift_allocObject();
  sub_1D26CD260();
  swift_retain();
  sub_1D26CC63C();
  sub_1D2538510(v5, (uint64_t)v20);
  v12 = v21;
  v13 = v22;
  __swift_project_boxed_opaque_existential_0(v20, v21);
  swift_beginAccess();
  v14 = sub_1D26CBC88();
  v16 = v15;
  swift_endAccess();
  (*(void (**)(__int128 *__return_ptr, uint64_t, uint64_t, uint64_t, uint64_t))(v13 + 40))(&v23, v14, v16, v12, v13);
  swift_bridgeObjectRelease();
  v17 = v24;
  if (v24)
  {
    v18 = v25;
    __swift_project_boxed_opaque_existential_0(&v23, v24);
    (*(void (**)(uint64_t, uint64_t))(v18 + 208))(v17, v18);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)&v23);
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
  }
  else
  {
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v20);
    sub_1D253703C((uint64_t)&v23, &qword_1ED962040);
  }
  sub_1D26CC678();
  swift_release();
  return __swift_destroy_boxed_opaque_existential_1((uint64_t)v26);
}

uint64_t sub_1D26479C8()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2647A14()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;

  swift_release();
  swift_release();
  v1 = v0 + OBJC_IVAR____TtC9ChronoKit19EnvironmentProvider__lock_environmentValues;
  v2 = sub_1D26CC7A4();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(v1, v2);
  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__extensionManager);

  __swift_destroy_boxed_opaque_existential_1(v0 + OBJC_IVAR____TtC9ChronoKit25BundleEnvironmentProvider__systemProvider);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D2647AB4()
{
  return type metadata accessor for BundleEnvironmentProvider();
}

uint64_t type metadata accessor for BundleEnvironmentProvider()
{
  uint64_t result;

  result = qword_1ED963720;
  if (!qword_1ED963720)
    return swift_getSingletonMetadata();
  return result;
}

uint64_t sub_1D2647AF8()
{
  return swift_updateClassMetadata2();
}

uint64_t sub_1D2647B54(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED963300);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D2647B9C(NSObject *a1)
{
  uint64_t v1;

  return sub_1D2646F44(a1, *(_QWORD *)(v1 + 16), *(_QWORD *)(v1 + 24), *(_QWORD *)(v1 + 32), *(_QWORD *)(v1 + 40), *(unsigned __int8 *)(v1 + 48));
}

uint64_t sub_1D2647BAC(uint64_t result, unint64_t a2, uint64_t a3)
{
  if (a3)
  {
    sub_1D253FE08(result, a2);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D2647BD8()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2647BFC()
{
  return sub_1D2646780();
}

uint64_t sub_1D2647C04(unint64_t *a1)
{
  uint64_t v1;

  return sub_1D26467D8(a1, v1);
}

uint64_t sub_1D2647C0C(uint64_t a1)
{
  uint64_t v1;

  return sub_1D2646840(a1, v1);
}

uint64_t sub_1D2647C14(uint64_t *a1)
{
  return sub_1D26469EC(a1);
}

uint64_t sub_1D2647C1C()
{
  return sub_1D2536488(&qword_1EFC832F8, &qword_1EFC83300, MEMORY[0x1E0DEC908]);
}

void sub_1D2647C48(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(*(_QWORD *)v1 + 16);
}

void (*sub_1D2647C58(void (**a1)(uint64_t *a1), _QWORD *a2))(uint64_t *a1)
{
  uint64_t v2;
  void (*result)(uint64_t *);
  void (*v6)(uint64_t *);
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  char v10;

  result = (void (*)(uint64_t *))malloc(0x28uLL);
  *a1 = result;
  if (*a2 >= *(_QWORD *)(*(_QWORD *)v2 + 16))
  {
    __break(1u);
  }
  else
  {
    v6 = result;
    v7 = *(_QWORD *)v2 + 40 * *a2;
    v8 = *(_QWORD *)(v7 + 48);
    *((_QWORD *)result + 3) = v8;
    v9 = *(_QWORD *)(v7 + 56);
    *((_QWORD *)result + 4) = v9;
    v10 = *(_BYTE *)(v7 + 64);
    *((_BYTE *)result + 17) = v10;
    swift_bridgeObjectRetain();
    sub_1D2541E98(v8, v9, v10);
    swift_bridgeObjectRelease();
    *(_QWORD *)v6 = v8;
    *((_QWORD *)v6 + 1) = v9;
    *((_BYTE *)v6 + 16) = v10;
    return sub_1D2647D04;
  }
  return result;
}

void sub_1D2647D04(uint64_t *a1)
{
  uint64_t v1;

  v1 = *a1;
  sub_1D253FBE8(*(_QWORD *)(*a1 + 24), *(_QWORD *)(v1 + 32), *(_BYTE *)(v1 + 17));
  free((void *)v1);
}

uint64_t *sub_1D2647D30@<X0>(uint64_t *result@<X0>, _QWORD *a2@<X8>)
{
  uint64_t **v2;
  uint64_t v3;
  uint64_t v4;

  v3 = *result;
  if (*result < 0 || (v4 = result[1], result = *v2, (*v2)[2] < v4))
  {
    __break(1u);
  }
  else
  {
    *a2 = v3;
    a2[1] = v4;
    a2[2] = result;
    return (uint64_t *)swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_1D2647D5C@<X0>(_QWORD *a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;

  v2 = *(_QWORD *)(*(_QWORD *)v1 + 16);
  *a1 = *(_QWORD *)v1;
  a1[1] = 0;
  a1[2] = v2;
  return swift_bridgeObjectRetain();
}

BOOL sub_1D2647D70()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16) == 0;
}

void sub_1D2647D84(uint64_t a1@<X8>)
{
  *(_QWORD *)a1 = 0;
  *(_WORD *)(a1 + 8) = 256;
}

uint64_t *sub_1D2647D94@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  uint64_t v3;
  unint64_t v4;
  unint64_t v5;

  if ((a2 & 0x8000000000000000) == 0)
  {
    v3 = *result;
    if (!a2)
    {
LABEL_6:
      *a3 = v3;
      return result;
    }
    v4 = v3 ^ 0x7FFFFFFFFFFFFFFFLL;
    v5 = a2 - 1;
    while (v4 > v5)
    {
      ++v3;
      if (!--a2)
        goto LABEL_6;
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1D2647DCC@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t result;
  char v6;

  result = sub_1D2648E38(*a1, a2, *a3);
  *(_QWORD *)a4 = result;
  *(_BYTE *)(a4 + 8) = v6 & 1;
  return result;
}

uint64_t *sub_1D2647E00(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t *v4;
  unint64_t v5;

  v2 = *result;
  v3 = *a2;
  if (*a2 < *result)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  if (*a2 == *result)
    return 0;
  v4 = (uint64_t *)(v3 - v2);
  if (v3 > v2)
  {
    result = 0;
    v5 = v3 + ~v2;
    while (v5 <= 0x7FFFFFFFFFFFFFFELL)
    {
      result = (uint64_t *)((char *)result + 1);
      if (v4 == result)
        return result;
    }
    __break(1u);
    goto LABEL_10;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t *sub_1D2647E58(uint64_t *result, uint64_t *a2)
{
  uint64_t v2;
  uint64_t v3;
  BOOL v4;
  BOOL v5;

  v2 = *result;
  v3 = a2[1];
  if (*result >= *a2)
  {
    v5 = __OFSUB__(v2, v3);
    v4 = v2 - v3 < 0;
  }
  else
  {
    v5 = 0;
    v4 = 0;
  }
  if (v4 == v5)
    __break(1u);
  return result;
}

_QWORD *sub_1D2647E74(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < *result)
    __break(1u);
  return result;
}

_QWORD *sub_1D2647E90(_QWORD *result, _QWORD *a2)
{
  if (*result < *a2 || a2[1] < result[1])
    __break(1u);
  return result;
}

_QWORD *sub_1D2647EAC@<X0>(_QWORD *result@<X0>, _QWORD *a2@<X8>)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    *a2 = *result + 1;
  return result;
}

_QWORD *sub_1D2647EC4(_QWORD *result)
{
  if (__OFADD__(*result, 1))
    __break(1u);
  else
    ++*result;
  return result;
}

void sub_1D2647EDC(_QWORD *a1@<X8>)
{
  _QWORD *v1;

  *a1 = *v1;
  a1[1] = 0;
}

uint64_t sub_1D2647EE8()
{
  uint64_t v0;

  return *(_QWORD *)(*(_QWORD *)v0 + 16);
}

uint64_t sub_1D2647EF4()
{
  return 2;
}

_QWORD *sub_1D2647EFC()
{
  uint64_t *v0;
  _QWORD *v1;

  v1 = sub_1D2591150(*v0);
  swift_bridgeObjectRelease();
  return v1;
}

_QWORD *sub_1D2647F30(_QWORD *a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;

  return sub_1D2648004(a1, a2, a3, *v3);
}

uint64_t sub_1D2647F38()
{
  return sub_1D26CDA7C();
}

unint64_t sub_1D2647F5C()
{
  unint64_t result;

  result = qword_1EFC83308;
  if (!qword_1EFC83308)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D8F04, &type metadata for SQLResult);
    atomic_store(result, (unint64_t *)&qword_1EFC83308);
  }
  return result;
}

uint64_t sub_1D2647FA0()
{
  return MEMORY[0x1E0DEB430];
}

uint64_t sub_1D2647FAC()
{
  return sub_1D2536488(&qword_1EFC83310, &qword_1EFC83318, MEMORY[0x1E0DEA228]);
}

uint64_t sub_1D2647FD8()
{
  return sub_1D2536488(&qword_1EFC83320, &qword_1EFC83328, MEMORY[0x1E0DEDE48]);
}

_QWORD *sub_1D2648004(_QWORD *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  char *v8;
  unint64_t v9;
  uint64_t v10;
  unint64_t v11;
  char v12;
  _QWORD *v14;

  if (!a2)
  {
LABEL_11:
    v5 = 0;
    goto LABEL_15;
  }
  v5 = a3;
  if (!a3)
  {
LABEL_15:
    *result = a4;
    result[1] = v5;
    return (_QWORD *)v5;
  }
  if ((a3 & 0x8000000000000000) == 0)
  {
    v6 = *(_QWORD *)(a4 + 16);
    if (v6)
    {
      v14 = result;
      v7 = a2;
      v8 = (char *)(a4 + 64);
      v9 = 1;
      while (1)
      {
        v10 = *((_QWORD *)v8 - 2);
        v11 = *((_QWORD *)v8 - 1);
        v12 = *v8;
        swift_bridgeObjectRetain();
        sub_1D2541E98(v10, v11, v12);
        result = (_QWORD *)swift_bridgeObjectRelease();
        *(_QWORD *)v7 = v10;
        *(_QWORD *)(v7 + 8) = v11;
        *(_BYTE *)(v7 + 16) = v12;
        if (v5 == v9)
          break;
        if (v6 == v9)
        {
          v5 = v6;
          break;
        }
        v8 += 40;
        v7 += 24;
        if (v9++ >= *(_QWORD *)(a4 + 16))
        {
          __break(1u);
          goto LABEL_11;
        }
      }
      result = v14;
    }
    else
    {
      v5 = 0;
    }
    goto LABEL_15;
  }
  __break(1u);
  return result;
}

_QWORD *sub_1D2648100(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2648344(a1, a2, a3, a4, &qword_1ED963C90, 0x1E0D10228, (unint64_t *)&qword_1EFC82A30);
}

uint64_t sub_1D264811C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  uint64_t v20;
  __int128 v21[2];
  __int128 v22[2];

  v5 = (_QWORD *)result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v13 = 0;
LABEL_36:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v13;
  }
  if (!a3)
  {
    v12 = 0;
    v13 = 0;
    goto LABEL_36;
  }
  if (a3 < 0)
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  v20 = -1 << *(_BYTE *)(a4 + 32);
  while (v9)
  {
    v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    sub_1D2538510(*(_QWORD *)(a4 + 56) + 40 * v16, (uint64_t)v21);
    sub_1D2538F38(v21, (uint64_t)v22);
    result = sub_1D2538F38(v22, v11);
    v11 += 40;
    if (v13 == a3)
    {
      v13 = a3;
LABEL_35:
      v7 = v20;
      goto LABEL_36;
    }
  }
  v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_38;
  }
  if (v17 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v17);
  if (v18)
    goto LABEL_23;
  v19 = v12 + 2;
  ++v12;
  if (v17 + 1 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_16;
  v12 = v17 + 1;
  if (v17 + 2 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 2));
  if (v18)
  {
    v17 += 2;
    goto LABEL_23;
  }
  v12 = v17 + 2;
  if (v17 + 3 >= v14)
    goto LABEL_34;
  v18 = *(_QWORD *)(v6 + 8 * (v17 + 3));
  if (v18)
  {
    v17 += 3;
    goto LABEL_23;
  }
  v19 = v17 + 4;
  v12 = v17 + 3;
  if (v17 + 4 >= v14)
  {
LABEL_34:
    v9 = 0;
    goto LABEL_35;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_16:
    v17 = v19;
LABEL_23:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
    goto LABEL_9;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v12 = v14 - 1;
      goto LABEL_34;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_23;
  }
LABEL_39:
  __break(1u);
  return result;
}

_QWORD *sub_1D2648328(_QWORD *a1, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  return sub_1D2648344(a1, a2, a3, a4, (unint64_t *)&qword_1ED96FEC8, 0x1E0D10188, (unint64_t *)&qword_1ED96D530);
}

_QWORD *sub_1D2648344(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4, unint64_t *a5, uint64_t a6, unint64_t *a7)
{
  uint64_t v7;
  _QWORD *v9;
  uint64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unint64_t v18;
  id v19;
  int64_t v20;
  unint64_t v21;
  int64_t v22;
  int64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  _QWORD *v27;
  uint64_t v28;
  _QWORD *v29;
  int64_t v30;
  void *v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  int64_t v36;
  unint64_t v37;

  v7 = a4;
  v9 = a2;
  v29 = result;
  if ((a4 & 0xC000000000000001) != 0)
  {
    sub_1D26CE004();
    sub_1D2539514(0, a5);
    sub_1D2648F08(a7, a5);
    result = (_QWORD *)sub_1D26CDC20();
    v7 = v33;
    v12 = v34;
    v13 = v35;
    v14 = v36;
    v15 = v37;
    if (v9)
      goto LABEL_3;
LABEL_36:
    v16 = 0;
    goto LABEL_38;
  }
  v14 = 0;
  v24 = -1 << *(_BYTE *)(a4 + 32);
  v12 = a4 + 56;
  v13 = ~v24;
  v25 = -v24;
  if (v25 < 64)
    v26 = ~(-1 << v25);
  else
    v26 = -1;
  v15 = v26 & *(_QWORD *)(a4 + 56);
  if (!a2)
    goto LABEL_36;
LABEL_3:
  if (!a3)
  {
    v16 = 0;
LABEL_38:
    v27 = v29;
LABEL_41:
    *v27 = v7;
    v27[1] = v12;
    v27[2] = v13;
    v27[3] = v14;
    v27[4] = v15;
    return (_QWORD *)v16;
  }
  if (a3 < 0)
    goto LABEL_48;
  v16 = 0;
  v30 = (unint64_t)(v13 + 64) >> 6;
  v28 = v13;
  while (1)
  {
    if (v7 < 0)
    {
      if (!sub_1D26CE034())
        goto LABEL_40;
      sub_1D2539514(0, a5);
      swift_unknownObjectRetain();
      swift_dynamicCast();
      v19 = v32;
      result = (_QWORD *)swift_unknownObjectRelease();
      if (!v32)
        goto LABEL_40;
      goto LABEL_8;
    }
    if (v15)
    {
      v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      v18 = v17 | (v14 << 6);
      goto LABEL_7;
    }
    v20 = v14 + 1;
    if (__OFADD__(v14, 1))
      break;
    if (v20 >= v30)
    {
      v15 = 0;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v20);
    if (v21)
      goto LABEL_23;
    v22 = v14 + 2;
    if (v14 + 2 >= v30)
    {
      v15 = 0;
      ++v14;
      goto LABEL_40;
    }
    v21 = *(_QWORD *)(v12 + 8 * v22);
    if (!v21)
    {
      if (v14 + 3 >= v30)
        goto LABEL_44;
      v21 = *(_QWORD *)(v12 + 8 * (v14 + 3));
      if (v21)
      {
        v20 = v14 + 3;
        goto LABEL_23;
      }
      v22 = v14 + 4;
      if (v14 + 4 >= v30)
      {
        v15 = 0;
        v14 += 3;
        goto LABEL_40;
      }
      v21 = *(_QWORD *)(v12 + 8 * v22);
      if (!v21)
      {
        v20 = v14 + 5;
        if (v14 + 5 >= v30)
        {
LABEL_44:
          v15 = 0;
          v14 = v22;
          goto LABEL_40;
        }
        v21 = *(_QWORD *)(v12 + 8 * v20);
        if (!v21)
        {
          v23 = v14 + 6;
          while (v30 != v23)
          {
            v21 = *(_QWORD *)(v12 + 8 * v23++);
            if (v21)
            {
              v20 = v23 - 1;
              goto LABEL_23;
            }
          }
          v15 = 0;
          v14 = v30 - 1;
          goto LABEL_40;
        }
        goto LABEL_23;
      }
    }
    v20 = v22;
LABEL_23:
    v15 = (v21 - 1) & v21;
    v18 = __clz(__rbit64(v21)) + (v20 << 6);
    v14 = v20;
LABEL_7:
    result = *(id *)(*(_QWORD *)(v7 + 48) + 8 * v18);
    v19 = result;
    if (!result)
      goto LABEL_40;
LABEL_8:
    ++v16;
    *v9++ = v19;
    if (v16 == a3)
    {
      v16 = a3;
LABEL_40:
      v13 = v28;
      v27 = v29;
      goto LABEL_41;
    }
  }
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

_QWORD *sub_1D264863C(_QWORD *result, _QWORD *a2, uint64_t a3, uint64_t a4)
{
  _QWORD *v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  uint64_t v10;
  _QWORD *v11;
  int64_t v12;
  uint64_t v13;
  int64_t v14;
  unint64_t v15;
  unint64_t v16;
  int64_t v17;
  unint64_t v18;
  int64_t v19;
  void *v20;
  id v21;

  v5 = result;
  v6 = a4 + 64;
  v7 = -1 << *(_BYTE *)(a4 + 32);
  if (-v7 < 64)
    v8 = ~(-1 << -(char)v7);
  else
    v8 = -1;
  v9 = v8 & *(_QWORD *)(a4 + 64);
  if (!a2)
  {
    v12 = 0;
    v10 = 0;
LABEL_38:
    *v5 = a4;
    v5[1] = v6;
    v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (_QWORD *)v10;
  }
  v10 = a3;
  if (!a3)
  {
    v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  v11 = a2;
  v12 = 0;
  v13 = 0;
  v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9)
    goto LABEL_9;
LABEL_8:
  v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    v20 = *(void **)(*(_QWORD *)(a4 + 48) + 8 * v16);
    *v11 = v20;
    if (v13 == v10)
    {
      v21 = v20;
      goto LABEL_38;
    }
    ++v11;
    result = v20;
    if (v9)
      goto LABEL_8;
LABEL_9:
    v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14)
      goto LABEL_33;
    v18 = *(_QWORD *)(v6 + 8 * v17);
    if (!v18)
      break;
LABEL_18:
    v9 = (v18 - 1) & v18;
    v16 = __clz(__rbit64(v18)) + (v17 << 6);
    v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    v9 = 0;
    v12 = v17;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
    goto LABEL_14;
  v19 = v17 + 2;
  if (v17 + 2 >= v14)
    goto LABEL_33;
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
    goto LABEL_17;
  v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    v9 = 0;
    v12 = v17 + 2;
    goto LABEL_37;
  }
  v18 = *(_QWORD *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    v17 = v12;
    goto LABEL_18;
  }
  v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    v9 = 0;
LABEL_37:
    v10 = v13;
    goto LABEL_38;
  }
  v18 = *(_QWORD *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    v17 = v19 + 1;
    if (__OFADD__(v19, 1))
      break;
    if (v17 >= v14)
    {
      v9 = 0;
      v12 = v14 - 1;
      goto LABEL_37;
    }
    v18 = *(_QWORD *)(v6 + 8 * v17);
    ++v19;
    if (v18)
      goto LABEL_18;
  }
LABEL_41:
  __break(1u);
  return result;
}

unint64_t sub_1D2648834(uint64_t a1)
{
  int64_t v1;
  unint64_t v2;
  uint64_t i;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char v9;
  uint64_t v10;
  uint64_t v11;
  char v12;
  unint64_t v13;
  unint64_t v14;
  unint64_t v15;
  _QWORD *v16;
  int64_t v18;
  _BYTE v19[32];
  _QWORD v20[2];
  _BYTE v21[32];
  unint64_t v22;

  v1 = *(_QWORD *)(a1 + 16);
  v2 = MEMORY[0x1E0DEE9D8];
  if (v1)
  {
    v22 = MEMORY[0x1E0DEE9D8];
    sub_1D2584328(0, v1, 0);
    for (i = a1 + 32; ; i += 48)
    {
      sub_1D2648F48(i, (uint64_t)v20);
      v5 = v20[0];
      v6 = v20[1];
      sub_1D2537950((uint64_t)v21, (uint64_t)v19);
      v7 = sub_1D25C6AD8((uint64_t)v19);
      if (v9 == -1)
        break;
      v10 = v7;
      v11 = v8;
      v12 = v9;
      sub_1D2537950((uint64_t)v21, (uint64_t)v19);
      swift_bridgeObjectRetain();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
      sub_1D253703C((uint64_t)v20, &qword_1ED962088);
      v2 = v22;
      v18 = v1;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_1D2584328(0, *(_QWORD *)(v2 + 16) + 1, 1);
        v2 = v22;
      }
      v14 = *(_QWORD *)(v2 + 16);
      v13 = *(_QWORD *)(v2 + 24);
      if (v14 >= v13 >> 1)
      {
        sub_1D2584328(v13 > 1, v14 + 1, 1);
        v2 = v22;
      }
      *(_QWORD *)(v2 + 16) = v14 + 1;
      v15 = v2 + 40 * v14;
      *(_QWORD *)(v15 + 32) = v5;
      *(_QWORD *)(v15 + 40) = v6;
      *(_QWORD *)(v15 + 48) = v10;
      *(_QWORD *)(v15 + 56) = v11;
      *(_BYTE *)(v15 + 64) = v12;
      v1 = v18 - 1;
      if (v18 == 1)
        return v2;
    }
    sub_1D2537950((uint64_t)v21, (uint64_t)v19);
    sub_1D26CE0A0();
    swift_bridgeObjectRelease();
    sub_1D26CE508();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    v2 = 0xD00000000000002ELL;
    __swift_destroy_boxed_opaque_existential_1((uint64_t)v19);
    sub_1D2648F90();
    swift_allocError();
    *v16 = 0xD00000000000002ELL;
    v16[1] = 0x80000001D26E37D0;
    swift_willThrow();
    sub_1D253703C((uint64_t)v20, &qword_1ED962088);
    swift_release();
  }
  return v2;
}

unint64_t sub_1D2648A98(void *a1)
{
  uint64_t v1;
  unint64_t v3;
  unint64_t v4;
  _QWORD *v5;
  id v6;
  void *v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  unint64_t v11;
  unint64_t v12;
  _OWORD *v13;
  __int128 v14;
  uint64_t v15;
  unint64_t v16;
  __int128 v18;
  _OWORD v19[2];
  uint64_t v20;
  uint64_t v21;
  _OWORD v22[2];
  __int128 v23;
  _BYTE v24[32];
  _OWORD v25[2];

  v3 = (unint64_t)objc_msgSend(a1, sel_count);
  if ((v3 & 0x8000000000000000) != 0)
    goto LABEL_14;
  v4 = v3;
  if (v3)
  {
    v1 = 0;
    v5 = (_QWORD *)MEMORY[0x1E0DEE9D8];
    while (v4 != v1)
    {
      v6 = objc_msgSend(a1, sel_keyAtIndex_, v1);
      if (!v6)
        goto LABEL_15;
      v7 = v6;
      v8 = sub_1D26CD938();
      v10 = v9;

      if (!objc_msgSend(a1, sel_objectAtIndex_, v1))
      {
        *(_QWORD *)&v23 = 0;
        *((_QWORD *)&v23 + 1) = 0xE000000000000000;
        sub_1D26CE0A0();
        sub_1D26CDA04();
        sub_1D26CDA04();
        goto LABEL_17;
      }
      sub_1D26CDFA4();
      swift_unknownObjectRelease();
      sub_1D2538448(&v23, v25);
      *(_QWORD *)&v23 = v8;
      *((_QWORD *)&v23 + 1) = v10;
      sub_1D2537950((uint64_t)v25, (uint64_t)v24);
      v20 = v8;
      v21 = v10;
      sub_1D2537950((uint64_t)v24, (uint64_t)v22);
      *(_QWORD *)&v18 = v8;
      *((_QWORD *)&v18 + 1) = v10;
      sub_1D2538448(v22, v19);
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v5 = sub_1D25617F0(0, v5[2] + 1, 1, v5);
      v12 = v5[2];
      v11 = v5[3];
      if (v12 >= v11 >> 1)
        v5 = sub_1D25617F0((_QWORD *)(v11 > 1), v12 + 1, 1, v5);
      ++v1;
      v5[2] = v12 + 1;
      v13 = &v5[6 * v12];
      v14 = v19[1];
      v13[3] = v19[0];
      v13[4] = v14;
      v13[2] = v18;
      sub_1D253703C((uint64_t)&v23, &qword_1ED9620A8);
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v25);
      if (v4 == v1)
        goto LABEL_12;
    }
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    *(_QWORD *)&v23 = 0;
    *((_QWORD *)&v23 + 1) = 0xE000000000000000;
    sub_1D26CE0A0();
    sub_1D26CDA04();
    v20 = v1;
    sub_1D26CE370();
    sub_1D26CDA04();
    swift_bridgeObjectRelease();
    while (1)
    {
LABEL_17:
      sub_1D26CE1D8();
      __break(1u);
      swift_bridgeObjectRelease();
      *(_QWORD *)&v23 = 0;
      *((_QWORD *)&v23 + 1) = 0xE000000000000000;
      sub_1D26CE0A0();
      sub_1D26CDA04();
      v20 = v1;
      __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96C110);
      sub_1D26CE190();
    }
  }
LABEL_12:
  v15 = swift_bridgeObjectRetain();
  v16 = sub_1D2648834(v15);

  swift_bridgeObjectRelease_n();
  return v16;
}

uint64_t sub_1D2648E38(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v7;
  int64x2_t v8;
  int64x2_t v9;
  int64x2_t v10;
  unint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;

  if (a2 < 0)
  {
LABEL_21:
    __break(1u);
    return result;
  }
  if (a2)
  {
    v3 = a3 - result;
    if (a3 - result >= (unint64_t)(a2 - 1))
      v3 = a2 - 1;
    if (v3 >= (result ^ 0x7FFFFFFFFFFFFFFFuLL))
      v3 = result ^ 0x7FFFFFFFFFFFFFFFLL;
    v4 = v3 + 1;
    if (v4 >= 5)
    {
      v7 = v4 & 3;
      if ((v4 & 3) == 0)
        v7 = 4;
      v5 = v4 - v7;
      v8 = 0uLL;
      v9 = (int64x2_t)(unint64_t)result;
      v10 = vdupq_n_s64(1uLL);
      v11 = v5;
      do
      {
        v9 = vaddq_s64(v9, v10);
        v8 = vaddq_s64(v8, v10);
        v11 -= 4;
      }
      while (v11);
      v6 = vaddvq_s64(vaddq_s64(v8, v9));
    }
    else
    {
      v5 = 0;
      v6 = result;
    }
    v12 = v5 + result - 0x7FFFFFFFFFFFFFFFLL;
    v13 = v5 + result - a3;
    v14 = a2 - v5;
    result = v6;
    while (1)
    {
      if (!v13)
        return 0;
      if (!v12)
        break;
      ++result;
      ++v12;
      ++v13;
      if (!--v14)
        return result;
    }
    __break(1u);
    goto LABEL_21;
  }
  return result;
}

uint64_t sub_1D2648F08(unint64_t *a1, unint64_t *a2)
{
  uint64_t result;
  uint64_t v4;

  result = *a1;
  if (!result)
  {
    v4 = sub_1D2539514(255, a2);
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0DEFCF8], v4);
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1D2648F48(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_1D2648F90()
{
  unint64_t result;

  result = qword_1EFC83330;
  if (!qword_1EFC83330)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D9070, &type metadata for SQLResultError);
    atomic_store(result, (unint64_t *)&qword_1EFC83330);
  }
  return result;
}

ValueMetadata *type metadata accessor for SQLResultError()
{
  return &type metadata for SQLResultError;
}

ValueMetadata *type metadata accessor for SQLResult()
{
  return &type metadata for SQLResult;
}

uint64_t storeEnumTagSinglePayload for SQLResultError.Code(uint64_t a1, int a2, int a3)
{
  int v3;
  uint64_t v4;

  if ((a3 + 1) >= 0x10000)
    v3 = 4;
  else
    v3 = 2;
  if ((a3 + 1) < 0x100)
    LODWORD(v4) = 1;
  else
    LODWORD(v4) = v3;
  if (a3)
    v4 = v4;
  else
    v4 = 0;
  if (a2)
    return ((uint64_t (*)(void))((char *)sub_1D2649034 + 4 * byte_1D26D8EF8[v4]))();
  else
    return ((uint64_t (*)(void))((char *)sub_1D2649054 + 4 * byte_1D26D8EFD[v4]))();
}

_BYTE *sub_1D2649034(_BYTE *result, char a2)
{
  *result = a2;
  return result;
}

_BYTE *sub_1D2649054(_BYTE *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D264905C(_DWORD *result, int a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D2649064(_WORD *result, __int16 a2)
{
  *result = a2;
  return result;
}

_WORD *sub_1D264906C(_WORD *result)
{
  *result = 0;
  return result;
}

_DWORD *sub_1D2649074(_DWORD *result)
{
  *result = 0;
  return result;
}

ValueMetadata *type metadata accessor for SQLResultError.Code()
{
  return &type metadata for SQLResultError.Code;
}

unint64_t sub_1D2649094()
{
  unint64_t result;

  result = qword_1EFC83338;
  if (!qword_1EFC83338)
  {
    result = MEMORY[0x1D823A4E4](&unk_1D26D90F8, &type metadata for SQLResultError.Code);
    atomic_store(result, (unint64_t *)&qword_1EFC83338);
  }
  return result;
}

dispatch_time_t CHDMonotonicTime.init()@<X0>(dispatch_time_t *a1@<X8>)
{
  dispatch_time_t result;

  result = CHDMonotonicTimeFromNow(0);
  *a1 = result;
  return result;
}

dispatch_time_t CHDMonotonicTime.advanced(by:)@<X0>(int64_t a1@<X0>, dispatch_time_t *a2@<X8>)
{
  dispatch_time_t *v2;
  dispatch_time_t result;

  if (a1 < 0)
  {
    if (qword_1ED962258 != -1)
      swift_once();
    result = qword_1ED962488;
  }
  else
  {
    result = CHDMonotonicTimePlusInterval(*v2, a1);
  }
  *a2 = result;
  return result;
}

{
  dispatch_time_t *v2;
  dispatch_time_t result;

  result = CHDMonotonicTimePlusInterval(*v2, a1);
  *a2 = result;
  return result;
}

BOOL static CHDMonotonicTime.< infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeLessThan(*a1, *a2);
}

uint64_t CHDMonotonicTimer.__allocating_init(time:repeat:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v4;

  v4 = swift_allocObject();
  CHDMonotonicTimer.init(time:repeat:)(a1, a2);
  return v4;
}

dispatch_time_t static CHDMonotonicTime.now()@<X0>(dispatch_time_t *a1@<X8>)
{
  dispatch_time_t result;

  result = CHDMonotonicTimeFromNow(0);
  *a1 = result;
  return result;
}

dispatch_time_t static CHDMonotonicTime.advancedFromNow(by:)@<X0>(int64_t a1@<X0>, dispatch_time_t *a2@<X8>)
{
  dispatch_time_t result;

  result = CHDMonotonicTimeFromNow(a1);
  *a2 = result;
  return result;
}

{
  dispatch_time_t result;

  if (a1 < 0)
  {
    if (qword_1ED962258 != -1)
      swift_once();
    result = qword_1ED962488;
  }
  else
  {
    result = CHDMonotonicTimeFromNow(a1);
  }
  *a2 = result;
  return result;
}

void sub_1D264927C()
{
  qword_1ED962488 = -1;
}

uint64_t static CHDMonotonicTime.distantFuture.getter@<X0>(_QWORD *a1@<X8>)
{
  uint64_t result;

  if (qword_1ED962258 != -1)
    result = swift_once();
  *a1 = qword_1ED962488;
  return result;
}

BOOL static CHDMonotonicTime.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeEqual(*a1, *a2);
}

uint64_t static CHDMonotonicTime.earlier(_:_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)result;
  v5 = *(_QWORD *)a2;
  if (*(_BYTE *)(result + 8))
    v6 = *(_QWORD *)a2;
  else
    v6 = *(_QWORD *)result;
  v7 = *(_BYTE *)(result + 8) & *(_BYTE *)(a2 + 8);
  if ((*(_BYTE *)(result + 8) & 1) == 0 && (*(_BYTE *)(a2 + 8) & 1) == 0)
  {
    result = CHDMonotonicTimeLessThan(*(_QWORD *)a2, v4);
    v7 = 0;
    if ((_DWORD)result)
      v6 = v5;
    else
      v6 = v4;
  }
  *(_QWORD *)a3 = v6;
  *(_BYTE *)(a3 + 8) = v7;
  return result;
}

uint64_t CHDMonotonicTime.earlier(_:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X8>)
{
  uint64_t *v2;
  uint64_t v4;
  uint64_t v5;

  v4 = *v2;
  if ((*(_BYTE *)(result + 8) & 1) == 0)
  {
    v5 = *(_QWORD *)result;
    result = CHDMonotonicTimeLessThan(*(_QWORD *)result, v4);
    if ((_DWORD)result)
      v4 = v5;
  }
  *a2 = v4;
  return result;
}

uint64_t CHDMonotonicTime.description.getter()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (qword_1ED962258 != -1)
    swift_once();
  if (CHDMonotonicTimeEqual(v1, qword_1ED962488))
    return 0x46746E6174736964;
  else
    return sub_1D26CE370();
}

BOOL sub_1D2649480(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeLessThan(*a1, *a2);
}

BOOL sub_1D264949C(uint64_t *a1, uint64_t *a2)
{
  return !CHDMonotonicTimeLessThan(*a2, *a1);
}

BOOL sub_1D26494C0(uint64_t *a1, uint64_t *a2)
{
  return !CHDMonotonicTimeLessThan(*a1, *a2);
}

BOOL sub_1D26494E0(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeLessThan(*a2, *a1);
}

uint64_t sub_1D2649500()
{
  uint64_t *v0;
  uint64_t v1;

  v1 = *v0;
  if (qword_1ED962258 != -1)
    swift_once();
  if (CHDMonotonicTimeEqual(v1, qword_1ED962488))
    return 0x46746E6174736964;
  else
    return sub_1D26CE370();
}

BOOL sub_1D26495A0(uint64_t *a1, uint64_t *a2)
{
  return CHDMonotonicTimeEqual(*a1, *a2);
}

uint64_t Optional<A>.earlier(_:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  char v7;

  v4 = *(_QWORD *)result;
  v5 = *(_QWORD *)v2;
  if (*(_BYTE *)(v2 + 8))
    v6 = *(_QWORD *)result;
  else
    v6 = *(_QWORD *)v2;
  v7 = *(_BYTE *)(v2 + 8) & *(_BYTE *)(result + 8);
  if ((*(_BYTE *)(v2 + 8) & 1) == 0 && (*(_BYTE *)(result + 8) & 1) == 0)
  {
    result = CHDMonotonicTimeLessThan(*(_QWORD *)result, *(_QWORD *)v2);
    v7 = 0;
    if ((_DWORD)result)
      v6 = v4;
    else
      v6 = v5;
  }
  *(_QWORD *)a2 = v6;
  *(_BYTE *)(a2 + 8) = v7;
  return result;
}

void CHDMonotonicTimer.time.getter(_QWORD *a1@<X8>)
{
  uint64_t v1;

  *a1 = *(_QWORD *)(v1 + 40);
}

uint64_t CHDMonotonicTimer.interval.getter()
{
  uint64_t v0;

  return *(_QWORD *)(v0 + 48);
}

uint64_t CHDMonotonicTimer.init(time:repeat:)(uint64_t *a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;

  v4 = *a1;
  *(_QWORD *)(v2 + 16) = 0;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *v6 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v2 + 24) = v5;
  *(_BYTE *)(v2 + 32) = 0;
  *(_QWORD *)(v2 + 40) = v4;
  *(_QWORD *)(v2 + 48) = a2 & ~(a2 >> 63);
  return v2;
}

uint64_t CHDMonotonicTimer.__allocating_init(repeat:)(double a1)
{
  uint64_t v1;
  double v2;
  dispatch_time_t v3;
  uint64_t v4;
  uint64_t v5;
  _DWORD *v6;

  if (a1 <= 0.0)
  {
    __break(1u);
    goto LABEL_11;
  }
  v2 = a1 * 1000000000.0;
  if ((~*(_QWORD *)&v2 & 0x7FF0000000000000) == 0)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  if (v2 <= -1.0)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (v2 >= 1.84467441e19)
  {
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  v1 = (unint64_t)v2;
  if (((unint64_t)v2 & 0x8000000000000000) != 0)
  {
    if (qword_1ED962258 == -1)
    {
LABEL_8:
      v3 = qword_1ED962488;
      goto LABEL_9;
    }
LABEL_14:
    swift_once();
    goto LABEL_8;
  }
  v3 = CHDMonotonicTimeFromNow((unint64_t)v2);
LABEL_9:
  type metadata accessor for CHDMonotonicTimer();
  v4 = swift_allocObject();
  *(_QWORD *)(v4 + 16) = 0;
  type metadata accessor for UnfairLock();
  v5 = swift_allocObject();
  v6 = (_DWORD *)swift_slowAlloc();
  *v6 = 0;
  *(_QWORD *)(v5 + 16) = v6;
  *(_QWORD *)(v4 + 24) = v5;
  *(_BYTE *)(v4 + 32) = 0;
  *(_QWORD *)(v4 + 40) = v3;
  *(_QWORD *)(v4 + 48) = v1 & ~(v1 >> 63);
  return v4;
}

uint64_t type metadata accessor for CHDMonotonicTimer()
{
  return objc_opt_self();
}

uint64_t sub_1D26497D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v5;
  os_unfair_lock_s *v6;

  v5 = *(_QWORD *)(v2 + 24);
  v6 = *(os_unfair_lock_s **)(v5 + 16);
  swift_retain();
  os_unfair_lock_lock(v6);
  sub_1D2649848(v2, a1, a2);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
  return swift_release();
}

void sub_1D2649848(uint64_t a1, uint64_t a2, uint64_t a3)
{
  id v6;
  void *v7;
  void *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;
  _QWORD v15[6];

  if (*(_QWORD *)(a1 + 16))
  {
    __break(1u);
    goto LABEL_6;
  }
  if ((*(_BYTE *)(a1 + 32) & 1) != 0)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  v6 = objc_msgSend(objc_allocWithZone((Class)CHDMonotonicTimer), sel_init);
  v7 = *(void **)(a1 + 16);
  *(_QWORD *)(a1 + 16) = v6;

  v8 = *(void **)(a1 + 16);
  if (v8)
  {
    v9 = *(_QWORD *)(a1 + 40);
    v10 = *(_QWORD *)(a1 + 48);
    v11 = swift_allocObject();
    swift_weakInit();
    v12 = (_QWORD *)swift_allocObject();
    v12[2] = v11;
    v12[3] = a2;
    v12[4] = a3;
    v15[4] = sub_1D2649C6C;
    v15[5] = v12;
    v15[0] = MEMORY[0x1E0C809B0];
    v15[1] = 1107296256;
    v15[2] = sub_1D25351AC;
    v15[3] = &block_descriptor_14;
    v13 = _Block_copy(v15);
    v14 = v8;
    swift_retain();
    swift_release();
    objc_msgSend(v14, sel_activateWithTime_repeat_block_, v9, v10, v13);
    _Block_release(v13);

    return;
  }
LABEL_7:
  __break(1u);
}

uint64_t sub_1D26499A8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t result;
  uint64_t v4;
  uint64_t v5;
  os_unfair_lock_s *v6;

  swift_beginAccess();
  result = swift_weakLoadStrong();
  if (result)
  {
    v4 = result;
    if (!*(_QWORD *)(result + 48))
    {
      v5 = *(_QWORD *)(result + 24);
      v6 = *(os_unfair_lock_s **)(v5 + 16);
      swift_retain();
      os_unfair_lock_lock(v6);
      if ((*(_BYTE *)(v4 + 32) & 1) == 0)
      {
        *(_BYTE *)(v4 + 32) = 1;
        objc_msgSend(*(id *)(v4 + 16), sel_invalidate);
      }
      os_unfair_lock_unlock(*(os_unfair_lock_t *)(v5 + 16));
      swift_release();
    }
    a2(v4);
    return swift_release();
  }
  return result;
}

uint64_t sub_1D2649A68()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  if ((*(_BYTE *)(v0 + 32) & 1) == 0)
  {
    *(_BYTE *)(v0 + 32) = 1;
    objc_msgSend(*(id *)(v0 + 16), sel_invalidate);
  }
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  return swift_release();
}

uint64_t sub_1D2649ACC()
{
  uint64_t v0;
  uint64_t v1;
  os_unfair_lock_s *v2;
  uint64_t v3;

  v1 = *(_QWORD *)(v0 + 24);
  v2 = *(os_unfair_lock_s **)(v1 + 16);
  swift_retain();
  os_unfair_lock_lock(v2);
  v3 = *(unsigned __int8 *)(v0 + 32);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v1 + 16));
  swift_release();
  return v3;
}

uint64_t CHDMonotonicTimer.deinit()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 32) == 1)
  {

    swift_release();
    return v0;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t CHDMonotonicTimer.__deallocating_deinit()
{
  uint64_t v0;
  uint64_t result;

  if (*(_BYTE *)(v0 + 32) == 1)
  {

    swift_release();
    return swift_deallocClassInstance();
  }
  else
  {
    __break(1u);
  }
  return result;
}

unint64_t sub_1D2649B90()
{
  unint64_t result;

  result = qword_1ED962260;
  if (!qword_1ED962260)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for CHDMonotonicTime, &type metadata for CHDMonotonicTime);
    atomic_store(result, (unint64_t *)&qword_1ED962260);
  }
  return result;
}

ValueMetadata *type metadata accessor for CHDMonotonicTime()
{
  return &type metadata for CHDMonotonicTime;
}

uint64_t method lookup function for CHDMonotonicTimer()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of CHDMonotonicTimer.__allocating_init(time:repeat:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 168))();
}

uint64_t dispatch thunk of CHDMonotonicTimer.activate(block:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 176))();
}

uint64_t dispatch thunk of CHDMonotonicTimer.invalidate()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 184))();
}

uint64_t dispatch thunk of CHDMonotonicTimer.isInvalidated.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 192))();
}

uint64_t sub_1D2649C1C()
{
  swift_weakDestroy();
  return swift_deallocObject();
}

uint64_t sub_1D2649C40()
{
  swift_release();
  swift_release();
  return swift_deallocObject();
}

uint64_t sub_1D2649C6C()
{
  uint64_t v0;

  return sub_1D26499A8(*(_QWORD *)(v0 + 16), *(void (**)(uint64_t))(v0 + 24));
}

_QWORD *WidgetCacheURLProvider.__allocating_init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v4;

  v4 = (_QWORD *)swift_allocObject();
  v4[3] = 0;
  v4[2] = 0;
  swift_beginAccess();
  v4[2] = a1;
  v4[3] = a2;
  swift_bridgeObjectRelease();
  v4[4] = 0x742D6F6E6F726863;
  v4[5] = 0xEF656E696C656D69;
  return v4;
}

_QWORD *WidgetCacheURLProvider.init(subdirectory:)(uint64_t a1, uint64_t a2)
{
  _QWORD *v2;

  v2[3] = 0;
  v2[2] = 0;
  swift_beginAccess();
  v2[2] = a1;
  v2[3] = a2;
  swift_bridgeObjectRelease();
  v2[4] = 0x742D6F6E6F726863;
  v2[5] = 0xEF656E696C656D69;
  return v2;
}

unint64_t sub_1D2649D9C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  char *v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  char *v21;
  void *v22;
  id v23;
  unint64_t v24;
  uint64_t v25;
  void (*v26)(_QWORD, _QWORD, _QWORD);
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;
  unint64_t v30;
  id v32;
  void *v33;
  id v34;
  char *v35;
  int v36;
  void (*v37)(char *, uint64_t, uint64_t, uint64_t);
  char v38;
  unint64_t v39;
  unint64_t v40;
  unint64_t v41;
  unint64_t v42;
  uint64_t v43;
  id v44;
  char *v45;
  uint64_t v46;
  void (*v47)(char *, uint64_t, uint64_t);
  uint64_t v48;
  _QWORD *v49;
  char *v50;
  char *v51;
  unint64_t v52;
  uint64_t v53;
  char v54[32];
  _OWORD v55[2];
  __int128 v56;
  uint64_t v57;

  v2 = v1;
  v4 = __swift_instantiateConcreteTypeFromMangledName((uint64_t *)&unk_1ED96FC50);
  MEMORY[0x1E0C80A78](v4);
  v6 = (char *)&v43 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  v7 = sub_1D26CB778();
  v46 = *(_QWORD *)(v7 - 8);
  MEMORY[0x1E0C80A78](v7);
  v51 = (char *)&v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9 = sub_1D26CB880();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = MEMORY[0x1E0C80A78](v9);
  v50 = (char *)&v43 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  v13 = MEMORY[0x1E0C80A78](v11);
  v52 = (unint64_t)&v43 - v14;
  v15 = MEMORY[0x1E0C80A78](v13);
  v49 = (uint64_t *)((char *)&v43 - v16);
  v17 = MEMORY[0x1E0C80A78](v15);
  v19 = (char *)&v43 - v18;
  MEMORY[0x1E0C80A78](v17);
  v21 = (char *)&v43 - v20;
  swift_beginAccess();
  v53 = v2;
  if (*(_QWORD *)(v2 + 24))
  {
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v47(v19, a1, v9);
    swift_bridgeObjectRetain();
    sub_1D26CB7E4();
    swift_bridgeObjectRelease();
    v22 = *(void **)(a1 + *(int *)(type metadata accessor for WidgetCacheKey() + 20));
    if (v22)
    {
      v23 = v22;
      sub_1D264A6D8(v23);
      sub_1D26CB7E4();

      swift_bridgeObjectRelease();
    }
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v21, v19, v9);
  }
  else
  {
    v47 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 16);
    v47(v21, a1, v9);
  }
  v24 = v52;
  v25 = type metadata accessor for WidgetCacheKey();
  if (*(_QWORD *)(a1 + *(int *)(v25 + 24)) && *(_QWORD *)(a1 + *(int *)(v25 + 20)))
  {
    v26 = (void (*)(_QWORD, _QWORD, _QWORD))v49;
    sub_1D264A44C(a1, (uint64_t)v49);
    v27 = sub_1D2561A20(0, 1, 1, MEMORY[0x1E0DEE9D8]);
    v29 = *(_QWORD *)(v27 + 16);
    v28 = *(_QWORD *)(v27 + 24);
    if (v29 >= v28 >> 1)
      v27 = sub_1D2561A20(v28 > 1, v29 + 1, 1, v27);
    *(_QWORD *)(v27 + 16) = v29 + 1;
    v30 = v27;
    (*(void (**)(unint64_t, _QWORD, uint64_t))(v10 + 32))(v27+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(_QWORD *)(v10 + 72) * v29, v26, v9);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    return v30;
  }
  v32 = objc_msgSend((id)objc_opt_self(), sel_defaultManager);
  v33 = (void *)sub_1D26CDCC8();

  if (!v33)
  {
    (*(void (**)(char *, uint64_t))(v10 + 8))(v21, v9);
    return MEMORY[0x1E0DEE9D8];
  }
  v45 = v21;
  v34 = v33;
  v35 = v51;
  sub_1D26CDCBC();
  v44 = v34;

  swift_beginAccess();
  sub_1D264A404();
  sub_1D26CDF44();
  if (v57)
  {
    v52 = MEMORY[0x1E0DEE9D8];
    v48 = MEMORY[0x1E0DEE9B8] + 8;
    while (1)
    {
      sub_1D2538448(&v56, v55);
      sub_1D2537950((uint64_t)v55, (uint64_t)v54);
      v36 = swift_dynamicCast();
      v37 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      if (v36)
      {
        v37(v6, 0, 1, v9);
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v6, 1, v9) != 1)
        {
          v49 = *(_QWORD **)(v10 + 32);
          ((void (*)(unint64_t, char *, uint64_t))v49)(v24, v6, v9);
          sub_1D26CB868();
          swift_bridgeObjectRetain();
          v38 = sub_1D26CDA28();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v38 & 1) != 0)
          {
            v47(v50, v24, v9);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) != 0)
              v39 = v52;
            else
              v39 = sub_1D2561A20(0, *(_QWORD *)(v52 + 16) + 1, 1, v52);
            v41 = *(_QWORD *)(v39 + 16);
            v40 = *(_QWORD *)(v39 + 24);
            if (v41 >= v40 >> 1)
              v39 = sub_1D2561A20(v40 > 1, v41 + 1, 1, v39);
            *(_QWORD *)(v39 + 16) = v41 + 1;
            v42 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
            v52 = v39;
            ((void (*)(unint64_t, char *, uint64_t))v49)(v39 + v42 + *(_QWORD *)(v10 + 72) * v41, v50, v9);
            (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v24, v9);
            v35 = v51;
          }
          else
          {
            (*(void (**)(unint64_t, uint64_t))(v10 + 8))(v24, v9);
            v35 = v51;
          }
          goto LABEL_16;
        }
      }
      else
      {
        v37(v6, 1, 1, v9);
      }
      sub_1D258C76C((uint64_t)v6);
LABEL_16:
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v55);
      sub_1D26CDF44();
      if (!v57)
        goto LABEL_29;
    }
  }
  v52 = MEMORY[0x1E0DEE9D8];
LABEL_29:
  (*(void (**)(char *, uint64_t))(v46 + 8))(v35, v7);

  (*(void (**)(char *, uint64_t))(v10 + 8))(v45, v9);
  return v52;
}

unint64_t sub_1D264A404()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC83340[0];
  if (!qword_1EFC83340[0])
  {
    v1 = sub_1D26CB778();
    result = MEMORY[0x1D823A4E4](MEMORY[0x1E0CAFB80], v1);
    atomic_store(result, qword_1EFC83340);
  }
  return result;
}

uint64_t sub_1D264A44C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  _BYTE *v10;
  uint64_t v11;
  _BYTE *v12;
  void *v13;
  id v14;
  uint64_t v15;
  void *v16;
  void *v17;
  id v18;
  id v19;
  _BYTE v21[24];

  v3 = v2;
  v6 = sub_1D26CB880();
  v7 = *(_QWORD *)(v6 - 8);
  v8 = MEMORY[0x1E0C80A78](v6);
  v10 = &v21[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  MEMORY[0x1E0C80A78](v8);
  v12 = &v21[-v11];
  swift_beginAccess();
  if (*(_QWORD *)(v3 + 24))
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v10, a1, v6);
    swift_bridgeObjectRetain();
    sub_1D26CB7E4();
    swift_bridgeObjectRelease();
    v13 = *(void **)(a1 + *(int *)(type metadata accessor for WidgetCacheKey() + 20));
    if (v13)
    {
      v14 = v13;
      sub_1D264A6D8(v14);
      sub_1D26CB7E4();

      swift_bridgeObjectRelease();
    }
    (*(void (**)(_BYTE *, _BYTE *, uint64_t))(v7 + 32))(v12, v10, v6);
  }
  else
  {
    (*(void (**)(_BYTE *, uint64_t, uint64_t))(v7 + 16))(v12, a1, v6);
  }
  v15 = type metadata accessor for WidgetCacheKey();
  v16 = *(void **)(a1 + *(int *)(v15 + 20));
  if (v16)
  {
    v17 = *(void **)(a1 + *(int *)(v15 + 24));
    if (v17)
    {
      v18 = v16;
      v19 = v17;
      sub_1D264A884(v18, v19);
      sub_1D26CB7F0();
      swift_bridgeObjectRelease();
      swift_beginAccess();
      swift_bridgeObjectRetain();
      sub_1D26CB7FC();
      swift_bridgeObjectRelease();

    }
  }
  return (*(uint64_t (**)(uint64_t, _BYTE *, uint64_t))(v7 + 32))(a2, v12, v6);
}

uint64_t WidgetCacheURLProvider.deinit()
{
  uint64_t v0;

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t WidgetCacheURLProvider.__deallocating_deinit()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

unint64_t sub_1D264A694(uint64_t a1)
{
  return sub_1D2649D9C(a1);
}

uint64_t sub_1D264A6B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1D264A44C(a1, a2);
}

uint64_t sub_1D264A6D8(void *a1)
{
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  char *v5;
  id v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  unint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  id v23;
  _QWORD v25[4];

  v2 = sub_1D26CB604();
  v3 = *(_QWORD *)(v2 - 8);
  MEMORY[0x1E0C80A78](v2);
  v5 = (char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  v6 = objc_msgSend(a1, sel_kind);
  v7 = sub_1D26CD938();
  v9 = v8;

  v10 = sub_1D26443E4(0x32uLL, v7, v9);
  v12 = v11;
  v14 = v13;
  v16 = v15;
  swift_bridgeObjectRelease();
  v17 = MEMORY[0x1D823917C](v10, v12, v14, v16);
  v19 = v18;
  swift_bridgeObjectRelease();
  v25[1] = v17;
  v25[2] = v19;
  sub_1D26CB5F8();
  sub_1D257293C();
  v20 = sub_1D26CDF98();
  v22 = v21;
  (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
  swift_bridgeObjectRelease();
  if (!v22)
  {
    v23 = objc_msgSend(a1, sel_extensionIdentity);
    swift_beginAccess();
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
    v20 = sub_1D26CBC88();
    swift_endAccess();

  }
  return v20;
}

uint64_t sub_1D264A884(void *a1, void *a2)
{
  id v4;
  void *v5;
  id v6;
  uint64_t v8;

  v4 = objc_msgSend(a1, sel_intentReference);
  if (v4)
  {
    v5 = v4;
    objc_msgSend(v4, sel_stableHash);

    sub_1D26CE370();
    sub_1D26CDA04();
  }
  objc_msgSend(a1, sel_family);
  v8 = sub_1D26CDD1C();
  sub_1D26CDA04();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v6 = objc_msgSend(a2, sel__stringKeyRepresentation);
  sub_1D26CD938();

  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_1D264A9C4@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 24);
  *a2 = *(_QWORD *)(v3 + 16);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1D264AA10@<X0>(uint64_t *a1@<X0>, _QWORD *a2@<X8>)
{
  uint64_t v3;
  uint64_t v4;

  v3 = *a1;
  swift_beginAccess();
  v4 = *(_QWORD *)(v3 + 40);
  *a2 = *(_QWORD *)(v3 + 32);
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for WidgetCacheURLProvider()
{
  return objc_opt_self();
}

uint64_t method lookup function for WidgetCacheURLProvider()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.subdirectory.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.subdirectory.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 104))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.subdirectory.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.fileExtension.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.fileExtension.setter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.fileExtension.modify()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 136))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.__allocating_init(subdirectory:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 144))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.urls(matching:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 152))();
}

uint64_t dispatch thunk of WidgetCacheURLProvider.url(for:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 160))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.configuration(for:entries:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 48))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.configurationForReloadSuccess(for:entries:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 56))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.configurationForReloadFailure(for:configuration:error:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 64))();
}

uint64_t dispatch thunk of ReloadConfigurationPolicy.permitReload(for:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t sub_1D264AB10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D264AB54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  sub_1D264AC20(a1, a2, a3, v7);
  return v6;
}

uint64_t sub_1D264ABA8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 128))();
}

uint64_t sub_1D264ABD0()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 136))();
}

uint64_t sub_1D264ABF8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 144))();
}

uint64_t sub_1D264AC20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for _AnyReloadConfigurationPolicyBox(0, a2, a3, a4);
  v6 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 160) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 176), a1);
  *(_QWORD *)(v4 + 16) = v6;
  return v4;
}

uint64_t sub_1D264AC84(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 160) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 176), a1);
  return v2;
}

uint64_t sub_1D264ACD8()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 152))() & 1;
}

void type metadata accessor for AnyReloadConfigurationPolicy()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D264AD10()
{
  return swift_initClassMetadata2();
}

uint64_t sub_1D264AD44()
{
  return sub_1D264ABA8();
}

uint64_t sub_1D264AD64()
{
  return sub_1D264ABD0();
}

uint64_t sub_1D264AD84()
{
  return sub_1D264ABF8();
}

uint64_t sub_1D264ADA4()
{
  return sub_1D264ACD8() & 1;
}

void sub_1D264ADC8()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D264AE10()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D264AE58()
{
  sub_1D26CE1D8();
  __break(1u);
}

void sub_1D264AEA0()
{
  sub_1D26CE1D8();
  __break(1u);
}

void type metadata accessor for _AnyReloadConfigurationPolicyBase()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D264AEF4()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t sub_1D264AF64()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 128))();
}

uint64_t sub_1D264AF8C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t sub_1D264AFB4()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 144))();
}

uint64_t sub_1D264AFDC()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 152))() & 1;
}

uint64_t sub_1D264B008(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 160);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, (uint64_t)v3 + *(_QWORD *)(v7 + 176), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 168) + 48))(a1, a2, a3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1D264B0D4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t *v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v13;

  v7 = *v3;
  v8 = *(_QWORD *)(*v3 + 160);
  v9 = *(_QWORD *)(v8 - 8);
  MEMORY[0x1E0C80A78]();
  v11 = (char *)&v13 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, (uint64_t)v3 + *(_QWORD *)(v7 + 176), v8);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v7 + 168) + 56))(a1, a2, a3, v8);
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t sub_1D264B1A0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v17;

  v11 = *v5;
  v12 = *(_QWORD *)(*v5 + 160);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v15 = (char *)&v17 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, (uint64_t)v5 + *(_QWORD *)(v11 + 176), v12);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 168) + 64))(a1, a2, a3, a4, a5, v12);
  return (*(uint64_t (**)(char *, uint64_t))(v13 + 8))(v15, v12);
}

uint64_t sub_1D264B274(uint64_t a1, uint64_t a2)
{
  uint64_t *v2;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  char *v9;
  uint64_t v11;

  v5 = *v2;
  v6 = *(_QWORD *)(*v2 + 160);
  v7 = *(_QWORD *)(v6 - 8);
  MEMORY[0x1E0C80A78]();
  v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v9, (uint64_t)v2 + *(_QWORD *)(v5 + 176), v6);
  LOBYTE(a2) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v5 + 168) + 72))(a1, a2, v6);
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  return a2 & 1;
}

uint64_t sub_1D264B330()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 160) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
}

uint64_t sub_1D264B34C()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 160) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 176));
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for _AnyReloadConfigurationPolicyBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AnyReloadConfigurationPolicyBox);
}

void VariantIdentifier.init(storedKey:variantKey:)(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a2 - 8) + 32))(a3, a1);
  type metadata accessor for VariantIdentifier();
}

uint64_t sub_1D264B400(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v1 - 8) + 32))(v3 + *(int *)(a1 + 68), v2, v1);
}

void type metadata accessor for VariantIdentifier()
{
  JUMPOUT(0x1D823A430);
}

uint64_t StatefulStoreReloadEvent.init(key:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;

  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(a3 - 8) + 32))(a6, a1);
  v11 = a6 + *(int *)(type metadata accessor for StatefulStoreReloadEvent(0, a3, a4, a5) + 44);
  return sub_1D25341AC(a2, v11);
}

uint64_t type metadata accessor for StatefulStoreReloadEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatefulStoreReloadEvent);
}

void sub_1D264B4C0()
{
  type metadata accessor for VariantIdentifier();
}

void sub_1D264B51C(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 32))(v2, v1, a1);
  type metadata accessor for VariantReloadResult();
}

uint64_t sub_1D264B54C(uint64_t result)
{
  uint64_t v1;
  uint64_t v2;

  *(_QWORD *)(v2 + *(int *)(result + 68)) = v1;
  return result;
}

uint64_t VariantIdentifier.storedKey.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 16) - 8) + 16))(a2, v2);
}

uint64_t VariantIdentifier.variantKey.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a1 + 24) - 8) + 16))(a2, v2 + *(int *)(a1 + 68));
}

uint64_t VariantIdentifier.description.getter()
{
  sub_1D26CE3A0();
  sub_1D26CDA04();
  sub_1D26CE3A0();
  return 0;
}

uint64_t VariantIdentifier.hash(into:)()
{
  sub_1D26CD8D8();
  return sub_1D26CD8D8();
}

uint64_t static VariantIdentifier.== infix(_:_:)()
{
  if ((sub_1D26CD908() & 1) != 0)
    type metadata accessor for VariantIdentifier();
  return 0;
}

uint64_t VariantIdentifier.hashValue.getter()
{
  sub_1D26CE460();
  VariantIdentifier.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D264B75C()
{
  sub_1D26CE460();
  VariantIdentifier.hash(into:)();
  return sub_1D26CE49C();
}

uint64_t sub_1D264B7A0()
{
  return static VariantIdentifier.== infix(_:_:)();
}

void VariantReloadResult.variantIdentifier.getter()
{
  type metadata accessor for VariantIdentifier();
}

uint64_t sub_1D264B7E4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a1 - 8) + 16))(v1, v2, a1);
}

void *VariantReloadResult.error.getter(uint64_t a1)
{
  uint64_t v1;
  void *v2;
  id v3;

  v2 = *(void **)(v1 + *(int *)(a1 + 68));
  v3 = v2;
  return v2;
}

uint64_t (*StatefulStoreReloadEvent.key.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadEvent.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D264B85C(v2 + *(int *)(a1 + 44), a2);
}

uint64_t sub_1D264B85C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = type metadata accessor for ReloadConfiguration(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t StatefulStoreReloadEvent.configuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D262BE84(a1, v2 + *(int *)(a2 + 44));
}

uint64_t (*StatefulStoreReloadEvent.configuration.modify())()
{
  return CGSizeMake;
}

uint64_t static StatefulStoreReloadEvent.== infix(_:_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10;

  if ((sub_1D26CD908() & 1) == 0)
    return 0;
  v10 = *(int *)(type metadata accessor for StatefulStoreReloadEvent(0, a3, a4, a5) + 44);
  return _s9ChronoKit19ReloadConfigurationV2eeoiySbAC_ACtFZ_0(a1 + v10, a2 + v10);
}

uint64_t sub_1D264B940(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return static StatefulStoreReloadEvent.== infix(_:_:)(a1, a2, a3[2], a3[3], a3[4]);
}

uint64_t _s9ChronoKit24StatefulStoreReloadEventV3keyxvs_0(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return (*(uint64_t (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 16) - 8) + 40))(v2, a1);
}

uint64_t (*StatefulStoreReloadVariantsEvent.key.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadVariantsEvent.variantKeys.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t StatefulStoreReloadVariantsEvent.variantKeys.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;
  uint64_t v4;
  uint64_t result;

  v4 = *(int *)(a2 + 36);
  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v2 + v4) = a1;
  return result;
}

uint64_t (*StatefulStoreReloadVariantsEvent.variantKeys.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadVariantsEvent.configuration.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;

  return sub_1D264B85C(v2 + *(int *)(a1 + 40), a2);
}

uint64_t StatefulStoreReloadVariantsEvent.configuration.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v2;

  return sub_1D262BE84(a1, v2 + *(int *)(a2 + 40));
}

uint64_t (*StatefulStoreReloadVariantsEvent.configuration.modify())()
{
  return CGSizeMake;
}

uint64_t StatefulStoreReloadVariantsEvent.init(key:variantKeys:configuration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11;
  uint64_t v12;

  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(_QWORD *)(a4 - 8) + 32))(a6, a1, a4);
  v12 = type metadata accessor for StatefulStoreReloadVariantsEvent(0, a4, a5, v11);
  *(_QWORD *)(a6 + *(int *)(v12 + 36)) = a2;
  return sub_1D25341AC(a3, a6 + *(int *)(v12 + 40));
}

uint64_t type metadata accessor for StatefulStoreReloadVariantsEvent(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for StatefulStoreReloadVariantsEvent);
}

void sub_1D264BA88()
{
  JUMPOUT(0x1D823A4E4);
}

uint64_t dispatch thunk of ContentEntry.content.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of ContentEntry.content.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ContentEntry.content.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 32))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadErrorDate.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadErrorDate.setter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 48))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadErrorDate.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 56))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 64))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadError.setter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 72))();
}

uint64_t dispatch thunk of ContentEntry.contentLoadError.modify(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 80))();
}

uint64_t dispatch thunk of ContentEntry.protectionType.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of ContentEntry.invalidate()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t sub_1D264BAF0()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D264BB7C(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v13;
  uint64_t v14;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (*(_BYTE *)(v6 + 80) | *(_BYTE *)(v7 + 80));
  if (v10 > 7
    || ((*(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80)) & 0x100000) != 0
    || (v9 & (unint64_t)~v8) + *(_QWORD *)(v7 + 64) > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + ((v10 + 16) & ~v10));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
  }
  return v4;
}

uint64_t sub_1D264BC4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  return (*(uint64_t (**)(unint64_t))(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 8))((*(_QWORD *)(v4 + 64) + a1 + *(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80)) & ~(unint64_t)*(unsigned __int8 *)(*(_QWORD *)(*(_QWORD *)(a2 + 24) - 8) + 80));
}

uint64_t sub_1D264BCA4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D264BD10(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 24))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D264BD7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 32))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D264BDE8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(_QWORD *)(v6 + 64) + *(unsigned __int8 *)(v7 + 80) + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1D264BE54(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  uint64_t v10;
  unsigned int v11;
  uint64_t v12;
  char v13;
  int v14;
  unsigned int v15;
  int v16;
  int v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (!a2)
    return 0;
  v9 = *(unsigned __int8 *)(v6 + 80);
  v10 = *(_QWORD *)(v4 + 64) + v9;
  v11 = a2 - v8;
  if (a2 <= v8)
    goto LABEL_23;
  v12 = (v10 & ~v9) + *(_QWORD *)(v6 + 64);
  v13 = 8 * v12;
  if (v12 <= 3)
  {
    v15 = ((v11 + ~(-1 << v13)) >> v13) + 1;
    if (HIWORD(v15))
    {
      v14 = *(_DWORD *)(a1 + v12);
      if (!v14)
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 > 0xFF)
    {
      v14 = *(unsigned __int16 *)(a1 + v12);
      if (!*(_WORD *)(a1 + v12))
        goto LABEL_23;
      goto LABEL_14;
    }
    if (v15 < 2)
    {
LABEL_23:
      if (v8)
      {
        if (v5 >= v7)
          return (*(uint64_t (**)(void))(v4 + 48))();
        else
          return (*(uint64_t (**)(uint64_t))(v6 + 48))((v10 + a1) & ~v9);
      }
      return 0;
    }
  }
  v14 = *(unsigned __int8 *)(a1 + v12);
  if (!*(_BYTE *)(a1 + v12))
    goto LABEL_23;
LABEL_14:
  v16 = (v14 - 1) << v13;
  if (v12 > 3)
    v16 = 0;
  if (!(_DWORD)v12)
    return v8 + v16 + 1;
  if (v12 <= 3)
    v17 = (v10 & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64);
  else
    v17 = 4;
  return ((uint64_t (*)(void))((char *)&loc_1D264BF30 + 4 * byte_1D26D9430[v17 - 1]))();
}

void sub_1D264BFAC(_WORD *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  size_t v8;
  unsigned int v9;
  unsigned int v10;
  unsigned int v11;
  int v12;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  v8 = ((*(_QWORD *)(v5 + 64) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))
     + *(_QWORD *)(v6 + 64);
  if (a3 > v7)
  {
    if (v8 <= 3)
    {
      v11 = ((a3 - v7 + ~(-1 << (8 * v8))) >> (8 * v8)) + 1;
      if (HIWORD(v11))
      {
        v9 = 4u;
      }
      else if (v11 >= 0x100)
      {
        v9 = 2;
      }
      else
      {
        v9 = v11 > 1;
      }
    }
    else
    {
      v9 = 1u;
    }
  }
  else
  {
    v9 = 0u;
  }
  if (v7 < a2)
  {
    v10 = ~v7 + a2;
    if (v8 < 4)
    {
      if ((_DWORD)v8)
      {
        v12 = v10 & ~(-1 << (8 * v8));
        bzero(a1, v8);
        if ((_DWORD)v8 == 3)
        {
          *a1 = v12;
          *((_BYTE *)a1 + 2) = BYTE2(v12);
        }
        else if ((_DWORD)v8 == 2)
        {
          *a1 = v12;
        }
        else
        {
          *(_BYTE *)a1 = v12;
        }
      }
    }
    else
    {
      bzero(a1, v8);
      *(_DWORD *)a1 = v10;
    }
    __asm { BR              X10 }
  }
  __asm { BR              X16 }
}

void sub_1D264C1AC()
{
  type metadata accessor for VariantIdentifier();
}

uint64_t *sub_1D264C230(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t *v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  int v11;
  uint64_t v13;
  uint64_t v14;
  void *v15;
  id v16;

  v4 = a1;
  v5 = *(_QWORD *)(a3 + 24);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v7 = *(_QWORD *)(v5 - 8);
  v8 = *(_DWORD *)(v7 + 80);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  v10 = (v9 & ~v8) + *(_QWORD *)(v7 + 64);
  v11 = *(_DWORD *)(v6 + 80) | *(_DWORD *)(v7 + 80);
  if ((v11 & 0x1000F8) != 0 || ((v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 8 > 0x18)
  {
    v13 = *a2;
    *v4 = *a2;
    v4 = (uint64_t *)(v13 + (((v11 & 0xF8 | 7u) + 16) & ~(unint64_t)(v11 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v14 = ~v8;
    (*(void (**)(uint64_t *, uint64_t *))(v6 + 16))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v7 + 16))(((unint64_t)v4 + v9) & v14, ((unint64_t)a2 + v9) & v14, v5);
    v15 = *(void **)(((unint64_t)a2 + v10 + 7) & 0xFFFFFFFFFFFFF8);
    v16 = v15;
    *(_QWORD *)(((unint64_t)v4 + v10 + 7) & 0xFFFFFFFFFFFFF8) = v15;
  }
  return v4;
}

void sub_1D264C340(uint64_t a1, uint64_t a2)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;

  v4 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v4 + 8))();
  v5 = *(_QWORD *)(v4 + 64);
  v6 = *(_QWORD *)(*(_QWORD *)(a2 + 24) - 8);
  v7 = *(unsigned __int8 *)(v6 + 80);
  v8 = v5 + v7;
  (*(void (**)(uint64_t))(v6 + 8))((v5 + v7 + a1) & ~v7);

}

uint64_t sub_1D264C3B8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  _QWORD *v12;
  void *v13;
  id v14;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 16))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 16))((v7 + v9 + a1) & ~v9, (v7 + v9 + a2) & ~v9);
  v11 = (v10 & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v12 = (_QWORD *)((v11 + a1) & 0xFFFFFFFFFFFFF8);
  v13 = *(void **)((v11 + a2) & 0xFFFFFFFFFFFFF8);
  v14 = v13;
  *v12 = v13;
  return a1;
}

uint64_t sub_1D264C45C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;
  id v14;
  void *v15;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 24))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 24))((v7 + v9 + a1) & ~v9, (v7 + v9 + a2) & ~v9);
  v11 = (v10 & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v12 = (void **)((v11 + a1) & 0xFFFFFFFFFFFFFFF8);
  v13 = *(void **)((v11 + a2) & 0xFFFFFFFFFFFFF8);
  v14 = v13;
  v15 = *v12;
  *v12 = v13;

  return a1;
}

uint64_t sub_1D264C508(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 32))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 32))((v7 + v9 + a1) & ~v9, (v7 + v9 + a2) & ~v9);
  v11 = (v10 & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  *(_QWORD *)((v11 + a1) & 0xFFFFFFFFFFFFF8) = *(_QWORD *)((v11 + a2) & 0xFFFFFFFFFFFFF8);
  return a1;
}

uint64_t sub_1D264C5A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  void **v12;
  void *v13;

  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v6 + 40))();
  v7 = *(_QWORD *)(v6 + 64);
  v8 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v9 = *(unsigned __int8 *)(v8 + 80);
  v10 = v7 + v9;
  (*(void (**)(uint64_t, uint64_t))(v8 + 40))((v7 + v9 + a1) & ~v9, (v7 + v9 + a2) & ~v9);
  v11 = (v10 & ~v9) + *(_QWORD *)(v8 + 64) + 7;
  v12 = (void **)((v11 + a1) & 0xFFFFFFFFFFFFFFF8);
  v13 = *v12;
  *v12 = *(void **)((v11 + a2) & 0xFFFFFFFFFFFFF8);

  return a1;
}

uint64_t sub_1D264C648(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4;
  unsigned int v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  unint64_t v17;

  v4 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  v5 = *(_DWORD *)(v4 + 84);
  v6 = *(_QWORD *)(*(_QWORD *)(a3 + 24) - 8);
  v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= v5)
    v8 = *(_DWORD *)(v4 + 84);
  else
    v8 = *(_DWORD *)(v6 + 84);
  if (v8 <= 0x7FFFFFFE)
    v9 = 2147483646;
  else
    v9 = v8;
  if (!a2)
    return 0;
  v10 = *(unsigned __int8 *)(v6 + 80);
  v11 = *(_QWORD *)(v4 + 64) + v10;
  v12 = (v11 & ~v10) + *(_QWORD *)(v6 + 64);
  if (v9 >= a2)
  {
    if (v8 < 0x7FFFFFFE)
    {
      v17 = *(_QWORD *)((a1 + v12 + 7) & 0xFFFFFFFFFFFFF8);
      if (v17 >= 0xFFFFFFFF)
        LODWORD(v17) = -1;
      if ((v17 + 1) >= 2)
        return v17;
      else
        return 0;
    }
    else if (v5 >= v7)
    {
      return (*(uint64_t (**)(uint64_t, _QWORD))(v4 + 48))(a1, *(unsigned int *)(v4 + 84));
    }
    else
    {
      return (*(uint64_t (**)(uint64_t))(v6 + 48))((v11 + a1) & ~v10);
    }
  }
  else
  {
    if (((((v12 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & 0xFFFFFFF8) != 0)
      v13 = 2;
    else
      v13 = a2 - v9 + 1;
    if (v13 >= 0x10000)
      v14 = 4;
    else
      v14 = 2;
    if (v13 < 0x100)
      v14 = 1;
    if (v13 >= 2)
      v15 = v14;
    else
      v15 = 0;
    return ((uint64_t (*)(void))((char *)&loc_1D264C6F0 + 4 * byte_1D26D943E[v15]))();
  }
}

void sub_1D264C7A8(unsigned int *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v5;
  uint64_t v6;
  unsigned int v7;
  unsigned int v8;
  uint64_t v9;
  unsigned int v10;
  int v11;
  int v12;
  unsigned int v13;

  v5 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v6 = *(_QWORD *)(*(_QWORD *)(a4 + 24) - 8);
  if (*(_DWORD *)(v6 + 84) <= *(_DWORD *)(v5 + 84))
    v7 = *(_DWORD *)(v5 + 84);
  else
    v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFE)
    v8 = 2147483646;
  else
    v8 = v7;
  v9 = *(unsigned __int8 *)(v6 + 80);
  if (v8 >= a3)
  {
    v12 = 0u;
    if (a2 <= v8)
      goto LABEL_20;
  }
  else
  {
    if (((((*(_DWORD *)(v5 + 64) + (_DWORD)v9) & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) == 0xFFFFFFF8)
      v10 = a3 - v8 + 1;
    else
      v10 = 2;
    if (v10 >= 0x10000)
      v11 = 4;
    else
      v11 = 2;
    if (v10 < 0x100)
      v11 = 1;
    if (v10 >= 2)
      v12 = v11;
    else
      v12 = 0;
    if (a2 <= v8)
LABEL_20:
      __asm { BR              X0 }
  }
  if (((((*(_DWORD *)(v5 + 64) + (_DWORD)v9) & ~(_DWORD)v9) + *(_DWORD *)(v6 + 64) + 7) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    v13 = ~v8 + a2;
    bzero(a1, ((((*(_QWORD *)(v5 + 64) + v9) & ~v9) + *(_QWORD *)(v6 + 64) + 7) & 0xFFFFFFFFFFFFFFF8) + 8);
    *a1 = v13;
  }
  __asm { BR              X10 }
}

void sub_1D264C8CC()
{
  uint64_t v0;
  uint64_t v1;
  char v2;

  *(_BYTE *)(v0 + v1) = v2;
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C8D4(uint64_t a1, int a2)
{
  uint64_t v2;
  uint64_t v3;

  *(_DWORD *)(v2 + v3) = 0;
  if (a2)
    JUMPOUT(0x1D264C8DCLL);
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C948()
{
  _BYTE *v0;
  char v1;

  *v0 = v1;
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C970()
{
  uint64_t v0;
  uint64_t v1;
  __int16 v2;

  *(_WORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C978()
{
  uint64_t v0;
  uint64_t v1;
  int v2;

  *(_DWORD *)(v0 + v1) = v2;
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C980(uint64_t a1, unsigned int a2)
{
  int v2;
  size_t v3;
  unsigned int v4;
  char *v5;
  uint64_t v6;

  *(_WORD *)&v5[v6] = 0;
  if (a2)
  {
    if (v4 < 0x7FFFFFFE)
      JUMPOUT(0x1D264C950);
    if (v4 >= a2)
      JUMPOUT(0x1D264C98CLL);
    if ((_DWORD)v3)
    {
      if (v3 <= 3)
        v2 = v3;
      else
        v2 = 4;
      bzero(v5, v3);
      __asm { BR              X10 }
    }
  }
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C9EC()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264C9FC()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
  JUMPOUT(0x1D264C9B8);
}

void sub_1D264CA04()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
  JUMPOUT(0x1D264C9B8);
}

void type metadata accessor for VariantReloadResult()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D264CA1C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ReloadConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D264CAA4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  size_t v14;
  unint64_t v15;
  uint64_t v16;
  int v17;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  unint64_t v23;
  const void *v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;
  unint64_t v29;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  v12 = v7 + v11;
  v13 = (v7 + v11) & ~v11;
  if (*(_DWORD *)(v9 + 84))
    v14 = *(_QWORD *)(v9 + 64);
  else
    v14 = *(_QWORD *)(v9 + 64) + 1;
  v15 = v13 + (((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 9;
  v16 = *(_DWORD *)(v6 + 80) & 0xF8 | v11;
  v17 = (*(_DWORD *)(v6 + 80) | v10) & 0x100000;
  if ((_DWORD)v16 != 7 || v17 != 0 || v15 > 0x18)
  {
    v20 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v20 + ((v16 + 16) & ~v16));
    swift_retain();
  }
  else
  {
    v21 = v8;
    v22 = ~v11;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v23 = ((unint64_t)a1 + v12) & v22;
    v24 = (const void *)(((unint64_t)a2 + v12) & v22);
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v24, 1, v21))
    {
      memcpy((void *)(((unint64_t)a1 + v12) & v22), v24, v14);
    }
    else
    {
      (*(void (**)(unint64_t, const void *, uint64_t))(v9 + 16))(((unint64_t)a1 + v12) & v22, v24, v21);
      (*(void (**)(unint64_t, _QWORD, uint64_t, uint64_t))(v9 + 56))(((unint64_t)a1 + v12) & v22, 0, 1, v21);
    }
    *(_BYTE *)(v23 + v14) = *((_BYTE *)v24 + v14);
    v25 = (v23 + v14) & 0xFFFFFFFFFFFFFFF8;
    v26 = ((unint64_t)v24 + v14) & 0xFFFFFFFFFFFFFFF8;
    v27 = *(_QWORD *)(v26 + 8);
    sub_1D2534610(v27);
    *(_QWORD *)(v25 + 8) = v27;
    v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
    v29 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v28 = *(_QWORD *)v29;
    *(_BYTE *)(v28 + 8) = *(_BYTE *)(v29 + 8);
  }
  return a1;
}

unint64_t sub_1D264CC40(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = *(_QWORD *)(v3 + 64);
  v5 = sub_1D26CB9DC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (v4 + a1 + v7) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  if (!*(_DWORD *)(v6 + 84))
    ++v9;
  return sub_1D2534224(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1D264CCE4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1D26CB9DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (char *)((v6 + v9 + a1) & ~v9);
  v12 = (char *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v12, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (unint64_t)&v11[v16];
  v18 = (unint64_t)&v12[v16];
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v19 = v17 & 0xFFFFFFFFFFFFFFF8;
  v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  v21 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1D2534610(v21);
  *(_QWORD *)(v19 + 8) = v21;
  v22 = (v19 + 23) & 0xFFFFFFFFFFFFFFF8;
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v22 = *(_QWORD *)v23;
  *(_BYTE *)(v22 + 8) = *(_BYTE *)(v23 + 8);
  return a1;
}

uint64_t sub_1D264CE18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1D26CB9DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (char *)((v6 + v9 + a1) & ~v9);
  v12 = (char *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 24))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  v18 = (unint64_t)&v11[v17];
  v19 = (unint64_t)&v12[v17];
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1D2534610(v22);
  v23 = *(_QWORD *)(v20 + 8);
  *(_QWORD *)(v20 + 8) = v22;
  sub_1D2534224(v23);
  v24 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v25 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v24 = *(_QWORD *)v25;
  *(_BYTE *)(v24 + 8) = *(_BYTE *)(v25 + 8);
  return a1;
}

uint64_t sub_1D264CFA0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  int v13;
  size_t v14;
  size_t v15;
  size_t v16;
  unint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1D26CB9DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (char *)((v6 + v9 + a1) & ~v9);
  v12 = (char *)((v10 + a2) & ~v9);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v12, 1, v7))
  {
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
    if (v13)
      v15 = v14;
    else
      v15 = v14 + 1;
    memcpy(v11, v12, v15);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v12, v7);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
    v13 = *(_DWORD *)(v8 + 84);
    v14 = *(_QWORD *)(v8 + 64);
  }
  if (v13)
    v16 = v14;
  else
    v16 = v14 + 1;
  v17 = (unint64_t)&v11[v16];
  v18 = (unint64_t)&v12[v16];
  *(_BYTE *)v17 = *(_BYTE *)v18;
  v17 &= 0xFFFFFFFFFFFFFFF8;
  v18 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v17 + 8) = *(_QWORD *)(v18 + 8);
  v19 = (v17 + 23) & 0xFFFFFFFFFFFFFFF8;
  v20 = (v18 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v19 = *(_QWORD *)v20;
  *(_BYTE *)(v19 + 8) = *(_BYTE *)(v20 + 8);
  return a1;
}

uint64_t sub_1D264D0CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  char *v12;
  uint64_t (*v13)(char *, uint64_t, uint64_t);
  int v14;
  int v15;
  size_t v16;
  uint64_t v17;
  unint64_t v18;
  unint64_t v19;
  unint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64);
  v7 = sub_1D26CB9DC();
  v8 = *(_QWORD *)(v7 - 8);
  v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v10 = v6 + v9;
  v11 = (char *)((v6 + v9 + a1) & ~v9);
  v12 = (char *)((v10 + a2) & ~v9);
  v13 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48);
  v14 = v13(v11, 1, v7);
  v15 = v13(v12, 1, v7);
  if (v14)
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v11, v12, v7);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v8 + 56))(v11, 0, 1, v7);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v15)
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 40))(v11, v12, v7);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v8 + 8))(v11, v7);
  }
  if (*(_DWORD *)(v8 + 84))
    v16 = *(_QWORD *)(v8 + 64);
  else
    v16 = *(_QWORD *)(v8 + 64) + 1;
  memcpy(v11, v12, v16);
LABEL_10:
  if (*(_DWORD *)(v8 + 84))
    v17 = *(_QWORD *)(v8 + 64);
  else
    v17 = *(_QWORD *)(v8 + 64) + 1;
  v18 = (unint64_t)&v11[v17];
  v19 = (unint64_t)&v12[v17];
  *(_BYTE *)v18 = *(_BYTE *)v19;
  v20 = v18 & 0xFFFFFFFFFFFFFFF8;
  v21 = v19 & 0xFFFFFFFFFFFFFFF8;
  v22 = *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)((v18 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v19 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1D2534224(v22);
  v23 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  return a1;
}

uint64_t sub_1D264D24C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  unint64_t v16;
  unsigned int v18;
  int v19;
  uint64_t v20;
  unsigned int v21;
  unsigned int v22;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_1D26CB9DC() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0xFE)
    v11 = 254;
  else
    v11 = v10;
  if (v11 <= v7)
    v12 = v7;
  else
    v12 = v11;
  v13 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v13;
  if (!a2)
    return 0;
  v14 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  v15 = *(_QWORD *)(v6 + 64) + v14;
  if (a2 > v12)
  {
    v16 = (((v13 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + (v15 & ~v14) + 9;
    if (v16 > 3)
      goto LABEL_39;
    v18 = ((a2 - v12 + ~(-1 << (8 * v16))) >> (8 * v16)) + 1;
    if (HIWORD(v18))
    {
      if (!*(_DWORD *)(a1 + v16))
        goto LABEL_28;
      goto LABEL_23;
    }
    if (v18 > 0xFF)
    {
      if (!*(_WORD *)(a1 + v16))
        goto LABEL_28;
      goto LABEL_23;
    }
    if (v18 >= 2)
    {
LABEL_39:
      if (!*(_BYTE *)(a1 + v16))
        goto LABEL_28;
LABEL_23:
      if (v16 <= 3)
        v19 = (((v13 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + (v15 & ~(*(_DWORD *)(v8 + 80) & 0xF8 | 7)) + 9;
      else
        v19 = 4;
      __asm { BR              X12 }
    }
  }
LABEL_28:
  if (v7 >= v11)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v20 = (v15 + a1) & ~v14;
  if (v10 < 0xFE)
  {
    v22 = *(unsigned __int8 *)(v20 + v13);
    if (v22 >= 2)
      return v22 - 1;
    else
      return 0;
  }
  else
  {
    v21 = (*(uint64_t (**)(uint64_t))(v8 + 48))(v20);
    if (v21 >= 2)
      return v21 - 1;
    else
      return 0;
  }
}

void sub_1D264D430(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(sub_1D26CB9DC() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 <= 0xFE)
    v13 = 254;
  else
    v13 = v12;
  if (v13 <= v8)
    v14 = v8;
  else
    v14 = v13;
  v15 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  if (v11)
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = *(_QWORD *)(v10 + 64) + 1;
  v16 = *(_QWORD *)(v7 + 64) + v15;
  v18 = (((v17 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + (v16 & ~(_DWORD)v15) + 9;
  if (a3 > v14)
  {
    if (v18 > 3)
    {
      v9 = 1u;
      if (v14 >= a2)
        goto LABEL_15;
LABEL_21:
      v20 = ~v14 + a2;
      bzero(a1, (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + (v16 & ~v15) + 9);
      if (v18 < 4)
        *a1 = v20 & ~(-1 << (8 * v18));
      else
        *(_DWORD *)a1 = v20;
      __asm { BR              X10 }
    }
    v19 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v19))
    {
      v9 = 4u;
      if (v14 < a2)
        goto LABEL_21;
LABEL_15:
      __asm { BR              X15 }
    }
    if (v19 >= 0x100)
      v9 = 2;
    else
      v9 = v19 > 1;
  }
  if (v14 < a2)
    goto LABEL_21;
  goto LABEL_15;
}

void sub_1D264D728()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
  JUMPOUT(0x1D264D700);
}

uint64_t sub_1D264D73C()
{
  uint64_t result;
  unint64_t v1;
  unint64_t v2;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = type metadata accessor for ReloadConfiguration(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_1D264D7D0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  int v10;
  uint64_t v11;
  size_t v12;
  int v13;
  uint64_t v15;
  uint64_t v16;
  _QWORD *v17;
  _QWORD *v18;
  void *v19;
  char *v20;
  unsigned int (*v21)(char *, uint64_t, uint64_t);
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_QWORD *)(v6 + 64);
  v8 = sub_1D26CB9DC();
  v9 = *(_QWORD *)(v8 - 8);
  v10 = *(_DWORD *)(v9 + 80);
  v11 = v10 & 0xF8 | 7;
  if (*(_DWORD *)(v9 + 84))
    v12 = *(_QWORD *)(v9 + 64);
  else
    v12 = *(_QWORD *)(v9 + 64) + 1;
  v13 = v10 | *(_DWORD *)(v6 + 80);
  if ((v13 & 0x1000F8) != 0
    || ((v11 + ((v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v11)
     + (((v12 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
     + 9 > 0x18)
  {
    v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + (((v13 & 0xF8 | 7u) + 16) & ~(unint64_t)(v13 & 0xF8 | 7u)));
    swift_retain();
  }
  else
  {
    v16 = v8;
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    v17 = (_QWORD *)(((unint64_t)a1 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    v18 = (_QWORD *)(((unint64_t)a2 + v7 + 7) & 0xFFFFFFFFFFFFFFF8);
    *v17 = *v18;
    v19 = (void *)(((unint64_t)v17 + v11 + 8) & ~v11);
    v20 = (char *)(((unint64_t)v18 + v11 + 8) & ~v11);
    v21 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48);
    swift_bridgeObjectRetain();
    if (v21(v20, 1, v16))
    {
      memcpy(v19, v20, v12);
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v9 + 16))(v19, v20, v16);
      (*(void (**)(void *, _QWORD, uint64_t, uint64_t))(v9 + 56))(v19, 0, 1, v16);
    }
    v22 = (unint64_t)&v20[v12];
    *((_BYTE *)v19 + v12) = v20[v12];
    v23 = ((unint64_t)v19 + v12) & 0xFFFFFFFFFFFFFFF8;
    v24 = v22 & 0xFFFFFFFFFFFFFFF8;
    v25 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
    sub_1D2534610(v25);
    *(_QWORD *)(v23 + 8) = v25;
    v26 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
    v27 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
    *(_QWORD *)v26 = *(_QWORD *)v27;
    *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  }
  return a1;
}

unint64_t sub_1D264D9A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;

  v3 = *(_QWORD *)(*(_QWORD *)(a2 + 16) - 8);
  (*(void (**)(void))(v3 + 8))();
  v4 = (a1 + *(_QWORD *)(v3 + 64) + 7) & 0xFFFFFFFFFFFFFFF8;
  swift_bridgeObjectRelease();
  v5 = sub_1D26CB9DC();
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(_DWORD *)(v6 + 80) & 0xF8 | 7;
  v8 = (v4 + v7 + 8) & ~v7;
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v8, 1, v5))
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v8, v5);
  v9 = *(_QWORD *)(v6 + 64) + v8;
  if (!*(_DWORD *)(v6 + 84))
    ++v9;
  return sub_1D2534224(*(_QWORD *)((v9 & 0xFFFFFFFFFFFFF8) + 8));
}

uint64_t sub_1D264DA5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  unsigned int (*v17)(char *, uint64_t, uint64_t);
  int v18;
  uint64_t v19;
  size_t v20;
  uint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 16))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = sub_1D26CB9DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 15;
  v13 = (unint64_t)v7 + v11 + 15;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (char *)(v13 & v14);
  v16 = (char *)(((unint64_t)v8 + v12) & v14);
  v17 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48);
  swift_bridgeObjectRetain();
  if (v17(v16, 1, v9))
  {
    v18 = *(_DWORD *)(v10 + 84);
    v19 = *(_QWORD *)(v10 + 64);
    if (v18)
      v20 = *(_QWORD *)(v10 + 64);
    else
      v20 = v19 + 1;
    memcpy(v15, v16, v20);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    v18 = *(_DWORD *)(v10 + 84);
    v19 = *(_QWORD *)(v10 + 64);
  }
  if (v18)
    v21 = v19;
  else
    v21 = v19 + 1;
  v22 = (unint64_t)&v15[v21];
  v23 = (unint64_t)&v16[v21];
  *(_BYTE *)v22 = *(_BYTE *)v23;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  v25 = v23 & 0xFFFFFFFFFFFFFFF8;
  v26 = *(_QWORD *)((v23 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1D2534610(v26);
  *(_QWORD *)(v24 + 8) = v26;
  v27 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  return a1;
}

uint64_t sub_1D264DBC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t (*v17)(unint64_t, uint64_t, uint64_t);
  int v18;
  size_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;
  unint64_t v28;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 24))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v9 = sub_1D26CB9DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 15;
  v13 = (unint64_t)v7 + v11 + 15;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (char *)(v13 & v14);
  v16 = (char *)(((unint64_t)v8 + v12) & v14);
  v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v8) = v17(v13 & v14, 1, v9);
  v18 = v17((unint64_t)v16, 1, v9);
  if ((_DWORD)v8)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v15, v16, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 24))(v15, v16, v9);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v19 = *(_QWORD *)(v10 + 64);
  else
    v19 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v15, v16, v19);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v20 = *(_QWORD *)(v10 + 64);
  else
    v20 = *(_QWORD *)(v10 + 64) + 1;
  v21 = (unint64_t)&v15[v20];
  v22 = (unint64_t)&v16[v20];
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1D2534610(v25);
  v26 = *(_QWORD *)(v23 + 8);
  *(_QWORD *)(v23 + 8) = v25;
  sub_1D2534224(v26);
  v27 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v28 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v27 = *(_QWORD *)v28;
  *(_BYTE *)(v27 + 8) = *(_BYTE *)(v28 + 8);
  return a1;
}

uint64_t sub_1D264DD78(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  int v17;
  size_t v18;
  size_t v19;
  size_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 32))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  v9 = sub_1D26CB9DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 15;
  v13 = (unint64_t)v7 + v11 + 15;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (char *)(v13 & v14);
  v16 = (char *)(((unint64_t)v8 + v12) & v14);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v16, 1, v9))
  {
    v17 = *(_DWORD *)(v10 + 84);
    v18 = *(_QWORD *)(v10 + 64);
    if (v17)
      v19 = v18;
    else
      v19 = v18 + 1;
    memcpy(v15, v16, v19);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
    (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
    v17 = *(_DWORD *)(v10 + 84);
    v18 = *(_QWORD *)(v10 + 64);
  }
  if (v17)
    v20 = v18;
  else
    v20 = v18 + 1;
  v21 = (unint64_t)&v15[v20];
  v22 = (unint64_t)&v16[v20];
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v21 &= 0xFFFFFFFFFFFFFFF8;
  v22 &= 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)(v21 + 8) = *(_QWORD *)(v22 + 8);
  v23 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  v24 = (v22 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v23 = *(_QWORD *)v24;
  *(_BYTE *)(v23 + 8) = *(_BYTE *)(v24 + 8);
  return a1;
}

uint64_t sub_1D264DEC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  _QWORD *v7;
  _QWORD *v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char *v15;
  char *v16;
  uint64_t (*v17)(unint64_t, uint64_t, uint64_t);
  int v18;
  size_t v19;
  uint64_t v20;
  unint64_t v21;
  unint64_t v22;
  unint64_t v23;
  unint64_t v24;
  unint64_t v25;
  unint64_t v26;
  unint64_t v27;

  v5 = *(_QWORD *)(*(_QWORD *)(a3 + 16) - 8);
  (*(void (**)(void))(v5 + 40))();
  v6 = *(_QWORD *)(v5 + 64) + 7;
  v7 = (_QWORD *)((v6 + a1) & 0xFFFFFFFFFFFFFFF8);
  v8 = (_QWORD *)((v6 + a2) & 0xFFFFFFFFFFFFFFF8);
  *v7 = *v8;
  swift_bridgeObjectRelease();
  v9 = sub_1D26CB9DC();
  v10 = *(_QWORD *)(v9 - 8);
  v11 = *(_DWORD *)(v10 + 80) & 0xF8;
  v12 = v11 + 15;
  v13 = (unint64_t)v7 + v11 + 15;
  v14 = ~v11 & 0xFFFFFFFFFFFFFFF8;
  v15 = (char *)(v13 & v14);
  v16 = (char *)(((unint64_t)v8 + v12) & v14);
  v17 = *(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v10 + 48);
  LODWORD(v8) = v17(v13 & v14, 1, v9);
  v18 = v17((unint64_t)v16, 1, v9);
  if ((_DWORD)v8)
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 32))(v15, v16, v9);
      (*(void (**)(char *, _QWORD, uint64_t, uint64_t))(v10 + 56))(v15, 0, 1, v9);
      goto LABEL_10;
    }
  }
  else
  {
    if (!v18)
    {
      (*(void (**)(char *, char *, uint64_t))(v10 + 40))(v15, v16, v9);
      goto LABEL_10;
    }
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  if (*(_DWORD *)(v10 + 84))
    v19 = *(_QWORD *)(v10 + 64);
  else
    v19 = *(_QWORD *)(v10 + 64) + 1;
  memcpy(v15, v16, v19);
LABEL_10:
  if (*(_DWORD *)(v10 + 84))
    v20 = *(_QWORD *)(v10 + 64);
  else
    v20 = *(_QWORD *)(v10 + 64) + 1;
  v21 = (unint64_t)&v15[v20];
  v22 = (unint64_t)&v16[v20];
  *(_BYTE *)v21 = *(_BYTE *)v22;
  v23 = v21 & 0xFFFFFFFFFFFFFFF8;
  v24 = v22 & 0xFFFFFFFFFFFFFFF8;
  v25 = *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8);
  *(_QWORD *)((v21 & 0xFFFFFFFFFFFFFFF8) + 8) = *(_QWORD *)((v22 & 0xFFFFFFFFFFFFFFF8) + 8);
  sub_1D2534224(v25);
  v26 = (v23 + 23) & 0xFFFFFFFFFFFFFFF8;
  v27 = (v24 + 23) & 0xFFFFFFFFFFFFFFF8;
  *(_QWORD *)v26 = *(_QWORD *)v27;
  *(_BYTE *)(v26 + 8) = *(_BYTE *)(v27 + 8);
  return a1;
}

uint64_t sub_1D264E06C(uint64_t a1, unsigned int a2, uint64_t a3)
{
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  int v9;
  unsigned int v10;
  unsigned int v11;
  unsigned int v12;
  unsigned int v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  unint64_t v17;
  unsigned int v19;
  int v20;
  unint64_t *v21;
  unint64_t v22;
  uint64_t v23;
  unsigned int v24;
  unsigned int v25;

  v5 = *(_QWORD *)(a3 + 16);
  v6 = *(_QWORD *)(v5 - 8);
  v7 = *(unsigned int *)(v6 + 84);
  v8 = *(_QWORD *)(sub_1D26CB9DC() - 8);
  v9 = *(_DWORD *)(v8 + 84);
  if (v9)
    v10 = v9 - 1;
  else
    v10 = 0;
  if (v10 <= 0xFE)
    v11 = 254;
  else
    v11 = v10;
  if (v7 <= v11)
    v12 = v11;
  else
    v12 = v7;
  if (v12 <= 0x7FFFFFFF)
    v13 = 0x7FFFFFFF;
  else
    v13 = v12;
  v14 = *(_QWORD *)(v8 + 64);
  if (!v9)
    ++v14;
  if (!a2)
    return 0;
  v15 = *(_QWORD *)(v6 + 64);
  v16 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  if (a2 > v13)
  {
    v17 = ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16)
        + (((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)
        + 9;
    if (v17 > 3)
      goto LABEL_46;
    v19 = ((a2 - v13 + ~(-1 << (8 * v17))) >> (8 * v17)) + 1;
    if (HIWORD(v19))
    {
      if (!*(_DWORD *)(a1 + v17))
        goto LABEL_31;
      goto LABEL_26;
    }
    if (v19 > 0xFF)
    {
      if (!*(_WORD *)(a1 + v17))
        goto LABEL_31;
      goto LABEL_26;
    }
    if (v19 >= 2)
    {
LABEL_46:
      if (!*(_BYTE *)(a1 + v17))
        goto LABEL_31;
LABEL_26:
      if (v17 <= 3)
        v20 = ((v16 + ((v15 + 7) & 0xFFFFFFF8) + 8) & ~(_DWORD)v16) + (((v14 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
      else
        v20 = 4;
      __asm { BR              X12 }
    }
  }
LABEL_31:
  if ((_DWORD)v7 == v13)
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, v7, v5);
  v21 = (unint64_t *)((a1 + v15 + 7) & 0xFFFFFFFFFFFFFFF8);
  if ((v12 & 0x80000000) != 0)
  {
    v23 = ((unint64_t)v21 + v16 + 8) & ~v16;
    if (v10 < 0xFE)
    {
      v25 = *(unsigned __int8 *)(v23 + v14);
      if (v25 >= 2)
        return v25 - 1;
      else
        return 0;
    }
    else
    {
      v24 = (*(uint64_t (**)(uint64_t))(v8 + 48))(v23);
      if (v24 >= 2)
        return v24 - 1;
      else
        return 0;
    }
  }
  else
  {
    v22 = *v21;
    if (v22 >= 0xFFFFFFFF)
      LODWORD(v22) = -1;
    return (v22 + 1);
  }
}

void sub_1D264E294(_BYTE *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v7;
  unsigned int v8;
  unsigned int v9;
  uint64_t v10;
  int v11;
  unsigned int v12;
  unsigned int v13;
  unsigned int v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  unsigned int v18;
  unsigned int v19;
  unsigned int v20;

  v7 = *(_QWORD *)(*(_QWORD *)(a4 + 16) - 8);
  v8 = *(_DWORD *)(v7 + 84);
  v9 = 0u;
  v10 = *(_QWORD *)(sub_1D26CB9DC() - 8);
  v11 = *(_DWORD *)(v10 + 84);
  v12 = v11 - 1;
  if (!v11)
    v12 = 0;
  if (v12 <= 0xFE)
    v13 = 254;
  else
    v13 = v12;
  if (v8 > v13)
    v13 = v8;
  if (v13 <= 0x7FFFFFFF)
    v14 = 0x7FFFFFFF;
  else
    v14 = v13;
  v16 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  if (v11)
    v17 = *(_QWORD *)(v10 + 64);
  else
    v17 = *(_QWORD *)(v10 + 64) + 1;
  v15 = *(_QWORD *)(v7 + 64);
  v18 = ((v16 + ((v15 + 7) & 0xFFFFFFF8) + 8) & ~(_DWORD)v16) + (((v17 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 9;
  if (a3 > v14)
  {
    if (v18 > 3)
    {
      v9 = 1u;
      if (v14 >= a2)
LABEL_28:
        __asm { BR              X17 }
LABEL_23:
      v20 = ~v14 + a2;
      bzero(a1, ((v16 + ((v15 + 7) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v16)+ (((v17 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8)+ 9);
      if (v18 < 4)
        *a1 = v20 & ~(-1 << (8 * v18));
      else
        *(_DWORD *)a1 = v20;
      __asm { BR              X10 }
    }
    v19 = ((a3 - v14 + ~(-1 << (8 * v18))) >> (8 * v18)) + 1;
    if (HIWORD(v19))
    {
      v9 = 4u;
      if (v14 >= a2)
        goto LABEL_28;
      goto LABEL_23;
    }
    if (v19 >= 0x100)
      v9 = 2;
    else
      v9 = v19 > 1;
  }
  if (v14 >= a2)
    goto LABEL_28;
  goto LABEL_23;
}

void sub_1D264E444(size_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X8>, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14)
{
  unsigned int v14;
  int v15;
  uint64_t v16;
  uint64_t v17;
  int v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  void (*v26)(uint64_t, uint64_t, uint64_t, uint64_t);
  uint64_t v27;
  uint64_t v28;
  _QWORD *v29;
  uint64_t v30;
  int v31;

  *(_BYTE *)(v20 + v24) = 0;
  if ((_DWORD)v21)
  {
    if ((_DWORD)v23 == v18)
    {
      v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
      v27 = v20;
      v28 = v21;
      a2 = v23;
      a3 = v22;
LABEL_4:
      v26(v27, v28, a2, a3);
      return;
    }
    v29 = (_QWORD *)((v20 + v17 + 7) & 0xFFFFFFFFFFFFFFF8);
    if (v15 < 0)
    {
      if (v14 < 0xFE)
      {
        *(_BYTE *)((((unint64_t)v29 + v16 + 8) & v19) + a1) = v21 + 1;
      }
      else
      {
        if (v14 >= v21)
        {
          v28 = (v21 + 1);
          v26 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(a4 + 56);
          v27 = ((unint64_t)v29 + v16 + 8) & v19;
          goto LABEL_4;
        }
        if ((_DWORD)a1)
        {
          if (a1 <= 3)
            v31 = a1;
          else
            v31 = 4;
          bzero((void *)(((unint64_t)v29 + v16 + 8) & v19), a1);
          __asm { BR              X10 }
        }
      }
    }
    else
    {
      if ((v21 & 0x80000000) != 0)
        v30 = v21 ^ 0x80000000;
      else
        v30 = (v21 - 1);
      *v29 = v30;
    }
  }
}

void sub_1D264E578()
{
  _WORD *v0;
  __int16 v1;

  *v0 = v1;
}

void sub_1D264E580()
{
  uint64_t v0;
  int v1;

  *(_WORD *)v0 = v1;
  *(_BYTE *)(v0 + 2) = BYTE2(v1);
}

void sub_1D264E590()
{
  _DWORD *v0;
  int v1;

  *v0 = v1;
}

uint64_t dispatch thunk of StatefulStoring.init<A, B>(reloadStrategy:reloadConfigurationPolicy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return (*(uint64_t (**)(void))(a8 + 72))();
}

uint64_t dispatch thunk of StatefulStoring.reloadPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 80))();
}

uint64_t dispatch thunk of StatefulStoring.ignoredReloadPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of StatefulStoring.addedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 96))();
}

uint64_t dispatch thunk of StatefulStoring.removedPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 104))();
}

uint64_t dispatch thunk of StatefulStoring.addedVariantPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 112))();
}

uint64_t dispatch thunk of StatefulStoring.removedVariantPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 120))();
}

uint64_t dispatch thunk of StatefulStoring.variantReloadPublisher(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 128))();
}

uint64_t dispatch thunk of StatefulStoring.keys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 136))();
}

uint64_t dispatch thunk of StatefulStoring.variantKeys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 144))();
}

uint64_t dispatch thunk of StatefulStoring.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 152))();
}

{
  return (*(uint64_t (**)(void))(a3 + 168))();
}

uint64_t dispatch thunk of StatefulStoring.subscript.getter(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 160))();
}

uint64_t dispatch thunk of StatefulStoring.state(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 176))();
}

uint64_t dispatch thunk of StatefulStoring.reload(configuration:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 184))();
}

uint64_t dispatch thunk of StatefulStoring.reloadAll(configuration:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 192))();
}

uint64_t dispatch thunk of StatefulStoring.captureState()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 200))();
}

uint64_t dispatch thunk of StatefulStoring.mutate(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 208))();
}

uint64_t dispatch thunk of StatefulStoreMutating.keys.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 72))();
}

uint64_t dispatch thunk of StatefulStoreMutating.entry(key:variantKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 80))();
}

uint64_t dispatch thunk of StatefulStoreMutating.removeAll()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 88))();
}

uint64_t dispatch thunk of StatefulStoreMutating.remove(key:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 96))();
}

uint64_t dispatch thunk of StatefulStoreMutating.remove(key:variantKey:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 104))();
}

uint64_t dispatch thunk of StatefulStoreMutating.add(key:variantKey:entry:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return (*(uint64_t (**)(void))(a5 + 112))();
}

uint64_t dispatch thunk of StatefulStoreMutating.reload(configuration:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 120))();
}

uint64_t sub_1D264E68C()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)(v0 + 16) + 136))();
}

uint64_t sub_1D264E6B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;
  uint64_t v7;

  v6 = swift_allocObject();
  sub_1D264EC48(a1, a2, a3, v7);
  return v6;
}

uint64_t sub_1D264E708()
{
  uint64_t v0;
  uint64_t v1;
  __int128 v3[2];
  uint64_t v4;
  _QWORD v5[5];
  _QWORD v6[4];

  if (*(_QWORD *)(v0 + 64))
  {
    v1 = *(_QWORD *)(v0 + 56);
  }
  else
  {
    sub_1D2538510(v0 + 16, (uint64_t)v5);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B48);
    __swift_instantiateConcreteTypeFromMangledName(&qword_1ED962148);
    if (swift_dynamicCast())
    {
      sub_1D2538F38(v3, (uint64_t)v6);
      __swift_project_boxed_opaque_existential_0(v6, v6[3]);
      v1 = sub_1D26CE370();
      __swift_destroy_boxed_opaque_existential_1((uint64_t)v6);
    }
    else
    {
      v4 = 0;
      memset(v3, 0, sizeof(v3));
      sub_1D264E860((uint64_t)v3);
      v6[0] = 0;
      v6[1] = 0xE000000000000000;
      sub_1D26CE0A0();
      sub_1D26CDA04();
      v5[0] = v0;
      sub_1D26CE190();
      sub_1D26CDA04();
      v1 = v6[0];
    }
  }
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t sub_1D264E860(uint64_t a1)
{
  uint64_t v2;

  v2 = __swift_instantiateConcreteTypeFromMangledName(&qword_1EFC833C8);
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t ReloadTaskCancellable.__allocating_init(_:description:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  char *v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v15;

  v7 = *(_QWORD *)(a1 + 24);
  v8 = *(_QWORD *)(a1 + 32);
  v9 = __swift_mutable_project_boxed_opaque_existential_1(a1, v7);
  MEMORY[0x1E0C80A78](v9);
  v11 = (char *)&v15 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v12 + 16))(v11);
  v13 = sub_1D264EEC4((uint64_t)v11, a2, a3, v3, v7, v8);
  __swift_destroy_boxed_opaque_existential_1(a1);
  return v13;
}

uint64_t ReloadTaskCancellable.init(_:description:)(__int128 *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v3;

  sub_1D2538F38(a1, v3 + 16);
  *(_QWORD *)(v3 + 56) = a2;
  *(_QWORD *)(v3 + 64) = a3;
  return v3;
}

uint64_t ReloadTaskCancellable.__allocating_init(_:description:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  __int128 v10;
  uint64_t v11;
  uint64_t v12;

  v6 = sub_1D26CC114();
  swift_allocObject();
  v7 = sub_1D26CC120();
  v11 = v6;
  v12 = MEMORY[0x1E0C95DF8];
  *(_QWORD *)&v10 = v7;
  type metadata accessor for ReloadTaskCancellable();
  v8 = swift_allocObject();
  sub_1D2538F38(&v10, v8 + 16);
  *(_QWORD *)(v8 + 56) = a3;
  *(_QWORD *)(v8 + 64) = a4;
  return v8;
}

uint64_t sub_1D264EA34()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_0((_QWORD *)(v0 + 16), *(_QWORD *)(v0 + 40));
  return sub_1D26CC0E4();
}

uint64_t sub_1D264EA74()
{
  return sub_1D26CE46C();
}

BOOL static ReloadTaskCancellable.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return a1 == a2;
}

uint64_t ReloadTaskCancellable.deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t ReloadTaskCancellable.__deallocating_deinit()
{
  uint64_t v0;

  __swift_destroy_boxed_opaque_existential_1(v0 + 16);
  swift_bridgeObjectRelease();
  return swift_deallocClassInstance();
}

uint64_t sub_1D264EAF8()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D264EB3C()
{
  uint64_t v0;

  __swift_project_boxed_opaque_existential_0((_QWORD *)(*(_QWORD *)v0 + 16), *(_QWORD *)(*(_QWORD *)v0 + 40));
  return sub_1D26CC0E4();
}

uint64_t sub_1D264EB80()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D264EBC4()
{
  return sub_1D26CE46C();
}

uint64_t sub_1D264EBEC()
{
  sub_1D26CE460();
  sub_1D26CE46C();
  return sub_1D26CE49C();
}

uint64_t sub_1D264EC28()
{
  return sub_1D264E708();
}

uint64_t sub_1D264EC48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4;
  uint64_t v6;

  type metadata accessor for _AnyReloadingStrategyBox(0, a2, a3, a4);
  v6 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v6 + 144) - 8) + 32))(v6 + *(_QWORD *)(*(_QWORD *)v6 + 160), a1);
  *(_QWORD *)(v4 + 16) = v6;
  return v4;
}

uint64_t sub_1D264ECAC(uint64_t a1)
{
  uint64_t v2;

  v2 = swift_allocObject();
  (*(void (**)(uint64_t, uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v2 + 144) - 8) + 32))(v2 + *(_QWORD *)(*(_QWORD *)v2 + 160), a1);
  return v2;
}

uint64_t sub_1D264ED00()
{
  return sub_1D264E68C();
}

void sub_1D264ED20()
{
  sub_1D26CE1D8();
  __break(1u);
}

uint64_t sub_1D264ED68()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(**(_QWORD **)v0 + 136))();
}

uint64_t sub_1D264ED90(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t *v5;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  char *v15;
  uint64_t v16;
  uint64_t v18;

  v11 = *v5;
  v12 = *(_QWORD *)(*v5 + 144);
  v13 = *(_QWORD *)(v12 - 8);
  MEMORY[0x1E0C80A78]();
  v15 = (char *)&v18 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, (uint64_t)v5 + *(_QWORD *)(v11 + 160), v12);
  v16 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v11 + 152) + 56))(a1, a2, a3, a4, a5, v12);
  (*(void (**)(char *, uint64_t))(v13 + 8))(v15, v12);
  return v16;
}

uint64_t sub_1D264EE6C()
{
  uint64_t v0;

  return (*(uint64_t (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 144) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
}

uint64_t sub_1D264EE88()
{
  uint64_t v0;

  (*(void (**)(uint64_t))(*(_QWORD *)(*(_QWORD *)(*(_QWORD *)v0 + 144) - 8) + 8))(v0 + *(_QWORD *)(*(_QWORD *)v0 + 160));
  return swift_deallocClassInstance();
}

uint64_t sub_1D264EEC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t *boxed_opaque_existential_1;
  uint64_t v11;
  __int128 v13;
  uint64_t v14;
  uint64_t v15;

  v14 = a5;
  v15 = a6;
  boxed_opaque_existential_1 = __swift_allocate_boxed_opaque_existential_1((uint64_t *)&v13);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(_QWORD *)(a5 - 8) + 32))(boxed_opaque_existential_1, a1, a5);
  type metadata accessor for ReloadTaskCancellable();
  v11 = swift_allocObject();
  sub_1D2538F38(&v13, v11 + 16);
  *(_QWORD *)(v11 + 56) = a2;
  *(_QWORD *)(v11 + 64) = a3;
  return v11;
}

uint64_t type metadata accessor for ReloadTaskCancellable()
{
  return objc_opt_self();
}

unint64_t sub_1D264EF68()
{
  unint64_t result;
  uint64_t v1;

  result = qword_1EFC833D0;
  if (!qword_1EFC833D0)
  {
    v1 = type metadata accessor for ReloadTaskCancellable();
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for ReloadTaskCancellable, v1);
    atomic_store(result, (unint64_t *)&qword_1EFC833D0);
  }
  return result;
}

uint64_t method lookup function for ReloadTaskCancellable()
{
  return swift_lookUpClassMethod();
}

uint64_t dispatch thunk of ReloadTaskCancellable.description.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 96))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.__allocating_init(_:description:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(v0 + 104))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.cancel()()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 112))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.hash(into:)()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 120))();
}

uint64_t dispatch thunk of ReloadTaskCancellable.hashValue.getter()
{
  uint64_t v0;

  return (*(uint64_t (**)(void))(*(_QWORD *)v0 + 128))();
}

uint64_t dispatch thunk of ReloadingStrategy.reload(context:variantContexts:configuration:completion:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 56))();
}

uint64_t sub_1D264EFF8()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for AnyReloadingStrategy()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D264F048()
{
  return swift_initClassMetadata2();
}

void type metadata accessor for _AnyReloadingStrategyBase()
{
  JUMPOUT(0x1D823A430);
}

uint64_t sub_1D264F088()
{
  uint64_t result;
  unint64_t v1;

  result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    result = swift_initClassMetadata2();
    if (!result)
      return 0;
  }
  return result;
}

uint64_t type metadata accessor for _AnyReloadingStrategyBox(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return __swift_instantiateGenericMetadata(a1, a2, a3, a4, (uint64_t)&nominal type descriptor for _AnyReloadingStrategyBox);
}

uint64_t DescriptorChangeReason.hash(into:)()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      result = sub_1D26CE46C();
      break;
    default:
      sub_1D26CE46C();
      result = sub_1D26CD9D4();
      break;
  }
  return result;
}

uint64_t DescriptorChangeReason.hashValue.getter()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1D26CE460();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      sub_1D26CE46C();
      break;
    default:
      sub_1D26CE46C();
      sub_1D26CD9D4();
      break;
  }
  return sub_1D26CE49C();
}

uint64_t sub_1D264F27C()
{
  uint64_t v0;
  uint64_t result;

  switch(*(_QWORD *)(v0 + 8))
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      result = sub_1D26CE46C();
      break;
    default:
      sub_1D26CE46C();
      result = sub_1D26CD9D4();
      break;
  }
  return result;
}

uint64_t sub_1D264F324()
{
  uint64_t v0;
  uint64_t v1;

  v1 = *(_QWORD *)(v0 + 8);
  sub_1D26CE460();
  switch(v1)
  {
    case 0:
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
      sub_1D26CE46C();
      break;
    default:
      sub_1D26CE46C();
      sub_1D26CD9D4();
      break;
  }
  return sub_1D26CE49C();
}

uint64_t WidgetDescriptorsChangeEvent.descriptors.getter()
{
  return swift_retain();
}

uint64_t WidgetDescriptorsChangeEvent.descriptors.setter(uint64_t a1)
{
  _QWORD *v1;
  uint64_t result;

  result = swift_release();
  *v1 = a1;
  return result;
}

uint64_t (*WidgetDescriptorsChangeEvent.descriptors.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetDescriptorsChangeEvent.reasons.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t WidgetDescriptorsChangeEvent.reasons.setter(uint64_t a1)
{
  uint64_t v1;
  uint64_t result;

  result = swift_bridgeObjectRelease();
  *(_QWORD *)(v1 + 8) = a1;
  return result;
}

uint64_t (*WidgetDescriptorsChangeEvent.reasons.modify())()
{
  return CGSizeMake;
}

uint64_t WidgetDescriptorsChangeEvent.init(descriptors:reasons:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, _QWORD *a3@<X8>)
{
  *a3 = result;
  a3[1] = a2;
  return result;
}

uint64_t (*ControlDescriptorsChangeEvent.descriptors.modify())()
{
  return CGSizeMake;
}

uint64_t (*ControlDescriptorsChangeEvent.reasons.modify())()
{
  return CGSizeMake;
}

uint64_t _s9ChronoKit22DescriptorChangeReasonO2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  char v6;

  v2 = *a1;
  v3 = a1[1];
  v4 = *a2;
  v5 = a2[1];
  switch(v3)
  {
    case 0uLL:
      if (v5)
        goto LABEL_15;
      v3 = 0;
      v6 = 1;
      break;
    case 1uLL:
      if (v5 != 1)
        goto LABEL_15;
      v3 = 1;
      v6 = 1;
      break;
    case 2uLL:
      if (v5 != 2)
        goto LABEL_15;
      v6 = 1;
      v3 = 2;
      break;
    case 3uLL:
      if (v5 != 3)
        goto LABEL_15;
      v6 = 1;
      v3 = 3;
      break;
    case 4uLL:
      if (v5 != 4)
        goto LABEL_15;
      v6 = 1;
      v3 = 4;
      break;
    case 5uLL:
      if (v5 != 5)
        goto LABEL_15;
      v6 = 1;
      v3 = 5;
      break;
    default:
      if (v5 >= 6)
      {
        if (v2 == v4 && v3 == v5)
          v6 = 1;
        else
          v6 = sub_1D26CE3D0();
      }
      else
      {
LABEL_15:
        v6 = 0;
      }
      sub_1D25F5E14(v4, v5);
      sub_1D25F5E14(v2, v3);
      break;
  }
  sub_1D25F5E28(v2, v3);
  sub_1D25F5E28(v4, v5);
  return v6 & 1;
}

unint64_t sub_1D264F5D0()
{
  unint64_t result;

  result = qword_1ED96C8A0;
  if (!qword_1ED96C8A0)
  {
    result = MEMORY[0x1D823A4E4](&protocol conformance descriptor for DescriptorChangeReason, &type metadata for DescriptorChangeReason);
    atomic_store(result, (unint64_t *)&qword_1ED96C8A0);
  }
  return result;
}

uint64_t dispatch thunk of DescriptorProviding.extensionPublisher.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of DescriptorProviding.extensions.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of WidgetDescriptorProviding.widgetDescriptors.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ActivityDescriptorProviding.activityDescriptor(targeting:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 16))();
}

uint64_t dispatch thunk of ActivityDescriptorProviding.activityDescriptors(containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(a3 + 24))();
}

uint64_t dispatch thunk of ActivityDescriptorProviding.activityDescriptor(for:containedBy:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 32))();
}

unint64_t destroy for DescriptorChangeReason(uint64_t a1)
{
  unint64_t result;

  result = *(_QWORD *)(a1 + 8);
  if (result >= 0xFFFFFFFF)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t _s9ChronoKit22DescriptorChangeReasonOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3;

  v3 = *(_QWORD *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(_QWORD *)a1 = *(_QWORD *)a2;
    *(_QWORD *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

_QWORD *assignWithCopy for DescriptorChangeReason(_QWORD *a1, _QWORD *a2)
{
  unint64_t v4;

  v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for DescriptorChangeReason(uint64_t a1, uint64_t a2)
{
  unint64_t v4;

  if (*(_QWORD *)(a1 + 8) < 0xFFFFFFFFuLL)
    goto LABEL_5;
  v4 = *(_QWORD *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(_QWORD *)a1 = *(_QWORD *)a2;
  *(_QWORD *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for DescriptorChangeReason(uint64_t a1, unsigned int a2)
{
  unint64_t v3;
  unsigned int v4;
  unsigned int v5;

  if (!a2)
    return 0;
  if (a2 > 0x7FFFFFF9 && *(_BYTE *)(a1 + 16))
    return (*(_DWORD *)a1 + 2147483642);
  v3 = *(_QWORD *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF)
    LODWORD(v3) = -1;
  v4 = v3 + 1;
  v5 = v3 - 5;
  if (v4 >= 7)
    return v5;
  else
    return 0;
}

uint64_t storeEnumTagSinglePayload for DescriptorChangeReason(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFA)
  {
    *(_QWORD *)result = 0;
    *(_QWORD *)(result + 8) = 0;
    *(_DWORD *)result = a2 - 2147483642;
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if (a3 >= 0x7FFFFFFA)
      *(_BYTE *)(result + 16) = 0;
    if (a2)
      *(_QWORD *)(result + 8) = a2 + 5;
  }
  return result;
}

uint64_t sub_1D264F860(uint64_t a1)
{
  unint64_t v1;

  v1 = *(_QWORD *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF)
    LODWORD(v1) = -1;
  return (v1 + 1);
}

_QWORD *sub_1D264F878(_QWORD *result, int a2)
{
  if (a2 < 0)
  {
    *result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for DescriptorChangeReason()
{
  return &type metadata for DescriptorChangeReason;
}

uint64_t destroy for WidgetDescriptorsChangeEvent()
{
  swift_release();
  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for WidgetDescriptorsChangeEvent()
{
  return &type metadata for WidgetDescriptorsChangeEvent;
}

_QWORD *_s9ChronoKit28WidgetDescriptorsChangeEventVwCP_0(_QWORD *a1, _QWORD *a2)
{
  uint64_t v3;

  v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

_QWORD *_s9ChronoKit28WidgetDescriptorsChangeEventVwca_0(_QWORD *a1, _QWORD *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s9ChronoKit28WidgetDescriptorsChangeEventVwta_0(_OWORD *a1, _OWORD *a2)
{
  swift_release();
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for WidgetDescriptorCacheUpdate(uint64_t *a1, int a2)
{
  uint64_t v2;

  if (!a2)
    return 0;
  if (a2 < 0 && *((_BYTE *)a1 + 16))
    return *(_DWORD *)a1 + 0x80000000;
  v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF)
    LODWORD(v2) = -1;
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for WidgetDescriptorCacheUpdate(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_QWORD *)result = a2 ^ 0x80000000;
    *(_QWORD *)(result + 8) = 0;
    if (a3 < 0)
      *(_BYTE *)(result + 16) = 1;
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2)
        return result;
LABEL_8:
      *(_QWORD *)result = (a2 - 1);
      return result;
    }
    *(_BYTE *)(result + 16) = 0;
    if (a2)
      goto LABEL_8;
  }
  return result;
}

ValueMetadata *type metadata accessor for ControlDescriptorsChangeEvent()
{
  return &type metadata for ControlDescriptorsChangeEvent;
}

uint64_t ChronoMetadataStore.MutableRemoteExtensionStore.update(remoteWidgetExtensionInfo:)(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v5;
  uint64_t v6;
  id *v7;
  uint64_t v8;
  uint64_t Strong;
  uint64_t v10;
  uint64_t v11;
  os_unfair_lock_s *v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  uint64_t result;
  unint64_t v18;
  unint64_t v19;
  id v20;
  uint64_t v21;
  unint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  unint64_t v27;
  unint64_t v28;
  char v29;
  char v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  unint64_t v34;
  unint64_t v35;
  char v36;
  double v37;
  uint64_t v38;
  unint64_t v39;
  unint64_t v40;
  char v41;
  uint64_t v42;
  unint64_t v43;
  unint64_t v44;
  char v45;
  uint64_t v46;
  _QWORD v47[3];
  uint64_t v48;
  uint64_t v49;

  v3 = v2;
  v5 = type metadata accessor for WidgetExtensionInfo();
  MEMORY[0x1E0C80A78](v5);
  v7 = (id *)((char *)v47 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  v8 = v1 + 16;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_10;
  v10 = Strong;
  v11 = *(_QWORD *)(Strong + 24);
  v12 = *(os_unfair_lock_s **)(v11 + 16);
  swift_retain();
  os_unfair_lock_lock(v12);
  v13 = *(_QWORD *)(v10 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v11 + 16));
  swift_release();
  swift_release();
  if (!v13)
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1D2534120(a1, (uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
  if (!objc_msgSend(*v7, sel_isRemote))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_1D25340E4((uint64_t)v7, (uint64_t (*)(_QWORD))type metadata accessor for WidgetExtensionInfo);
  sub_1D26CB5E0();
  swift_allocObject();
  sub_1D26CB5D4();
  sub_1D25369B0(&qword_1EFC833F0, (uint64_t (*)(uint64_t))type metadata accessor for WidgetExtensionInfo, (uint64_t)&protocol conformance descriptor for WidgetExtensionInfo);
  v14 = sub_1D26CB5C8();
  v16 = v15;
  result = swift_release();
  if (v3)
    return result;
  v47[1] = 0;
  v47[2] = 0xE000000000000000;
  v18 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  v49 = v8;
  v19 = v18;
  MEMORY[0x1D8239188](75);
  v48 = v19;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v20 = objc_msgSend(*(id *)a1, sel_tokenString);
  v21 = sub_1D26CD938();
  v47[0] = v5;
  v22 = v16;
  v23 = v14;
  v25 = v24;

  swift_bridgeObjectRetain();
  v26 = sub_1D253FC20(v21, v25);
  v28 = v27;
  v30 = v29;
  sub_1D2641480(v26, v27, v29);
  sub_1D253FBE8(v26, v28, v30);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v31 = *(_QWORD *)(a1 + 8);
  v32 = *(_QWORD *)(a1 + 16);
  swift_bridgeObjectRetain_n();
  v33 = sub_1D253FC20(v31, v32);
  v35 = v34;
  LOBYTE(v25) = v36;
  sub_1D2641480(v33, v34, v36);
  sub_1D253FBE8(v33, v35, v25);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CB8F8();
  v38 = sub_1D25410E8(v37);
  v40 = v39;
  LOBYTE(v32) = v41;
  sub_1D2641480(v38, v39, v41);
  sub_1D253FBE8(v38, v40, v32);
  sub_1D26CDA04();
  sub_1D253FE08(v23, v22);
  sub_1D253FE08(v23, v22);
  v42 = sub_1D253FC0C(v23, v22);
  v44 = v43;
  LOBYTE(v32) = v45;
  sub_1D2641480(v42, v43, v45);
  sub_1D253FBE8(v42, v44, v32);
  sub_1D253EE04(v23, v22);
  sub_1D26CDA04();
  v46 = v48;
  if (!swift_weakLoadStrong())
  {
LABEL_10:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v46);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  sub_1D253EE04(v23, v22);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D264FFC0(uint64_t a1, unint64_t a2, uint64_t a3)
{
  _QWORD *v6;
  uint64_t v7;
  os_unfair_lock_s *v8;

  v6 = *(_QWORD **)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  sub_1D2672BD8();
  v7 = *(_QWORD *)(a3 + 128);
  v8 = *(os_unfair_lock_s **)(v7 + 16);
  swift_retain();
  os_unfair_lock_lock(v8);
  swift_retain();
  sub_1D255B110(a1, a2, v6);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v7 + 16));
  swift_release();
  sub_1D265505C();
  return swift_release();
}

uint64_t sub_1D2650084(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t *a4, uint64_t *a5)
{
  unint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v10 = *(_QWORD *)(a3 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_initStackObject();
  v11 = sub_1D2672BD8();
  v12 = *(_QWORD *)(a3 + 128);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_retain();
  sub_1D255B864(a1, a2, v10, (uint64_t)v11, a4, a5);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1D265505C();
  return swift_release();
}

uint64_t ChronoMetadataStore.update(reason:_:)(uint64_t a1, unint64_t a2, void (*a3)(uint64_t), uint64_t a4)
{
  uint64_t v4;
  uint64_t v5;
  uint64_t v10;
  _QWORD *v11;
  uint64_t v12;
  os_unfair_lock_s *v13;

  v5 = v4;
  v10 = *(_QWORD *)(v4 + 16);
  type metadata accessor for ChronoMetadataStore.MutableStore();
  swift_allocObject();
  v11 = sub_1D2672BD8();
  v12 = *(_QWORD *)(v5 + 128);
  v13 = *(os_unfair_lock_s **)(v12 + 16);
  swift_retain();
  os_unfair_lock_lock(v13);
  swift_retain();
  sub_1D255A944(a1, a2, v10, a3, a4, (uint64_t)v11);
  swift_release();
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v12 + 16));
  swift_release();
  sub_1D265505C();
  return swift_release();
}

uint64_t ChronoMetadataStore.MutableRemoteExtensionStore.removeExtension(with:)(void *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t Strong;
  uint64_t v5;
  uint64_t v6;
  os_unfair_lock_s *v7;
  uint64_t v8;
  unint64_t v9;
  id v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  unint64_t v15;
  unint64_t v16;
  char v17;
  char v18;
  uint64_t result;
  uint64_t v20;

  v2 = v1;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_10;
  v5 = Strong;
  v6 = *(_QWORD *)(Strong + 24);
  v7 = *(os_unfair_lock_s **)(v6 + 16);
  swift_retain();
  os_unfair_lock_lock(v7);
  v8 = *(_QWORD *)(v5 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v6 + 16));
  swift_release();
  swift_release();
  if (!v8)
  {
    __break(1u);
    goto LABEL_9;
  }
  if (!objc_msgSend(a1, sel_isRemote))
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  v9 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](24);
  v20 = v9;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v10 = objc_msgSend(a1, sel_tokenString);
  v11 = sub_1D26CD938();
  v13 = v12;

  swift_bridgeObjectRetain();
  v14 = sub_1D253FC20(v11, v13);
  v16 = v15;
  v18 = v17;
  sub_1D2641480(v14, v15, v17);
  sub_1D253FBE8(v14, v16, v18);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_10:
    result = sub_1D26CE1D8();
    __break(1u);
    return result;
  }
  sub_1D2557230(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  result = swift_release();
  if (!v2)
    return swift_bridgeObjectRelease();
  return result;
}

Swift::Void __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ChronoMetadataStore.MutableRemoteExtensionStore.removeAllExtensions()()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t Strong;
  uint64_t v3;
  uint64_t v4;
  os_unfair_lock_s *v5;
  uint64_t v6;
  unint64_t v7;

  v1 = v0;
  Strong = swift_weakLoadStrong();
  if (!Strong)
    goto LABEL_8;
  v3 = Strong;
  v4 = *(_QWORD *)(Strong + 24);
  v5 = *(os_unfair_lock_s **)(v4 + 16);
  swift_retain();
  os_unfair_lock_lock(v5);
  v6 = *(_QWORD *)(v3 + 64);
  os_unfair_lock_unlock(*(os_unfair_lock_t *)(v4 + 16));
  swift_release();
  swift_release();
  if (!v6)
  {
    __break(1u);
    goto LABEL_8;
  }
  v7 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](13);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
  {
LABEL_8:
    sub_1D26CE1D8();
    __break(1u);
    return;
  }
  sub_1D2557230(v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  if (!v1)
    swift_bridgeObjectRelease();
}

void sub_1D2650688(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1D26506BC(uint64_t a1)
{
  __int128 *v1;
  uint64_t result;
  __int128 v3;
  __int128 v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _UNKNOWN **v8;

  v7 = MEMORY[0x1E0DEDC60];
  v8 = &off_1E93D5718;
  *(_QWORD *)&v6 = a1;
  sub_1D2538F38(&v6, (uint64_t)&v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  result = swift_dynamicCast();
  if ((_DWORD)result)
    v3 = v4;
  else
    v3 = xmmword_1D26D4560;
  *v1 = v3;
  return result;
}

void sub_1D26507D4(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D2650924(a1, a2, a3);
}

void sub_1D26507E0(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1D265080C(uint64_t a1)
{
  uint64_t v2;
  uint64_t v3;
  __int128 v4;
  uint64_t v5;
  _UNKNOWN **v6;

  v5 = MEMORY[0x1E0DEDC60];
  v6 = &off_1E93D5718;
  *(_QWORD *)&v4 = a1;
  sub_1D2538F38(&v4, (uint64_t)&v3);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  if (swift_dynamicCast())
    return v2;
  else
    return 0;
}

void sub_1D2650918(uint64_t a1, uint64_t a2, char a3)
{
  sub_1D2650924(a1, a2, a3);
}

void sub_1D2650924(uint64_t a1, uint64_t a2, char a3)
{
  __asm { BR              X10 }
}

uint64_t sub_1D2650958(uint64_t a1)
{
  int v1;
  uint64_t v2;
  uint64_t v4;
  uint64_t v5;
  __int128 v6;
  uint64_t v7;
  _UNKNOWN **v8;

  v7 = MEMORY[0x1E0DEDC60];
  v8 = &off_1E93D5718;
  *(_QWORD *)&v6 = a1;
  sub_1D2538F38(&v6, (uint64_t)&v5);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  v1 = swift_dynamicCast();
  v2 = v4;
  if (!v1)
    return 0;
  return v2;
}

uint64_t sub_1D2650A68()
{
  uint64_t v0;
  uint64_t v1;
  char *v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t result;
  uint64_t v7;

  v0 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961B18);
  MEMORY[0x1E0C80A78](v0);
  v2 = (char *)&v7 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v3 = sub_1D26CBA24();
  __swift_allocate_value_buffer(v3, qword_1EFC833D8);
  v4 = __swift_project_value_buffer(v3, (uint64_t)qword_1EFC833D8);
  sub_1D26CB9E8();
  v5 = *(_QWORD *)(v3 - 8);
  result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v5 + 48))(v2, 1, v3);
  if ((_DWORD)result != 1)
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v5 + 32))(v4, v2, v3);
  __break(1u);
  return result;
}

uint64_t sub_1D2650B48()
{
  sub_1D26CE460();
  sub_1D26CE484();
  return sub_1D26CE49C();
}

uint64_t sub_1D2650B8C()
{
  return sub_1D26CE484();
}

uint64_t sub_1D2650BB4()
{
  sub_1D26CE460();
  sub_1D26CE484();
  return sub_1D26CE49C();
}

_QWORD *sub_1D2650BF4@<X0>(_QWORD *result@<X0>, char *a2@<X8>)
{
  char v2;
  char v3;

  if (*result == 1)
    v2 = 1;
  else
    v2 = 2;
  if (*result)
    v3 = v2;
  else
    v3 = 0;
  *a2 = v3;
  return result;
}

unint64_t sub_1D2650C14@<X0>(unint64_t *a1@<X0>, _BYTE *a2@<X8>)
{
  unint64_t result;

  result = sub_1D2673B04(*a1);
  *a2 = result;
  return result;
}

uint64_t ChronoMetadataStore.remoteExtensionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.configuredWidgetStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.hostStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.snapshotConfigurationStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.stateReplicatorDeviceMetadataStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.stateReplicatorRecordMetadataStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.stateReplicatorPairingRelationshipStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.remoteActivitySubscriptionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.remoteActivityArchiveBudgetStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.pushSubscriptionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.publicTokenStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.__allocating_init(storage:corruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6;

  v6 = swift_allocObject();
  ChronoMetadataStore.init(storage:corruptionHandler:)(a1, a2, a3);
  return v6;
}

_QWORD *ChronoMetadataStore.init(storage:corruptionHandler:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _QWORD *v3;
  uint64_t v4;
  uint64_t v8;
  uint64_t v9;
  char *v10;
  uint64_t v11;
  _DWORD *v12;
  uint64_t v13;
  char *v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v30;

  v8 = type metadata accessor for SQLDatabase.Storage();
  MEMORY[0x1E0C80A78](v8);
  v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  type metadata accessor for UnfairLock();
  v11 = swift_allocObject();
  v12 = (_DWORD *)swift_slowAlloc();
  *v12 = 0;
  *(_QWORD *)(v11 + 16) = v12;
  v3[16] = v11;
  sub_1D2534120(a1, (uint64_t)v10, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.Storage);
  if (qword_1ED962338 != -1)
    swift_once();
  v13 = (unsigned __int16)word_1ED961B98;
  v14 = (char *)qword_1ED961BA0;
  swift_bridgeObjectRetain();
  sub_1D2549DF0(a2);
  v15 = sub_1D255EE7C((uint64_t)v10, v13, v14, a2, a3);
  if (v4)
  {
    sub_1D25495F4(a2);
    sub_1D25340E4(a1, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.Storage);
    swift_release();
    swift_deallocPartialClassInstance();
  }
  else
  {
    v3[2] = v15;
    type metadata accessor for ChronoMetadataStore.ExtensionStore();
    v16 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[3] = v16;
    type metadata accessor for ChronoMetadataStore.RemoteExtensionStore();
    v17 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[4] = v17;
    type metadata accessor for ChronoMetadataStore.ConfiguredWidgetStore();
    v18 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[5] = v18;
    type metadata accessor for ChronoMetadataStore.HostConfigurationStore();
    v19 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[6] = v19;
    type metadata accessor for ChronoMetadataStore.SnapshotConfigurationStore();
    v20 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[7] = v20;
    type metadata accessor for ChronoMetadataStore.StateReplicatorDeviceMetadataStore();
    v21 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[8] = v21;
    type metadata accessor for ChronoMetadataStore.StateReplicatorRecordMetadataStore();
    v22 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[9] = v22;
    type metadata accessor for ChronoMetadataStore.StateReplicatorPairingRelationshipStore();
    v23 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[10] = v23;
    type metadata accessor for ChronoMetadataStore.RemoteActivitySubscriptionStore();
    v24 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[11] = v24;
    type metadata accessor for ChronoMetadataStore.RemoteActivityArchiveBudgetStore();
    v25 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[12] = v25;
    type metadata accessor for ChronoMetadataStore.PushTokenStore();
    v26 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[13] = v26;
    type metadata accessor for ChronoMetadataStore.PushSubscriptionStore();
    v27 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    v3[14] = v27;
    type metadata accessor for ChronoMetadataStore.PublicTokenStore();
    v28 = swift_allocObject();
    swift_weakInit();
    swift_weakAssign();
    sub_1D25495F4(a2);
    sub_1D25340E4(a1, (uint64_t (*)(_QWORD))type metadata accessor for SQLDatabase.Storage);
    v3[15] = v28;
  }
  return v3;
}

uint64_t ChronoMetadataStore.lastRollbackDate.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_1D2558BE4(a1);
}

uint64_t ChronoMetadataStore.deinit()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;

  v1 = v0;
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  v2 = *(_QWORD *)(v0 + 16);
  v3 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  sub_1D2557230(v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  objc_msgSend(*(id *)(v2 + 32), sel_close);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v1;
}

uint64_t ChronoMetadataStore.__deallocating_deinit()
{
  ChronoMetadataStore.deinit();
  return swift_deallocClassInstance();
}

void sub_1D2651310()
{
  word_1ED961B98 = 2;
  qword_1ED961BA0 = (uint64_t)&unk_1E93D0B28;
}

uint64_t sub_1D2651330()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v0 = MEMORY[0x1E0DEE9D8];
  v4 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](80);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](120);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v1 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](24);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_1D2557230(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26518A4()
{
  uint64_t v0;
  unint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  uint64_t v6;

  v0 = MEMORY[0x1E0DEE9D8];
  v5 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](11);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  v4 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](24);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](199);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v2 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](24);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D2557230(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v2);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2651F44()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v2;
  uint64_t v4;

  v0 = MEMORY[0x1E0DEE9D8];
  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](60);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v2 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](25);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_1D2557230(v2);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26521D0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](25);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D265231C()
{
  return sub_1D25414B0();
}

uint64_t sub_1D2652334()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](60);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D265248C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](47);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26525E8()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;
  unint64_t v4;
  uint64_t v5;

  v0 = MEMORY[0x1E0DEE9D8];
  v4 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](61);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](200);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](470);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    sub_1D2557230(v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v1);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2652D2C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](62);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2652E3C()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](47);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2652F98()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](47);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26530F4()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](111);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2653320()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](98);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2653550()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;
  uint64_t v4;

  v0 = MEMORY[0x1E0DEE9D8];
  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](12);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](226);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    sub_1D2557230(v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D26539A0()
{
  return sub_1D254164C();
}

uint64_t sub_1D26539B8()
{
  uint64_t v0;
  uint64_t v1;
  unint64_t v2;
  unint64_t v3;

  v1 = MEMORY[0x1E0DEE9D8];
  v2 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](12);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = sub_1D253D9E0(v1);
  MEMORY[0x1D8239188](111);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (!v0)
  {
    swift_bridgeObjectRelease();
    sub_1D2557230(v3);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D2653CD0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](37);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2653DE0()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](38);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D2653EF0()
{
  uint64_t v0;
  unint64_t v1;
  unint64_t v3;
  unint64_t v4;
  unint64_t v5;
  unint64_t v6;
  uint64_t v7;

  v0 = MEMORY[0x1E0DEE9D8];
  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](39);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v6 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](41);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v5 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](52);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v4 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](52);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v3 = sub_1D253D9E0(v0);
  MEMORY[0x1D8239188](45);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v7)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1D2557230(v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v4);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D2557230(v3);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

void sub_1D2654408(uint64_t *a1)
{
  sub_1D2673BF0(*a1);
}

uint64_t sub_1D2654420()
{
  return sub_1D25417A4();
}

uint64_t sub_1D2654438()
{
  uint64_t v0;
  unint64_t v1;
  uint64_t result;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](69);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D2557230(v1);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v0)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t sub_1D26545DC()
{
  uint64_t v0;
  uint64_t result;

  result = sub_1D2698210();
  if (!v0)
    return sub_1D25B23A0();
  return result;
}

uint64_t sub_1D265460C()
{
  return sub_1D26A6C30();
}

uint64_t sub_1D2654624(uint64_t *a1, void *a2, _QWORD *a3)
{
  unint64_t v3;
  uint64_t v4;
  unint64_t v5;
  uint64_t v6;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;
  unsigned __int8 *v20;
  BOOL v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  char *v25;
  uint64_t v26;
  unsigned __int8 *v27;
  BOOL v28;
  uint64_t v29;
  uint64_t v30;
  unint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  uint64_t v36;
  uint64_t v37;
  uint64_t v38;
  char *v39;
  void *v40;
  id v41;
  char *v42;
  void (*v43)(char *, char *, uint64_t);
  uint64_t v44;
  char *v45;
  int v46;
  uint64_t v47;
  NSObject *v48;
  os_log_type_t v49;
  uint8_t *v50;
  uint64_t v51;
  uint8_t *v52;
  uint64_t v53;
  uint64_t v54;
  uint64_t v55;
  id v56;
  void *v57;
  id v58;
  __int128 v59;
  _QWORD *v60;
  char isUniquelyReferenced_nonNull_native;
  char *v63;
  uint64_t v64;
  uint64_t v65;
  uint64_t v66;
  uint64_t v67;
  uint64_t v68;
  char *v69;
  char *v70;
  uint64_t v71;
  uint64_t v72;
  id v73;
  _QWORD *v74;
  __int128 v75;
  char *v76;
  uint64_t v77;
  uint64_t v78;
  uint64_t v79;
  __int128 v80;
  uint64_t v81;
  uint64_t v82;
  uint64_t v83;

  v74 = a3;
  v73 = a2;
  v8 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96B1E0);
  MEMORY[0x1E0C80A78](v8);
  v69 = (char *)&v63 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  v83 = sub_1D26CB9DC();
  v77 = *(_QWORD *)(v83 - 8);
  v10 = MEMORY[0x1E0C80A78](v83);
  v63 = (char *)&v63 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  MEMORY[0x1E0C80A78](v10);
  v76 = (char *)&v63 - v12;
  v13 = sub_1D26CB604();
  v71 = *(_QWORD *)(v13 - 8);
  v72 = v13;
  MEMORY[0x1E0C80A78](v13);
  v70 = (char *)&v63 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v15 = *a1;
  v16 = sub_1D26CE0B8();
  v18 = v17;
  v19 = *(_QWORD *)(v15 + 16);
  if (v19)
  {
    v3 = v16;
    v20 = (unsigned __int8 *)(v15 + 64);
    while (1)
    {
      v4 = *((_QWORD *)v20 - 2);
      v5 = *((_QWORD *)v20 - 1);
      v6 = *v20;
      v21 = *((_QWORD *)v20 - 4) == v3 && *((_QWORD *)v20 - 3) == v18;
      if (v21 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v20 += 40;
      if (!--v19)
        goto LABEL_9;
    }
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v4, v5, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D25C69D0(v4, v5, v6);
  sub_1D253FBE8(v4, v5, v6);
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED961BC0);
  swift_dynamicCast();
  v67 = v78;
  v68 = v79;
  v22 = sub_1D26CE0B8();
  v24 = v23;
  v25 = *(char **)(v15 + 16);
  if (v25)
  {
    v26 = v22;
    v27 = (unsigned __int8 *)(v15 + 64);
    while (1)
    {
      v5 = *((_QWORD *)v27 - 2);
      v3 = *((_QWORD *)v27 - 1);
      v6 = *v27;
      v28 = *((_QWORD *)v27 - 4) == v26 && *((_QWORD *)v27 - 3) == v24;
      if (v28 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v27 += 40;
      if (!--v25)
        goto LABEL_18;
    }
  }
  else
  {
LABEL_18:
    swift_bridgeObjectRelease();
    __break(1u);
  }
  swift_bridgeObjectRetain();
  sub_1D2541E98(v5, v3, v6);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1D25C69D0(v5, v3, v6);
  sub_1D253FBE8(v5, v3, v6);
  v29 = swift_dynamicCast();
  v30 = v78;
  v31 = v79;
  *(_QWORD *)&v80 = 40;
  *((_QWORD *)&v80 + 1) = 0xE100000000000000;
  MEMORY[0x1E0C80A78](v29);
  *(&v63 - 2) = (char *)&v80;
  swift_bridgeObjectRetain_n();
  v32 = v75;
  v33 = sub_1D2665820(0x7FFFFFFFFFFFFFFFLL, 1, sub_1D2673EAC, (uint64_t)(&v63 - 4), v30, v31);
  swift_bridgeObjectRelease();
  v34 = *(_QWORD *)(v33 + 16);
  if (!v34)
  {
    __break(1u);
    goto LABEL_33;
  }
  if (v34 == 1)
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  v35 = *(_QWORD *)(v33 + 32);
  v65 = *(_QWORD *)(v33 + 40);
  v66 = v35;
  v36 = *(_QWORD *)(v33 + 56);
  v64 = *(_QWORD *)(v33 + 48);
  v75 = *(_OWORD *)(v33 + 64);
  v37 = *(_QWORD *)(v33 + 80);
  v38 = *(_QWORD *)(v33 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  v80 = v75;
  v81 = v37;
  v82 = v38;
  v39 = v70;
  sub_1D26CB5EC();
  sub_1D2673F00();
  sub_1D26CDF80();
  (*(void (**)(char *, uint64_t))(v71 + 8))(v39, v72);
  swift_bridgeObjectRelease();
  v40 = (void *)sub_1D26CD914();
  swift_bridgeObjectRelease();
  v41 = objc_msgSend(v73, sel_dateFromString_, v40);

  if (v41)
  {
    v42 = v63;
    sub_1D26CB9AC();

    v24 = v77;
    v43 = *(void (**)(char *, char *, uint64_t))(v77 + 32);
    v44 = (uint64_t)v69;
    v45 = v42;
    v6 = v83;
    v43(v69, v45, v83);
    (*(void (**)(uint64_t, _QWORD, uint64_t, uint64_t))(v24 + 56))(v44, 0, 1, v6);
    v46 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48))(v44, 1, v6);
    v25 = v76;
    if (v46 != 1)
    {
      swift_bridgeObjectRelease();
      v43(v25, (char *)v44, v6);
      goto LABEL_30;
    }
  }
  else
  {
    v24 = v77;
    v44 = (uint64_t)v69;
    v6 = v83;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v77 + 56))(v69, 1, 1, v83);
    v25 = v76;
  }
  *(_QWORD *)&v75 = v32;
  sub_1D253703C(v44, &qword_1ED96B1E0);
  sub_1D26CB910();
  if (qword_1ED962330 != -1)
    swift_once();
  v47 = sub_1D26CC09C();
  __swift_project_value_buffer(v47, (uint64_t)qword_1ED977D20);
  swift_bridgeObjectRetain();
  v48 = sub_1D26CC084();
  v49 = sub_1D26CDCEC();
  if (os_log_type_enabled(v48, v49))
  {
    v50 = (uint8_t *)swift_slowAlloc();
    v51 = swift_slowAlloc();
    *(_QWORD *)&v80 = v51;
    *(_DWORD *)v50 = 136446210;
    swift_bridgeObjectRetain();
    v78 = sub_1D2537880(v30, v31, (uint64_t *)&v80);
    v25 = v76;
    v24 = v77;
    sub_1D26CDF50();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_1D2531000, v48, v49, "Error parsing date from version string: %{public}s", v50, 0xCu);
    swift_arrayDestroy();
    MEMORY[0x1D823A5E0](v51, -1, -1);
    v52 = v50;
    v6 = v83;
    MEMORY[0x1D823A5E0](v52, -1, -1);

  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
LABEL_30:
  v53 = MEMORY[0x1D823917C](v66, v65, v64, v36);
  v55 = v54;
  swift_bridgeObjectRelease();
  *(_QWORD *)&v80 = v53;
  *((_QWORD *)&v80 + 1) = v55;
  sub_1D26CDA04();
  if (qword_1ED96D9B8 != -1)
LABEL_34:
    swift_once();
  v56 = (id)qword_1ED96D9A8;
  v57 = (void *)sub_1D26CB940();
  v58 = objc_msgSend(v56, sel_stringFromDate_, v57);

  sub_1D26CD938();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  v59 = v80;
  v60 = v74;
  isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(_QWORD *)&v80 = *v60;
  *v60 = 0x8000000000000000;
  sub_1D266F29C(v59, *((uint64_t *)&v59 + 1), v67, v68, isUniquelyReferenced_nonNull_native);
  *v60 = v80;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (*(uint64_t (**)(char *, uint64_t))(v24 + 8))(v25, v6);
}

uint64_t sub_1D2654E08(uint64_t *a1)
{
  uint64_t v1;
  uint64_t v2;
  uint64_t v3;
  uint64_t v4;
  uint64_t v5;
  unint64_t v6;
  uint64_t v7;
  unint64_t v8;
  unint64_t v9;
  char v10;
  char v11;
  uint64_t v12;
  unint64_t v13;
  unint64_t v14;
  char v15;
  uint64_t result;
  uint64_t v17;

  v3 = *a1;
  v2 = a1[1];
  v5 = a1[2];
  v4 = a1[3];
  v6 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](25);
  v17 = v6;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v7 = sub_1D253FC20(v5, v4);
  v9 = v8;
  v11 = v10;
  sub_1D2641480(v7, v8, v10);
  sub_1D253FBE8(v7, v9, v11);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  swift_bridgeObjectRetain_n();
  v12 = sub_1D253FC20(v3, v2);
  v14 = v13;
  LOBYTE(v7) = v15;
  sub_1D2641480(v12, v13, v15);
  sub_1D253FBE8(v12, v14, v7);
  swift_bridgeObjectRelease();
  sub_1D2557230(v17);
  swift_bridgeObjectRelease();
  result = swift_bridgeObjectRelease();
  if (!v1)
    return swift_bridgeObjectRelease();
  return result;
}

uint64_t ChronoMetadataStore.MutableStore.extensionStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.MutableStore.remoteExtensionsStore.getter()
{
  return swift_retain();
}

uint64_t ChronoMetadataStore.MutableStore.publicTokenStore.getter()
{
  return swift_retain();
}

uint64_t sub_1D265505C()
{
  uint64_t v0;
  NSObject *v1;
  os_log_type_t v2;
  uint8_t *v3;

  if (qword_1ED962330 != -1)
    swift_once();
  v0 = sub_1D26CC09C();
  __swift_project_value_buffer(v0, (uint64_t)qword_1ED977D20);
  v1 = sub_1D26CC084();
  v2 = sub_1D26CDCE0();
  if (os_log_type_enabled(v1, v2))
  {
    v3 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)v3 = 0;
    _os_log_impl(&dword_1D2531000, v1, v2, "MutableStore invalidated.", v3, 2u);
    MEMORY[0x1D823A5E0](v3, -1, -1);
  }

  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  swift_weakAssign();
  return swift_weakAssign();
}

uint64_t ChronoMetadataStore.MutableStore.deinit()
{
  uint64_t v0;

  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t ChronoMetadataStore.MutableStore.__deallocating_deinit()
{
  ChronoMetadataStore.MutableStore.deinit();
  return swift_deallocClassInstance();
}

uint64_t ChronoMetadataStore.DatabaseAccessor.__deallocating_deinit()
{
  swift_weakDestroy();
  return swift_deallocClassInstance();
}

uint64_t sub_1D26552B8()
{
  uint64_t v0;
  uint64_t v1;
  uint64_t v2;
  unint64_t v3;
  uint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unsigned __int8 *v10;
  uint64_t v11;
  uint64_t v12;
  unint64_t v13;
  uint64_t v14;
  BOOL v15;
  uint64_t v17;
  uint64_t v18;
  uint64_t v19;

  v1 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](85);
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (!swift_weakLoadStrong())
    goto LABEL_20;
  v2 = sub_1D2557230(v1);
  if (!v0)
  {
    v17 = v2;
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 = sub_1D253E3D4(MEMORY[0x1E0DEE9D8]);
    if (!*(_QWORD *)(v17 + 16))
    {
      swift_bridgeObjectRelease();
      swift_retain();
      v1 = sub_1D26732A0(v3);
      swift_bridgeObjectRelease();
      swift_release();
      return v1;
    }
    v4 = *(_QWORD *)(v17 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v5 = sub_1D26CE0B8();
    v7 = v6;
    v18 = *(_QWORD *)(v4 + 16);
    if (v18)
    {
      v8 = v5;
      v9 = 0;
      v10 = (unsigned __int8 *)(v4 + 64);
      v19 = v6;
      do
      {
        v11 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          JUMPOUT(0x1D2655C9CLL);
        }
        v12 = *((_QWORD *)v10 - 2);
        v13 = *((_QWORD *)v10 - 1);
        v14 = *v10;
        v15 = *((_QWORD *)v10 - 4) == v8 && *((_QWORD *)v10 - 3) == v7;
        if (v15 || (sub_1D26CE3D0() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1D2541E98(v12, v13, v14);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __asm { BR              X8 }
        }
        v10 += 40;
        ++v9;
        v7 = v19;
      }
      while (v11 != v18);
    }
    swift_bridgeObjectRelease();
LABEL_20:
    sub_1D26CE1D8();
    __break(1u);
    JUMPOUT(0x1D2655CFCLL);
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  return v1;
}

uint64_t sub_1D2655D68@<X0>(uint64_t a1@<X8>)
{
  uint64_t v1;
  uint64_t v2;
  unint64_t v4;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  unint64_t v9;
  unint64_t v10;
  char v11;
  char v12;
  uint64_t v13;
  uint64_t result;
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;

  v2 = v1;
  v4 = sub_1D253D9E0(MEMORY[0x1E0DEE9D8]);
  MEMORY[0x1D8239188](98);
  v18 = v4;
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v5 = sub_1D26CBD3C();
  v7 = v6;
  swift_bridgeObjectRetain();
  v8 = sub_1D253FC20(v5, v7);
  v10 = v9;
  v12 = v11;
  sub_1D2641480(v8, v9, v11);
  sub_1D253FBE8(v8, v10, v12);
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  sub_1D26CE0B8();
  sub_1D26CDA04();
  swift_bridgeObjectRelease();
  sub_1D26CDA04();
  if (swift_weakLoadStrong())
  {
    v13 = sub_1D2557230(v18);
    if (v2)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_release();
    }
    else
    {
      v15 = v13;
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(_QWORD *)(v15 + 16))
      {
        sub_1D265625C(v15, a1);
        swift_bridgeObjectRelease();
        v16 = type metadata accessor for ExtensionMetadata();
        return (*(uint64_t (**)(uint64_t, _QWORD, uint64_t, uint64_t))(*(_QWORD *)(v16 - 8) + 56))(a1, 0, 1, v16);
      }
      else
      {
        v17 = type metadata accessor for ExtensionMetadata();
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(_QWORD *)(v17 - 8) + 56))(a1, 1, 1, v17);
        return swift_bridgeObjectRelease();
      }
    }
  }
  else
  {
    result = sub_1D26CE1D8();
    __break(1u);
  }
  return result;
}

int *sub_1D265625C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2;
  unint64_t v3;
  unint64_t v4;
  unsigned __int8 *v5;
  uint64_t v7;
  unsigned __int8 *v8;
  unsigned __int8 *v9;
  uint64_t v10;
  unsigned __int8 *v11;
  unsigned __int8 *v12;
  uint64_t v13;
  unsigned __int8 *v14;
  uint64_t v15;
  uint64_t v17;
  uint64_t v18;
  unsigned __int8 *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  uint64_t v23;
  uint64_t v24;
  _BYTE *v25;
  BOOL v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  unsigned __int8 *v30;
  uint64_t v31;
  uint64_t v32;
  uint64_t v33;
  uint64_t v34;
  uint64_t v35;
  char *v36;
  char v37;
  BOOL v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  unsigned __int8 *v42;
  uint64_t v43;
  char v44;
  unsigned __int8 *v45;
  _QWORD *v46;
  uint64_t v47;
  uint64_t v48;
  uint64_t v49;
  uint64_t v50;
  uint64_t v51;
  uint64_t v52;
  uint64_t v53;
  unsigned __int8 *v54;
  uint64_t v55;
  uint64_t v56;
  unint64_t v57;
  uint64_t v58;
  BOOL v59;
  uint64_t v60;
  unint64_t v61;
  unint64_t v62;
  uint64_t v63;
  uint64_t i;
  unint64_t v65;
  unsigned __int8 *v66;
  _QWORD *v67;
  unsigned __int8 *v68;
  uint64_t v69;
  uint64_t v70;
  uint64_t v71;
  uint64_t v72;
  uint64_t v73;
  unsigned __int8 *v74;
  uint64_t v75;
  uint64_t v76;
  unint64_t v77;
  uint64_t v78;
  BOOL v79;
  uint64_t v80;
  unint64_t v81;
  unint64_t v82;
  uint64_t v83;
  uint64_t j;
  unint64_t v85;
  unsigned __int8 *v86;
  _QWORD *v87;
  unsigned __int8 *v88;
  uint64_t v89;
  uint64_t v90;
  uint64_t v91;
  uint64_t v92;
  uint64_t v93;
  unsigned __int8 *v94;
  uint64_t v95;
  uint64_t v96;
  unint64_t v97;
  uint64_t v98;
  BOOL v99;
  uint64_t v100;
  unint64_t v101;
  unint64_t v102;
  uint64_t v103;
  uint64_t v104;
  uint64_t v105;
  uint64_t v106;
  unint64_t v107;
  uint64_t v108;
  uint64_t v109;
  int *result;
  _QWORD *v111;
  _QWORD *v112;
  uint64_t v113;
  uint64_t v114;
  _QWORD v115[2];
  __int128 v116;
  uint64_t v117;
  uint64_t v118;
  uint64_t v119;
  uint64_t v120;
  uint64_t v121;
  char *v122;
  __int128 v123;
  uint64_t v124;
  uint64_t v125;
  uint64_t v126;
  uint64_t v127;
  uint64_t v128;
  uint64_t v129;
  unsigned __int8 *v130;
  _QWORD *v131;
  _QWORD *v132;
  unsigned __int8 *v133;
  unsigned __int8 *v134;
  uint64_t v135;
  uint64_t v136;
  uint64_t v137;
  uint64_t v138;

  v119 = a2;
  v121 = __swift_instantiateConcreteTypeFromMangledName(&qword_1ED9633A0);
  v120 = *(_QWORD *)(v121 - 8);
  MEMORY[0x1E0C80A78](v121);
  v122 = (char *)v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  v8 = *(unsigned __int8 **)(a1 + 16);
  if (v8)
  {
    v129 = a1;
    v130 = v8;
    v9 = *(unsigned __int8 **)(a1 + 32);
    v124 = a1 + 32;
    swift_bridgeObjectRetain();
    v10 = sub_1D26CE0B8();
    v12 = v11;
    v13 = *((_QWORD *)v9 + 2);
    if (v13)
    {
      v2 = v10;
      v134 = v9;
      v14 = v9 + 64;
      while (1)
      {
        v5 = (unsigned __int8 *)*((_QWORD *)v14 - 3);
        v15 = *((_QWORD *)v14 - 2);
        v3 = *((_QWORD *)v14 - 1);
        v4 = *v14;
        if (*((_QWORD *)v14 - 4) == v2 && v5 == v12)
          break;
        if ((sub_1D26CE3D0() & 1) != 0)
          goto LABEL_13;
        v14 += 40;
        if (!--v13)
          goto LABEL_10;
      }
      LOBYTE(v5) = (_BYTE)v12;
LABEL_13:
      swift_bridgeObjectRetain();
      sub_1D2541E98(v15, v3, v4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1D26507E0(v15, v3, v4);
      v135 = v17;
      v2 = v18;
      sub_1D253FBE8(v15, v3, v4);
      v19 = v134;
      swift_bridgeObjectRelease();
      if (v2)
      {
        swift_bridgeObjectRetain();
        v20 = sub_1D26CE0B8();
        v22 = v21;
        v23 = *((_QWORD *)v19 + 2);
        if (v23)
        {
          v24 = v20;
          v25 = v19 + 64;
          do
          {
            v3 = *((_QWORD *)v25 - 2);
            v4 = *((_QWORD *)v25 - 1);
            LOBYTE(v5) = *v25;
            v26 = *((_QWORD *)v25 - 4) == v24 && *((_QWORD *)v25 - 3) == v22;
            if (v26 || (sub_1D26CE3D0() & 1) != 0)
              goto LABEL_24;
            v25 += 40;
            --v23;
          }
          while (v23);
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
    }
    else
    {
LABEL_10:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
  }
  do
  {
LABEL_23:
    sub_1D26CE1D8();
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    sub_1D2541E98(v3, v4, (char)v5);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v3, v4, (char)v5);
    v126 = v27;
    v29 = v28;
    sub_1D253FBE8(v3, v4, (char)v5);
    v30 = v134;
    swift_bridgeObjectRelease();
    v128 = v29;
  }
  while (!v29);
  swift_bridgeObjectRetain();
  v31 = sub_1D26CE0B8();
  v33 = v32;
  v34 = *((_QWORD *)v30 + 2);
  if (v34)
  {
    v35 = v31;
    v36 = (char *)(v30 + 64);
    while (1)
    {
      v3 = *((_QWORD *)v36 - 2);
      v4 = *((_QWORD *)v36 - 1);
      v37 = *v36;
      v38 = *((_QWORD *)v36 - 4) == v35 && *((_QWORD *)v36 - 3) == v33;
      if (v38 || (sub_1D26CE3D0() & 1) != 0)
        break;
      v36 += 40;
      if (!--v34)
        goto LABEL_33;
    }
    swift_bridgeObjectRetain();
    sub_1D2541E98(v3, v4, v37);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1D26507E0(v3, v4, v37);
    v125 = v39;
    v127 = v40;
    sub_1D253FBE8(v3, v4, v37);
  }
  else
  {
LABEL_33:
    swift_bridgeObjectRelease();
    v125 = 0;
    v127 = 0;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  v41 = 0;
  v5 = v130;
  do
  {
    v42 = (unsigned __int8 *)(v41 + 1);
    if (__OFADD__(v41, 1))
    {
      __break(1u);
LABEL_114:
      __break(1u);
LABEL_115:
      __break(1u);
LABEL_116:
      __break(1u);
      JUMPOUT(0x1D26580F8);
    }
    v137 = *(_QWORD *)(v129 + 8 * v41 + 32);
    swift_bridgeObjectRetain();
    v43 = v136;
    v44 = sub_1D2658268(&v137, v135, v2, v126, v128, v125, v127);
    v136 = v43;
    swift_bridgeObjectRelease();
    if ((v44 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      __break(1u);
      goto LABEL_23;
    }
    ++v41;
  }
  while (v42 != v5);
  swift_bridgeObjectRelease();
  __swift_instantiateConcreteTypeFromMangledName(&qword_1ED96FE70);
  sub_1D2536488(&qword_1ED963308, &qword_1ED96FE70, MEMORY[0x1E0D0F968]);
  sub_1D2536488(&qword_1ED963330, &qword_1ED96FE70, MEMORY[0x1E0D0F990]);
  sub_1D2536488(&qword_1ED963310, &qword_1ED96FE70, MEMORY[0x1E0D0F970]);
  sub_1D2536488(&qword_1ED963318, &qword_1ED96FE70, MEMORY[0x1E0D0F978]);
  sub_1D26CBD30();
  swift_bridgeObjectRetain();
  v45 = 0;
  v46 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v116 = xmmword_1D26D5A90;
  v118 = MEMORY[0x1E0DEE9B8] + 8;
  v123 = xmmword_1D26D4560;
  v47 = v124;
  do
  {
    if (__OFADD__(v45, 1))
      goto LABEL_114;
    v134 = v45 + 1;
    v48 = *(_QWORD *)(v47 + 8 * (_QWORD)v45);
    swift_bridgeObjectRetain();
    v49 = sub_1D26CE0B8();
    v51 = v50;
    v52 = *(_QWORD *)(v48 + 16);
    if (v52)
    {
      v53 = v49;
      v131 = (_QWORD *)v48;
      v132 = v46;
      v54 = (unsigned __int8 *)(v48 + 64);
      v133 = v54;
      v135 = v52;
      v55 = v52;
      do
      {
        v56 = *((_QWORD *)v54 - 2);
        v57 = *((_QWORD *)v54 - 1);
        v58 = *v54;
        v59 = *((_QWORD *)v54 - 4) == v53 && *((_QWORD *)v54 - 3) == v51;
        if (v59 || (sub_1D26CE3D0() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1D2541E98(v56, v57, v58);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __asm { BR              X8 }
        }
        v54 += 40;
        --v55;
      }
      while (v55);
      swift_bridgeObjectRelease();
      v5 = v130;
      v46 = v132;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v138 = 0;
    swift_bridgeObjectRelease();
    v60 = v138;
    if (v138)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v46 = sub_1D25622F8(0, v46[2] + 1, 1, v46);
      v62 = v46[2];
      v61 = v46[3];
      if (v62 >= v61 >> 1)
        v46 = sub_1D25622F8((_QWORD *)(v61 > 1), v62 + 1, 1, v46);
      v46[2] = v62 + 1;
      v46[v62 + 4] = v60;
    }
    v45 = v134;
  }
  while (v134 != v5);
  swift_bridgeObjectRelease();
  v137 = MEMORY[0x1E0DEE9D8];
  v63 = v46[2];
  if (v63)
  {
    swift_bridgeObjectRetain();
    for (i = 0; i != v63; ++i)
    {
      v65 = swift_bridgeObjectRetain();
      sub_1D25F6A30(v65);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v118 = v137;
  swift_bridgeObjectRetain();
  v66 = 0;
  v67 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v117 = MEMORY[0x1E0DEE9B8] + 8;
  do
  {
    if (__OFADD__(v66, 1))
      goto LABEL_115;
    v133 = v66 + 1;
    v68 = *(unsigned __int8 **)(v47 + 8 * (_QWORD)v66);
    swift_bridgeObjectRetain();
    v69 = sub_1D26CE0B8();
    v71 = v70;
    v72 = *((_QWORD *)v68 + 2);
    v134 = v68;
    if (v72)
    {
      v73 = v69;
      v74 = v68 + 64;
      v131 = v67;
      v132 = v68 + 64;
      v135 = v72;
      v75 = v72;
      do
      {
        v76 = *((_QWORD *)v74 - 2);
        v77 = *((_QWORD *)v74 - 1);
        v78 = *v74;
        v79 = *((_QWORD *)v74 - 4) == v73 && *((_QWORD *)v74 - 3) == v71;
        if (v79 || (sub_1D26CE3D0() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1D2541E98(v76, v77, v78);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __asm { BR              X8 }
        }
        v74 += 40;
        --v75;
      }
      while (v75);
      swift_bridgeObjectRelease();
      v5 = v130;
      v67 = v131;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v138 = 0;
    swift_bridgeObjectRelease();
    v80 = v138;
    if (v138)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v67 = sub_1D25621CC(0, v67[2] + 1, 1, v67);
      v82 = v67[2];
      v81 = v67[3];
      if (v82 >= v81 >> 1)
        v67 = sub_1D25621CC((_QWORD *)(v81 > 1), v82 + 1, 1, v67);
      v67[2] = v82 + 1;
      v67[v82 + 4] = v80;
    }
    v66 = v133;
  }
  while (v133 != v5);
  swift_bridgeObjectRelease();
  v137 = MEMORY[0x1E0DEE9D8];
  v83 = v67[2];
  if (v83)
  {
    swift_bridgeObjectRetain();
    for (j = 0; j != v83; ++j)
    {
      v85 = swift_bridgeObjectRetain();
      sub_1D25F6BC8(v85);
    }
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  v117 = v137;
  swift_bridgeObjectRetain();
  v86 = 0;
  v87 = (_QWORD *)MEMORY[0x1E0DEE9D8];
  v115[1] = MEMORY[0x1E0DEE9B8] + 8;
  do
  {
    if (__OFADD__(v86, 1))
      goto LABEL_116;
    v133 = v86 + 1;
    v88 = *(unsigned __int8 **)(v47 + 8 * (_QWORD)v86);
    swift_bridgeObjectRetain();
    v89 = sub_1D26CE0B8();
    v91 = v90;
    v92 = *((_QWORD *)v88 + 2);
    v134 = v88;
    if (v92)
    {
      v93 = v89;
      v94 = v88 + 64;
      v131 = v87;
      v132 = v88 + 64;
      v135 = v92;
      v95 = v92;
      do
      {
        v96 = *((_QWORD *)v94 - 2);
        v97 = *((_QWORD *)v94 - 1);
        v98 = *v94;
        v99 = *((_QWORD *)v94 - 4) == v93 && *((_QWORD *)v94 - 3) == v91;
        if (v99 || (sub_1D26CE3D0() & 1) != 0)
        {
          swift_bridgeObjectRetain();
          sub_1D2541E98(v96, v97, v98);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          __asm { BR              X8 }
        }
        v94 += 40;
        --v95;
      }
      while (v95);
      swift_bridgeObjectRelease();
      v47 = v124;
      v87 = v131;
    }
    else
    {
      swift_bridgeObjectRelease();
    }
    v138 = 0;
    swift_bridgeObjectRelease();
    v100 = v138;
    if (v138)
    {
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        v87 = sub_1D25621B8(0, v87[2] + 1, 1, v87);
      v102 = v87[2];
      v101 = v87[3];
      if (v102 >= v101 >> 1)
        v87 = sub_1D25621B8((_QWORD *)(v101 > 1), v102 + 1, 1, v87);
      v87[2] = v102 + 1;
      v87[v102 + 4] = v100;
    }
    v86 = v133;
  }
  while (v133 != v5);
  swift_bridgeObjectRelease();
  v137 = MEMORY[0x1E0DEE9D8];
  v103 = v87[2];
  if (v103)
  {
    swift_bridgeObjectRetain();
    v104 = 0;
    v105 = v118;
    v106 = v117;
    do
    {
      ++v104;
      v107 = swift_bridgeObjectRetain();
      sub_1D25F6BBC(v107);
    }
    while (v103 != v104);
    swift_bridgeObjectRelease();
  }
  else
  {
    v105 = v118;
    v106 = v117;
  }
  swift_bridgeObjectRelease();
  v108 = v137;
  v109 = v119;
  (*(void (**)(uint64_t, char *, uint64_t))(v120 + 32))(v119, v122, v121);
  result = (int *)type metadata accessor for ExtensionMetadata();
  v111 = (_QWORD *)(v109 + result[8]);
  v112 = (_QWORD *)(v109 + result[5]);
  v113 = v128;
  *v112 = v126;
  v112[1] = v113;
  v114 = v127;
  *v111 = v125;
  v111[1] = v114;
  *(_QWORD *)(v109 + result[6]) = v105;
  *(_QWORD *)(v109 + result[9]) = v108;
  *(_QWORD *)(v109 + result[7]) = v106;
  return result;
}

